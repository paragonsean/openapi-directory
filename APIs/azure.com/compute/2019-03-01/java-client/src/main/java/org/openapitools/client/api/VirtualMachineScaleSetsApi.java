/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.RecoveryWalkResponse;
import org.openapitools.client.model.VMScaleSetConvertToSinglePlacementGroupInput;
import org.openapitools.client.model.VirtualMachineScaleSet;
import org.openapitools.client.model.VirtualMachineScaleSetInstanceView;
import org.openapitools.client.model.VirtualMachineScaleSetListOSUpgradeHistory;
import org.openapitools.client.model.VirtualMachineScaleSetListResult;
import org.openapitools.client.model.VirtualMachineScaleSetListSkusResult;
import org.openapitools.client.model.VirtualMachineScaleSetListWithLinkResult;
import org.openapitools.client.model.VirtualMachineScaleSetReimageParameters;
import org.openapitools.client.model.VirtualMachineScaleSetUpdate;
import org.openapitools.client.model.VirtualMachineScaleSetVMInstanceIDs;
import org.openapitools.client.model.VirtualMachineScaleSetVMInstanceRequiredIDs;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VirtualMachineScaleSetsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VirtualMachineScaleSetsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VirtualMachineScaleSetsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for virtualMachineScaleSetsConvertToSinglePlacementGroup
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the virtual machine scale set to create or update. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters The input object for ConvertToSinglePlacementGroup API. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsConvertToSinglePlacementGroupCall(String resourceGroupName, String vmScaleSetName, String subscriptionId, VMScaleSetConvertToSinglePlacementGroupInput parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/convertToSinglePlacementGroup"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsConvertToSinglePlacementGroupValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String subscriptionId, VMScaleSetConvertToSinglePlacementGroupInput parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsConvertToSinglePlacementGroup(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsConvertToSinglePlacementGroup(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsConvertToSinglePlacementGroup(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling virtualMachineScaleSetsConvertToSinglePlacementGroup(Async)");
        }

        return virtualMachineScaleSetsConvertToSinglePlacementGroupCall(resourceGroupName, vmScaleSetName, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Converts SinglePlacementGroup property to false for a existing virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the virtual machine scale set to create or update. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters The input object for ConvertToSinglePlacementGroup API. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineScaleSetsConvertToSinglePlacementGroup(String resourceGroupName, String vmScaleSetName, String subscriptionId, VMScaleSetConvertToSinglePlacementGroupInput parameters) throws ApiException {
        virtualMachineScaleSetsConvertToSinglePlacementGroupWithHttpInfo(resourceGroupName, vmScaleSetName, subscriptionId, parameters);
    }

    /**
     * 
     * Converts SinglePlacementGroup property to false for a existing virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the virtual machine scale set to create or update. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters The input object for ConvertToSinglePlacementGroup API. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineScaleSetsConvertToSinglePlacementGroupWithHttpInfo(String resourceGroupName, String vmScaleSetName, String subscriptionId, VMScaleSetConvertToSinglePlacementGroupInput parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsConvertToSinglePlacementGroupValidateBeforeCall(resourceGroupName, vmScaleSetName, subscriptionId, parameters, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Converts SinglePlacementGroup property to false for a existing virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the virtual machine scale set to create or update. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters The input object for ConvertToSinglePlacementGroup API. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsConvertToSinglePlacementGroupAsync(String resourceGroupName, String vmScaleSetName, String subscriptionId, VMScaleSetConvertToSinglePlacementGroupInput parameters, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsConvertToSinglePlacementGroupValidateBeforeCall(resourceGroupName, vmScaleSetName, subscriptionId, parameters, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsCreateOrUpdate
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set to create or update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters The scale set object. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsCreateOrUpdateCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSet parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsCreateOrUpdateValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSet parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling virtualMachineScaleSetsCreateOrUpdate(Async)");
        }

        return virtualMachineScaleSetsCreateOrUpdateCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Create or update a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set to create or update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters The scale set object. (required)
     * @return VirtualMachineScaleSet
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public VirtualMachineScaleSet virtualMachineScaleSetsCreateOrUpdate(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSet parameters) throws ApiException {
        ApiResponse<VirtualMachineScaleSet> localVarResp = virtualMachineScaleSetsCreateOrUpdateWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Create or update a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set to create or update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters The scale set object. (required)
     * @return ApiResponse&lt;VirtualMachineScaleSet&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualMachineScaleSet> virtualMachineScaleSetsCreateOrUpdateWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSet parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsCreateOrUpdateValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSet>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create or update a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set to create or update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters The scale set object. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsCreateOrUpdateAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSet parameters, final ApiCallback<VirtualMachineScaleSet> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsCreateOrUpdateValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSet>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsDeallocate
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsDeallocateCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = vmInstanceIDs;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsDeallocateValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsDeallocate(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsDeallocate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsDeallocate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsDeallocate(Async)");
        }

        return virtualMachineScaleSetsDeallocateCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);

    }

    /**
     * 
     * Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineScaleSetsDeallocate(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        virtualMachineScaleSetsDeallocateWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
    }

    /**
     * 
     * Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineScaleSetsDeallocateWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsDeallocateValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsDeallocateAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsDeallocateValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsDelete
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsDeleteCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsDeleteValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsDelete(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsDelete(Async)");
        }

        return virtualMachineScaleSetsDeleteCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Deletes a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineScaleSetsDelete(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        virtualMachineScaleSetsDeleteWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
    }

    /**
     * 
     * Deletes a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineScaleSetsDeleteWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsDeleteValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsDeleteAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsDeleteValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsDeleteInstances
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsDeleteInstancesCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = vmInstanceIDs;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsDeleteInstancesValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsDeleteInstances(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsDeleteInstances(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsDeleteInstances(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsDeleteInstances(Async)");
        }

        // verify the required parameter 'vmInstanceIDs' is set
        if (vmInstanceIDs == null) {
            throw new ApiException("Missing the required parameter 'vmInstanceIDs' when calling virtualMachineScaleSetsDeleteInstances(Async)");
        }

        return virtualMachineScaleSetsDeleteInstancesCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);

    }

    /**
     * 
     * Deletes virtual machines in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineScaleSetsDeleteInstances(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs) throws ApiException {
        virtualMachineScaleSetsDeleteInstancesWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
    }

    /**
     * 
     * Deletes virtual machines in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineScaleSetsDeleteInstancesWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsDeleteInstancesValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes virtual machines in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsDeleteInstancesAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsDeleteInstancesValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalk
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param platformUpdateDomain The platform update domain for which a manual recovery walk is requested (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, Integer platformUpdateDomain, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/forceRecoveryServiceFabricPlatformUpdateDomainWalk"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (platformUpdateDomain != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("platformUpdateDomain", platformUpdateDomain));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, Integer platformUpdateDomain, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalk(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalk(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalk(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalk(Async)");
        }

        // verify the required parameter 'platformUpdateDomain' is set
        if (platformUpdateDomain == null) {
            throw new ApiException("Missing the required parameter 'platformUpdateDomain' when calling virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalk(Async)");
        }

        return virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, platformUpdateDomain, _callback);

    }

    /**
     * 
     * Manual platform update domain walk to update virtual machines in a service fabric virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param platformUpdateDomain The platform update domain for which a manual recovery walk is requested (required)
     * @return RecoveryWalkResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public RecoveryWalkResponse virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalk(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, Integer platformUpdateDomain) throws ApiException {
        ApiResponse<RecoveryWalkResponse> localVarResp = virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, platformUpdateDomain);
        return localVarResp.getData();
    }

    /**
     * 
     * Manual platform update domain walk to update virtual machines in a service fabric virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param platformUpdateDomain The platform update domain for which a manual recovery walk is requested (required)
     * @return ApiResponse&lt;RecoveryWalkResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RecoveryWalkResponse> virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, Integer platformUpdateDomain) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, platformUpdateDomain, null);
        Type localVarReturnType = new TypeToken<RecoveryWalkResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Manual platform update domain walk to update virtual machines in a service fabric virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param platformUpdateDomain The platform update domain for which a manual recovery walk is requested (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, Integer platformUpdateDomain, final ApiCallback<RecoveryWalkResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, platformUpdateDomain, _callback);
        Type localVarReturnType = new TypeToken<RecoveryWalkResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsGet
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsGetCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsGetValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsGet(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsGet(Async)");
        }

        return virtualMachineScaleSetsGetCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Display information about a virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return VirtualMachineScaleSet
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public VirtualMachineScaleSet virtualMachineScaleSetsGet(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<VirtualMachineScaleSet> localVarResp = virtualMachineScaleSetsGetWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Display information about a virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;VirtualMachineScaleSet&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualMachineScaleSet> virtualMachineScaleSetsGetWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsGetValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSet>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Display information about a virtual machine scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsGetAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback<VirtualMachineScaleSet> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsGetValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSet>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsGetInstanceView
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsGetInstanceViewCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/instanceView"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsGetInstanceViewValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsGetInstanceView(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsGetInstanceView(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsGetInstanceView(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsGetInstanceView(Async)");
        }

        return virtualMachineScaleSetsGetInstanceViewCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets the status of a VM scale set instance.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return VirtualMachineScaleSetInstanceView
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public VirtualMachineScaleSetInstanceView virtualMachineScaleSetsGetInstanceView(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<VirtualMachineScaleSetInstanceView> localVarResp = virtualMachineScaleSetsGetInstanceViewWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the status of a VM scale set instance.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;VirtualMachineScaleSetInstanceView&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualMachineScaleSetInstanceView> virtualMachineScaleSetsGetInstanceViewWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsGetInstanceViewValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetInstanceView>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the status of a VM scale set instance.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsGetInstanceViewAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback<VirtualMachineScaleSetInstanceView> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsGetInstanceViewValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetInstanceView>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsGetOSUpgradeHistory
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsGetOSUpgradeHistoryCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osUpgradeHistory"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsGetOSUpgradeHistoryValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsGetOSUpgradeHistory(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsGetOSUpgradeHistory(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsGetOSUpgradeHistory(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsGetOSUpgradeHistory(Async)");
        }

        return virtualMachineScaleSetsGetOSUpgradeHistoryCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets list of OS upgrades on a VM scale set instance.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return VirtualMachineScaleSetListOSUpgradeHistory
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public VirtualMachineScaleSetListOSUpgradeHistory virtualMachineScaleSetsGetOSUpgradeHistory(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<VirtualMachineScaleSetListOSUpgradeHistory> localVarResp = virtualMachineScaleSetsGetOSUpgradeHistoryWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets list of OS upgrades on a VM scale set instance.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;VirtualMachineScaleSetListOSUpgradeHistory&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualMachineScaleSetListOSUpgradeHistory> virtualMachineScaleSetsGetOSUpgradeHistoryWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsGetOSUpgradeHistoryValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetListOSUpgradeHistory>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets list of OS upgrades on a VM scale set instance.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsGetOSUpgradeHistoryAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback<VirtualMachineScaleSetListOSUpgradeHistory> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsGetOSUpgradeHistoryValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetListOSUpgradeHistory>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsList
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsListCall(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsListValidateBeforeCall(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsList(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsList(Async)");
        }

        return virtualMachineScaleSetsListCall(resourceGroupName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets a list of all VM scale sets under a resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return VirtualMachineScaleSetListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public VirtualMachineScaleSetListResult virtualMachineScaleSetsList(String resourceGroupName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<VirtualMachineScaleSetListResult> localVarResp = virtualMachineScaleSetsListWithHttpInfo(resourceGroupName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets a list of all VM scale sets under a resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;VirtualMachineScaleSetListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualMachineScaleSetListResult> virtualMachineScaleSetsListWithHttpInfo(String resourceGroupName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsListValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets a list of all VM scale sets under a resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsListAsync(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback<VirtualMachineScaleSetListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsListValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsListAll
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsListAllCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachineScaleSets"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsListAllValidateBeforeCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsListAll(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsListAll(Async)");
        }

        return virtualMachineScaleSetsListAllCall(apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink is null to fetch all the VM Scale Sets.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return VirtualMachineScaleSetListWithLinkResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public VirtualMachineScaleSetListWithLinkResult virtualMachineScaleSetsListAll(String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<VirtualMachineScaleSetListWithLinkResult> localVarResp = virtualMachineScaleSetsListAllWithHttpInfo(apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink is null to fetch all the VM Scale Sets.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;VirtualMachineScaleSetListWithLinkResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualMachineScaleSetListWithLinkResult> virtualMachineScaleSetsListAllWithHttpInfo(String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsListAllValidateBeforeCall(apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetListWithLinkResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink is null to fetch all the VM Scale Sets.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsListAllAsync(String apiVersion, String subscriptionId, final ApiCallback<VirtualMachineScaleSetListWithLinkResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsListAllValidateBeforeCall(apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetListWithLinkResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsListSkus
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsListSkusCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/skus"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsListSkusValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsListSkus(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsListSkus(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsListSkus(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsListSkus(Async)");
        }

        return virtualMachineScaleSetsListSkusCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return VirtualMachineScaleSetListSkusResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public VirtualMachineScaleSetListSkusResult virtualMachineScaleSetsListSkus(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<VirtualMachineScaleSetListSkusResult> localVarResp = virtualMachineScaleSetsListSkusWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;VirtualMachineScaleSetListSkusResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualMachineScaleSetListSkusResult> virtualMachineScaleSetsListSkusWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsListSkusValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetListSkusResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsListSkusAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback<VirtualMachineScaleSetListSkusResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsListSkusValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetListSkusResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsPerformMaintenance
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsPerformMaintenanceCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = vmInstanceIDs;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/performMaintenance"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsPerformMaintenanceValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsPerformMaintenance(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsPerformMaintenance(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsPerformMaintenance(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsPerformMaintenance(Async)");
        }

        return virtualMachineScaleSetsPerformMaintenanceCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);

    }

    /**
     * 
     * Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineScaleSetsPerformMaintenance(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        virtualMachineScaleSetsPerformMaintenanceWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
    }

    /**
     * 
     * Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineScaleSetsPerformMaintenanceWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsPerformMaintenanceValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsPerformMaintenanceAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsPerformMaintenanceValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsPowerOff
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param skipShutdown The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified (optional, default to false)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsPowerOffCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, Boolean skipShutdown, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = vmInstanceIDs;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (skipShutdown != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("skipShutdown", skipShutdown));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsPowerOffValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, Boolean skipShutdown, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsPowerOff(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsPowerOff(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsPowerOff(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsPowerOff(Async)");
        }

        return virtualMachineScaleSetsPowerOffCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, skipShutdown, vmInstanceIDs, _callback);

    }

    /**
     * 
     * Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param skipShutdown The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified (optional, default to false)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineScaleSetsPowerOff(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, Boolean skipShutdown, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        virtualMachineScaleSetsPowerOffWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, skipShutdown, vmInstanceIDs);
    }

    /**
     * 
     * Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param skipShutdown The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified (optional, default to false)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineScaleSetsPowerOffWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, Boolean skipShutdown, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsPowerOffValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, skipShutdown, vmInstanceIDs, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param skipShutdown The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified (optional, default to false)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsPowerOffAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, Boolean skipShutdown, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsPowerOffValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, skipShutdown, vmInstanceIDs, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsRedeploy
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsRedeployCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = vmInstanceIDs;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/redeploy"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsRedeployValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsRedeploy(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsRedeploy(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsRedeploy(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsRedeploy(Async)");
        }

        return virtualMachineScaleSetsRedeployCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);

    }

    /**
     * 
     * Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineScaleSetsRedeploy(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        virtualMachineScaleSetsRedeployWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
    }

    /**
     * 
     * Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineScaleSetsRedeployWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsRedeployValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsRedeployAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsRedeployValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsReimage
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmScaleSetReimageInput Parameters for Reimaging VM ScaleSet. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsReimageCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = vmScaleSetReimageInput;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsReimageValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsReimage(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsReimage(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsReimage(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsReimage(Async)");
        }

        return virtualMachineScaleSetsReimageCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmScaleSetReimageInput, _callback);

    }

    /**
     * 
     * Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don&#39;t have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmScaleSetReimageInput Parameters for Reimaging VM ScaleSet. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineScaleSetsReimage(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput) throws ApiException {
        virtualMachineScaleSetsReimageWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmScaleSetReimageInput);
    }

    /**
     * 
     * Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don&#39;t have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmScaleSetReimageInput Parameters for Reimaging VM ScaleSet. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineScaleSetsReimageWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsReimageValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmScaleSetReimageInput, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don&#39;t have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmScaleSetReimageInput Parameters for Reimaging VM ScaleSet. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsReimageAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsReimageValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmScaleSetReimageInput, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsReimageAll
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsReimageAllCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = vmInstanceIDs;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimageall"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsReimageAllValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsReimageAll(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsReimageAll(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsReimageAll(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsReimageAll(Async)");
        }

        return virtualMachineScaleSetsReimageAllCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);

    }

    /**
     * 
     * Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineScaleSetsReimageAll(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        virtualMachineScaleSetsReimageAllWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
    }

    /**
     * 
     * Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineScaleSetsReimageAllWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsReimageAllValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsReimageAllAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsReimageAllValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsRestart
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsRestartCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = vmInstanceIDs;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsRestartValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsRestart(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsRestart(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsRestart(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsRestart(Async)");
        }

        return virtualMachineScaleSetsRestartCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);

    }

    /**
     * 
     * Restarts one or more virtual machines in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineScaleSetsRestart(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        virtualMachineScaleSetsRestartWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
    }

    /**
     * 
     * Restarts one or more virtual machines in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineScaleSetsRestartWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsRestartValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Restarts one or more virtual machines in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsRestartAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsRestartValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsStart
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsStartCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = vmInstanceIDs;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsStartValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsStart(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsStart(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsStart(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsStart(Async)");
        }

        return virtualMachineScaleSetsStartCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);

    }

    /**
     * 
     * Starts one or more virtual machines in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineScaleSetsStart(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        virtualMachineScaleSetsStartWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
    }

    /**
     * 
     * Starts one or more virtual machines in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineScaleSetsStartWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsStartValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Starts one or more virtual machines in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsStartAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsStartValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsUpdate
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set to create or update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters The scale set object. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsUpdateCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetUpdate parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsUpdateValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetUpdate parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsUpdate(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling virtualMachineScaleSetsUpdate(Async)");
        }

        return virtualMachineScaleSetsUpdateCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Update a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set to create or update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters The scale set object. (required)
     * @return VirtualMachineScaleSet
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public VirtualMachineScaleSet virtualMachineScaleSetsUpdate(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetUpdate parameters) throws ApiException {
        ApiResponse<VirtualMachineScaleSet> localVarResp = virtualMachineScaleSetsUpdateWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Update a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set to create or update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters The scale set object. (required)
     * @return ApiResponse&lt;VirtualMachineScaleSet&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualMachineScaleSet> virtualMachineScaleSetsUpdateWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetUpdate parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsUpdateValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSet>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set to create or update. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters The scale set object. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsUpdateAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetUpdate parameters, final ApiCallback<VirtualMachineScaleSet> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsUpdateValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSet>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetsUpdateInstances
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsUpdateInstancesCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = vmInstanceIDs;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetsUpdateInstancesValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsUpdateInstances(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsUpdateInstances(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsUpdateInstances(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsUpdateInstances(Async)");
        }

        // verify the required parameter 'vmInstanceIDs' is set
        if (vmInstanceIDs == null) {
            throw new ApiException("Missing the required parameter 'vmInstanceIDs' when calling virtualMachineScaleSetsUpdateInstances(Async)");
        }

        return virtualMachineScaleSetsUpdateInstancesCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);

    }

    /**
     * 
     * Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineScaleSetsUpdateInstances(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs) throws ApiException {
        virtualMachineScaleSetsUpdateInstancesWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
    }

    /**
     * 
     * Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineScaleSetsUpdateInstancesWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetsUpdateInstancesValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetsUpdateInstancesAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetsUpdateInstancesValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
