/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AdditionalUnattendContent;
import org.openapitools.client.model.WinRMConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies Windows operating system settings on the virtual machine.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:49:11.499765-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WindowsConfiguration {
  public static final String SERIALIZED_NAME_ADDITIONAL_UNATTEND_CONTENT = "additionalUnattendContent";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_UNATTEND_CONTENT)
  private List<AdditionalUnattendContent> additionalUnattendContent = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLE_AUTOMATIC_UPDATES = "enableAutomaticUpdates";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUTOMATIC_UPDATES)
  private Boolean enableAutomaticUpdates;

  public static final String SERIALIZED_NAME_PROVISION_V_M_AGENT = "provisionVMAgent";
  @SerializedName(SERIALIZED_NAME_PROVISION_V_M_AGENT)
  private Boolean provisionVMAgent;

  public static final String SERIALIZED_NAME_TIME_ZONE = "timeZone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;

  public static final String SERIALIZED_NAME_WIN_R_M = "winRM";
  @SerializedName(SERIALIZED_NAME_WIN_R_M)
  private WinRMConfiguration winRM;

  public WindowsConfiguration() {
  }

  public WindowsConfiguration additionalUnattendContent(List<AdditionalUnattendContent> additionalUnattendContent) {
    this.additionalUnattendContent = additionalUnattendContent;
    return this;
  }

  public WindowsConfiguration addAdditionalUnattendContentItem(AdditionalUnattendContent additionalUnattendContentItem) {
    if (this.additionalUnattendContent == null) {
      this.additionalUnattendContent = new ArrayList<>();
    }
    this.additionalUnattendContent.add(additionalUnattendContentItem);
    return this;
  }

  /**
   * Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
   * @return additionalUnattendContent
   */
  @javax.annotation.Nullable
  public List<AdditionalUnattendContent> getAdditionalUnattendContent() {
    return additionalUnattendContent;
  }

  public void setAdditionalUnattendContent(List<AdditionalUnattendContent> additionalUnattendContent) {
    this.additionalUnattendContent = additionalUnattendContent;
  }


  public WindowsConfiguration enableAutomaticUpdates(Boolean enableAutomaticUpdates) {
    this.enableAutomaticUpdates = enableAutomaticUpdates;
    return this;
  }

  /**
   * Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. &lt;br&gt;&lt;br&gt; For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.
   * @return enableAutomaticUpdates
   */
  @javax.annotation.Nullable
  public Boolean getEnableAutomaticUpdates() {
    return enableAutomaticUpdates;
  }

  public void setEnableAutomaticUpdates(Boolean enableAutomaticUpdates) {
    this.enableAutomaticUpdates = enableAutomaticUpdates;
  }


  public WindowsConfiguration provisionVMAgent(Boolean provisionVMAgent) {
    this.provisionVMAgent = provisionVMAgent;
    return this;
  }

  /**
   * Indicates whether virtual machine agent should be provisioned on the virtual machine. &lt;br&gt;&lt;br&gt; When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
   * @return provisionVMAgent
   */
  @javax.annotation.Nullable
  public Boolean getProvisionVMAgent() {
    return provisionVMAgent;
  }

  public void setProvisionVMAgent(Boolean provisionVMAgent) {
    this.provisionVMAgent = provisionVMAgent;
  }


  public WindowsConfiguration timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  /**
   * Specifies the time zone of the virtual machine. e.g. \&quot;Pacific Standard Time\&quot;
   * @return timeZone
   */
  @javax.annotation.Nullable
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }


  public WindowsConfiguration winRM(WinRMConfiguration winRM) {
    this.winRM = winRM;
    return this;
  }

  /**
   * Get winRM
   * @return winRM
   */
  @javax.annotation.Nullable
  public WinRMConfiguration getWinRM() {
    return winRM;
  }

  public void setWinRM(WinRMConfiguration winRM) {
    this.winRM = winRM;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WindowsConfiguration windowsConfiguration = (WindowsConfiguration) o;
    return Objects.equals(this.additionalUnattendContent, windowsConfiguration.additionalUnattendContent) &&
        Objects.equals(this.enableAutomaticUpdates, windowsConfiguration.enableAutomaticUpdates) &&
        Objects.equals(this.provisionVMAgent, windowsConfiguration.provisionVMAgent) &&
        Objects.equals(this.timeZone, windowsConfiguration.timeZone) &&
        Objects.equals(this.winRM, windowsConfiguration.winRM);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalUnattendContent, enableAutomaticUpdates, provisionVMAgent, timeZone, winRM);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WindowsConfiguration {\n");
    sb.append("    additionalUnattendContent: ").append(toIndentedString(additionalUnattendContent)).append("\n");
    sb.append("    enableAutomaticUpdates: ").append(toIndentedString(enableAutomaticUpdates)).append("\n");
    sb.append("    provisionVMAgent: ").append(toIndentedString(provisionVMAgent)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    winRM: ").append(toIndentedString(winRM)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additionalUnattendContent");
    openapiFields.add("enableAutomaticUpdates");
    openapiFields.add("provisionVMAgent");
    openapiFields.add("timeZone");
    openapiFields.add("winRM");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WindowsConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WindowsConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WindowsConfiguration is not found in the empty JSON string", WindowsConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WindowsConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WindowsConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("additionalUnattendContent") != null && !jsonObj.get("additionalUnattendContent").isJsonNull()) {
        JsonArray jsonArrayadditionalUnattendContent = jsonObj.getAsJsonArray("additionalUnattendContent");
        if (jsonArrayadditionalUnattendContent != null) {
          // ensure the json data is an array
          if (!jsonObj.get("additionalUnattendContent").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `additionalUnattendContent` to be an array in the JSON string but got `%s`", jsonObj.get("additionalUnattendContent").toString()));
          }

          // validate the optional field `additionalUnattendContent` (array)
          for (int i = 0; i < jsonArrayadditionalUnattendContent.size(); i++) {
            AdditionalUnattendContent.validateJsonElement(jsonArrayadditionalUnattendContent.get(i));
          };
        }
      }
      if ((jsonObj.get("timeZone") != null && !jsonObj.get("timeZone").isJsonNull()) && !jsonObj.get("timeZone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeZone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeZone").toString()));
      }
      // validate the optional field `winRM`
      if (jsonObj.get("winRM") != null && !jsonObj.get("winRM").isJsonNull()) {
        WinRMConfiguration.validateJsonElement(jsonObj.get("winRM"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WindowsConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WindowsConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WindowsConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WindowsConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<WindowsConfiguration>() {
           @Override
           public void write(JsonWriter out, WindowsConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WindowsConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WindowsConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WindowsConfiguration
   * @throws IOException if the JSON string is invalid with respect to WindowsConfiguration
   */
  public static WindowsConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WindowsConfiguration.class);
  }

  /**
   * Convert an instance of WindowsConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

