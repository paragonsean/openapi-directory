/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWindowsConfiguration.h
 *
 * Specifies Windows operating system settings on the virtual machine.
 */

#ifndef OAIWindowsConfiguration_H
#define OAIWindowsConfiguration_H

#include <QJsonObject>

#include "OAIAdditionalUnattendContent.h"
#include "OAIWinRMConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditionalUnattendContent;
class OAIWinRMConfiguration;

class OAIWindowsConfiguration : public OAIObject {
public:
    OAIWindowsConfiguration();
    OAIWindowsConfiguration(QString json);
    ~OAIWindowsConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAdditionalUnattendContent> getAdditionalUnattendContent() const;
    void setAdditionalUnattendContent(const QList<OAIAdditionalUnattendContent> &additional_unattend_content);
    bool is_additional_unattend_content_Set() const;
    bool is_additional_unattend_content_Valid() const;

    bool isEnableAutomaticUpdates() const;
    void setEnableAutomaticUpdates(const bool &enable_automatic_updates);
    bool is_enable_automatic_updates_Set() const;
    bool is_enable_automatic_updates_Valid() const;

    bool isProvisionVmAgent() const;
    void setProvisionVmAgent(const bool &provision_vm_agent);
    bool is_provision_vm_agent_Set() const;
    bool is_provision_vm_agent_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    OAIWinRMConfiguration getWinRm() const;
    void setWinRm(const OAIWinRMConfiguration &win_rm);
    bool is_win_rm_Set() const;
    bool is_win_rm_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAdditionalUnattendContent> m_additional_unattend_content;
    bool m_additional_unattend_content_isSet;
    bool m_additional_unattend_content_isValid;

    bool m_enable_automatic_updates;
    bool m_enable_automatic_updates_isSet;
    bool m_enable_automatic_updates_isValid;

    bool m_provision_vm_agent;
    bool m_provision_vm_agent_isSet;
    bool m_provision_vm_agent_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    OAIWinRMConfiguration m_win_rm;
    bool m_win_rm_isSet;
    bool m_win_rm_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWindowsConfiguration)

#endif // OAIWindowsConfiguration_H
