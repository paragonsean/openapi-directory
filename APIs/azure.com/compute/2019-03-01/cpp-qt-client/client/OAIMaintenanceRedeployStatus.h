/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMaintenanceRedeployStatus.h
 *
 * Maintenance Operation Status.
 */

#ifndef OAIMaintenanceRedeployStatus_H
#define OAIMaintenanceRedeployStatus_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMaintenanceRedeployStatus : public OAIObject {
public:
    OAIMaintenanceRedeployStatus();
    OAIMaintenanceRedeployStatus(QString json);
    ~OAIMaintenanceRedeployStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsCustomerInitiatedMaintenanceAllowed() const;
    void setIsCustomerInitiatedMaintenanceAllowed(const bool &is_customer_initiated_maintenance_allowed);
    bool is_is_customer_initiated_maintenance_allowed_Set() const;
    bool is_is_customer_initiated_maintenance_allowed_Valid() const;

    QString getLastOperationMessage() const;
    void setLastOperationMessage(const QString &last_operation_message);
    bool is_last_operation_message_Set() const;
    bool is_last_operation_message_Valid() const;

    QString getLastOperationResultCode() const;
    void setLastOperationResultCode(const QString &last_operation_result_code);
    bool is_last_operation_result_code_Set() const;
    bool is_last_operation_result_code_Valid() const;

    QDateTime getMaintenanceWindowEndTime() const;
    void setMaintenanceWindowEndTime(const QDateTime &maintenance_window_end_time);
    bool is_maintenance_window_end_time_Set() const;
    bool is_maintenance_window_end_time_Valid() const;

    QDateTime getMaintenanceWindowStartTime() const;
    void setMaintenanceWindowStartTime(const QDateTime &maintenance_window_start_time);
    bool is_maintenance_window_start_time_Set() const;
    bool is_maintenance_window_start_time_Valid() const;

    QDateTime getPreMaintenanceWindowEndTime() const;
    void setPreMaintenanceWindowEndTime(const QDateTime &pre_maintenance_window_end_time);
    bool is_pre_maintenance_window_end_time_Set() const;
    bool is_pre_maintenance_window_end_time_Valid() const;

    QDateTime getPreMaintenanceWindowStartTime() const;
    void setPreMaintenanceWindowStartTime(const QDateTime &pre_maintenance_window_start_time);
    bool is_pre_maintenance_window_start_time_Set() const;
    bool is_pre_maintenance_window_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_customer_initiated_maintenance_allowed;
    bool m_is_customer_initiated_maintenance_allowed_isSet;
    bool m_is_customer_initiated_maintenance_allowed_isValid;

    QString m_last_operation_message;
    bool m_last_operation_message_isSet;
    bool m_last_operation_message_isValid;

    QString m_last_operation_result_code;
    bool m_last_operation_result_code_isSet;
    bool m_last_operation_result_code_isValid;

    QDateTime m_maintenance_window_end_time;
    bool m_maintenance_window_end_time_isSet;
    bool m_maintenance_window_end_time_isValid;

    QDateTime m_maintenance_window_start_time;
    bool m_maintenance_window_start_time_isSet;
    bool m_maintenance_window_start_time_isValid;

    QDateTime m_pre_maintenance_window_end_time;
    bool m_pre_maintenance_window_end_time_isSet;
    bool m_pre_maintenance_window_end_time_isValid;

    QDateTime m_pre_maintenance_window_start_time;
    bool m_pre_maintenance_window_start_time_isSet;
    bool m_pre_maintenance_window_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMaintenanceRedeployStatus)

#endif // OAIMaintenanceRedeployStatus_H
