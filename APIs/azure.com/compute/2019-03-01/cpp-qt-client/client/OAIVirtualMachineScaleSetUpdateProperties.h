/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualMachineScaleSetUpdateProperties.h
 *
 * Describes the properties of a Virtual Machine Scale Set.
 */

#ifndef OAIVirtualMachineScaleSetUpdateProperties_H
#define OAIVirtualMachineScaleSetUpdateProperties_H

#include <QJsonObject>

#include "OAIAdditionalCapabilities.h"
#include "OAIScaleInPolicy.h"
#include "OAIUpgradePolicy.h"
#include "OAIVirtualMachineScaleSetUpdateVMProfile.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditionalCapabilities;
class OAIScaleInPolicy;
class OAIUpgradePolicy;
class OAIVirtualMachineScaleSetUpdateVMProfile;

class OAIVirtualMachineScaleSetUpdateProperties : public OAIObject {
public:
    OAIVirtualMachineScaleSetUpdateProperties();
    OAIVirtualMachineScaleSetUpdateProperties(QString json);
    ~OAIVirtualMachineScaleSetUpdateProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAdditionalCapabilities getAdditionalCapabilities() const;
    void setAdditionalCapabilities(const OAIAdditionalCapabilities &additional_capabilities);
    bool is_additional_capabilities_Set() const;
    bool is_additional_capabilities_Valid() const;

    bool isOverprovision() const;
    void setOverprovision(const bool &overprovision);
    bool is_overprovision_Set() const;
    bool is_overprovision_Valid() const;

    OAIScaleInPolicy getScaleInPolicy() const;
    void setScaleInPolicy(const OAIScaleInPolicy &scale_in_policy);
    bool is_scale_in_policy_Set() const;
    bool is_scale_in_policy_Valid() const;

    bool isSinglePlacementGroup() const;
    void setSinglePlacementGroup(const bool &single_placement_group);
    bool is_single_placement_group_Set() const;
    bool is_single_placement_group_Valid() const;

    OAIUpgradePolicy getUpgradePolicy() const;
    void setUpgradePolicy(const OAIUpgradePolicy &upgrade_policy);
    bool is_upgrade_policy_Set() const;
    bool is_upgrade_policy_Valid() const;

    OAIVirtualMachineScaleSetUpdateVMProfile getVirtualMachineProfile() const;
    void setVirtualMachineProfile(const OAIVirtualMachineScaleSetUpdateVMProfile &virtual_machine_profile);
    bool is_virtual_machine_profile_Set() const;
    bool is_virtual_machine_profile_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAdditionalCapabilities m_additional_capabilities;
    bool m_additional_capabilities_isSet;
    bool m_additional_capabilities_isValid;

    bool m_overprovision;
    bool m_overprovision_isSet;
    bool m_overprovision_isValid;

    OAIScaleInPolicy m_scale_in_policy;
    bool m_scale_in_policy_isSet;
    bool m_scale_in_policy_isValid;

    bool m_single_placement_group;
    bool m_single_placement_group_isSet;
    bool m_single_placement_group_isValid;

    OAIUpgradePolicy m_upgrade_policy;
    bool m_upgrade_policy_isSet;
    bool m_upgrade_policy_isValid;

    OAIVirtualMachineScaleSetUpdateVMProfile m_virtual_machine_profile;
    bool m_virtual_machine_profile_isSet;
    bool m_virtual_machine_profile_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualMachineScaleSetUpdateProperties)

#endif // OAIVirtualMachineScaleSetUpdateProperties_H
