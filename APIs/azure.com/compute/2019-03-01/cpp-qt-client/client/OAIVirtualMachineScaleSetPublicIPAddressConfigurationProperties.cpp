/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties() {
    this->initializeModel();
}

OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::~OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties() {}

void OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::initializeModel() {

    m_dns_settings_isSet = false;
    m_dns_settings_isValid = false;

    m_idle_timeout_in_minutes_isSet = false;
    m_idle_timeout_in_minutes_isValid = false;

    m_ip_tags_isSet = false;
    m_ip_tags_isValid = false;

    m_public_ip_prefix_isSet = false;
    m_public_ip_prefix_isValid = false;
}

void OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::fromJsonObject(QJsonObject json) {

    m_dns_settings_isValid = ::OpenAPI::fromJsonValue(m_dns_settings, json[QString("dnsSettings")]);
    m_dns_settings_isSet = !json[QString("dnsSettings")].isNull() && m_dns_settings_isValid;

    m_idle_timeout_in_minutes_isValid = ::OpenAPI::fromJsonValue(m_idle_timeout_in_minutes, json[QString("idleTimeoutInMinutes")]);
    m_idle_timeout_in_minutes_isSet = !json[QString("idleTimeoutInMinutes")].isNull() && m_idle_timeout_in_minutes_isValid;

    m_ip_tags_isValid = ::OpenAPI::fromJsonValue(m_ip_tags, json[QString("ipTags")]);
    m_ip_tags_isSet = !json[QString("ipTags")].isNull() && m_ip_tags_isValid;

    m_public_ip_prefix_isValid = ::OpenAPI::fromJsonValue(m_public_ip_prefix, json[QString("publicIPPrefix")]);
    m_public_ip_prefix_isSet = !json[QString("publicIPPrefix")].isNull() && m_public_ip_prefix_isValid;
}

QString OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_dns_settings.isSet()) {
        obj.insert(QString("dnsSettings"), ::OpenAPI::toJsonValue(m_dns_settings));
    }
    if (m_idle_timeout_in_minutes_isSet) {
        obj.insert(QString("idleTimeoutInMinutes"), ::OpenAPI::toJsonValue(m_idle_timeout_in_minutes));
    }
    if (m_ip_tags.size() > 0) {
        obj.insert(QString("ipTags"), ::OpenAPI::toJsonValue(m_ip_tags));
    }
    if (m_public_ip_prefix.isSet()) {
        obj.insert(QString("publicIPPrefix"), ::OpenAPI::toJsonValue(m_public_ip_prefix));
    }
    return obj;
}

OAIVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::getDnsSettings() const {
    return m_dns_settings;
}
void OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::setDnsSettings(const OAIVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings &dns_settings) {
    m_dns_settings = dns_settings;
    m_dns_settings_isSet = true;
}

bool OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::is_dns_settings_Set() const{
    return m_dns_settings_isSet;
}

bool OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::is_dns_settings_Valid() const{
    return m_dns_settings_isValid;
}

qint32 OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::getIdleTimeoutInMinutes() const {
    return m_idle_timeout_in_minutes;
}
void OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::setIdleTimeoutInMinutes(const qint32 &idle_timeout_in_minutes) {
    m_idle_timeout_in_minutes = idle_timeout_in_minutes;
    m_idle_timeout_in_minutes_isSet = true;
}

bool OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::is_idle_timeout_in_minutes_Set() const{
    return m_idle_timeout_in_minutes_isSet;
}

bool OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::is_idle_timeout_in_minutes_Valid() const{
    return m_idle_timeout_in_minutes_isValid;
}

QList<OAIVirtualMachineScaleSetIpTag> OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::getIpTags() const {
    return m_ip_tags;
}
void OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::setIpTags(const QList<OAIVirtualMachineScaleSetIpTag> &ip_tags) {
    m_ip_tags = ip_tags;
    m_ip_tags_isSet = true;
}

bool OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::is_ip_tags_Set() const{
    return m_ip_tags_isSet;
}

bool OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::is_ip_tags_Valid() const{
    return m_ip_tags_isValid;
}

OAISubResource OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::getPublicIpPrefix() const {
    return m_public_ip_prefix;
}
void OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::setPublicIpPrefix(const OAISubResource &public_ip_prefix) {
    m_public_ip_prefix = public_ip_prefix;
    m_public_ip_prefix_isSet = true;
}

bool OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::is_public_ip_prefix_Set() const{
    return m_public_ip_prefix_isSet;
}

bool OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::is_public_ip_prefix_Valid() const{
    return m_public_ip_prefix_isValid;
}

bool OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dns_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_idle_timeout_in_minutes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_ip_prefix.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVirtualMachineScaleSetPublicIPAddressConfigurationProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
