/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScaleInPolicy model module.
 * @module model/ScaleInPolicy
 * @version 2019-03-01
 */
class ScaleInPolicy {
    /**
     * Constructs a new <code>ScaleInPolicy</code>.
     * Describes a scale-in policy for a virtual machine scale set.
     * @alias module:model/ScaleInPolicy
     */
    constructor() { 
        
        ScaleInPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScaleInPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScaleInPolicy} obj Optional instance to populate.
     * @return {module:model/ScaleInPolicy} The populated <code>ScaleInPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScaleInPolicy();

            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScaleInPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScaleInPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['rules'])) {
            throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
        }

        return true;
    }


}



/**
 * The rules to be followed when scaling-in a virtual machine scale set. <br><br> Possible values are: <br><br> **Default** When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. <br><br> **OldestVM** When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. <br><br> **NewestVM** When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal. <br><br>
 * @member {Array.<module:model/ScaleInPolicy.RulesEnum>} rules
 */
ScaleInPolicy.prototype['rules'] = undefined;





/**
 * Allowed values for the <code>rules</code> property.
 * @enum {String}
 * @readonly
 */
ScaleInPolicy['RulesEnum'] = {

    /**
     * value: "Default"
     * @const
     */
    "Default": "Default",

    /**
     * value: "OldestVM"
     * @const
     */
    "OldestVM": "OldestVM",

    /**
     * value: "NewestVM"
     * @const
     */
    "NewestVM": "NewestVM"
};



export default ScaleInPolicy;

