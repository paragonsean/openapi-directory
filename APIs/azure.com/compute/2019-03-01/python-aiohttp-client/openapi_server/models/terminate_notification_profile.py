# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TerminateNotificationProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable: bool=None, not_before_timeout: str=None):
        """TerminateNotificationProfile - a model defined in OpenAPI

        :param enable: The enable of this TerminateNotificationProfile.
        :param not_before_timeout: The not_before_timeout of this TerminateNotificationProfile.
        """
        self.openapi_types = {
            'enable': bool,
            'not_before_timeout': str
        }

        self.attribute_map = {
            'enable': 'enable',
            'not_before_timeout': 'notBeforeTimeout'
        }

        self._enable = enable
        self._not_before_timeout = not_before_timeout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TerminateNotificationProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TerminateNotificationProfile of this TerminateNotificationProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable(self):
        """Gets the enable of this TerminateNotificationProfile.

        Specifies whether the Terminate Scheduled event is enabled or disabled.

        :return: The enable of this TerminateNotificationProfile.
        :rtype: bool
        """
        return self._enable

    @enable.setter
    def enable(self, enable):
        """Sets the enable of this TerminateNotificationProfile.

        Specifies whether the Terminate Scheduled event is enabled or disabled.

        :param enable: The enable of this TerminateNotificationProfile.
        :type enable: bool
        """

        self._enable = enable

    @property
    def not_before_timeout(self):
        """Gets the not_before_timeout of this TerminateNotificationProfile.

        Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)

        :return: The not_before_timeout of this TerminateNotificationProfile.
        :rtype: str
        """
        return self._not_before_timeout

    @not_before_timeout.setter
    def not_before_timeout(self, not_before_timeout):
        """Sets the not_before_timeout of this TerminateNotificationProfile.

        Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)

        :param not_before_timeout: The not_before_timeout of this TerminateNotificationProfile.
        :type not_before_timeout: str
        """

        self._not_before_timeout = not_before_timeout
