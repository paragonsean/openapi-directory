# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DedicatedHostAllocatableVM(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: float=None, vm_size: str=None):
        """DedicatedHostAllocatableVM - a model defined in OpenAPI

        :param count: The count of this DedicatedHostAllocatableVM.
        :param vm_size: The vm_size of this DedicatedHostAllocatableVM.
        """
        self.openapi_types = {
            'count': float,
            'vm_size': str
        }

        self.attribute_map = {
            'count': 'count',
            'vm_size': 'vmSize'
        }

        self._count = count
        self._vm_size = vm_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DedicatedHostAllocatableVM':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DedicatedHostAllocatableVM of this DedicatedHostAllocatableVM.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this DedicatedHostAllocatableVM.

        Maximum number of VMs of size vmSize that can fit in the dedicated host's remaining capacity.

        :return: The count of this DedicatedHostAllocatableVM.
        :rtype: float
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this DedicatedHostAllocatableVM.

        Maximum number of VMs of size vmSize that can fit in the dedicated host's remaining capacity.

        :param count: The count of this DedicatedHostAllocatableVM.
        :type count: float
        """

        self._count = count

    @property
    def vm_size(self):
        """Gets the vm_size of this DedicatedHostAllocatableVM.

        VM size in terms of which the unutilized capacity is represented.

        :return: The vm_size of this DedicatedHostAllocatableVM.
        :rtype: str
        """
        return self._vm_size

    @vm_size.setter
    def vm_size(self, vm_size):
        """Sets the vm_size of this DedicatedHostAllocatableVM.

        VM size in terms of which the unutilized capacity is represented.

        :param vm_size: The vm_size of this DedicatedHostAllocatableVM.
        :type vm_size: str
        """

        self._vm_size = vm_size
