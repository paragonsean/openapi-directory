# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.billing_profile import BillingProfile
from openapi_server.models.diagnostics_profile import DiagnosticsProfile
from openapi_server.models.scheduled_events_profile import ScheduledEventsProfile
from openapi_server.models.virtual_machine_scale_set_extension_profile import VirtualMachineScaleSetExtensionProfile
from openapi_server.models.virtual_machine_scale_set_network_profile import VirtualMachineScaleSetNetworkProfile
from openapi_server.models.virtual_machine_scale_set_os_profile import VirtualMachineScaleSetOSProfile
from openapi_server.models.virtual_machine_scale_set_storage_profile import VirtualMachineScaleSetStorageProfile
from openapi_server import util


class VirtualMachineScaleSetVMProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_profile: BillingProfile=None, diagnostics_profile: DiagnosticsProfile=None, eviction_policy: str=None, extension_profile: VirtualMachineScaleSetExtensionProfile=None, license_type: str=None, network_profile: VirtualMachineScaleSetNetworkProfile=None, os_profile: VirtualMachineScaleSetOSProfile=None, priority: str=None, scheduled_events_profile: ScheduledEventsProfile=None, storage_profile: VirtualMachineScaleSetStorageProfile=None):
        """VirtualMachineScaleSetVMProfile - a model defined in OpenAPI

        :param billing_profile: The billing_profile of this VirtualMachineScaleSetVMProfile.
        :param diagnostics_profile: The diagnostics_profile of this VirtualMachineScaleSetVMProfile.
        :param eviction_policy: The eviction_policy of this VirtualMachineScaleSetVMProfile.
        :param extension_profile: The extension_profile of this VirtualMachineScaleSetVMProfile.
        :param license_type: The license_type of this VirtualMachineScaleSetVMProfile.
        :param network_profile: The network_profile of this VirtualMachineScaleSetVMProfile.
        :param os_profile: The os_profile of this VirtualMachineScaleSetVMProfile.
        :param priority: The priority of this VirtualMachineScaleSetVMProfile.
        :param scheduled_events_profile: The scheduled_events_profile of this VirtualMachineScaleSetVMProfile.
        :param storage_profile: The storage_profile of this VirtualMachineScaleSetVMProfile.
        """
        self.openapi_types = {
            'billing_profile': BillingProfile,
            'diagnostics_profile': DiagnosticsProfile,
            'eviction_policy': str,
            'extension_profile': VirtualMachineScaleSetExtensionProfile,
            'license_type': str,
            'network_profile': VirtualMachineScaleSetNetworkProfile,
            'os_profile': VirtualMachineScaleSetOSProfile,
            'priority': str,
            'scheduled_events_profile': ScheduledEventsProfile,
            'storage_profile': VirtualMachineScaleSetStorageProfile
        }

        self.attribute_map = {
            'billing_profile': 'billingProfile',
            'diagnostics_profile': 'diagnosticsProfile',
            'eviction_policy': 'evictionPolicy',
            'extension_profile': 'extensionProfile',
            'license_type': 'licenseType',
            'network_profile': 'networkProfile',
            'os_profile': 'osProfile',
            'priority': 'priority',
            'scheduled_events_profile': 'scheduledEventsProfile',
            'storage_profile': 'storageProfile'
        }

        self._billing_profile = billing_profile
        self._diagnostics_profile = diagnostics_profile
        self._eviction_policy = eviction_policy
        self._extension_profile = extension_profile
        self._license_type = license_type
        self._network_profile = network_profile
        self._os_profile = os_profile
        self._priority = priority
        self._scheduled_events_profile = scheduled_events_profile
        self._storage_profile = storage_profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineScaleSetVMProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineScaleSetVMProfile of this VirtualMachineScaleSetVMProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_profile(self):
        """Gets the billing_profile of this VirtualMachineScaleSetVMProfile.


        :return: The billing_profile of this VirtualMachineScaleSetVMProfile.
        :rtype: BillingProfile
        """
        return self._billing_profile

    @billing_profile.setter
    def billing_profile(self, billing_profile):
        """Sets the billing_profile of this VirtualMachineScaleSetVMProfile.


        :param billing_profile: The billing_profile of this VirtualMachineScaleSetVMProfile.
        :type billing_profile: BillingProfile
        """

        self._billing_profile = billing_profile

    @property
    def diagnostics_profile(self):
        """Gets the diagnostics_profile of this VirtualMachineScaleSetVMProfile.


        :return: The diagnostics_profile of this VirtualMachineScaleSetVMProfile.
        :rtype: DiagnosticsProfile
        """
        return self._diagnostics_profile

    @diagnostics_profile.setter
    def diagnostics_profile(self, diagnostics_profile):
        """Sets the diagnostics_profile of this VirtualMachineScaleSetVMProfile.


        :param diagnostics_profile: The diagnostics_profile of this VirtualMachineScaleSetVMProfile.
        :type diagnostics_profile: DiagnosticsProfile
        """

        self._diagnostics_profile = diagnostics_profile

    @property
    def eviction_policy(self):
        """Gets the eviction_policy of this VirtualMachineScaleSetVMProfile.

        Specifies the eviction policy for virtual machines in a low priority scale set. <br><br>Minimum api-version: 2017-10-30-preview

        :return: The eviction_policy of this VirtualMachineScaleSetVMProfile.
        :rtype: str
        """
        return self._eviction_policy

    @eviction_policy.setter
    def eviction_policy(self, eviction_policy):
        """Sets the eviction_policy of this VirtualMachineScaleSetVMProfile.

        Specifies the eviction policy for virtual machines in a low priority scale set. <br><br>Minimum api-version: 2017-10-30-preview

        :param eviction_policy: The eviction_policy of this VirtualMachineScaleSetVMProfile.
        :type eviction_policy: str
        """
        allowed_values = ["Deallocate", "Delete"]  # noqa: E501
        if eviction_policy not in allowed_values:
            raise ValueError(
                "Invalid value for `eviction_policy` ({0}), must be one of {1}"
                .format(eviction_policy, allowed_values)
            )

        self._eviction_policy = eviction_policy

    @property
    def extension_profile(self):
        """Gets the extension_profile of this VirtualMachineScaleSetVMProfile.


        :return: The extension_profile of this VirtualMachineScaleSetVMProfile.
        :rtype: VirtualMachineScaleSetExtensionProfile
        """
        return self._extension_profile

    @extension_profile.setter
    def extension_profile(self, extension_profile):
        """Sets the extension_profile of this VirtualMachineScaleSetVMProfile.


        :param extension_profile: The extension_profile of this VirtualMachineScaleSetVMProfile.
        :type extension_profile: VirtualMachineScaleSetExtensionProfile
        """

        self._extension_profile = extension_profile

    @property
    def license_type(self):
        """Gets the license_type of this VirtualMachineScaleSetVMProfile.

        Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. <br><br> Possible values are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Minimum api-version: 2015-06-15

        :return: The license_type of this VirtualMachineScaleSetVMProfile.
        :rtype: str
        """
        return self._license_type

    @license_type.setter
    def license_type(self, license_type):
        """Sets the license_type of this VirtualMachineScaleSetVMProfile.

        Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. <br><br> Possible values are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Minimum api-version: 2015-06-15

        :param license_type: The license_type of this VirtualMachineScaleSetVMProfile.
        :type license_type: str
        """

        self._license_type = license_type

    @property
    def network_profile(self):
        """Gets the network_profile of this VirtualMachineScaleSetVMProfile.


        :return: The network_profile of this VirtualMachineScaleSetVMProfile.
        :rtype: VirtualMachineScaleSetNetworkProfile
        """
        return self._network_profile

    @network_profile.setter
    def network_profile(self, network_profile):
        """Sets the network_profile of this VirtualMachineScaleSetVMProfile.


        :param network_profile: The network_profile of this VirtualMachineScaleSetVMProfile.
        :type network_profile: VirtualMachineScaleSetNetworkProfile
        """

        self._network_profile = network_profile

    @property
    def os_profile(self):
        """Gets the os_profile of this VirtualMachineScaleSetVMProfile.


        :return: The os_profile of this VirtualMachineScaleSetVMProfile.
        :rtype: VirtualMachineScaleSetOSProfile
        """
        return self._os_profile

    @os_profile.setter
    def os_profile(self, os_profile):
        """Sets the os_profile of this VirtualMachineScaleSetVMProfile.


        :param os_profile: The os_profile of this VirtualMachineScaleSetVMProfile.
        :type os_profile: VirtualMachineScaleSetOSProfile
        """

        self._os_profile = os_profile

    @property
    def priority(self):
        """Gets the priority of this VirtualMachineScaleSetVMProfile.

        Specifies the priority for the virtual machines in the scale set. <br><br>Minimum api-version: 2017-10-30-preview

        :return: The priority of this VirtualMachineScaleSetVMProfile.
        :rtype: str
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this VirtualMachineScaleSetVMProfile.

        Specifies the priority for the virtual machines in the scale set. <br><br>Minimum api-version: 2017-10-30-preview

        :param priority: The priority of this VirtualMachineScaleSetVMProfile.
        :type priority: str
        """
        allowed_values = ["Regular", "Low"]  # noqa: E501
        if priority not in allowed_values:
            raise ValueError(
                "Invalid value for `priority` ({0}), must be one of {1}"
                .format(priority, allowed_values)
            )

        self._priority = priority

    @property
    def scheduled_events_profile(self):
        """Gets the scheduled_events_profile of this VirtualMachineScaleSetVMProfile.


        :return: The scheduled_events_profile of this VirtualMachineScaleSetVMProfile.
        :rtype: ScheduledEventsProfile
        """
        return self._scheduled_events_profile

    @scheduled_events_profile.setter
    def scheduled_events_profile(self, scheduled_events_profile):
        """Sets the scheduled_events_profile of this VirtualMachineScaleSetVMProfile.


        :param scheduled_events_profile: The scheduled_events_profile of this VirtualMachineScaleSetVMProfile.
        :type scheduled_events_profile: ScheduledEventsProfile
        """

        self._scheduled_events_profile = scheduled_events_profile

    @property
    def storage_profile(self):
        """Gets the storage_profile of this VirtualMachineScaleSetVMProfile.


        :return: The storage_profile of this VirtualMachineScaleSetVMProfile.
        :rtype: VirtualMachineScaleSetStorageProfile
        """
        return self._storage_profile

    @storage_profile.setter
    def storage_profile(self, storage_profile):
        """Sets the storage_profile of this VirtualMachineScaleSetVMProfile.


        :param storage_profile: The storage_profile of this VirtualMachineScaleSetVMProfile.
        :type storage_profile: VirtualMachineScaleSetStorageProfile
        """

        self._storage_profile = storage_profile
