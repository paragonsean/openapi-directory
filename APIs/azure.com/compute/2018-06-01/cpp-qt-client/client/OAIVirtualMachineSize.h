/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualMachineSize.h
 *
 * Describes the properties of a VM size.
 */

#ifndef OAIVirtualMachineSize_H
#define OAIVirtualMachineSize_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVirtualMachineSize : public OAIObject {
public:
    OAIVirtualMachineSize();
    OAIVirtualMachineSize(QString json);
    ~OAIVirtualMachineSize() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxDataDiskCount() const;
    void setMaxDataDiskCount(const qint32 &max_data_disk_count);
    bool is_max_data_disk_count_Set() const;
    bool is_max_data_disk_count_Valid() const;

    qint32 getMemoryInMb() const;
    void setMemoryInMb(const qint32 &memory_in_mb);
    bool is_memory_in_mb_Set() const;
    bool is_memory_in_mb_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNumberOfCores() const;
    void setNumberOfCores(const qint32 &number_of_cores);
    bool is_number_of_cores_Set() const;
    bool is_number_of_cores_Valid() const;

    qint32 getOsDiskSizeInMb() const;
    void setOsDiskSizeInMb(const qint32 &os_disk_size_in_mb);
    bool is_os_disk_size_in_mb_Set() const;
    bool is_os_disk_size_in_mb_Valid() const;

    qint32 getResourceDiskSizeInMb() const;
    void setResourceDiskSizeInMb(const qint32 &resource_disk_size_in_mb);
    bool is_resource_disk_size_in_mb_Set() const;
    bool is_resource_disk_size_in_mb_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_data_disk_count;
    bool m_max_data_disk_count_isSet;
    bool m_max_data_disk_count_isValid;

    qint32 m_memory_in_mb;
    bool m_memory_in_mb_isSet;
    bool m_memory_in_mb_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_number_of_cores;
    bool m_number_of_cores_isSet;
    bool m_number_of_cores_isValid;

    qint32 m_os_disk_size_in_mb;
    bool m_os_disk_size_in_mb_isSet;
    bool m_os_disk_size_in_mb_isValid;

    qint32 m_resource_disk_size_in_mb;
    bool m_resource_disk_size_in_mb_isSet;
    bool m_resource_disk_size_in_mb_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualMachineSize)

#endif // OAIVirtualMachineSize_H
