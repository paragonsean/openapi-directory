/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIThrottledRequestsInput.h
 *
 * Api request input for LogAnalytics getThrottledRequests Api.
 */

#ifndef OAIThrottledRequestsInput_H
#define OAIThrottledRequestsInput_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIThrottledRequestsInput : public OAIObject {
public:
    OAIThrottledRequestsInput();
    OAIThrottledRequestsInput(QString json);
    ~OAIThrottledRequestsInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBlobContainerSasUri() const;
    void setBlobContainerSasUri(const QString &blob_container_sas_uri);
    bool is_blob_container_sas_uri_Set() const;
    bool is_blob_container_sas_uri_Valid() const;

    QDateTime getFromTime() const;
    void setFromTime(const QDateTime &from_time);
    bool is_from_time_Set() const;
    bool is_from_time_Valid() const;

    bool isGroupByOperationName() const;
    void setGroupByOperationName(const bool &group_by_operation_name);
    bool is_group_by_operation_name_Set() const;
    bool is_group_by_operation_name_Valid() const;

    bool isGroupByResourceName() const;
    void setGroupByResourceName(const bool &group_by_resource_name);
    bool is_group_by_resource_name_Set() const;
    bool is_group_by_resource_name_Valid() const;

    bool isGroupByThrottlePolicy() const;
    void setGroupByThrottlePolicy(const bool &group_by_throttle_policy);
    bool is_group_by_throttle_policy_Set() const;
    bool is_group_by_throttle_policy_Valid() const;

    QDateTime getToTime() const;
    void setToTime(const QDateTime &to_time);
    bool is_to_time_Set() const;
    bool is_to_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_blob_container_sas_uri;
    bool m_blob_container_sas_uri_isSet;
    bool m_blob_container_sas_uri_isValid;

    QDateTime m_from_time;
    bool m_from_time_isSet;
    bool m_from_time_isValid;

    bool m_group_by_operation_name;
    bool m_group_by_operation_name_isSet;
    bool m_group_by_operation_name_isValid;

    bool m_group_by_resource_name;
    bool m_group_by_resource_name_isSet;
    bool m_group_by_resource_name_isValid;

    bool m_group_by_throttle_policy;
    bool m_group_by_throttle_policy_isSet;
    bool m_group_by_throttle_policy_isValid;

    QDateTime m_to_time;
    bool m_to_time_isSet;
    bool m_to_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIThrottledRequestsInput)

#endif // OAIThrottledRequestsInput_H
