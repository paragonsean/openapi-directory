/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinuxConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinuxConfiguration::OAILinuxConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinuxConfiguration::OAILinuxConfiguration() {
    this->initializeModel();
}

OAILinuxConfiguration::~OAILinuxConfiguration() {}

void OAILinuxConfiguration::initializeModel() {

    m_disable_password_authentication_isSet = false;
    m_disable_password_authentication_isValid = false;

    m_provision_vm_agent_isSet = false;
    m_provision_vm_agent_isValid = false;

    m_ssh_isSet = false;
    m_ssh_isValid = false;
}

void OAILinuxConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinuxConfiguration::fromJsonObject(QJsonObject json) {

    m_disable_password_authentication_isValid = ::OpenAPI::fromJsonValue(m_disable_password_authentication, json[QString("disablePasswordAuthentication")]);
    m_disable_password_authentication_isSet = !json[QString("disablePasswordAuthentication")].isNull() && m_disable_password_authentication_isValid;

    m_provision_vm_agent_isValid = ::OpenAPI::fromJsonValue(m_provision_vm_agent, json[QString("provisionVMAgent")]);
    m_provision_vm_agent_isSet = !json[QString("provisionVMAgent")].isNull() && m_provision_vm_agent_isValid;

    m_ssh_isValid = ::OpenAPI::fromJsonValue(m_ssh, json[QString("ssh")]);
    m_ssh_isSet = !json[QString("ssh")].isNull() && m_ssh_isValid;
}

QString OAILinuxConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinuxConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_disable_password_authentication_isSet) {
        obj.insert(QString("disablePasswordAuthentication"), ::OpenAPI::toJsonValue(m_disable_password_authentication));
    }
    if (m_provision_vm_agent_isSet) {
        obj.insert(QString("provisionVMAgent"), ::OpenAPI::toJsonValue(m_provision_vm_agent));
    }
    if (m_ssh.isSet()) {
        obj.insert(QString("ssh"), ::OpenAPI::toJsonValue(m_ssh));
    }
    return obj;
}

bool OAILinuxConfiguration::isDisablePasswordAuthentication() const {
    return m_disable_password_authentication;
}
void OAILinuxConfiguration::setDisablePasswordAuthentication(const bool &disable_password_authentication) {
    m_disable_password_authentication = disable_password_authentication;
    m_disable_password_authentication_isSet = true;
}

bool OAILinuxConfiguration::is_disable_password_authentication_Set() const{
    return m_disable_password_authentication_isSet;
}

bool OAILinuxConfiguration::is_disable_password_authentication_Valid() const{
    return m_disable_password_authentication_isValid;
}

bool OAILinuxConfiguration::isProvisionVmAgent() const {
    return m_provision_vm_agent;
}
void OAILinuxConfiguration::setProvisionVmAgent(const bool &provision_vm_agent) {
    m_provision_vm_agent = provision_vm_agent;
    m_provision_vm_agent_isSet = true;
}

bool OAILinuxConfiguration::is_provision_vm_agent_Set() const{
    return m_provision_vm_agent_isSet;
}

bool OAILinuxConfiguration::is_provision_vm_agent_Valid() const{
    return m_provision_vm_agent_isValid;
}

OAISshConfiguration OAILinuxConfiguration::getSsh() const {
    return m_ssh;
}
void OAILinuxConfiguration::setSsh(const OAISshConfiguration &ssh) {
    m_ssh = ssh;
    m_ssh_isSet = true;
}

bool OAILinuxConfiguration::is_ssh_Set() const{
    return m_ssh_isSet;
}

bool OAILinuxConfiguration::is_ssh_Valid() const{
    return m_ssh_isValid;
}

bool OAILinuxConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disable_password_authentication_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provision_vm_agent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssh.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinuxConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
