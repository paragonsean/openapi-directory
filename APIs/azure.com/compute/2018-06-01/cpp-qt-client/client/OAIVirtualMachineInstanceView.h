/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualMachineInstanceView.h
 *
 * The instance view of a virtual machine.
 */

#ifndef OAIVirtualMachineInstanceView_H
#define OAIVirtualMachineInstanceView_H

#include <QJsonObject>

#include "OAIBootDiagnosticsInstanceView.h"
#include "OAIDiskInstanceView.h"
#include "OAIInstanceViewStatus.h"
#include "OAIMaintenanceRedeployStatus.h"
#include "OAIVirtualMachineAgentInstanceView.h"
#include "OAIVirtualMachineExtensionInstanceView.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBootDiagnosticsInstanceView;
class OAIDiskInstanceView;
class OAIVirtualMachineExtensionInstanceView;
class OAIMaintenanceRedeployStatus;
class OAIInstanceViewStatus;
class OAIVirtualMachineAgentInstanceView;

class OAIVirtualMachineInstanceView : public OAIObject {
public:
    OAIVirtualMachineInstanceView();
    OAIVirtualMachineInstanceView(QString json);
    ~OAIVirtualMachineInstanceView() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBootDiagnosticsInstanceView getBootDiagnostics() const;
    void setBootDiagnostics(const OAIBootDiagnosticsInstanceView &boot_diagnostics);
    bool is_boot_diagnostics_Set() const;
    bool is_boot_diagnostics_Valid() const;

    QString getComputerName() const;
    void setComputerName(const QString &computer_name);
    bool is_computer_name_Set() const;
    bool is_computer_name_Valid() const;

    QList<OAIDiskInstanceView> getDisks() const;
    void setDisks(const QList<OAIDiskInstanceView> &disks);
    bool is_disks_Set() const;
    bool is_disks_Valid() const;

    QList<OAIVirtualMachineExtensionInstanceView> getExtensions() const;
    void setExtensions(const QList<OAIVirtualMachineExtensionInstanceView> &extensions);
    bool is_extensions_Set() const;
    bool is_extensions_Valid() const;

    OAIMaintenanceRedeployStatus getMaintenanceRedeployStatus() const;
    void setMaintenanceRedeployStatus(const OAIMaintenanceRedeployStatus &maintenance_redeploy_status);
    bool is_maintenance_redeploy_status_Set() const;
    bool is_maintenance_redeploy_status_Valid() const;

    QString getOsName() const;
    void setOsName(const QString &os_name);
    bool is_os_name_Set() const;
    bool is_os_name_Valid() const;

    QString getOsVersion() const;
    void setOsVersion(const QString &os_version);
    bool is_os_version_Set() const;
    bool is_os_version_Valid() const;

    qint32 getPlatformFaultDomain() const;
    void setPlatformFaultDomain(const qint32 &platform_fault_domain);
    bool is_platform_fault_domain_Set() const;
    bool is_platform_fault_domain_Valid() const;

    qint32 getPlatformUpdateDomain() const;
    void setPlatformUpdateDomain(const qint32 &platform_update_domain);
    bool is_platform_update_domain_Set() const;
    bool is_platform_update_domain_Valid() const;

    QString getRdpThumbPrint() const;
    void setRdpThumbPrint(const QString &rdp_thumb_print);
    bool is_rdp_thumb_print_Set() const;
    bool is_rdp_thumb_print_Valid() const;

    QList<OAIInstanceViewStatus> getStatuses() const;
    void setStatuses(const QList<OAIInstanceViewStatus> &statuses);
    bool is_statuses_Set() const;
    bool is_statuses_Valid() const;

    OAIVirtualMachineAgentInstanceView getVmAgent() const;
    void setVmAgent(const OAIVirtualMachineAgentInstanceView &vm_agent);
    bool is_vm_agent_Set() const;
    bool is_vm_agent_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBootDiagnosticsInstanceView m_boot_diagnostics;
    bool m_boot_diagnostics_isSet;
    bool m_boot_diagnostics_isValid;

    QString m_computer_name;
    bool m_computer_name_isSet;
    bool m_computer_name_isValid;

    QList<OAIDiskInstanceView> m_disks;
    bool m_disks_isSet;
    bool m_disks_isValid;

    QList<OAIVirtualMachineExtensionInstanceView> m_extensions;
    bool m_extensions_isSet;
    bool m_extensions_isValid;

    OAIMaintenanceRedeployStatus m_maintenance_redeploy_status;
    bool m_maintenance_redeploy_status_isSet;
    bool m_maintenance_redeploy_status_isValid;

    QString m_os_name;
    bool m_os_name_isSet;
    bool m_os_name_isValid;

    QString m_os_version;
    bool m_os_version_isSet;
    bool m_os_version_isValid;

    qint32 m_platform_fault_domain;
    bool m_platform_fault_domain_isSet;
    bool m_platform_fault_domain_isValid;

    qint32 m_platform_update_domain;
    bool m_platform_update_domain_isSet;
    bool m_platform_update_domain_isValid;

    QString m_rdp_thumb_print;
    bool m_rdp_thumb_print_isSet;
    bool m_rdp_thumb_print_isValid;

    QList<OAIInstanceViewStatus> m_statuses;
    bool m_statuses_isSet;
    bool m_statuses_isValid;

    OAIVirtualMachineAgentInstanceView m_vm_agent;
    bool m_vm_agent_isSet;
    bool m_vm_agent_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualMachineInstanceView)

#endif // OAIVirtualMachineInstanceView_H
