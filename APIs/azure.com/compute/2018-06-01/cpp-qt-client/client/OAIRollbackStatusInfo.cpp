/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRollbackStatusInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRollbackStatusInfo::OAIRollbackStatusInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRollbackStatusInfo::OAIRollbackStatusInfo() {
    this->initializeModel();
}

OAIRollbackStatusInfo::~OAIRollbackStatusInfo() {}

void OAIRollbackStatusInfo::initializeModel() {

    m_failed_rolledback_instance_count_isSet = false;
    m_failed_rolledback_instance_count_isValid = false;

    m_rollback_error_isSet = false;
    m_rollback_error_isValid = false;

    m_successfully_rolledback_instance_count_isSet = false;
    m_successfully_rolledback_instance_count_isValid = false;
}

void OAIRollbackStatusInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRollbackStatusInfo::fromJsonObject(QJsonObject json) {

    m_failed_rolledback_instance_count_isValid = ::OpenAPI::fromJsonValue(m_failed_rolledback_instance_count, json[QString("failedRolledbackInstanceCount")]);
    m_failed_rolledback_instance_count_isSet = !json[QString("failedRolledbackInstanceCount")].isNull() && m_failed_rolledback_instance_count_isValid;

    m_rollback_error_isValid = ::OpenAPI::fromJsonValue(m_rollback_error, json[QString("rollbackError")]);
    m_rollback_error_isSet = !json[QString("rollbackError")].isNull() && m_rollback_error_isValid;

    m_successfully_rolledback_instance_count_isValid = ::OpenAPI::fromJsonValue(m_successfully_rolledback_instance_count, json[QString("successfullyRolledbackInstanceCount")]);
    m_successfully_rolledback_instance_count_isSet = !json[QString("successfullyRolledbackInstanceCount")].isNull() && m_successfully_rolledback_instance_count_isValid;
}

QString OAIRollbackStatusInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRollbackStatusInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_failed_rolledback_instance_count_isSet) {
        obj.insert(QString("failedRolledbackInstanceCount"), ::OpenAPI::toJsonValue(m_failed_rolledback_instance_count));
    }
    if (m_rollback_error.isSet()) {
        obj.insert(QString("rollbackError"), ::OpenAPI::toJsonValue(m_rollback_error));
    }
    if (m_successfully_rolledback_instance_count_isSet) {
        obj.insert(QString("successfullyRolledbackInstanceCount"), ::OpenAPI::toJsonValue(m_successfully_rolledback_instance_count));
    }
    return obj;
}

qint32 OAIRollbackStatusInfo::getFailedRolledbackInstanceCount() const {
    return m_failed_rolledback_instance_count;
}
void OAIRollbackStatusInfo::setFailedRolledbackInstanceCount(const qint32 &failed_rolledback_instance_count) {
    m_failed_rolledback_instance_count = failed_rolledback_instance_count;
    m_failed_rolledback_instance_count_isSet = true;
}

bool OAIRollbackStatusInfo::is_failed_rolledback_instance_count_Set() const{
    return m_failed_rolledback_instance_count_isSet;
}

bool OAIRollbackStatusInfo::is_failed_rolledback_instance_count_Valid() const{
    return m_failed_rolledback_instance_count_isValid;
}

OAIApiError OAIRollbackStatusInfo::getRollbackError() const {
    return m_rollback_error;
}
void OAIRollbackStatusInfo::setRollbackError(const OAIApiError &rollback_error) {
    m_rollback_error = rollback_error;
    m_rollback_error_isSet = true;
}

bool OAIRollbackStatusInfo::is_rollback_error_Set() const{
    return m_rollback_error_isSet;
}

bool OAIRollbackStatusInfo::is_rollback_error_Valid() const{
    return m_rollback_error_isValid;
}

qint32 OAIRollbackStatusInfo::getSuccessfullyRolledbackInstanceCount() const {
    return m_successfully_rolledback_instance_count;
}
void OAIRollbackStatusInfo::setSuccessfullyRolledbackInstanceCount(const qint32 &successfully_rolledback_instance_count) {
    m_successfully_rolledback_instance_count = successfully_rolledback_instance_count;
    m_successfully_rolledback_instance_count_isSet = true;
}

bool OAIRollbackStatusInfo::is_successfully_rolledback_instance_count_Set() const{
    return m_successfully_rolledback_instance_count_isSet;
}

bool OAIRollbackStatusInfo::is_successfully_rolledback_instance_count_Valid() const{
    return m_successfully_rolledback_instance_count_isValid;
}

bool OAIRollbackStatusInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_failed_rolledback_instance_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rollback_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_successfully_rolledback_instance_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRollbackStatusInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
