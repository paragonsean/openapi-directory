/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SubResource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes the properties of a Proximity Placement Group.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:49:36.564072-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProximityPlacementGroupProperties {
  public static final String SERIALIZED_NAME_AVAILABILITY_SETS = "availabilitySets";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_SETS)
  private List<SubResource> availabilitySets = new ArrayList<>();

  /**
   * Specifies the type of the proximity placement group. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Standard** : Co-locate resources within an Azure region or Availability Zone. &lt;br&gt;&lt;br&gt; **Ultra** : For future use.
   */
  @JsonAdapter(ProximityPlacementGroupTypeEnum.Adapter.class)
  public enum ProximityPlacementGroupTypeEnum {
    STANDARD("Standard"),
    
    ULTRA("Ultra");

    private String value;

    ProximityPlacementGroupTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProximityPlacementGroupTypeEnum fromValue(String value) {
      for (ProximityPlacementGroupTypeEnum b : ProximityPlacementGroupTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProximityPlacementGroupTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProximityPlacementGroupTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProximityPlacementGroupTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProximityPlacementGroupTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProximityPlacementGroupTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROXIMITY_PLACEMENT_GROUP_TYPE = "proximityPlacementGroupType";
  @SerializedName(SERIALIZED_NAME_PROXIMITY_PLACEMENT_GROUP_TYPE)
  private ProximityPlacementGroupTypeEnum proximityPlacementGroupType;

  public static final String SERIALIZED_NAME_VIRTUAL_MACHINE_SCALE_SETS = "virtualMachineScaleSets";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_MACHINE_SCALE_SETS)
  private List<SubResource> virtualMachineScaleSets = new ArrayList<>();

  public static final String SERIALIZED_NAME_VIRTUAL_MACHINES = "virtualMachines";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_MACHINES)
  private List<SubResource> virtualMachines = new ArrayList<>();

  public ProximityPlacementGroupProperties() {
  }

  public ProximityPlacementGroupProperties(
     List<SubResource> availabilitySets, 
     List<SubResource> virtualMachineScaleSets, 
     List<SubResource> virtualMachines
  ) {
    this();
    this.availabilitySets = availabilitySets;
    this.virtualMachineScaleSets = virtualMachineScaleSets;
    this.virtualMachines = virtualMachines;
  }

  /**
   * A list of references to all availability sets in the proximity placement group.
   * @return availabilitySets
   */
  @javax.annotation.Nullable
  public List<SubResource> getAvailabilitySets() {
    return availabilitySets;
  }



  public ProximityPlacementGroupProperties proximityPlacementGroupType(ProximityPlacementGroupTypeEnum proximityPlacementGroupType) {
    this.proximityPlacementGroupType = proximityPlacementGroupType;
    return this;
  }

  /**
   * Specifies the type of the proximity placement group. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Standard** : Co-locate resources within an Azure region or Availability Zone. &lt;br&gt;&lt;br&gt; **Ultra** : For future use.
   * @return proximityPlacementGroupType
   */
  @javax.annotation.Nullable
  public ProximityPlacementGroupTypeEnum getProximityPlacementGroupType() {
    return proximityPlacementGroupType;
  }

  public void setProximityPlacementGroupType(ProximityPlacementGroupTypeEnum proximityPlacementGroupType) {
    this.proximityPlacementGroupType = proximityPlacementGroupType;
  }


  /**
   * A list of references to all virtual machine scale sets in the proximity placement group.
   * @return virtualMachineScaleSets
   */
  @javax.annotation.Nullable
  public List<SubResource> getVirtualMachineScaleSets() {
    return virtualMachineScaleSets;
  }



  /**
   * A list of references to all virtual machines in the proximity placement group.
   * @return virtualMachines
   */
  @javax.annotation.Nullable
  public List<SubResource> getVirtualMachines() {
    return virtualMachines;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProximityPlacementGroupProperties proximityPlacementGroupProperties = (ProximityPlacementGroupProperties) o;
    return Objects.equals(this.availabilitySets, proximityPlacementGroupProperties.availabilitySets) &&
        Objects.equals(this.proximityPlacementGroupType, proximityPlacementGroupProperties.proximityPlacementGroupType) &&
        Objects.equals(this.virtualMachineScaleSets, proximityPlacementGroupProperties.virtualMachineScaleSets) &&
        Objects.equals(this.virtualMachines, proximityPlacementGroupProperties.virtualMachines);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilitySets, proximityPlacementGroupType, virtualMachineScaleSets, virtualMachines);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProximityPlacementGroupProperties {\n");
    sb.append("    availabilitySets: ").append(toIndentedString(availabilitySets)).append("\n");
    sb.append("    proximityPlacementGroupType: ").append(toIndentedString(proximityPlacementGroupType)).append("\n");
    sb.append("    virtualMachineScaleSets: ").append(toIndentedString(virtualMachineScaleSets)).append("\n");
    sb.append("    virtualMachines: ").append(toIndentedString(virtualMachines)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("availabilitySets");
    openapiFields.add("proximityPlacementGroupType");
    openapiFields.add("virtualMachineScaleSets");
    openapiFields.add("virtualMachines");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProximityPlacementGroupProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProximityPlacementGroupProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProximityPlacementGroupProperties is not found in the empty JSON string", ProximityPlacementGroupProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProximityPlacementGroupProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProximityPlacementGroupProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("availabilitySets") != null && !jsonObj.get("availabilitySets").isJsonNull()) {
        JsonArray jsonArrayavailabilitySets = jsonObj.getAsJsonArray("availabilitySets");
        if (jsonArrayavailabilitySets != null) {
          // ensure the json data is an array
          if (!jsonObj.get("availabilitySets").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `availabilitySets` to be an array in the JSON string but got `%s`", jsonObj.get("availabilitySets").toString()));
          }

          // validate the optional field `availabilitySets` (array)
          for (int i = 0; i < jsonArrayavailabilitySets.size(); i++) {
            SubResource.validateJsonElement(jsonArrayavailabilitySets.get(i));
          };
        }
      }
      if ((jsonObj.get("proximityPlacementGroupType") != null && !jsonObj.get("proximityPlacementGroupType").isJsonNull()) && !jsonObj.get("proximityPlacementGroupType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proximityPlacementGroupType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proximityPlacementGroupType").toString()));
      }
      // validate the optional field `proximityPlacementGroupType`
      if (jsonObj.get("proximityPlacementGroupType") != null && !jsonObj.get("proximityPlacementGroupType").isJsonNull()) {
        ProximityPlacementGroupTypeEnum.validateJsonElement(jsonObj.get("proximityPlacementGroupType"));
      }
      if (jsonObj.get("virtualMachineScaleSets") != null && !jsonObj.get("virtualMachineScaleSets").isJsonNull()) {
        JsonArray jsonArrayvirtualMachineScaleSets = jsonObj.getAsJsonArray("virtualMachineScaleSets");
        if (jsonArrayvirtualMachineScaleSets != null) {
          // ensure the json data is an array
          if (!jsonObj.get("virtualMachineScaleSets").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `virtualMachineScaleSets` to be an array in the JSON string but got `%s`", jsonObj.get("virtualMachineScaleSets").toString()));
          }

          // validate the optional field `virtualMachineScaleSets` (array)
          for (int i = 0; i < jsonArrayvirtualMachineScaleSets.size(); i++) {
            SubResource.validateJsonElement(jsonArrayvirtualMachineScaleSets.get(i));
          };
        }
      }
      if (jsonObj.get("virtualMachines") != null && !jsonObj.get("virtualMachines").isJsonNull()) {
        JsonArray jsonArrayvirtualMachines = jsonObj.getAsJsonArray("virtualMachines");
        if (jsonArrayvirtualMachines != null) {
          // ensure the json data is an array
          if (!jsonObj.get("virtualMachines").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `virtualMachines` to be an array in the JSON string but got `%s`", jsonObj.get("virtualMachines").toString()));
          }

          // validate the optional field `virtualMachines` (array)
          for (int i = 0; i < jsonArrayvirtualMachines.size(); i++) {
            SubResource.validateJsonElement(jsonArrayvirtualMachines.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProximityPlacementGroupProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProximityPlacementGroupProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProximityPlacementGroupProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProximityPlacementGroupProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ProximityPlacementGroupProperties>() {
           @Override
           public void write(JsonWriter out, ProximityPlacementGroupProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProximityPlacementGroupProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProximityPlacementGroupProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProximityPlacementGroupProperties
   * @throws IOException if the JSON string is invalid with respect to ProximityPlacementGroupProperties
   */
  public static ProximityPlacementGroupProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProximityPlacementGroupProperties.class);
  }

  /**
   * Convert an instance of ProximityPlacementGroupProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

