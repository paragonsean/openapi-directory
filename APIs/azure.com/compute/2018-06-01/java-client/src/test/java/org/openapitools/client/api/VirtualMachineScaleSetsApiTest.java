/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RecoveryWalkResponse;
import org.openapitools.client.model.VirtualMachineScaleSet;
import org.openapitools.client.model.VirtualMachineScaleSetInstanceView;
import org.openapitools.client.model.VirtualMachineScaleSetListOSUpgradeHistory;
import org.openapitools.client.model.VirtualMachineScaleSetListResult;
import org.openapitools.client.model.VirtualMachineScaleSetListSkusResult;
import org.openapitools.client.model.VirtualMachineScaleSetListWithLinkResult;
import org.openapitools.client.model.VirtualMachineScaleSetReimageParameters;
import org.openapitools.client.model.VirtualMachineScaleSetUpdate;
import org.openapitools.client.model.VirtualMachineScaleSetVMInstanceIDs;
import org.openapitools.client.model.VirtualMachineScaleSetVMInstanceRequiredIDs;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VirtualMachineScaleSetsApi
 */
@Disabled
public class VirtualMachineScaleSetsApiTest {

    private final VirtualMachineScaleSetsApi api = new VirtualMachineScaleSetsApi();

    /**
     * Create or update a VM scale set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSet parameters = null;
        VirtualMachineScaleSet response = api.virtualMachineScaleSetsCreateOrUpdate(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsDeallocateTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = null;
        api.virtualMachineScaleSetsDeallocate(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
        // TODO: test validations
    }

    /**
     * Deletes a VM scale set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.virtualMachineScaleSetsDelete(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Deletes virtual machines in a VM scale set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsDeleteInstancesTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs = null;
        api.virtualMachineScaleSetsDeleteInstances(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
        // TODO: test validations
    }

    /**
     * Manual platform update domain walk to update virtual machines in a service fabric virtual machine scale set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Integer platformUpdateDomain = null;
        RecoveryWalkResponse response = api.virtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalk(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, platformUpdateDomain);
        // TODO: test validations
    }

    /**
     * Display information about a virtual machine scale set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsGetTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSet response = api.virtualMachineScaleSetsGet(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the status of a VM scale set instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsGetInstanceViewTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetInstanceView response = api.virtualMachineScaleSetsGetInstanceView(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets list of OS upgrades on a VM scale set instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsGetOSUpgradeHistoryTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetListOSUpgradeHistory response = api.virtualMachineScaleSetsGetOSUpgradeHistory(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a list of all VM scale sets under a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetListResult response = api.virtualMachineScaleSetsList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink is null to fetch all the VM Scale Sets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetListWithLinkResult response = api.virtualMachineScaleSetsListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsListSkusTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetListSkusResult response = api.virtualMachineScaleSetsListSkus(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsPerformMaintenanceTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = null;
        api.virtualMachineScaleSetsPerformMaintenance(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
        // TODO: test validations
    }

    /**
     * Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsPowerOffTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = null;
        api.virtualMachineScaleSetsPowerOff(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
        // TODO: test validations
    }

    /**
     * Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsRedeployTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = null;
        api.virtualMachineScaleSetsRedeploy(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
        // TODO: test validations
    }

    /**
     * Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don&#39;t have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsReimageTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput = null;
        api.virtualMachineScaleSetsReimage(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmScaleSetReimageInput);
        // TODO: test validations
    }

    /**
     * Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsReimageAllTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = null;
        api.virtualMachineScaleSetsReimageAll(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
        // TODO: test validations
    }

    /**
     * Restarts one or more virtual machines in a VM scale set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsRestartTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = null;
        api.virtualMachineScaleSetsRestart(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
        // TODO: test validations
    }

    /**
     * Starts one or more virtual machines in a VM scale set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsStartTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = null;
        api.virtualMachineScaleSetsStart(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
        // TODO: test validations
    }

    /**
     * Update a VM scale set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetUpdate parameters = null;
        VirtualMachineScaleSet response = api.virtualMachineScaleSetsUpdate(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachineScaleSetsUpdateInstancesTest() throws ApiException {
        String resourceGroupName = null;
        String vmScaleSetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs = null;
        api.virtualMachineScaleSetsUpdateInstances(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs);
        // TODO: test validations
    }

}
