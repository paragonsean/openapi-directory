/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AvailabilitySet;
import org.openapitools.client.model.AvailabilitySetListResult;
import org.openapitools.client.model.AvailabilitySetUpdate;
import org.openapitools.client.model.VirtualMachineSizeListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AvailabilitySetsApi
 */
@Disabled
public class AvailabilitySetsApiTest {

    private final AvailabilitySetsApi api = new AvailabilitySetsApi();

    /**
     * Create or update an availability set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void availabilitySetsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String availabilitySetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        AvailabilitySet parameters = null;
        AvailabilitySet response = api.availabilitySetsCreateOrUpdate(resourceGroupName, availabilitySetName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Delete an availability set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void availabilitySetsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String availabilitySetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.availabilitySetsDelete(resourceGroupName, availabilitySetName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Retrieves information about an availability set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void availabilitySetsGetTest() throws ApiException {
        String resourceGroupName = null;
        String availabilitySetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        AvailabilitySet response = api.availabilitySetsGet(resourceGroupName, availabilitySetName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all availability sets in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void availabilitySetsListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        AvailabilitySetListResult response = api.availabilitySetsList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all available virtual machine sizes that can be used to create a new virtual machine in an existing availability set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void availabilitySetsListAvailableSizesTest() throws ApiException {
        String resourceGroupName = null;
        String availabilitySetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        VirtualMachineSizeListResult response = api.availabilitySetsListAvailableSizes(resourceGroupName, availabilitySetName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all availability sets in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void availabilitySetsListBySubscriptionTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String $expand = null;
        AvailabilitySetListResult response = api.availabilitySetsListBySubscription(apiVersion, subscriptionId, $expand);
        // TODO: test validations
    }

    /**
     * Update an availability set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void availabilitySetsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String availabilitySetName = null;
        String apiVersion = null;
        String subscriptionId = null;
        AvailabilitySetUpdate parameters = null;
        AvailabilitySet response = api.availabilitySetsUpdate(resourceGroupName, availabilitySetName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
