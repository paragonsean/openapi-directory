# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sub_resource import SubResource
from openapi_server.models.virtual_machine_scale_set_ip_configuration import VirtualMachineScaleSetIPConfiguration
from openapi_server.models.virtual_machine_scale_set_network_configuration_dns_settings import VirtualMachineScaleSetNetworkConfigurationDnsSettings
from openapi_server import util


class VirtualMachineScaleSetNetworkConfigurationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dns_settings: VirtualMachineScaleSetNetworkConfigurationDnsSettings=None, enable_accelerated_networking: bool=None, enable_ip_forwarding: bool=None, ip_configurations: List[VirtualMachineScaleSetIPConfiguration]=None, network_security_group: SubResource=None, primary: bool=None):
        """VirtualMachineScaleSetNetworkConfigurationProperties - a model defined in OpenAPI

        :param dns_settings: The dns_settings of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :param enable_accelerated_networking: The enable_accelerated_networking of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :param enable_ip_forwarding: The enable_ip_forwarding of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :param ip_configurations: The ip_configurations of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :param network_security_group: The network_security_group of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :param primary: The primary of this VirtualMachineScaleSetNetworkConfigurationProperties.
        """
        self.openapi_types = {
            'dns_settings': VirtualMachineScaleSetNetworkConfigurationDnsSettings,
            'enable_accelerated_networking': bool,
            'enable_ip_forwarding': bool,
            'ip_configurations': List[VirtualMachineScaleSetIPConfiguration],
            'network_security_group': SubResource,
            'primary': bool
        }

        self.attribute_map = {
            'dns_settings': 'dnsSettings',
            'enable_accelerated_networking': 'enableAcceleratedNetworking',
            'enable_ip_forwarding': 'enableIPForwarding',
            'ip_configurations': 'ipConfigurations',
            'network_security_group': 'networkSecurityGroup',
            'primary': 'primary'
        }

        self._dns_settings = dns_settings
        self._enable_accelerated_networking = enable_accelerated_networking
        self._enable_ip_forwarding = enable_ip_forwarding
        self._ip_configurations = ip_configurations
        self._network_security_group = network_security_group
        self._primary = primary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineScaleSetNetworkConfigurationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineScaleSetNetworkConfigurationProperties of this VirtualMachineScaleSetNetworkConfigurationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dns_settings(self):
        """Gets the dns_settings of this VirtualMachineScaleSetNetworkConfigurationProperties.


        :return: The dns_settings of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :rtype: VirtualMachineScaleSetNetworkConfigurationDnsSettings
        """
        return self._dns_settings

    @dns_settings.setter
    def dns_settings(self, dns_settings):
        """Sets the dns_settings of this VirtualMachineScaleSetNetworkConfigurationProperties.


        :param dns_settings: The dns_settings of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :type dns_settings: VirtualMachineScaleSetNetworkConfigurationDnsSettings
        """

        self._dns_settings = dns_settings

    @property
    def enable_accelerated_networking(self):
        """Gets the enable_accelerated_networking of this VirtualMachineScaleSetNetworkConfigurationProperties.

        Specifies whether the network interface is accelerated networking-enabled.

        :return: The enable_accelerated_networking of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :rtype: bool
        """
        return self._enable_accelerated_networking

    @enable_accelerated_networking.setter
    def enable_accelerated_networking(self, enable_accelerated_networking):
        """Sets the enable_accelerated_networking of this VirtualMachineScaleSetNetworkConfigurationProperties.

        Specifies whether the network interface is accelerated networking-enabled.

        :param enable_accelerated_networking: The enable_accelerated_networking of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :type enable_accelerated_networking: bool
        """

        self._enable_accelerated_networking = enable_accelerated_networking

    @property
    def enable_ip_forwarding(self):
        """Gets the enable_ip_forwarding of this VirtualMachineScaleSetNetworkConfigurationProperties.

        Whether IP forwarding enabled on this NIC.

        :return: The enable_ip_forwarding of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :rtype: bool
        """
        return self._enable_ip_forwarding

    @enable_ip_forwarding.setter
    def enable_ip_forwarding(self, enable_ip_forwarding):
        """Sets the enable_ip_forwarding of this VirtualMachineScaleSetNetworkConfigurationProperties.

        Whether IP forwarding enabled on this NIC.

        :param enable_ip_forwarding: The enable_ip_forwarding of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :type enable_ip_forwarding: bool
        """

        self._enable_ip_forwarding = enable_ip_forwarding

    @property
    def ip_configurations(self):
        """Gets the ip_configurations of this VirtualMachineScaleSetNetworkConfigurationProperties.

        Specifies the IP configurations of the network interface.

        :return: The ip_configurations of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :rtype: List[VirtualMachineScaleSetIPConfiguration]
        """
        return self._ip_configurations

    @ip_configurations.setter
    def ip_configurations(self, ip_configurations):
        """Sets the ip_configurations of this VirtualMachineScaleSetNetworkConfigurationProperties.

        Specifies the IP configurations of the network interface.

        :param ip_configurations: The ip_configurations of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :type ip_configurations: List[VirtualMachineScaleSetIPConfiguration]
        """
        if ip_configurations is None:
            raise ValueError("Invalid value for `ip_configurations`, must not be `None`")

        self._ip_configurations = ip_configurations

    @property
    def network_security_group(self):
        """Gets the network_security_group of this VirtualMachineScaleSetNetworkConfigurationProperties.


        :return: The network_security_group of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :rtype: SubResource
        """
        return self._network_security_group

    @network_security_group.setter
    def network_security_group(self, network_security_group):
        """Sets the network_security_group of this VirtualMachineScaleSetNetworkConfigurationProperties.


        :param network_security_group: The network_security_group of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :type network_security_group: SubResource
        """

        self._network_security_group = network_security_group

    @property
    def primary(self):
        """Gets the primary of this VirtualMachineScaleSetNetworkConfigurationProperties.

        Specifies the primary network interface in case the virtual machine has more than 1 network interface.

        :return: The primary of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :rtype: bool
        """
        return self._primary

    @primary.setter
    def primary(self, primary):
        """Sets the primary of this VirtualMachineScaleSetNetworkConfigurationProperties.

        Specifies the primary network interface in case the virtual machine has more than 1 network interface.

        :param primary: The primary of this VirtualMachineScaleSetNetworkConfigurationProperties.
        :type primary: bool
        """

        self._primary = primary
