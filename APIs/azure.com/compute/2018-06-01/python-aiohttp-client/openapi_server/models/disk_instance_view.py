# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.disk_encryption_settings import DiskEncryptionSettings
from openapi_server.models.instance_view_status import InstanceViewStatus
from openapi_server import util


class DiskInstanceView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encryption_settings: List[DiskEncryptionSettings]=None, name: str=None, statuses: List[InstanceViewStatus]=None):
        """DiskInstanceView - a model defined in OpenAPI

        :param encryption_settings: The encryption_settings of this DiskInstanceView.
        :param name: The name of this DiskInstanceView.
        :param statuses: The statuses of this DiskInstanceView.
        """
        self.openapi_types = {
            'encryption_settings': List[DiskEncryptionSettings],
            'name': str,
            'statuses': List[InstanceViewStatus]
        }

        self.attribute_map = {
            'encryption_settings': 'encryptionSettings',
            'name': 'name',
            'statuses': 'statuses'
        }

        self._encryption_settings = encryption_settings
        self._name = name
        self._statuses = statuses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiskInstanceView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiskInstanceView of this DiskInstanceView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encryption_settings(self):
        """Gets the encryption_settings of this DiskInstanceView.

        Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15

        :return: The encryption_settings of this DiskInstanceView.
        :rtype: List[DiskEncryptionSettings]
        """
        return self._encryption_settings

    @encryption_settings.setter
    def encryption_settings(self, encryption_settings):
        """Sets the encryption_settings of this DiskInstanceView.

        Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15

        :param encryption_settings: The encryption_settings of this DiskInstanceView.
        :type encryption_settings: List[DiskEncryptionSettings]
        """

        self._encryption_settings = encryption_settings

    @property
    def name(self):
        """Gets the name of this DiskInstanceView.

        The disk name.

        :return: The name of this DiskInstanceView.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DiskInstanceView.

        The disk name.

        :param name: The name of this DiskInstanceView.
        :type name: str
        """

        self._name = name

    @property
    def statuses(self):
        """Gets the statuses of this DiskInstanceView.

        The resource status information.

        :return: The statuses of this DiskInstanceView.
        :rtype: List[InstanceViewStatus]
        """
        return self._statuses

    @statuses.setter
    def statuses(self, statuses):
        """Sets the statuses of this DiskInstanceView.

        The resource status information.

        :param statuses: The statuses of this DiskInstanceView.
        :type statuses: List[InstanceViewStatus]
        """

        self._statuses = statuses
