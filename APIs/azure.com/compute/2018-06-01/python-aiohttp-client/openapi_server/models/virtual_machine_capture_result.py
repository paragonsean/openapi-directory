# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VirtualMachineCaptureResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _schema: str=None, content_version: str=None, parameters: object=None, resources: List[object]=None, id: str=None):
        """VirtualMachineCaptureResult - a model defined in OpenAPI

        :param _schema: The _schema of this VirtualMachineCaptureResult.
        :param content_version: The content_version of this VirtualMachineCaptureResult.
        :param parameters: The parameters of this VirtualMachineCaptureResult.
        :param resources: The resources of this VirtualMachineCaptureResult.
        :param id: The id of this VirtualMachineCaptureResult.
        """
        self.openapi_types = {
            '_schema': str,
            'content_version': str,
            'parameters': object,
            'resources': List[object],
            'id': str
        }

        self.attribute_map = {
            '_schema': '$schema',
            'content_version': 'contentVersion',
            'parameters': 'parameters',
            'resources': 'resources',
            'id': 'id'
        }

        self.__schema = _schema
        self._content_version = content_version
        self._parameters = parameters
        self._resources = resources
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineCaptureResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineCaptureResult of this VirtualMachineCaptureResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _schema(self):
        """Gets the _schema of this VirtualMachineCaptureResult.

        the schema of the captured virtual machine

        :return: The _schema of this VirtualMachineCaptureResult.
        :rtype: str
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this VirtualMachineCaptureResult.

        the schema of the captured virtual machine

        :param _schema: The _schema of this VirtualMachineCaptureResult.
        :type _schema: str
        """

        self.__schema = _schema

    @property
    def content_version(self):
        """Gets the content_version of this VirtualMachineCaptureResult.

        the version of the content

        :return: The content_version of this VirtualMachineCaptureResult.
        :rtype: str
        """
        return self._content_version

    @content_version.setter
    def content_version(self, content_version):
        """Sets the content_version of this VirtualMachineCaptureResult.

        the version of the content

        :param content_version: The content_version of this VirtualMachineCaptureResult.
        :type content_version: str
        """

        self._content_version = content_version

    @property
    def parameters(self):
        """Gets the parameters of this VirtualMachineCaptureResult.

        parameters of the captured virtual machine

        :return: The parameters of this VirtualMachineCaptureResult.
        :rtype: object
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this VirtualMachineCaptureResult.

        parameters of the captured virtual machine

        :param parameters: The parameters of this VirtualMachineCaptureResult.
        :type parameters: object
        """

        self._parameters = parameters

    @property
    def resources(self):
        """Gets the resources of this VirtualMachineCaptureResult.

        a list of resource items of the captured virtual machine

        :return: The resources of this VirtualMachineCaptureResult.
        :rtype: List[object]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this VirtualMachineCaptureResult.

        a list of resource items of the captured virtual machine

        :param resources: The resources of this VirtualMachineCaptureResult.
        :type resources: List[object]
        """

        self._resources = resources

    @property
    def id(self):
        """Gets the id of this VirtualMachineCaptureResult.

        Resource Id

        :return: The id of this VirtualMachineCaptureResult.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VirtualMachineCaptureResult.

        Resource Id

        :param id: The id of this VirtualMachineCaptureResult.
        :type id: str
        """

        self._id = id
