/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VirtualMachineScaleSetExtension from '../model/VirtualMachineScaleSetExtension';
import VirtualMachineScaleSetExtensionListResult from '../model/VirtualMachineScaleSetExtensionListResult';

/**
* VirtualMachineScaleSetExtensions service.
* @module api/VirtualMachineScaleSetExtensionsApi
* @version 2018-06-01
*/
export default class VirtualMachineScaleSetExtensionsApi {

    /**
    * Constructs a new VirtualMachineScaleSetExtensionsApi. 
    * @alias module:api/VirtualMachineScaleSetExtensionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualMachineScaleSetExtensionsCreateOrUpdate operation.
     * @callback module:api/VirtualMachineScaleSetExtensionsApi~virtualMachineScaleSetExtensionsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSetExtension} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to create or update an extension.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set where the extension should be create or updated.
     * @param {String} vmssExtensionName The name of the VM scale set extension.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualMachineScaleSetExtension} extensionParameters Parameters supplied to the Create VM scale set Extension operation.
     * @param {module:api/VirtualMachineScaleSetExtensionsApi~virtualMachineScaleSetExtensionsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSetExtension}
     */
    virtualMachineScaleSetExtensionsCreateOrUpdate(resourceGroupName, vmScaleSetName, vmssExtensionName, apiVersion, subscriptionId, extensionParameters, callback) {
      let postBody = extensionParameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetExtensionsCreateOrUpdate");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetExtensionsCreateOrUpdate");
      }
      // verify the required parameter 'vmssExtensionName' is set
      if (vmssExtensionName === undefined || vmssExtensionName === null) {
        throw new Error("Missing the required parameter 'vmssExtensionName' when calling virtualMachineScaleSetExtensionsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetExtensionsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetExtensionsCreateOrUpdate");
      }
      // verify the required parameter 'extensionParameters' is set
      if (extensionParameters === undefined || extensionParameters === null) {
        throw new Error("Missing the required parameter 'extensionParameters' when calling virtualMachineScaleSetExtensionsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'vmssExtensionName': vmssExtensionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSetExtension;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetExtensionsDelete operation.
     * @callback module:api/VirtualMachineScaleSetExtensionsApi~virtualMachineScaleSetExtensionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to delete the extension.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set where the extension should be deleted.
     * @param {String} vmssExtensionName The name of the VM scale set extension.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetExtensionsApi~virtualMachineScaleSetExtensionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualMachineScaleSetExtensionsDelete(resourceGroupName, vmScaleSetName, vmssExtensionName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetExtensionsDelete");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetExtensionsDelete");
      }
      // verify the required parameter 'vmssExtensionName' is set
      if (vmssExtensionName === undefined || vmssExtensionName === null) {
        throw new Error("Missing the required parameter 'vmssExtensionName' when calling virtualMachineScaleSetExtensionsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetExtensionsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetExtensionsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'vmssExtensionName': vmssExtensionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetExtensionsGet operation.
     * @callback module:api/VirtualMachineScaleSetExtensionsApi~virtualMachineScaleSetExtensionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSetExtension} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to get the extension.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set containing the extension.
     * @param {String} vmssExtensionName The name of the VM scale set extension.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [expand] The expand expression to apply on the operation.
     * @param {module:api/VirtualMachineScaleSetExtensionsApi~virtualMachineScaleSetExtensionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSetExtension}
     */
    virtualMachineScaleSetExtensionsGet(resourceGroupName, vmScaleSetName, vmssExtensionName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetExtensionsGet");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetExtensionsGet");
      }
      // verify the required parameter 'vmssExtensionName' is set
      if (vmssExtensionName === undefined || vmssExtensionName === null) {
        throw new Error("Missing the required parameter 'vmssExtensionName' when calling virtualMachineScaleSetExtensionsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetExtensionsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetExtensionsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'vmssExtensionName': vmssExtensionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$expand': opts['expand'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSetExtension;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetExtensionsList operation.
     * @callback module:api/VirtualMachineScaleSetExtensionsApi~virtualMachineScaleSetExtensionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSetExtensionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of all extensions in a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set containing the extension.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetExtensionsApi~virtualMachineScaleSetExtensionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSetExtensionListResult}
     */
    virtualMachineScaleSetExtensionsList(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetExtensionsList");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetExtensionsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetExtensionsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetExtensionsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSetExtensionListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
