/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VirtualMachineExtension from '../model/VirtualMachineExtension';
import VirtualMachineExtensionUpdate from '../model/VirtualMachineExtensionUpdate';
import VirtualMachineExtensionsListResult from '../model/VirtualMachineExtensionsListResult';

/**
* VirtualMachineExtensions service.
* @module api/VirtualMachineExtensionsApi
* @version 2018-06-01
*/
export default class VirtualMachineExtensionsApi {

    /**
    * Constructs a new VirtualMachineExtensionsApi. 
    * @alias module:api/VirtualMachineExtensionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualMachineExtensionsCreateOrUpdate operation.
     * @callback module:api/VirtualMachineExtensionsApi~virtualMachineExtensionsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineExtension} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to create or update the extension.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine where the extension should be created or updated.
     * @param {String} vmExtensionName The name of the virtual machine extension.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualMachineExtension} extensionParameters Parameters supplied to the Create Virtual Machine Extension operation.
     * @param {module:api/VirtualMachineExtensionsApi~virtualMachineExtensionsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineExtension}
     */
    virtualMachineExtensionsCreateOrUpdate(resourceGroupName, vmName, vmExtensionName, apiVersion, subscriptionId, extensionParameters, callback) {
      let postBody = extensionParameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineExtensionsCreateOrUpdate");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachineExtensionsCreateOrUpdate");
      }
      // verify the required parameter 'vmExtensionName' is set
      if (vmExtensionName === undefined || vmExtensionName === null) {
        throw new Error("Missing the required parameter 'vmExtensionName' when calling virtualMachineExtensionsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineExtensionsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineExtensionsCreateOrUpdate");
      }
      // verify the required parameter 'extensionParameters' is set
      if (extensionParameters === undefined || extensionParameters === null) {
        throw new Error("Missing the required parameter 'extensionParameters' when calling virtualMachineExtensionsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'vmExtensionName': vmExtensionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualMachineExtension;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineExtensionsDelete operation.
     * @callback module:api/VirtualMachineExtensionsApi~virtualMachineExtensionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to delete the extension.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine where the extension should be deleted.
     * @param {String} vmExtensionName The name of the virtual machine extension.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineExtensionsApi~virtualMachineExtensionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualMachineExtensionsDelete(resourceGroupName, vmName, vmExtensionName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineExtensionsDelete");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachineExtensionsDelete");
      }
      // verify the required parameter 'vmExtensionName' is set
      if (vmExtensionName === undefined || vmExtensionName === null) {
        throw new Error("Missing the required parameter 'vmExtensionName' when calling virtualMachineExtensionsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineExtensionsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineExtensionsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'vmExtensionName': vmExtensionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineExtensionsGet operation.
     * @callback module:api/VirtualMachineExtensionsApi~virtualMachineExtensionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineExtension} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to get the extension.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine containing the extension.
     * @param {String} vmExtensionName The name of the virtual machine extension.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [expand] The expand expression to apply on the operation.
     * @param {module:api/VirtualMachineExtensionsApi~virtualMachineExtensionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineExtension}
     */
    virtualMachineExtensionsGet(resourceGroupName, vmName, vmExtensionName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineExtensionsGet");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachineExtensionsGet");
      }
      // verify the required parameter 'vmExtensionName' is set
      if (vmExtensionName === undefined || vmExtensionName === null) {
        throw new Error("Missing the required parameter 'vmExtensionName' when calling virtualMachineExtensionsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineExtensionsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineExtensionsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'vmExtensionName': vmExtensionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$expand': opts['expand'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineExtension;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineExtensionsList operation.
     * @callback module:api/VirtualMachineExtensionsApi~virtualMachineExtensionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineExtensionsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to get all extensions of a Virtual Machine.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine containing the extension.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [expand] The expand expression to apply on the operation.
     * @param {module:api/VirtualMachineExtensionsApi~virtualMachineExtensionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineExtensionsListResult}
     */
    virtualMachineExtensionsList(resourceGroupName, vmName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineExtensionsList");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachineExtensionsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineExtensionsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineExtensionsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$expand': opts['expand'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineExtensionsListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineExtensionsUpdate operation.
     * @callback module:api/VirtualMachineExtensionsApi~virtualMachineExtensionsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineExtension} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to update the extension.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine where the extension should be updated.
     * @param {String} vmExtensionName The name of the virtual machine extension.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualMachineExtensionUpdate} extensionParameters Parameters supplied to the Update Virtual Machine Extension operation.
     * @param {module:api/VirtualMachineExtensionsApi~virtualMachineExtensionsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineExtension}
     */
    virtualMachineExtensionsUpdate(resourceGroupName, vmName, vmExtensionName, apiVersion, subscriptionId, extensionParameters, callback) {
      let postBody = extensionParameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineExtensionsUpdate");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachineExtensionsUpdate");
      }
      // verify the required parameter 'vmExtensionName' is set
      if (vmExtensionName === undefined || vmExtensionName === null) {
        throw new Error("Missing the required parameter 'vmExtensionName' when calling virtualMachineExtensionsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineExtensionsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineExtensionsUpdate");
      }
      // verify the required parameter 'extensionParameters' is set
      if (extensionParameters === undefined || extensionParameters === null) {
        throw new Error("Missing the required parameter 'extensionParameters' when calling virtualMachineExtensionsUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'vmExtensionName': vmExtensionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualMachineExtension;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
