/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Caching from './Caching';
import CreateOption from './CreateOption';
import VirtualMachineScaleSetManagedDiskParameters from './VirtualMachineScaleSetManagedDiskParameters';

/**
 * The VirtualMachineScaleSetDataDisk model module.
 * @module model/VirtualMachineScaleSetDataDisk
 * @version 2018-10-01
 */
class VirtualMachineScaleSetDataDisk {
    /**
     * Constructs a new <code>VirtualMachineScaleSetDataDisk</code>.
     * Describes a virtual machine scale set data disk.
     * @alias module:model/VirtualMachineScaleSetDataDisk
     * @param createOption {module:model/CreateOption} 
     * @param lun {Number} Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
     */
    constructor(createOption, lun) { 
        
        VirtualMachineScaleSetDataDisk.initialize(this, createOption, lun);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createOption, lun) { 
        obj['createOption'] = createOption;
        obj['lun'] = lun;
    }

    /**
     * Constructs a <code>VirtualMachineScaleSetDataDisk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VirtualMachineScaleSetDataDisk} obj Optional instance to populate.
     * @return {module:model/VirtualMachineScaleSetDataDisk} The populated <code>VirtualMachineScaleSetDataDisk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VirtualMachineScaleSetDataDisk();

            if (data.hasOwnProperty('caching')) {
                obj['caching'] = Caching.constructFromObject(data['caching']);
            }
            if (data.hasOwnProperty('createOption')) {
                obj['createOption'] = CreateOption.constructFromObject(data['createOption']);
            }
            if (data.hasOwnProperty('diskSizeGB')) {
                obj['diskSizeGB'] = ApiClient.convertToType(data['diskSizeGB'], 'Number');
            }
            if (data.hasOwnProperty('lun')) {
                obj['lun'] = ApiClient.convertToType(data['lun'], 'Number');
            }
            if (data.hasOwnProperty('managedDisk')) {
                obj['managedDisk'] = VirtualMachineScaleSetManagedDiskParameters.constructFromObject(data['managedDisk']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('writeAcceleratorEnabled')) {
                obj['writeAcceleratorEnabled'] = ApiClient.convertToType(data['writeAcceleratorEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VirtualMachineScaleSetDataDisk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VirtualMachineScaleSetDataDisk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VirtualMachineScaleSetDataDisk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `managedDisk`
        if (data['managedDisk']) { // data not null
          VirtualMachineScaleSetManagedDiskParameters.validateJSON(data['managedDisk']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

VirtualMachineScaleSetDataDisk.RequiredProperties = ["createOption", "lun"];

/**
 * @member {module:model/Caching} caching
 */
VirtualMachineScaleSetDataDisk.prototype['caching'] = undefined;

/**
 * @member {module:model/CreateOption} createOption
 */
VirtualMachineScaleSetDataDisk.prototype['createOption'] = undefined;

/**
 * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
 * @member {Number} diskSizeGB
 */
VirtualMachineScaleSetDataDisk.prototype['diskSizeGB'] = undefined;

/**
 * Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
 * @member {Number} lun
 */
VirtualMachineScaleSetDataDisk.prototype['lun'] = undefined;

/**
 * @member {module:model/VirtualMachineScaleSetManagedDiskParameters} managedDisk
 */
VirtualMachineScaleSetDataDisk.prototype['managedDisk'] = undefined;

/**
 * The disk name.
 * @member {String} name
 */
VirtualMachineScaleSetDataDisk.prototype['name'] = undefined;

/**
 * Specifies whether writeAccelerator should be enabled or disabled on the disk.
 * @member {Boolean} writeAcceleratorEnabled
 */
VirtualMachineScaleSetDataDisk.prototype['writeAcceleratorEnabled'] = undefined;






export default VirtualMachineScaleSetDataDisk;

