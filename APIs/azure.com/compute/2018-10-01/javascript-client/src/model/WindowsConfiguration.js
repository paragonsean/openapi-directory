/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdditionalUnattendContent from './AdditionalUnattendContent';
import WinRMConfiguration from './WinRMConfiguration';

/**
 * The WindowsConfiguration model module.
 * @module model/WindowsConfiguration
 * @version 2018-10-01
 */
class WindowsConfiguration {
    /**
     * Constructs a new <code>WindowsConfiguration</code>.
     * Specifies Windows operating system settings on the virtual machine.
     * @alias module:model/WindowsConfiguration
     */
    constructor() { 
        
        WindowsConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WindowsConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WindowsConfiguration} obj Optional instance to populate.
     * @return {module:model/WindowsConfiguration} The populated <code>WindowsConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WindowsConfiguration();

            if (data.hasOwnProperty('additionalUnattendContent')) {
                obj['additionalUnattendContent'] = ApiClient.convertToType(data['additionalUnattendContent'], [AdditionalUnattendContent]);
            }
            if (data.hasOwnProperty('enableAutomaticUpdates')) {
                obj['enableAutomaticUpdates'] = ApiClient.convertToType(data['enableAutomaticUpdates'], 'Boolean');
            }
            if (data.hasOwnProperty('provisionVMAgent')) {
                obj['provisionVMAgent'] = ApiClient.convertToType(data['provisionVMAgent'], 'Boolean');
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
            }
            if (data.hasOwnProperty('winRM')) {
                obj['winRM'] = WinRMConfiguration.constructFromObject(data['winRM']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WindowsConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WindowsConfiguration</code>.
     */
    static validateJSON(data) {
        if (data['additionalUnattendContent']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['additionalUnattendContent'])) {
                throw new Error("Expected the field `additionalUnattendContent` to be an array in the JSON data but got " + data['additionalUnattendContent']);
            }
            // validate the optional field `additionalUnattendContent` (array)
            for (const item of data['additionalUnattendContent']) {
                AdditionalUnattendContent.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['timeZone'] && !(typeof data['timeZone'] === 'string' || data['timeZone'] instanceof String)) {
            throw new Error("Expected the field `timeZone` to be a primitive type in the JSON string but got " + data['timeZone']);
        }
        // validate the optional field `winRM`
        if (data['winRM']) { // data not null
          WinRMConfiguration.validateJSON(data['winRM']);
        }

        return true;
    }


}



/**
 * Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
 * @member {Array.<module:model/AdditionalUnattendContent>} additionalUnattendContent
 */
WindowsConfiguration.prototype['additionalUnattendContent'] = undefined;

/**
 * Indicates whether virtual machine is enabled for automatic Windows updates. Default value is true. <br><br> For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.
 * @member {Boolean} enableAutomaticUpdates
 */
WindowsConfiguration.prototype['enableAutomaticUpdates'] = undefined;

/**
 * Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
 * @member {Boolean} provisionVMAgent
 */
WindowsConfiguration.prototype['provisionVMAgent'] = undefined;

/**
 * Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\"
 * @member {String} timeZone
 */
WindowsConfiguration.prototype['timeZone'] = undefined;

/**
 * @member {module:model/WinRMConfiguration} winRM
 */
WindowsConfiguration.prototype['winRM'] = undefined;






export default WindowsConfiguration;

