# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.linux_configuration import LinuxConfiguration
from openapi_server.models.vault_secret_group import VaultSecretGroup
from openapi_server.models.windows_configuration import WindowsConfiguration
from openapi_server import util


class VirtualMachineScaleSetUpdateOSProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_data: str=None, linux_configuration: LinuxConfiguration=None, secrets: List[VaultSecretGroup]=None, windows_configuration: WindowsConfiguration=None):
        """VirtualMachineScaleSetUpdateOSProfile - a model defined in OpenAPI

        :param custom_data: The custom_data of this VirtualMachineScaleSetUpdateOSProfile.
        :param linux_configuration: The linux_configuration of this VirtualMachineScaleSetUpdateOSProfile.
        :param secrets: The secrets of this VirtualMachineScaleSetUpdateOSProfile.
        :param windows_configuration: The windows_configuration of this VirtualMachineScaleSetUpdateOSProfile.
        """
        self.openapi_types = {
            'custom_data': str,
            'linux_configuration': LinuxConfiguration,
            'secrets': List[VaultSecretGroup],
            'windows_configuration': WindowsConfiguration
        }

        self.attribute_map = {
            'custom_data': 'customData',
            'linux_configuration': 'linuxConfiguration',
            'secrets': 'secrets',
            'windows_configuration': 'windowsConfiguration'
        }

        self._custom_data = custom_data
        self._linux_configuration = linux_configuration
        self._secrets = secrets
        self._windows_configuration = windows_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineScaleSetUpdateOSProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineScaleSetUpdateOSProfile of this VirtualMachineScaleSetUpdateOSProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_data(self):
        """Gets the custom_data of this VirtualMachineScaleSetUpdateOSProfile.

        A base-64 encoded string of custom data.

        :return: The custom_data of this VirtualMachineScaleSetUpdateOSProfile.
        :rtype: str
        """
        return self._custom_data

    @custom_data.setter
    def custom_data(self, custom_data):
        """Sets the custom_data of this VirtualMachineScaleSetUpdateOSProfile.

        A base-64 encoded string of custom data.

        :param custom_data: The custom_data of this VirtualMachineScaleSetUpdateOSProfile.
        :type custom_data: str
        """

        self._custom_data = custom_data

    @property
    def linux_configuration(self):
        """Gets the linux_configuration of this VirtualMachineScaleSetUpdateOSProfile.


        :return: The linux_configuration of this VirtualMachineScaleSetUpdateOSProfile.
        :rtype: LinuxConfiguration
        """
        return self._linux_configuration

    @linux_configuration.setter
    def linux_configuration(self, linux_configuration):
        """Sets the linux_configuration of this VirtualMachineScaleSetUpdateOSProfile.


        :param linux_configuration: The linux_configuration of this VirtualMachineScaleSetUpdateOSProfile.
        :type linux_configuration: LinuxConfiguration
        """

        self._linux_configuration = linux_configuration

    @property
    def secrets(self):
        """Gets the secrets of this VirtualMachineScaleSetUpdateOSProfile.

        The List of certificates for addition to the VM.

        :return: The secrets of this VirtualMachineScaleSetUpdateOSProfile.
        :rtype: List[VaultSecretGroup]
        """
        return self._secrets

    @secrets.setter
    def secrets(self, secrets):
        """Sets the secrets of this VirtualMachineScaleSetUpdateOSProfile.

        The List of certificates for addition to the VM.

        :param secrets: The secrets of this VirtualMachineScaleSetUpdateOSProfile.
        :type secrets: List[VaultSecretGroup]
        """

        self._secrets = secrets

    @property
    def windows_configuration(self):
        """Gets the windows_configuration of this VirtualMachineScaleSetUpdateOSProfile.


        :return: The windows_configuration of this VirtualMachineScaleSetUpdateOSProfile.
        :rtype: WindowsConfiguration
        """
        return self._windows_configuration

    @windows_configuration.setter
    def windows_configuration(self, windows_configuration):
        """Sets the windows_configuration of this VirtualMachineScaleSetUpdateOSProfile.


        :param windows_configuration: The windows_configuration of this VirtualMachineScaleSetUpdateOSProfile.
        :type windows_configuration: WindowsConfiguration
        """

        self._windows_configuration = windows_configuration
