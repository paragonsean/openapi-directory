# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.instance_view_status import InstanceViewStatus
from openapi_server import util


class BootDiagnosticsInstanceView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, console_screenshot_blob_uri: str=None, serial_console_log_blob_uri: str=None, status: InstanceViewStatus=None):
        """BootDiagnosticsInstanceView - a model defined in OpenAPI

        :param console_screenshot_blob_uri: The console_screenshot_blob_uri of this BootDiagnosticsInstanceView.
        :param serial_console_log_blob_uri: The serial_console_log_blob_uri of this BootDiagnosticsInstanceView.
        :param status: The status of this BootDiagnosticsInstanceView.
        """
        self.openapi_types = {
            'console_screenshot_blob_uri': str,
            'serial_console_log_blob_uri': str,
            'status': InstanceViewStatus
        }

        self.attribute_map = {
            'console_screenshot_blob_uri': 'consoleScreenshotBlobUri',
            'serial_console_log_blob_uri': 'serialConsoleLogBlobUri',
            'status': 'status'
        }

        self._console_screenshot_blob_uri = console_screenshot_blob_uri
        self._serial_console_log_blob_uri = serial_console_log_blob_uri
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BootDiagnosticsInstanceView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BootDiagnosticsInstanceView of this BootDiagnosticsInstanceView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def console_screenshot_blob_uri(self):
        """Gets the console_screenshot_blob_uri of this BootDiagnosticsInstanceView.

        The console screenshot blob URI.

        :return: The console_screenshot_blob_uri of this BootDiagnosticsInstanceView.
        :rtype: str
        """
        return self._console_screenshot_blob_uri

    @console_screenshot_blob_uri.setter
    def console_screenshot_blob_uri(self, console_screenshot_blob_uri):
        """Sets the console_screenshot_blob_uri of this BootDiagnosticsInstanceView.

        The console screenshot blob URI.

        :param console_screenshot_blob_uri: The console_screenshot_blob_uri of this BootDiagnosticsInstanceView.
        :type console_screenshot_blob_uri: str
        """

        self._console_screenshot_blob_uri = console_screenshot_blob_uri

    @property
    def serial_console_log_blob_uri(self):
        """Gets the serial_console_log_blob_uri of this BootDiagnosticsInstanceView.

        The Linux serial console log blob Uri.

        :return: The serial_console_log_blob_uri of this BootDiagnosticsInstanceView.
        :rtype: str
        """
        return self._serial_console_log_blob_uri

    @serial_console_log_blob_uri.setter
    def serial_console_log_blob_uri(self, serial_console_log_blob_uri):
        """Sets the serial_console_log_blob_uri of this BootDiagnosticsInstanceView.

        The Linux serial console log blob Uri.

        :param serial_console_log_blob_uri: The serial_console_log_blob_uri of this BootDiagnosticsInstanceView.
        :type serial_console_log_blob_uri: str
        """

        self._serial_console_log_blob_uri = serial_console_log_blob_uri

    @property
    def status(self):
        """Gets the status of this BootDiagnosticsInstanceView.


        :return: The status of this BootDiagnosticsInstanceView.
        :rtype: InstanceViewStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BootDiagnosticsInstanceView.


        :param status: The status of this BootDiagnosticsInstanceView.
        :type status: InstanceViewStatus
        """

        self._status = status
