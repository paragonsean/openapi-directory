# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RollingUpgradeRunningStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, last_action: str=None, last_action_time: datetime=None, start_time: datetime=None):
        """RollingUpgradeRunningStatus - a model defined in OpenAPI

        :param code: The code of this RollingUpgradeRunningStatus.
        :param last_action: The last_action of this RollingUpgradeRunningStatus.
        :param last_action_time: The last_action_time of this RollingUpgradeRunningStatus.
        :param start_time: The start_time of this RollingUpgradeRunningStatus.
        """
        self.openapi_types = {
            'code': str,
            'last_action': str,
            'last_action_time': datetime,
            'start_time': datetime
        }

        self.attribute_map = {
            'code': 'code',
            'last_action': 'lastAction',
            'last_action_time': 'lastActionTime',
            'start_time': 'startTime'
        }

        self._code = code
        self._last_action = last_action
        self._last_action_time = last_action_time
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RollingUpgradeRunningStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RollingUpgradeRunningStatus of this RollingUpgradeRunningStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this RollingUpgradeRunningStatus.

        Code indicating the current status of the upgrade.

        :return: The code of this RollingUpgradeRunningStatus.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this RollingUpgradeRunningStatus.

        Code indicating the current status of the upgrade.

        :param code: The code of this RollingUpgradeRunningStatus.
        :type code: str
        """
        allowed_values = ["RollingForward", "Cancelled", "Completed", "Faulted"]  # noqa: E501
        if code not in allowed_values:
            raise ValueError(
                "Invalid value for `code` ({0}), must be one of {1}"
                .format(code, allowed_values)
            )

        self._code = code

    @property
    def last_action(self):
        """Gets the last_action of this RollingUpgradeRunningStatus.

        The last action performed on the rolling upgrade.

        :return: The last_action of this RollingUpgradeRunningStatus.
        :rtype: str
        """
        return self._last_action

    @last_action.setter
    def last_action(self, last_action):
        """Sets the last_action of this RollingUpgradeRunningStatus.

        The last action performed on the rolling upgrade.

        :param last_action: The last_action of this RollingUpgradeRunningStatus.
        :type last_action: str
        """
        allowed_values = ["Start", "Cancel"]  # noqa: E501
        if last_action not in allowed_values:
            raise ValueError(
                "Invalid value for `last_action` ({0}), must be one of {1}"
                .format(last_action, allowed_values)
            )

        self._last_action = last_action

    @property
    def last_action_time(self):
        """Gets the last_action_time of this RollingUpgradeRunningStatus.

        Last action time of the upgrade.

        :return: The last_action_time of this RollingUpgradeRunningStatus.
        :rtype: datetime
        """
        return self._last_action_time

    @last_action_time.setter
    def last_action_time(self, last_action_time):
        """Sets the last_action_time of this RollingUpgradeRunningStatus.

        Last action time of the upgrade.

        :param last_action_time: The last_action_time of this RollingUpgradeRunningStatus.
        :type last_action_time: datetime
        """

        self._last_action_time = last_action_time

    @property
    def start_time(self):
        """Gets the start_time of this RollingUpgradeRunningStatus.

        Start time of the upgrade.

        :return: The start_time of this RollingUpgradeRunningStatus.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this RollingUpgradeRunningStatus.

        Start time of the upgrade.

        :param start_time: The start_time of this RollingUpgradeRunningStatus.
        :type start_time: datetime
        """

        self._start_time = start_time
