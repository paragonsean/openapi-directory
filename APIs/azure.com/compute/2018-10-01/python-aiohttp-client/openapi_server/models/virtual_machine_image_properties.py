# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.automatic_os_upgrade_properties import AutomaticOSUpgradeProperties
from openapi_server.models.data_disk_image import DataDiskImage
from openapi_server.models.os_disk_image import OSDiskImage
from openapi_server.models.purchase_plan import PurchasePlan
from openapi_server import util


class VirtualMachineImageProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automatic_os_upgrade_properties: AutomaticOSUpgradeProperties=None, data_disk_images: List[DataDiskImage]=None, os_disk_image: OSDiskImage=None, plan: PurchasePlan=None):
        """VirtualMachineImageProperties - a model defined in OpenAPI

        :param automatic_os_upgrade_properties: The automatic_os_upgrade_properties of this VirtualMachineImageProperties.
        :param data_disk_images: The data_disk_images of this VirtualMachineImageProperties.
        :param os_disk_image: The os_disk_image of this VirtualMachineImageProperties.
        :param plan: The plan of this VirtualMachineImageProperties.
        """
        self.openapi_types = {
            'automatic_os_upgrade_properties': AutomaticOSUpgradeProperties,
            'data_disk_images': List[DataDiskImage],
            'os_disk_image': OSDiskImage,
            'plan': PurchasePlan
        }

        self.attribute_map = {
            'automatic_os_upgrade_properties': 'automaticOSUpgradeProperties',
            'data_disk_images': 'dataDiskImages',
            'os_disk_image': 'osDiskImage',
            'plan': 'plan'
        }

        self._automatic_os_upgrade_properties = automatic_os_upgrade_properties
        self._data_disk_images = data_disk_images
        self._os_disk_image = os_disk_image
        self._plan = plan

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineImageProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineImageProperties of this VirtualMachineImageProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automatic_os_upgrade_properties(self):
        """Gets the automatic_os_upgrade_properties of this VirtualMachineImageProperties.


        :return: The automatic_os_upgrade_properties of this VirtualMachineImageProperties.
        :rtype: AutomaticOSUpgradeProperties
        """
        return self._automatic_os_upgrade_properties

    @automatic_os_upgrade_properties.setter
    def automatic_os_upgrade_properties(self, automatic_os_upgrade_properties):
        """Sets the automatic_os_upgrade_properties of this VirtualMachineImageProperties.


        :param automatic_os_upgrade_properties: The automatic_os_upgrade_properties of this VirtualMachineImageProperties.
        :type automatic_os_upgrade_properties: AutomaticOSUpgradeProperties
        """

        self._automatic_os_upgrade_properties = automatic_os_upgrade_properties

    @property
    def data_disk_images(self):
        """Gets the data_disk_images of this VirtualMachineImageProperties.


        :return: The data_disk_images of this VirtualMachineImageProperties.
        :rtype: List[DataDiskImage]
        """
        return self._data_disk_images

    @data_disk_images.setter
    def data_disk_images(self, data_disk_images):
        """Sets the data_disk_images of this VirtualMachineImageProperties.


        :param data_disk_images: The data_disk_images of this VirtualMachineImageProperties.
        :type data_disk_images: List[DataDiskImage]
        """

        self._data_disk_images = data_disk_images

    @property
    def os_disk_image(self):
        """Gets the os_disk_image of this VirtualMachineImageProperties.


        :return: The os_disk_image of this VirtualMachineImageProperties.
        :rtype: OSDiskImage
        """
        return self._os_disk_image

    @os_disk_image.setter
    def os_disk_image(self, os_disk_image):
        """Sets the os_disk_image of this VirtualMachineImageProperties.


        :param os_disk_image: The os_disk_image of this VirtualMachineImageProperties.
        :type os_disk_image: OSDiskImage
        """

        self._os_disk_image = os_disk_image

    @property
    def plan(self):
        """Gets the plan of this VirtualMachineImageProperties.


        :return: The plan of this VirtualMachineImageProperties.
        :rtype: PurchasePlan
        """
        return self._plan

    @plan.setter
    def plan(self, plan):
        """Sets the plan of this VirtualMachineImageProperties.


        :param plan: The plan of this VirtualMachineImageProperties.
        :type plan: PurchasePlan
        """

        self._plan = plan
