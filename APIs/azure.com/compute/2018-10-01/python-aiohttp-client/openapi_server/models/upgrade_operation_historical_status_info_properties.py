# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_error import ApiError
from openapi_server.models.image_reference import ImageReference
from openapi_server.models.rollback_status_info import RollbackStatusInfo
from openapi_server.models.rolling_upgrade_progress_info import RollingUpgradeProgressInfo
from openapi_server.models.upgrade_operation_history_status import UpgradeOperationHistoryStatus
from openapi_server import util


class UpgradeOperationHistoricalStatusInfoProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: ApiError=None, progress: RollingUpgradeProgressInfo=None, rollback_info: RollbackStatusInfo=None, running_status: UpgradeOperationHistoryStatus=None, started_by: str=None, target_image_reference: ImageReference=None):
        """UpgradeOperationHistoricalStatusInfoProperties - a model defined in OpenAPI

        :param error: The error of this UpgradeOperationHistoricalStatusInfoProperties.
        :param progress: The progress of this UpgradeOperationHistoricalStatusInfoProperties.
        :param rollback_info: The rollback_info of this UpgradeOperationHistoricalStatusInfoProperties.
        :param running_status: The running_status of this UpgradeOperationHistoricalStatusInfoProperties.
        :param started_by: The started_by of this UpgradeOperationHistoricalStatusInfoProperties.
        :param target_image_reference: The target_image_reference of this UpgradeOperationHistoricalStatusInfoProperties.
        """
        self.openapi_types = {
            'error': ApiError,
            'progress': RollingUpgradeProgressInfo,
            'rollback_info': RollbackStatusInfo,
            'running_status': UpgradeOperationHistoryStatus,
            'started_by': str,
            'target_image_reference': ImageReference
        }

        self.attribute_map = {
            'error': 'error',
            'progress': 'progress',
            'rollback_info': 'rollbackInfo',
            'running_status': 'runningStatus',
            'started_by': 'startedBy',
            'target_image_reference': 'targetImageReference'
        }

        self._error = error
        self._progress = progress
        self._rollback_info = rollback_info
        self._running_status = running_status
        self._started_by = started_by
        self._target_image_reference = target_image_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpgradeOperationHistoricalStatusInfoProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpgradeOperationHistoricalStatusInfoProperties of this UpgradeOperationHistoricalStatusInfoProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this UpgradeOperationHistoricalStatusInfoProperties.


        :return: The error of this UpgradeOperationHistoricalStatusInfoProperties.
        :rtype: ApiError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this UpgradeOperationHistoricalStatusInfoProperties.


        :param error: The error of this UpgradeOperationHistoricalStatusInfoProperties.
        :type error: ApiError
        """

        self._error = error

    @property
    def progress(self):
        """Gets the progress of this UpgradeOperationHistoricalStatusInfoProperties.


        :return: The progress of this UpgradeOperationHistoricalStatusInfoProperties.
        :rtype: RollingUpgradeProgressInfo
        """
        return self._progress

    @progress.setter
    def progress(self, progress):
        """Sets the progress of this UpgradeOperationHistoricalStatusInfoProperties.


        :param progress: The progress of this UpgradeOperationHistoricalStatusInfoProperties.
        :type progress: RollingUpgradeProgressInfo
        """

        self._progress = progress

    @property
    def rollback_info(self):
        """Gets the rollback_info of this UpgradeOperationHistoricalStatusInfoProperties.


        :return: The rollback_info of this UpgradeOperationHistoricalStatusInfoProperties.
        :rtype: RollbackStatusInfo
        """
        return self._rollback_info

    @rollback_info.setter
    def rollback_info(self, rollback_info):
        """Sets the rollback_info of this UpgradeOperationHistoricalStatusInfoProperties.


        :param rollback_info: The rollback_info of this UpgradeOperationHistoricalStatusInfoProperties.
        :type rollback_info: RollbackStatusInfo
        """

        self._rollback_info = rollback_info

    @property
    def running_status(self):
        """Gets the running_status of this UpgradeOperationHistoricalStatusInfoProperties.


        :return: The running_status of this UpgradeOperationHistoricalStatusInfoProperties.
        :rtype: UpgradeOperationHistoryStatus
        """
        return self._running_status

    @running_status.setter
    def running_status(self, running_status):
        """Sets the running_status of this UpgradeOperationHistoricalStatusInfoProperties.


        :param running_status: The running_status of this UpgradeOperationHistoricalStatusInfoProperties.
        :type running_status: UpgradeOperationHistoryStatus
        """

        self._running_status = running_status

    @property
    def started_by(self):
        """Gets the started_by of this UpgradeOperationHistoricalStatusInfoProperties.

        Invoker of the Upgrade Operation

        :return: The started_by of this UpgradeOperationHistoricalStatusInfoProperties.
        :rtype: str
        """
        return self._started_by

    @started_by.setter
    def started_by(self, started_by):
        """Sets the started_by of this UpgradeOperationHistoricalStatusInfoProperties.

        Invoker of the Upgrade Operation

        :param started_by: The started_by of this UpgradeOperationHistoricalStatusInfoProperties.
        :type started_by: str
        """
        allowed_values = ["Unknown", "User", "Platform"]  # noqa: E501
        if started_by not in allowed_values:
            raise ValueError(
                "Invalid value for `started_by` ({0}), must be one of {1}"
                .format(started_by, allowed_values)
            )

        self._started_by = started_by

    @property
    def target_image_reference(self):
        """Gets the target_image_reference of this UpgradeOperationHistoricalStatusInfoProperties.


        :return: The target_image_reference of this UpgradeOperationHistoricalStatusInfoProperties.
        :rtype: ImageReference
        """
        return self._target_image_reference

    @target_image_reference.setter
    def target_image_reference(self, target_image_reference):
        """Sets the target_image_reference of this UpgradeOperationHistoricalStatusInfoProperties.


        :param target_image_reference: The target_image_reference of this UpgradeOperationHistoricalStatusInfoProperties.
        :type target_image_reference: ImageReference
        """

        self._target_image_reference = target_image_reference
