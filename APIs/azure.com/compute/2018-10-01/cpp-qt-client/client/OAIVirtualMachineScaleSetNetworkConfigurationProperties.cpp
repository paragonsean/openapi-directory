/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVirtualMachineScaleSetNetworkConfigurationProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVirtualMachineScaleSetNetworkConfigurationProperties::OAIVirtualMachineScaleSetNetworkConfigurationProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVirtualMachineScaleSetNetworkConfigurationProperties::OAIVirtualMachineScaleSetNetworkConfigurationProperties() {
    this->initializeModel();
}

OAIVirtualMachineScaleSetNetworkConfigurationProperties::~OAIVirtualMachineScaleSetNetworkConfigurationProperties() {}

void OAIVirtualMachineScaleSetNetworkConfigurationProperties::initializeModel() {

    m_dns_settings_isSet = false;
    m_dns_settings_isValid = false;

    m_enable_accelerated_networking_isSet = false;
    m_enable_accelerated_networking_isValid = false;

    m_enable_ip_forwarding_isSet = false;
    m_enable_ip_forwarding_isValid = false;

    m_ip_configurations_isSet = false;
    m_ip_configurations_isValid = false;

    m_network_security_group_isSet = false;
    m_network_security_group_isValid = false;

    m_primary_isSet = false;
    m_primary_isValid = false;
}

void OAIVirtualMachineScaleSetNetworkConfigurationProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVirtualMachineScaleSetNetworkConfigurationProperties::fromJsonObject(QJsonObject json) {

    m_dns_settings_isValid = ::OpenAPI::fromJsonValue(m_dns_settings, json[QString("dnsSettings")]);
    m_dns_settings_isSet = !json[QString("dnsSettings")].isNull() && m_dns_settings_isValid;

    m_enable_accelerated_networking_isValid = ::OpenAPI::fromJsonValue(m_enable_accelerated_networking, json[QString("enableAcceleratedNetworking")]);
    m_enable_accelerated_networking_isSet = !json[QString("enableAcceleratedNetworking")].isNull() && m_enable_accelerated_networking_isValid;

    m_enable_ip_forwarding_isValid = ::OpenAPI::fromJsonValue(m_enable_ip_forwarding, json[QString("enableIPForwarding")]);
    m_enable_ip_forwarding_isSet = !json[QString("enableIPForwarding")].isNull() && m_enable_ip_forwarding_isValid;

    m_ip_configurations_isValid = ::OpenAPI::fromJsonValue(m_ip_configurations, json[QString("ipConfigurations")]);
    m_ip_configurations_isSet = !json[QString("ipConfigurations")].isNull() && m_ip_configurations_isValid;

    m_network_security_group_isValid = ::OpenAPI::fromJsonValue(m_network_security_group, json[QString("networkSecurityGroup")]);
    m_network_security_group_isSet = !json[QString("networkSecurityGroup")].isNull() && m_network_security_group_isValid;

    m_primary_isValid = ::OpenAPI::fromJsonValue(m_primary, json[QString("primary")]);
    m_primary_isSet = !json[QString("primary")].isNull() && m_primary_isValid;
}

QString OAIVirtualMachineScaleSetNetworkConfigurationProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVirtualMachineScaleSetNetworkConfigurationProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_dns_settings.isSet()) {
        obj.insert(QString("dnsSettings"), ::OpenAPI::toJsonValue(m_dns_settings));
    }
    if (m_enable_accelerated_networking_isSet) {
        obj.insert(QString("enableAcceleratedNetworking"), ::OpenAPI::toJsonValue(m_enable_accelerated_networking));
    }
    if (m_enable_ip_forwarding_isSet) {
        obj.insert(QString("enableIPForwarding"), ::OpenAPI::toJsonValue(m_enable_ip_forwarding));
    }
    if (m_ip_configurations.size() > 0) {
        obj.insert(QString("ipConfigurations"), ::OpenAPI::toJsonValue(m_ip_configurations));
    }
    if (m_network_security_group.isSet()) {
        obj.insert(QString("networkSecurityGroup"), ::OpenAPI::toJsonValue(m_network_security_group));
    }
    if (m_primary_isSet) {
        obj.insert(QString("primary"), ::OpenAPI::toJsonValue(m_primary));
    }
    return obj;
}

OAIVirtualMachineScaleSetNetworkConfigurationDnsSettings OAIVirtualMachineScaleSetNetworkConfigurationProperties::getDnsSettings() const {
    return m_dns_settings;
}
void OAIVirtualMachineScaleSetNetworkConfigurationProperties::setDnsSettings(const OAIVirtualMachineScaleSetNetworkConfigurationDnsSettings &dns_settings) {
    m_dns_settings = dns_settings;
    m_dns_settings_isSet = true;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::is_dns_settings_Set() const{
    return m_dns_settings_isSet;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::is_dns_settings_Valid() const{
    return m_dns_settings_isValid;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::isEnableAcceleratedNetworking() const {
    return m_enable_accelerated_networking;
}
void OAIVirtualMachineScaleSetNetworkConfigurationProperties::setEnableAcceleratedNetworking(const bool &enable_accelerated_networking) {
    m_enable_accelerated_networking = enable_accelerated_networking;
    m_enable_accelerated_networking_isSet = true;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::is_enable_accelerated_networking_Set() const{
    return m_enable_accelerated_networking_isSet;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::is_enable_accelerated_networking_Valid() const{
    return m_enable_accelerated_networking_isValid;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::isEnableIpForwarding() const {
    return m_enable_ip_forwarding;
}
void OAIVirtualMachineScaleSetNetworkConfigurationProperties::setEnableIpForwarding(const bool &enable_ip_forwarding) {
    m_enable_ip_forwarding = enable_ip_forwarding;
    m_enable_ip_forwarding_isSet = true;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::is_enable_ip_forwarding_Set() const{
    return m_enable_ip_forwarding_isSet;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::is_enable_ip_forwarding_Valid() const{
    return m_enable_ip_forwarding_isValid;
}

QList<OAIVirtualMachineScaleSetIPConfiguration> OAIVirtualMachineScaleSetNetworkConfigurationProperties::getIpConfigurations() const {
    return m_ip_configurations;
}
void OAIVirtualMachineScaleSetNetworkConfigurationProperties::setIpConfigurations(const QList<OAIVirtualMachineScaleSetIPConfiguration> &ip_configurations) {
    m_ip_configurations = ip_configurations;
    m_ip_configurations_isSet = true;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::is_ip_configurations_Set() const{
    return m_ip_configurations_isSet;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::is_ip_configurations_Valid() const{
    return m_ip_configurations_isValid;
}

OAISubResource OAIVirtualMachineScaleSetNetworkConfigurationProperties::getNetworkSecurityGroup() const {
    return m_network_security_group;
}
void OAIVirtualMachineScaleSetNetworkConfigurationProperties::setNetworkSecurityGroup(const OAISubResource &network_security_group) {
    m_network_security_group = network_security_group;
    m_network_security_group_isSet = true;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::is_network_security_group_Set() const{
    return m_network_security_group_isSet;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::is_network_security_group_Valid() const{
    return m_network_security_group_isValid;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::isPrimary() const {
    return m_primary;
}
void OAIVirtualMachineScaleSetNetworkConfigurationProperties::setPrimary(const bool &primary) {
    m_primary = primary;
    m_primary_isSet = true;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::is_primary_Set() const{
    return m_primary_isSet;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::is_primary_Valid() const{
    return m_primary_isValid;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dns_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_accelerated_networking_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_ip_forwarding_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_configurations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_security_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVirtualMachineScaleSetNetworkConfigurationProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ip_configurations_isValid && true;
}

} // namespace OpenAPI
