/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualMachineProperties.h
 *
 * Describes the properties of a Virtual Machine.
 */

#ifndef OAIVirtualMachineProperties_H
#define OAIVirtualMachineProperties_H

#include <QJsonObject>

#include "OAIAdditionalCapabilities.h"
#include "OAIDiagnosticsProfile.h"
#include "OAIHardwareProfile.h"
#include "OAINetworkProfile.h"
#include "OAIOSProfile.h"
#include "OAIStorageProfile.h"
#include "OAISubResource.h"
#include "OAIVirtualMachineInstanceView.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditionalCapabilities;
class OAISubResource;
class OAIDiagnosticsProfile;
class OAIHardwareProfile;
class OAIVirtualMachineInstanceView;
class OAINetworkProfile;
class OAIOSProfile;
class OAIStorageProfile;

class OAIVirtualMachineProperties : public OAIObject {
public:
    OAIVirtualMachineProperties();
    OAIVirtualMachineProperties(QString json);
    ~OAIVirtualMachineProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAdditionalCapabilities getAdditionalCapabilities() const;
    void setAdditionalCapabilities(const OAIAdditionalCapabilities &additional_capabilities);
    bool is_additional_capabilities_Set() const;
    bool is_additional_capabilities_Valid() const;

    OAISubResource getAvailabilitySet() const;
    void setAvailabilitySet(const OAISubResource &availability_set);
    bool is_availability_set_Set() const;
    bool is_availability_set_Valid() const;

    OAIDiagnosticsProfile getDiagnosticsProfile() const;
    void setDiagnosticsProfile(const OAIDiagnosticsProfile &diagnostics_profile);
    bool is_diagnostics_profile_Set() const;
    bool is_diagnostics_profile_Valid() const;

    OAIHardwareProfile getHardwareProfile() const;
    void setHardwareProfile(const OAIHardwareProfile &hardware_profile);
    bool is_hardware_profile_Set() const;
    bool is_hardware_profile_Valid() const;

    OAIVirtualMachineInstanceView getInstanceView() const;
    void setInstanceView(const OAIVirtualMachineInstanceView &instance_view);
    bool is_instance_view_Set() const;
    bool is_instance_view_Valid() const;

    QString getLicenseType() const;
    void setLicenseType(const QString &license_type);
    bool is_license_type_Set() const;
    bool is_license_type_Valid() const;

    OAINetworkProfile getNetworkProfile() const;
    void setNetworkProfile(const OAINetworkProfile &network_profile);
    bool is_network_profile_Set() const;
    bool is_network_profile_Valid() const;

    OAIOSProfile getOsProfile() const;
    void setOsProfile(const OAIOSProfile &os_profile);
    bool is_os_profile_Set() const;
    bool is_os_profile_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAISubResource getProximityPlacementGroup() const;
    void setProximityPlacementGroup(const OAISubResource &proximity_placement_group);
    bool is_proximity_placement_group_Set() const;
    bool is_proximity_placement_group_Valid() const;

    OAIStorageProfile getStorageProfile() const;
    void setStorageProfile(const OAIStorageProfile &storage_profile);
    bool is_storage_profile_Set() const;
    bool is_storage_profile_Valid() const;

    QString getVmId() const;
    void setVmId(const QString &vm_id);
    bool is_vm_id_Set() const;
    bool is_vm_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAdditionalCapabilities m_additional_capabilities;
    bool m_additional_capabilities_isSet;
    bool m_additional_capabilities_isValid;

    OAISubResource m_availability_set;
    bool m_availability_set_isSet;
    bool m_availability_set_isValid;

    OAIDiagnosticsProfile m_diagnostics_profile;
    bool m_diagnostics_profile_isSet;
    bool m_diagnostics_profile_isValid;

    OAIHardwareProfile m_hardware_profile;
    bool m_hardware_profile_isSet;
    bool m_hardware_profile_isValid;

    OAIVirtualMachineInstanceView m_instance_view;
    bool m_instance_view_isSet;
    bool m_instance_view_isValid;

    QString m_license_type;
    bool m_license_type_isSet;
    bool m_license_type_isValid;

    OAINetworkProfile m_network_profile;
    bool m_network_profile_isSet;
    bool m_network_profile_isValid;

    OAIOSProfile m_os_profile;
    bool m_os_profile_isSet;
    bool m_os_profile_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAISubResource m_proximity_placement_group;
    bool m_proximity_placement_group_isSet;
    bool m_proximity_placement_group_isValid;

    OAIStorageProfile m_storage_profile;
    bool m_storage_profile_isSet;
    bool m_storage_profile_isValid;

    QString m_vm_id;
    bool m_vm_id_isSet;
    bool m_vm_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualMachineProperties)

#endif // OAIVirtualMachineProperties_H
