/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRollingUpgradeProgressInfo.h
 *
 * Information about the number of virtual machine instances in each upgrade state.
 */

#ifndef OAIRollingUpgradeProgressInfo_H
#define OAIRollingUpgradeProgressInfo_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRollingUpgradeProgressInfo : public OAIObject {
public:
    OAIRollingUpgradeProgressInfo();
    OAIRollingUpgradeProgressInfo(QString json);
    ~OAIRollingUpgradeProgressInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFailedInstanceCount() const;
    void setFailedInstanceCount(const qint32 &failed_instance_count);
    bool is_failed_instance_count_Set() const;
    bool is_failed_instance_count_Valid() const;

    qint32 getInProgressInstanceCount() const;
    void setInProgressInstanceCount(const qint32 &in_progress_instance_count);
    bool is_in_progress_instance_count_Set() const;
    bool is_in_progress_instance_count_Valid() const;

    qint32 getPendingInstanceCount() const;
    void setPendingInstanceCount(const qint32 &pending_instance_count);
    bool is_pending_instance_count_Set() const;
    bool is_pending_instance_count_Valid() const;

    qint32 getSuccessfulInstanceCount() const;
    void setSuccessfulInstanceCount(const qint32 &successful_instance_count);
    bool is_successful_instance_count_Set() const;
    bool is_successful_instance_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_failed_instance_count;
    bool m_failed_instance_count_isSet;
    bool m_failed_instance_count_isValid;

    qint32 m_in_progress_instance_count;
    bool m_in_progress_instance_count_isSet;
    bool m_in_progress_instance_count_isValid;

    qint32 m_pending_instance_count;
    bool m_pending_instance_count_isSet;
    bool m_pending_instance_count_isValid;

    qint32 m_successful_instance_count;
    bool m_successful_instance_count_isSet;
    bool m_successful_instance_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRollingUpgradeProgressInfo)

#endif // OAIRollingUpgradeProgressInfo_H
