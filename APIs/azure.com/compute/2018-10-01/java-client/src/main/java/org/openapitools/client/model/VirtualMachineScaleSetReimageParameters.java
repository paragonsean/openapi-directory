/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes a Virtual Machine Scale Set VM Reimage Parameters.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:49:21.335968-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VirtualMachineScaleSetReimageParameters {
  public static final String SERIALIZED_NAME_INSTANCE_IDS = "instanceIds";
  @SerializedName(SERIALIZED_NAME_INSTANCE_IDS)
  private List<String> instanceIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_TEMP_DISK = "tempDisk";
  @SerializedName(SERIALIZED_NAME_TEMP_DISK)
  private Boolean tempDisk;

  public VirtualMachineScaleSetReimageParameters() {
  }

  public VirtualMachineScaleSetReimageParameters instanceIds(List<String> instanceIds) {
    this.instanceIds = instanceIds;
    return this;
  }

  public VirtualMachineScaleSetReimageParameters addInstanceIdsItem(String instanceIdsItem) {
    if (this.instanceIds == null) {
      this.instanceIds = new ArrayList<>();
    }
    this.instanceIds.add(instanceIdsItem);
    return this;
  }

  /**
   * The virtual machine scale set instance ids. Omitting the virtual machine scale set instance ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
   * @return instanceIds
   */
  @javax.annotation.Nullable
  public List<String> getInstanceIds() {
    return instanceIds;
  }

  public void setInstanceIds(List<String> instanceIds) {
    this.instanceIds = instanceIds;
  }


  public VirtualMachineScaleSetReimageParameters tempDisk(Boolean tempDisk) {
    this.tempDisk = tempDisk;
    return this;
  }

  /**
   * Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage parameter is only supported for VM/VMSS with Ephemeral OS disk.
   * @return tempDisk
   */
  @javax.annotation.Nullable
  public Boolean getTempDisk() {
    return tempDisk;
  }

  public void setTempDisk(Boolean tempDisk) {
    this.tempDisk = tempDisk;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualMachineScaleSetReimageParameters virtualMachineScaleSetReimageParameters = (VirtualMachineScaleSetReimageParameters) o;
    return Objects.equals(this.instanceIds, virtualMachineScaleSetReimageParameters.instanceIds) &&
        Objects.equals(this.tempDisk, virtualMachineScaleSetReimageParameters.tempDisk);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceIds, tempDisk);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualMachineScaleSetReimageParameters {\n");
    sb.append("    instanceIds: ").append(toIndentedString(instanceIds)).append("\n");
    sb.append("    tempDisk: ").append(toIndentedString(tempDisk)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tempDisk");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VirtualMachineScaleSetReimageParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VirtualMachineScaleSetReimageParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VirtualMachineScaleSetReimageParameters is not found in the empty JSON string", VirtualMachineScaleSetReimageParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VirtualMachineScaleSetReimageParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VirtualMachineScaleSetReimageParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("instanceIds") != null && !jsonObj.get("instanceIds").isJsonNull() && !jsonObj.get("instanceIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `instanceIds` to be an array in the JSON string but got `%s`", jsonObj.get("instanceIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VirtualMachineScaleSetReimageParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VirtualMachineScaleSetReimageParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VirtualMachineScaleSetReimageParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VirtualMachineScaleSetReimageParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<VirtualMachineScaleSetReimageParameters>() {
           @Override
           public void write(JsonWriter out, VirtualMachineScaleSetReimageParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VirtualMachineScaleSetReimageParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VirtualMachineScaleSetReimageParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VirtualMachineScaleSetReimageParameters
   * @throws IOException if the JSON string is invalid with respect to VirtualMachineScaleSetReimageParameters
   */
  public static VirtualMachineScaleSetReimageParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VirtualMachineScaleSetReimageParameters.class);
  }

  /**
   * Convert an instance of VirtualMachineScaleSetReimageParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

