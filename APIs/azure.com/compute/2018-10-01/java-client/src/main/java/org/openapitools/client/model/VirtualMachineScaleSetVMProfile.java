/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AdditionalCapabilities;
import org.openapitools.client.model.DiagnosticsProfile;
import org.openapitools.client.model.VirtualMachineScaleSetExtensionProfile;
import org.openapitools.client.model.VirtualMachineScaleSetNetworkProfile;
import org.openapitools.client.model.VirtualMachineScaleSetOSProfile;
import org.openapitools.client.model.VirtualMachineScaleSetStorageProfile;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes a virtual machine scale set virtual machine profile.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:49:21.335968-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VirtualMachineScaleSetVMProfile {
  public static final String SERIALIZED_NAME_ADDITIONAL_CAPABILITIES = "additionalCapabilities";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_CAPABILITIES)
  private AdditionalCapabilities additionalCapabilities;

  public static final String SERIALIZED_NAME_DIAGNOSTICS_PROFILE = "diagnosticsProfile";
  @SerializedName(SERIALIZED_NAME_DIAGNOSTICS_PROFILE)
  private DiagnosticsProfile diagnosticsProfile;

  /**
   * Specifies the eviction policy for virtual machines in a low priority scale set. &lt;br&gt;&lt;br&gt;Minimum api-version: 2017-10-30-preview
   */
  @JsonAdapter(EvictionPolicyEnum.Adapter.class)
  public enum EvictionPolicyEnum {
    DEALLOCATE("Deallocate"),
    
    DELETE("Delete");

    private String value;

    EvictionPolicyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EvictionPolicyEnum fromValue(String value) {
      for (EvictionPolicyEnum b : EvictionPolicyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EvictionPolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EvictionPolicyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EvictionPolicyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EvictionPolicyEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EvictionPolicyEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_EVICTION_POLICY = "evictionPolicy";
  @SerializedName(SERIALIZED_NAME_EVICTION_POLICY)
  private EvictionPolicyEnum evictionPolicy;

  public static final String SERIALIZED_NAME_EXTENSION_PROFILE = "extensionProfile";
  @SerializedName(SERIALIZED_NAME_EXTENSION_PROFILE)
  private VirtualMachineScaleSetExtensionProfile extensionProfile;

  public static final String SERIALIZED_NAME_LICENSE_TYPE = "licenseType";
  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE)
  private String licenseType;

  public static final String SERIALIZED_NAME_NETWORK_PROFILE = "networkProfile";
  @SerializedName(SERIALIZED_NAME_NETWORK_PROFILE)
  private VirtualMachineScaleSetNetworkProfile networkProfile;

  public static final String SERIALIZED_NAME_OS_PROFILE = "osProfile";
  @SerializedName(SERIALIZED_NAME_OS_PROFILE)
  private VirtualMachineScaleSetOSProfile osProfile;

  /**
   * Specifies the priority for the virtual machines in the scale set. &lt;br&gt;&lt;br&gt;Minimum api-version: 2017-10-30-preview
   */
  @JsonAdapter(PriorityEnum.Adapter.class)
  public enum PriorityEnum {
    REGULAR("Regular"),
    
    LOW("Low");

    private String value;

    PriorityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PriorityEnum fromValue(String value) {
      for (PriorityEnum b : PriorityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PriorityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PriorityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PriorityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PriorityEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PriorityEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private PriorityEnum priority;

  public static final String SERIALIZED_NAME_STORAGE_PROFILE = "storageProfile";
  @SerializedName(SERIALIZED_NAME_STORAGE_PROFILE)
  private VirtualMachineScaleSetStorageProfile storageProfile;

  public VirtualMachineScaleSetVMProfile() {
  }

  public VirtualMachineScaleSetVMProfile additionalCapabilities(AdditionalCapabilities additionalCapabilities) {
    this.additionalCapabilities = additionalCapabilities;
    return this;
  }

  /**
   * Get additionalCapabilities
   * @return additionalCapabilities
   */
  @javax.annotation.Nullable
  public AdditionalCapabilities getAdditionalCapabilities() {
    return additionalCapabilities;
  }

  public void setAdditionalCapabilities(AdditionalCapabilities additionalCapabilities) {
    this.additionalCapabilities = additionalCapabilities;
  }


  public VirtualMachineScaleSetVMProfile diagnosticsProfile(DiagnosticsProfile diagnosticsProfile) {
    this.diagnosticsProfile = diagnosticsProfile;
    return this;
  }

  /**
   * Get diagnosticsProfile
   * @return diagnosticsProfile
   */
  @javax.annotation.Nullable
  public DiagnosticsProfile getDiagnosticsProfile() {
    return diagnosticsProfile;
  }

  public void setDiagnosticsProfile(DiagnosticsProfile diagnosticsProfile) {
    this.diagnosticsProfile = diagnosticsProfile;
  }


  public VirtualMachineScaleSetVMProfile evictionPolicy(EvictionPolicyEnum evictionPolicy) {
    this.evictionPolicy = evictionPolicy;
    return this;
  }

  /**
   * Specifies the eviction policy for virtual machines in a low priority scale set. &lt;br&gt;&lt;br&gt;Minimum api-version: 2017-10-30-preview
   * @return evictionPolicy
   */
  @javax.annotation.Nullable
  public EvictionPolicyEnum getEvictionPolicy() {
    return evictionPolicy;
  }

  public void setEvictionPolicy(EvictionPolicyEnum evictionPolicy) {
    this.evictionPolicy = evictionPolicy;
  }


  public VirtualMachineScaleSetVMProfile extensionProfile(VirtualMachineScaleSetExtensionProfile extensionProfile) {
    this.extensionProfile = extensionProfile;
    return this;
  }

  /**
   * Get extensionProfile
   * @return extensionProfile
   */
  @javax.annotation.Nullable
  public VirtualMachineScaleSetExtensionProfile getExtensionProfile() {
    return extensionProfile;
  }

  public void setExtensionProfile(VirtualMachineScaleSetExtensionProfile extensionProfile) {
    this.extensionProfile = extensionProfile;
  }


  public VirtualMachineScaleSetVMProfile licenseType(String licenseType) {
    this.licenseType = licenseType;
    return this;
  }

  /**
   * Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; Windows_Client &lt;br&gt;&lt;br&gt; Windows_Server &lt;br&gt;&lt;br&gt; If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. &lt;br&gt;&lt;br&gt; For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc&#x3D;%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) &lt;br&gt;&lt;br&gt; Minimum api-version: 2015-06-15
   * @return licenseType
   */
  @javax.annotation.Nullable
  public String getLicenseType() {
    return licenseType;
  }

  public void setLicenseType(String licenseType) {
    this.licenseType = licenseType;
  }


  public VirtualMachineScaleSetVMProfile networkProfile(VirtualMachineScaleSetNetworkProfile networkProfile) {
    this.networkProfile = networkProfile;
    return this;
  }

  /**
   * Get networkProfile
   * @return networkProfile
   */
  @javax.annotation.Nullable
  public VirtualMachineScaleSetNetworkProfile getNetworkProfile() {
    return networkProfile;
  }

  public void setNetworkProfile(VirtualMachineScaleSetNetworkProfile networkProfile) {
    this.networkProfile = networkProfile;
  }


  public VirtualMachineScaleSetVMProfile osProfile(VirtualMachineScaleSetOSProfile osProfile) {
    this.osProfile = osProfile;
    return this;
  }

  /**
   * Get osProfile
   * @return osProfile
   */
  @javax.annotation.Nullable
  public VirtualMachineScaleSetOSProfile getOsProfile() {
    return osProfile;
  }

  public void setOsProfile(VirtualMachineScaleSetOSProfile osProfile) {
    this.osProfile = osProfile;
  }


  public VirtualMachineScaleSetVMProfile priority(PriorityEnum priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Specifies the priority for the virtual machines in the scale set. &lt;br&gt;&lt;br&gt;Minimum api-version: 2017-10-30-preview
   * @return priority
   */
  @javax.annotation.Nullable
  public PriorityEnum getPriority() {
    return priority;
  }

  public void setPriority(PriorityEnum priority) {
    this.priority = priority;
  }


  public VirtualMachineScaleSetVMProfile storageProfile(VirtualMachineScaleSetStorageProfile storageProfile) {
    this.storageProfile = storageProfile;
    return this;
  }

  /**
   * Get storageProfile
   * @return storageProfile
   */
  @javax.annotation.Nullable
  public VirtualMachineScaleSetStorageProfile getStorageProfile() {
    return storageProfile;
  }

  public void setStorageProfile(VirtualMachineScaleSetStorageProfile storageProfile) {
    this.storageProfile = storageProfile;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualMachineScaleSetVMProfile virtualMachineScaleSetVMProfile = (VirtualMachineScaleSetVMProfile) o;
    return Objects.equals(this.additionalCapabilities, virtualMachineScaleSetVMProfile.additionalCapabilities) &&
        Objects.equals(this.diagnosticsProfile, virtualMachineScaleSetVMProfile.diagnosticsProfile) &&
        Objects.equals(this.evictionPolicy, virtualMachineScaleSetVMProfile.evictionPolicy) &&
        Objects.equals(this.extensionProfile, virtualMachineScaleSetVMProfile.extensionProfile) &&
        Objects.equals(this.licenseType, virtualMachineScaleSetVMProfile.licenseType) &&
        Objects.equals(this.networkProfile, virtualMachineScaleSetVMProfile.networkProfile) &&
        Objects.equals(this.osProfile, virtualMachineScaleSetVMProfile.osProfile) &&
        Objects.equals(this.priority, virtualMachineScaleSetVMProfile.priority) &&
        Objects.equals(this.storageProfile, virtualMachineScaleSetVMProfile.storageProfile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalCapabilities, diagnosticsProfile, evictionPolicy, extensionProfile, licenseType, networkProfile, osProfile, priority, storageProfile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualMachineScaleSetVMProfile {\n");
    sb.append("    additionalCapabilities: ").append(toIndentedString(additionalCapabilities)).append("\n");
    sb.append("    diagnosticsProfile: ").append(toIndentedString(diagnosticsProfile)).append("\n");
    sb.append("    evictionPolicy: ").append(toIndentedString(evictionPolicy)).append("\n");
    sb.append("    extensionProfile: ").append(toIndentedString(extensionProfile)).append("\n");
    sb.append("    licenseType: ").append(toIndentedString(licenseType)).append("\n");
    sb.append("    networkProfile: ").append(toIndentedString(networkProfile)).append("\n");
    sb.append("    osProfile: ").append(toIndentedString(osProfile)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    storageProfile: ").append(toIndentedString(storageProfile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additionalCapabilities");
    openapiFields.add("diagnosticsProfile");
    openapiFields.add("evictionPolicy");
    openapiFields.add("extensionProfile");
    openapiFields.add("licenseType");
    openapiFields.add("networkProfile");
    openapiFields.add("osProfile");
    openapiFields.add("priority");
    openapiFields.add("storageProfile");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VirtualMachineScaleSetVMProfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VirtualMachineScaleSetVMProfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VirtualMachineScaleSetVMProfile is not found in the empty JSON string", VirtualMachineScaleSetVMProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VirtualMachineScaleSetVMProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VirtualMachineScaleSetVMProfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `additionalCapabilities`
      if (jsonObj.get("additionalCapabilities") != null && !jsonObj.get("additionalCapabilities").isJsonNull()) {
        AdditionalCapabilities.validateJsonElement(jsonObj.get("additionalCapabilities"));
      }
      // validate the optional field `diagnosticsProfile`
      if (jsonObj.get("diagnosticsProfile") != null && !jsonObj.get("diagnosticsProfile").isJsonNull()) {
        DiagnosticsProfile.validateJsonElement(jsonObj.get("diagnosticsProfile"));
      }
      if ((jsonObj.get("evictionPolicy") != null && !jsonObj.get("evictionPolicy").isJsonNull()) && !jsonObj.get("evictionPolicy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `evictionPolicy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("evictionPolicy").toString()));
      }
      // validate the optional field `evictionPolicy`
      if (jsonObj.get("evictionPolicy") != null && !jsonObj.get("evictionPolicy").isJsonNull()) {
        EvictionPolicyEnum.validateJsonElement(jsonObj.get("evictionPolicy"));
      }
      // validate the optional field `extensionProfile`
      if (jsonObj.get("extensionProfile") != null && !jsonObj.get("extensionProfile").isJsonNull()) {
        VirtualMachineScaleSetExtensionProfile.validateJsonElement(jsonObj.get("extensionProfile"));
      }
      if ((jsonObj.get("licenseType") != null && !jsonObj.get("licenseType").isJsonNull()) && !jsonObj.get("licenseType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `licenseType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("licenseType").toString()));
      }
      // validate the optional field `networkProfile`
      if (jsonObj.get("networkProfile") != null && !jsonObj.get("networkProfile").isJsonNull()) {
        VirtualMachineScaleSetNetworkProfile.validateJsonElement(jsonObj.get("networkProfile"));
      }
      // validate the optional field `osProfile`
      if (jsonObj.get("osProfile") != null && !jsonObj.get("osProfile").isJsonNull()) {
        VirtualMachineScaleSetOSProfile.validateJsonElement(jsonObj.get("osProfile"));
      }
      if ((jsonObj.get("priority") != null && !jsonObj.get("priority").isJsonNull()) && !jsonObj.get("priority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priority").toString()));
      }
      // validate the optional field `priority`
      if (jsonObj.get("priority") != null && !jsonObj.get("priority").isJsonNull()) {
        PriorityEnum.validateJsonElement(jsonObj.get("priority"));
      }
      // validate the optional field `storageProfile`
      if (jsonObj.get("storageProfile") != null && !jsonObj.get("storageProfile").isJsonNull()) {
        VirtualMachineScaleSetStorageProfile.validateJsonElement(jsonObj.get("storageProfile"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VirtualMachineScaleSetVMProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VirtualMachineScaleSetVMProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VirtualMachineScaleSetVMProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VirtualMachineScaleSetVMProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<VirtualMachineScaleSetVMProfile>() {
           @Override
           public void write(JsonWriter out, VirtualMachineScaleSetVMProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VirtualMachineScaleSetVMProfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VirtualMachineScaleSetVMProfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VirtualMachineScaleSetVMProfile
   * @throws IOException if the JSON string is invalid with respect to VirtualMachineScaleSetVMProfile
   */
  public static VirtualMachineScaleSetVMProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VirtualMachineScaleSetVMProfile.class);
  }

  /**
   * Convert an instance of VirtualMachineScaleSetVMProfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

