/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AutomaticRepairsPolicy;
import org.openapitools.client.model.SubResource;
import org.openapitools.client.model.UpgradePolicy;
import org.openapitools.client.model.VirtualMachineScaleSetUpdateVMProfile;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes the properties of a Virtual Machine Scale Set.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:49:21.335968-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VirtualMachineScaleSetUpdateProperties {
  public static final String SERIALIZED_NAME_AUTOMATIC_REPAIRS_POLICY = "automaticRepairsPolicy";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_REPAIRS_POLICY)
  private AutomaticRepairsPolicy automaticRepairsPolicy;

  public static final String SERIALIZED_NAME_DO_NOT_RUN_EXTENSIONS_ON_OVERPROVISIONED_V_MS = "doNotRunExtensionsOnOverprovisionedVMs";
  @SerializedName(SERIALIZED_NAME_DO_NOT_RUN_EXTENSIONS_ON_OVERPROVISIONED_V_MS)
  private Boolean doNotRunExtensionsOnOverprovisionedVMs;

  public static final String SERIALIZED_NAME_OVERPROVISION = "overprovision";
  @SerializedName(SERIALIZED_NAME_OVERPROVISION)
  private Boolean overprovision;

  public static final String SERIALIZED_NAME_PROXIMITY_PLACEMENT_GROUP = "proximityPlacementGroup";
  @SerializedName(SERIALIZED_NAME_PROXIMITY_PLACEMENT_GROUP)
  private SubResource proximityPlacementGroup;

  public static final String SERIALIZED_NAME_SINGLE_PLACEMENT_GROUP = "singlePlacementGroup";
  @SerializedName(SERIALIZED_NAME_SINGLE_PLACEMENT_GROUP)
  private Boolean singlePlacementGroup;

  public static final String SERIALIZED_NAME_UPGRADE_POLICY = "upgradePolicy";
  @SerializedName(SERIALIZED_NAME_UPGRADE_POLICY)
  private UpgradePolicy upgradePolicy;

  public static final String SERIALIZED_NAME_VIRTUAL_MACHINE_PROFILE = "virtualMachineProfile";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_MACHINE_PROFILE)
  private VirtualMachineScaleSetUpdateVMProfile virtualMachineProfile;

  public VirtualMachineScaleSetUpdateProperties() {
  }

  public VirtualMachineScaleSetUpdateProperties automaticRepairsPolicy(AutomaticRepairsPolicy automaticRepairsPolicy) {
    this.automaticRepairsPolicy = automaticRepairsPolicy;
    return this;
  }

  /**
   * Get automaticRepairsPolicy
   * @return automaticRepairsPolicy
   */
  @javax.annotation.Nullable
  public AutomaticRepairsPolicy getAutomaticRepairsPolicy() {
    return automaticRepairsPolicy;
  }

  public void setAutomaticRepairsPolicy(AutomaticRepairsPolicy automaticRepairsPolicy) {
    this.automaticRepairsPolicy = automaticRepairsPolicy;
  }


  public VirtualMachineScaleSetUpdateProperties doNotRunExtensionsOnOverprovisionedVMs(Boolean doNotRunExtensionsOnOverprovisionedVMs) {
    this.doNotRunExtensionsOnOverprovisionedVMs = doNotRunExtensionsOnOverprovisionedVMs;
    return this;
  }

  /**
   * When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
   * @return doNotRunExtensionsOnOverprovisionedVMs
   */
  @javax.annotation.Nullable
  public Boolean getDoNotRunExtensionsOnOverprovisionedVMs() {
    return doNotRunExtensionsOnOverprovisionedVMs;
  }

  public void setDoNotRunExtensionsOnOverprovisionedVMs(Boolean doNotRunExtensionsOnOverprovisionedVMs) {
    this.doNotRunExtensionsOnOverprovisionedVMs = doNotRunExtensionsOnOverprovisionedVMs;
  }


  public VirtualMachineScaleSetUpdateProperties overprovision(Boolean overprovision) {
    this.overprovision = overprovision;
    return this;
  }

  /**
   * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
   * @return overprovision
   */
  @javax.annotation.Nullable
  public Boolean getOverprovision() {
    return overprovision;
  }

  public void setOverprovision(Boolean overprovision) {
    this.overprovision = overprovision;
  }


  public VirtualMachineScaleSetUpdateProperties proximityPlacementGroup(SubResource proximityPlacementGroup) {
    this.proximityPlacementGroup = proximityPlacementGroup;
    return this;
  }

  /**
   * Get proximityPlacementGroup
   * @return proximityPlacementGroup
   */
  @javax.annotation.Nullable
  public SubResource getProximityPlacementGroup() {
    return proximityPlacementGroup;
  }

  public void setProximityPlacementGroup(SubResource proximityPlacementGroup) {
    this.proximityPlacementGroup = proximityPlacementGroup;
  }


  public VirtualMachineScaleSetUpdateProperties singlePlacementGroup(Boolean singlePlacementGroup) {
    this.singlePlacementGroup = singlePlacementGroup;
    return this;
  }

  /**
   * When true this limits the scale set to a single placement group, of max size 100 virtual machines.
   * @return singlePlacementGroup
   */
  @javax.annotation.Nullable
  public Boolean getSinglePlacementGroup() {
    return singlePlacementGroup;
  }

  public void setSinglePlacementGroup(Boolean singlePlacementGroup) {
    this.singlePlacementGroup = singlePlacementGroup;
  }


  public VirtualMachineScaleSetUpdateProperties upgradePolicy(UpgradePolicy upgradePolicy) {
    this.upgradePolicy = upgradePolicy;
    return this;
  }

  /**
   * Get upgradePolicy
   * @return upgradePolicy
   */
  @javax.annotation.Nullable
  public UpgradePolicy getUpgradePolicy() {
    return upgradePolicy;
  }

  public void setUpgradePolicy(UpgradePolicy upgradePolicy) {
    this.upgradePolicy = upgradePolicy;
  }


  public VirtualMachineScaleSetUpdateProperties virtualMachineProfile(VirtualMachineScaleSetUpdateVMProfile virtualMachineProfile) {
    this.virtualMachineProfile = virtualMachineProfile;
    return this;
  }

  /**
   * Get virtualMachineProfile
   * @return virtualMachineProfile
   */
  @javax.annotation.Nullable
  public VirtualMachineScaleSetUpdateVMProfile getVirtualMachineProfile() {
    return virtualMachineProfile;
  }

  public void setVirtualMachineProfile(VirtualMachineScaleSetUpdateVMProfile virtualMachineProfile) {
    this.virtualMachineProfile = virtualMachineProfile;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualMachineScaleSetUpdateProperties virtualMachineScaleSetUpdateProperties = (VirtualMachineScaleSetUpdateProperties) o;
    return Objects.equals(this.automaticRepairsPolicy, virtualMachineScaleSetUpdateProperties.automaticRepairsPolicy) &&
        Objects.equals(this.doNotRunExtensionsOnOverprovisionedVMs, virtualMachineScaleSetUpdateProperties.doNotRunExtensionsOnOverprovisionedVMs) &&
        Objects.equals(this.overprovision, virtualMachineScaleSetUpdateProperties.overprovision) &&
        Objects.equals(this.proximityPlacementGroup, virtualMachineScaleSetUpdateProperties.proximityPlacementGroup) &&
        Objects.equals(this.singlePlacementGroup, virtualMachineScaleSetUpdateProperties.singlePlacementGroup) &&
        Objects.equals(this.upgradePolicy, virtualMachineScaleSetUpdateProperties.upgradePolicy) &&
        Objects.equals(this.virtualMachineProfile, virtualMachineScaleSetUpdateProperties.virtualMachineProfile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automaticRepairsPolicy, doNotRunExtensionsOnOverprovisionedVMs, overprovision, proximityPlacementGroup, singlePlacementGroup, upgradePolicy, virtualMachineProfile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualMachineScaleSetUpdateProperties {\n");
    sb.append("    automaticRepairsPolicy: ").append(toIndentedString(automaticRepairsPolicy)).append("\n");
    sb.append("    doNotRunExtensionsOnOverprovisionedVMs: ").append(toIndentedString(doNotRunExtensionsOnOverprovisionedVMs)).append("\n");
    sb.append("    overprovision: ").append(toIndentedString(overprovision)).append("\n");
    sb.append("    proximityPlacementGroup: ").append(toIndentedString(proximityPlacementGroup)).append("\n");
    sb.append("    singlePlacementGroup: ").append(toIndentedString(singlePlacementGroup)).append("\n");
    sb.append("    upgradePolicy: ").append(toIndentedString(upgradePolicy)).append("\n");
    sb.append("    virtualMachineProfile: ").append(toIndentedString(virtualMachineProfile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("automaticRepairsPolicy");
    openapiFields.add("doNotRunExtensionsOnOverprovisionedVMs");
    openapiFields.add("overprovision");
    openapiFields.add("proximityPlacementGroup");
    openapiFields.add("singlePlacementGroup");
    openapiFields.add("upgradePolicy");
    openapiFields.add("virtualMachineProfile");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VirtualMachineScaleSetUpdateProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VirtualMachineScaleSetUpdateProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VirtualMachineScaleSetUpdateProperties is not found in the empty JSON string", VirtualMachineScaleSetUpdateProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VirtualMachineScaleSetUpdateProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VirtualMachineScaleSetUpdateProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `automaticRepairsPolicy`
      if (jsonObj.get("automaticRepairsPolicy") != null && !jsonObj.get("automaticRepairsPolicy").isJsonNull()) {
        AutomaticRepairsPolicy.validateJsonElement(jsonObj.get("automaticRepairsPolicy"));
      }
      // validate the optional field `proximityPlacementGroup`
      if (jsonObj.get("proximityPlacementGroup") != null && !jsonObj.get("proximityPlacementGroup").isJsonNull()) {
        SubResource.validateJsonElement(jsonObj.get("proximityPlacementGroup"));
      }
      // validate the optional field `upgradePolicy`
      if (jsonObj.get("upgradePolicy") != null && !jsonObj.get("upgradePolicy").isJsonNull()) {
        UpgradePolicy.validateJsonElement(jsonObj.get("upgradePolicy"));
      }
      // validate the optional field `virtualMachineProfile`
      if (jsonObj.get("virtualMachineProfile") != null && !jsonObj.get("virtualMachineProfile").isJsonNull()) {
        VirtualMachineScaleSetUpdateVMProfile.validateJsonElement(jsonObj.get("virtualMachineProfile"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VirtualMachineScaleSetUpdateProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VirtualMachineScaleSetUpdateProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VirtualMachineScaleSetUpdateProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VirtualMachineScaleSetUpdateProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<VirtualMachineScaleSetUpdateProperties>() {
           @Override
           public void write(JsonWriter out, VirtualMachineScaleSetUpdateProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VirtualMachineScaleSetUpdateProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VirtualMachineScaleSetUpdateProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VirtualMachineScaleSetUpdateProperties
   * @throws IOException if the JSON string is invalid with respect to VirtualMachineScaleSetUpdateProperties
   */
  public static VirtualMachineScaleSetUpdateProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VirtualMachineScaleSetUpdateProperties.class);
  }

  /**
   * Convert an instance of VirtualMachineScaleSetUpdateProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

