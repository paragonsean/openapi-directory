/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceViewStatus from './InstanceViewStatus';

/**
 * The VirtualMachineHealthStatus model module.
 * @module model/VirtualMachineHealthStatus
 * @version 2018-04-01
 */
class VirtualMachineHealthStatus {
    /**
     * Constructs a new <code>VirtualMachineHealthStatus</code>.
     * The health status of the VM.
     * @alias module:model/VirtualMachineHealthStatus
     */
    constructor() { 
        
        VirtualMachineHealthStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VirtualMachineHealthStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VirtualMachineHealthStatus} obj Optional instance to populate.
     * @return {module:model/VirtualMachineHealthStatus} The populated <code>VirtualMachineHealthStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VirtualMachineHealthStatus();

            if (data.hasOwnProperty('status')) {
                obj['status'] = InstanceViewStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VirtualMachineHealthStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VirtualMachineHealthStatus</code>.
     */
    static validateJSON(data) {
        // validate the optional field `status`
        if (data['status']) { // data not null
          InstanceViewStatus.validateJSON(data['status']);
        }

        return true;
    }


}



/**
 * @member {module:model/InstanceViewStatus} status
 */
VirtualMachineHealthStatus.prototype['status'] = undefined;






export default VirtualMachineHealthStatus;

