/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SshConfiguration from './SshConfiguration';

/**
 * The LinuxConfiguration model module.
 * @module model/LinuxConfiguration
 * @version 2018-04-01
 */
class LinuxConfiguration {
    /**
     * Constructs a new <code>LinuxConfiguration</code>.
     * Specifies the Linux operating system settings on the virtual machine. &lt;br&gt;&lt;br&gt;For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc&#x3D;%2fazure%2fvirtual-machines%2flinux%2ftoc.json) &lt;br&gt;&lt;br&gt; For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc&#x3D;%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
     * @alias module:model/LinuxConfiguration
     */
    constructor() { 
        
        LinuxConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LinuxConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LinuxConfiguration} obj Optional instance to populate.
     * @return {module:model/LinuxConfiguration} The populated <code>LinuxConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LinuxConfiguration();

            if (data.hasOwnProperty('disablePasswordAuthentication')) {
                obj['disablePasswordAuthentication'] = ApiClient.convertToType(data['disablePasswordAuthentication'], 'Boolean');
            }
            if (data.hasOwnProperty('ssh')) {
                obj['ssh'] = SshConfiguration.constructFromObject(data['ssh']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LinuxConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LinuxConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ssh`
        if (data['ssh']) { // data not null
          SshConfiguration.validateJSON(data['ssh']);
        }

        return true;
    }


}



/**
 * Specifies whether password authentication should be disabled.
 * @member {Boolean} disablePasswordAuthentication
 */
LinuxConfiguration.prototype['disablePasswordAuthentication'] = undefined;

/**
 * @member {module:model/SshConfiguration} ssh
 */
LinuxConfiguration.prototype['ssh'] = undefined;






export default LinuxConfiguration;

