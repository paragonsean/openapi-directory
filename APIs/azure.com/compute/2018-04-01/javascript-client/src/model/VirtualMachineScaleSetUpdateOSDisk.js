/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Caching from './Caching';
import VirtualHardDisk from './VirtualHardDisk';
import VirtualMachineScaleSetManagedDiskParameters from './VirtualMachineScaleSetManagedDiskParameters';

/**
 * The VirtualMachineScaleSetUpdateOSDisk model module.
 * @module model/VirtualMachineScaleSetUpdateOSDisk
 * @version 2018-04-01
 */
class VirtualMachineScaleSetUpdateOSDisk {
    /**
     * Constructs a new <code>VirtualMachineScaleSetUpdateOSDisk</code>.
     * Describes virtual machine scale set operating system disk Update Object. This should be used for Updating VMSS OS Disk.
     * @alias module:model/VirtualMachineScaleSetUpdateOSDisk
     */
    constructor() { 
        
        VirtualMachineScaleSetUpdateOSDisk.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VirtualMachineScaleSetUpdateOSDisk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VirtualMachineScaleSetUpdateOSDisk} obj Optional instance to populate.
     * @return {module:model/VirtualMachineScaleSetUpdateOSDisk} The populated <code>VirtualMachineScaleSetUpdateOSDisk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VirtualMachineScaleSetUpdateOSDisk();

            if (data.hasOwnProperty('caching')) {
                obj['caching'] = Caching.constructFromObject(data['caching']);
            }
            if (data.hasOwnProperty('diskSizeGB')) {
                obj['diskSizeGB'] = ApiClient.convertToType(data['diskSizeGB'], 'Number');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = VirtualHardDisk.constructFromObject(data['image']);
            }
            if (data.hasOwnProperty('managedDisk')) {
                obj['managedDisk'] = VirtualMachineScaleSetManagedDiskParameters.constructFromObject(data['managedDisk']);
            }
            if (data.hasOwnProperty('vhdContainers')) {
                obj['vhdContainers'] = ApiClient.convertToType(data['vhdContainers'], ['String']);
            }
            if (data.hasOwnProperty('writeAcceleratorEnabled')) {
                obj['writeAcceleratorEnabled'] = ApiClient.convertToType(data['writeAcceleratorEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VirtualMachineScaleSetUpdateOSDisk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VirtualMachineScaleSetUpdateOSDisk</code>.
     */
    static validateJSON(data) {
        // validate the optional field `image`
        if (data['image']) { // data not null
          VirtualHardDisk.validateJSON(data['image']);
        }
        // validate the optional field `managedDisk`
        if (data['managedDisk']) { // data not null
          VirtualMachineScaleSetManagedDiskParameters.validateJSON(data['managedDisk']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['vhdContainers'])) {
            throw new Error("Expected the field `vhdContainers` to be an array in the JSON data but got " + data['vhdContainers']);
        }

        return true;
    }


}



/**
 * @member {module:model/Caching} caching
 */
VirtualMachineScaleSetUpdateOSDisk.prototype['caching'] = undefined;

/**
 * Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
 * @member {Number} diskSizeGB
 */
VirtualMachineScaleSetUpdateOSDisk.prototype['diskSizeGB'] = undefined;

/**
 * @member {module:model/VirtualHardDisk} image
 */
VirtualMachineScaleSetUpdateOSDisk.prototype['image'] = undefined;

/**
 * @member {module:model/VirtualMachineScaleSetManagedDiskParameters} managedDisk
 */
VirtualMachineScaleSetUpdateOSDisk.prototype['managedDisk'] = undefined;

/**
 * The list of virtual hard disk container uris.
 * @member {Array.<String>} vhdContainers
 */
VirtualMachineScaleSetUpdateOSDisk.prototype['vhdContainers'] = undefined;

/**
 * Specifies whether writeAccelerator should be enabled or disabled on the disk.
 * @member {Boolean} writeAcceleratorEnabled
 */
VirtualMachineScaleSetUpdateOSDisk.prototype['writeAcceleratorEnabled'] = undefined;






export default VirtualMachineScaleSetUpdateOSDisk;

