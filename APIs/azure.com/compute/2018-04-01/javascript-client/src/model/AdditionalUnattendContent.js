/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdditionalUnattendContent model module.
 * @module model/AdditionalUnattendContent
 * @version 2018-04-01
 */
class AdditionalUnattendContent {
    /**
     * Constructs a new <code>AdditionalUnattendContent</code>.
     * Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
     * @alias module:model/AdditionalUnattendContent
     */
    constructor() { 
        
        AdditionalUnattendContent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdditionalUnattendContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditionalUnattendContent} obj Optional instance to populate.
     * @return {module:model/AdditionalUnattendContent} The populated <code>AdditionalUnattendContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditionalUnattendContent();

            if (data.hasOwnProperty('componentName')) {
                obj['componentName'] = ApiClient.convertToType(data['componentName'], 'String');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('passName')) {
                obj['passName'] = ApiClient.convertToType(data['passName'], 'String');
            }
            if (data.hasOwnProperty('settingName')) {
                obj['settingName'] = ApiClient.convertToType(data['settingName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdditionalUnattendContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdditionalUnattendContent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['componentName'] && !(typeof data['componentName'] === 'string' || data['componentName'] instanceof String)) {
            throw new Error("Expected the field `componentName` to be a primitive type in the JSON string but got " + data['componentName']);
        }
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }
        // ensure the json data is a string
        if (data['passName'] && !(typeof data['passName'] === 'string' || data['passName'] instanceof String)) {
            throw new Error("Expected the field `passName` to be a primitive type in the JSON string but got " + data['passName']);
        }
        // ensure the json data is a string
        if (data['settingName'] && !(typeof data['settingName'] === 'string' || data['settingName'] instanceof String)) {
            throw new Error("Expected the field `settingName` to be a primitive type in the JSON string but got " + data['settingName']);
        }

        return true;
    }


}



/**
 * The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
 * @member {module:model/AdditionalUnattendContent.ComponentNameEnum} componentName
 */
AdditionalUnattendContent.prototype['componentName'] = undefined;

/**
 * Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
 * @member {String} content
 */
AdditionalUnattendContent.prototype['content'] = undefined;

/**
 * The pass name. Currently, the only allowable value is OobeSystem.
 * @member {module:model/AdditionalUnattendContent.PassNameEnum} passName
 */
AdditionalUnattendContent.prototype['passName'] = undefined;

/**
 * Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
 * @member {module:model/AdditionalUnattendContent.SettingNameEnum} settingName
 */
AdditionalUnattendContent.prototype['settingName'] = undefined;





/**
 * Allowed values for the <code>componentName</code> property.
 * @enum {String}
 * @readonly
 */
AdditionalUnattendContent['ComponentNameEnum'] = {

    /**
     * value: "Microsoft-Windows-Shell-Setup"
     * @const
     */
    "Microsoft-Windows-Shell-Setup": "Microsoft-Windows-Shell-Setup"
};


/**
 * Allowed values for the <code>passName</code> property.
 * @enum {String}
 * @readonly
 */
AdditionalUnattendContent['PassNameEnum'] = {

    /**
     * value: "OobeSystem"
     * @const
     */
    "OobeSystem": "OobeSystem"
};


/**
 * Allowed values for the <code>settingName</code> property.
 * @enum {String}
 * @readonly
 */
AdditionalUnattendContent['SettingNameEnum'] = {

    /**
     * value: "AutoLogon"
     * @const
     */
    "AutoLogon": "AutoLogon",

    /**
     * value: "FirstLogonCommands"
     * @const
     */
    "FirstLogonCommands": "FirstLogonCommands"
};



export default AdditionalUnattendContent;

