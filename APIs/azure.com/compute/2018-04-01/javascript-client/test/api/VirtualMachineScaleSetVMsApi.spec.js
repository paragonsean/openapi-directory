/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ComputeManagementClient);
  }
}(this, function(expect, ComputeManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ComputeManagementClient.VirtualMachineScaleSetVMsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VirtualMachineScaleSetVMsApi', function() {
    describe('virtualMachineScaleSetVMsDeallocate', function() {
      it('should call virtualMachineScaleSetVMsDeallocate successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsDeallocate
        //instance.virtualMachineScaleSetVMsDeallocate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualMachineScaleSetVMsDelete', function() {
      it('should call virtualMachineScaleSetVMsDelete successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsDelete
        //instance.virtualMachineScaleSetVMsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualMachineScaleSetVMsGet', function() {
      it('should call virtualMachineScaleSetVMsGet successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsGet
        //instance.virtualMachineScaleSetVMsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualMachineScaleSetVMsGetInstanceView', function() {
      it('should call virtualMachineScaleSetVMsGetInstanceView successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsGetInstanceView
        //instance.virtualMachineScaleSetVMsGetInstanceView(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualMachineScaleSetVMsList', function() {
      it('should call virtualMachineScaleSetVMsList successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsList
        //instance.virtualMachineScaleSetVMsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualMachineScaleSetVMsPerformMaintenance', function() {
      it('should call virtualMachineScaleSetVMsPerformMaintenance successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsPerformMaintenance
        //instance.virtualMachineScaleSetVMsPerformMaintenance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualMachineScaleSetVMsPowerOff', function() {
      it('should call virtualMachineScaleSetVMsPowerOff successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsPowerOff
        //instance.virtualMachineScaleSetVMsPowerOff(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualMachineScaleSetVMsRedeploy', function() {
      it('should call virtualMachineScaleSetVMsRedeploy successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsRedeploy
        //instance.virtualMachineScaleSetVMsRedeploy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualMachineScaleSetVMsReimage', function() {
      it('should call virtualMachineScaleSetVMsReimage successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsReimage
        //instance.virtualMachineScaleSetVMsReimage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualMachineScaleSetVMsReimageAll', function() {
      it('should call virtualMachineScaleSetVMsReimageAll successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsReimageAll
        //instance.virtualMachineScaleSetVMsReimageAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualMachineScaleSetVMsRestart', function() {
      it('should call virtualMachineScaleSetVMsRestart successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsRestart
        //instance.virtualMachineScaleSetVMsRestart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualMachineScaleSetVMsStart', function() {
      it('should call virtualMachineScaleSetVMsStart successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsStart
        //instance.virtualMachineScaleSetVMsStart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualMachineScaleSetVMsUpdate', function() {
      it('should call virtualMachineScaleSetVMsUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualMachineScaleSetVMsUpdate
        //instance.virtualMachineScaleSetVMsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
