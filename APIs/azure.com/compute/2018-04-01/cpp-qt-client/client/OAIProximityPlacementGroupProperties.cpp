/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProximityPlacementGroupProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProximityPlacementGroupProperties::OAIProximityPlacementGroupProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProximityPlacementGroupProperties::OAIProximityPlacementGroupProperties() {
    this->initializeModel();
}

OAIProximityPlacementGroupProperties::~OAIProximityPlacementGroupProperties() {}

void OAIProximityPlacementGroupProperties::initializeModel() {

    m_availability_sets_isSet = false;
    m_availability_sets_isValid = false;

    m_proximity_placement_group_type_isSet = false;
    m_proximity_placement_group_type_isValid = false;

    m_virtual_machine_scale_sets_isSet = false;
    m_virtual_machine_scale_sets_isValid = false;

    m_virtual_machines_isSet = false;
    m_virtual_machines_isValid = false;
}

void OAIProximityPlacementGroupProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProximityPlacementGroupProperties::fromJsonObject(QJsonObject json) {

    m_availability_sets_isValid = ::OpenAPI::fromJsonValue(m_availability_sets, json[QString("availabilitySets")]);
    m_availability_sets_isSet = !json[QString("availabilitySets")].isNull() && m_availability_sets_isValid;

    m_proximity_placement_group_type_isValid = ::OpenAPI::fromJsonValue(m_proximity_placement_group_type, json[QString("proximityPlacementGroupType")]);
    m_proximity_placement_group_type_isSet = !json[QString("proximityPlacementGroupType")].isNull() && m_proximity_placement_group_type_isValid;

    m_virtual_machine_scale_sets_isValid = ::OpenAPI::fromJsonValue(m_virtual_machine_scale_sets, json[QString("virtualMachineScaleSets")]);
    m_virtual_machine_scale_sets_isSet = !json[QString("virtualMachineScaleSets")].isNull() && m_virtual_machine_scale_sets_isValid;

    m_virtual_machines_isValid = ::OpenAPI::fromJsonValue(m_virtual_machines, json[QString("virtualMachines")]);
    m_virtual_machines_isSet = !json[QString("virtualMachines")].isNull() && m_virtual_machines_isValid;
}

QString OAIProximityPlacementGroupProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProximityPlacementGroupProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_availability_sets.size() > 0) {
        obj.insert(QString("availabilitySets"), ::OpenAPI::toJsonValue(m_availability_sets));
    }
    if (m_proximity_placement_group_type_isSet) {
        obj.insert(QString("proximityPlacementGroupType"), ::OpenAPI::toJsonValue(m_proximity_placement_group_type));
    }
    if (m_virtual_machine_scale_sets.size() > 0) {
        obj.insert(QString("virtualMachineScaleSets"), ::OpenAPI::toJsonValue(m_virtual_machine_scale_sets));
    }
    if (m_virtual_machines.size() > 0) {
        obj.insert(QString("virtualMachines"), ::OpenAPI::toJsonValue(m_virtual_machines));
    }
    return obj;
}

QList<OAISubResource> OAIProximityPlacementGroupProperties::getAvailabilitySets() const {
    return m_availability_sets;
}
void OAIProximityPlacementGroupProperties::setAvailabilitySets(const QList<OAISubResource> &availability_sets) {
    m_availability_sets = availability_sets;
    m_availability_sets_isSet = true;
}

bool OAIProximityPlacementGroupProperties::is_availability_sets_Set() const{
    return m_availability_sets_isSet;
}

bool OAIProximityPlacementGroupProperties::is_availability_sets_Valid() const{
    return m_availability_sets_isValid;
}

QString OAIProximityPlacementGroupProperties::getProximityPlacementGroupType() const {
    return m_proximity_placement_group_type;
}
void OAIProximityPlacementGroupProperties::setProximityPlacementGroupType(const QString &proximity_placement_group_type) {
    m_proximity_placement_group_type = proximity_placement_group_type;
    m_proximity_placement_group_type_isSet = true;
}

bool OAIProximityPlacementGroupProperties::is_proximity_placement_group_type_Set() const{
    return m_proximity_placement_group_type_isSet;
}

bool OAIProximityPlacementGroupProperties::is_proximity_placement_group_type_Valid() const{
    return m_proximity_placement_group_type_isValid;
}

QList<OAISubResource> OAIProximityPlacementGroupProperties::getVirtualMachineScaleSets() const {
    return m_virtual_machine_scale_sets;
}
void OAIProximityPlacementGroupProperties::setVirtualMachineScaleSets(const QList<OAISubResource> &virtual_machine_scale_sets) {
    m_virtual_machine_scale_sets = virtual_machine_scale_sets;
    m_virtual_machine_scale_sets_isSet = true;
}

bool OAIProximityPlacementGroupProperties::is_virtual_machine_scale_sets_Set() const{
    return m_virtual_machine_scale_sets_isSet;
}

bool OAIProximityPlacementGroupProperties::is_virtual_machine_scale_sets_Valid() const{
    return m_virtual_machine_scale_sets_isValid;
}

QList<OAISubResource> OAIProximityPlacementGroupProperties::getVirtualMachines() const {
    return m_virtual_machines;
}
void OAIProximityPlacementGroupProperties::setVirtualMachines(const QList<OAISubResource> &virtual_machines) {
    m_virtual_machines = virtual_machines;
    m_virtual_machines_isSet = true;
}

bool OAIProximityPlacementGroupProperties::is_virtual_machines_Set() const{
    return m_virtual_machines_isSet;
}

bool OAIProximityPlacementGroupProperties::is_virtual_machines_Valid() const{
    return m_virtual_machines_isValid;
}

bool OAIProximityPlacementGroupProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_availability_sets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_proximity_placement_group_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_virtual_machine_scale_sets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_virtual_machines.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProximityPlacementGroupProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
