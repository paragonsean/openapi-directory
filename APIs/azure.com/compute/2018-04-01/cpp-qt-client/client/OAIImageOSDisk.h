/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageOSDisk.h
 *
 * Describes an Operating System disk.
 */

#ifndef OAIImageOSDisk_H
#define OAIImageOSDisk_H

#include <QJsonObject>

#include "OAIStorageAccountType.h"
#include "OAISubResource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubResource;

class OAIImageOSDisk : public OAIObject {
public:
    OAIImageOSDisk();
    OAIImageOSDisk(QString json);
    ~OAIImageOSDisk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBlobUri() const;
    void setBlobUri(const QString &blob_uri);
    bool is_blob_uri_Set() const;
    bool is_blob_uri_Valid() const;

    QString getCaching() const;
    void setCaching(const QString &caching);
    bool is_caching_Set() const;
    bool is_caching_Valid() const;

    qint32 getDiskSizeGb() const;
    void setDiskSizeGb(const qint32 &disk_size_gb);
    bool is_disk_size_gb_Set() const;
    bool is_disk_size_gb_Valid() const;

    OAISubResource getManagedDisk() const;
    void setManagedDisk(const OAISubResource &managed_disk);
    bool is_managed_disk_Set() const;
    bool is_managed_disk_Valid() const;

    QString getOsState() const;
    void setOsState(const QString &os_state);
    bool is_os_state_Set() const;
    bool is_os_state_Valid() const;

    QString getOsType() const;
    void setOsType(const QString &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    OAISubResource getSnapshot() const;
    void setSnapshot(const OAISubResource &snapshot);
    bool is_snapshot_Set() const;
    bool is_snapshot_Valid() const;

    OAIStorageAccountType getStorageAccountType() const;
    void setStorageAccountType(const OAIStorageAccountType &storage_account_type);
    bool is_storage_account_type_Set() const;
    bool is_storage_account_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_blob_uri;
    bool m_blob_uri_isSet;
    bool m_blob_uri_isValid;

    QString m_caching;
    bool m_caching_isSet;
    bool m_caching_isValid;

    qint32 m_disk_size_gb;
    bool m_disk_size_gb_isSet;
    bool m_disk_size_gb_isValid;

    OAISubResource m_managed_disk;
    bool m_managed_disk_isSet;
    bool m_managed_disk_isValid;

    QString m_os_state;
    bool m_os_state_isSet;
    bool m_os_state_isValid;

    QString m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;

    OAISubResource m_snapshot;
    bool m_snapshot_isSet;
    bool m_snapshot_isValid;

    OAIStorageAccountType m_storage_account_type;
    bool m_storage_account_type_isSet;
    bool m_storage_account_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageOSDisk)

#endif // OAIImageOSDisk_H
