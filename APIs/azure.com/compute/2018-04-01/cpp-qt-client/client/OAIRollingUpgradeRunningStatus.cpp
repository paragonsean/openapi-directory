/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRollingUpgradeRunningStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRollingUpgradeRunningStatus::OAIRollingUpgradeRunningStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRollingUpgradeRunningStatus::OAIRollingUpgradeRunningStatus() {
    this->initializeModel();
}

OAIRollingUpgradeRunningStatus::~OAIRollingUpgradeRunningStatus() {}

void OAIRollingUpgradeRunningStatus::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_last_action_isSet = false;
    m_last_action_isValid = false;

    m_last_action_time_isSet = false;
    m_last_action_time_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIRollingUpgradeRunningStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRollingUpgradeRunningStatus::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_last_action_isValid = ::OpenAPI::fromJsonValue(m_last_action, json[QString("lastAction")]);
    m_last_action_isSet = !json[QString("lastAction")].isNull() && m_last_action_isValid;

    m_last_action_time_isValid = ::OpenAPI::fromJsonValue(m_last_action_time, json[QString("lastActionTime")]);
    m_last_action_time_isSet = !json[QString("lastActionTime")].isNull() && m_last_action_time_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIRollingUpgradeRunningStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRollingUpgradeRunningStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_last_action_isSet) {
        obj.insert(QString("lastAction"), ::OpenAPI::toJsonValue(m_last_action));
    }
    if (m_last_action_time_isSet) {
        obj.insert(QString("lastActionTime"), ::OpenAPI::toJsonValue(m_last_action_time));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIRollingUpgradeRunningStatus::getCode() const {
    return m_code;
}
void OAIRollingUpgradeRunningStatus::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIRollingUpgradeRunningStatus::is_code_Set() const{
    return m_code_isSet;
}

bool OAIRollingUpgradeRunningStatus::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIRollingUpgradeRunningStatus::getLastAction() const {
    return m_last_action;
}
void OAIRollingUpgradeRunningStatus::setLastAction(const QString &last_action) {
    m_last_action = last_action;
    m_last_action_isSet = true;
}

bool OAIRollingUpgradeRunningStatus::is_last_action_Set() const{
    return m_last_action_isSet;
}

bool OAIRollingUpgradeRunningStatus::is_last_action_Valid() const{
    return m_last_action_isValid;
}

QDateTime OAIRollingUpgradeRunningStatus::getLastActionTime() const {
    return m_last_action_time;
}
void OAIRollingUpgradeRunningStatus::setLastActionTime(const QDateTime &last_action_time) {
    m_last_action_time = last_action_time;
    m_last_action_time_isSet = true;
}

bool OAIRollingUpgradeRunningStatus::is_last_action_time_Set() const{
    return m_last_action_time_isSet;
}

bool OAIRollingUpgradeRunningStatus::is_last_action_time_Valid() const{
    return m_last_action_time_isValid;
}

QDateTime OAIRollingUpgradeRunningStatus::getStartTime() const {
    return m_start_time;
}
void OAIRollingUpgradeRunningStatus::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIRollingUpgradeRunningStatus::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIRollingUpgradeRunningStatus::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIRollingUpgradeRunningStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_action_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRollingUpgradeRunningStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
