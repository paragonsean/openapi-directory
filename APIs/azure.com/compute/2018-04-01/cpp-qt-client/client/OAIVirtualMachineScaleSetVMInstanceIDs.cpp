/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVirtualMachineScaleSetVMInstanceIDs.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVirtualMachineScaleSetVMInstanceIDs::OAIVirtualMachineScaleSetVMInstanceIDs(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVirtualMachineScaleSetVMInstanceIDs::OAIVirtualMachineScaleSetVMInstanceIDs() {
    this->initializeModel();
}

OAIVirtualMachineScaleSetVMInstanceIDs::~OAIVirtualMachineScaleSetVMInstanceIDs() {}

void OAIVirtualMachineScaleSetVMInstanceIDs::initializeModel() {

    m_instance_ids_isSet = false;
    m_instance_ids_isValid = false;
}

void OAIVirtualMachineScaleSetVMInstanceIDs::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVirtualMachineScaleSetVMInstanceIDs::fromJsonObject(QJsonObject json) {

    m_instance_ids_isValid = ::OpenAPI::fromJsonValue(m_instance_ids, json[QString("instanceIds")]);
    m_instance_ids_isSet = !json[QString("instanceIds")].isNull() && m_instance_ids_isValid;
}

QString OAIVirtualMachineScaleSetVMInstanceIDs::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVirtualMachineScaleSetVMInstanceIDs::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_ids.size() > 0) {
        obj.insert(QString("instanceIds"), ::OpenAPI::toJsonValue(m_instance_ids));
    }
    return obj;
}

QList<QString> OAIVirtualMachineScaleSetVMInstanceIDs::getInstanceIds() const {
    return m_instance_ids;
}
void OAIVirtualMachineScaleSetVMInstanceIDs::setInstanceIds(const QList<QString> &instance_ids) {
    m_instance_ids = instance_ids;
    m_instance_ids_isSet = true;
}

bool OAIVirtualMachineScaleSetVMInstanceIDs::is_instance_ids_Set() const{
    return m_instance_ids_isSet;
}

bool OAIVirtualMachineScaleSetVMInstanceIDs::is_instance_ids_Valid() const{
    return m_instance_ids_isValid;
}

bool OAIVirtualMachineScaleSetVMInstanceIDs::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVirtualMachineScaleSetVMInstanceIDs::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
