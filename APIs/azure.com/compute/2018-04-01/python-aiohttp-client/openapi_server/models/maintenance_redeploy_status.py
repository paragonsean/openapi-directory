# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MaintenanceRedeployStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_customer_initiated_maintenance_allowed: bool=None, last_operation_message: str=None, last_operation_result_code: str=None, maintenance_window_end_time: datetime=None, maintenance_window_start_time: datetime=None, pre_maintenance_window_end_time: datetime=None, pre_maintenance_window_start_time: datetime=None):
        """MaintenanceRedeployStatus - a model defined in OpenAPI

        :param is_customer_initiated_maintenance_allowed: The is_customer_initiated_maintenance_allowed of this MaintenanceRedeployStatus.
        :param last_operation_message: The last_operation_message of this MaintenanceRedeployStatus.
        :param last_operation_result_code: The last_operation_result_code of this MaintenanceRedeployStatus.
        :param maintenance_window_end_time: The maintenance_window_end_time of this MaintenanceRedeployStatus.
        :param maintenance_window_start_time: The maintenance_window_start_time of this MaintenanceRedeployStatus.
        :param pre_maintenance_window_end_time: The pre_maintenance_window_end_time of this MaintenanceRedeployStatus.
        :param pre_maintenance_window_start_time: The pre_maintenance_window_start_time of this MaintenanceRedeployStatus.
        """
        self.openapi_types = {
            'is_customer_initiated_maintenance_allowed': bool,
            'last_operation_message': str,
            'last_operation_result_code': str,
            'maintenance_window_end_time': datetime,
            'maintenance_window_start_time': datetime,
            'pre_maintenance_window_end_time': datetime,
            'pre_maintenance_window_start_time': datetime
        }

        self.attribute_map = {
            'is_customer_initiated_maintenance_allowed': 'isCustomerInitiatedMaintenanceAllowed',
            'last_operation_message': 'lastOperationMessage',
            'last_operation_result_code': 'lastOperationResultCode',
            'maintenance_window_end_time': 'maintenanceWindowEndTime',
            'maintenance_window_start_time': 'maintenanceWindowStartTime',
            'pre_maintenance_window_end_time': 'preMaintenanceWindowEndTime',
            'pre_maintenance_window_start_time': 'preMaintenanceWindowStartTime'
        }

        self._is_customer_initiated_maintenance_allowed = is_customer_initiated_maintenance_allowed
        self._last_operation_message = last_operation_message
        self._last_operation_result_code = last_operation_result_code
        self._maintenance_window_end_time = maintenance_window_end_time
        self._maintenance_window_start_time = maintenance_window_start_time
        self._pre_maintenance_window_end_time = pre_maintenance_window_end_time
        self._pre_maintenance_window_start_time = pre_maintenance_window_start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MaintenanceRedeployStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MaintenanceRedeployStatus of this MaintenanceRedeployStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_customer_initiated_maintenance_allowed(self):
        """Gets the is_customer_initiated_maintenance_allowed of this MaintenanceRedeployStatus.

        True, if customer is allowed to perform Maintenance.

        :return: The is_customer_initiated_maintenance_allowed of this MaintenanceRedeployStatus.
        :rtype: bool
        """
        return self._is_customer_initiated_maintenance_allowed

    @is_customer_initiated_maintenance_allowed.setter
    def is_customer_initiated_maintenance_allowed(self, is_customer_initiated_maintenance_allowed):
        """Sets the is_customer_initiated_maintenance_allowed of this MaintenanceRedeployStatus.

        True, if customer is allowed to perform Maintenance.

        :param is_customer_initiated_maintenance_allowed: The is_customer_initiated_maintenance_allowed of this MaintenanceRedeployStatus.
        :type is_customer_initiated_maintenance_allowed: bool
        """

        self._is_customer_initiated_maintenance_allowed = is_customer_initiated_maintenance_allowed

    @property
    def last_operation_message(self):
        """Gets the last_operation_message of this MaintenanceRedeployStatus.

        Message returned for the last Maintenance Operation.

        :return: The last_operation_message of this MaintenanceRedeployStatus.
        :rtype: str
        """
        return self._last_operation_message

    @last_operation_message.setter
    def last_operation_message(self, last_operation_message):
        """Sets the last_operation_message of this MaintenanceRedeployStatus.

        Message returned for the last Maintenance Operation.

        :param last_operation_message: The last_operation_message of this MaintenanceRedeployStatus.
        :type last_operation_message: str
        """

        self._last_operation_message = last_operation_message

    @property
    def last_operation_result_code(self):
        """Gets the last_operation_result_code of this MaintenanceRedeployStatus.

        The Last Maintenance Operation Result Code.

        :return: The last_operation_result_code of this MaintenanceRedeployStatus.
        :rtype: str
        """
        return self._last_operation_result_code

    @last_operation_result_code.setter
    def last_operation_result_code(self, last_operation_result_code):
        """Sets the last_operation_result_code of this MaintenanceRedeployStatus.

        The Last Maintenance Operation Result Code.

        :param last_operation_result_code: The last_operation_result_code of this MaintenanceRedeployStatus.
        :type last_operation_result_code: str
        """
        allowed_values = ["None", "RetryLater", "MaintenanceAborted", "MaintenanceCompleted"]  # noqa: E501
        if last_operation_result_code not in allowed_values:
            raise ValueError(
                "Invalid value for `last_operation_result_code` ({0}), must be one of {1}"
                .format(last_operation_result_code, allowed_values)
            )

        self._last_operation_result_code = last_operation_result_code

    @property
    def maintenance_window_end_time(self):
        """Gets the maintenance_window_end_time of this MaintenanceRedeployStatus.

        End Time for the Maintenance Window.

        :return: The maintenance_window_end_time of this MaintenanceRedeployStatus.
        :rtype: datetime
        """
        return self._maintenance_window_end_time

    @maintenance_window_end_time.setter
    def maintenance_window_end_time(self, maintenance_window_end_time):
        """Sets the maintenance_window_end_time of this MaintenanceRedeployStatus.

        End Time for the Maintenance Window.

        :param maintenance_window_end_time: The maintenance_window_end_time of this MaintenanceRedeployStatus.
        :type maintenance_window_end_time: datetime
        """

        self._maintenance_window_end_time = maintenance_window_end_time

    @property
    def maintenance_window_start_time(self):
        """Gets the maintenance_window_start_time of this MaintenanceRedeployStatus.

        Start Time for the Maintenance Window.

        :return: The maintenance_window_start_time of this MaintenanceRedeployStatus.
        :rtype: datetime
        """
        return self._maintenance_window_start_time

    @maintenance_window_start_time.setter
    def maintenance_window_start_time(self, maintenance_window_start_time):
        """Sets the maintenance_window_start_time of this MaintenanceRedeployStatus.

        Start Time for the Maintenance Window.

        :param maintenance_window_start_time: The maintenance_window_start_time of this MaintenanceRedeployStatus.
        :type maintenance_window_start_time: datetime
        """

        self._maintenance_window_start_time = maintenance_window_start_time

    @property
    def pre_maintenance_window_end_time(self):
        """Gets the pre_maintenance_window_end_time of this MaintenanceRedeployStatus.

        End Time for the Pre Maintenance Window.

        :return: The pre_maintenance_window_end_time of this MaintenanceRedeployStatus.
        :rtype: datetime
        """
        return self._pre_maintenance_window_end_time

    @pre_maintenance_window_end_time.setter
    def pre_maintenance_window_end_time(self, pre_maintenance_window_end_time):
        """Sets the pre_maintenance_window_end_time of this MaintenanceRedeployStatus.

        End Time for the Pre Maintenance Window.

        :param pre_maintenance_window_end_time: The pre_maintenance_window_end_time of this MaintenanceRedeployStatus.
        :type pre_maintenance_window_end_time: datetime
        """

        self._pre_maintenance_window_end_time = pre_maintenance_window_end_time

    @property
    def pre_maintenance_window_start_time(self):
        """Gets the pre_maintenance_window_start_time of this MaintenanceRedeployStatus.

        Start Time for the Pre Maintenance Window.

        :return: The pre_maintenance_window_start_time of this MaintenanceRedeployStatus.
        :rtype: datetime
        """
        return self._pre_maintenance_window_start_time

    @pre_maintenance_window_start_time.setter
    def pre_maintenance_window_start_time(self, pre_maintenance_window_start_time):
        """Sets the pre_maintenance_window_start_time of this MaintenanceRedeployStatus.

        Start Time for the Pre Maintenance Window.

        :param pre_maintenance_window_start_time: The pre_maintenance_window_start_time of this MaintenanceRedeployStatus.
        :type pre_maintenance_window_start_time: datetime
        """

        self._pre_maintenance_window_start_time = pre_maintenance_window_start_time
