/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2018-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ProximityPlacementGroup;
import org.openapitools.client.model.ProximityPlacementGroupListResult;
import org.openapitools.client.model.ProximityPlacementGroupUpdate;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProximityPlacementGroupsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ProximityPlacementGroupsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ProximityPlacementGroupsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for proximityPlacementGroupsCreateOrUpdate
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the Create Proximity Placement Group operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call proximityPlacementGroupsCreateOrUpdateCall(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, ProximityPlacementGroup parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "proximityPlacementGroupName" + "}", localVarApiClient.escapeString(proximityPlacementGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call proximityPlacementGroupsCreateOrUpdateValidateBeforeCall(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, ProximityPlacementGroup parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling proximityPlacementGroupsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'proximityPlacementGroupName' is set
        if (proximityPlacementGroupName == null) {
            throw new ApiException("Missing the required parameter 'proximityPlacementGroupName' when calling proximityPlacementGroupsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling proximityPlacementGroupsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling proximityPlacementGroupsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling proximityPlacementGroupsCreateOrUpdate(Async)");
        }

        return proximityPlacementGroupsCreateOrUpdateCall(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Create or update a proximity placement group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the Create Proximity Placement Group operation. (required)
     * @return ProximityPlacementGroup
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ProximityPlacementGroup proximityPlacementGroupsCreateOrUpdate(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, ProximityPlacementGroup parameters) throws ApiException {
        ApiResponse<ProximityPlacementGroup> localVarResp = proximityPlacementGroupsCreateOrUpdateWithHttpInfo(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Create or update a proximity placement group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the Create Proximity Placement Group operation. (required)
     * @return ApiResponse&lt;ProximityPlacementGroup&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ProximityPlacementGroup> proximityPlacementGroupsCreateOrUpdateWithHttpInfo(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, ProximityPlacementGroup parameters) throws ApiException {
        okhttp3.Call localVarCall = proximityPlacementGroupsCreateOrUpdateValidateBeforeCall(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<ProximityPlacementGroup>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create or update a proximity placement group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the Create Proximity Placement Group operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call proximityPlacementGroupsCreateOrUpdateAsync(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, ProximityPlacementGroup parameters, final ApiCallback<ProximityPlacementGroup> _callback) throws ApiException {

        okhttp3.Call localVarCall = proximityPlacementGroupsCreateOrUpdateValidateBeforeCall(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<ProximityPlacementGroup>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for proximityPlacementGroupsDelete
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call proximityPlacementGroupsDeleteCall(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "proximityPlacementGroupName" + "}", localVarApiClient.escapeString(proximityPlacementGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call proximityPlacementGroupsDeleteValidateBeforeCall(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling proximityPlacementGroupsDelete(Async)");
        }

        // verify the required parameter 'proximityPlacementGroupName' is set
        if (proximityPlacementGroupName == null) {
            throw new ApiException("Missing the required parameter 'proximityPlacementGroupName' when calling proximityPlacementGroupsDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling proximityPlacementGroupsDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling proximityPlacementGroupsDelete(Async)");
        }

        return proximityPlacementGroupsDeleteCall(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Delete a proximity placement group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public void proximityPlacementGroupsDelete(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId) throws ApiException {
        proximityPlacementGroupsDeleteWithHttpInfo(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId);
    }

    /**
     * 
     * Delete a proximity placement group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> proximityPlacementGroupsDeleteWithHttpInfo(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = proximityPlacementGroupsDeleteValidateBeforeCall(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Delete a proximity placement group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call proximityPlacementGroupsDeleteAsync(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = proximityPlacementGroupsDeleteValidateBeforeCall(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for proximityPlacementGroupsGet
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call proximityPlacementGroupsGetCall(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "proximityPlacementGroupName" + "}", localVarApiClient.escapeString(proximityPlacementGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call proximityPlacementGroupsGetValidateBeforeCall(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling proximityPlacementGroupsGet(Async)");
        }

        // verify the required parameter 'proximityPlacementGroupName' is set
        if (proximityPlacementGroupName == null) {
            throw new ApiException("Missing the required parameter 'proximityPlacementGroupName' when calling proximityPlacementGroupsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling proximityPlacementGroupsGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling proximityPlacementGroupsGet(Async)");
        }

        return proximityPlacementGroupsGetCall(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Retrieves information about a proximity placement group .
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ProximityPlacementGroup
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ProximityPlacementGroup proximityPlacementGroupsGet(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<ProximityPlacementGroup> localVarResp = proximityPlacementGroupsGetWithHttpInfo(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves information about a proximity placement group .
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;ProximityPlacementGroup&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ProximityPlacementGroup> proximityPlacementGroupsGetWithHttpInfo(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = proximityPlacementGroupsGetValidateBeforeCall(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<ProximityPlacementGroup>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves information about a proximity placement group .
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call proximityPlacementGroupsGetAsync(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, final ApiCallback<ProximityPlacementGroup> _callback) throws ApiException {

        okhttp3.Call localVarCall = proximityPlacementGroupsGetValidateBeforeCall(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<ProximityPlacementGroup>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for proximityPlacementGroupsListByResourceGroup
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call proximityPlacementGroupsListByResourceGroupCall(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call proximityPlacementGroupsListByResourceGroupValidateBeforeCall(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling proximityPlacementGroupsListByResourceGroup(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling proximityPlacementGroupsListByResourceGroup(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling proximityPlacementGroupsListByResourceGroup(Async)");
        }

        return proximityPlacementGroupsListByResourceGroupCall(resourceGroupName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Lists all proximity placement groups in a resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ProximityPlacementGroupListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ProximityPlacementGroupListResult proximityPlacementGroupsListByResourceGroup(String resourceGroupName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<ProximityPlacementGroupListResult> localVarResp = proximityPlacementGroupsListByResourceGroupWithHttpInfo(resourceGroupName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all proximity placement groups in a resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;ProximityPlacementGroupListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ProximityPlacementGroupListResult> proximityPlacementGroupsListByResourceGroupWithHttpInfo(String resourceGroupName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = proximityPlacementGroupsListByResourceGroupValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<ProximityPlacementGroupListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all proximity placement groups in a resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call proximityPlacementGroupsListByResourceGroupAsync(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback<ProximityPlacementGroupListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = proximityPlacementGroupsListByResourceGroupValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<ProximityPlacementGroupListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for proximityPlacementGroupsListBySubscription
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call proximityPlacementGroupsListBySubscriptionCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/proximityPlacementGroups"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call proximityPlacementGroupsListBySubscriptionValidateBeforeCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling proximityPlacementGroupsListBySubscription(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling proximityPlacementGroupsListBySubscription(Async)");
        }

        return proximityPlacementGroupsListBySubscriptionCall(apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Lists all proximity placement groups in a subscription.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ProximityPlacementGroupListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ProximityPlacementGroupListResult proximityPlacementGroupsListBySubscription(String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<ProximityPlacementGroupListResult> localVarResp = proximityPlacementGroupsListBySubscriptionWithHttpInfo(apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all proximity placement groups in a subscription.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;ProximityPlacementGroupListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ProximityPlacementGroupListResult> proximityPlacementGroupsListBySubscriptionWithHttpInfo(String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = proximityPlacementGroupsListBySubscriptionValidateBeforeCall(apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<ProximityPlacementGroupListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all proximity placement groups in a subscription.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call proximityPlacementGroupsListBySubscriptionAsync(String apiVersion, String subscriptionId, final ApiCallback<ProximityPlacementGroupListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = proximityPlacementGroupsListBySubscriptionValidateBeforeCall(apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<ProximityPlacementGroupListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for proximityPlacementGroupsUpdate
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the Update Proximity Placement Group operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call proximityPlacementGroupsUpdateCall(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, ProximityPlacementGroupUpdate parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "proximityPlacementGroupName" + "}", localVarApiClient.escapeString(proximityPlacementGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call proximityPlacementGroupsUpdateValidateBeforeCall(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, ProximityPlacementGroupUpdate parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling proximityPlacementGroupsUpdate(Async)");
        }

        // verify the required parameter 'proximityPlacementGroupName' is set
        if (proximityPlacementGroupName == null) {
            throw new ApiException("Missing the required parameter 'proximityPlacementGroupName' when calling proximityPlacementGroupsUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling proximityPlacementGroupsUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling proximityPlacementGroupsUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling proximityPlacementGroupsUpdate(Async)");
        }

        return proximityPlacementGroupsUpdateCall(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Update a proximity placement group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the Update Proximity Placement Group operation. (required)
     * @return ProximityPlacementGroup
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ProximityPlacementGroup proximityPlacementGroupsUpdate(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, ProximityPlacementGroupUpdate parameters) throws ApiException {
        ApiResponse<ProximityPlacementGroup> localVarResp = proximityPlacementGroupsUpdateWithHttpInfo(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Update a proximity placement group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the Update Proximity Placement Group operation. (required)
     * @return ApiResponse&lt;ProximityPlacementGroup&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ProximityPlacementGroup> proximityPlacementGroupsUpdateWithHttpInfo(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, ProximityPlacementGroupUpdate parameters) throws ApiException {
        okhttp3.Call localVarCall = proximityPlacementGroupsUpdateValidateBeforeCall(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<ProximityPlacementGroup>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update a proximity placement group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param proximityPlacementGroupName The name of the proximity placement group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the Update Proximity Placement Group operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call proximityPlacementGroupsUpdateAsync(String resourceGroupName, String proximityPlacementGroupName, String apiVersion, String subscriptionId, ProximityPlacementGroupUpdate parameters, final ApiCallback<ProximityPlacementGroup> _callback) throws ApiException {

        okhttp3.Call localVarCall = proximityPlacementGroupsUpdateValidateBeforeCall(resourceGroupName, proximityPlacementGroupName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<ProximityPlacementGroup>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
