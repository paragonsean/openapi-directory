# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.additional_capabilities import AdditionalCapabilities
from openapi_server.models.automatic_repairs_policy import AutomaticRepairsPolicy
from openapi_server.models.scale_in_policy import ScaleInPolicy
from openapi_server.models.sub_resource import SubResource
from openapi_server.models.upgrade_policy import UpgradePolicy
from openapi_server.models.virtual_machine_scale_set_update_vm_profile import VirtualMachineScaleSetUpdateVMProfile
from openapi_server import util


class VirtualMachineScaleSetUpdateProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_capabilities: AdditionalCapabilities=None, automatic_repairs_policy: AutomaticRepairsPolicy=None, do_not_run_extensions_on_overprovisioned_vms: bool=None, overprovision: bool=None, proximity_placement_group: SubResource=None, scale_in_policy: ScaleInPolicy=None, single_placement_group: bool=None, upgrade_policy: UpgradePolicy=None, virtual_machine_profile: VirtualMachineScaleSetUpdateVMProfile=None):
        """VirtualMachineScaleSetUpdateProperties - a model defined in OpenAPI

        :param additional_capabilities: The additional_capabilities of this VirtualMachineScaleSetUpdateProperties.
        :param automatic_repairs_policy: The automatic_repairs_policy of this VirtualMachineScaleSetUpdateProperties.
        :param do_not_run_extensions_on_overprovisioned_vms: The do_not_run_extensions_on_overprovisioned_vms of this VirtualMachineScaleSetUpdateProperties.
        :param overprovision: The overprovision of this VirtualMachineScaleSetUpdateProperties.
        :param proximity_placement_group: The proximity_placement_group of this VirtualMachineScaleSetUpdateProperties.
        :param scale_in_policy: The scale_in_policy of this VirtualMachineScaleSetUpdateProperties.
        :param single_placement_group: The single_placement_group of this VirtualMachineScaleSetUpdateProperties.
        :param upgrade_policy: The upgrade_policy of this VirtualMachineScaleSetUpdateProperties.
        :param virtual_machine_profile: The virtual_machine_profile of this VirtualMachineScaleSetUpdateProperties.
        """
        self.openapi_types = {
            'additional_capabilities': AdditionalCapabilities,
            'automatic_repairs_policy': AutomaticRepairsPolicy,
            'do_not_run_extensions_on_overprovisioned_vms': bool,
            'overprovision': bool,
            'proximity_placement_group': SubResource,
            'scale_in_policy': ScaleInPolicy,
            'single_placement_group': bool,
            'upgrade_policy': UpgradePolicy,
            'virtual_machine_profile': VirtualMachineScaleSetUpdateVMProfile
        }

        self.attribute_map = {
            'additional_capabilities': 'additionalCapabilities',
            'automatic_repairs_policy': 'automaticRepairsPolicy',
            'do_not_run_extensions_on_overprovisioned_vms': 'doNotRunExtensionsOnOverprovisionedVMs',
            'overprovision': 'overprovision',
            'proximity_placement_group': 'proximityPlacementGroup',
            'scale_in_policy': 'scaleInPolicy',
            'single_placement_group': 'singlePlacementGroup',
            'upgrade_policy': 'upgradePolicy',
            'virtual_machine_profile': 'virtualMachineProfile'
        }

        self._additional_capabilities = additional_capabilities
        self._automatic_repairs_policy = automatic_repairs_policy
        self._do_not_run_extensions_on_overprovisioned_vms = do_not_run_extensions_on_overprovisioned_vms
        self._overprovision = overprovision
        self._proximity_placement_group = proximity_placement_group
        self._scale_in_policy = scale_in_policy
        self._single_placement_group = single_placement_group
        self._upgrade_policy = upgrade_policy
        self._virtual_machine_profile = virtual_machine_profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineScaleSetUpdateProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineScaleSetUpdateProperties of this VirtualMachineScaleSetUpdateProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_capabilities(self):
        """Gets the additional_capabilities of this VirtualMachineScaleSetUpdateProperties.


        :return: The additional_capabilities of this VirtualMachineScaleSetUpdateProperties.
        :rtype: AdditionalCapabilities
        """
        return self._additional_capabilities

    @additional_capabilities.setter
    def additional_capabilities(self, additional_capabilities):
        """Sets the additional_capabilities of this VirtualMachineScaleSetUpdateProperties.


        :param additional_capabilities: The additional_capabilities of this VirtualMachineScaleSetUpdateProperties.
        :type additional_capabilities: AdditionalCapabilities
        """

        self._additional_capabilities = additional_capabilities

    @property
    def automatic_repairs_policy(self):
        """Gets the automatic_repairs_policy of this VirtualMachineScaleSetUpdateProperties.


        :return: The automatic_repairs_policy of this VirtualMachineScaleSetUpdateProperties.
        :rtype: AutomaticRepairsPolicy
        """
        return self._automatic_repairs_policy

    @automatic_repairs_policy.setter
    def automatic_repairs_policy(self, automatic_repairs_policy):
        """Sets the automatic_repairs_policy of this VirtualMachineScaleSetUpdateProperties.


        :param automatic_repairs_policy: The automatic_repairs_policy of this VirtualMachineScaleSetUpdateProperties.
        :type automatic_repairs_policy: AutomaticRepairsPolicy
        """

        self._automatic_repairs_policy = automatic_repairs_policy

    @property
    def do_not_run_extensions_on_overprovisioned_vms(self):
        """Gets the do_not_run_extensions_on_overprovisioned_vms of this VirtualMachineScaleSetUpdateProperties.

        When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.

        :return: The do_not_run_extensions_on_overprovisioned_vms of this VirtualMachineScaleSetUpdateProperties.
        :rtype: bool
        """
        return self._do_not_run_extensions_on_overprovisioned_vms

    @do_not_run_extensions_on_overprovisioned_vms.setter
    def do_not_run_extensions_on_overprovisioned_vms(self, do_not_run_extensions_on_overprovisioned_vms):
        """Sets the do_not_run_extensions_on_overprovisioned_vms of this VirtualMachineScaleSetUpdateProperties.

        When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.

        :param do_not_run_extensions_on_overprovisioned_vms: The do_not_run_extensions_on_overprovisioned_vms of this VirtualMachineScaleSetUpdateProperties.
        :type do_not_run_extensions_on_overprovisioned_vms: bool
        """

        self._do_not_run_extensions_on_overprovisioned_vms = do_not_run_extensions_on_overprovisioned_vms

    @property
    def overprovision(self):
        """Gets the overprovision of this VirtualMachineScaleSetUpdateProperties.

        Specifies whether the Virtual Machine Scale Set should be overprovisioned.

        :return: The overprovision of this VirtualMachineScaleSetUpdateProperties.
        :rtype: bool
        """
        return self._overprovision

    @overprovision.setter
    def overprovision(self, overprovision):
        """Sets the overprovision of this VirtualMachineScaleSetUpdateProperties.

        Specifies whether the Virtual Machine Scale Set should be overprovisioned.

        :param overprovision: The overprovision of this VirtualMachineScaleSetUpdateProperties.
        :type overprovision: bool
        """

        self._overprovision = overprovision

    @property
    def proximity_placement_group(self):
        """Gets the proximity_placement_group of this VirtualMachineScaleSetUpdateProperties.


        :return: The proximity_placement_group of this VirtualMachineScaleSetUpdateProperties.
        :rtype: SubResource
        """
        return self._proximity_placement_group

    @proximity_placement_group.setter
    def proximity_placement_group(self, proximity_placement_group):
        """Sets the proximity_placement_group of this VirtualMachineScaleSetUpdateProperties.


        :param proximity_placement_group: The proximity_placement_group of this VirtualMachineScaleSetUpdateProperties.
        :type proximity_placement_group: SubResource
        """

        self._proximity_placement_group = proximity_placement_group

    @property
    def scale_in_policy(self):
        """Gets the scale_in_policy of this VirtualMachineScaleSetUpdateProperties.


        :return: The scale_in_policy of this VirtualMachineScaleSetUpdateProperties.
        :rtype: ScaleInPolicy
        """
        return self._scale_in_policy

    @scale_in_policy.setter
    def scale_in_policy(self, scale_in_policy):
        """Sets the scale_in_policy of this VirtualMachineScaleSetUpdateProperties.


        :param scale_in_policy: The scale_in_policy of this VirtualMachineScaleSetUpdateProperties.
        :type scale_in_policy: ScaleInPolicy
        """

        self._scale_in_policy = scale_in_policy

    @property
    def single_placement_group(self):
        """Gets the single_placement_group of this VirtualMachineScaleSetUpdateProperties.

        When true this limits the scale set to a single placement group, of max size 100 virtual machines.

        :return: The single_placement_group of this VirtualMachineScaleSetUpdateProperties.
        :rtype: bool
        """
        return self._single_placement_group

    @single_placement_group.setter
    def single_placement_group(self, single_placement_group):
        """Sets the single_placement_group of this VirtualMachineScaleSetUpdateProperties.

        When true this limits the scale set to a single placement group, of max size 100 virtual machines.

        :param single_placement_group: The single_placement_group of this VirtualMachineScaleSetUpdateProperties.
        :type single_placement_group: bool
        """

        self._single_placement_group = single_placement_group

    @property
    def upgrade_policy(self):
        """Gets the upgrade_policy of this VirtualMachineScaleSetUpdateProperties.


        :return: The upgrade_policy of this VirtualMachineScaleSetUpdateProperties.
        :rtype: UpgradePolicy
        """
        return self._upgrade_policy

    @upgrade_policy.setter
    def upgrade_policy(self, upgrade_policy):
        """Sets the upgrade_policy of this VirtualMachineScaleSetUpdateProperties.


        :param upgrade_policy: The upgrade_policy of this VirtualMachineScaleSetUpdateProperties.
        :type upgrade_policy: UpgradePolicy
        """

        self._upgrade_policy = upgrade_policy

    @property
    def virtual_machine_profile(self):
        """Gets the virtual_machine_profile of this VirtualMachineScaleSetUpdateProperties.


        :return: The virtual_machine_profile of this VirtualMachineScaleSetUpdateProperties.
        :rtype: VirtualMachineScaleSetUpdateVMProfile
        """
        return self._virtual_machine_profile

    @virtual_machine_profile.setter
    def virtual_machine_profile(self, virtual_machine_profile):
        """Sets the virtual_machine_profile of this VirtualMachineScaleSetUpdateProperties.


        :param virtual_machine_profile: The virtual_machine_profile of this VirtualMachineScaleSetUpdateProperties.
        :type virtual_machine_profile: VirtualMachineScaleSetUpdateVMProfile
        """

        self._virtual_machine_profile = virtual_machine_profile
