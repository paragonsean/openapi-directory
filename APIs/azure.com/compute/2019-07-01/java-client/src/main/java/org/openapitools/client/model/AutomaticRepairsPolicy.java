/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies the configuration parameters for automatic repairs on the virtual machine scale set.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:49:39.629468-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AutomaticRepairsPolicy {
  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_GRACE_PERIOD = "gracePeriod";
  @SerializedName(SERIALIZED_NAME_GRACE_PERIOD)
  private String gracePeriod;

  public AutomaticRepairsPolicy() {
  }

  public AutomaticRepairsPolicy enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false.
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public AutomaticRepairsPolicy gracePeriod(String gracePeriod) {
    this.gracePeriod = gracePeriod;
    return this;
  }

  /**
   * The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 30 minutes (PT30M), which is also the default value.
   * @return gracePeriod
   */
  @javax.annotation.Nullable
  public String getGracePeriod() {
    return gracePeriod;
  }

  public void setGracePeriod(String gracePeriod) {
    this.gracePeriod = gracePeriod;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomaticRepairsPolicy automaticRepairsPolicy = (AutomaticRepairsPolicy) o;
    return Objects.equals(this.enabled, automaticRepairsPolicy.enabled) &&
        Objects.equals(this.gracePeriod, automaticRepairsPolicy.gracePeriod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, gracePeriod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomaticRepairsPolicy {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    gracePeriod: ").append(toIndentedString(gracePeriod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enabled");
    openapiFields.add("gracePeriod");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutomaticRepairsPolicy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutomaticRepairsPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutomaticRepairsPolicy is not found in the empty JSON string", AutomaticRepairsPolicy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutomaticRepairsPolicy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutomaticRepairsPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("gracePeriod") != null && !jsonObj.get("gracePeriod").isJsonNull()) && !jsonObj.get("gracePeriod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gracePeriod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gracePeriod").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutomaticRepairsPolicy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutomaticRepairsPolicy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutomaticRepairsPolicy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutomaticRepairsPolicy.class));

       return (TypeAdapter<T>) new TypeAdapter<AutomaticRepairsPolicy>() {
           @Override
           public void write(JsonWriter out, AutomaticRepairsPolicy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutomaticRepairsPolicy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutomaticRepairsPolicy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutomaticRepairsPolicy
   * @throws IOException if the JSON string is invalid with respect to AutomaticRepairsPolicy
   */
  public static AutomaticRepairsPolicy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutomaticRepairsPolicy.class);
  }

  /**
   * Convert an instance of AutomaticRepairsPolicy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

