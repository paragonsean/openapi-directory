/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DedicatedHost;
import org.openapitools.client.model.DedicatedHostUpdate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DedicatedHostsApi
 */
@Disabled
public class DedicatedHostsApiTest {

    private final DedicatedHostsApi api = new DedicatedHostsApi();

    /**
     * Create or update a dedicated host .
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dedicatedHostsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String hostGroupName = null;
        String hostName = null;
        String apiVersion = null;
        String subscriptionId = null;
        DedicatedHost parameters = null;
        DedicatedHost response = api.dedicatedHostsCreateOrUpdate(resourceGroupName, hostGroupName, hostName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Delete a dedicated host.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dedicatedHostsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String hostGroupName = null;
        String hostName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.dedicatedHostsDelete(resourceGroupName, hostGroupName, hostName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Retrieves information about a dedicated host.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dedicatedHostsGetTest() throws ApiException {
        String resourceGroupName = null;
        String hostGroupName = null;
        String hostName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $expand = null;
        DedicatedHost response = api.dedicatedHostsGet(resourceGroupName, hostGroupName, hostName, apiVersion, subscriptionId, $expand);
        // TODO: test validations
    }

    /**
     * Update an dedicated host .
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dedicatedHostsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String hostGroupName = null;
        String hostName = null;
        String apiVersion = null;
        String subscriptionId = null;
        DedicatedHostUpdate parameters = null;
        DedicatedHost response = api.dedicatedHostsUpdate(resourceGroupName, hostGroupName, hostName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
