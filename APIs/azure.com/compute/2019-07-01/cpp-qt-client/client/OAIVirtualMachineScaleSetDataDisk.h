/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualMachineScaleSetDataDisk.h
 *
 * Describes a virtual machine scale set data disk.
 */

#ifndef OAIVirtualMachineScaleSetDataDisk_H
#define OAIVirtualMachineScaleSetDataDisk_H

#include <QJsonObject>

#include "OAICaching.h"
#include "OAICreateOption.h"
#include "OAIVirtualMachineScaleSetManagedDiskParameters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVirtualMachineScaleSetManagedDiskParameters;

class OAIVirtualMachineScaleSetDataDisk : public OAIObject {
public:
    OAIVirtualMachineScaleSetDataDisk();
    OAIVirtualMachineScaleSetDataDisk(QString json);
    ~OAIVirtualMachineScaleSetDataDisk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICaching getCaching() const;
    void setCaching(const OAICaching &caching);
    bool is_caching_Set() const;
    bool is_caching_Valid() const;

    OAICreateOption getCreateOption() const;
    void setCreateOption(const OAICreateOption &create_option);
    bool is_create_option_Set() const;
    bool is_create_option_Valid() const;

    qint64 getDiskIopsReadWrite() const;
    void setDiskIopsReadWrite(const qint64 &disk_iops_read_write);
    bool is_disk_iops_read_write_Set() const;
    bool is_disk_iops_read_write_Valid() const;

    qint64 getDiskMBpsReadWrite() const;
    void setDiskMBpsReadWrite(const qint64 &disk_m_bps_read_write);
    bool is_disk_m_bps_read_write_Set() const;
    bool is_disk_m_bps_read_write_Valid() const;

    qint32 getDiskSizeGb() const;
    void setDiskSizeGb(const qint32 &disk_size_gb);
    bool is_disk_size_gb_Set() const;
    bool is_disk_size_gb_Valid() const;

    qint32 getLun() const;
    void setLun(const qint32 &lun);
    bool is_lun_Set() const;
    bool is_lun_Valid() const;

    OAIVirtualMachineScaleSetManagedDiskParameters getManagedDisk() const;
    void setManagedDisk(const OAIVirtualMachineScaleSetManagedDiskParameters &managed_disk);
    bool is_managed_disk_Set() const;
    bool is_managed_disk_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isWriteAcceleratorEnabled() const;
    void setWriteAcceleratorEnabled(const bool &write_accelerator_enabled);
    bool is_write_accelerator_enabled_Set() const;
    bool is_write_accelerator_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICaching m_caching;
    bool m_caching_isSet;
    bool m_caching_isValid;

    OAICreateOption m_create_option;
    bool m_create_option_isSet;
    bool m_create_option_isValid;

    qint64 m_disk_iops_read_write;
    bool m_disk_iops_read_write_isSet;
    bool m_disk_iops_read_write_isValid;

    qint64 m_disk_m_bps_read_write;
    bool m_disk_m_bps_read_write_isSet;
    bool m_disk_m_bps_read_write_isValid;

    qint32 m_disk_size_gb;
    bool m_disk_size_gb_isSet;
    bool m_disk_size_gb_isValid;

    qint32 m_lun;
    bool m_lun_isSet;
    bool m_lun_isValid;

    OAIVirtualMachineScaleSetManagedDiskParameters m_managed_disk;
    bool m_managed_disk_isSet;
    bool m_managed_disk_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_write_accelerator_enabled;
    bool m_write_accelerator_enabled_isSet;
    bool m_write_accelerator_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualMachineScaleSetDataDisk)

#endif // OAIVirtualMachineScaleSetDataDisk_H
