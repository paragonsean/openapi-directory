/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMaintenanceRedeployStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMaintenanceRedeployStatus::OAIMaintenanceRedeployStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMaintenanceRedeployStatus::OAIMaintenanceRedeployStatus() {
    this->initializeModel();
}

OAIMaintenanceRedeployStatus::~OAIMaintenanceRedeployStatus() {}

void OAIMaintenanceRedeployStatus::initializeModel() {

    m_is_customer_initiated_maintenance_allowed_isSet = false;
    m_is_customer_initiated_maintenance_allowed_isValid = false;

    m_last_operation_message_isSet = false;
    m_last_operation_message_isValid = false;

    m_last_operation_result_code_isSet = false;
    m_last_operation_result_code_isValid = false;

    m_maintenance_window_end_time_isSet = false;
    m_maintenance_window_end_time_isValid = false;

    m_maintenance_window_start_time_isSet = false;
    m_maintenance_window_start_time_isValid = false;

    m_pre_maintenance_window_end_time_isSet = false;
    m_pre_maintenance_window_end_time_isValid = false;

    m_pre_maintenance_window_start_time_isSet = false;
    m_pre_maintenance_window_start_time_isValid = false;
}

void OAIMaintenanceRedeployStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMaintenanceRedeployStatus::fromJsonObject(QJsonObject json) {

    m_is_customer_initiated_maintenance_allowed_isValid = ::OpenAPI::fromJsonValue(m_is_customer_initiated_maintenance_allowed, json[QString("isCustomerInitiatedMaintenanceAllowed")]);
    m_is_customer_initiated_maintenance_allowed_isSet = !json[QString("isCustomerInitiatedMaintenanceAllowed")].isNull() && m_is_customer_initiated_maintenance_allowed_isValid;

    m_last_operation_message_isValid = ::OpenAPI::fromJsonValue(m_last_operation_message, json[QString("lastOperationMessage")]);
    m_last_operation_message_isSet = !json[QString("lastOperationMessage")].isNull() && m_last_operation_message_isValid;

    m_last_operation_result_code_isValid = ::OpenAPI::fromJsonValue(m_last_operation_result_code, json[QString("lastOperationResultCode")]);
    m_last_operation_result_code_isSet = !json[QString("lastOperationResultCode")].isNull() && m_last_operation_result_code_isValid;

    m_maintenance_window_end_time_isValid = ::OpenAPI::fromJsonValue(m_maintenance_window_end_time, json[QString("maintenanceWindowEndTime")]);
    m_maintenance_window_end_time_isSet = !json[QString("maintenanceWindowEndTime")].isNull() && m_maintenance_window_end_time_isValid;

    m_maintenance_window_start_time_isValid = ::OpenAPI::fromJsonValue(m_maintenance_window_start_time, json[QString("maintenanceWindowStartTime")]);
    m_maintenance_window_start_time_isSet = !json[QString("maintenanceWindowStartTime")].isNull() && m_maintenance_window_start_time_isValid;

    m_pre_maintenance_window_end_time_isValid = ::OpenAPI::fromJsonValue(m_pre_maintenance_window_end_time, json[QString("preMaintenanceWindowEndTime")]);
    m_pre_maintenance_window_end_time_isSet = !json[QString("preMaintenanceWindowEndTime")].isNull() && m_pre_maintenance_window_end_time_isValid;

    m_pre_maintenance_window_start_time_isValid = ::OpenAPI::fromJsonValue(m_pre_maintenance_window_start_time, json[QString("preMaintenanceWindowStartTime")]);
    m_pre_maintenance_window_start_time_isSet = !json[QString("preMaintenanceWindowStartTime")].isNull() && m_pre_maintenance_window_start_time_isValid;
}

QString OAIMaintenanceRedeployStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMaintenanceRedeployStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_is_customer_initiated_maintenance_allowed_isSet) {
        obj.insert(QString("isCustomerInitiatedMaintenanceAllowed"), ::OpenAPI::toJsonValue(m_is_customer_initiated_maintenance_allowed));
    }
    if (m_last_operation_message_isSet) {
        obj.insert(QString("lastOperationMessage"), ::OpenAPI::toJsonValue(m_last_operation_message));
    }
    if (m_last_operation_result_code_isSet) {
        obj.insert(QString("lastOperationResultCode"), ::OpenAPI::toJsonValue(m_last_operation_result_code));
    }
    if (m_maintenance_window_end_time_isSet) {
        obj.insert(QString("maintenanceWindowEndTime"), ::OpenAPI::toJsonValue(m_maintenance_window_end_time));
    }
    if (m_maintenance_window_start_time_isSet) {
        obj.insert(QString("maintenanceWindowStartTime"), ::OpenAPI::toJsonValue(m_maintenance_window_start_time));
    }
    if (m_pre_maintenance_window_end_time_isSet) {
        obj.insert(QString("preMaintenanceWindowEndTime"), ::OpenAPI::toJsonValue(m_pre_maintenance_window_end_time));
    }
    if (m_pre_maintenance_window_start_time_isSet) {
        obj.insert(QString("preMaintenanceWindowStartTime"), ::OpenAPI::toJsonValue(m_pre_maintenance_window_start_time));
    }
    return obj;
}

bool OAIMaintenanceRedeployStatus::isIsCustomerInitiatedMaintenanceAllowed() const {
    return m_is_customer_initiated_maintenance_allowed;
}
void OAIMaintenanceRedeployStatus::setIsCustomerInitiatedMaintenanceAllowed(const bool &is_customer_initiated_maintenance_allowed) {
    m_is_customer_initiated_maintenance_allowed = is_customer_initiated_maintenance_allowed;
    m_is_customer_initiated_maintenance_allowed_isSet = true;
}

bool OAIMaintenanceRedeployStatus::is_is_customer_initiated_maintenance_allowed_Set() const{
    return m_is_customer_initiated_maintenance_allowed_isSet;
}

bool OAIMaintenanceRedeployStatus::is_is_customer_initiated_maintenance_allowed_Valid() const{
    return m_is_customer_initiated_maintenance_allowed_isValid;
}

QString OAIMaintenanceRedeployStatus::getLastOperationMessage() const {
    return m_last_operation_message;
}
void OAIMaintenanceRedeployStatus::setLastOperationMessage(const QString &last_operation_message) {
    m_last_operation_message = last_operation_message;
    m_last_operation_message_isSet = true;
}

bool OAIMaintenanceRedeployStatus::is_last_operation_message_Set() const{
    return m_last_operation_message_isSet;
}

bool OAIMaintenanceRedeployStatus::is_last_operation_message_Valid() const{
    return m_last_operation_message_isValid;
}

QString OAIMaintenanceRedeployStatus::getLastOperationResultCode() const {
    return m_last_operation_result_code;
}
void OAIMaintenanceRedeployStatus::setLastOperationResultCode(const QString &last_operation_result_code) {
    m_last_operation_result_code = last_operation_result_code;
    m_last_operation_result_code_isSet = true;
}

bool OAIMaintenanceRedeployStatus::is_last_operation_result_code_Set() const{
    return m_last_operation_result_code_isSet;
}

bool OAIMaintenanceRedeployStatus::is_last_operation_result_code_Valid() const{
    return m_last_operation_result_code_isValid;
}

QDateTime OAIMaintenanceRedeployStatus::getMaintenanceWindowEndTime() const {
    return m_maintenance_window_end_time;
}
void OAIMaintenanceRedeployStatus::setMaintenanceWindowEndTime(const QDateTime &maintenance_window_end_time) {
    m_maintenance_window_end_time = maintenance_window_end_time;
    m_maintenance_window_end_time_isSet = true;
}

bool OAIMaintenanceRedeployStatus::is_maintenance_window_end_time_Set() const{
    return m_maintenance_window_end_time_isSet;
}

bool OAIMaintenanceRedeployStatus::is_maintenance_window_end_time_Valid() const{
    return m_maintenance_window_end_time_isValid;
}

QDateTime OAIMaintenanceRedeployStatus::getMaintenanceWindowStartTime() const {
    return m_maintenance_window_start_time;
}
void OAIMaintenanceRedeployStatus::setMaintenanceWindowStartTime(const QDateTime &maintenance_window_start_time) {
    m_maintenance_window_start_time = maintenance_window_start_time;
    m_maintenance_window_start_time_isSet = true;
}

bool OAIMaintenanceRedeployStatus::is_maintenance_window_start_time_Set() const{
    return m_maintenance_window_start_time_isSet;
}

bool OAIMaintenanceRedeployStatus::is_maintenance_window_start_time_Valid() const{
    return m_maintenance_window_start_time_isValid;
}

QDateTime OAIMaintenanceRedeployStatus::getPreMaintenanceWindowEndTime() const {
    return m_pre_maintenance_window_end_time;
}
void OAIMaintenanceRedeployStatus::setPreMaintenanceWindowEndTime(const QDateTime &pre_maintenance_window_end_time) {
    m_pre_maintenance_window_end_time = pre_maintenance_window_end_time;
    m_pre_maintenance_window_end_time_isSet = true;
}

bool OAIMaintenanceRedeployStatus::is_pre_maintenance_window_end_time_Set() const{
    return m_pre_maintenance_window_end_time_isSet;
}

bool OAIMaintenanceRedeployStatus::is_pre_maintenance_window_end_time_Valid() const{
    return m_pre_maintenance_window_end_time_isValid;
}

QDateTime OAIMaintenanceRedeployStatus::getPreMaintenanceWindowStartTime() const {
    return m_pre_maintenance_window_start_time;
}
void OAIMaintenanceRedeployStatus::setPreMaintenanceWindowStartTime(const QDateTime &pre_maintenance_window_start_time) {
    m_pre_maintenance_window_start_time = pre_maintenance_window_start_time;
    m_pre_maintenance_window_start_time_isSet = true;
}

bool OAIMaintenanceRedeployStatus::is_pre_maintenance_window_start_time_Set() const{
    return m_pre_maintenance_window_start_time_isSet;
}

bool OAIMaintenanceRedeployStatus::is_pre_maintenance_window_start_time_Valid() const{
    return m_pre_maintenance_window_start_time_isValid;
}

bool OAIMaintenanceRedeployStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_customer_initiated_maintenance_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_operation_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_operation_result_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maintenance_window_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maintenance_window_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pre_maintenance_window_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pre_maintenance_window_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMaintenanceRedeployStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
