/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVirtualMachineScaleSetUpdateNetworkProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVirtualMachineScaleSetUpdateNetworkProfile::OAIVirtualMachineScaleSetUpdateNetworkProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVirtualMachineScaleSetUpdateNetworkProfile::OAIVirtualMachineScaleSetUpdateNetworkProfile() {
    this->initializeModel();
}

OAIVirtualMachineScaleSetUpdateNetworkProfile::~OAIVirtualMachineScaleSetUpdateNetworkProfile() {}

void OAIVirtualMachineScaleSetUpdateNetworkProfile::initializeModel() {

    m_health_probe_isSet = false;
    m_health_probe_isValid = false;

    m_network_interface_configurations_isSet = false;
    m_network_interface_configurations_isValid = false;
}

void OAIVirtualMachineScaleSetUpdateNetworkProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVirtualMachineScaleSetUpdateNetworkProfile::fromJsonObject(QJsonObject json) {

    m_health_probe_isValid = ::OpenAPI::fromJsonValue(m_health_probe, json[QString("healthProbe")]);
    m_health_probe_isSet = !json[QString("healthProbe")].isNull() && m_health_probe_isValid;

    m_network_interface_configurations_isValid = ::OpenAPI::fromJsonValue(m_network_interface_configurations, json[QString("networkInterfaceConfigurations")]);
    m_network_interface_configurations_isSet = !json[QString("networkInterfaceConfigurations")].isNull() && m_network_interface_configurations_isValid;
}

QString OAIVirtualMachineScaleSetUpdateNetworkProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVirtualMachineScaleSetUpdateNetworkProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_health_probe.isSet()) {
        obj.insert(QString("healthProbe"), ::OpenAPI::toJsonValue(m_health_probe));
    }
    if (m_network_interface_configurations.size() > 0) {
        obj.insert(QString("networkInterfaceConfigurations"), ::OpenAPI::toJsonValue(m_network_interface_configurations));
    }
    return obj;
}

OAIApiEntityReference OAIVirtualMachineScaleSetUpdateNetworkProfile::getHealthProbe() const {
    return m_health_probe;
}
void OAIVirtualMachineScaleSetUpdateNetworkProfile::setHealthProbe(const OAIApiEntityReference &health_probe) {
    m_health_probe = health_probe;
    m_health_probe_isSet = true;
}

bool OAIVirtualMachineScaleSetUpdateNetworkProfile::is_health_probe_Set() const{
    return m_health_probe_isSet;
}

bool OAIVirtualMachineScaleSetUpdateNetworkProfile::is_health_probe_Valid() const{
    return m_health_probe_isValid;
}

QList<OAIVirtualMachineScaleSetUpdateNetworkConfiguration> OAIVirtualMachineScaleSetUpdateNetworkProfile::getNetworkInterfaceConfigurations() const {
    return m_network_interface_configurations;
}
void OAIVirtualMachineScaleSetUpdateNetworkProfile::setNetworkInterfaceConfigurations(const QList<OAIVirtualMachineScaleSetUpdateNetworkConfiguration> &network_interface_configurations) {
    m_network_interface_configurations = network_interface_configurations;
    m_network_interface_configurations_isSet = true;
}

bool OAIVirtualMachineScaleSetUpdateNetworkProfile::is_network_interface_configurations_Set() const{
    return m_network_interface_configurations_isSet;
}

bool OAIVirtualMachineScaleSetUpdateNetworkProfile::is_network_interface_configurations_Valid() const{
    return m_network_interface_configurations_isValid;
}

bool OAIVirtualMachineScaleSetUpdateNetworkProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_health_probe.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_interface_configurations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVirtualMachineScaleSetUpdateNetworkProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
