/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRollingUpgradePolicy.h
 *
 * The configuration parameters used while performing a rolling upgrade.
 */

#ifndef OAIRollingUpgradePolicy_H
#define OAIRollingUpgradePolicy_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRollingUpgradePolicy : public OAIObject {
public:
    OAIRollingUpgradePolicy();
    OAIRollingUpgradePolicy(QString json);
    ~OAIRollingUpgradePolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxBatchInstancePercent() const;
    void setMaxBatchInstancePercent(const qint32 &max_batch_instance_percent);
    bool is_max_batch_instance_percent_Set() const;
    bool is_max_batch_instance_percent_Valid() const;

    qint32 getMaxUnhealthyInstancePercent() const;
    void setMaxUnhealthyInstancePercent(const qint32 &max_unhealthy_instance_percent);
    bool is_max_unhealthy_instance_percent_Set() const;
    bool is_max_unhealthy_instance_percent_Valid() const;

    qint32 getMaxUnhealthyUpgradedInstancePercent() const;
    void setMaxUnhealthyUpgradedInstancePercent(const qint32 &max_unhealthy_upgraded_instance_percent);
    bool is_max_unhealthy_upgraded_instance_percent_Set() const;
    bool is_max_unhealthy_upgraded_instance_percent_Valid() const;

    QString getPauseTimeBetweenBatches() const;
    void setPauseTimeBetweenBatches(const QString &pause_time_between_batches);
    bool is_pause_time_between_batches_Set() const;
    bool is_pause_time_between_batches_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_batch_instance_percent;
    bool m_max_batch_instance_percent_isSet;
    bool m_max_batch_instance_percent_isValid;

    qint32 m_max_unhealthy_instance_percent;
    bool m_max_unhealthy_instance_percent_isSet;
    bool m_max_unhealthy_instance_percent_isValid;

    qint32 m_max_unhealthy_upgraded_instance_percent;
    bool m_max_unhealthy_upgraded_instance_percent_isSet;
    bool m_max_unhealthy_upgraded_instance_percent_isValid;

    QString m_pause_time_between_batches;
    bool m_pause_time_between_batches_isSet;
    bool m_pause_time_between_batches_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRollingUpgradePolicy)

#endif // OAIRollingUpgradePolicy_H
