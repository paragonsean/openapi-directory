/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AutomaticRepairsPolicy model module.
 * @module model/AutomaticRepairsPolicy
 * @version 2019-07-01
 */
class AutomaticRepairsPolicy {
    /**
     * Constructs a new <code>AutomaticRepairsPolicy</code>.
     * Specifies the configuration parameters for automatic repairs on the virtual machine scale set.
     * @alias module:model/AutomaticRepairsPolicy
     */
    constructor() { 
        
        AutomaticRepairsPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutomaticRepairsPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutomaticRepairsPolicy} obj Optional instance to populate.
     * @return {module:model/AutomaticRepairsPolicy} The populated <code>AutomaticRepairsPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutomaticRepairsPolicy();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('gracePeriod')) {
                obj['gracePeriod'] = ApiClient.convertToType(data['gracePeriod'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutomaticRepairsPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutomaticRepairsPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['gracePeriod'] && !(typeof data['gracePeriod'] === 'string' || data['gracePeriod'] instanceof String)) {
            throw new Error("Expected the field `gracePeriod` to be a primitive type in the JSON string but got " + data['gracePeriod']);
        }

        return true;
    }


}



/**
 * Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false.
 * @member {Boolean} enabled
 */
AutomaticRepairsPolicy.prototype['enabled'] = undefined;

/**
 * The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 30 minutes (PT30M), which is also the default value.
 * @member {String} gracePeriod
 */
AutomaticRepairsPolicy.prototype['gracePeriod'] = undefined;






export default AutomaticRepairsPolicy;

