/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WinRMListener model module.
 * @module model/WinRMListener
 * @version 2019-07-01
 */
class WinRMListener {
    /**
     * Constructs a new <code>WinRMListener</code>.
     * Describes Protocol and thumbprint of Windows Remote Management listener
     * @alias module:model/WinRMListener
     */
    constructor() { 
        
        WinRMListener.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WinRMListener</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WinRMListener} obj Optional instance to populate.
     * @return {module:model/WinRMListener} The populated <code>WinRMListener</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WinRMListener();

            if (data.hasOwnProperty('certificateUrl')) {
                obj['certificateUrl'] = ApiClient.convertToType(data['certificateUrl'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WinRMListener</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WinRMListener</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['certificateUrl'] && !(typeof data['certificateUrl'] === 'string' || data['certificateUrl'] instanceof String)) {
            throw new Error("Expected the field `certificateUrl` to be a primitive type in the JSON string but got " + data['certificateUrl']);
        }
        // ensure the json data is a string
        if (data['protocol'] && !(typeof data['protocol'] === 'string' || data['protocol'] instanceof String)) {
            throw new Error("Expected the field `protocol` to be a primitive type in the JSON string but got " + data['protocol']);
        }

        return true;
    }


}



/**
 * This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}
 * @member {String} certificateUrl
 */
WinRMListener.prototype['certificateUrl'] = undefined;

/**
 * Specifies the protocol of WinRM listener. <br><br> Possible values are: <br>**http** <br><br> **https**
 * @member {module:model/WinRMListener.ProtocolEnum} protocol
 */
WinRMListener.prototype['protocol'] = undefined;





/**
 * Allowed values for the <code>protocol</code> property.
 * @enum {String}
 * @readonly
 */
WinRMListener['ProtocolEnum'] = {

    /**
     * value: "Http"
     * @const
     */
    "Http": "Http",

    /**
     * value: "Https"
     * @const
     */
    "Https": "Https"
};



export default WinRMListener;

