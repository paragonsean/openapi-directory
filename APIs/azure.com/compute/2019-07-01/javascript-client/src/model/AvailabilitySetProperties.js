/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceViewStatus from './InstanceViewStatus';
import SubResource from './SubResource';

/**
 * The AvailabilitySetProperties model module.
 * @module model/AvailabilitySetProperties
 * @version 2019-07-01
 */
class AvailabilitySetProperties {
    /**
     * Constructs a new <code>AvailabilitySetProperties</code>.
     * The instance view of a resource.
     * @alias module:model/AvailabilitySetProperties
     */
    constructor() { 
        
        AvailabilitySetProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AvailabilitySetProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvailabilitySetProperties} obj Optional instance to populate.
     * @return {module:model/AvailabilitySetProperties} The populated <code>AvailabilitySetProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailabilitySetProperties();

            if (data.hasOwnProperty('platformFaultDomainCount')) {
                obj['platformFaultDomainCount'] = ApiClient.convertToType(data['platformFaultDomainCount'], 'Number');
            }
            if (data.hasOwnProperty('platformUpdateDomainCount')) {
                obj['platformUpdateDomainCount'] = ApiClient.convertToType(data['platformUpdateDomainCount'], 'Number');
            }
            if (data.hasOwnProperty('proximityPlacementGroup')) {
                obj['proximityPlacementGroup'] = SubResource.constructFromObject(data['proximityPlacementGroup']);
            }
            if (data.hasOwnProperty('statuses')) {
                obj['statuses'] = ApiClient.convertToType(data['statuses'], [InstanceViewStatus]);
            }
            if (data.hasOwnProperty('virtualMachines')) {
                obj['virtualMachines'] = ApiClient.convertToType(data['virtualMachines'], [SubResource]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvailabilitySetProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvailabilitySetProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `proximityPlacementGroup`
        if (data['proximityPlacementGroup']) { // data not null
          SubResource.validateJSON(data['proximityPlacementGroup']);
        }
        if (data['statuses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['statuses'])) {
                throw new Error("Expected the field `statuses` to be an array in the JSON data but got " + data['statuses']);
            }
            // validate the optional field `statuses` (array)
            for (const item of data['statuses']) {
                InstanceViewStatus.validateJSON(item);
            };
        }
        if (data['virtualMachines']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['virtualMachines'])) {
                throw new Error("Expected the field `virtualMachines` to be an array in the JSON data but got " + data['virtualMachines']);
            }
            // validate the optional field `virtualMachines` (array)
            for (const item of data['virtualMachines']) {
                SubResource.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Fault Domain count.
 * @member {Number} platformFaultDomainCount
 */
AvailabilitySetProperties.prototype['platformFaultDomainCount'] = undefined;

/**
 * Update Domain count.
 * @member {Number} platformUpdateDomainCount
 */
AvailabilitySetProperties.prototype['platformUpdateDomainCount'] = undefined;

/**
 * @member {module:model/SubResource} proximityPlacementGroup
 */
AvailabilitySetProperties.prototype['proximityPlacementGroup'] = undefined;

/**
 * The resource status information.
 * @member {Array.<module:model/InstanceViewStatus>} statuses
 */
AvailabilitySetProperties.prototype['statuses'] = undefined;

/**
 * A list of references to all virtual machines in the availability set.
 * @member {Array.<module:model/SubResource>} virtualMachines
 */
AvailabilitySetProperties.prototype['virtualMachines'] = undefined;






export default AvailabilitySetProperties;

