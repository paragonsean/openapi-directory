/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InstanceViewStatus model module.
 * @module model/InstanceViewStatus
 * @version 2019-07-01
 */
class InstanceViewStatus {
    /**
     * Constructs a new <code>InstanceViewStatus</code>.
     * Instance view status.
     * @alias module:model/InstanceViewStatus
     */
    constructor() { 
        
        InstanceViewStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstanceViewStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceViewStatus} obj Optional instance to populate.
     * @return {module:model/InstanceViewStatus} The populated <code>InstanceViewStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceViewStatus();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('displayStatus')) {
                obj['displayStatus'] = ApiClient.convertToType(data['displayStatus'], 'String');
            }
            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceViewStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceViewStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['displayStatus'] && !(typeof data['displayStatus'] === 'string' || data['displayStatus'] instanceof String)) {
            throw new Error("Expected the field `displayStatus` to be a primitive type in the JSON string but got " + data['displayStatus']);
        }
        // ensure the json data is a string
        if (data['level'] && !(typeof data['level'] === 'string' || data['level'] instanceof String)) {
            throw new Error("Expected the field `level` to be a primitive type in the JSON string but got " + data['level']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }

        return true;
    }


}



/**
 * The status code.
 * @member {String} code
 */
InstanceViewStatus.prototype['code'] = undefined;

/**
 * The short localizable label for the status.
 * @member {String} displayStatus
 */
InstanceViewStatus.prototype['displayStatus'] = undefined;

/**
 * The level code.
 * @member {module:model/InstanceViewStatus.LevelEnum} level
 */
InstanceViewStatus.prototype['level'] = undefined;

/**
 * The detailed status message, including for alerts and error messages.
 * @member {String} message
 */
InstanceViewStatus.prototype['message'] = undefined;

/**
 * The time of the status.
 * @member {Date} time
 */
InstanceViewStatus.prototype['time'] = undefined;





/**
 * Allowed values for the <code>level</code> property.
 * @enum {String}
 * @readonly
 */
InstanceViewStatus['LevelEnum'] = {

    /**
     * value: "Info"
     * @const
     */
    "Info": "Info",

    /**
     * value: "Warning"
     * @const
     */
    "Warning": "Warning",

    /**
     * value: "Error"
     * @const
     */
    "Error": "Error"
};



export default InstanceViewStatus;

