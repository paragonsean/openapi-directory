/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LogAnalyticsInputBase model module.
 * @module model/LogAnalyticsInputBase
 * @version 2019-07-01
 */
class LogAnalyticsInputBase {
    /**
     * Constructs a new <code>LogAnalyticsInputBase</code>.
     * Api input base class for LogAnalytics Api.
     * @alias module:model/LogAnalyticsInputBase
     * @param blobContainerSasUri {String} SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
     * @param fromTime {Date} From time of the query
     * @param toTime {Date} To time of the query
     */
    constructor(blobContainerSasUri, fromTime, toTime) { 
        
        LogAnalyticsInputBase.initialize(this, blobContainerSasUri, fromTime, toTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, blobContainerSasUri, fromTime, toTime) { 
        obj['blobContainerSasUri'] = blobContainerSasUri;
        obj['fromTime'] = fromTime;
        obj['toTime'] = toTime;
    }

    /**
     * Constructs a <code>LogAnalyticsInputBase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LogAnalyticsInputBase} obj Optional instance to populate.
     * @return {module:model/LogAnalyticsInputBase} The populated <code>LogAnalyticsInputBase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LogAnalyticsInputBase();

            if (data.hasOwnProperty('blobContainerSasUri')) {
                obj['blobContainerSasUri'] = ApiClient.convertToType(data['blobContainerSasUri'], 'String');
            }
            if (data.hasOwnProperty('fromTime')) {
                obj['fromTime'] = ApiClient.convertToType(data['fromTime'], 'Date');
            }
            if (data.hasOwnProperty('groupByOperationName')) {
                obj['groupByOperationName'] = ApiClient.convertToType(data['groupByOperationName'], 'Boolean');
            }
            if (data.hasOwnProperty('groupByResourceName')) {
                obj['groupByResourceName'] = ApiClient.convertToType(data['groupByResourceName'], 'Boolean');
            }
            if (data.hasOwnProperty('groupByThrottlePolicy')) {
                obj['groupByThrottlePolicy'] = ApiClient.convertToType(data['groupByThrottlePolicy'], 'Boolean');
            }
            if (data.hasOwnProperty('toTime')) {
                obj['toTime'] = ApiClient.convertToType(data['toTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LogAnalyticsInputBase</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LogAnalyticsInputBase</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LogAnalyticsInputBase.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['blobContainerSasUri'] && !(typeof data['blobContainerSasUri'] === 'string' || data['blobContainerSasUri'] instanceof String)) {
            throw new Error("Expected the field `blobContainerSasUri` to be a primitive type in the JSON string but got " + data['blobContainerSasUri']);
        }

        return true;
    }


}

LogAnalyticsInputBase.RequiredProperties = ["blobContainerSasUri", "fromTime", "toTime"];

/**
 * SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
 * @member {String} blobContainerSasUri
 */
LogAnalyticsInputBase.prototype['blobContainerSasUri'] = undefined;

/**
 * From time of the query
 * @member {Date} fromTime
 */
LogAnalyticsInputBase.prototype['fromTime'] = undefined;

/**
 * Group query result by Operation Name.
 * @member {Boolean} groupByOperationName
 */
LogAnalyticsInputBase.prototype['groupByOperationName'] = undefined;

/**
 * Group query result by Resource Name.
 * @member {Boolean} groupByResourceName
 */
LogAnalyticsInputBase.prototype['groupByResourceName'] = undefined;

/**
 * Group query result by Throttle Policy applied.
 * @member {Boolean} groupByThrottlePolicy
 */
LogAnalyticsInputBase.prototype['groupByThrottlePolicy'] = undefined;

/**
 * To time of the query
 * @member {Date} toTime
 */
LogAnalyticsInputBase.prototype['toTime'] = undefined;






export default LogAnalyticsInputBase;

