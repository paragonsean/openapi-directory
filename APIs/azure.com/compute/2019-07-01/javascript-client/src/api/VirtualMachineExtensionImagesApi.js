/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VirtualMachineExtensionImage from '../model/VirtualMachineExtensionImage';

/**
* VirtualMachineExtensionImages service.
* @module api/VirtualMachineExtensionImagesApi
* @version 2019-07-01
*/
export default class VirtualMachineExtensionImagesApi {

    /**
    * Constructs a new VirtualMachineExtensionImagesApi. 
    * @alias module:api/VirtualMachineExtensionImagesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualMachineExtensionImagesGet operation.
     * @callback module:api/VirtualMachineExtensionImagesApi~virtualMachineExtensionImagesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineExtensionImage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a virtual machine extension image.
     * @param {String} location The name of a supported Azure region.
     * @param {String} publisherName 
     * @param {String} type 
     * @param {String} version 
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineExtensionImagesApi~virtualMachineExtensionImagesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineExtensionImage}
     */
    virtualMachineExtensionImagesGet(location, publisherName, type, version, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling virtualMachineExtensionImagesGet");
      }
      // verify the required parameter 'publisherName' is set
      if (publisherName === undefined || publisherName === null) {
        throw new Error("Missing the required parameter 'publisherName' when calling virtualMachineExtensionImagesGet");
      }
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling virtualMachineExtensionImagesGet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling virtualMachineExtensionImagesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineExtensionImagesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineExtensionImagesGet");
      }

      let pathParams = {
        'location': location,
        'publisherName': publisherName,
        'type': type,
        'version': version,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineExtensionImage;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/{type}/versions/{version}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineExtensionImagesListTypes operation.
     * @callback module:api/VirtualMachineExtensionImagesApi~virtualMachineExtensionImagesListTypesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/VirtualMachineExtensionImage>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of virtual machine extension image types.
     * @param {String} location The name of a supported Azure region.
     * @param {String} publisherName 
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineExtensionImagesApi~virtualMachineExtensionImagesListTypesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/VirtualMachineExtensionImage>}
     */
    virtualMachineExtensionImagesListTypes(location, publisherName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling virtualMachineExtensionImagesListTypes");
      }
      // verify the required parameter 'publisherName' is set
      if (publisherName === undefined || publisherName === null) {
        throw new Error("Missing the required parameter 'publisherName' when calling virtualMachineExtensionImagesListTypes");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineExtensionImagesListTypes");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineExtensionImagesListTypes");
      }

      let pathParams = {
        'location': location,
        'publisherName': publisherName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [VirtualMachineExtensionImage];
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineExtensionImagesListVersions operation.
     * @callback module:api/VirtualMachineExtensionImagesApi~virtualMachineExtensionImagesListVersionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/VirtualMachineExtensionImage>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of virtual machine extension image versions.
     * @param {String} location The name of a supported Azure region.
     * @param {String} publisherName 
     * @param {String} type 
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] The filter to apply on the operation.
     * @param {Number} [top] 
     * @param {String} [orderby] 
     * @param {module:api/VirtualMachineExtensionImagesApi~virtualMachineExtensionImagesListVersionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/VirtualMachineExtensionImage>}
     */
    virtualMachineExtensionImagesListVersions(location, publisherName, type, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling virtualMachineExtensionImagesListVersions");
      }
      // verify the required parameter 'publisherName' is set
      if (publisherName === undefined || publisherName === null) {
        throw new Error("Missing the required parameter 'publisherName' when calling virtualMachineExtensionImagesListVersions");
      }
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling virtualMachineExtensionImagesListVersions");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineExtensionImagesListVersions");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineExtensionImagesListVersions");
      }

      let pathParams = {
        'location': location,
        'publisherName': publisherName,
        'type': type,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$orderby': opts['orderby'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [VirtualMachineExtensionImage];
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/{type}/versions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
