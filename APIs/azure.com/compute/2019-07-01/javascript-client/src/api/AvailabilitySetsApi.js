/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AvailabilitySet from '../model/AvailabilitySet';
import AvailabilitySetListResult from '../model/AvailabilitySetListResult';
import AvailabilitySetUpdate from '../model/AvailabilitySetUpdate';
import VirtualMachineSizeListResult from '../model/VirtualMachineSizeListResult';

/**
* AvailabilitySets service.
* @module api/AvailabilitySetsApi
* @version 2019-07-01
*/
export default class AvailabilitySetsApi {

    /**
    * Constructs a new AvailabilitySetsApi. 
    * @alias module:api/AvailabilitySetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the availabilitySetsCreateOrUpdate operation.
     * @callback module:api/AvailabilitySetsApi~availabilitySetsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AvailabilitySet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update an availability set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} availabilitySetName The name of the availability set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/AvailabilitySet} parameters Parameters supplied to the Create Availability Set operation.
     * @param {module:api/AvailabilitySetsApi~availabilitySetsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AvailabilitySet}
     */
    availabilitySetsCreateOrUpdate(resourceGroupName, availabilitySetName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling availabilitySetsCreateOrUpdate");
      }
      // verify the required parameter 'availabilitySetName' is set
      if (availabilitySetName === undefined || availabilitySetName === null) {
        throw new Error("Missing the required parameter 'availabilitySetName' when calling availabilitySetsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling availabilitySetsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling availabilitySetsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling availabilitySetsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'availabilitySetName': availabilitySetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AvailabilitySet;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the availabilitySetsDelete operation.
     * @callback module:api/AvailabilitySetsApi~availabilitySetsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an availability set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} availabilitySetName The name of the availability set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/AvailabilitySetsApi~availabilitySetsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    availabilitySetsDelete(resourceGroupName, availabilitySetName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling availabilitySetsDelete");
      }
      // verify the required parameter 'availabilitySetName' is set
      if (availabilitySetName === undefined || availabilitySetName === null) {
        throw new Error("Missing the required parameter 'availabilitySetName' when calling availabilitySetsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling availabilitySetsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling availabilitySetsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'availabilitySetName': availabilitySetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the availabilitySetsGet operation.
     * @callback module:api/AvailabilitySetsApi~availabilitySetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AvailabilitySet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about an availability set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} availabilitySetName The name of the availability set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/AvailabilitySetsApi~availabilitySetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AvailabilitySet}
     */
    availabilitySetsGet(resourceGroupName, availabilitySetName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling availabilitySetsGet");
      }
      // verify the required parameter 'availabilitySetName' is set
      if (availabilitySetName === undefined || availabilitySetName === null) {
        throw new Error("Missing the required parameter 'availabilitySetName' when calling availabilitySetsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling availabilitySetsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling availabilitySetsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'availabilitySetName': availabilitySetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AvailabilitySet;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the availabilitySetsList operation.
     * @callback module:api/AvailabilitySetsApi~availabilitySetsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AvailabilitySetListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all availability sets in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/AvailabilitySetsApi~availabilitySetsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AvailabilitySetListResult}
     */
    availabilitySetsList(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling availabilitySetsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling availabilitySetsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling availabilitySetsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AvailabilitySetListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the availabilitySetsListAvailableSizes operation.
     * @callback module:api/AvailabilitySetsApi~availabilitySetsListAvailableSizesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineSizeListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all available virtual machine sizes that can be used to create a new virtual machine in an existing availability set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} availabilitySetName The name of the availability set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/AvailabilitySetsApi~availabilitySetsListAvailableSizesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineSizeListResult}
     */
    availabilitySetsListAvailableSizes(resourceGroupName, availabilitySetName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling availabilitySetsListAvailableSizes");
      }
      // verify the required parameter 'availabilitySetName' is set
      if (availabilitySetName === undefined || availabilitySetName === null) {
        throw new Error("Missing the required parameter 'availabilitySetName' when calling availabilitySetsListAvailableSizes");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling availabilitySetsListAvailableSizes");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling availabilitySetsListAvailableSizes");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'availabilitySetName': availabilitySetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineSizeListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}/vmSizes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the availabilitySetsListBySubscription operation.
     * @callback module:api/AvailabilitySetsApi~availabilitySetsListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AvailabilitySetListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all availability sets in a subscription.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [expand] The expand expression to apply to the operation.
     * @param {module:api/AvailabilitySetsApi~availabilitySetsListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AvailabilitySetListResult}
     */
    availabilitySetsListBySubscription(apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling availabilitySetsListBySubscription");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling availabilitySetsListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AvailabilitySetListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/availabilitySets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the availabilitySetsUpdate operation.
     * @callback module:api/AvailabilitySetsApi~availabilitySetsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AvailabilitySet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an availability set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} availabilitySetName The name of the availability set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/AvailabilitySetUpdate} parameters Parameters supplied to the Update Availability Set operation.
     * @param {module:api/AvailabilitySetsApi~availabilitySetsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AvailabilitySet}
     */
    availabilitySetsUpdate(resourceGroupName, availabilitySetName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling availabilitySetsUpdate");
      }
      // verify the required parameter 'availabilitySetName' is set
      if (availabilitySetName === undefined || availabilitySetName === null) {
        throw new Error("Missing the required parameter 'availabilitySetName' when calling availabilitySetsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling availabilitySetsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling availabilitySetsUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling availabilitySetsUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'availabilitySetName': availabilitySetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AvailabilitySet;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
