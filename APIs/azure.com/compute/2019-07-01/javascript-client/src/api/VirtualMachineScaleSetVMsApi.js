/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VirtualMachineScaleSetVM from '../model/VirtualMachineScaleSetVM';
import VirtualMachineScaleSetVMInstanceView from '../model/VirtualMachineScaleSetVMInstanceView';
import VirtualMachineScaleSetVMListResult from '../model/VirtualMachineScaleSetVMListResult';
import VirtualMachineScaleSetVMReimageParameters from '../model/VirtualMachineScaleSetVMReimageParameters';

/**
* VirtualMachineScaleSetVMs service.
* @module api/VirtualMachineScaleSetVMsApi
* @version 2019-07-01
*/
export default class VirtualMachineScaleSetVMsApi {

    /**
    * Constructs a new VirtualMachineScaleSetVMsApi. 
    * @alias module:api/VirtualMachineScaleSetVMsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsDeallocate operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsDeallocateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} instanceId The instance ID of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsDeallocateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualMachineScaleSetVMsDeallocate(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsDeallocate");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsDeallocate");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsDeallocate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsDeallocate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsDeallocate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'instanceId': instanceId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsDelete operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a virtual machine from a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} instanceId The instance ID of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualMachineScaleSetVMsDelete(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsDelete");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsDelete");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'instanceId': instanceId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsGet operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSetVM} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a virtual machine from a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} instanceId The instance ID of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [expand] The expand expression to apply on the operation.
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSetVM}
     */
    virtualMachineScaleSetVMsGet(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsGet");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsGet");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'instanceId': instanceId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$expand': opts['expand'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSetVM;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsGetInstanceView operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsGetInstanceViewCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSetVMInstanceView} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the status of a virtual machine from a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} instanceId The instance ID of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsGetInstanceViewCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSetVMInstanceView}
     */
    virtualMachineScaleSetVMsGetInstanceView(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsGetInstanceView");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsGetInstanceView");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsGetInstanceView");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsGetInstanceView");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsGetInstanceView");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'instanceId': instanceId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSetVMInstanceView;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/instanceView', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsList operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSetVMListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of all virtual machines in a VM scale sets.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualMachineScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] The filter to apply to the operation.
     * @param {String} [select] The list parameters.
     * @param {String} [expand] The expand expression to apply to the operation.
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSetVMListResult}
     */
    virtualMachineScaleSetVMsList(resourceGroupName, virtualMachineScaleSetName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsList");
      }
      // verify the required parameter 'virtualMachineScaleSetName' is set
      if (virtualMachineScaleSetName === undefined || virtualMachineScaleSetName === null) {
        throw new Error("Missing the required parameter 'virtualMachineScaleSetName' when calling virtualMachineScaleSetVMsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualMachineScaleSetName': virtualMachineScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$select': opts['select'],
        '$expand': opts['expand'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSetVMListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsPerformMaintenance operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsPerformMaintenanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Performs maintenance on a virtual machine in a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} instanceId The instance ID of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsPerformMaintenanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualMachineScaleSetVMsPerformMaintenance(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsPerformMaintenance");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsPerformMaintenance");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsPerformMaintenance");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsPerformMaintenance");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsPerformMaintenance");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'instanceId': instanceId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/performMaintenance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsPowerOff operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsPowerOffCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} instanceId The instance ID of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [skipShutdown = false)] The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsPowerOffCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualMachineScaleSetVMsPowerOff(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsPowerOff");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsPowerOff");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsPowerOff");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsPowerOff");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsPowerOff");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'instanceId': instanceId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'skipShutdown': opts['skipShutdown'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsRedeploy operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsRedeployCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers it back on.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} instanceId The instance ID of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsRedeployCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualMachineScaleSetVMsRedeploy(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsRedeploy");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsRedeploy");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsRedeploy");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsRedeploy");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsRedeploy");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'instanceId': instanceId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/redeploy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsReimage operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsReimageCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} instanceId The instance ID of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {module:model/VirtualMachineScaleSetVMReimageParameters} [vmScaleSetVMReimageInput] Parameters for the Reimaging Virtual machine in ScaleSet.
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsReimageCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualMachineScaleSetVMsReimage(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['vmScaleSetVMReimageInput'];
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsReimage");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsReimage");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsReimage");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsReimage");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsReimage");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'instanceId': instanceId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsReimageAll operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsReimageAllCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} instanceId The instance ID of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsReimageAllCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualMachineScaleSetVMsReimageAll(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsReimageAll");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsReimageAll");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsReimageAll");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsReimageAll");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsReimageAll");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'instanceId': instanceId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimageall', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsRestart operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsRestartCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Restarts a virtual machine in a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} instanceId The instance ID of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsRestartCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualMachineScaleSetVMsRestart(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsRestart");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsRestart");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsRestart");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsRestart");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsRestart");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'instanceId': instanceId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsStart operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsStartCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Starts a virtual machine in a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} instanceId The instance ID of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsStartCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualMachineScaleSetVMsStart(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsStart");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsStart");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsStart");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsStart");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsStart");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'instanceId': instanceId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetVMsUpdate operation.
     * @callback module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSetVM} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a virtual machine of a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set where the extension should be create or updated.
     * @param {String} instanceId The instance ID of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualMachineScaleSetVM} parameters Parameters supplied to the Update Virtual Machine Scale Sets VM operation.
     * @param {module:api/VirtualMachineScaleSetVMsApi~virtualMachineScaleSetVMsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSetVM}
     */
    virtualMachineScaleSetVMsUpdate(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsUpdate");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsUpdate");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling virtualMachineScaleSetVMsUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'instanceId': instanceId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSetVM;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
