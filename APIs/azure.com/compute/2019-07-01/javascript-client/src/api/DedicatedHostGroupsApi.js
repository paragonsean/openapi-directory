/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DedicatedHostGroup from '../model/DedicatedHostGroup';
import DedicatedHostGroupListResult from '../model/DedicatedHostGroupListResult';
import DedicatedHostGroupUpdate from '../model/DedicatedHostGroupUpdate';

/**
* DedicatedHostGroups service.
* @module api/DedicatedHostGroupsApi
* @version 2019-07-01
*/
export default class DedicatedHostGroupsApi {

    /**
    * Constructs a new DedicatedHostGroupsApi. 
    * @alias module:api/DedicatedHostGroupsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the dedicatedHostGroupsCreateOrUpdate operation.
     * @callback module:api/DedicatedHostGroupsApi~dedicatedHostGroupsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DedicatedHostGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update a dedicated host group. For details of Dedicated Host and Dedicated Host Groups please see [Dedicated Host Documentation] (https://go.microsoft.com/fwlink/?linkid=2082596)
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hostGroupName The name of the dedicated host group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/DedicatedHostGroup} parameters Parameters supplied to the Create Dedicated Host Group.
     * @param {module:api/DedicatedHostGroupsApi~dedicatedHostGroupsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DedicatedHostGroup}
     */
    dedicatedHostGroupsCreateOrUpdate(resourceGroupName, hostGroupName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling dedicatedHostGroupsCreateOrUpdate");
      }
      // verify the required parameter 'hostGroupName' is set
      if (hostGroupName === undefined || hostGroupName === null) {
        throw new Error("Missing the required parameter 'hostGroupName' when calling dedicatedHostGroupsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling dedicatedHostGroupsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling dedicatedHostGroupsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling dedicatedHostGroupsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hostGroupName': hostGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DedicatedHostGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dedicatedHostGroupsDelete operation.
     * @callback module:api/DedicatedHostGroupsApi~dedicatedHostGroupsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a dedicated host group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hostGroupName The name of the dedicated host group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/DedicatedHostGroupsApi~dedicatedHostGroupsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dedicatedHostGroupsDelete(resourceGroupName, hostGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling dedicatedHostGroupsDelete");
      }
      // verify the required parameter 'hostGroupName' is set
      if (hostGroupName === undefined || hostGroupName === null) {
        throw new Error("Missing the required parameter 'hostGroupName' when calling dedicatedHostGroupsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling dedicatedHostGroupsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling dedicatedHostGroupsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hostGroupName': hostGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dedicatedHostGroupsGet operation.
     * @callback module:api/DedicatedHostGroupsApi~dedicatedHostGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DedicatedHostGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about a dedicated host group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hostGroupName The name of the dedicated host group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/DedicatedHostGroupsApi~dedicatedHostGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DedicatedHostGroup}
     */
    dedicatedHostGroupsGet(resourceGroupName, hostGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling dedicatedHostGroupsGet");
      }
      // verify the required parameter 'hostGroupName' is set
      if (hostGroupName === undefined || hostGroupName === null) {
        throw new Error("Missing the required parameter 'hostGroupName' when calling dedicatedHostGroupsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling dedicatedHostGroupsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling dedicatedHostGroupsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hostGroupName': hostGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DedicatedHostGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dedicatedHostGroupsListByResourceGroup operation.
     * @callback module:api/DedicatedHostGroupsApi~dedicatedHostGroupsListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DedicatedHostGroupListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the dedicated host groups in the specified resource group. Use the nextLink property in the response to get the next page of dedicated host groups.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/DedicatedHostGroupsApi~dedicatedHostGroupsListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DedicatedHostGroupListResult}
     */
    dedicatedHostGroupsListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling dedicatedHostGroupsListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling dedicatedHostGroupsListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling dedicatedHostGroupsListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DedicatedHostGroupListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dedicatedHostGroupsListBySubscription operation.
     * @callback module:api/DedicatedHostGroupsApi~dedicatedHostGroupsListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DedicatedHostGroupListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the dedicated host groups in the subscription. Use the nextLink property in the response to get the next page of dedicated host groups.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/DedicatedHostGroupsApi~dedicatedHostGroupsListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DedicatedHostGroupListResult}
     */
    dedicatedHostGroupsListBySubscription(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling dedicatedHostGroupsListBySubscription");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling dedicatedHostGroupsListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DedicatedHostGroupListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/hostGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dedicatedHostGroupsUpdate operation.
     * @callback module:api/DedicatedHostGroupsApi~dedicatedHostGroupsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DedicatedHostGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an dedicated host group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hostGroupName The name of the dedicated host group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/DedicatedHostGroupUpdate} parameters Parameters supplied to the Update Dedicated Host Group operation.
     * @param {module:api/DedicatedHostGroupsApi~dedicatedHostGroupsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DedicatedHostGroup}
     */
    dedicatedHostGroupsUpdate(resourceGroupName, hostGroupName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling dedicatedHostGroupsUpdate");
      }
      // verify the required parameter 'hostGroupName' is set
      if (hostGroupName === undefined || hostGroupName === null) {
        throw new Error("Missing the required parameter 'hostGroupName' when calling dedicatedHostGroupsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling dedicatedHostGroupsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling dedicatedHostGroupsUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling dedicatedHostGroupsUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hostGroupName': hostGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DedicatedHostGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
