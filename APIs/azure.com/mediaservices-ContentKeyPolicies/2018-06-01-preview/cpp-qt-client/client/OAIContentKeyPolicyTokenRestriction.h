/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContentKeyPolicyTokenRestriction.h
 *
 * Represents a token restriction. Provided token must match these requirements for successful license or key delivery.
 */

#ifndef OAIContentKeyPolicyTokenRestriction_H
#define OAIContentKeyPolicyTokenRestriction_H

#include <QJsonObject>

#include "OAIContentKeyPolicyRestriction.h"
#include "OAIContentKeyPolicyRestrictionTokenKey.h"
#include "OAIContentKeyPolicyTokenClaim.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContentKeyPolicyRestrictionTokenKey;
class OAIContentKeyPolicyTokenClaim;

class OAIContentKeyPolicyTokenRestriction : public OAIObject {
public:
    OAIContentKeyPolicyTokenRestriction();
    OAIContentKeyPolicyTokenRestriction(QString json);
    ~OAIContentKeyPolicyTokenRestriction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIContentKeyPolicyRestrictionTokenKey> getAlternateVerificationKeys() const;
    void setAlternateVerificationKeys(const QList<OAIContentKeyPolicyRestrictionTokenKey> &alternate_verification_keys);
    bool is_alternate_verification_keys_Set() const;
    bool is_alternate_verification_keys_Valid() const;

    QString getAudience() const;
    void setAudience(const QString &audience);
    bool is_audience_Set() const;
    bool is_audience_Valid() const;

    QString getIssuer() const;
    void setIssuer(const QString &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    QString getOpenIdConnectDiscoveryDocument() const;
    void setOpenIdConnectDiscoveryDocument(const QString &open_id_connect_discovery_document);
    bool is_open_id_connect_discovery_document_Set() const;
    bool is_open_id_connect_discovery_document_Valid() const;

    OAIContentKeyPolicyRestrictionTokenKey getPrimaryVerificationKey() const;
    void setPrimaryVerificationKey(const OAIContentKeyPolicyRestrictionTokenKey &primary_verification_key);
    bool is_primary_verification_key_Set() const;
    bool is_primary_verification_key_Valid() const;

    QList<OAIContentKeyPolicyTokenClaim> getRequiredClaims() const;
    void setRequiredClaims(const QList<OAIContentKeyPolicyTokenClaim> &required_claims);
    bool is_required_claims_Set() const;
    bool is_required_claims_Valid() const;

    QString getRestrictionTokenType() const;
    void setRestrictionTokenType(const QString &restriction_token_type);
    bool is_restriction_token_type_Set() const;
    bool is_restriction_token_type_Valid() const;

    QString getOdataType() const;
    void setOdataType(const QString &odata_type);
    bool is_odata_type_Set() const;
    bool is_odata_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIContentKeyPolicyRestrictionTokenKey> m_alternate_verification_keys;
    bool m_alternate_verification_keys_isSet;
    bool m_alternate_verification_keys_isValid;

    QString m_audience;
    bool m_audience_isSet;
    bool m_audience_isValid;

    QString m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    QString m_open_id_connect_discovery_document;
    bool m_open_id_connect_discovery_document_isSet;
    bool m_open_id_connect_discovery_document_isValid;

    OAIContentKeyPolicyRestrictionTokenKey m_primary_verification_key;
    bool m_primary_verification_key_isSet;
    bool m_primary_verification_key_isValid;

    QList<OAIContentKeyPolicyTokenClaim> m_required_claims;
    bool m_required_claims_isSet;
    bool m_required_claims_isValid;

    QString m_restriction_token_type;
    bool m_restriction_token_type_isSet;
    bool m_restriction_token_type_isValid;

    QString m_odata_type;
    bool m_odata_type_isSet;
    bool m_odata_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContentKeyPolicyTokenRestriction)

#endif // OAIContentKeyPolicyTokenRestriction_H
