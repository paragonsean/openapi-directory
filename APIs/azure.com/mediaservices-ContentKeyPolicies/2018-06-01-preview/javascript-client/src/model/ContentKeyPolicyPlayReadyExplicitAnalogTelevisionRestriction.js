/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction model module.
 * @module model/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction
 * @version 2018-06-01-preview
 */
class ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction {
    /**
     * Constructs a new <code>ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction</code>.
     * Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules.
     * @alias module:model/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction
     * @param bestEffort {Boolean} Indicates whether this restriction is enforced on a Best Effort basis.
     * @param configurationData {Number} Configures the restriction control bits. Must be between 0 and 3 inclusive.
     */
    constructor(bestEffort, configurationData) { 
        
        ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction.initialize(this, bestEffort, configurationData);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bestEffort, configurationData) { 
        obj['bestEffort'] = bestEffort;
        obj['configurationData'] = configurationData;
    }

    /**
     * Constructs a <code>ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction} obj Optional instance to populate.
     * @return {module:model/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction} The populated <code>ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction();

            if (data.hasOwnProperty('bestEffort')) {
                obj['bestEffort'] = ApiClient.convertToType(data['bestEffort'], 'Boolean');
            }
            if (data.hasOwnProperty('configurationData')) {
                obj['configurationData'] = ApiClient.convertToType(data['configurationData'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction.RequiredProperties = ["bestEffort", "configurationData"];

/**
 * Indicates whether this restriction is enforced on a Best Effort basis.
 * @member {Boolean} bestEffort
 */
ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction.prototype['bestEffort'] = undefined;

/**
 * Configures the restriction control bits. Must be between 0 and 3 inclusive.
 * @member {Number} configurationData
 */
ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction.prototype['configurationData'] = undefined;






export default ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction;

