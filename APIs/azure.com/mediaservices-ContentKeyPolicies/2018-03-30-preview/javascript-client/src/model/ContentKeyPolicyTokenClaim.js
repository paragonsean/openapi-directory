/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContentKeyPolicyTokenClaim model module.
 * @module model/ContentKeyPolicyTokenClaim
 * @version 2018-03-30-preview
 */
class ContentKeyPolicyTokenClaim {
    /**
     * Constructs a new <code>ContentKeyPolicyTokenClaim</code>.
     * Represents a token claim.
     * @alias module:model/ContentKeyPolicyTokenClaim
     */
    constructor() { 
        
        ContentKeyPolicyTokenClaim.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContentKeyPolicyTokenClaim</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentKeyPolicyTokenClaim} obj Optional instance to populate.
     * @return {module:model/ContentKeyPolicyTokenClaim} The populated <code>ContentKeyPolicyTokenClaim</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentKeyPolicyTokenClaim();

            if (data.hasOwnProperty('claimType')) {
                obj['claimType'] = ApiClient.convertToType(data['claimType'], 'String');
            }
            if (data.hasOwnProperty('claimValue')) {
                obj['claimValue'] = ApiClient.convertToType(data['claimValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentKeyPolicyTokenClaim</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentKeyPolicyTokenClaim</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['claimType'] && !(typeof data['claimType'] === 'string' || data['claimType'] instanceof String)) {
            throw new Error("Expected the field `claimType` to be a primitive type in the JSON string but got " + data['claimType']);
        }
        // ensure the json data is a string
        if (data['claimValue'] && !(typeof data['claimValue'] === 'string' || data['claimValue'] instanceof String)) {
            throw new Error("Expected the field `claimValue` to be a primitive type in the JSON string but got " + data['claimValue']);
        }

        return true;
    }


}



/**
 * Token claim type.
 * @member {String} claimType
 */
ContentKeyPolicyTokenClaim.prototype['claimType'] = undefined;

/**
 * Token claim value.
 * @member {String} claimValue
 */
ContentKeyPolicyTokenClaim.prototype['claimValue'] = undefined;






export default ContentKeyPolicyTokenClaim;

