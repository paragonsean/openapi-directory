/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContentKeyPolicyOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContentKeyPolicyOption::OAIContentKeyPolicyOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContentKeyPolicyOption::OAIContentKeyPolicyOption() {
    this->initializeModel();
}

OAIContentKeyPolicyOption::~OAIContentKeyPolicyOption() {}

void OAIContentKeyPolicyOption::initializeModel() {

    m_configuration_isSet = false;
    m_configuration_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_policy_option_id_isSet = false;
    m_policy_option_id_isValid = false;

    m_restriction_isSet = false;
    m_restriction_isValid = false;
}

void OAIContentKeyPolicyOption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContentKeyPolicyOption::fromJsonObject(QJsonObject json) {

    m_configuration_isValid = ::OpenAPI::fromJsonValue(m_configuration, json[QString("configuration")]);
    m_configuration_isSet = !json[QString("configuration")].isNull() && m_configuration_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_policy_option_id_isValid = ::OpenAPI::fromJsonValue(m_policy_option_id, json[QString("policyOptionId")]);
    m_policy_option_id_isSet = !json[QString("policyOptionId")].isNull() && m_policy_option_id_isValid;

    m_restriction_isValid = ::OpenAPI::fromJsonValue(m_restriction, json[QString("restriction")]);
    m_restriction_isSet = !json[QString("restriction")].isNull() && m_restriction_isValid;
}

QString OAIContentKeyPolicyOption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContentKeyPolicyOption::asJsonObject() const {
    QJsonObject obj;
    if (m_configuration.isSet()) {
        obj.insert(QString("configuration"), ::OpenAPI::toJsonValue(m_configuration));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_policy_option_id_isSet) {
        obj.insert(QString("policyOptionId"), ::OpenAPI::toJsonValue(m_policy_option_id));
    }
    if (m_restriction.isSet()) {
        obj.insert(QString("restriction"), ::OpenAPI::toJsonValue(m_restriction));
    }
    return obj;
}

OAIContentKeyPolicyConfiguration OAIContentKeyPolicyOption::getConfiguration() const {
    return m_configuration;
}
void OAIContentKeyPolicyOption::setConfiguration(const OAIContentKeyPolicyConfiguration &configuration) {
    m_configuration = configuration;
    m_configuration_isSet = true;
}

bool OAIContentKeyPolicyOption::is_configuration_Set() const{
    return m_configuration_isSet;
}

bool OAIContentKeyPolicyOption::is_configuration_Valid() const{
    return m_configuration_isValid;
}

QString OAIContentKeyPolicyOption::getName() const {
    return m_name;
}
void OAIContentKeyPolicyOption::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIContentKeyPolicyOption::is_name_Set() const{
    return m_name_isSet;
}

bool OAIContentKeyPolicyOption::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIContentKeyPolicyOption::getPolicyOptionId() const {
    return m_policy_option_id;
}
void OAIContentKeyPolicyOption::setPolicyOptionId(const QString &policy_option_id) {
    m_policy_option_id = policy_option_id;
    m_policy_option_id_isSet = true;
}

bool OAIContentKeyPolicyOption::is_policy_option_id_Set() const{
    return m_policy_option_id_isSet;
}

bool OAIContentKeyPolicyOption::is_policy_option_id_Valid() const{
    return m_policy_option_id_isValid;
}

OAIContentKeyPolicyRestriction OAIContentKeyPolicyOption::getRestriction() const {
    return m_restriction;
}
void OAIContentKeyPolicyOption::setRestriction(const OAIContentKeyPolicyRestriction &restriction) {
    m_restriction = restriction;
    m_restriction_isSet = true;
}

bool OAIContentKeyPolicyOption::is_restriction_Set() const{
    return m_restriction_isSet;
}

bool OAIContentKeyPolicyOption::is_restriction_Valid() const{
    return m_restriction_isValid;
}

bool OAIContentKeyPolicyOption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_option_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_restriction.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContentKeyPolicyOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_configuration_isValid && m_restriction_isValid && true;
}

} // namespace OpenAPI
