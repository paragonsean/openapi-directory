/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-03-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction() {
    this->initializeModel();
}

OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::~OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction() {}

void OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::initializeModel() {

    m_best_effort_isSet = false;
    m_best_effort_isValid = false;

    m_configuration_data_isSet = false;
    m_configuration_data_isValid = false;
}

void OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::fromJsonObject(QJsonObject json) {

    m_best_effort_isValid = ::OpenAPI::fromJsonValue(m_best_effort, json[QString("bestEffort")]);
    m_best_effort_isSet = !json[QString("bestEffort")].isNull() && m_best_effort_isValid;

    m_configuration_data_isValid = ::OpenAPI::fromJsonValue(m_configuration_data, json[QString("configurationData")]);
    m_configuration_data_isSet = !json[QString("configurationData")].isNull() && m_configuration_data_isValid;
}

QString OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::asJsonObject() const {
    QJsonObject obj;
    if (m_best_effort_isSet) {
        obj.insert(QString("bestEffort"), ::OpenAPI::toJsonValue(m_best_effort));
    }
    if (m_configuration_data_isSet) {
        obj.insert(QString("configurationData"), ::OpenAPI::toJsonValue(m_configuration_data));
    }
    return obj;
}

bool OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::isBestEffort() const {
    return m_best_effort;
}
void OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::setBestEffort(const bool &best_effort) {
    m_best_effort = best_effort;
    m_best_effort_isSet = true;
}

bool OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::is_best_effort_Set() const{
    return m_best_effort_isSet;
}

bool OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::is_best_effort_Valid() const{
    return m_best_effort_isValid;
}

qint32 OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::getConfigurationData() const {
    return m_configuration_data;
}
void OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::setConfigurationData(const qint32 &configuration_data) {
    m_configuration_data = configuration_data;
    m_configuration_data_isSet = true;
}

bool OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::is_configuration_data_Set() const{
    return m_configuration_data_isSet;
}

bool OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::is_configuration_data_Valid() const{
    return m_configuration_data_isValid;
}

bool OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_best_effort_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_configuration_data_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_best_effort_isValid && m_configuration_data_isValid && true;
}

} // namespace OpenAPI
