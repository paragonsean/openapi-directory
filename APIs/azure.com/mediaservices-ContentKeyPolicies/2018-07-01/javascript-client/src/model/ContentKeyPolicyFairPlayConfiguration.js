/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentKeyPolicyConfiguration from './ContentKeyPolicyConfiguration';

/**
 * The ContentKeyPolicyFairPlayConfiguration model module.
 * @module model/ContentKeyPolicyFairPlayConfiguration
 * @version 2018-07-01
 */
class ContentKeyPolicyFairPlayConfiguration {
    /**
     * Constructs a new <code>ContentKeyPolicyFairPlayConfiguration</code>.
     * Specifies a configuration for FairPlay licenses.
     * @alias module:model/ContentKeyPolicyFairPlayConfiguration
     * @extends module:model/ContentKeyPolicyConfiguration
     * @implements module:model/ContentKeyPolicyConfiguration
     * @param odataType {String} The discriminator for derived types.
     */
    constructor(odataType) { 
        ContentKeyPolicyConfiguration.initialize(this, odataType);
        ContentKeyPolicyFairPlayConfiguration.initialize(this, odataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType) { 
        obj['ask'] = ask;
        obj['fairPlayPfx'] = fairPlayPfx;
        obj['fairPlayPfxPassword'] = fairPlayPfxPassword;
        obj['rentalAndLeaseKeyType'] = rentalAndLeaseKeyType;
        obj['rentalDuration'] = rentalDuration;
    }

    /**
     * Constructs a <code>ContentKeyPolicyFairPlayConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentKeyPolicyFairPlayConfiguration} obj Optional instance to populate.
     * @return {module:model/ContentKeyPolicyFairPlayConfiguration} The populated <code>ContentKeyPolicyFairPlayConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentKeyPolicyFairPlayConfiguration();
            ContentKeyPolicyConfiguration.constructFromObject(data, obj);
            ContentKeyPolicyConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('ask')) {
                obj['ask'] = ApiClient.convertToType(data['ask'], 'Blob');
            }
            if (data.hasOwnProperty('fairPlayPfx')) {
                obj['fairPlayPfx'] = ApiClient.convertToType(data['fairPlayPfx'], 'String');
            }
            if (data.hasOwnProperty('fairPlayPfxPassword')) {
                obj['fairPlayPfxPassword'] = ApiClient.convertToType(data['fairPlayPfxPassword'], 'String');
            }
            if (data.hasOwnProperty('rentalAndLeaseKeyType')) {
                obj['rentalAndLeaseKeyType'] = ApiClient.convertToType(data['rentalAndLeaseKeyType'], 'String');
            }
            if (data.hasOwnProperty('rentalDuration')) {
                obj['rentalDuration'] = ApiClient.convertToType(data['rentalDuration'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentKeyPolicyFairPlayConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentKeyPolicyFairPlayConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContentKeyPolicyFairPlayConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['fairPlayPfx'] && !(typeof data['fairPlayPfx'] === 'string' || data['fairPlayPfx'] instanceof String)) {
            throw new Error("Expected the field `fairPlayPfx` to be a primitive type in the JSON string but got " + data['fairPlayPfx']);
        }
        // ensure the json data is a string
        if (data['fairPlayPfxPassword'] && !(typeof data['fairPlayPfxPassword'] === 'string' || data['fairPlayPfxPassword'] instanceof String)) {
            throw new Error("Expected the field `fairPlayPfxPassword` to be a primitive type in the JSON string but got " + data['fairPlayPfxPassword']);
        }
        // ensure the json data is a string
        if (data['rentalAndLeaseKeyType'] && !(typeof data['rentalAndLeaseKeyType'] === 'string' || data['rentalAndLeaseKeyType'] instanceof String)) {
            throw new Error("Expected the field `rentalAndLeaseKeyType` to be a primitive type in the JSON string but got " + data['rentalAndLeaseKeyType']);
        }

        return true;
    }


}

ContentKeyPolicyFairPlayConfiguration.RequiredProperties = ["ask", "fairPlayPfx", "fairPlayPfxPassword", "rentalAndLeaseKeyType", "rentalDuration", "@odata.type"];

/**
 * The key that must be used as FairPlay Application Secret key.
 * @member {Blob} ask
 */
ContentKeyPolicyFairPlayConfiguration.prototype['ask'] = undefined;

/**
 * The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key).
 * @member {String} fairPlayPfx
 */
ContentKeyPolicyFairPlayConfiguration.prototype['fairPlayPfx'] = undefined;

/**
 * The password encrypting FairPlay certificate in PKCS 12 (pfx) format.
 * @member {String} fairPlayPfxPassword
 */
ContentKeyPolicyFairPlayConfiguration.prototype['fairPlayPfxPassword'] = undefined;

/**
 * The rental and lease key type.
 * @member {module:model/ContentKeyPolicyFairPlayConfiguration.RentalAndLeaseKeyTypeEnum} rentalAndLeaseKeyType
 */
ContentKeyPolicyFairPlayConfiguration.prototype['rentalAndLeaseKeyType'] = undefined;

/**
 * The rental duration. Must be greater than or equal to 0.
 * @member {Number} rentalDuration
 */
ContentKeyPolicyFairPlayConfiguration.prototype['rentalDuration'] = undefined;


// Implement ContentKeyPolicyConfiguration interface:
/**
 * The discriminator for derived types.
 * @member {String} @odata.type
 */
ContentKeyPolicyConfiguration.prototype['@odata.type'] = undefined;



/**
 * Allowed values for the <code>rentalAndLeaseKeyType</code> property.
 * @enum {String}
 * @readonly
 */
ContentKeyPolicyFairPlayConfiguration['RentalAndLeaseKeyTypeEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "Undefined"
     * @const
     */
    "Undefined": "Undefined",

    /**
     * value: "PersistentUnlimited"
     * @const
     */
    "PersistentUnlimited": "PersistentUnlimited",

    /**
     * value: "PersistentLimited"
     * @const
     */
    "PersistentLimited": "PersistentLimited"
};



export default ContentKeyPolicyFairPlayConfiguration;

