/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentKeyPolicyRestriction from './ContentKeyPolicyRestriction';
import ContentKeyPolicyRestrictionTokenKey from './ContentKeyPolicyRestrictionTokenKey';
import ContentKeyPolicyTokenClaim from './ContentKeyPolicyTokenClaim';

/**
 * The ContentKeyPolicyTokenRestriction model module.
 * @module model/ContentKeyPolicyTokenRestriction
 * @version 2018-07-01
 */
class ContentKeyPolicyTokenRestriction {
    /**
     * Constructs a new <code>ContentKeyPolicyTokenRestriction</code>.
     * Represents a token restriction. Provided token must match these requirements for successful license or key delivery.
     * @alias module:model/ContentKeyPolicyTokenRestriction
     * @extends module:model/ContentKeyPolicyRestriction
     * @implements module:model/ContentKeyPolicyRestriction
     * @param odataType {String} The discriminator for derived types.
     */
    constructor(odataType) { 
        ContentKeyPolicyRestriction.initialize(this, odataType);
        ContentKeyPolicyTokenRestriction.initialize(this, odataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType) { 
        obj['audience'] = audience;
        obj['issuer'] = issuer;
        obj['primaryVerificationKey'] = primaryVerificationKey;
        obj['restrictionTokenType'] = restrictionTokenType;
    }

    /**
     * Constructs a <code>ContentKeyPolicyTokenRestriction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentKeyPolicyTokenRestriction} obj Optional instance to populate.
     * @return {module:model/ContentKeyPolicyTokenRestriction} The populated <code>ContentKeyPolicyTokenRestriction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentKeyPolicyTokenRestriction();
            ContentKeyPolicyRestriction.constructFromObject(data, obj);
            ContentKeyPolicyRestriction.constructFromObject(data, obj);

            if (data.hasOwnProperty('alternateVerificationKeys')) {
                obj['alternateVerificationKeys'] = ApiClient.convertToType(data['alternateVerificationKeys'], [ContentKeyPolicyRestrictionTokenKey]);
            }
            if (data.hasOwnProperty('audience')) {
                obj['audience'] = ApiClient.convertToType(data['audience'], 'String');
            }
            if (data.hasOwnProperty('issuer')) {
                obj['issuer'] = ApiClient.convertToType(data['issuer'], 'String');
            }
            if (data.hasOwnProperty('openIdConnectDiscoveryDocument')) {
                obj['openIdConnectDiscoveryDocument'] = ApiClient.convertToType(data['openIdConnectDiscoveryDocument'], 'String');
            }
            if (data.hasOwnProperty('primaryVerificationKey')) {
                obj['primaryVerificationKey'] = ContentKeyPolicyRestrictionTokenKey.constructFromObject(data['primaryVerificationKey']);
            }
            if (data.hasOwnProperty('requiredClaims')) {
                obj['requiredClaims'] = ApiClient.convertToType(data['requiredClaims'], [ContentKeyPolicyTokenClaim]);
            }
            if (data.hasOwnProperty('restrictionTokenType')) {
                obj['restrictionTokenType'] = ApiClient.convertToType(data['restrictionTokenType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentKeyPolicyTokenRestriction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentKeyPolicyTokenRestriction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContentKeyPolicyTokenRestriction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['alternateVerificationKeys']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['alternateVerificationKeys'])) {
                throw new Error("Expected the field `alternateVerificationKeys` to be an array in the JSON data but got " + data['alternateVerificationKeys']);
            }
            // validate the optional field `alternateVerificationKeys` (array)
            for (const item of data['alternateVerificationKeys']) {
                ContentKeyPolicyRestrictionTokenKey.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['audience'] && !(typeof data['audience'] === 'string' || data['audience'] instanceof String)) {
            throw new Error("Expected the field `audience` to be a primitive type in the JSON string but got " + data['audience']);
        }
        // ensure the json data is a string
        if (data['issuer'] && !(typeof data['issuer'] === 'string' || data['issuer'] instanceof String)) {
            throw new Error("Expected the field `issuer` to be a primitive type in the JSON string but got " + data['issuer']);
        }
        // ensure the json data is a string
        if (data['openIdConnectDiscoveryDocument'] && !(typeof data['openIdConnectDiscoveryDocument'] === 'string' || data['openIdConnectDiscoveryDocument'] instanceof String)) {
            throw new Error("Expected the field `openIdConnectDiscoveryDocument` to be a primitive type in the JSON string but got " + data['openIdConnectDiscoveryDocument']);
        }
        // validate the optional field `primaryVerificationKey`
        if (data['primaryVerificationKey']) { // data not null
          ContentKeyPolicyRestrictionTokenKey.validateJSON(data['primaryVerificationKey']);
        }
        if (data['requiredClaims']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['requiredClaims'])) {
                throw new Error("Expected the field `requiredClaims` to be an array in the JSON data but got " + data['requiredClaims']);
            }
            // validate the optional field `requiredClaims` (array)
            for (const item of data['requiredClaims']) {
                ContentKeyPolicyTokenClaim.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['restrictionTokenType'] && !(typeof data['restrictionTokenType'] === 'string' || data['restrictionTokenType'] instanceof String)) {
            throw new Error("Expected the field `restrictionTokenType` to be a primitive type in the JSON string but got " + data['restrictionTokenType']);
        }

        return true;
    }


}

ContentKeyPolicyTokenRestriction.RequiredProperties = ["audience", "issuer", "primaryVerificationKey", "restrictionTokenType", "@odata.type"];

/**
 * A list of alternative verification keys.
 * @member {Array.<module:model/ContentKeyPolicyRestrictionTokenKey>} alternateVerificationKeys
 */
ContentKeyPolicyTokenRestriction.prototype['alternateVerificationKeys'] = undefined;

/**
 * The audience for the token.
 * @member {String} audience
 */
ContentKeyPolicyTokenRestriction.prototype['audience'] = undefined;

/**
 * The token issuer.
 * @member {String} issuer
 */
ContentKeyPolicyTokenRestriction.prototype['issuer'] = undefined;

/**
 * The OpenID connect discovery document.
 * @member {String} openIdConnectDiscoveryDocument
 */
ContentKeyPolicyTokenRestriction.prototype['openIdConnectDiscoveryDocument'] = undefined;

/**
 * @member {module:model/ContentKeyPolicyRestrictionTokenKey} primaryVerificationKey
 */
ContentKeyPolicyTokenRestriction.prototype['primaryVerificationKey'] = undefined;

/**
 * A list of required token claims.
 * @member {Array.<module:model/ContentKeyPolicyTokenClaim>} requiredClaims
 */
ContentKeyPolicyTokenRestriction.prototype['requiredClaims'] = undefined;

/**
 * The type of token.
 * @member {module:model/ContentKeyPolicyTokenRestriction.RestrictionTokenTypeEnum} restrictionTokenType
 */
ContentKeyPolicyTokenRestriction.prototype['restrictionTokenType'] = undefined;


// Implement ContentKeyPolicyRestriction interface:
/**
 * The discriminator for derived types.
 * @member {String} @odata.type
 */
ContentKeyPolicyRestriction.prototype['@odata.type'] = undefined;



/**
 * Allowed values for the <code>restrictionTokenType</code> property.
 * @enum {String}
 * @readonly
 */
ContentKeyPolicyTokenRestriction['RestrictionTokenTypeEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "Swt"
     * @const
     */
    "Swt": "Swt",

    /**
     * value: "Jwt"
     * @const
     */
    "Jwt": "Jwt"
};



export default ContentKeyPolicyTokenRestriction;

