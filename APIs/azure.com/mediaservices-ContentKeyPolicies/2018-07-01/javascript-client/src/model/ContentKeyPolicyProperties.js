/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentKeyPolicyOption from './ContentKeyPolicyOption';

/**
 * The ContentKeyPolicyProperties model module.
 * @module model/ContentKeyPolicyProperties
 * @version 2018-07-01
 */
class ContentKeyPolicyProperties {
    /**
     * Constructs a new <code>ContentKeyPolicyProperties</code>.
     * The properties of the Content Key Policy.
     * @alias module:model/ContentKeyPolicyProperties
     * @param options {Array.<module:model/ContentKeyPolicyOption>} The Key Policy options.
     */
    constructor(options) { 
        
        ContentKeyPolicyProperties.initialize(this, options);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, options) { 
        obj['options'] = options;
    }

    /**
     * Constructs a <code>ContentKeyPolicyProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentKeyPolicyProperties} obj Optional instance to populate.
     * @return {module:model/ContentKeyPolicyProperties} The populated <code>ContentKeyPolicyProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentKeyPolicyProperties();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('lastModified')) {
                obj['lastModified'] = ApiClient.convertToType(data['lastModified'], 'Date');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], [ContentKeyPolicyOption]);
            }
            if (data.hasOwnProperty('policyId')) {
                obj['policyId'] = ApiClient.convertToType(data['policyId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentKeyPolicyProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentKeyPolicyProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContentKeyPolicyProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['options']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['options'])) {
                throw new Error("Expected the field `options` to be an array in the JSON data but got " + data['options']);
            }
            // validate the optional field `options` (array)
            for (const item of data['options']) {
                ContentKeyPolicyOption.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['policyId'] && !(typeof data['policyId'] === 'string' || data['policyId'] instanceof String)) {
            throw new Error("Expected the field `policyId` to be a primitive type in the JSON string but got " + data['policyId']);
        }

        return true;
    }


}

ContentKeyPolicyProperties.RequiredProperties = ["options"];

/**
 * The creation date of the Policy
 * @member {Date} created
 */
ContentKeyPolicyProperties.prototype['created'] = undefined;

/**
 * A description for the Policy.
 * @member {String} description
 */
ContentKeyPolicyProperties.prototype['description'] = undefined;

/**
 * The last modified date of the Policy
 * @member {Date} lastModified
 */
ContentKeyPolicyProperties.prototype['lastModified'] = undefined;

/**
 * The Key Policy options.
 * @member {Array.<module:model/ContentKeyPolicyOption>} options
 */
ContentKeyPolicyProperties.prototype['options'] = undefined;

/**
 * The legacy Policy ID.
 * @member {String} policyId
 */
ContentKeyPolicyProperties.prototype['policyId'] = undefined;






export default ContentKeyPolicyProperties;

