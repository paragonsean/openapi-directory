/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureMediaServices);
  }
}(this, function(expect, AzureMediaServices) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ContentKeyPolicyPlayReadyPlayRight', function() {
    it('should create an instance of ContentKeyPolicyPlayReadyPlayRight', function() {
      // uncomment below and update the code to test ContentKeyPolicyPlayReadyPlayRight
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be.a(AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight);
    });

    it('should have the property agcAndColorStripeRestriction (base name: "agcAndColorStripeRestriction")', function() {
      // uncomment below and update the code to test the property agcAndColorStripeRestriction
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

    it('should have the property allowPassingVideoContentToUnknownOutput (base name: "allowPassingVideoContentToUnknownOutput")', function() {
      // uncomment below and update the code to test the property allowPassingVideoContentToUnknownOutput
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

    it('should have the property analogVideoOpl (base name: "analogVideoOpl")', function() {
      // uncomment below and update the code to test the property analogVideoOpl
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

    it('should have the property compressedDigitalAudioOpl (base name: "compressedDigitalAudioOpl")', function() {
      // uncomment below and update the code to test the property compressedDigitalAudioOpl
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

    it('should have the property compressedDigitalVideoOpl (base name: "compressedDigitalVideoOpl")', function() {
      // uncomment below and update the code to test the property compressedDigitalVideoOpl
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

    it('should have the property digitalVideoOnlyContentRestriction (base name: "digitalVideoOnlyContentRestriction")', function() {
      // uncomment below and update the code to test the property digitalVideoOnlyContentRestriction
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

    it('should have the property explicitAnalogTelevisionOutputRestriction (base name: "explicitAnalogTelevisionOutputRestriction")', function() {
      // uncomment below and update the code to test the property explicitAnalogTelevisionOutputRestriction
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

    it('should have the property firstPlayExpiration (base name: "firstPlayExpiration")', function() {
      // uncomment below and update the code to test the property firstPlayExpiration
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

    it('should have the property imageConstraintForAnalogComponentVideoRestriction (base name: "imageConstraintForAnalogComponentVideoRestriction")', function() {
      // uncomment below and update the code to test the property imageConstraintForAnalogComponentVideoRestriction
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

    it('should have the property imageConstraintForAnalogComputerMonitorRestriction (base name: "imageConstraintForAnalogComputerMonitorRestriction")', function() {
      // uncomment below and update the code to test the property imageConstraintForAnalogComputerMonitorRestriction
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

    it('should have the property scmsRestriction (base name: "scmsRestriction")', function() {
      // uncomment below and update the code to test the property scmsRestriction
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

    it('should have the property uncompressedDigitalAudioOpl (base name: "uncompressedDigitalAudioOpl")', function() {
      // uncomment below and update the code to test the property uncompressedDigitalAudioOpl
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

    it('should have the property uncompressedDigitalVideoOpl (base name: "uncompressedDigitalVideoOpl")', function() {
      // uncomment below and update the code to test the property uncompressedDigitalVideoOpl
      //var instance = new AzureMediaServices.ContentKeyPolicyPlayReadyPlayRight();
      //expect(instance).to.be();
    });

  });

}));
