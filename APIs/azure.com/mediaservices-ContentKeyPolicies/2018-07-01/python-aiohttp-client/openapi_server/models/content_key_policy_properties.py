# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_key_policy_option import ContentKeyPolicyOption
from openapi_server import util


class ContentKeyPolicyProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, description: str=None, last_modified: datetime=None, options: List[ContentKeyPolicyOption]=None, policy_id: str=None):
        """ContentKeyPolicyProperties - a model defined in OpenAPI

        :param created: The created of this ContentKeyPolicyProperties.
        :param description: The description of this ContentKeyPolicyProperties.
        :param last_modified: The last_modified of this ContentKeyPolicyProperties.
        :param options: The options of this ContentKeyPolicyProperties.
        :param policy_id: The policy_id of this ContentKeyPolicyProperties.
        """
        self.openapi_types = {
            'created': datetime,
            'description': str,
            'last_modified': datetime,
            'options': List[ContentKeyPolicyOption],
            'policy_id': str
        }

        self.attribute_map = {
            'created': 'created',
            'description': 'description',
            'last_modified': 'lastModified',
            'options': 'options',
            'policy_id': 'policyId'
        }

        self._created = created
        self._description = description
        self._last_modified = last_modified
        self._options = options
        self._policy_id = policy_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentKeyPolicyProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentKeyPolicyProperties of this ContentKeyPolicyProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this ContentKeyPolicyProperties.

        The creation date of the Policy

        :return: The created of this ContentKeyPolicyProperties.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this ContentKeyPolicyProperties.

        The creation date of the Policy

        :param created: The created of this ContentKeyPolicyProperties.
        :type created: datetime
        """

        self._created = created

    @property
    def description(self):
        """Gets the description of this ContentKeyPolicyProperties.

        A description for the Policy.

        :return: The description of this ContentKeyPolicyProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ContentKeyPolicyProperties.

        A description for the Policy.

        :param description: The description of this ContentKeyPolicyProperties.
        :type description: str
        """

        self._description = description

    @property
    def last_modified(self):
        """Gets the last_modified of this ContentKeyPolicyProperties.

        The last modified date of the Policy

        :return: The last_modified of this ContentKeyPolicyProperties.
        :rtype: datetime
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this ContentKeyPolicyProperties.

        The last modified date of the Policy

        :param last_modified: The last_modified of this ContentKeyPolicyProperties.
        :type last_modified: datetime
        """

        self._last_modified = last_modified

    @property
    def options(self):
        """Gets the options of this ContentKeyPolicyProperties.

        The Key Policy options.

        :return: The options of this ContentKeyPolicyProperties.
        :rtype: List[ContentKeyPolicyOption]
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this ContentKeyPolicyProperties.

        The Key Policy options.

        :param options: The options of this ContentKeyPolicyProperties.
        :type options: List[ContentKeyPolicyOption]
        """
        if options is None:
            raise ValueError("Invalid value for `options`, must not be `None`")

        self._options = options

    @property
    def policy_id(self):
        """Gets the policy_id of this ContentKeyPolicyProperties.

        The legacy Policy ID.

        :return: The policy_id of this ContentKeyPolicyProperties.
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """Sets the policy_id of this ContentKeyPolicyProperties.

        The legacy Policy ID.

        :param policy_id: The policy_id of this ContentKeyPolicyProperties.
        :type policy_id: str
        """

        self._policy_id = policy_id
