/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContentKeyPolicyPlayReadyPlayRight.h
 *
 * Configures the Play Right in the PlayReady license.
 */

#ifndef OAIContentKeyPolicyPlayReadyPlayRight_H
#define OAIContentKeyPolicyPlayReadyPlayRight_H

#include <QJsonObject>

#include "OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction;

class OAIContentKeyPolicyPlayReadyPlayRight : public OAIObject {
public:
    OAIContentKeyPolicyPlayReadyPlayRight();
    OAIContentKeyPolicyPlayReadyPlayRight(QString json);
    ~OAIContentKeyPolicyPlayReadyPlayRight() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAgcAndColorStripeRestriction() const;
    void setAgcAndColorStripeRestriction(const qint32 &agc_and_color_stripe_restriction);
    bool is_agc_and_color_stripe_restriction_Set() const;
    bool is_agc_and_color_stripe_restriction_Valid() const;

    QString getAllowPassingVideoContentToUnknownOutput() const;
    void setAllowPassingVideoContentToUnknownOutput(const QString &allow_passing_video_content_to_unknown_output);
    bool is_allow_passing_video_content_to_unknown_output_Set() const;
    bool is_allow_passing_video_content_to_unknown_output_Valid() const;

    qint32 getAnalogVideoOpl() const;
    void setAnalogVideoOpl(const qint32 &analog_video_opl);
    bool is_analog_video_opl_Set() const;
    bool is_analog_video_opl_Valid() const;

    qint32 getCompressedDigitalAudioOpl() const;
    void setCompressedDigitalAudioOpl(const qint32 &compressed_digital_audio_opl);
    bool is_compressed_digital_audio_opl_Set() const;
    bool is_compressed_digital_audio_opl_Valid() const;

    qint32 getCompressedDigitalVideoOpl() const;
    void setCompressedDigitalVideoOpl(const qint32 &compressed_digital_video_opl);
    bool is_compressed_digital_video_opl_Set() const;
    bool is_compressed_digital_video_opl_Valid() const;

    bool isDigitalVideoOnlyContentRestriction() const;
    void setDigitalVideoOnlyContentRestriction(const bool &digital_video_only_content_restriction);
    bool is_digital_video_only_content_restriction_Set() const;
    bool is_digital_video_only_content_restriction_Valid() const;

    OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction getExplicitAnalogTelevisionOutputRestriction() const;
    void setExplicitAnalogTelevisionOutputRestriction(const OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction &explicit_analog_television_output_restriction);
    bool is_explicit_analog_television_output_restriction_Set() const;
    bool is_explicit_analog_television_output_restriction_Valid() const;

    QString getFirstPlayExpiration() const;
    void setFirstPlayExpiration(const QString &first_play_expiration);
    bool is_first_play_expiration_Set() const;
    bool is_first_play_expiration_Valid() const;

    bool isImageConstraintForAnalogComponentVideoRestriction() const;
    void setImageConstraintForAnalogComponentVideoRestriction(const bool &image_constraint_for_analog_component_video_restriction);
    bool is_image_constraint_for_analog_component_video_restriction_Set() const;
    bool is_image_constraint_for_analog_component_video_restriction_Valid() const;

    bool isImageConstraintForAnalogComputerMonitorRestriction() const;
    void setImageConstraintForAnalogComputerMonitorRestriction(const bool &image_constraint_for_analog_computer_monitor_restriction);
    bool is_image_constraint_for_analog_computer_monitor_restriction_Set() const;
    bool is_image_constraint_for_analog_computer_monitor_restriction_Valid() const;

    qint32 getScmsRestriction() const;
    void setScmsRestriction(const qint32 &scms_restriction);
    bool is_scms_restriction_Set() const;
    bool is_scms_restriction_Valid() const;

    qint32 getUncompressedDigitalAudioOpl() const;
    void setUncompressedDigitalAudioOpl(const qint32 &uncompressed_digital_audio_opl);
    bool is_uncompressed_digital_audio_opl_Set() const;
    bool is_uncompressed_digital_audio_opl_Valid() const;

    qint32 getUncompressedDigitalVideoOpl() const;
    void setUncompressedDigitalVideoOpl(const qint32 &uncompressed_digital_video_opl);
    bool is_uncompressed_digital_video_opl_Set() const;
    bool is_uncompressed_digital_video_opl_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_agc_and_color_stripe_restriction;
    bool m_agc_and_color_stripe_restriction_isSet;
    bool m_agc_and_color_stripe_restriction_isValid;

    QString m_allow_passing_video_content_to_unknown_output;
    bool m_allow_passing_video_content_to_unknown_output_isSet;
    bool m_allow_passing_video_content_to_unknown_output_isValid;

    qint32 m_analog_video_opl;
    bool m_analog_video_opl_isSet;
    bool m_analog_video_opl_isValid;

    qint32 m_compressed_digital_audio_opl;
    bool m_compressed_digital_audio_opl_isSet;
    bool m_compressed_digital_audio_opl_isValid;

    qint32 m_compressed_digital_video_opl;
    bool m_compressed_digital_video_opl_isSet;
    bool m_compressed_digital_video_opl_isValid;

    bool m_digital_video_only_content_restriction;
    bool m_digital_video_only_content_restriction_isSet;
    bool m_digital_video_only_content_restriction_isValid;

    OAIContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction m_explicit_analog_television_output_restriction;
    bool m_explicit_analog_television_output_restriction_isSet;
    bool m_explicit_analog_television_output_restriction_isValid;

    QString m_first_play_expiration;
    bool m_first_play_expiration_isSet;
    bool m_first_play_expiration_isValid;

    bool m_image_constraint_for_analog_component_video_restriction;
    bool m_image_constraint_for_analog_component_video_restriction_isSet;
    bool m_image_constraint_for_analog_component_video_restriction_isValid;

    bool m_image_constraint_for_analog_computer_monitor_restriction;
    bool m_image_constraint_for_analog_computer_monitor_restriction_isSet;
    bool m_image_constraint_for_analog_computer_monitor_restriction_isValid;

    qint32 m_scms_restriction;
    bool m_scms_restriction_isSet;
    bool m_scms_restriction_isValid;

    qint32 m_uncompressed_digital_audio_opl;
    bool m_uncompressed_digital_audio_opl_isSet;
    bool m_uncompressed_digital_audio_opl_isValid;

    qint32 m_uncompressed_digital_video_opl;
    bool m_uncompressed_digital_video_opl_isSet;
    bool m_uncompressed_digital_video_opl_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContentKeyPolicyPlayReadyPlayRight)

#endif // OAIContentKeyPolicyPlayReadyPlayRight_H
