/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAvailableServiceAlias.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAvailableServiceAlias::OAIAvailableServiceAlias(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAvailableServiceAlias::OAIAvailableServiceAlias() {
    this->initializeModel();
}

OAIAvailableServiceAlias::~OAIAvailableServiceAlias() {}

void OAIAvailableServiceAlias::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_resource_name_isSet = false;
    m_resource_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIAvailableServiceAlias::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAvailableServiceAlias::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_resource_name_isValid = ::OpenAPI::fromJsonValue(m_resource_name, json[QString("resourceName")]);
    m_resource_name_isSet = !json[QString("resourceName")].isNull() && m_resource_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIAvailableServiceAlias::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAvailableServiceAlias::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_resource_name_isSet) {
        obj.insert(QString("resourceName"), ::OpenAPI::toJsonValue(m_resource_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIAvailableServiceAlias::getId() const {
    return m_id;
}
void OAIAvailableServiceAlias::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAvailableServiceAlias::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAvailableServiceAlias::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAvailableServiceAlias::getName() const {
    return m_name;
}
void OAIAvailableServiceAlias::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAvailableServiceAlias::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAvailableServiceAlias::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAvailableServiceAlias::getResourceName() const {
    return m_resource_name;
}
void OAIAvailableServiceAlias::setResourceName(const QString &resource_name) {
    m_resource_name = resource_name;
    m_resource_name_isSet = true;
}

bool OAIAvailableServiceAlias::is_resource_name_Set() const{
    return m_resource_name_isSet;
}

bool OAIAvailableServiceAlias::is_resource_name_Valid() const{
    return m_resource_name_isValid;
}

QString OAIAvailableServiceAlias::getType() const {
    return m_type;
}
void OAIAvailableServiceAlias::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIAvailableServiceAlias::is_type_Set() const{
    return m_type_isSet;
}

bool OAIAvailableServiceAlias::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIAvailableServiceAlias::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAvailableServiceAlias::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
