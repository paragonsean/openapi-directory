# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WorkspacePurgeBodyFilters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column: str=None, key: str=None, operator: str=None, value: object=None):
        """WorkspacePurgeBodyFilters - a model defined in OpenAPI

        :param column: The column of this WorkspacePurgeBodyFilters.
        :param key: The key of this WorkspacePurgeBodyFilters.
        :param operator: The operator of this WorkspacePurgeBodyFilters.
        :param value: The value of this WorkspacePurgeBodyFilters.
        """
        self.openapi_types = {
            'column': str,
            'key': str,
            'operator': str,
            'value': object
        }

        self.attribute_map = {
            'column': 'column',
            'key': 'key',
            'operator': 'operator',
            'value': 'value'
        }

        self._column = column
        self._key = key
        self._operator = operator
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkspacePurgeBodyFilters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkspacePurgeBodyFilters of this WorkspacePurgeBodyFilters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column(self):
        """Gets the column of this WorkspacePurgeBodyFilters.

        The column of the table over which the given query should run

        :return: The column of this WorkspacePurgeBodyFilters.
        :rtype: str
        """
        return self._column

    @column.setter
    def column(self, column):
        """Sets the column of this WorkspacePurgeBodyFilters.

        The column of the table over which the given query should run

        :param column: The column of this WorkspacePurgeBodyFilters.
        :type column: str
        """

        self._column = column

    @property
    def key(self):
        """Gets the key of this WorkspacePurgeBodyFilters.

        When filtering over custom dimensions, this key will be used as the name of the custom dimension.

        :return: The key of this WorkspacePurgeBodyFilters.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this WorkspacePurgeBodyFilters.

        When filtering over custom dimensions, this key will be used as the name of the custom dimension.

        :param key: The key of this WorkspacePurgeBodyFilters.
        :type key: str
        """

        self._key = key

    @property
    def operator(self):
        """Gets the operator of this WorkspacePurgeBodyFilters.

        A query operator to evaluate over the provided column and value(s). Supported operators are ==, =~, in, in~, >, >=, <, <=, between, and have the same behavior as they would in a KQL query.

        :return: The operator of this WorkspacePurgeBodyFilters.
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this WorkspacePurgeBodyFilters.

        A query operator to evaluate over the provided column and value(s). Supported operators are ==, =~, in, in~, >, >=, <, <=, between, and have the same behavior as they would in a KQL query.

        :param operator: The operator of this WorkspacePurgeBodyFilters.
        :type operator: str
        """

        self._operator = operator

    @property
    def value(self):
        """Gets the value of this WorkspacePurgeBodyFilters.

        the value for the operator to function over. This can be a number (e.g., > 100), a string (timestamp >= '2017-09-01') or array of values.

        :return: The value of this WorkspacePurgeBodyFilters.
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this WorkspacePurgeBodyFilters.

        the value for the operator to function over. This can be a number (e.g., > 100), a string (timestamp >= '2017-09-01') or array of values.

        :param value: The value of this WorkspacePurgeBodyFilters.
        :type value: object
        """

        self._value = value
