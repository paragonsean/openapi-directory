# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LinkTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_name: str=None, customer_id: str=None, location: str=None, workspace_name: str=None):
        """LinkTarget - a model defined in OpenAPI

        :param account_name: The account_name of this LinkTarget.
        :param customer_id: The customer_id of this LinkTarget.
        :param location: The location of this LinkTarget.
        :param workspace_name: The workspace_name of this LinkTarget.
        """
        self.openapi_types = {
            'account_name': str,
            'customer_id': str,
            'location': str,
            'workspace_name': str
        }

        self.attribute_map = {
            'account_name': 'accountName',
            'customer_id': 'customerId',
            'location': 'location',
            'workspace_name': 'workspaceName'
        }

        self._account_name = account_name
        self._customer_id = customer_id
        self._location = location
        self._workspace_name = workspace_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkTarget of this LinkTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_name(self):
        """Gets the account_name of this LinkTarget.

        The display name of the workspace.

        :return: The account_name of this LinkTarget.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this LinkTarget.

        The display name of the workspace.

        :param account_name: The account_name of this LinkTarget.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def customer_id(self):
        """Gets the customer_id of this LinkTarget.

        The GUID that uniquely identifies the workspace. 

        :return: The customer_id of this LinkTarget.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this LinkTarget.

        The GUID that uniquely identifies the workspace. 

        :param customer_id: The customer_id of this LinkTarget.
        :type customer_id: str
        """

        self._customer_id = customer_id

    @property
    def location(self):
        """Gets the location of this LinkTarget.

        The location of the workspace.

        :return: The location of this LinkTarget.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this LinkTarget.

        The location of the workspace.

        :param location: The location of this LinkTarget.
        :type location: str
        """

        self._location = location

    @property
    def workspace_name(self):
        """Gets the workspace_name of this LinkTarget.

        The DNS valid workspace name.

        :return: The workspace_name of this LinkTarget.
        :rtype: str
        """
        return self._workspace_name

    @workspace_name.setter
    def workspace_name(self, workspace_name):
        """Sets the workspace_name of this LinkTarget.

        The DNS valid workspace name.

        :param workspace_name: The workspace_name of this LinkTarget.
        :type workspace_name: str
        """

        self._workspace_name = workspace_name
