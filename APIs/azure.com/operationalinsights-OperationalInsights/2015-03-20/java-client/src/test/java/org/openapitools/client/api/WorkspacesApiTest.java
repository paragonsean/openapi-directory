/*
 * Azure Log Analytics
 * Azure Log Analytics API reference.
 *
 * The version of the OpenAPI document: 2015-03-20
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.LinkTarget;
import org.openapitools.client.model.SearchGetSchemaResponse;
import org.openapitools.client.model.SharedKeys;
import org.openapitools.client.model.WorkspacePurgeBody;
import org.openapitools.client.model.WorkspacePurgeResponse;
import org.openapitools.client.model.WorkspacePurgeStatusResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkspacesApi
 */
@Disabled
public class WorkspacesApiTest {

    private final WorkspacesApi api = new WorkspacesApi();

    /**
     * Delete a Log Analytics gateway.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesDeleteGatewaysTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workspaceName = null;
        String gatewayId = null;
        String apiVersion = null;
        api.workspacesDeleteGateways(subscriptionId, resourceGroupName, workspaceName, gatewayId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets status of an ongoing purge operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesGetPurgeStatusTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String workspaceName = null;
        String purgeId = null;
        WorkspacePurgeStatusResponse response = api.workspacesGetPurgeStatus(resourceGroupName, apiVersion, subscriptionId, workspaceName, purgeId);
        // TODO: test validations
    }

    /**
     * Gets the schema for a given workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesGetSchemaTest() throws ApiException {
        String resourceGroupName = null;
        String workspaceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        SearchGetSchemaResponse response = api.workspacesGetSchema(resourceGroupName, workspaceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the shared keys for a Log Analytics Workspace. These keys are used to connect Microsoft Operational Insights agents to the workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesListKeysTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workspaceName = null;
        String apiVersion = null;
        SharedKeys response = api.workspacesListKeys(subscriptionId, resourceGroupName, workspaceName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get a list of workspaces which the current user has administrator privileges and are not associated with an Azure Subscription. The subscriptionId parameter in the Url is ignored.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesListLinkTargetsTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        List<LinkTarget> response = api.workspacesListLinkTargets(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Purges data in an Log Analytics workspace by a set of user-defined filters.  In order to manage system resources, purge requests are throttled at 50 requests per hour. You should batch the execution of purge requests by sending a single command whose predicate includes all user identities that require purging. Use the in operator to specify multiple identities. You should run the query prior to using for a purge request to verify that the results are expected.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesPurgeTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String workspaceName = null;
        WorkspacePurgeBody body = null;
        WorkspacePurgeResponse response = api.workspacesPurge(resourceGroupName, apiVersion, subscriptionId, workspaceName, body);
        // TODO: test validations
    }

    /**
     * Regenerates the shared keys for a Log Analytics Workspace. These keys are used to connect Microsoft Operational Insights agents to the workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspacesRegenerateSharedKeysTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workspaceName = null;
        String apiVersion = null;
        SharedKeys response = api.workspacesRegenerateSharedKeys(subscriptionId, resourceGroupName, workspaceName, apiVersion);
        // TODO: test validations
    }

}
