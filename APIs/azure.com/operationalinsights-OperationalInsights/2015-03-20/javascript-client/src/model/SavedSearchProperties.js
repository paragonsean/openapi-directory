/**
 * Azure Log Analytics
 * Azure Log Analytics API reference.
 *
 * The version of the OpenAPI document: 2015-03-20
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Tag from './Tag';

/**
 * The SavedSearchProperties model module.
 * @module model/SavedSearchProperties
 * @version 2015-03-20
 */
class SavedSearchProperties {
    /**
     * Constructs a new <code>SavedSearchProperties</code>.
     * Value object for saved search results.
     * @alias module:model/SavedSearchProperties
     * @param category {String} The category of the saved search. This helps the user to find a saved search faster. 
     * @param displayName {String} Saved search display name.
     * @param query {String} The query expression for the saved search. Please see https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-search-reference for reference.
     */
    constructor(category, displayName, query) { 
        
        SavedSearchProperties.initialize(this, category, displayName, query);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, category, displayName, query) { 
        obj['category'] = category;
        obj['displayName'] = displayName;
        obj['query'] = query;
    }

    /**
     * Constructs a <code>SavedSearchProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SavedSearchProperties} obj Optional instance to populate.
     * @return {module:model/SavedSearchProperties} The populated <code>SavedSearchProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SavedSearchProperties();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = ApiClient.convertToType(data['query'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [Tag]);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SavedSearchProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SavedSearchProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SavedSearchProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['query'] && !(typeof data['query'] === 'string' || data['query'] instanceof String)) {
            throw new Error("Expected the field `query` to be a primitive type in the JSON string but got " + data['query']);
        }
        if (data['tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tags'])) {
                throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
            }
            // validate the optional field `tags` (array)
            for (const item of data['tags']) {
                Tag.validateJSON(item);
            };
        }

        return true;
    }


}

SavedSearchProperties.RequiredProperties = ["category", "displayName", "query"];

/**
 * The category of the saved search. This helps the user to find a saved search faster. 
 * @member {String} category
 */
SavedSearchProperties.prototype['category'] = undefined;

/**
 * Saved search display name.
 * @member {String} displayName
 */
SavedSearchProperties.prototype['displayName'] = undefined;

/**
 * The query expression for the saved search. Please see https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-search-reference for reference.
 * @member {String} query
 */
SavedSearchProperties.prototype['query'] = undefined;

/**
 * The tags attached to the saved search.
 * @member {Array.<module:model/Tag>} tags
 */
SavedSearchProperties.prototype['tags'] = undefined;

/**
 * The version number of the query language. The current version is 2 and is the default.
 * @member {Number} version
 */
SavedSearchProperties.prototype['version'] = undefined;






export default SavedSearchProperties;

