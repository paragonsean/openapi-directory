/**
 * Azure Log Analytics
 * Azure Log Analytics API reference.
 *
 * The version of the OpenAPI document: 2015-03-20
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StorageAccount from './StorageAccount';
import StorageInsightStatus from './StorageInsightStatus';

/**
 * The StorageInsightProperties model module.
 * @module model/StorageInsightProperties
 * @version 2015-03-20
 */
class StorageInsightProperties {
    /**
     * Constructs a new <code>StorageInsightProperties</code>.
     * Storage insight properties.
     * @alias module:model/StorageInsightProperties
     * @param storageAccount {module:model/StorageAccount} 
     */
    constructor(storageAccount) { 
        
        StorageInsightProperties.initialize(this, storageAccount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, storageAccount) { 
        obj['storageAccount'] = storageAccount;
    }

    /**
     * Constructs a <code>StorageInsightProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageInsightProperties} obj Optional instance to populate.
     * @return {module:model/StorageInsightProperties} The populated <code>StorageInsightProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageInsightProperties();

            if (data.hasOwnProperty('containers')) {
                obj['containers'] = ApiClient.convertToType(data['containers'], ['String']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = StorageInsightStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('storageAccount')) {
                obj['storageAccount'] = StorageAccount.constructFromObject(data['storageAccount']);
            }
            if (data.hasOwnProperty('tables')) {
                obj['tables'] = ApiClient.convertToType(data['tables'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageInsightProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageInsightProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StorageInsightProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['containers'])) {
            throw new Error("Expected the field `containers` to be an array in the JSON data but got " + data['containers']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          StorageInsightStatus.validateJSON(data['status']);
        }
        // validate the optional field `storageAccount`
        if (data['storageAccount']) { // data not null
          StorageAccount.validateJSON(data['storageAccount']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tables'])) {
            throw new Error("Expected the field `tables` to be an array in the JSON data but got " + data['tables']);
        }

        return true;
    }


}

StorageInsightProperties.RequiredProperties = ["storageAccount"];

/**
 * The names of the blob containers that the workspace should read
 * @member {Array.<String>} containers
 */
StorageInsightProperties.prototype['containers'] = undefined;

/**
 * @member {module:model/StorageInsightStatus} status
 */
StorageInsightProperties.prototype['status'] = undefined;

/**
 * @member {module:model/StorageAccount} storageAccount
 */
StorageInsightProperties.prototype['storageAccount'] = undefined;

/**
 * The names of the Azure tables that the workspace should read
 * @member {Array.<String>} tables
 */
StorageInsightProperties.prototype['tables'] = undefined;






export default StorageInsightProperties;

