/**
 * Azure Log Analytics
 * Azure Log Analytics API reference.
 *
 * The version of the OpenAPI document: 2015-03-20
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchSchemaValue.h
 *
 * Value object for schema results.
 */

#ifndef OAISearchSchemaValue_H
#define OAISearchSchemaValue_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISearchSchemaValue : public OAIObject {
public:
    OAISearchSchemaValue();
    OAISearchSchemaValue(QString json);
    ~OAISearchSchemaValue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    bool isFacet() const;
    void setFacet(const bool &facet);
    bool is_facet_Set() const;
    bool is_facet_Valid() const;

    bool isIndexed() const;
    void setIndexed(const bool &indexed);
    bool is_indexed_Set() const;
    bool is_indexed_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getOwnerType() const;
    void setOwnerType(const QList<QString> &owner_type);
    bool is_owner_type_Set() const;
    bool is_owner_type_Valid() const;

    bool isStored() const;
    void setStored(const bool &stored);
    bool is_stored_Set() const;
    bool is_stored_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    bool m_facet;
    bool m_facet_isSet;
    bool m_facet_isValid;

    bool m_indexed;
    bool m_indexed_isSet;
    bool m_indexed_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_owner_type;
    bool m_owner_type_isSet;
    bool m_owner_type_isValid;

    bool m_stored;
    bool m_stored_isSet;
    bool m_stored_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchSchemaValue)

#endif // OAISearchSchemaValue_H
