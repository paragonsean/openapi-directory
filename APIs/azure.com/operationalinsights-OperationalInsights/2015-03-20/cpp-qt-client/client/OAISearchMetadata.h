/**
 * Azure Log Analytics
 * Azure Log Analytics API reference.
 *
 * The version of the OpenAPI document: 2015-03-20
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchMetadata.h
 *
 * Metadata for search results.
 */

#ifndef OAISearchMetadata_H
#define OAISearchMetadata_H

#include <QJsonObject>

#include "OAICoreSummary.h"
#include "OAISearchMetadataSchema.h"
#include "OAISearchSort.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICoreSummary;
class OAISearchMetadataSchema;
class OAISearchSort;

class OAISearchMetadata : public OAIObject {
public:
    OAISearchMetadata();
    OAISearchMetadata(QString json);
    ~OAISearchMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAggregatedGroupingFields() const;
    void setAggregatedGroupingFields(const QString &aggregated_grouping_fields);
    bool is_aggregated_grouping_fields_Set() const;
    bool is_aggregated_grouping_fields_Valid() const;

    QString getAggregatedValueField() const;
    void setAggregatedValueField(const QString &aggregated_value_field);
    bool is_aggregated_value_field_Set() const;
    bool is_aggregated_value_field_Valid() const;

    QList<OAICoreSummary> getCoreSummaries() const;
    void setCoreSummaries(const QList<OAICoreSummary> &core_summaries);
    bool is_core_summaries_Set() const;
    bool is_core_summaries_Valid() const;

    QString getETag() const;
    void setETag(const QString &e_tag);
    bool is_e_tag_Set() const;
    bool is_e_tag_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    qint64 getMax() const;
    void setMax(const qint64 &max);
    bool is_max_Set() const;
    bool is_max_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    qint64 getRequestTime() const;
    void setRequestTime(const qint64 &request_time);
    bool is_request_time_Set() const;
    bool is_request_time_Valid() const;

    QString getResultType() const;
    void setResultType(const QString &result_type);
    bool is_result_type_Set() const;
    bool is_result_type_Valid() const;

    OAISearchMetadataSchema getSchema() const;
    void setSchema(const OAISearchMetadataSchema &schema);
    bool is_schema_Set() const;
    bool is_schema_Valid() const;

    QList<OAISearchSort> getSort() const;
    void setSort(const QList<OAISearchSort> &sort);
    bool is_sort_Set() const;
    bool is_sort_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint64 getSum() const;
    void setSum(const qint64 &sum);
    bool is_sum_Set() const;
    bool is_sum_Valid() const;

    qint64 getTop() const;
    void setTop(const qint64 &top);
    bool is_top_Set() const;
    bool is_top_Valid() const;

    qint64 getTotal() const;
    void setTotal(const qint64 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_aggregated_grouping_fields;
    bool m_aggregated_grouping_fields_isSet;
    bool m_aggregated_grouping_fields_isValid;

    QString m_aggregated_value_field;
    bool m_aggregated_value_field_isSet;
    bool m_aggregated_value_field_isValid;

    QList<OAICoreSummary> m_core_summaries;
    bool m_core_summaries_isSet;
    bool m_core_summaries_isValid;

    QString m_e_tag;
    bool m_e_tag_isSet;
    bool m_e_tag_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    qint64 m_max;
    bool m_max_isSet;
    bool m_max_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    qint64 m_request_time;
    bool m_request_time_isSet;
    bool m_request_time_isValid;

    QString m_result_type;
    bool m_result_type_isSet;
    bool m_result_type_isValid;

    OAISearchMetadataSchema m_schema;
    bool m_schema_isSet;
    bool m_schema_isValid;

    QList<OAISearchSort> m_sort;
    bool m_sort_isSet;
    bool m_sort_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint64 m_sum;
    bool m_sum_isSet;
    bool m_sum_isValid;

    qint64 m_top;
    bool m_top_isSet;
    bool m_top_isValid;

    qint64 m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchMetadata)

#endif // OAISearchMetadata_H
