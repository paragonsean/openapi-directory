# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataSourceKind(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AZUREACTIVITYLOG = 'AzureActivityLog'
    CHANGETRACKINGPATH = 'ChangeTrackingPath'
    CHANGETRACKINGDEFAULTPATH = 'ChangeTrackingDefaultPath'
    CHANGETRACKINGDEFAULTREGISTRY = 'ChangeTrackingDefaultRegistry'
    CHANGETRACKINGCUSTOMREGISTRY = 'ChangeTrackingCustomRegistry'
    CUSTOMLOG = 'CustomLog'
    CUSTOMLOGCOLLECTION = 'CustomLogCollection'
    GENERICDATASOURCE = 'GenericDataSource'
    IISLOGS = 'IISLogs'
    LINUXPERFORMANCEOBJECT = 'LinuxPerformanceObject'
    LINUXPERFORMANCECOLLECTION = 'LinuxPerformanceCollection'
    LINUXSYSLOG = 'LinuxSyslog'
    LINUXSYSLOGCOLLECTION = 'LinuxSyslogCollection'
    WINDOWSEVENT = 'WindowsEvent'
    WINDOWSPERFORMANCECOUNTER = 'WindowsPerformanceCounter'

    def __init__(self):
        """DataSourceKind - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataSourceKind':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataSourceKind of this DataSourceKind.
        """
        return util.deserialize_model(dikt, cls)
