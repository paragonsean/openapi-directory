/**
 * Azure Log Analytics
 * Azure Log Analytics API reference
 *
 * The version of the OpenAPI document: 2015-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataSourceFilter.h
 *
 * DataSource filter. Right now, only filter by kind is supported.
 */

#ifndef OAIDataSourceFilter_H
#define OAIDataSourceFilter_H

#include <QJsonObject>

#include "OAIDataSourceKind.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataSourceFilter : public OAIObject {
public:
    OAIDataSourceFilter();
    OAIDataSourceFilter(QString json);
    ~OAIDataSourceFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDataSourceKind getKind() const;
    void setKind(const OAIDataSourceKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDataSourceKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataSourceFilter)

#endif // OAIDataSourceFilter_H
