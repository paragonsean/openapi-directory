/**
 * Azure Log Analytics
 * Azure Log Analytics API reference
 *
 * The version of the OpenAPI document: 2015-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManagementGroupProperties.h
 *
 * Management group properties.
 */

#ifndef OAIManagementGroupProperties_H
#define OAIManagementGroupProperties_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIManagementGroupProperties : public OAIObject {
public:
    OAIManagementGroupProperties();
    OAIManagementGroupProperties(QString json);
    ~OAIManagementGroupProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QDateTime getDataReceived() const;
    void setDataReceived(const QDateTime &data_received);
    bool is_data_received_Set() const;
    bool is_data_received_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsGateway() const;
    void setIsGateway(const bool &is_gateway);
    bool is_is_gateway_Set() const;
    bool is_is_gateway_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getServerCount() const;
    void setServerCount(const qint32 &server_count);
    bool is_server_count_Set() const;
    bool is_server_count_Valid() const;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QDateTime m_data_received;
    bool m_data_received_isSet;
    bool m_data_received_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_gateway;
    bool m_is_gateway_isSet;
    bool m_is_gateway_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_server_count;
    bool m_server_count_isSet;
    bool m_server_count_isValid;

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManagementGroupProperties)

#endif // OAIManagementGroupProperties_H
