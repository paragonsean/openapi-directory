/**
 * Azure Log Analytics
 * Azure Log Analytics API reference
 *
 * The version of the OpenAPI document: 2015-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Sku from './Sku';

/**
 * The WorkspaceProperties model module.
 * @module model/WorkspaceProperties
 * @version 2015-11-01-preview
 */
class WorkspaceProperties {
    /**
     * Constructs a new <code>WorkspaceProperties</code>.
     * Workspace properties.
     * @alias module:model/WorkspaceProperties
     */
    constructor() { 
        
        WorkspaceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkspaceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkspaceProperties} obj Optional instance to populate.
     * @return {module:model/WorkspaceProperties} The populated <code>WorkspaceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkspaceProperties();

            if (data.hasOwnProperty('customerId')) {
                obj['customerId'] = ApiClient.convertToType(data['customerId'], 'String');
            }
            if (data.hasOwnProperty('portalUrl')) {
                obj['portalUrl'] = ApiClient.convertToType(data['portalUrl'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('retentionInDays')) {
                obj['retentionInDays'] = ApiClient.convertToType(data['retentionInDays'], 'Number');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = Sku.constructFromObject(data['sku']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkspaceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkspaceProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customerId'] && !(typeof data['customerId'] === 'string' || data['customerId'] instanceof String)) {
            throw new Error("Expected the field `customerId` to be a primitive type in the JSON string but got " + data['customerId']);
        }
        // ensure the json data is a string
        if (data['portalUrl'] && !(typeof data['portalUrl'] === 'string' || data['portalUrl'] instanceof String)) {
            throw new Error("Expected the field `portalUrl` to be a primitive type in the JSON string but got " + data['portalUrl']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `sku`
        if (data['sku']) { // data not null
          Sku.validateJSON(data['sku']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }

        return true;
    }


}



/**
 * This is a read-only property. Represents the ID associated with the workspace.
 * @member {String} customerId
 */
WorkspaceProperties.prototype['customerId'] = undefined;

/**
 * This is a legacy property and is not used anymore. Kept here for backward compatibility.
 * @member {String} portalUrl
 */
WorkspaceProperties.prototype['portalUrl'] = undefined;

/**
 * The provisioning state of the workspace.
 * @member {module:model/WorkspaceProperties.ProvisioningStateEnum} provisioningState
 */
WorkspaceProperties.prototype['provisioningState'] = undefined;

/**
 * The workspace data retention in days. -1 means Unlimited retention for the Unlimited Sku. 730 days is the maximum allowed for all other Skus. 
 * @member {Number} retentionInDays
 */
WorkspaceProperties.prototype['retentionInDays'] = undefined;

/**
 * @member {module:model/Sku} sku
 */
WorkspaceProperties.prototype['sku'] = undefined;

/**
 * This is a read-only legacy property. It is always set to 'Azure' by the service. Kept here for backward compatibility.
 * @member {String} source
 */
WorkspaceProperties.prototype['source'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
WorkspaceProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "ProvisioningAccount"
     * @const
     */
    "ProvisioningAccount": "ProvisioningAccount"
};



export default WorkspaceProperties;

