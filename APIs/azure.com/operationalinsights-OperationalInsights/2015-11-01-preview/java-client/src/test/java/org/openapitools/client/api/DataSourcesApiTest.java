/*
 * Azure Log Analytics
 * Azure Log Analytics API reference
 *
 * The version of the OpenAPI document: 2015-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataSource;
import org.openapitools.client.model.DataSourceListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataSourcesApi
 */
@Disabled
public class DataSourcesApiTest {

    private final DataSourcesApi api = new DataSourcesApi();

    /**
     * Create or update a data source.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataSourcesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String workspaceName = null;
        String dataSourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        DataSource parameters = null;
        DataSource response = api.dataSourcesCreateOrUpdate(resourceGroupName, workspaceName, dataSourceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a data source instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataSourcesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String workspaceName = null;
        String dataSourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.dataSourcesDelete(resourceGroupName, workspaceName, dataSourceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a datasource instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataSourcesGetTest() throws ApiException {
        String resourceGroupName = null;
        String workspaceName = null;
        String dataSourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        DataSource response = api.dataSourcesGet(resourceGroupName, workspaceName, dataSourceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the first page of data source instances in a workspace with the link to the next page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataSourcesListByWorkspaceTest() throws ApiException {
        String resourceGroupName = null;
        String workspaceName = null;
        String $filter = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $skiptoken = null;
        DataSourceListResult response = api.dataSourcesListByWorkspace(resourceGroupName, workspaceName, $filter, apiVersion, subscriptionId, $skiptoken);
        // TODO: test validations
    }

}
