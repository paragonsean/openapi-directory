/**
 * Azure Log Analytics
 * Azure Log Analytics API reference
 *
 * The version of the OpenAPI document: 2019-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DataExport from './model/DataExport';
import DataExportListResult from './model/DataExportListResult';
import DataExportProperties from './model/DataExportProperties';
import Destination from './model/Destination';
import DestinationMetaData from './model/DestinationMetaData';
import ErrorDetails from './model/ErrorDetails';
import ErrorResponse from './model/ErrorResponse';
import ProxyResource from './model/ProxyResource';
import DataExportApi from './api/DataExportApi';


/**
* Azure Log Analytics API reference.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AzureLogAnalytics = require('index'); // See note below*.
* var xxxSvc = new AzureLogAnalytics.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AzureLogAnalytics.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AzureLogAnalytics.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AzureLogAnalytics.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-08-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DataExport model constructor.
     * @property {module:model/DataExport}
     */
    DataExport,

    /**
     * The DataExportListResult model constructor.
     * @property {module:model/DataExportListResult}
     */
    DataExportListResult,

    /**
     * The DataExportProperties model constructor.
     * @property {module:model/DataExportProperties}
     */
    DataExportProperties,

    /**
     * The Destination model constructor.
     * @property {module:model/Destination}
     */
    Destination,

    /**
     * The DestinationMetaData model constructor.
     * @property {module:model/DestinationMetaData}
     */
    DestinationMetaData,

    /**
     * The ErrorDetails model constructor.
     * @property {module:model/ErrorDetails}
     */
    ErrorDetails,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ProxyResource model constructor.
     * @property {module:model/ProxyResource}
     */
    ProxyResource,

    /**
    * The DataExportApi service constructor.
    * @property {module:api/DataExportApi}
    */
    DataExportApi
};
