# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinationMetaData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_hub_name: str=None):
        """DestinationMetaData - a model defined in OpenAPI

        :param event_hub_name: The event_hub_name of this DestinationMetaData.
        """
        self.openapi_types = {
            'event_hub_name': str
        }

        self.attribute_map = {
            'event_hub_name': 'eventHubName'
        }

        self._event_hub_name = event_hub_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinationMetaData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DestinationMetaData of this DestinationMetaData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_hub_name(self):
        """Gets the event_hub_name of this DestinationMetaData.

        Optional. Allows to define an Event Hub name. Not applicable when destination is Storage Account.

        :return: The event_hub_name of this DestinationMetaData.
        :rtype: str
        """
        return self._event_hub_name

    @event_hub_name.setter
    def event_hub_name(self, event_hub_name):
        """Sets the event_hub_name of this DestinationMetaData.

        Optional. Allows to define an Event Hub name. Not applicable when destination is Storage Account.

        :param event_hub_name: The event_hub_name of this DestinationMetaData.
        :type event_hub_name: str
        """

        self._event_hub_name = event_hub_name
