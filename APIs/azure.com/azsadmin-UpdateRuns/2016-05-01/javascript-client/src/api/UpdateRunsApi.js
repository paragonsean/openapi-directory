/**
 * UpdateAdminClient
 * Update run operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import UpdateRun from '../model/UpdateRun';
import UpdateRunList from '../model/UpdateRunList';

/**
* UpdateRuns service.
* @module api/UpdateRunsApi
* @version 2016-05-01
*/
export default class UpdateRunsApi {

    /**
    * Constructs a new UpdateRunsApi. 
    * @alias module:api/UpdateRunsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the updateRunsGet operation.
     * @callback module:api/UpdateRunsApi~updateRunsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateRun} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an instance of update run using the ID.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.  The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Resource group name.
     * @param {String} updateLocation The name of the update location.
     * @param {String} updateName Name of the update.
     * @param {String} runName Update run identifier.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/UpdateRunsApi~updateRunsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateRun}
     */
    updateRunsGet(subscriptionId, resourceGroupName, updateLocation, updateName, runName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling updateRunsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling updateRunsGet");
      }
      // verify the required parameter 'updateLocation' is set
      if (updateLocation === undefined || updateLocation === null) {
        throw new Error("Missing the required parameter 'updateLocation' when calling updateRunsGet");
      }
      // verify the required parameter 'updateName' is set
      if (updateName === undefined || updateName === null) {
        throw new Error("Missing the required parameter 'updateName' when calling updateRunsGet");
      }
      // verify the required parameter 'runName' is set
      if (runName === undefined || runName === null) {
        throw new Error("Missing the required parameter 'runName' when calling updateRunsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling updateRunsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'updateLocation': updateLocation,
        'updateName': updateName,
        'runName': runName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UpdateRun;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Update.Admin/updateLocations/{updateLocation}/updates/{updateName}/updateRuns/{runName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateRunsGetTopLevel operation.
     * @callback module:api/UpdateRunsApi~updateRunsGetTopLevelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateRun} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an instance of update run using the ID.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.  The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Resource group name.
     * @param {String} updateLocation The name of the update location.
     * @param {String} runName Update run identifier.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/UpdateRunsApi~updateRunsGetTopLevelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateRun}
     */
    updateRunsGetTopLevel(subscriptionId, resourceGroupName, updateLocation, runName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling updateRunsGetTopLevel");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling updateRunsGetTopLevel");
      }
      // verify the required parameter 'updateLocation' is set
      if (updateLocation === undefined || updateLocation === null) {
        throw new Error("Missing the required parameter 'updateLocation' when calling updateRunsGetTopLevel");
      }
      // verify the required parameter 'runName' is set
      if (runName === undefined || runName === null) {
        throw new Error("Missing the required parameter 'runName' when calling updateRunsGetTopLevel");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling updateRunsGetTopLevel");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'updateLocation': updateLocation,
        'runName': runName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UpdateRun;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Update.Admin/updateLocations/{updateLocation}/updateRuns/{runName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateRunsList operation.
     * @callback module:api/UpdateRunsApi~updateRunsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateRunList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of update runs.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.  The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Resource group name.
     * @param {String} updateLocation The name of the update location.
     * @param {String} updateName Name of the update.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/UpdateRunsApi~updateRunsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateRunList}
     */
    updateRunsList(subscriptionId, resourceGroupName, updateLocation, updateName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling updateRunsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling updateRunsList");
      }
      // verify the required parameter 'updateLocation' is set
      if (updateLocation === undefined || updateLocation === null) {
        throw new Error("Missing the required parameter 'updateLocation' when calling updateRunsList");
      }
      // verify the required parameter 'updateName' is set
      if (updateName === undefined || updateName === null) {
        throw new Error("Missing the required parameter 'updateName' when calling updateRunsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling updateRunsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'updateLocation': updateLocation,
        'updateName': updateName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UpdateRunList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Update.Admin/updateLocations/{updateLocation}/updates/{updateName}/updateRuns', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateRunsListTopLevel operation.
     * @callback module:api/UpdateRunsApi~updateRunsListTopLevelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateRunList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of update runs.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.  The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Resource group name.
     * @param {String} updateLocation The name of the update location.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/UpdateRunsApi~updateRunsListTopLevelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateRunList}
     */
    updateRunsListTopLevel(subscriptionId, resourceGroupName, updateLocation, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling updateRunsListTopLevel");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling updateRunsListTopLevel");
      }
      // verify the required parameter 'updateLocation' is set
      if (updateLocation === undefined || updateLocation === null) {
        throw new Error("Missing the required parameter 'updateLocation' when calling updateRunsListTopLevel");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling updateRunsListTopLevel");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'updateLocation': updateLocation
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UpdateRunList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Update.Admin/updateLocations/{updateLocation}/updateRuns', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateRunsRerun operation.
     * @callback module:api/UpdateRunsApi~updateRunsRerunCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resume a failed update.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.  The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Resource group name.
     * @param {String} updateLocation The name of the update location.
     * @param {String} updateName Name of the update.
     * @param {String} runName Update run identifier.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/UpdateRunsApi~updateRunsRerunCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateRunsRerun(subscriptionId, resourceGroupName, updateLocation, updateName, runName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling updateRunsRerun");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling updateRunsRerun");
      }
      // verify the required parameter 'updateLocation' is set
      if (updateLocation === undefined || updateLocation === null) {
        throw new Error("Missing the required parameter 'updateLocation' when calling updateRunsRerun");
      }
      // verify the required parameter 'updateName' is set
      if (updateName === undefined || updateName === null) {
        throw new Error("Missing the required parameter 'updateName' when calling updateRunsRerun");
      }
      // verify the required parameter 'runName' is set
      if (runName === undefined || runName === null) {
        throw new Error("Missing the required parameter 'runName' when calling updateRunsRerun");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling updateRunsRerun");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'updateLocation': updateLocation,
        'updateName': updateName,
        'runName': runName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Update.Admin/updateLocations/{updateLocation}/updates/{updateName}/updateRuns/{runName}/rerun', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
