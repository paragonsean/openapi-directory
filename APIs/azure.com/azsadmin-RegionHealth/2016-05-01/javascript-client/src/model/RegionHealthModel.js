/**
 * InfrastructureInsightsManagementClient
 * Region health operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RegionHealthModelAlertSummary from './RegionHealthModelAlertSummary';
import RegionHealthModelUsageMetricsInner from './RegionHealthModelUsageMetricsInner';

/**
 * The RegionHealthModel model module.
 * @module model/RegionHealthModel
 * @version 2016-05-01
 */
class RegionHealthModel {
    /**
     * Constructs a new <code>RegionHealthModel</code>.
     * Contains information related to the health of a region.
     * @alias module:model/RegionHealthModel
     */
    constructor() { 
        
        RegionHealthModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RegionHealthModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegionHealthModel} obj Optional instance to populate.
     * @return {module:model/RegionHealthModel} The populated <code>RegionHealthModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegionHealthModel();

            if (data.hasOwnProperty('alertSummary')) {
                obj['alertSummary'] = RegionHealthModelAlertSummary.constructFromObject(data['alertSummary']);
            }
            if (data.hasOwnProperty('usageMetrics')) {
                obj['usageMetrics'] = ApiClient.convertToType(data['usageMetrics'], [RegionHealthModelUsageMetricsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegionHealthModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegionHealthModel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `alertSummary`
        if (data['alertSummary']) { // data not null
          RegionHealthModelAlertSummary.validateJSON(data['alertSummary']);
        }
        if (data['usageMetrics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['usageMetrics'])) {
                throw new Error("Expected the field `usageMetrics` to be an array in the JSON data but got " + data['usageMetrics']);
            }
            // validate the optional field `usageMetrics` (array)
            for (const item of data['usageMetrics']) {
                RegionHealthModelUsageMetricsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/RegionHealthModelAlertSummary} alertSummary
 */
RegionHealthModel.prototype['alertSummary'] = undefined;

/**
 * List of usage metrics for the region.
 * @member {Array.<module:model/RegionHealthModelUsageMetricsInner>} usageMetrics
 */
RegionHealthModel.prototype['usageMetrics'] = undefined;






export default RegionHealthModel;

