/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2018-09-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworkProfile from './NetworkProfile';
import OpenShiftManagedClusterAgentPoolProfile from './OpenShiftManagedClusterAgentPoolProfile';
import OpenShiftManagedClusterAuthProfile from './OpenShiftManagedClusterAuthProfile';
import OpenShiftManagedClusterMasterPoolProfile from './OpenShiftManagedClusterMasterPoolProfile';
import OpenShiftRouterProfile from './OpenShiftRouterProfile';

/**
 * The OpenShiftManagedClusterProperties model module.
 * @module model/OpenShiftManagedClusterProperties
 * @version 2018-09-30-preview
 */
class OpenShiftManagedClusterProperties {
    /**
     * Constructs a new <code>OpenShiftManagedClusterProperties</code>.
     * Properties of the OpenShift managed cluster.
     * @alias module:model/OpenShiftManagedClusterProperties
     * @param openShiftVersion {String} Version of OpenShift specified when creating the cluster.
     */
    constructor(openShiftVersion) { 
        
        OpenShiftManagedClusterProperties.initialize(this, openShiftVersion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, openShiftVersion) { 
        obj['openShiftVersion'] = openShiftVersion;
    }

    /**
     * Constructs a <code>OpenShiftManagedClusterProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OpenShiftManagedClusterProperties} obj Optional instance to populate.
     * @return {module:model/OpenShiftManagedClusterProperties} The populated <code>OpenShiftManagedClusterProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OpenShiftManagedClusterProperties();

            if (data.hasOwnProperty('agentPoolProfiles')) {
                obj['agentPoolProfiles'] = ApiClient.convertToType(data['agentPoolProfiles'], [OpenShiftManagedClusterAgentPoolProfile]);
            }
            if (data.hasOwnProperty('authProfile')) {
                obj['authProfile'] = OpenShiftManagedClusterAuthProfile.constructFromObject(data['authProfile']);
            }
            if (data.hasOwnProperty('fqdn')) {
                obj['fqdn'] = ApiClient.convertToType(data['fqdn'], 'String');
            }
            if (data.hasOwnProperty('masterPoolProfile')) {
                obj['masterPoolProfile'] = OpenShiftManagedClusterMasterPoolProfile.constructFromObject(data['masterPoolProfile']);
            }
            if (data.hasOwnProperty('networkProfile')) {
                obj['networkProfile'] = NetworkProfile.constructFromObject(data['networkProfile']);
            }
            if (data.hasOwnProperty('openShiftVersion')) {
                obj['openShiftVersion'] = ApiClient.convertToType(data['openShiftVersion'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('publicHostname')) {
                obj['publicHostname'] = ApiClient.convertToType(data['publicHostname'], 'String');
            }
            if (data.hasOwnProperty('routerProfiles')) {
                obj['routerProfiles'] = ApiClient.convertToType(data['routerProfiles'], [OpenShiftRouterProfile]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OpenShiftManagedClusterProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OpenShiftManagedClusterProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OpenShiftManagedClusterProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['agentPoolProfiles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['agentPoolProfiles'])) {
                throw new Error("Expected the field `agentPoolProfiles` to be an array in the JSON data but got " + data['agentPoolProfiles']);
            }
            // validate the optional field `agentPoolProfiles` (array)
            for (const item of data['agentPoolProfiles']) {
                OpenShiftManagedClusterAgentPoolProfile.validateJSON(item);
            };
        }
        // validate the optional field `authProfile`
        if (data['authProfile']) { // data not null
          OpenShiftManagedClusterAuthProfile.validateJSON(data['authProfile']);
        }
        // ensure the json data is a string
        if (data['fqdn'] && !(typeof data['fqdn'] === 'string' || data['fqdn'] instanceof String)) {
            throw new Error("Expected the field `fqdn` to be a primitive type in the JSON string but got " + data['fqdn']);
        }
        // validate the optional field `masterPoolProfile`
        if (data['masterPoolProfile']) { // data not null
          OpenShiftManagedClusterMasterPoolProfile.validateJSON(data['masterPoolProfile']);
        }
        // validate the optional field `networkProfile`
        if (data['networkProfile']) { // data not null
          NetworkProfile.validateJSON(data['networkProfile']);
        }
        // ensure the json data is a string
        if (data['openShiftVersion'] && !(typeof data['openShiftVersion'] === 'string' || data['openShiftVersion'] instanceof String)) {
            throw new Error("Expected the field `openShiftVersion` to be a primitive type in the JSON string but got " + data['openShiftVersion']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['publicHostname'] && !(typeof data['publicHostname'] === 'string' || data['publicHostname'] instanceof String)) {
            throw new Error("Expected the field `publicHostname` to be a primitive type in the JSON string but got " + data['publicHostname']);
        }
        if (data['routerProfiles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['routerProfiles'])) {
                throw new Error("Expected the field `routerProfiles` to be an array in the JSON data but got " + data['routerProfiles']);
            }
            // validate the optional field `routerProfiles` (array)
            for (const item of data['routerProfiles']) {
                OpenShiftRouterProfile.validateJSON(item);
            };
        }

        return true;
    }


}

OpenShiftManagedClusterProperties.RequiredProperties = ["openShiftVersion"];

/**
 * Configuration of OpenShift cluster VMs.
 * @member {Array.<module:model/OpenShiftManagedClusterAgentPoolProfile>} agentPoolProfiles
 */
OpenShiftManagedClusterProperties.prototype['agentPoolProfiles'] = undefined;

/**
 * @member {module:model/OpenShiftManagedClusterAuthProfile} authProfile
 */
OpenShiftManagedClusterProperties.prototype['authProfile'] = undefined;

/**
 * User-specified FQDN for OpenShift API server loadbalancer internal hostname.
 * @member {String} fqdn
 */
OpenShiftManagedClusterProperties.prototype['fqdn'] = undefined;

/**
 * @member {module:model/OpenShiftManagedClusterMasterPoolProfile} masterPoolProfile
 */
OpenShiftManagedClusterProperties.prototype['masterPoolProfile'] = undefined;

/**
 * @member {module:model/NetworkProfile} networkProfile
 */
OpenShiftManagedClusterProperties.prototype['networkProfile'] = undefined;

/**
 * Version of OpenShift specified when creating the cluster.
 * @member {String} openShiftVersion
 */
OpenShiftManagedClusterProperties.prototype['openShiftVersion'] = undefined;

/**
 * The current deployment or provisioning state, which only appears in the response.
 * @member {String} provisioningState
 */
OpenShiftManagedClusterProperties.prototype['provisioningState'] = undefined;

/**
 * Optional user-specified FQDN for OpenShift API server.
 * @member {String} publicHostname
 */
OpenShiftManagedClusterProperties.prototype['publicHostname'] = undefined;

/**
 * Configuration for OpenShift router(s).
 * @member {Array.<module:model/OpenShiftRouterProfile>} routerProfiles
 */
OpenShiftManagedClusterProperties.prototype['routerProfiles'] = undefined;






export default OpenShiftManagedClusterProperties;

