# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.failover_policy import FailoverPolicy
from openapi_server import util


class FailoverPolicies(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failover_policies: List[FailoverPolicy]=None):
        """FailoverPolicies - a model defined in OpenAPI

        :param failover_policies: The failover_policies of this FailoverPolicies.
        """
        self.openapi_types = {
            'failover_policies': List[FailoverPolicy]
        }

        self.attribute_map = {
            'failover_policies': 'failoverPolicies'
        }

        self._failover_policies = failover_policies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailoverPolicies':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailoverPolicies of this FailoverPolicies.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failover_policies(self):
        """Gets the failover_policies of this FailoverPolicies.

        List of failover policies.

        :return: The failover_policies of this FailoverPolicies.
        :rtype: List[FailoverPolicy]
        """
        return self._failover_policies

    @failover_policies.setter
    def failover_policies(self, failover_policies):
        """Sets the failover_policies of this FailoverPolicies.

        List of failover policies.

        :param failover_policies: The failover_policies of this FailoverPolicies.
        :type failover_policies: List[FailoverPolicy]
        """
        if failover_policies is None:
            raise ValueError("Invalid value for `failover_policies`, must not be `None`")

        self._failover_policies = failover_policies
