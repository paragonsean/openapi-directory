/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2016-03-19
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPartitionUsage.h
 *
 * The partition level usage data for a usage request.
 */

#ifndef OAIPartitionUsage_H
#define OAIPartitionUsage_H

#include <QJsonObject>

#include "OAIMetricName.h"
#include "OAIUnitType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMetricName;

class OAIPartitionUsage : public OAIObject {
public:
    OAIPartitionUsage();
    OAIPartitionUsage(QString json);
    ~OAIPartitionUsage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPartitionId() const;
    void setPartitionId(const QString &partition_id);
    bool is_partition_id_Set() const;
    bool is_partition_id_Valid() const;

    QString getPartitionKeyRangeId() const;
    void setPartitionKeyRangeId(const QString &partition_key_range_id);
    bool is_partition_key_range_id_Set() const;
    bool is_partition_key_range_id_Valid() const;

    qint64 getCurrentValue() const;
    void setCurrentValue(const qint64 &current_value);
    bool is_current_value_Set() const;
    bool is_current_value_Valid() const;

    qint64 getLimit() const;
    void setLimit(const qint64 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    OAIMetricName getName() const;
    void setName(const OAIMetricName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getQuotaPeriod() const;
    void setQuotaPeriod(const QString &quota_period);
    bool is_quota_period_Set() const;
    bool is_quota_period_Valid() const;

    OAIUnitType getUnit() const;
    void setUnit(const OAIUnitType &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_partition_id;
    bool m_partition_id_isSet;
    bool m_partition_id_isValid;

    QString m_partition_key_range_id;
    bool m_partition_key_range_id_isSet;
    bool m_partition_key_range_id_isValid;

    qint64 m_current_value;
    bool m_current_value_isSet;
    bool m_current_value_isValid;

    qint64 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    OAIMetricName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_quota_period;
    bool m_quota_period_isSet;
    bool m_quota_period_isValid;

    OAIUnitType m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPartitionUsage)

#endif // OAIPartitionUsage_H
