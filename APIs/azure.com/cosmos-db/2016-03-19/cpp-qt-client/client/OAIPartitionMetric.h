/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2016-03-19
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPartitionMetric.h
 *
 * The metric values for a single partition.
 */

#ifndef OAIPartitionMetric_H
#define OAIPartitionMetric_H

#include <QJsonObject>

#include "OAIMetricName.h"
#include "OAIMetricValue.h"
#include "OAIUnitType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMetricValue;
class OAIMetricName;

class OAIPartitionMetric : public OAIObject {
public:
    OAIPartitionMetric();
    OAIPartitionMetric(QString json);
    ~OAIPartitionMetric() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPartitionId() const;
    void setPartitionId(const QString &partition_id);
    bool is_partition_id_Set() const;
    bool is_partition_id_Valid() const;

    QString getPartitionKeyRangeId() const;
    void setPartitionKeyRangeId(const QString &partition_key_range_id);
    bool is_partition_key_range_id_Set() const;
    bool is_partition_key_range_id_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QList<OAIMetricValue> getMetricValues() const;
    void setMetricValues(const QList<OAIMetricValue> &metric_values);
    bool is_metric_values_Set() const;
    bool is_metric_values_Valid() const;

    OAIMetricName getName() const;
    void setName(const OAIMetricName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getTimeGrain() const;
    void setTimeGrain(const QString &time_grain);
    bool is_time_grain_Set() const;
    bool is_time_grain_Valid() const;

    OAIUnitType getUnit() const;
    void setUnit(const OAIUnitType &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_partition_id;
    bool m_partition_id_isSet;
    bool m_partition_id_isValid;

    QString m_partition_key_range_id;
    bool m_partition_key_range_id_isSet;
    bool m_partition_key_range_id_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QList<OAIMetricValue> m_metric_values;
    bool m_metric_values_isSet;
    bool m_metric_values_isValid;

    OAIMetricName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_time_grain;
    bool m_time_grain_isSet;
    bool m_time_grain_isValid;

    OAIUnitType m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPartitionMetric)

#endif // OAIPartitionMetric_H
