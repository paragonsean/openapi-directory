/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2016-03-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FailoverPolicy model module.
 * @module model/FailoverPolicy
 * @version 2016-03-19
 */
class FailoverPolicy {
    /**
     * Constructs a new <code>FailoverPolicy</code>.
     * The failover policy for a given region of a database account.
     * @alias module:model/FailoverPolicy
     */
    constructor() { 
        
        FailoverPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FailoverPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FailoverPolicy} obj Optional instance to populate.
     * @return {module:model/FailoverPolicy} The populated <code>FailoverPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FailoverPolicy();

            if (data.hasOwnProperty('failoverPriority')) {
                obj['failoverPriority'] = ApiClient.convertToType(data['failoverPriority'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('locationName')) {
                obj['locationName'] = ApiClient.convertToType(data['locationName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FailoverPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FailoverPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['locationName'] && !(typeof data['locationName'] === 'string' || data['locationName'] instanceof String)) {
            throw new Error("Expected the field `locationName` to be a primitive type in the JSON string but got " + data['locationName']);
        }

        return true;
    }


}



/**
 * The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
 * @member {Number} failoverPriority
 */
FailoverPolicy.prototype['failoverPriority'] = undefined;

/**
 * The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.
 * @member {String} id
 */
FailoverPolicy.prototype['id'] = undefined;

/**
 * The name of the region in which the database account exists.
 * @member {String} locationName
 */
FailoverPolicy.prototype['locationName'] = undefined;






export default FailoverPolicy;

