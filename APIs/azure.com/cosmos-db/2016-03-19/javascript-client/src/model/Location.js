/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2016-03-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Location model module.
 * @module model/Location
 * @version 2016-03-19
 */
class Location {
    /**
     * Constructs a new <code>Location</code>.
     * A region in which the Azure Cosmos DB database account is deployed.
     * @alias module:model/Location
     */
    constructor() { 
        
        Location.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Location</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Location} obj Optional instance to populate.
     * @return {module:model/Location} The populated <code>Location</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Location();

            if (data.hasOwnProperty('documentEndpoint')) {
                obj['documentEndpoint'] = ApiClient.convertToType(data['documentEndpoint'], 'String');
            }
            if (data.hasOwnProperty('failoverPriority')) {
                obj['failoverPriority'] = ApiClient.convertToType(data['failoverPriority'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('isZoneRedundant')) {
                obj['isZoneRedundant'] = ApiClient.convertToType(data['isZoneRedundant'], 'Boolean');
            }
            if (data.hasOwnProperty('locationName')) {
                obj['locationName'] = ApiClient.convertToType(data['locationName'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Location</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Location</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['documentEndpoint'] && !(typeof data['documentEndpoint'] === 'string' || data['documentEndpoint'] instanceof String)) {
            throw new Error("Expected the field `documentEndpoint` to be a primitive type in the JSON string but got " + data['documentEndpoint']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['locationName'] && !(typeof data['locationName'] === 'string' || data['locationName'] instanceof String)) {
            throw new Error("Expected the field `locationName` to be a primitive type in the JSON string but got " + data['locationName']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}



/**
 * The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
 * @member {String} documentEndpoint
 */
Location.prototype['documentEndpoint'] = undefined;

/**
 * The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
 * @member {Number} failoverPriority
 */
Location.prototype['failoverPriority'] = undefined;

/**
 * The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
 * @member {String} id
 */
Location.prototype['id'] = undefined;

/**
 * Flag to indicate whether or not this region is an AvailabilityZone region
 * @member {Boolean} isZoneRedundant
 */
Location.prototype['isZoneRedundant'] = undefined;

/**
 * The name of the region.
 * @member {String} locationName
 */
Location.prototype['locationName'] = undefined;

/**
 * The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation.
 * @member {String} provisioningState
 */
Location.prototype['provisioningState'] = undefined;






export default Location;

