/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2015-04-08
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetricName from './MetricName';
import UnitType from './UnitType';
import Usage from './Usage';

/**
 * The PartitionUsage model module.
 * @module model/PartitionUsage
 * @version 2015-04-08
 */
class PartitionUsage {
    /**
     * Constructs a new <code>PartitionUsage</code>.
     * The partition level usage data for a usage request.
     * @alias module:model/PartitionUsage
     * @implements module:model/Usage
     */
    constructor() { 
        Usage.initialize(this);
        PartitionUsage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PartitionUsage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PartitionUsage} obj Optional instance to populate.
     * @return {module:model/PartitionUsage} The populated <code>PartitionUsage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PartitionUsage();
            Usage.constructFromObject(data, obj);

            if (data.hasOwnProperty('partitionId')) {
                obj['partitionId'] = ApiClient.convertToType(data['partitionId'], 'String');
            }
            if (data.hasOwnProperty('partitionKeyRangeId')) {
                obj['partitionKeyRangeId'] = ApiClient.convertToType(data['partitionKeyRangeId'], 'String');
            }
            if (data.hasOwnProperty('currentValue')) {
                obj['currentValue'] = ApiClient.convertToType(data['currentValue'], 'Number');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = MetricName.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('quotaPeriod')) {
                obj['quotaPeriod'] = ApiClient.convertToType(data['quotaPeriod'], 'String');
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = UnitType.constructFromObject(data['unit']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PartitionUsage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PartitionUsage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['partitionId'] && !(typeof data['partitionId'] === 'string' || data['partitionId'] instanceof String)) {
            throw new Error("Expected the field `partitionId` to be a primitive type in the JSON string but got " + data['partitionId']);
        }
        // ensure the json data is a string
        if (data['partitionKeyRangeId'] && !(typeof data['partitionKeyRangeId'] === 'string' || data['partitionKeyRangeId'] instanceof String)) {
            throw new Error("Expected the field `partitionKeyRangeId` to be a primitive type in the JSON string but got " + data['partitionKeyRangeId']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          MetricName.validateJSON(data['name']);
        }
        // ensure the json data is a string
        if (data['quotaPeriod'] && !(typeof data['quotaPeriod'] === 'string' || data['quotaPeriod'] instanceof String)) {
            throw new Error("Expected the field `quotaPeriod` to be a primitive type in the JSON string but got " + data['quotaPeriod']);
        }

        return true;
    }


}



/**
 * The partition id (GUID identifier) of the usages.
 * @member {String} partitionId
 */
PartitionUsage.prototype['partitionId'] = undefined;

/**
 * The partition key range id (integer identifier) of the usages.
 * @member {String} partitionKeyRangeId
 */
PartitionUsage.prototype['partitionKeyRangeId'] = undefined;

/**
 * Current value for this metric
 * @member {Number} currentValue
 */
PartitionUsage.prototype['currentValue'] = undefined;

/**
 * Maximum value for this metric
 * @member {Number} limit
 */
PartitionUsage.prototype['limit'] = undefined;

/**
 * @member {module:model/MetricName} name
 */
PartitionUsage.prototype['name'] = undefined;

/**
 * The quota period used to summarize the usage values.
 * @member {String} quotaPeriod
 */
PartitionUsage.prototype['quotaPeriod'] = undefined;

/**
 * @member {module:model/UnitType} unit
 */
PartitionUsage.prototype['unit'] = undefined;


// Implement Usage interface:
/**
 * Current value for this metric
 * @member {Number} currentValue
 */
Usage.prototype['currentValue'] = undefined;
/**
 * Maximum value for this metric
 * @member {Number} limit
 */
Usage.prototype['limit'] = undefined;
/**
 * @member {module:model/MetricName} name
 */
Usage.prototype['name'] = undefined;
/**
 * The quota period used to summarize the usage values.
 * @member {String} quotaPeriod
 */
Usage.prototype['quotaPeriod'] = undefined;
/**
 * @member {module:model/UnitType} unit
 */
Usage.prototype['unit'] = undefined;




export default PartitionUsage;

