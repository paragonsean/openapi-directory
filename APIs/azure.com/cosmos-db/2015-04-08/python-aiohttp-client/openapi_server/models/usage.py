# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metric_name import MetricName
from openapi_server.models.unit_type import UnitType
from openapi_server import util


class Usage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_value: int=None, limit: int=None, name: MetricName=None, quota_period: str=None, unit: UnitType=None):
        """Usage - a model defined in OpenAPI

        :param current_value: The current_value of this Usage.
        :param limit: The limit of this Usage.
        :param name: The name of this Usage.
        :param quota_period: The quota_period of this Usage.
        :param unit: The unit of this Usage.
        """
        self.openapi_types = {
            'current_value': int,
            'limit': int,
            'name': MetricName,
            'quota_period': str,
            'unit': UnitType
        }

        self.attribute_map = {
            'current_value': 'currentValue',
            'limit': 'limit',
            'name': 'name',
            'quota_period': 'quotaPeriod',
            'unit': 'unit'
        }

        self._current_value = current_value
        self._limit = limit
        self._name = name
        self._quota_period = quota_period
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Usage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Usage of this Usage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_value(self):
        """Gets the current_value of this Usage.

        Current value for this metric

        :return: The current_value of this Usage.
        :rtype: int
        """
        return self._current_value

    @current_value.setter
    def current_value(self, current_value):
        """Sets the current_value of this Usage.

        Current value for this metric

        :param current_value: The current_value of this Usage.
        :type current_value: int
        """

        self._current_value = current_value

    @property
    def limit(self):
        """Gets the limit of this Usage.

        Maximum value for this metric

        :return: The limit of this Usage.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this Usage.

        Maximum value for this metric

        :param limit: The limit of this Usage.
        :type limit: int
        """

        self._limit = limit

    @property
    def name(self):
        """Gets the name of this Usage.


        :return: The name of this Usage.
        :rtype: MetricName
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Usage.


        :param name: The name of this Usage.
        :type name: MetricName
        """

        self._name = name

    @property
    def quota_period(self):
        """Gets the quota_period of this Usage.

        The quota period used to summarize the usage values.

        :return: The quota_period of this Usage.
        :rtype: str
        """
        return self._quota_period

    @quota_period.setter
    def quota_period(self, quota_period):
        """Sets the quota_period of this Usage.

        The quota period used to summarize the usage values.

        :param quota_period: The quota_period of this Usage.
        :type quota_period: str
        """

        self._quota_period = quota_period

    @property
    def unit(self):
        """Gets the unit of this Usage.


        :return: The unit of this Usage.
        :rtype: UnitType
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this Usage.


        :param unit: The unit of this Usage.
        :type unit: UnitType
        """

        self._unit = unit
