/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2015-04-08
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConsistencyPolicy.h
 *
 * The consistency policy for the Cosmos DB database account.
 */

#ifndef OAIConsistencyPolicy_H
#define OAIConsistencyPolicy_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConsistencyPolicy : public OAIObject {
public:
    OAIConsistencyPolicy();
    OAIConsistencyPolicy(QString json);
    ~OAIConsistencyPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDefaultConsistencyLevel() const;
    void setDefaultConsistencyLevel(const QString &default_consistency_level);
    bool is_default_consistency_level_Set() const;
    bool is_default_consistency_level_Valid() const;

    qint32 getMaxIntervalInSeconds() const;
    void setMaxIntervalInSeconds(const qint32 &max_interval_in_seconds);
    bool is_max_interval_in_seconds_Set() const;
    bool is_max_interval_in_seconds_Valid() const;

    qint64 getMaxStalenessPrefix() const;
    void setMaxStalenessPrefix(const qint64 &max_staleness_prefix);
    bool is_max_staleness_prefix_Set() const;
    bool is_max_staleness_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_default_consistency_level;
    bool m_default_consistency_level_isSet;
    bool m_default_consistency_level_isValid;

    qint32 m_max_interval_in_seconds;
    bool m_max_interval_in_seconds_isSet;
    bool m_max_interval_in_seconds_isValid;

    qint64 m_max_staleness_prefix;
    bool m_max_staleness_prefix_isSet;
    bool m_max_staleness_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConsistencyPolicy)

#endif // OAIConsistencyPolicy_H
