/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2016-03-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CassandraTableResource from './CassandraTableResource';

/**
 * The CassandraTableCreateUpdateProperties model module.
 * @module model/CassandraTableCreateUpdateProperties
 * @version 2016-03-31
 */
class CassandraTableCreateUpdateProperties {
    /**
     * Constructs a new <code>CassandraTableCreateUpdateProperties</code>.
     * Properties to create and update Azure Cosmos DB Cassandra table.
     * @alias module:model/CassandraTableCreateUpdateProperties
     * @param options {Object.<String, String>} CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"
     * @param resource {module:model/CassandraTableResource} 
     */
    constructor(options, resource) { 
        
        CassandraTableCreateUpdateProperties.initialize(this, options, resource);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, options, resource) { 
        obj['options'] = options;
        obj['resource'] = resource;
    }

    /**
     * Constructs a <code>CassandraTableCreateUpdateProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CassandraTableCreateUpdateProperties} obj Optional instance to populate.
     * @return {module:model/CassandraTableCreateUpdateProperties} The populated <code>CassandraTableCreateUpdateProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CassandraTableCreateUpdateProperties();

            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], {'String': 'String'});
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = CassandraTableResource.constructFromObject(data['resource']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CassandraTableCreateUpdateProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CassandraTableCreateUpdateProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CassandraTableCreateUpdateProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `resource`
        if (data['resource']) { // data not null
          CassandraTableResource.validateJSON(data['resource']);
        }

        return true;
    }


}

CassandraTableCreateUpdateProperties.RequiredProperties = ["options", "resource"];

/**
 * CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"
 * @member {Object.<String, String>} options
 */
CassandraTableCreateUpdateProperties.prototype['options'] = undefined;

/**
 * @member {module:model/CassandraTableResource} resource
 */
CassandraTableCreateUpdateProperties.prototype['resource'] = undefined;






export default CassandraTableCreateUpdateProperties;

