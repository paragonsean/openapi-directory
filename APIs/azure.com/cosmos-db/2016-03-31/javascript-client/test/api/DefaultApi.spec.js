/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2016-03-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CosmosDb);
  }
}(this, function(expect, CosmosDb) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CosmosDb.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('collectionListMetricDefinitions', function() {
      it('should call collectionListMetricDefinitions successfully', function(done) {
        //uncomment below and update the code to test collectionListMetricDefinitions
        //instance.collectionListMetricDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionListMetrics', function() {
      it('should call collectionListMetrics successfully', function(done) {
        //uncomment below and update the code to test collectionListMetrics
        //instance.collectionListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionListUsages', function() {
      it('should call collectionListUsages successfully', function(done) {
        //uncomment below and update the code to test collectionListUsages
        //instance.collectionListUsages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionPartitionListMetrics', function() {
      it('should call collectionPartitionListMetrics successfully', function(done) {
        //uncomment below and update the code to test collectionPartitionListMetrics
        //instance.collectionPartitionListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionPartitionListUsages', function() {
      it('should call collectionPartitionListUsages successfully', function(done) {
        //uncomment below and update the code to test collectionPartitionListUsages
        //instance.collectionPartitionListUsages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionPartitionRegionListMetrics', function() {
      it('should call collectionPartitionRegionListMetrics successfully', function(done) {
        //uncomment below and update the code to test collectionPartitionRegionListMetrics
        //instance.collectionPartitionRegionListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionRegionListMetrics', function() {
      it('should call collectionRegionListMetrics successfully', function(done) {
        //uncomment below and update the code to test collectionRegionListMetrics
        //instance.collectionRegionListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountRegionListMetrics', function() {
      it('should call databaseAccountRegionListMetrics successfully', function(done) {
        //uncomment below and update the code to test databaseAccountRegionListMetrics
        //instance.databaseAccountRegionListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCheckNameExists', function() {
      it('should call databaseAccountsCheckNameExists successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCheckNameExists
        //instance.databaseAccountsCheckNameExists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCreateOrUpdate', function() {
      it('should call databaseAccountsCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCreateOrUpdate
        //instance.databaseAccountsCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCreateUpdateCassandraKeyspace', function() {
      it('should call databaseAccountsCreateUpdateCassandraKeyspace successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCreateUpdateCassandraKeyspace
        //instance.databaseAccountsCreateUpdateCassandraKeyspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCreateUpdateCassandraTable', function() {
      it('should call databaseAccountsCreateUpdateCassandraTable successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCreateUpdateCassandraTable
        //instance.databaseAccountsCreateUpdateCassandraTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCreateUpdateGremlinDatabase', function() {
      it('should call databaseAccountsCreateUpdateGremlinDatabase successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCreateUpdateGremlinDatabase
        //instance.databaseAccountsCreateUpdateGremlinDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCreateUpdateGremlinGraph', function() {
      it('should call databaseAccountsCreateUpdateGremlinGraph successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCreateUpdateGremlinGraph
        //instance.databaseAccountsCreateUpdateGremlinGraph(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCreateUpdateMongoDBCollection', function() {
      it('should call databaseAccountsCreateUpdateMongoDBCollection successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCreateUpdateMongoDBCollection
        //instance.databaseAccountsCreateUpdateMongoDBCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCreateUpdateMongoDBDatabase', function() {
      it('should call databaseAccountsCreateUpdateMongoDBDatabase successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCreateUpdateMongoDBDatabase
        //instance.databaseAccountsCreateUpdateMongoDBDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCreateUpdateSqlContainer', function() {
      it('should call databaseAccountsCreateUpdateSqlContainer successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCreateUpdateSqlContainer
        //instance.databaseAccountsCreateUpdateSqlContainer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCreateUpdateSqlDatabase', function() {
      it('should call databaseAccountsCreateUpdateSqlDatabase successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCreateUpdateSqlDatabase
        //instance.databaseAccountsCreateUpdateSqlDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCreateUpdateTable', function() {
      it('should call databaseAccountsCreateUpdateTable successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCreateUpdateTable
        //instance.databaseAccountsCreateUpdateTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsDelete', function() {
      it('should call databaseAccountsDelete successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsDelete
        //instance.databaseAccountsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsDeleteCassandraKeyspace', function() {
      it('should call databaseAccountsDeleteCassandraKeyspace successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsDeleteCassandraKeyspace
        //instance.databaseAccountsDeleteCassandraKeyspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsDeleteCassandraTable', function() {
      it('should call databaseAccountsDeleteCassandraTable successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsDeleteCassandraTable
        //instance.databaseAccountsDeleteCassandraTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsDeleteGremlinDatabase', function() {
      it('should call databaseAccountsDeleteGremlinDatabase successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsDeleteGremlinDatabase
        //instance.databaseAccountsDeleteGremlinDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsDeleteGremlinGraph', function() {
      it('should call databaseAccountsDeleteGremlinGraph successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsDeleteGremlinGraph
        //instance.databaseAccountsDeleteGremlinGraph(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsDeleteMongoDBCollection', function() {
      it('should call databaseAccountsDeleteMongoDBCollection successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsDeleteMongoDBCollection
        //instance.databaseAccountsDeleteMongoDBCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsDeleteMongoDBDatabase', function() {
      it('should call databaseAccountsDeleteMongoDBDatabase successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsDeleteMongoDBDatabase
        //instance.databaseAccountsDeleteMongoDBDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsDeleteSqlContainer', function() {
      it('should call databaseAccountsDeleteSqlContainer successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsDeleteSqlContainer
        //instance.databaseAccountsDeleteSqlContainer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsDeleteSqlDatabase', function() {
      it('should call databaseAccountsDeleteSqlDatabase successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsDeleteSqlDatabase
        //instance.databaseAccountsDeleteSqlDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsDeleteTable', function() {
      it('should call databaseAccountsDeleteTable successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsDeleteTable
        //instance.databaseAccountsDeleteTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsFailoverPriorityChange', function() {
      it('should call databaseAccountsFailoverPriorityChange successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsFailoverPriorityChange
        //instance.databaseAccountsFailoverPriorityChange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGet', function() {
      it('should call databaseAccountsGet successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGet
        //instance.databaseAccountsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetCassandraKeyspace', function() {
      it('should call databaseAccountsGetCassandraKeyspace successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetCassandraKeyspace
        //instance.databaseAccountsGetCassandraKeyspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetCassandraKeyspaceThroughput', function() {
      it('should call databaseAccountsGetCassandraKeyspaceThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetCassandraKeyspaceThroughput
        //instance.databaseAccountsGetCassandraKeyspaceThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetCassandraTable', function() {
      it('should call databaseAccountsGetCassandraTable successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetCassandraTable
        //instance.databaseAccountsGetCassandraTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetCassandraTableThroughput', function() {
      it('should call databaseAccountsGetCassandraTableThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetCassandraTableThroughput
        //instance.databaseAccountsGetCassandraTableThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetGremlinDatabase', function() {
      it('should call databaseAccountsGetGremlinDatabase successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetGremlinDatabase
        //instance.databaseAccountsGetGremlinDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetGremlinDatabaseThroughput', function() {
      it('should call databaseAccountsGetGremlinDatabaseThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetGremlinDatabaseThroughput
        //instance.databaseAccountsGetGremlinDatabaseThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetGremlinGraph', function() {
      it('should call databaseAccountsGetGremlinGraph successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetGremlinGraph
        //instance.databaseAccountsGetGremlinGraph(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetGremlinGraphThroughput', function() {
      it('should call databaseAccountsGetGremlinGraphThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetGremlinGraphThroughput
        //instance.databaseAccountsGetGremlinGraphThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetMongoDBCollection', function() {
      it('should call databaseAccountsGetMongoDBCollection successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetMongoDBCollection
        //instance.databaseAccountsGetMongoDBCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetMongoDBCollectionThroughput', function() {
      it('should call databaseAccountsGetMongoDBCollectionThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetMongoDBCollectionThroughput
        //instance.databaseAccountsGetMongoDBCollectionThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetMongoDBDatabase', function() {
      it('should call databaseAccountsGetMongoDBDatabase successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetMongoDBDatabase
        //instance.databaseAccountsGetMongoDBDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetMongoDBDatabaseThroughput', function() {
      it('should call databaseAccountsGetMongoDBDatabaseThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetMongoDBDatabaseThroughput
        //instance.databaseAccountsGetMongoDBDatabaseThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetReadOnlyKeys', function() {
      it('should call databaseAccountsGetReadOnlyKeys successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetReadOnlyKeys
        //instance.databaseAccountsGetReadOnlyKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetSqlContainer', function() {
      it('should call databaseAccountsGetSqlContainer successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetSqlContainer
        //instance.databaseAccountsGetSqlContainer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetSqlContainerThroughput', function() {
      it('should call databaseAccountsGetSqlContainerThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetSqlContainerThroughput
        //instance.databaseAccountsGetSqlContainerThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetSqlDatabase', function() {
      it('should call databaseAccountsGetSqlDatabase successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetSqlDatabase
        //instance.databaseAccountsGetSqlDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetSqlDatabaseThroughput', function() {
      it('should call databaseAccountsGetSqlDatabaseThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetSqlDatabaseThroughput
        //instance.databaseAccountsGetSqlDatabaseThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetTable', function() {
      it('should call databaseAccountsGetTable successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetTable
        //instance.databaseAccountsGetTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetTableThroughput', function() {
      it('should call databaseAccountsGetTableThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetTableThroughput
        //instance.databaseAccountsGetTableThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsList', function() {
      it('should call databaseAccountsList successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsList
        //instance.databaseAccountsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListByResourceGroup', function() {
      it('should call databaseAccountsListByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListByResourceGroup
        //instance.databaseAccountsListByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListCassandraKeyspaces', function() {
      it('should call databaseAccountsListCassandraKeyspaces successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListCassandraKeyspaces
        //instance.databaseAccountsListCassandraKeyspaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListCassandraTables', function() {
      it('should call databaseAccountsListCassandraTables successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListCassandraTables
        //instance.databaseAccountsListCassandraTables(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListConnectionStrings', function() {
      it('should call databaseAccountsListConnectionStrings successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListConnectionStrings
        //instance.databaseAccountsListConnectionStrings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListGremlinDatabases', function() {
      it('should call databaseAccountsListGremlinDatabases successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListGremlinDatabases
        //instance.databaseAccountsListGremlinDatabases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListGremlinGraphs', function() {
      it('should call databaseAccountsListGremlinGraphs successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListGremlinGraphs
        //instance.databaseAccountsListGremlinGraphs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListKeys', function() {
      it('should call databaseAccountsListKeys successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListKeys
        //instance.databaseAccountsListKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListMetricDefinitions', function() {
      it('should call databaseAccountsListMetricDefinitions successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListMetricDefinitions
        //instance.databaseAccountsListMetricDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListMetrics', function() {
      it('should call databaseAccountsListMetrics successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListMetrics
        //instance.databaseAccountsListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListMongoDBCollections', function() {
      it('should call databaseAccountsListMongoDBCollections successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListMongoDBCollections
        //instance.databaseAccountsListMongoDBCollections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListMongoDBDatabases', function() {
      it('should call databaseAccountsListMongoDBDatabases successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListMongoDBDatabases
        //instance.databaseAccountsListMongoDBDatabases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListReadOnlyKeys', function() {
      it('should call databaseAccountsListReadOnlyKeys successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListReadOnlyKeys
        //instance.databaseAccountsListReadOnlyKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListSqlContainers', function() {
      it('should call databaseAccountsListSqlContainers successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListSqlContainers
        //instance.databaseAccountsListSqlContainers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListSqlDatabases', function() {
      it('should call databaseAccountsListSqlDatabases successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListSqlDatabases
        //instance.databaseAccountsListSqlDatabases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListTables', function() {
      it('should call databaseAccountsListTables successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListTables
        //instance.databaseAccountsListTables(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListUsages', function() {
      it('should call databaseAccountsListUsages successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListUsages
        //instance.databaseAccountsListUsages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsOfflineRegion', function() {
      it('should call databaseAccountsOfflineRegion successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsOfflineRegion
        //instance.databaseAccountsOfflineRegion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsOnlineRegion', function() {
      it('should call databaseAccountsOnlineRegion successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsOnlineRegion
        //instance.databaseAccountsOnlineRegion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsPatch', function() {
      it('should call databaseAccountsPatch successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsPatch
        //instance.databaseAccountsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsRegenerateKey', function() {
      it('should call databaseAccountsRegenerateKey successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsRegenerateKey
        //instance.databaseAccountsRegenerateKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsUpdateCassandraKeyspaceThroughput', function() {
      it('should call databaseAccountsUpdateCassandraKeyspaceThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsUpdateCassandraKeyspaceThroughput
        //instance.databaseAccountsUpdateCassandraKeyspaceThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsUpdateCassandraTableThroughput', function() {
      it('should call databaseAccountsUpdateCassandraTableThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsUpdateCassandraTableThroughput
        //instance.databaseAccountsUpdateCassandraTableThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsUpdateGremlinDatabaseThroughput', function() {
      it('should call databaseAccountsUpdateGremlinDatabaseThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsUpdateGremlinDatabaseThroughput
        //instance.databaseAccountsUpdateGremlinDatabaseThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsUpdateGremlinGraphThroughput', function() {
      it('should call databaseAccountsUpdateGremlinGraphThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsUpdateGremlinGraphThroughput
        //instance.databaseAccountsUpdateGremlinGraphThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsUpdateMongoDBCollectionThroughput', function() {
      it('should call databaseAccountsUpdateMongoDBCollectionThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsUpdateMongoDBCollectionThroughput
        //instance.databaseAccountsUpdateMongoDBCollectionThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsUpdateMongoDBDatabaseThroughput', function() {
      it('should call databaseAccountsUpdateMongoDBDatabaseThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsUpdateMongoDBDatabaseThroughput
        //instance.databaseAccountsUpdateMongoDBDatabaseThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsUpdateSqlContainerThroughput', function() {
      it('should call databaseAccountsUpdateSqlContainerThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsUpdateSqlContainerThroughput
        //instance.databaseAccountsUpdateSqlContainerThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsUpdateSqlDatabaseThroughput', function() {
      it('should call databaseAccountsUpdateSqlDatabaseThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsUpdateSqlDatabaseThroughput
        //instance.databaseAccountsUpdateSqlDatabaseThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsUpdateTableThroughput', function() {
      it('should call databaseAccountsUpdateTableThroughput successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsUpdateTableThroughput
        //instance.databaseAccountsUpdateTableThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseListMetricDefinitions', function() {
      it('should call databaseListMetricDefinitions successfully', function(done) {
        //uncomment below and update the code to test databaseListMetricDefinitions
        //instance.databaseListMetricDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseListMetrics', function() {
      it('should call databaseListMetrics successfully', function(done) {
        //uncomment below and update the code to test databaseListMetrics
        //instance.databaseListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseListUsages', function() {
      it('should call databaseListUsages successfully', function(done) {
        //uncomment below and update the code to test databaseListUsages
        //instance.databaseListUsages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partitionKeyRangeIdListMetrics', function() {
      it('should call partitionKeyRangeIdListMetrics successfully', function(done) {
        //uncomment below and update the code to test partitionKeyRangeIdListMetrics
        //instance.partitionKeyRangeIdListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partitionKeyRangeIdRegionListMetrics', function() {
      it('should call partitionKeyRangeIdRegionListMetrics successfully', function(done) {
        //uncomment below and update the code to test partitionKeyRangeIdRegionListMetrics
        //instance.partitionKeyRangeIdRegionListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('percentileListMetrics', function() {
      it('should call percentileListMetrics successfully', function(done) {
        //uncomment below and update the code to test percentileListMetrics
        //instance.percentileListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('percentileSourceTargetListMetrics', function() {
      it('should call percentileSourceTargetListMetrics successfully', function(done) {
        //uncomment below and update the code to test percentileSourceTargetListMetrics
        //instance.percentileSourceTargetListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('percentileTargetListMetrics', function() {
      it('should call percentileTargetListMetrics successfully', function(done) {
        //uncomment below and update the code to test percentileTargetListMetrics
        //instance.percentileTargetListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
