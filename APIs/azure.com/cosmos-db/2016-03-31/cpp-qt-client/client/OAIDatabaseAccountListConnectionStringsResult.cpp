/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2016-03-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatabaseAccountListConnectionStringsResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatabaseAccountListConnectionStringsResult::OAIDatabaseAccountListConnectionStringsResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatabaseAccountListConnectionStringsResult::OAIDatabaseAccountListConnectionStringsResult() {
    this->initializeModel();
}

OAIDatabaseAccountListConnectionStringsResult::~OAIDatabaseAccountListConnectionStringsResult() {}

void OAIDatabaseAccountListConnectionStringsResult::initializeModel() {

    m_connection_strings_isSet = false;
    m_connection_strings_isValid = false;
}

void OAIDatabaseAccountListConnectionStringsResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatabaseAccountListConnectionStringsResult::fromJsonObject(QJsonObject json) {

    m_connection_strings_isValid = ::OpenAPI::fromJsonValue(m_connection_strings, json[QString("connectionStrings")]);
    m_connection_strings_isSet = !json[QString("connectionStrings")].isNull() && m_connection_strings_isValid;
}

QString OAIDatabaseAccountListConnectionStringsResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatabaseAccountListConnectionStringsResult::asJsonObject() const {
    QJsonObject obj;
    if (m_connection_strings.size() > 0) {
        obj.insert(QString("connectionStrings"), ::OpenAPI::toJsonValue(m_connection_strings));
    }
    return obj;
}

QList<OAIDatabaseAccountConnectionString> OAIDatabaseAccountListConnectionStringsResult::getConnectionStrings() const {
    return m_connection_strings;
}
void OAIDatabaseAccountListConnectionStringsResult::setConnectionStrings(const QList<OAIDatabaseAccountConnectionString> &connection_strings) {
    m_connection_strings = connection_strings;
    m_connection_strings_isSet = true;
}

bool OAIDatabaseAccountListConnectionStringsResult::is_connection_strings_Set() const{
    return m_connection_strings_isSet;
}

bool OAIDatabaseAccountListConnectionStringsResult::is_connection_strings_Valid() const{
    return m_connection_strings_isValid;
}

bool OAIDatabaseAccountListConnectionStringsResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connection_strings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatabaseAccountListConnectionStringsResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
