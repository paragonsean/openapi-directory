/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2015-11-06
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FailoverPolicy from './FailoverPolicy';

/**
 * The FailoverPolicies model module.
 * @module model/FailoverPolicies
 * @version 2015-11-06
 */
class FailoverPolicies {
    /**
     * Constructs a new <code>FailoverPolicies</code>.
     * The list of new failover policies for the failover priority change.
     * @alias module:model/FailoverPolicies
     * @param failoverPolicies {Array.<module:model/FailoverPolicy>} List of failover policies.
     */
    constructor(failoverPolicies) { 
        
        FailoverPolicies.initialize(this, failoverPolicies);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, failoverPolicies) { 
        obj['failoverPolicies'] = failoverPolicies;
    }

    /**
     * Constructs a <code>FailoverPolicies</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FailoverPolicies} obj Optional instance to populate.
     * @return {module:model/FailoverPolicies} The populated <code>FailoverPolicies</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FailoverPolicies();

            if (data.hasOwnProperty('failoverPolicies')) {
                obj['failoverPolicies'] = ApiClient.convertToType(data['failoverPolicies'], [FailoverPolicy]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FailoverPolicies</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FailoverPolicies</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FailoverPolicies.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['failoverPolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['failoverPolicies'])) {
                throw new Error("Expected the field `failoverPolicies` to be an array in the JSON data but got " + data['failoverPolicies']);
            }
            // validate the optional field `failoverPolicies` (array)
            for (const item of data['failoverPolicies']) {
                FailoverPolicy.validateJSON(item);
            };
        }

        return true;
    }


}

FailoverPolicies.RequiredProperties = ["failoverPolicies"];

/**
 * List of failover policies.
 * @member {Array.<module:model/FailoverPolicy>} failoverPolicies
 */
FailoverPolicies.prototype['failoverPolicies'] = undefined;






export default FailoverPolicies;

