openapi: 3.0.1
info:
  description: Azure Cosmos DB Database Service Resource Provider REST API
  title: Cosmos DB
  version: 2015-11-06
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2015-11-06/cosmos-db.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: cosmos-db
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /providers/Microsoft.DocumentDB/databaseAccountNames/{accountName}:
    head:
      description: "Checks that the Azure Cosmos DB account name already exists. A\
        \ valid account name may contain only lowercase letters, numbers, and the\
        \ '-' character, and must be between 3 and 50 characters."
      operationId: DatabaseAccounts_CheckNameExists
      parameters:
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK. The account name is valid but is already in use.
        "404":
          content: {}
          description: Not Found. The account name is available and valid.
      x-ms-examples:
        CosmosDBDatabaseAccountCheckNameExists:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
          responses:
            "200": {}
            "404": {}
      x-accepts:
      - application/json
  /providers/Microsoft.DocumentDB/operations:
    get:
      description: Lists all of the available Cosmos DB Resource Provider operations.
      operationId: Operations_List
      parameters:
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
          description: OK
      tags:
      - Operations
      x-ms-examples:
        CosmosDBOperationsList:
          parameters:
            api-version: 2015-11-06
          responses:
            "200":
              body:
                value:
                - display:
                    Description: description
                    Operation: operationName
                    Provider: providerName
                    Resource: resourceName
                  name: operationName
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/databaseAccounts:
    get:
      description: Lists all the Azure Cosmos DB database accounts available under
        the subscription.
      operationId: DatabaseAccounts_List
      parameters:
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountsListResult'
          description: The operation completed successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountList:
          parameters:
            api-version: 2015-11-06
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                  kind: GlobalDocumentDB
                  location: West US
                  name: ddb1
                  properties:
                    consistencyPolicy:
                      defaultConsistencyLevel: Session
                      maxIntervalInSeconds: 5
                      maxStalenessPrefix: 100
                    databaseAccountOfferType: Standard
                    documentEndpoint: https://ddb1.documents.azure.com:443/
                    failoverPolicies:
                    - failoverPriority: 0
                      id: ddb1-eastus
                      locationName: East US
                    ipRangeFilter: ""
                    provisioningState: Succeeded
                    readLocations:
                    - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                      failoverPriority: 0
                      id: ddb1-eastus
                      locationName: East US
                      provisioningState: Succeeded
                    writeLocations:
                    - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                      failoverPriority: 0
                      id: ddb1-eastus
                      locationName: East US
                      provisioningState: Succeeded
                  tags: {}
                  type: Microsoft.DocumentDB/databaseAccounts
      x-ms-pageable: {}
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts:
    get:
      description: Lists all the Azure Cosmos DB database accounts available under
        the given resource group.
      operationId: DatabaseAccounts_ListByResourceGroup
      parameters:
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountsListResult'
          description: The operation completed successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountListByResourceGroup:
          parameters:
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                  kind: GlobalDocumentDB
                  location: West US
                  name: ddb1
                  properties:
                    consistencyPolicy:
                      defaultConsistencyLevel: Session
                      maxIntervalInSeconds: 5
                      maxStalenessPrefix: 100
                    databaseAccountOfferType: Standard
                    documentEndpoint: https://ddb1.documents.azure.com:443/
                    failoverPolicies:
                    - failoverPriority: 0
                      id: ddb1-eastus
                      locationName: East US
                    ipRangeFilter: ""
                    provisioningState: Succeeded
                    readLocations:
                    - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                      failoverPriority: 0
                      id: ddb1-eastus
                      locationName: East US
                      provisioningState: Succeeded
                    writeLocations:
                    - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                      failoverPriority: 0
                      id: ddb1-eastus
                      locationName: East US
                      provisioningState: Succeeded
                  tags: {}
                  type: Microsoft.DocumentDB/databaseAccounts
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}
  : delete:
      description: Deletes an existing Azure Cosmos DB database account.
      operationId: DatabaseAccounts_Delete
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: The database account delete operation will complete asynchronously.
        "204":
          content: {}
          description: The specified account does not exist in the subscription.
      x-ms-examples:
        CosmosDBDatabaseAccountDelete:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Retrieves the properties of an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_Get
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccount'
          description: The database account properties were retrieved successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                kind: GlobalDocumentDB
                location: West US
                name: ddb1
                properties:
                  consistencyPolicy:
                    defaultConsistencyLevel: Session
                    maxIntervalInSeconds: 5
                    maxStalenessPrefix: 100
                  databaseAccountOfferType: Standard
                  documentEndpoint: https://ddb1.documents.azure.com:443/
                  failoverPolicies:
                  - failoverPriority: 0
                    id: ddb1-eastus
                    locationName: East US
                  ipRangeFilter: ""
                  isVirtualNetworkFilterEnabled: false
                  provisioningState: Succeeded
                  readLocations:
                  - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                    failoverPriority: 0
                    id: ddb1-eastus
                    locationName: East US
                    provisioningState: Succeeded
                  virtualNetworkRules: []
                  writeLocations:
                  - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                    failoverPriority: 0
                    id: ddb1-eastus
                    locationName: East US
                    provisioningState: Succeeded
                tags: {}
                type: Microsoft.DocumentDB/databaseAccounts
      x-accepts:
      - application/json
    patch:
      description: Patches the properties of an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_Patch
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseAccountPatchParameters'
        description: The tags parameter to patch for the current database account.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccount'
          description: The properties of the database account were patched successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountPatch:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
            updateParameters:
              tags:
                dept: finance
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                kind: GlobalDocumentDB
                location: West US
                name: ddb1
                properties:
                  consistencyPolicy:
                    defaultConsistencyLevel: Session
                    maxIntervalInSeconds: 5
                    maxStalenessPrefix: 100
                  databaseAccountOfferType: Standard
                  documentEndpoint: https://ddb1.documents.azure.com:443/
                  failoverPolicies:
                  - failoverPriority: 0
                    id: ddb1-eastus
                    locationName: East US
                  ipRangeFilter: ""
                  provisioningState: Succeeded
                  readLocations:
                  - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                    failoverPriority: 0
                    id: ddb1-eastus
                    locationName: East US
                    provisioningState: Succeeded
                  writeLocations:
                  - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                    failoverPriority: 0
                    id: ddb1-eastus
                    locationName: East US
                    provisioningState: Succeeded
                tags: {}
                type: Microsoft.DocumentDB/databaseAccounts
      x-ms-long-running-operation: true
      x-codegen-request-body-name: updateParameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Creates or updates an Azure Cosmos DB database account.
      operationId: DatabaseAccounts_CreateOrUpdate
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseAccountCreateUpdateParameters'
        description: The parameters to provide for the current database account.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccount'
          description: The database account create or update operation will complete
            asynchronously.
      x-ms-examples:
        CosmosDBDatabaseAccountCreateMax:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            createUpdateParameters:
              kind: GlobalDocumentDB
              location: westus
              properties:
                consistencyPolicy:
                  defaultConsistencyLevel: BoundedStaleness
                  maxIntervalInSeconds: 10
                  maxStalenessPrefix: 200
                databaseAccountOfferType: Standard
                ipRangeFilter: 10.10.10.10
                isVirtualNetworkFilterEnabled: true
                locations:
                - failoverPriority: 0
                  isZoneRedundant: false
                  locationName: southcentralus
                - failoverPriority: 1
                  isZoneRedundant: false
                  locationName: eastus
                virtualNetworkRules:
                - id: /subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1
                  ignoreMissingVNetServiceEndpoint: false
              tags: {}
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                kind: GlobalDocumentDB
                location: West US
                name: ddb1
                properties:
                  consistencyPolicy:
                    defaultConsistencyLevel: BoundedStaleness
                    maxIntervalInSeconds: 10
                    maxStalenessPrefix: 200
                  databaseAccountOfferType: Standard
                  failoverPolicies:
                  - failoverPriority: 0
                    id: ddb1-southcentralus
                    locationName: South Central US
                  - failoverPriority: 1
                    id: ddb1-eastus
                    locationName: East US
                  ipRangeFilter: 10.10.10.10
                  isVirtualNetworkFilterEnabled: true
                  provisioningState: Initializing
                  readLocations:
                  - failoverPriority: 0
                    id: ddb1-southcentralus
                    isZoneRedundant: false
                    locationName: South Central US
                    provisioningState: Initializing
                  - failoverPriority: 1
                    id: ddb1-eastus
                    isZoneRedundant: false
                    locationName: East US
                    provisioningState: Initializing
                  virtualNetworkRules:
                  - id: /subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1
                  writeLocations:
                  - failoverPriority: 0
                    id: ddb1-southcentralus
                    isZoneRedundant: false
                    locationName: South Central US
                    provisioningState: Initializing
                tags: {}
                type: Microsoft.DocumentDB/databaseAccounts
        CosmosDBDatabaseAccountCreateMin:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            createUpdateParameters:
              location: westus
              properties:
                databaseAccountOfferType: Standard
                locations:
                - failoverPriority: 0
                  isZoneRedundant: false
                  locationName: southcentralus
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                kind: GlobalDocumentDB
                location: West US
                name: ddb1
                properties:
                  consistencyPolicy:
                    defaultConsistencyLevel: Session
                    maxIntervalInSeconds: 5
                    maxStalenessPrefix: 100
                  databaseAccountOfferType: Standard
                  failoverPolicies:
                  - failoverPriority: 0
                    id: ddb1-southcentralus
                    locationName: South Central US
                  ipRangeFilter: ""
                  provisioningState: Initializing
                  readLocations:
                  - failoverPriority: 0
                    id: ddb1-southcentralus
                    isZoneRedundant: false
                    locationName: South Central US
                    provisioningState: Initializing
                  writeLocations:
                  - failoverPriority: 0
                    id: ddb1-southcentralus
                    isZoneRedundant: false
                    locationName: South Central US
                    provisioningState: Initializing
                tags: {}
                type: Microsoft.DocumentDB/databaseAccounts
      x-ms-long-running-operation: true
      x-codegen-request-body-name: createUpdateParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/cassandra/keyspaces
  : get:
      description: Lists the Cassandra keyspaces under an existing Azure Cosmos DB
        database account.
      operationId: DatabaseAccounts_ListCassandraKeyspaces
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraKeyspaceListResult'
          description: The Cassandra keyspace properties were retrieved successfully.
      x-ms-examples:
        CosmosDBCassandraKeyspaceList:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rgName
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: keyspaceName
                  name: keyspaceName
                  properties:
                    id: keyspaceName
                  type: Microsoft.DocumentDB/databaseAccounts/apis/keyspaces
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/cassandra/keyspaces/{keyspaceName}
  : delete:
      description: Deletes an existing Azure Cosmos DB Cassandra keyspace.
      operationId: DatabaseAccounts_DeleteCassandraKeyspace
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB keyspace name.
        in: path
        name: keyspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: The Cassandra keyspace delete operation will complete asynchronously.
        "204":
          content: {}
          description: The Cassandra keyspace delete operation was completed successfully.
      x-ms-examples:
        CosmosDBCassandraKeyspaceDelete:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            keyspaceName: keyspaceName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the Cassandra keyspaces under an existing Azure Cosmos DB
        database account with the provided name.
      operationId: DatabaseAccounts_GetCassandraKeyspace
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB keyspace name.
        in: path
        name: keyspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraKeyspace'
          description: The Cassandra keyspace property was retrieved successfully.
      x-ms-examples:
        CosmosDBCassandraKeyspaceGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            keyspaceName: keyspaceName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: keyspaceName
                name: keyspaceName
                properties:
                  id: keyspaceName
                type: Microsoft.DocumentDB/databaseAccounts/apis/keyspaces
      x-accepts:
      - application/json
    put:
      description: Create or update an Azure Cosmos DB Cassandra keyspace
      operationId: DatabaseAccounts_CreateUpdateCassandraKeyspace
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB keyspace name.
        in: path
        name: keyspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CassandraKeyspaceCreateUpdateParameters'
        description: The parameters to provide for the current Cassandra keyspace.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraKeyspace'
          description: The Cassandra keyspace create or update operation was completed
            successfully.
        "202":
          content: {}
          description: The Cassandra keyspace create or update operation will complete
            asynchronously.
      x-ms-examples:
        CosmosDBCassandraKeyspaceCreateUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            createUpdateCassandraKeyspaceParameters:
              properties:
                options: {}
                resource:
                  id: keyspaceName
            keyspaceName: keyspaceName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: keyspaceName
                name: keyspaceName
                properties:
                  id: keyspaceName
                type: Microsoft.DocumentDB/databaseAccounts/apis/keyspaces
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: createUpdateCassandraKeyspaceParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/cassandra/keyspaces/{keyspaceName}/settings/throughput
  : get:
      description: Gets the RUs per second of the Cassandra Keyspace under an existing
        Azure Cosmos DB database account with the provided name.
      operationId: DatabaseAccounts_GetCassandraKeyspaceThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB keyspace name.
        in: path
        name: keyspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the Cassandra Keyspace was retrieved
            successfully.
      x-ms-examples:
        CosmosDBCassandraKeyspaceThroughputGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            keyspaceName: keyspaceName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                properties:
                  throughput: 400
      x-accepts:
      - application/json
    put:
      description: Update RUs per second of an Azure Cosmos DB Cassandra Keyspace
      operationId: DatabaseAccounts_UpdateCassandraKeyspaceThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB keyspace name.
        in: path
        name: keyspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputUpdateParameters'
        description: The RUs per second of the parameters to provide for the current
          Cassandra Keyspace.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the Cassandra Keyspace update operation
            was completed successfully.
        "202":
          content: {}
          description: The RUs per second of the Cassandra Keyspace update operation
            will complete asynchronously.
      x-ms-examples:
        CosmosDBCassandraKeyspaceThroughputUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            keyspaceName: keyspaceName
            resourceGroupName: rg1
            subscriptionId: subid
            updateThroughputParameters:
              properties:
                resource:
                  throughput: 400
          responses:
            "200":
              body:
                properties:
                  throughput: 400
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: updateThroughputParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/cassandra/keyspaces/{keyspaceName}/tables
  : get:
      description: Lists the Cassandra table under an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_ListCassandraTables
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB keyspace name.
        in: path
        name: keyspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraTableListResult'
          description: The Cassandra table properties were retrieved successfully.
      x-ms-examples:
        CosmosDBCassandraTableList:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            keyspaceName: keyspaceName
            resourceGroupName: rgName
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: tableName
                  name: tableName
                  properties:
                    defaultTtl: 100
                    id: tableName
                    schema:
                      clusterKeys:
                      - name: columnA
                        orderBy: Asc
                      columns:
                      - name: columnA
                        type: Ascii
                      partitionKeys:
                      - name: columnA
                  type: Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/tables
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/cassandra/keyspaces/{keyspaceName}/tables/{tableName}
  : delete:
      description: Deletes an existing Azure Cosmos DB Cassandra table.
      operationId: DatabaseAccounts_DeleteCassandraTable
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB keyspace name.
        in: path
        name: keyspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB table name.
        in: path
        name: tableName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: The Cassandra table delete operation will complete asynchronously.
        "204":
          content: {}
          description: The Cassandra table delete operation was completed successfully.
      x-ms-examples:
        CosmosDBCassandraTableDelete:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            keyspaceName: keyspaceName
            resourceGroupName: rg1
            subscriptionId: subid
            tableName: tableName
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the Cassandra table under an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_GetCassandraTable
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB keyspace name.
        in: path
        name: keyspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB table name.
        in: path
        name: tableName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraTable'
          description: The Cassandra table property was retrieved successfully.
      x-ms-examples:
        CosmosDBCassandraTableGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            keyspaceName: keyspaceName
            resourceGroupName: rg1
            subscriptionId: subid
            tableName: tableName
          responses:
            "200":
              body:
                id: tableName
                name: tableName
                properties:
                  defaultTtl: 100
                  id: tableName
                  schema:
                    clusterKeys:
                    - name: columnA
                      orderBy: Asc
                    columns:
                    - name: columnA
                      type: Ascii
                    partitionKeys:
                    - name: columnA
                type: Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/tables
      x-accepts:
      - application/json
    put:
      description: Create or update an Azure Cosmos DB Cassandra Table
      operationId: DatabaseAccounts_CreateUpdateCassandraTable
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB keyspace name.
        in: path
        name: keyspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB table name.
        in: path
        name: tableName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CassandraTableCreateUpdateParameters'
        description: The parameters to provide for the current Cassandra Table.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraTable'
          description: The Cassandra Table create or update operation was completed
            successfully.
        "202":
          content: {}
          description: The Cassandra Table create or update operation will complete
            asynchronously.
      x-ms-examples:
        CosmosDBCassandraTableCreateUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            createUpdateCassandraTableParameters:
              properties:
                options: {}
                resource:
                  defaultTtl: 100
                  id: tableName
                  schema:
                    clusterKeys:
                    - name: columnA
                      orderBy: Asc
                    columns:
                    - name: columnA
                      type: Ascii
                    partitionKeys:
                    - name: columnA
            keyspaceName: tableName
            resourceGroupName: rg1
            subscriptionId: subid
            tableName: tableName
          responses:
            "200":
              body:
                id: tableName
                name: tableName
                properties:
                  defaultTtl: 100
                  id: tableName
                  schema:
                    clusterKeys:
                    - name: columnA
                      orderBy: Asc
                    columns:
                    - name: columnA
                      type: Ascii
                    partitionKeys:
                    - name: columnA
                type: Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/tables
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: createUpdateCassandraTableParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/cassandra/keyspaces/{keyspaceName}/tables/{tableName}/settings/throughput
  : get:
      description: Gets the RUs per second of the Cassandra table under an existing
        Azure Cosmos DB database account with the provided name.
      operationId: DatabaseAccounts_GetCassandraTableThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB keyspace name.
        in: path
        name: keyspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB table name.
        in: path
        name: tableName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the Cassandra table was retrieved successfully.
      x-ms-examples:
        CosmosDBCassandraTableThroughputGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            keyspaceName: keyspaceName
            resourceGroupName: rg1
            subscriptionId: subid
            tableName: tableName
          responses:
            "200":
              body:
                properties:
                  throughput: 400
      x-accepts:
      - application/json
    put:
      description: Update RUs per second of an Azure Cosmos DB Cassandra table
      operationId: DatabaseAccounts_UpdateCassandraTableThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB keyspace name.
        in: path
        name: keyspaceName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB table name.
        in: path
        name: tableName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputUpdateParameters'
        description: The RUs per second of the parameters to provide for the current
          Cassandra table.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the Cassandra table update operation
            was completed successfully.
        "202":
          content: {}
          description: The RUs per second of the Cassandra table update operation
            will complete asynchronously.
      x-ms-examples:
        CosmosDBCassandraTableThroughputUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            keyspaceName: keyspaceName
            resourceGroupName: rg1
            subscriptionId: subid
            tableName: tableName
            updateThroughputParameters:
              properties:
                resource:
                  throughput: 400
          responses:
            "200":
              body:
                properties:
                  throughput: 400
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: updateThroughputParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/gremlin/databases
  : get:
      description: Lists the Gremlin databases under an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_ListGremlinDatabases
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GremlinDatabaseListResult'
          description: The Gremlin database properties were retrieved successfully.
      x-ms-examples:
        CosmosDBGremlinDatabaseList:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rgName
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: databaseName
                  name: databaseName
                  properties:
                    _etag: '"00000a00-0000-0000-0000-56672f920000"'
                    _rid: CqNBAA==
                    _ts: 1449602962
                    id: databaseName
                  type: Microsoft.DocumentDB/databaseAccounts/apis/databases
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/gremlin/databases/{databaseName}
  : delete:
      description: Deletes an existing Azure Cosmos DB Gremlin database.
      operationId: DatabaseAccounts_DeleteGremlinDatabase
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: The Gremlin database delete operation will complete asynchronously.
        "204":
          content: {}
          description: The Gremlin database delete operation was completed successfully.
      x-ms-examples:
        CosmosDBGremlinDatabaseDelete:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the Gremlin databases under an existing Azure Cosmos DB database
        account with the provided name.
      operationId: DatabaseAccounts_GetGremlinDatabase
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GremlinDatabase'
          description: The Gremlin database property was retrieved successfully.
      x-ms-examples:
        CosmosDBGremlinDatabaseGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: databaseName
                name: databaseName
                properties:
                  _etag: '"00000a00-0000-0000-0000-56672f920000"'
                  _rid: CqNBAA==
                  _ts: 1449602962
                  id: databaseName
                type: Microsoft.DocumentDB/databaseAccounts/apis/databases
      x-accepts:
      - application/json
    put:
      description: Create or update an Azure Cosmos DB Gremlin database
      operationId: DatabaseAccounts_CreateUpdateGremlinDatabase
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GremlinDatabaseCreateUpdateParameters'
        description: The parameters to provide for the current Gremlin database.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GremlinDatabase'
          description: The Gremlin database create or update operation was completed
            successfully.
        "202":
          content: {}
          description: The Gremlin database create or update operation will complete
            asynchronously.
      x-ms-examples:
        CosmosDBGremlinDatabaseCreateUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            createUpdateGremlinDatabaseParameters:
              properties:
                options: {}
                resource:
                  id: databaseName
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: databaseName
                name: databaseName
                properties:
                  _etag: '"00000a00-0000-0000-0000-56672f920000"'
                  _rid: CqNBAA==
                  _ts: 1449602962
                  id: databaseName
                type: Microsoft.DocumentDB/databaseAccounts/apis/databases
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: createUpdateGremlinDatabaseParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/gremlin/databases/{databaseName}/graphs
  : get:
      description: Lists the Gremlin graph under an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_ListGremlinGraphs
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GremlinGraphListResult'
          description: The Gremlin graph properties were retrieved successfully.
      x-ms-examples:
        CosmosDBGremlinGraphList:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rgName
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: testgrf
                  name: testgrf
                  properties:
                    _etag: '"00005900-0000-0000-0000-56f9a2630000"'
                    _rid: PD5DALigDgw=
                    _ts: 1459200611
                    conflictResolutionPolicy:
                      conflictResolutionPath: /path
                      mode: LastWriterWins
                    defaultTtl: 100
                    id: testgrf
                    indexingPolicy:
                      automatic: true
                      excludedPaths: []
                      includedPaths:
                      - indexes:
                        - dataType: String
                          kind: Range
                          precision: -1
                        - dataType: Number
                          kind: Range
                          precision: -1
                        path: /*
                      indexingMode: Consistent
                    partitionKey:
                      kind: Hash
                      paths:
                      - /AccountNumber
                    uniqueKeyPolicy:
                      uniqueKeys:
                      - paths:
                        - /testPath
                  type: Microsoft.DocumentDB/databaseAccounts/apis/databases/graphs
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/gremlin/databases/{databaseName}/graphs/{graphName}
  : delete:
      description: Deletes an existing Azure Cosmos DB Gremlin graph.
      operationId: DatabaseAccounts_DeleteGremlinGraph
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB graph name.
        in: path
        name: graphName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: The Gremlin graph delete operation will complete asynchronously.
        "204":
          content: {}
          description: The Gremlin graph delete operation was completed successfully.
      x-ms-examples:
        CosmosDBGremlinGraphDelete:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            graphName: graphName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the Gremlin graph under an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_GetGremlinGraph
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB graph name.
        in: path
        name: graphName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GremlinGraph'
          description: The Gremlin graph property was retrieved successfully.
      x-ms-examples:
        CosmosDBGremlinGraphGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            graphName: graphName
            resourceGroupName: rgName
            subscriptionId: subid
          responses:
            "200":
              body:
                id: graphName
                name: graphName
                properties:
                  _etag: '"00005900-0000-0000-0000-56f9a2630000"'
                  _rid: PD5DALigDgw=
                  _ts: 1459200611
                  conflictResolutionPolicy:
                    conflictResolutionPath: /path
                    mode: LastWriterWins
                  defaultTtl: 100
                  id: graphName
                  indexingPolicy:
                    automatic: true
                    excludedPaths: []
                    includedPaths:
                    - indexes:
                      - dataType: String
                        kind: Range
                        precision: -1
                      - dataType: Number
                        kind: Range
                        precision: -1
                      path: /*
                    indexingMode: Consistent
                  partitionKey:
                    kind: Hash
                    paths:
                    - /AccountNumber
                  uniqueKeyPolicy:
                    uniqueKeys:
                    - paths:
                      - /testPath
                type: Microsoft.DocumentDB/databaseAccounts/apis/databases/graphs
      x-accepts:
      - application/json
    put:
      description: Create or update an Azure Cosmos DB Gremlin graph
      operationId: DatabaseAccounts_CreateUpdateGremlinGraph
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB graph name.
        in: path
        name: graphName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GremlinGraphCreateUpdateParameters'
        description: The parameters to provide for the current Gremlin graph.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GremlinGraph'
          description: The Gremlin graph create or update operation was completed
            successfully.
        "202":
          content: {}
          description: The Gremlin graph create or update operation will complete
            asynchronously.
      x-ms-examples:
        CosmosDBGremlinGraphCreateUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            createUpdateGremlinGraphParameters:
              properties:
                options: {}
                resource:
                  conflictResolutionPolicy:
                    conflictResolutionPath: /path
                    mode: LastWriterWins
                  defaultTtl: 100
                  id: graphName
                  indexingPolicy:
                    automatic: true
                    excludedPaths: []
                    includedPaths:
                    - indexes:
                      - dataType: String
                        kind: Range
                        precision: -1
                      - dataType: Number
                        kind: Range
                        precision: -1
                      path: /*
                    indexingMode: Consistent
                  partitionKey:
                    kind: Hash
                    paths:
                    - /AccountNumber
                  uniqueKeyPolicy:
                    uniqueKeys:
                    - paths:
                      - /testPath
            databaseName: databaseName
            graphName: graphName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: graphName
                name: graphName
                properties:
                  _etag: '"00005900-0000-0000-0000-56f9a2630000"'
                  _rid: PD5DALigDgw=
                  _ts: 1459200611
                  conflictResolutionPolicy:
                    conflictResolutionPath: /path
                    mode: LastWriterWins
                  defaultTtl: 100
                  id: graphName
                  indexingPolicy:
                    automatic: true
                    excludedPaths: []
                    includedPaths:
                    - indexes:
                      - dataType: String
                        kind: Range
                        precision: -1
                      - dataType: Number
                        kind: Range
                        precision: -1
                      path: /*
                    indexingMode: Consistent
                  partitionKey:
                    kind: Hash
                    paths:
                    - /AccountNumber
                  uniqueKeyPolicy:
                    uniqueKeys:
                    - paths:
                      - /testPath
                type: Microsoft.DocumentDB/databaseAccounts/apis/databases/graphs
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: createUpdateGremlinGraphParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/gremlin/databases/{databaseName}/graphs/{graphName}/settings/throughput
  : get:
      description: Gets the Gremlin graph throughput under an existing Azure Cosmos
        DB database account with the provided name.
      operationId: DatabaseAccounts_GetGremlinGraphThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB graph name.
        in: path
        name: graphName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the Gremlin graph was retrieved successfully.
      x-ms-examples:
        CosmosDBGremlinGraphThroughputGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            graphName: graphName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                properties:
                  throughput: 400
      x-accepts:
      - application/json
    put:
      description: Update RUs per second of an Azure Cosmos DB Gremlin graph
      operationId: DatabaseAccounts_UpdateGremlinGraphThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB graph name.
        in: path
        name: graphName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputUpdateParameters'
        description: The RUs per second of the parameters to provide for the current
          Gremlin graph.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the Gremlin graph update operation was
            completed successfully.
        "202":
          content: {}
          description: The RUs per second of the Gremlin graph update operation will
            complete asynchronously.
      x-ms-examples:
        CosmosDBGremlinGraphThroughputUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            graphName: graphName
            resourceGroupName: rg1
            subscriptionId: subid
            updateThroughputParameters:
              properties:
                resource:
                  throughput: 400
          responses:
            "200":
              body:
                properties:
                  throughput: 400
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: updateThroughputParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/gremlin/databases/{databaseName}/settings/throughput
  : get:
      description: Gets the RUs per second of the Gremlin database under an existing
        Azure Cosmos DB database account with the provided name.
      operationId: DatabaseAccounts_GetGremlinDatabaseThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the Gremlin database was retrieved successfully.
      x-ms-examples:
        CosmosDBGremlinDatabaseThroughputGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                properties:
                  throughput: 400
      x-accepts:
      - application/json
    put:
      description: Update RUs per second of an Azure Cosmos DB Gremlin database
      operationId: DatabaseAccounts_UpdateGremlinDatabaseThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputUpdateParameters'
        description: The RUs per second of the parameters to provide for the current
          Gremlin database.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the Gremlin database update operation
            was completed successfully.
        "202":
          content: {}
          description: The RUs per second of the Gremlin database update operation
            will complete asynchronously.
      x-ms-examples:
        CosmosDBGremlinDatabaseThroughputUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
            updateThroughputParameters:
              properties:
                resource:
                  throughput: 400
          responses:
            "200":
              body:
                properties:
                  throughput: 400
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: updateThroughputParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/mongodb/databases
  : get:
      description: Lists the MongoDB databases under an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_ListMongoDBDatabases
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBDatabaseListResult'
          description: The MongoDB database properties were retrieved successfully.
      x-ms-examples:
        CosmosDBMongoDBDatabaseList:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rgName
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: databaseName
                  name: databaseName
                  properties:
                    id: databaseName
                  type: Microsoft.DocumentDB/databaseAccounts/apis/databases
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/mongodb/databases/{databaseName}
  : delete:
      description: Deletes an existing Azure Cosmos DB MongoDB database.
      operationId: DatabaseAccounts_DeleteMongoDBDatabase
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: The MongoDB database delete operation will complete asynchronously.
        "204":
          content: {}
          description: The MongoDB database delete operation was completed successfully.
      x-ms-examples:
        CosmosDBMongoDBDatabaseDelete:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the MongoDB databases under an existing Azure Cosmos DB database
        account with the provided name.
      operationId: DatabaseAccounts_GetMongoDBDatabase
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBDatabase'
          description: The MongoDB database property was retrieved successfully.
      x-ms-examples:
        CosmosDBMongoDBDatabaseGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: databaseName
                name: databaseName
                properties:
                  id: databaseName
                type: Microsoft.DocumentDB/databaseAccounts/apis/databases
      x-accepts:
      - application/json
    put:
      description: Create or updates Azure Cosmos DB MongoDB database
      operationId: DatabaseAccounts_CreateUpdateMongoDBDatabase
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MongoDBDatabaseCreateUpdateParameters'
        description: The parameters to provide for the current MongoDB database.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBDatabase'
          description: The MongoDB database create or update operation was completed
            successfully.
        "202":
          content: {}
          description: The MongoDB database create or update operation will complete
            asynchronously.
      x-ms-examples:
        CosmosDBMongoDBDatabaseCreateUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            createUpdateMongoDBDatabaseParameters:
              properties:
                options: {}
                resource:
                  id: updatedDatabaseName
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: updatedDatabaseName
                name: updatedDatabaseName
                properties:
                  id: updatedDatabaseName
                type: Microsoft.DocumentDB/databaseAccounts/apis/databases
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: createUpdateMongoDBDatabaseParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/mongodb/databases/{databaseName}/collections
  : get:
      description: Lists the MongoDB collection under an existing Azure Cosmos DB
        database account.
      operationId: DatabaseAccounts_ListMongoDBCollections
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBCollectionListResult'
          description: The MongoDB collection properties were retrieved successfully.
      x-ms-examples:
        CosmosDBMongoDBCollectionList:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rgName
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: testcoll
                  name: testcoll
                  properties:
                    id: testcoll
                    indexes:
                    - key:
                        keys:
                        - testKey
                      options:
                        expireAfterSeconds: 100
                        unique: true
                    shardKey:
                      testKey: Hash
                  type: Microsoft.DocumentDB/databaseAccounts/apis/databases/collections
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/mongodb/databases/{databaseName}/collections/{collectionName}
  : delete:
      description: Deletes an existing Azure Cosmos DB MongoDB Collection.
      operationId: DatabaseAccounts_DeleteMongoDBCollection
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection name.
        in: path
        name: collectionName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: The MongoDB collection delete operation will complete asynchronously.
        "204":
          content: {}
          description: The MongoDB collection delete operation was completed successfully.
      x-ms-examples:
        CosmosDBMongoDBCollectionDelete:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            collectionName: collectionName
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the MongoDB collection under an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_GetMongoDBCollection
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection name.
        in: path
        name: collectionName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBCollection'
          description: The MongoDB collection property was retrieved successfully.
      x-ms-examples:
        CosmosDBMongoDBCollectionGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            collectionName: collectionName
            databaseName: databaseName
            resourceGroupName: rgName
            subscriptionId: subid
          responses:
            "200":
              body:
                id: collectionName
                name: collectionName
                properties:
                  id: testcoll
                  indexes:
                  - key:
                      keys:
                      - testKey
                    options:
                      expireAfterSeconds: 100
                      unique: true
                  shardKey:
                    testKey: Hash
                type: Microsoft.DocumentDB/databaseAccounts/apis/databases/collections
      x-accepts:
      - application/json
    put:
      description: Create or update an Azure Cosmos DB MongoDB Collection
      operationId: DatabaseAccounts_CreateUpdateMongoDBCollection
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection name.
        in: path
        name: collectionName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MongoDBCollectionCreateUpdateParameters'
        description: The parameters to provide for the current MongoDB Collection.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBCollection'
          description: The MongoDB Collection create or update operation was completed
            successfully.
        "202":
          content: {}
          description: The MongoDB Collection create or update operation will complete
            asynchronously.
      x-ms-examples:
        CosmosDBMongoDBCollectionCreateUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            collectionName: collectionName
            createUpdateMongoDBCollectionParameters:
              properties:
                options: {}
                resource:
                  id: testcoll
                  indexes:
                  - key:
                      keys:
                      - testKey
                    options:
                      expireAfterSeconds: 100
                      unique: true
                  shardKey:
                    testKey: Hash
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: collectionName
                name: collectionName
                properties:
                  id: testcoll
                  indexes:
                  - key:
                      keys:
                      - testKey
                    options:
                      expireAfterSeconds: 100
                      unique: true
                  shardKey:
                    testKey: Hash
                type: Microsoft.DocumentDB/databaseAccounts/apis/collection
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: createUpdateMongoDBCollectionParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/mongodb/databases/{databaseName}/collections/{collectionName}/settings/throughput
  : get:
      description: Gets the RUs per second of the MongoDB collection under an existing
        Azure Cosmos DB database account with the provided name.
      operationId: DatabaseAccounts_GetMongoDBCollectionThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection name.
        in: path
        name: collectionName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the MongoDB collection was retrieved
            successfully.
      x-ms-examples:
        CosmosDBMongoDBCollectionThroughputGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            collectionName: collectionName
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                properties:
                  throughput: 400
      x-accepts:
      - application/json
    put:
      description: Update the RUs per second of an Azure Cosmos DB MongoDB collection
      operationId: DatabaseAccounts_UpdateMongoDBCollectionThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection name.
        in: path
        name: collectionName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputUpdateParameters'
        description: The RUs per second of the parameters to provide for the current
          MongoDB collection.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the MongoDB collection update operation
            was completed successfully.
        "202":
          content: {}
          description: The RUs per second of the MongoDB collection update operation
            will complete asynchronously.
      x-ms-examples:
        CosmosDBMongoDBCollectionThroughputUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            collectionName: collectionName
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
            updateThroughputParameters:
              properties:
                resource:
                  throughput: 400
          responses:
            "200":
              body:
                properties:
                  throughput: 400
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: updateThroughputParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/mongodb/databases/{databaseName}/settings/throughput
  : get:
      description: Gets the RUs per second of the MongoDB database under an existing
        Azure Cosmos DB database account with the provided name.
      operationId: DatabaseAccounts_GetMongoDBDatabaseThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the MongoDB database was retrieved successfully.
      x-ms-examples:
        CosmosDBMongoDBDatabaseThroughputGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                properties:
                  throughput: 400
      x-accepts:
      - application/json
    put:
      description: Update RUs per second of the an Azure Cosmos DB MongoDB database
      operationId: DatabaseAccounts_UpdateMongoDBDatabaseThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputUpdateParameters'
        description: The RUs per second of the parameters to provide for the current
          MongoDB database.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the MongoDB database update operation
            was completed successfully.
        "202":
          content: {}
          description: The RUs per second of the MongoDB database update operation
            will complete asynchronously.
      x-ms-examples:
        CosmosDBMongoDBDatabaseThroughputUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
            updateThroughputParameters:
              properties:
                resource:
                  throughput: 400
          responses:
            "200":
              body:
                properties:
                  throughput: 400
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: updateThroughputParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/sql/databases
  : get:
      description: Lists the SQL databases under an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_ListSqlDatabases
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlDatabaseListResult'
          description: The SQL database properties were retrieved successfully.
      x-ms-examples:
        CosmosDBSqlDatabaseList:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rgName
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: databaseName
                  name: databaseName
                  properties:
                    _colls: colls/
                    _etag: '"00000a00-0000-0000-0000-56672f920000"'
                    _rid: CqNBAA==
                    _ts: 1449602962
                    _users: users/
                    id: databaseName
                  type: Microsoft.DocumentDB/databaseAccounts/apis/databases
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/sql/databases/{databaseName}
  : delete:
      description: Deletes an existing Azure Cosmos DB SQL database.
      operationId: DatabaseAccounts_DeleteSqlDatabase
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: The SQL database delete operation will complete asynchronously.
        "204":
          content: {}
          description: The SQL database delete operation was completed successfully.
      x-ms-examples:
        CosmosDBSqlDatabaseDelete:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the SQL database under an existing Azure Cosmos DB database
        account with the provided name.
      operationId: DatabaseAccounts_GetSqlDatabase
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlDatabase'
          description: The SQL database property was retrieved successfully.
      x-ms-examples:
        CosmosDBSqlDatabaseGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: databaseName
                name: databaseName
                properties:
                  _colls: colls/
                  _etag: '"00000a00-0000-0000-0000-56672f920000"'
                  _rid: CqNBAA==
                  _ts: 1449602962
                  _users: users/
                  id: databaseName
                type: Microsoft.DocumentDB/databaseAccounts/apis/databases
      x-accepts:
      - application/json
    put:
      description: Create or update an Azure Cosmos DB SQL database
      operationId: DatabaseAccounts_CreateUpdateSqlDatabase
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlDatabaseCreateUpdateParameters'
        description: The parameters to provide for the current SQL database.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlDatabase'
          description: The SQL database create or update operation was completed successfully.
        "202":
          content: {}
          description: The SQL database create or update operation will complete asynchronously.
      x-ms-examples:
        CosmosDBSqlDatabaseCreateUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            createUpdateSqlDatabaseParameters:
              properties:
                options: {}
                resource:
                  id: databaseName
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: databaseName
                name: databaseName
                properties:
                  _etag: '"00000a00-0000-0000-0000-56672f920000"'
                  _rid: CqNBAA==
                  _ts: 1449602962
                  id: databaseName
                type: Microsoft.DocumentDB/databaseAccounts/apis/databases
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: createUpdateSqlDatabaseParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/sql/databases/{databaseName}/containers
  : get:
      description: Lists the SQL container under an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_ListSqlContainers
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlContainerListResult'
          description: The SQL container properties were retrieved successfully.
      x-ms-examples:
        CosmosDBSqlContainerList:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rgName
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: testctn
                  name: testctn
                  properties:
                    _etag: '"00005900-0000-0000-0000-56f9a2630000"'
                    _rid: PD5DALigDgw=
                    _ts: 1459200611
                    conflictResolutionPolicy:
                      conflictResolutionPath: /path
                      mode: LastWriterWins
                    defaultTtl: 100
                    id: testctn
                    indexingPolicy:
                      automatic: true
                      excludedPaths: []
                      includedPaths:
                      - indexes:
                        - dataType: String
                          kind: Range
                          precision: -1
                        - dataType: Number
                          kind: Range
                          precision: -1
                        path: /*
                      indexingMode: Consistent
                    partitionKey:
                      kind: Hash
                      paths:
                      - /AccountNumber
                    uniqueKeyPolicy:
                      uniqueKeys:
                      - paths:
                        - /testPath
                  type: Microsoft.DocumentDB/databaseAccounts/apis/databases/containers
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/sql/databases/{databaseName}/containers/{containerName}
  : delete:
      description: Deletes an existing Azure Cosmos DB SQL container.
      operationId: DatabaseAccounts_DeleteSqlContainer
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB container name.
        in: path
        name: containerName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: The SQL container delete operation will complete asynchronously.
        "204":
          content: {}
          description: The SQL container delete operation was completed successfully.
      x-ms-examples:
        CosmosDBSqlContainerDelete:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            containerName: containerName
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the SQL container under an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_GetSqlContainer
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB container name.
        in: path
        name: containerName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlContainer'
          description: The SQL container property was retrieved successfully.
      x-ms-examples:
        CosmosDBSqlContainerGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            containerName: containerName
            databaseName: databaseName
            resourceGroupName: rgName
            subscriptionId: subid
          responses:
            "200":
              body:
                id: containerName
                name: containerName
                properties:
                  _etag: '"00005900-0000-0000-0000-56f9a2630000"'
                  _rid: PD5DALigDgw=
                  _ts: 1459200611
                  conflictResolutionPolicy:
                    conflictResolutionPath: /path
                    mode: LastWriterWins
                  defaultTtl: 100
                  id: containerName
                  indexingPolicy:
                    automatic: true
                    excludedPaths: []
                    includedPaths:
                    - indexes:
                      - dataType: String
                        kind: Range
                        precision: -1
                      - dataType: Number
                        kind: Range
                        precision: -1
                      path: /*
                    indexingMode: Consistent
                  partitionKey:
                    kind: Hash
                    paths:
                    - /AccountNumber
                  uniqueKeyPolicy:
                    uniqueKeys:
                    - paths:
                      - /testPath
                type: Microsoft.DocumentDB/databaseAccounts/apis/databases/containers
      x-accepts:
      - application/json
    put:
      description: Create or update an Azure Cosmos DB SQL container
      operationId: DatabaseAccounts_CreateUpdateSqlContainer
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB container name.
        in: path
        name: containerName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlContainerCreateUpdateParameters'
        description: The parameters to provide for the current SQL container.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlContainer'
          description: The SQL container create or update operation was completed
            successfully.
        "202":
          content: {}
          description: The SQL container create or update operation will complete
            asynchronously.
      x-ms-examples:
        CosmosDBSqlContainerCreateUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            containerName: containerName
            createUpdateSqlContainerParameters:
              properties:
                options: {}
                resource:
                  conflictResolutionPolicy:
                    conflictResolutionPath: /path
                    mode: LastWriterWins
                  defaultTtl: 100
                  id: containerName
                  indexingPolicy:
                    automatic: true
                    excludedPaths: []
                    includedPaths:
                    - indexes:
                      - dataType: String
                        kind: Range
                        precision: -1
                      - dataType: Number
                        kind: Range
                        precision: -1
                      path: /*
                    indexingMode: Consistent
                  partitionKey:
                    kind: Hash
                    paths:
                    - /AccountNumber
                  uniqueKeyPolicy:
                    uniqueKeys:
                    - paths:
                      - /testPath
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: containerName
                name: containerName
                properties:
                  _etag: '"00005900-0000-0000-0000-56f9a2630000"'
                  _rid: PD5DALigDgw=
                  _ts: 1459200611
                  conflictResolutionPolicy:
                    conflictResolutionPath: /path
                    mode: LastWriterWins
                  defaultTtl: 100
                  id: containerName
                  indexingPolicy:
                    automatic: true
                    excludedPaths: []
                    includedPaths:
                    - indexes:
                      - dataType: String
                        kind: Range
                        precision: -1
                      - dataType: Number
                        kind: Range
                        precision: -1
                      path: /*
                    indexingMode: Consistent
                  partitionKey:
                    kind: Hash
                    paths:
                    - /AccountNumber
                  uniqueKeyPolicy:
                    uniqueKeys:
                    - paths:
                      - /testPath
                type: Microsoft.DocumentDB/databaseAccounts/apis/databases/containers
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: createUpdateSqlContainerParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/sql/databases/{databaseName}/containers/{containerName}/settings/throughput
  : get:
      description: Gets the RUs per second of the SQL container under an existing
        Azure Cosmos DB database account.
      operationId: DatabaseAccounts_GetSqlContainerThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB container name.
        in: path
        name: containerName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the SQL container was retrieved successfully.
      x-ms-examples:
        CosmosDBSqlContainerThroughputGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            containerName: containerName
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                properties:
                  throughput: 400
      x-accepts:
      - application/json
    put:
      description: Update RUs per second of an Azure Cosmos DB SQL container
      operationId: DatabaseAccounts_UpdateSqlContainerThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB container name.
        in: path
        name: containerName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputUpdateParameters'
        description: The parameters to provide for the RUs per second of the current
          SQL container.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the SQL container update operation was
            completed successfully.
        "202":
          content: {}
          description: The RUs per second of the SQL container update operation will
            complete asynchronously.
      x-ms-examples:
        CosmosDBSqlContainerThroughputUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            containerName: containerName
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
            updateThroughputParameters:
              properties:
                resource:
                  throughput: 400
          responses:
            "200":
              body:
                properties:
                  throughput: 400
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: updateThroughputParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/sql/databases/{databaseName}/settings/throughput
  : get:
      description: Gets the RUs per second of the SQL database under an existing Azure
        Cosmos DB database account with the provided name.
      operationId: DatabaseAccounts_GetSqlDatabaseThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the SQL database was retrieved successfully.
      x-ms-examples:
        CosmosDBSqlDatabaseThroughputGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                properties:
                  throughput: 400
      x-accepts:
      - application/json
    put:
      description: Update RUs per second of an Azure Cosmos DB SQL database
      operationId: DatabaseAccounts_UpdateSqlDatabaseThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputUpdateParameters'
        description: The parameters to provide for the RUs per second of the current
          SQL database.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the SQL database update operation was
            completed successfully.
        "202":
          content: {}
          description: The RUs per second of the SQL database update operation will
            complete asynchronously.
      x-ms-examples:
        CosmosDBSqlDatabaseThroughputUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseName: databaseName
            resourceGroupName: rg1
            subscriptionId: subid
            updateThroughputParameters:
              properties:
                resource:
                  throughput: 400
          responses:
            "200":
              body:
                properties:
                  throughput: 400
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: updateThroughputParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/table/tables
  : get:
      description: Lists the Tables under an existing Azure Cosmos DB database account.
      operationId: DatabaseAccounts_ListTables
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableListResult'
          description: The Table properties were retrieved successfully.
      x-ms-examples:
        CosmosDBTableList:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rgName
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: tableName
                  name: tableName
                  properties:
                    id: tableName
                  type: Microsoft.DocumentDB/databaseAccounts/apis/tables
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/table/tables/{tableName}
  : delete:
      description: Deletes an existing Azure Cosmos DB Table.
      operationId: DatabaseAccounts_DeleteTable
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB table name.
        in: path
        name: tableName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: The Table delete operation will complete asynchronously.
        "204":
          content: {}
          description: The Table delete operation was completed successfully.
      x-ms-examples:
        CosmosDBTableDelete:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
            tableName: tableName
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the Tables under an existing Azure Cosmos DB database account
        with the provided name.
      operationId: DatabaseAccounts_GetTable
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB table name.
        in: path
        name: tableName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: The Table property was retrieved successfully.
      x-ms-examples:
        CosmosDBTableGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
            tableName: tableName
          responses:
            "200":
              body:
                id: tableName
                name: tableName
                properties:
                  id: tableName
                type: Microsoft.DocumentDB/databaseAccounts/apis/tables
      x-accepts:
      - application/json
    put:
      description: Create or update an Azure Cosmos DB Table
      operationId: DatabaseAccounts_CreateUpdateTable
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB table name.
        in: path
        name: tableName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableCreateUpdateParameters'
        description: The parameters to provide for the current Table.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: The Table create or update operation was completed successfully.
        "202":
          content: {}
          description: The Table create or update operation will complete asynchronously.
      x-ms-examples:
        CosmosDBTableReplace:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            createUpdateTableParameters:
              properties:
                options: {}
                resource:
                  id: tableName
            resourceGroupName: rg1
            subscriptionId: subid
            tableName: tableName
          responses:
            "200":
              body:
                id: tableName
                name: tableName
                properties:
                  id: tableName
                type: Microsoft.DocumentDB/databaseAccounts/apis/tables
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: createUpdateTableParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/apis/table/tables/{tableName}/settings/throughput
  : get:
      description: Gets the RUs per second of the Table under an existing Azure Cosmos
        DB database account with the provided name.
      operationId: DatabaseAccounts_GetTableThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB table name.
        in: path
        name: tableName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the Table was retrieved successfully.
      x-ms-examples:
        CosmosDBTableThroughputGet:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
            tableName: tableName
          responses:
            "200":
              body:
                properties:
                  throughput: 400
      x-accepts:
      - application/json
    put:
      description: Update RUs per second of an Azure Cosmos DB Table
      operationId: DatabaseAccounts_UpdateTableThroughput
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB table name.
        in: path
        name: tableName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputUpdateParameters'
        description: The parameters to provide for the RUs per second of the current
          Table.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throughput'
          description: The RUs per second of the Table update operation was completed
            successfully.
        "202":
          content: {}
          description: The RUs per second of the Table update operation will complete
            asynchronously.
      x-ms-examples:
        CosmosDBTableThroughputUpdate:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
            tableName: tableName
            updateThroughputParameters:
              properties:
                resource:
                  throughput: 400
          responses:
            "200":
              body:
                properties:
                  throughput: 400
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: updateThroughputParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/metricDefinitions
  : get:
      description: Retrieves metric definitions for the given collection.
      operationId: Collection_ListMetricDefinitions
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database rid.
        in: path
        name: databaseRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection rid.
        in: path
        name: collectionRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionsListResult'
          description: The metric definitions for the collection were retrieved successfully.
      x-ms-examples:
        CosmosDBCollectionGetMetricDefinitions:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            collectionRid: collectionRid
            databaseRid: databaseRid
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - metricAvailabilities:
                  - retention: P2D
                    timeGrain: PT5M
                  - retention: P14D
                    timeGrain: PT1H
                  - retention: P60D
                    timeGrain: P1D
                  name:
                    localizedValue: Total Requests
                    value: Total Requests
                  primaryAggregationType: Total
                  resourceUri: /subscriptions/subId/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/metrics
  : get:
      description: Retrieves the metrics determined by the given filter for the given
        database account and collection.
      operationId: Collection_ListMetrics
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database rid.
        in: path
        name: databaseRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection rid.
        in: path
        name: collectionRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of metrics\
          \ to return. The parameters that can be filtered are name.value (name of\
          \ the metric, can have an or of multiple names), startTime, endTime, and\
          \ timeGrain. The supported operator is eq."
        in: query
        name: $filter
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricListResult'
          description: The metrics for the database account were retrieved successfully.
      x-ms-examples:
        CosmosDBCollectionGetMetrics:
          parameters:
            $filter: $filter=(name.value eq 'Total Requests') and timeGrain eq duration'PT5M'
              and startTime eq '2017-11-19T23:53:55.2780000Z' and endTime eq '2017-11-20T00:13:55.2780000Z
            accountName: ddb1
            api-version: 2015-11-06
            collectionRid: collectionRid
            databaseRid: databaseRid
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - endTime: 2017-11-20T00:13:55.2780000Z
                  metricValues:
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-19T23:53:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-19T23:58:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-20T00:03:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-20T00:08:55.2780000Z
                    total: 0
                  name:
                    localizedValue: Total Requests
                    value: Total Requests
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT5M
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitionKeyRangeId/{partitionKeyRangeId}/metrics
  : get:
      description: Retrieves the metrics determined by the given filter for the given
        partition key range id.
      operationId: PartitionKeyRangeId_ListMetrics
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database rid.
        in: path
        name: databaseRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection rid.
        in: path
        name: collectionRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Partition Key Range Id for which to get data.
        in: path
        name: partitionKeyRangeId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of metrics\
          \ to return. The parameters that can be filtered are name.value (name of\
          \ the metric, can have an or of multiple names), startTime, endTime, and\
          \ timeGrain. The supported operator is eq."
        in: query
        name: $filter
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionMetricListResult'
          description: The partition-level metrics for the partition key range id
            were retrieved successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountRegionGetMetrics:
          parameters:
            $filter: $filter=(name.value eq 'Max RUs Per Second') and timeGrain eq
              duration'PT1M' and startTime eq '2017-11-19T23:53:55.2780000Z' and endTime
              eq '2017-11-20T23:58:55.2780000Z
            accountName: ddb1
            api-version: 2015-11-06
            collectionRid: collectionRid
            databaseRid: databaseRid
            partitionKeyRangeId: "0"
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - endTime: 2017-11-20T23:58:55.2780000Z
                  metricValues:
                  - maximum: 5
                    timestamp: 2017-11-19T23:53:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:54:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:55:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:56:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:57:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:58:55.2780000Z
                  name:
                    localizedValue: Max RUs Per Second
                    value: Max RUs Per Second
                  partitionId: 00000000-0000-0000-0000-000000000000
                  partitionKeyRangeId: "0"
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT1M
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitions/metrics
  : get:
      description: "Retrieves the metrics determined by the given filter for the given\
        \ collection, split by partition."
      operationId: CollectionPartition_ListMetrics
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database rid.
        in: path
        name: databaseRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection rid.
        in: path
        name: collectionRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of metrics\
          \ to return. The parameters that can be filtered are name.value (name of\
          \ the metric, can have an or of multiple names), startTime, endTime, and\
          \ timeGrain. The supported operator is eq."
        in: query
        name: $filter
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionMetricListResult'
          description: The partition-level metrics for the collection were retrieved
            successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountRegionGetMetrics:
          parameters:
            $filter: $filter=(name.value eq 'Max RUs Per Second') and timeGrain eq
              duration'PT1M' and startTime eq '2017-11-19T23:53:55.2780000Z' and endTime
              eq '2017-11-20T23:58:55.2780000Z
            accountName: ddb1
            api-version: 2015-11-06
            collectionRid: collectionRid
            databaseRid: databaseRid
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - endTime: 2017-11-20T23:58:55.2780000Z
                  metricValues:
                  - maximum: 5
                    timestamp: 2017-11-19T23:53:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:54:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:55:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:56:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:57:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:58:55.2780000Z
                  name:
                    localizedValue: Max RUs Per Second
                    value: Max RUs Per Second
                  partitionId: 00000000-0000-0000-0000-000000000000
                  partitionKeyRangeId: "0"
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT1M
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitions/usages
  : get:
      description: "Retrieves the usages (most recent storage data) for the given\
        \ collection, split by partition."
      operationId: CollectionPartition_ListUsages
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database rid.
        in: path
        name: databaseRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection rid.
        in: path
        name: collectionRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of usages\
          \ to return. The supported parameter is name.value (name of the metric,\
          \ can have an or of multiple names)."
        in: query
        name: $filter
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionUsagesResult'
          description: "The usages for the collection, per partition were retrieved\
            \ successfully."
      x-ms-examples:
        CosmosDBCollectionGetUsages:
          parameters:
            $filter: $filter=name.value eq 'Partition Storage'
            accountName: ddb1
            api-version: 2015-11-06
            collectionRid: collectionRid
            databaseRid: databaseRid
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - currentValue: 0
                  limit: 10737418240
                  name:
                    localizedValue: Storage
                    value: Storage
                  partitionId: 00000000-0000-0000-0000-000000000000
                  partitionKeyRangeId: "0"
                  quotaPeriod: P1D
                  unit: Bytes
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/usages
  : get:
      description: Retrieves the usages (most recent storage data) for the given collection.
      operationId: Collection_ListUsages
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database rid.
        in: path
        name: databaseRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection rid.
        in: path
        name: collectionRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of usages\
          \ to return. The supported parameter is name.value (name of the metric,\
          \ can have an or of multiple names)."
        in: query
        name: $filter
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesResult'
          description: The usages for the collection were retrieved successfully.
      x-ms-examples:
        CosmosDBCollectionGetUsages:
          parameters:
            $filter: $filter=name.value eq 'Storage'
            accountName: ddb1
            api-version: 2015-11-06
            collectionRid: collectionRid
            databaseRid: databaseRid
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - currentValue: 0
                  limit: 10737418240
                  name:
                    localizedValue: Storage
                    value: Storage
                  quotaPeriod: P1D
                  unit: Bytes
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/metricDefinitions
  : get:
      description: Retrieves metric definitions for the given database.
      operationId: Database_ListMetricDefinitions
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database rid.
        in: path
        name: databaseRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionsListResult'
          description: The metric definitions for the database were retrieved successfully.
      x-ms-examples:
        CosmosDBDatabaseGetMetricDefinitions:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            databaseRid: databaseRid
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - metricAvailabilities:
                  - retention: P2D
                    timeGrain: PT5M
                  - retention: P14D
                    timeGrain: PT1H
                  - retention: P60D
                    timeGrain: P1D
                  name:
                    localizedValue: Total Requests
                    value: Total Requests
                  primaryAggregationType: Total
                  resourceUri: /subscriptions/subId/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/metrics
  : get:
      description: Retrieves the metrics determined by the given filter for the given
        database account and database.
      operationId: Database_ListMetrics
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database rid.
        in: path
        name: databaseRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of metrics\
          \ to return. The parameters that can be filtered are name.value (name of\
          \ the metric, can have an or of multiple names), startTime, endTime, and\
          \ timeGrain. The supported operator is eq."
        in: query
        name: $filter
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricListResult'
          description: The metrics for the database account were retrieved successfully.
      x-ms-examples:
        CosmosDBDatabaseGetMetrics:
          parameters:
            $filter: $filter=(name.value eq 'Total Requests') and timeGrain eq duration'PT5M'
              and startTime eq '2017-11-19T23:53:55.2780000Z' and endTime eq '2017-11-20T00:13:55.2780000Z
            accountName: ddb1
            api-version: 2015-11-06
            databaseRid: rid
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - endTime: 2017-11-20T00:13:55.2780000Z
                  metricValues:
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-19T23:53:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-19T23:58:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-20T00:03:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-20T00:08:55.2780000Z
                    total: 0
                  name:
                    localizedValue: Total Requests
                    value: Total Requests
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT5M
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/usages
  : get:
      description: Retrieves the usages (most recent data) for the given database.
      operationId: Database_ListUsages
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database rid.
        in: path
        name: databaseRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of usages\
          \ to return. The supported parameter is name.value (name of the metric,\
          \ can have an or of multiple names)."
        in: query
        name: $filter
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesResult'
          description: The usages for the database were retrieved successfully.
      x-ms-examples:
        CosmosDBDatabaseGetUsages:
          parameters:
            $filter: $filter=name.value eq 'Storage'
            accountName: ddb1
            api-version: 2015-11-06
            databaseRid: databaseRid
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - currentValue: 0
                  limit: 10737418240
                  name:
                    localizedValue: Storage
                    value: Storage
                  quotaPeriod: P1D
                  unit: Bytes
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/failoverPriorityChange
  : post:
      description: Changes the failover priority for the Azure Cosmos DB database
        account. A failover priority of 0 indicates a write region. The maximum value
        for a failover priority = (total number of regions - 1). Failover priority
        values must be unique for each of the regions in which the database account
        exists.
      operationId: DatabaseAccounts_FailoverPriorityChange
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverPolicies'
        description: The new failover policies for the database account.
        required: true
      responses:
        "202":
          content: {}
          description: Accepted. The failover policy change operation will complete
            asynchronously.
        "204":
          content: {}
          description: No Content
      x-ms-examples:
        CosmosDBDatabaseAccountFailoverPriorityChange:
          parameters:
            accountName: ddb1-failover
            api-version: 2015-11-06
            failoverParameters:
              failoverPolicies:
              - failoverPriority: 0
                locationName: eastus
              - failoverPriority: 1
                locationName: westus
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: failoverParameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listConnectionStrings
  : post:
      description: Lists the connection strings for the specified Azure Cosmos DB
        database account.
      operationId: DatabaseAccounts_ListConnectionStrings
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountListConnectionStringsResult'
          description: The operation completed successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountListConnectionStrings:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body: {}
        CosmosDBDatabaseAccountListConnectionStringsMongo:
          parameters:
            accountName: mongo-ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                connectionStrings:
                - connectionString: connection-string
                  description: Name of the connection string
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listKeys
  : post:
      description: Lists the access keys for the specified Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_ListKeys
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountListKeysResult'
          description: The operation completed successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountListKeys:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                primaryMasterKey: primaryMasterKey
                primaryReadonlyMasterKey: primaryReadonlyMasterKey
                secondaryMasterKey: secondaryMasterKey
                secondaryReadonlyMasterKey: secondaryReadonlyMasterKey
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/metricDefinitions
  : get:
      description: Retrieves metric definitions for the given database account.
      operationId: DatabaseAccounts_ListMetricDefinitions
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionsListResult'
          description: The metric definitions for the database account were retrieved
            successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountGetMetricDefinitions:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - metricAvailabilities:
                  - retention: P2D
                    timeGrain: PT5M
                  - retention: P14D
                    timeGrain: PT1H
                  - retention: P60D
                    timeGrain: P1D
                  name:
                    localizedValue: Total Requests
                    value: Total Requests
                  primaryAggregationType: Total
                  resourceUri: /subscriptions/subId/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/metrics
  : get:
      description: Retrieves the metrics determined by the given filter for the given
        database account.
      operationId: DatabaseAccounts_ListMetrics
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of metrics\
          \ to return. The parameters that can be filtered are name.value (name of\
          \ the metric, can have an or of multiple names), startTime, endTime, and\
          \ timeGrain. The supported operator is eq."
        in: query
        name: $filter
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricListResult'
          description: The metrics for the database account were retrieved successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountGetMetrics:
          parameters:
            $filter: $filter=(name.value eq 'Total Requests') and timeGrain eq duration'PT5M'
              and startTime eq '2017-11-19T23:53:55.2780000Z' and endTime eq '2017-11-20T00:13:55.2780000Z
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - endTime: 2017-11-20T00:13:55.2780000Z
                  metricValues:
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-19T23:53:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-19T23:58:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-20T00:03:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-20T00:08:55.2780000Z
                    total: 0
                  name:
                    localizedValue: Total Requests
                    value: Total Requests
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT5M
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/offlineRegion
  : post:
      description: Offline the specified region for the specified Azure Cosmos DB
        database account.
      operationId: DatabaseAccounts_OfflineRegion
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionForOnlineOffline'
        description: Cosmos DB region to offline for the database account.
        required: true
      responses:
        "200":
          content: {}
          description: The offline region operation is completed successfully.
        "202":
          content: {}
          description: Accepted. The offline region operation will complete asynchronously.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      x-ms-examples:
        CosmosDBDatabaseAccountOfflineRegion:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            region: North Europe
            regionParameterForOffline:
            - region: North Europe
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200": {}
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: regionParameterForOffline
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/onlineRegion
  : post:
      description: Online the specified region for the specified Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_OnlineRegion
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionForOnlineOffline'
        description: Cosmos DB region to online for the database account.
        required: true
      responses:
        "200":
          content: {}
          description: The online region operation is completed successfully.
        "202":
          content: {}
          description: Accepted. The online region operation will complete asynchronously.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      x-ms-examples:
        CosmosDBDatabaseAccountOnlineRegion:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            region: North Europe
            regionParameterForOnline:
            - region: North Europe
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200": {}
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: regionParameterForOnline
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/percentile/metrics
  : get:
      description: Retrieves the metrics determined by the given filter for the given
        database account. This url is only for PBS and Replication Latency data
      operationId: Percentile_ListMetrics
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of metrics\
          \ to return. The parameters that can be filtered are name.value (name of\
          \ the metric, can have an or of multiple names), startTime, endTime, and\
          \ timeGrain. The supported operator is eq."
        in: query
        name: $filter
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PercentileMetricListResult'
          description: The percentile metrics for the account were retrieved successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountRegionGetMetrics:
          parameters:
            $filter: $filter=(name.value eq 'Probabilistic Bounded Staleness') and
              timeGrain eq duration'PT5M' and startTime eq '2017-11-19T23:53:55.2780000Z'
              and endTime eq '2017-11-20T00:13:55.2780000Z
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - endTime: 2017-11-20T00:13:55.2780000Z
                  metricValues:
                  - P10: 1.11
                    P25: 2.5
                    P50: 4.34
                    P75: 5.2
                    P90: 6.77
                    P95: 7.1
                    P99: 8.3
                    timestamp: 2017-11-19T23:53:55.2780000Z
                  name:
                    localizedValue: Probabilistic Bounded Staleness-S-West Central
                      US-T-East US
                    value: Probabilistic Bounded Staleness-S-West Central US-T-East
                      US
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT5M
                  unit: Milliseconds
                - endTime: 2017-11-20T00:13:55.2780000Z
                  metricValues:
                  - P10: 1.11
                    P25: 2.5
                    P50: 4.34
                    P75: 5.2
                    P90: 6.77
                    P95: 7.1
                    P99: 8.3
                    timestamp: 2017-11-19T23:53:55.2780000Z
                  name:
                    localizedValue: Probabilistic Bounded Staleness-S-West Central
                      US-T-West US
                    value: Probabilistic Bounded Staleness-S-West Central US-T-West
                      US
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT5M
                  unit: Milliseconds
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/readonlykeys
  : get:
      description: Lists the read-only access keys for the specified Azure Cosmos
        DB database account.
      operationId: DatabaseAccounts_GetReadOnlyKeys
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountListReadOnlyKeysResult'
          description: The operation completed successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountListReadOnlyKeys:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                primaryReadonlyMasterKey: primaryReadonlyMasterKey
                secondaryReadonlyMasterKey: secondaryReadonlyMasterKey
      x-accepts:
      - application/json
    post:
      description: Lists the read-only access keys for the specified Azure Cosmos
        DB database account.
      operationId: DatabaseAccounts_ListReadOnlyKeys
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountListReadOnlyKeysResult'
          description: The operation completed successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountListReadOnlyKeys:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                primaryReadonlyMasterKey: primaryReadonlyMasterKey
                secondaryReadonlyMasterKey: secondaryReadonlyMasterKey
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/regenerateKey
  : post:
      description: Regenerates an access key for the specified Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_RegenerateKey
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseAccountRegenerateKeyParameters'
        description: The name of the key to regenerate.
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "202":
          content: {}
          description: Accepted. The regenerate key operation will complete asynchronously.
      x-ms-examples:
        CosmosDBDatabaseAccountRegenerateKey:
          parameters:
            accountName: ddb1
            api-version: 2015-11-06
            keyToRegenerate:
              keyKind: primary
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200": {}
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: keyToRegenerate
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/metrics
  : get:
      description: "Retrieves the metrics determined by the given filter for the given\
        \ database account, collection and region."
      operationId: CollectionRegion_ListMetrics
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "Cosmos DB region, with spaces between words and each word capitalized."
        in: path
        name: region
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database rid.
        in: path
        name: databaseRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection rid.
        in: path
        name: collectionRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of metrics\
          \ to return. The parameters that can be filtered are name.value (name of\
          \ the metric, can have an or of multiple names), startTime, endTime, and\
          \ timeGrain. The supported operator is eq."
        in: query
        name: $filter
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricListResult'
          description: The metrics for the database account were retrieved successfully.
      x-ms-examples:
        CosmosDBRegionCollectionGetMetrics:
          parameters:
            $filter: $filter=(name.value eq 'Total Requests') and timeGrain eq duration'PT5M'
              and startTime eq '2017-11-19T23:53:55.2780000Z' and endTime eq '2017-11-20T00:13:55.2780000Z
            accountName: ddb1
            api-version: 2015-11-06
            collectionRid: collectionRid
            databaseRid: databaseRid
            region: North Europe
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - endTime: 2017-11-20T00:13:55.2780000Z
                  metricValues:
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-19T23:53:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-19T23:58:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-20T00:03:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-20T00:08:55.2780000Z
                    total: 0
                  name:
                    localizedValue: Total Requests
                    value: Total Requests
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT5M
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/partitionKeyRangeId/{partitionKeyRangeId}/metrics
  : get:
      description: Retrieves the metrics determined by the given filter for the given
        partition key range id and region.
      operationId: PartitionKeyRangeIdRegion_ListMetrics
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "Cosmos DB region, with spaces between words and each word capitalized."
        in: path
        name: region
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database rid.
        in: path
        name: databaseRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection rid.
        in: path
        name: collectionRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Partition Key Range Id for which to get data.
        in: path
        name: partitionKeyRangeId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of metrics\
          \ to return. The parameters that can be filtered are name.value (name of\
          \ the metric, can have an or of multiple names), startTime, endTime, and\
          \ timeGrain. The supported operator is eq."
        in: query
        name: $filter
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionMetricListResult'
          description: The partition-level metrics for the partition key range id
            and region were retrieved successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountRegionGetMetrics:
          parameters:
            $filter: $filter=(name.value eq 'Max RUs Per Second') and timeGrain eq
              duration'PT1M' and startTime eq '2017-11-19T23:53:55.2780000Z' and endTime
              eq '2017-11-20T23:58:55.2780000Z
            accountName: ddb1
            api-version: 2015-11-06
            collectionRid: collectionRid
            databaseRid: databaseRid
            partitionKeyRangeId: "0"
            region: West US
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - endTime: 2017-11-20T23:58:55.2780000Z
                  metricValues:
                  - maximum: 5
                    timestamp: 2017-11-19T23:53:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:54:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:55:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:56:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:57:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:58:55.2780000Z
                  name:
                    localizedValue: Max RUs Per Second
                    value: Max RUs Per Second
                  partitionId: 00000000-0000-0000-0000-000000000000
                  partitionKeyRangeId: "0"
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT1M
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/partitions/metrics
  : get:
      description: "Retrieves the metrics determined by the given filter for the given\
        \ collection and region, split by partition."
      operationId: CollectionPartitionRegion_ListMetrics
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "Cosmos DB region, with spaces between words and each word capitalized."
        in: path
        name: region
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database rid.
        in: path
        name: databaseRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB collection rid.
        in: path
        name: collectionRid
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of metrics\
          \ to return. The parameters that can be filtered are name.value (name of\
          \ the metric, can have an or of multiple names), startTime, endTime, and\
          \ timeGrain. The supported operator is eq."
        in: query
        name: $filter
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionMetricListResult'
          description: The partition-level metrics for the collection and region were
            retrieved successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountRegionGetMetrics:
          parameters:
            $filter: $filter=(name.value eq 'Max RUs Per Second') and timeGrain eq
              duration'PT1M' and startTime eq '2017-11-19T23:53:55.2780000Z' and endTime
              eq '2017-11-20T23:58:55.2780000Z
            accountName: ddb1
            api-version: 2015-11-06
            collectionRid: collectionRid
            databaseRid: databaseRid
            region: North Europe
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - endTime: 2017-11-20T23:58:55.2780000Z
                  metricValues:
                  - maximum: 5
                    timestamp: 2017-11-19T23:53:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:54:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:55:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:56:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:57:55.2780000Z
                  - maximum: 5
                    timestamp: 2017-11-19T23:58:55.2780000Z
                  name:
                    localizedValue: Max RUs Per Second
                    value: Max RUs Per Second
                  partitionId: 00000000-0000-0000-0000-000000000000
                  partitionKeyRangeId: "0"
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT1M
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/metrics
  : get:
      description: Retrieves the metrics determined by the given filter for the given
        database account and region.
      operationId: DatabaseAccountRegion_ListMetrics
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "Cosmos DB region, with spaces between words and each word capitalized."
        in: path
        name: region
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of metrics\
          \ to return. The parameters that can be filtered are name.value (name of\
          \ the metric, can have an or of multiple names), startTime, endTime, and\
          \ timeGrain. The supported operator is eq."
        in: query
        name: $filter
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricListResult'
          description: The metrics for the database account were retrieved successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountRegionGetMetrics:
          parameters:
            $filter: $filter=(name.value eq 'Total Requests') and timeGrain eq duration'PT5M'
              and startTime eq '2017-11-19T23:53:55.2780000Z' and endTime eq '2017-11-20T00:13:55.2780000Z
            accountName: ddb1
            api-version: 2015-11-06
            region: North Europe
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - endTime: 2017-11-20T00:13:55.2780000Z
                  metricValues:
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-19T23:53:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-19T23:58:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-20T00:03:55.2780000Z
                    total: 0
                  - _count: 0
                    average: 0
                    timestamp: 2017-11-20T00:08:55.2780000Z
                    total: 0
                  name:
                    localizedValue: Total Requests
                    value: Total Requests
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT5M
                  unit: Count
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sourceRegion/{sourceRegion}/targetRegion/{targetRegion}/percentile/metrics
  : get:
      description: "Retrieves the metrics determined by the given filter for the given\
        \ account, source and target region. This url is only for PBS and Replication\
        \ Latency data"
      operationId: PercentileSourceTarget_ListMetrics
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "Source region from which data is written. Cosmos DB region,\
          \ with spaces between words and each word capitalized."
        in: path
        name: sourceRegion
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "Target region to which data is written. Cosmos DB region, with\
          \ spaces between words and each word capitalized."
        in: path
        name: targetRegion
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of metrics\
          \ to return. The parameters that can be filtered are name.value (name of\
          \ the metric, can have an or of multiple names), startTime, endTime, and\
          \ timeGrain. The supported operator is eq."
        in: query
        name: $filter
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PercentileMetricListResult'
          description: "The percentile metrics for the account, source and target\
            \ regions were retrieved successfully."
      x-ms-examples:
        CosmosDBDatabaseAccountRegionGetMetrics:
          parameters:
            $filter: $filter=(name.value eq 'Probabilistic Bounded Staleness') and
              timeGrain eq duration'PT5M' and startTime eq '2017-11-19T23:53:55.2780000Z'
              and endTime eq '2017-11-20T00:13:55.2780000Z
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            sourceRegion: West Central US
            subscriptionId: subid
            targetRegion: East US
          responses:
            "200":
              body:
                value:
                - endTime: 2017-11-20T00:13:55.2780000Z
                  metricValues:
                  - P10: 1.11
                    P25: 2.5
                    P50: 4.34
                    P75: 5.2
                    P90: 6.77
                    P95: 7.1
                    P99: 8.3
                    timestamp: 2017-11-19T23:53:55.2780000Z
                  name:
                    localizedValue: Probabilistic Bounded Staleness-S-West Central
                      US-T-East US
                    value: Probabilistic Bounded Staleness-S-West Central US-T-East
                      US
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT5M
                  unit: Milliseconds
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/targetRegion/{targetRegion}/percentile/metrics
  : get:
      description: Retrieves the metrics determined by the given filter for the given
        account target region. This url is only for PBS and Replication Latency data
      operationId: PercentileTarget_ListMetrics
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "Target region to which data is written. Cosmos DB region, with\
          \ spaces between words and each word capitalized."
        in: path
        name: targetRegion
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of metrics\
          \ to return. The parameters that can be filtered are name.value (name of\
          \ the metric, can have an or of multiple names), startTime, endTime, and\
          \ timeGrain. The supported operator is eq."
        in: query
        name: $filter
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PercentileMetricListResult'
          description: The percentile metrics for the account and target regions were
            retrieved successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountRegionGetMetrics:
          parameters:
            $filter: $filter=(name.value eq 'Probabilistic Bounded Staleness') and
              timeGrain eq duration'PT5M' and startTime eq '2017-11-19T23:53:55.2780000Z'
              and endTime eq '2017-11-20T00:13:55.2780000Z
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
            targetRegion: East US
          responses:
            "200":
              body:
                value:
                - endTime: 2017-11-20T00:13:55.2780000Z
                  metricValues:
                  - P10: 1.11
                    P25: 2.5
                    P50: 4.34
                    P75: 5.2
                    P90: 6.77
                    P95: 7.1
                    P99: 8.3
                    timestamp: 2017-11-19T23:53:55.2780000Z
                  name:
                    localizedValue: Probabilistic Bounded Staleness-S-West Central
                      US-T-East US
                    value: Probabilistic Bounded Staleness-S-West Central US-T-East
                      US
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT5M
                  unit: Milliseconds
                - endTime: 2017-11-20T00:13:55.2780000Z
                  metricValues:
                  - P10: 1.11
                    P25: 2.5
                    P50: 4.34
                    P75: 5.2
                    P90: 6.77
                    P95: 7.1
                    P99: 8.3
                    timestamp: 2017-11-19T23:53:55.2780000Z
                  name:
                    localizedValue: Probabilistic Bounded Staleness-S-West Central
                      US-T-West US
                    value: Probabilistic Bounded Staleness-S-West US-T-East US
                  startTime: 2017-11-19T23:53:55.2780000Z
                  timeGrain: PT5M
                  unit: Milliseconds
      x-ms-pageable: {}
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/usages
  : get:
      description: Retrieves the usages (most recent data) for the given database
        account.
      operationId: DatabaseAccounts_ListUsages
      parameters:
      - description: Azure subscription ID.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Name of an Azure resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Cosmos DB database account name.
        in: path
        name: accountName
        required: true
        schema:
          maxLength: 50
          minLength: 3
          pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request. The current
          version is 2015-04-08.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: "An OData filter expression that describes a subset of usages\
          \ to return. The supported parameter is name.value (name of the metric,\
          \ can have an or of multiple names)."
        in: query
        name: $filter
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesResult'
          description: The usages for the database account were retrieved successfully.
      x-ms-examples:
        CosmosDBDatabaseAccountGetUsages:
          parameters:
            $filter: $filter=name.value eq 'Storage'
            accountName: ddb1
            api-version: 2015-11-06
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - currentValue: 0
                  limit: 10737418240
                  name:
                    localizedValue: Storage
                    value: Storage
                  quotaPeriod: P1D
                  unit: Bytes
      x-ms-pageable: {}
      x-accepts:
      - application/json
components:
  parameters:
    accountNameParameter:
      description: Cosmos DB database account name.
      in: path
      name: accountName
      required: true
      schema:
        maxLength: 50
        minLength: 3
        pattern: "^[a-z0-9]+(-[a-z0-9]+)*"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    apiVersionParameter:
      description: Version of the API to be used with the client request. The current
        version is 2015-04-08.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    collectionNameParameter:
      description: Cosmos DB collection name.
      in: path
      name: collectionName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    collectionRidParameter:
      description: Cosmos DB collection rid.
      in: path
      name: collectionRid
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    containerNameParameter:
      description: Cosmos DB container name.
      in: path
      name: containerName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    databaseNameParameter:
      description: Cosmos DB database name.
      in: path
      name: databaseName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    databaseRidParameter:
      description: Cosmos DB database rid.
      in: path
      name: databaseRid
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    filterParameter:
      description: "An OData filter expression that describes a subset of metrics\
        \ to return. The parameters that can be filtered are name.value (name of the\
        \ metric, can have an or of multiple names), startTime, endTime, and timeGrain.\
        \ The supported operator is eq."
      in: query
      name: $filter
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    graphNameParameter:
      description: Cosmos DB graph name.
      in: path
      name: graphName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    keyspaceNameParameter:
      description: Cosmos DB keyspace name.
      in: path
      name: keyspaceName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    partitionKeyRangeIdParameter:
      description: Partition Key Range Id for which to get data.
      in: path
      name: partitionKeyRangeId
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    regionParameter:
      description: "Cosmos DB region, with spaces between words and each word capitalized."
      in: path
      name: region
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    resourceGroupNameParameter:
      description: Name of an Azure resource group.
      in: path
      name: resourceGroupName
      required: true
      schema:
        maxLength: 90
        minLength: 1
        pattern: "^[-\\w\\._\\(\\)]+$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    sourceRegionParameter:
      description: "Source region from which data is written. Cosmos DB region, with\
        \ spaces between words and each word capitalized."
      in: path
      name: sourceRegion
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    subscriptionIdParameter:
      description: Azure subscription ID.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
    tableNameParameter:
      description: Cosmos DB table name.
      in: path
      name: tableName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    targetRegionParameter:
      description: "Target region to which data is written. Cosmos DB region, with\
        \ spaces between words and each word capitalized."
      in: path
      name: targetRegion
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    usageFilterParameter:
      description: "An OData filter expression that describes a subset of usages to\
        \ return. The supported parameter is name.value (name of the metric, can have\
        \ an or of multiple names)."
      in: query
      name: $filter
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  schemas:
    Capability:
      description: Cosmos DB capability object
      example:
        name: name
      properties:
        name:
          description: "Name of the Cosmos DB capability. For example, \"name\": \"\
            EnableCassandra\". Current values also include \"EnableTable\" and \"\
            EnableGremlin\"."
          type: string
      type: object
    CassandraKeyspace:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: An Azure Cosmos DB Cassandra keyspace.
      example:
        properties:
          id: id
      properties:
        properties:
          $ref: '#/components/schemas/CassandraKeyspaceProperties'
    CassandraKeyspaceCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB Cassandra keyspace.
      example:
        properties:
          resource:
            id: id
          options:
            key: options
      properties:
        properties:
          $ref: '#/components/schemas/CassandraKeyspaceCreateUpdateProperties'
      required:
      - properties
      type: object
    CassandraKeyspaceCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB Cassandra keyspace.
      example:
        resource:
          id: id
        options:
          key: options
      properties:
        options:
          additionalProperties:
            type: string
          description: "CreateUpdateOptions are a list of key-value pairs that describe\
            \ the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"\
            Session-Token\" and \"Throughput\""
          type: object
        resource:
          $ref: '#/components/schemas/CassandraKeyspaceResource'
      required:
      - options
      - resource
      type: object
    CassandraKeyspaceListResult:
      description: "The List operation response, that contains the Cassandra keyspaces\
        \ and their properties."
      example:
        value:
        - properties:
            id: id
        - properties:
            id: id
      properties:
        value:
          description: List of Cassandra keyspaces and their properties.
          items:
            $ref: '#/components/schemas/CassandraKeyspace'
          readOnly: true
          type: array
      type: object
    CassandraKeyspaceProperties:
      allOf:
      - $ref: '#/components/schemas/CassandraKeyspaceResource'
      description: The properties of an Azure Cosmos DB Cassandra keyspace
      example:
        id: id
    CassandraKeyspaceResource:
      description: Cosmos DB Cassandra keyspace id object
      example:
        id: id
      properties:
        id:
          description: Name of the Cosmos DB Cassandra keyspace
          type: string
      required:
      - id
      type: object
    CassandraPartitionKey:
      description: Cosmos DB Cassandra table partition key
      example:
        name: name
      properties:
        name:
          description: Name of the Cosmos DB Cassandra table partition key
          type: string
      type: object
    CassandraSchema:
      description: Cosmos DB Cassandra table schema
      example:
        columns:
        - name: name
          type: type
        - name: name
          type: type
        partitionKeys:
        - name: name
        - name: name
        clusterKeys:
        - name: name
          orderBy: orderBy
        - name: name
          orderBy: orderBy
      properties:
        clusterKeys:
          description: List of cluster key.
          items:
            $ref: '#/components/schemas/ClusterKey'
          type: array
        columns:
          description: List of Cassandra table columns.
          items:
            $ref: '#/components/schemas/Column'
          type: array
        partitionKeys:
          description: List of partition key.
          items:
            $ref: '#/components/schemas/CassandraPartitionKey'
          type: array
      type: object
    CassandraTable:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: An Azure Cosmos DB Cassandra table.
      example:
        properties:
          schema:
            columns:
            - name: name
              type: type
            - name: name
              type: type
            partitionKeys:
            - name: name
            - name: name
            clusterKeys:
            - name: name
              orderBy: orderBy
            - name: name
              orderBy: orderBy
          defaultTtl: 0
          id: id
      properties:
        properties:
          $ref: '#/components/schemas/CassandraTableProperties'
    CassandraTableCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB Cassandra table.
      example:
        properties:
          resource:
            schema:
              columns:
              - name: name
                type: type
              - name: name
                type: type
              partitionKeys:
              - name: name
              - name: name
              clusterKeys:
              - name: name
                orderBy: orderBy
              - name: name
                orderBy: orderBy
            defaultTtl: 0
            id: id
          options:
            key: options
      properties:
        properties:
          $ref: '#/components/schemas/CassandraTableCreateUpdateProperties'
      required:
      - properties
      type: object
    CassandraTableCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB Cassandra table.
      example:
        resource:
          schema:
            columns:
            - name: name
              type: type
            - name: name
              type: type
            partitionKeys:
            - name: name
            - name: name
            clusterKeys:
            - name: name
              orderBy: orderBy
            - name: name
              orderBy: orderBy
          defaultTtl: 0
          id: id
        options:
          key: options
      properties:
        options:
          additionalProperties:
            type: string
          description: "CreateUpdateOptions are a list of key-value pairs that describe\
            \ the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"\
            Session-Token\" and \"Throughput\""
          type: object
        resource:
          $ref: '#/components/schemas/CassandraTableResource'
      required:
      - options
      - resource
      type: object
    CassandraTableListResult:
      description: "The List operation response, that contains the Cassandra tables\
        \ and their properties."
      example:
        value:
        - properties:
            schema:
              columns:
              - name: name
                type: type
              - name: name
                type: type
              partitionKeys:
              - name: name
              - name: name
              clusterKeys:
              - name: name
                orderBy: orderBy
              - name: name
                orderBy: orderBy
            defaultTtl: 0
            id: id
        - properties:
            schema:
              columns:
              - name: name
                type: type
              - name: name
                type: type
              partitionKeys:
              - name: name
              - name: name
              clusterKeys:
              - name: name
                orderBy: orderBy
              - name: name
                orderBy: orderBy
            defaultTtl: 0
            id: id
      properties:
        value:
          description: List of Cassandra tables and their properties.
          items:
            $ref: '#/components/schemas/CassandraTable'
          readOnly: true
          type: array
      type: object
    CassandraTableProperties:
      allOf:
      - $ref: '#/components/schemas/CassandraTableResource'
      description: The properties of an Azure Cosmos DB Cassandra table
      example:
        schema:
          columns:
          - name: name
            type: type
          - name: name
            type: type
          partitionKeys:
          - name: name
          - name: name
          clusterKeys:
          - name: name
            orderBy: orderBy
          - name: name
            orderBy: orderBy
        defaultTtl: 0
        id: id
    CassandraTableResource:
      description: Cosmos DB Cassandra table id object
      example:
        schema:
          columns:
          - name: name
            type: type
          - name: name
            type: type
          partitionKeys:
          - name: name
          - name: name
          clusterKeys:
          - name: name
            orderBy: orderBy
          - name: name
            orderBy: orderBy
        defaultTtl: 0
        id: id
      properties:
        defaultTtl:
          description: Time to live of the Cosmos DB Cassandra table
          type: integer
        id:
          description: Name of the Cosmos DB Cassandra table
          type: string
        schema:
          $ref: '#/components/schemas/CassandraSchema'
      required:
      - id
      type: object
    ClusterKey:
      description: Cosmos DB Cassandra table cluster key
      example:
        name: name
        orderBy: orderBy
      properties:
        name:
          description: Name of the Cosmos DB Cassandra table cluster key
          type: string
        orderBy:
          description: "Order of the Cosmos DB Cassandra table cluster key, only support\
            \ \"Asc\" and \"Desc\""
          type: string
      type: object
    Column:
      description: Cosmos DB Cassandra table column
      example:
        name: name
        type: type
      properties:
        name:
          description: Name of the Cosmos DB Cassandra table column
          type: string
        type:
          description: Type of the Cosmos DB Cassandra table column
          type: string
      type: object
    ConflictResolutionPolicy:
      description: The conflict resolution policy for the container.
      example:
        mode: LastWriterWins
        conflictResolutionProcedure: conflictResolutionProcedure
        conflictResolutionPath: conflictResolutionPath
      properties:
        conflictResolutionPath:
          description: The conflict resolution path in the case of LastWriterWins
            mode.
          type: string
        conflictResolutionProcedure:
          description: The procedure to resolve conflicts in the case of custom mode.
          type: string
        mode:
          default: LastWriterWins
          description: Indicates the conflict resolution mode.
          enum:
          - LastWriterWins
          - Custom
          type: string
          x-ms-enum:
            modelAsString: true
            name: ConflictResolutionMode
      type: object
    ConnectorOffer:
      description: The cassandra connector offer type for the Cosmos DB C* database
        account.
      enum:
      - Small
      type: string
      x-ms-enum:
        modelAsString: true
        name: ConnectorOffer
    ConsistencyPolicy:
      description: The consistency policy for the Cosmos DB database account.
      example:
        maxStalenessPrefix: 1294386359
        defaultConsistencyLevel: Eventual
        maxIntervalInSeconds: 6923
      properties:
        defaultConsistencyLevel:
          description: The default consistency level and configuration settings of
            the Cosmos DB account.
          enum:
          - Eventual
          - Session
          - BoundedStaleness
          - Strong
          - ConsistentPrefix
          type: string
          x-ms-enum:
            modelAsString: false
            name: DefaultConsistencyLevel
        maxIntervalInSeconds:
          description: "When used with the Bounded Staleness consistency level, this\
            \ value represents the time amount of staleness (in seconds) tolerated.\
            \ Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy\
            \ is set to 'BoundedStaleness'."
          format: int32
          maximum: 86400
          minimum: 5
          type: integer
        maxStalenessPrefix:
          description: "When used with the Bounded Staleness consistency level, this\
            \ value represents the number of stale requests tolerated. Accepted range\
            \ for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy\
            \ is set to 'BoundedStaleness'."
          format: int64
          maximum: 2147483647
          minimum: 1
          type: integer
      required:
      - defaultConsistencyLevel
      type: object
    ContainerPartitionKey:
      description: The configuration of the partition key to be used for partitioning
        data into multiple partitions
      example:
        kind: Hash
        paths:
        - null
        - null
      properties:
        kind:
          default: Hash
          description: Indicates the kind of algorithm used for partitioning
          enum:
          - Hash
          - Range
          type: string
          x-ms-enum:
            modelAsString: true
            name: PartitionKind
        paths:
          description: List of paths using which data within the container can be
            partitioned
          items:
            $ref: '#/components/schemas/Path'
          type: array
      type: object
    CreateUpdateOptions:
      additionalProperties:
        type: string
      description: "CreateUpdateOptions are a list of key-value pairs that describe\
        \ the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\"\
        \ and \"Throughput\""
      type: object
    DatabaseAccount:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: An Azure Cosmos DB database account.
      example:
        kind: GlobalDocumentDB
        properties:
          ipRangeFilter: ipRangeFilter
          writeLocations:
          - failoverPriority: 0
            locationName: locationName
            documentEndpoint: documentEndpoint
            id: id
            provisioningState: provisioningState
            isZoneRedundant: true
          - failoverPriority: 0
            locationName: locationName
            documentEndpoint: documentEndpoint
            id: id
            provisioningState: provisioningState
            isZoneRedundant: true
          capabilities:
          - name: name
          - name: name
          connectorOffer: Small
          documentEndpoint: documentEndpoint
          provisioningState: provisioningState
          virtualNetworkRules:
          - id: id
            ignoreMissingVNetServiceEndpoint: true
          - id: id
            ignoreMissingVNetServiceEndpoint: true
          enableAutomaticFailover: true
          enableCassandraConnector: true
          enableMultipleWriteLocations: true
          consistencyPolicy:
            maxStalenessPrefix: 1294386359
            defaultConsistencyLevel: Eventual
            maxIntervalInSeconds: 6923
          failoverPolicies:
          - failoverPriority: 0
            locationName: locationName
            id: id
          - failoverPriority: 0
            locationName: locationName
            id: id
          readLocations:
          - failoverPriority: 0
            locationName: locationName
            documentEndpoint: documentEndpoint
            id: id
            provisioningState: provisioningState
            isZoneRedundant: true
          - failoverPriority: 0
            locationName: locationName
            documentEndpoint: documentEndpoint
            id: id
            provisioningState: provisioningState
            isZoneRedundant: true
          databaseAccountOfferType: Standard
          isVirtualNetworkFilterEnabled: true
      properties:
        kind:
          default: GlobalDocumentDB
          description: Indicates the type of database account. This can only be set
            at database account creation.
          enum:
          - GlobalDocumentDB
          - MongoDB
          - Parse
          type: string
          x-ms-enum:
            modelAsString: true
            name: DatabaseAccountKind
        properties:
          $ref: '#/components/schemas/DatabaseAccountProperties'
    DatabaseAccountConnectionString:
      description: Connection string for the Cosmos DB account
      example:
        connectionString: connectionString
        description: description
      properties:
        connectionString:
          description: Value of the connection string
          readOnly: true
          type: string
        description:
          description: Description of the connection string
          readOnly: true
          type: string
      type: object
    DatabaseAccountCreateUpdateParameters:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: Parameters to create and update Cosmos DB database accounts.
      example:
        kind: GlobalDocumentDB
        properties:
          ipRangeFilter: ipRangeFilter
          enableCassandraConnector: true
          enableMultipleWriteLocations: true
          capabilities:
          - name: name
          - name: name
          connectorOffer: Small
          consistencyPolicy:
            maxStalenessPrefix: 1294386359
            defaultConsistencyLevel: Eventual
            maxIntervalInSeconds: 6923
          databaseAccountOfferType: Standard
          locations:
          - failoverPriority: 0
            locationName: locationName
            documentEndpoint: documentEndpoint
            id: id
            provisioningState: provisioningState
            isZoneRedundant: true
          - failoverPriority: 0
            locationName: locationName
            documentEndpoint: documentEndpoint
            id: id
            provisioningState: provisioningState
            isZoneRedundant: true
          virtualNetworkRules:
          - id: id
            ignoreMissingVNetServiceEndpoint: true
          - id: id
            ignoreMissingVNetServiceEndpoint: true
          isVirtualNetworkFilterEnabled: true
          enableAutomaticFailover: true
      properties:
        kind:
          default: GlobalDocumentDB
          description: Indicates the type of database account. This can only be set
            at database account creation.
          enum:
          - GlobalDocumentDB
          - MongoDB
          - Parse
          type: string
          x-ms-enum:
            modelAsString: true
            name: DatabaseAccountKind
        properties:
          $ref: '#/components/schemas/DatabaseAccountCreateUpdateProperties'
      required:
      - properties
    DatabaseAccountCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB database accounts.
      example:
        ipRangeFilter: ipRangeFilter
        enableCassandraConnector: true
        enableMultipleWriteLocations: true
        capabilities:
        - name: name
        - name: name
        connectorOffer: Small
        consistencyPolicy:
          maxStalenessPrefix: 1294386359
          defaultConsistencyLevel: Eventual
          maxIntervalInSeconds: 6923
        databaseAccountOfferType: Standard
        locations:
        - failoverPriority: 0
          locationName: locationName
          documentEndpoint: documentEndpoint
          id: id
          provisioningState: provisioningState
          isZoneRedundant: true
        - failoverPriority: 0
          locationName: locationName
          documentEndpoint: documentEndpoint
          id: id
          provisioningState: provisioningState
          isZoneRedundant: true
        virtualNetworkRules:
        - id: id
          ignoreMissingVNetServiceEndpoint: true
        - id: id
          ignoreMissingVNetServiceEndpoint: true
        isVirtualNetworkFilterEnabled: true
        enableAutomaticFailover: true
      properties:
        capabilities:
          description: List of Cosmos DB capabilities for the account
          items:
            $ref: '#/components/schemas/Capability'
          type: array
        connectorOffer:
          $ref: '#/components/schemas/ConnectorOffer'
        consistencyPolicy:
          $ref: '#/components/schemas/ConsistencyPolicy'
        databaseAccountOfferType:
          $ref: '#/components/schemas/DatabaseAccountOfferType'
        enableAutomaticFailover:
          description: Enables automatic failover of the write region in the rare
            event that the region is unavailable due to an outage. Automatic failover
            will result in a new write region for the account and is chosen based
            on the failover priorities configured for the account.
          type: boolean
        enableCassandraConnector:
          description: Enables the cassandra connector on the Cosmos DB C* account
          type: boolean
        enableMultipleWriteLocations:
          description: Enables the account to write in multiple locations
          type: boolean
        ipRangeFilter:
          description: "Cosmos DB Firewall Support: This value specifies the set of\
            \ IP addresses or IP address ranges in CIDR form to be included as the\
            \ allowed list of client IPs for a given database account. IP addresses/ranges\
            \ must be comma separated and must not contain any spaces."
          type: string
        isVirtualNetworkFilterEnabled:
          description: Flag to indicate whether to enable/disable Virtual Network
            ACL rules.
          type: boolean
        locations:
          description: An array that contains the georeplication locations enabled
            for the Cosmos DB account.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        virtualNetworkRules:
          description: List of Virtual Network ACL rules configured for the Cosmos
            DB account.
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          type: array
      required:
      - databaseAccountOfferType
      - locations
      type: object
    DatabaseAccountListConnectionStringsResult:
      description: The connection strings for the given database account.
      example:
        connectionStrings:
        - connectionString: connectionString
          description: description
        - connectionString: connectionString
          description: description
      properties:
        connectionStrings:
          description: An array that contains the connection strings for the Cosmos
            DB account.
          items:
            $ref: '#/components/schemas/DatabaseAccountConnectionString'
          type: array
      type: object
    DatabaseAccountListKeysResult:
      allOf:
      - $ref: '#/components/schemas/DatabaseAccountListReadOnlyKeysResult'
      description: The access keys for the given database account.
      example:
        primaryMasterKey: primaryMasterKey
        secondaryMasterKey: secondaryMasterKey
      properties:
        primaryMasterKey:
          description: Base 64 encoded value of the primary read-write key.
          readOnly: true
          type: string
        secondaryMasterKey:
          description: Base 64 encoded value of the secondary read-write key.
          readOnly: true
          type: string
    DatabaseAccountListReadOnlyKeysResult:
      description: The read-only access keys for the given database account.
      example:
        secondaryReadonlyMasterKey: secondaryReadonlyMasterKey
        primaryReadonlyMasterKey: primaryReadonlyMasterKey
      properties:
        primaryReadonlyMasterKey:
          description: Base 64 encoded value of the primary read-only key.
          readOnly: true
          type: string
        secondaryReadonlyMasterKey:
          description: Base 64 encoded value of the secondary read-only key.
          readOnly: true
          type: string
      type: object
    DatabaseAccountOfferType:
      description: The offer type for the Cosmos DB database account.
      enum:
      - Standard
      type: string
      x-ms-enum:
        modelAsString: false
        name: DatabaseAccountOfferType
    DatabaseAccountPatchParameters:
      description: Parameters for patching Azure Cosmos DB database account properties.
      example:
        properties:
          capabilities:
          - name: name
          - name: name
        tags:
          key: tags
      properties:
        properties:
          $ref: '#/components/schemas/DatabaseAccountPatchProperties'
        tags:
          additionalProperties:
            type: string
          description: "Tags are a list of key-value pairs that describe the resource.\
            \ These tags can be used in viewing and grouping this resource (across\
            \ resource groups). A maximum of 15 tags can be provided for a resource.\
            \ Each tag must have a key no greater than 128 characters and value no\
            \ greater than 256 characters. For example, the default experience for\
            \ a template type is set with \"defaultExperience\": \"Cassandra\". Current\
            \ \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\"\
            , and \"MongoDB\"."
          type: object
      type: object
    DatabaseAccountPatchProperties:
      description: Properties to update Azure Cosmos DB database accounts.
      example:
        capabilities:
        - name: name
        - name: name
      properties:
        capabilities:
          description: List of Cosmos DB capabilities for the account
          items:
            $ref: '#/components/schemas/Capability'
          type: array
      type: object
    DatabaseAccountProperties:
      description: Properties for the database account.
      example:
        ipRangeFilter: ipRangeFilter
        writeLocations:
        - failoverPriority: 0
          locationName: locationName
          documentEndpoint: documentEndpoint
          id: id
          provisioningState: provisioningState
          isZoneRedundant: true
        - failoverPriority: 0
          locationName: locationName
          documentEndpoint: documentEndpoint
          id: id
          provisioningState: provisioningState
          isZoneRedundant: true
        capabilities:
        - name: name
        - name: name
        connectorOffer: Small
        documentEndpoint: documentEndpoint
        provisioningState: provisioningState
        virtualNetworkRules:
        - id: id
          ignoreMissingVNetServiceEndpoint: true
        - id: id
          ignoreMissingVNetServiceEndpoint: true
        enableAutomaticFailover: true
        enableCassandraConnector: true
        enableMultipleWriteLocations: true
        consistencyPolicy:
          maxStalenessPrefix: 1294386359
          defaultConsistencyLevel: Eventual
          maxIntervalInSeconds: 6923
        failoverPolicies:
        - failoverPriority: 0
          locationName: locationName
          id: id
        - failoverPriority: 0
          locationName: locationName
          id: id
        readLocations:
        - failoverPriority: 0
          locationName: locationName
          documentEndpoint: documentEndpoint
          id: id
          provisioningState: provisioningState
          isZoneRedundant: true
        - failoverPriority: 0
          locationName: locationName
          documentEndpoint: documentEndpoint
          id: id
          provisioningState: provisioningState
          isZoneRedundant: true
        databaseAccountOfferType: Standard
        isVirtualNetworkFilterEnabled: true
      properties:
        capabilities:
          description: List of Cosmos DB capabilities for the account
          items:
            $ref: '#/components/schemas/Capability'
          type: array
        connectorOffer:
          $ref: '#/components/schemas/ConnectorOffer'
        consistencyPolicy:
          $ref: '#/components/schemas/ConsistencyPolicy'
        databaseAccountOfferType:
          $ref: '#/components/schemas/DatabaseAccountOfferType'
        documentEndpoint:
          description: The connection endpoint for the Cosmos DB database account.
          readOnly: true
          type: string
        enableAutomaticFailover:
          description: Enables automatic failover of the write region in the rare
            event that the region is unavailable due to an outage. Automatic failover
            will result in a new write region for the account and is chosen based
            on the failover priorities configured for the account.
          type: boolean
        enableCassandraConnector:
          description: Enables the cassandra connector on the Cosmos DB C* account
          type: boolean
        enableMultipleWriteLocations:
          description: Enables the account to write in multiple locations
          type: boolean
        failoverPolicies:
          description: An array that contains the regions ordered by their failover
            priorities.
          items:
            $ref: '#/components/schemas/FailoverPolicy'
          readOnly: true
          type: array
        ipRangeFilter:
          description: "Cosmos DB Firewall Support: This value specifies the set of\
            \ IP addresses or IP address ranges in CIDR form to be included as the\
            \ allowed list of client IPs for a given database account. IP addresses/ranges\
            \ must be comma separated and must not contain any spaces."
          type: string
        isVirtualNetworkFilterEnabled:
          description: Flag to indicate whether to enable/disable Virtual Network
            ACL rules.
          type: boolean
        provisioningState:
          description: "The status of the Cosmos DB account at the time the operation\
            \ was called. The status can be one of following. 'Creating' – the Cosmos\
            \ DB account is being created. When an account is in Creating state, only\
            \ properties that are specified as input for the Create Cosmos DB account\
            \ operation are returned. 'Succeeded' – the Cosmos DB account is active\
            \ for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting'\
            \ – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account\
            \ failed creation."
          type: string
        readLocations:
          description: An array that contains of the read locations enabled for the
            Cosmos DB account.
          items:
            $ref: '#/components/schemas/Location'
          readOnly: true
          type: array
        virtualNetworkRules:
          description: List of Virtual Network ACL rules configured for the Cosmos
            DB account.
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          type: array
        writeLocations:
          description: An array that contains the write location for the Cosmos DB
            account.
          items:
            $ref: '#/components/schemas/Location'
          readOnly: true
          type: array
      type: object
    DatabaseAccountRegenerateKeyParameters:
      description: Parameters to regenerate the keys within the database account.
      example:
        keyKind: primary
      properties:
        keyKind:
          description: The access key to regenerate.
          enum:
          - primary
          - secondary
          - primaryReadonly
          - secondaryReadonly
          type: string
          x-ms-enum:
            modelAsString: true
            name: KeyKind
      required:
      - keyKind
      type: object
    DatabaseAccountsListResult:
      description: "The List operation response, that contains the database accounts\
        \ and their properties."
      example:
        value:
        - kind: GlobalDocumentDB
          properties:
            ipRangeFilter: ipRangeFilter
            writeLocations:
            - failoverPriority: 0
              locationName: locationName
              documentEndpoint: documentEndpoint
              id: id
              provisioningState: provisioningState
              isZoneRedundant: true
            - failoverPriority: 0
              locationName: locationName
              documentEndpoint: documentEndpoint
              id: id
              provisioningState: provisioningState
              isZoneRedundant: true
            capabilities:
            - name: name
            - name: name
            connectorOffer: Small
            documentEndpoint: documentEndpoint
            provisioningState: provisioningState
            virtualNetworkRules:
            - id: id
              ignoreMissingVNetServiceEndpoint: true
            - id: id
              ignoreMissingVNetServiceEndpoint: true
            enableAutomaticFailover: true
            enableCassandraConnector: true
            enableMultipleWriteLocations: true
            consistencyPolicy:
              maxStalenessPrefix: 1294386359
              defaultConsistencyLevel: Eventual
              maxIntervalInSeconds: 6923
            failoverPolicies:
            - failoverPriority: 0
              locationName: locationName
              id: id
            - failoverPriority: 0
              locationName: locationName
              id: id
            readLocations:
            - failoverPriority: 0
              locationName: locationName
              documentEndpoint: documentEndpoint
              id: id
              provisioningState: provisioningState
              isZoneRedundant: true
            - failoverPriority: 0
              locationName: locationName
              documentEndpoint: documentEndpoint
              id: id
              provisioningState: provisioningState
              isZoneRedundant: true
            databaseAccountOfferType: Standard
            isVirtualNetworkFilterEnabled: true
        - kind: GlobalDocumentDB
          properties:
            ipRangeFilter: ipRangeFilter
            writeLocations:
            - failoverPriority: 0
              locationName: locationName
              documentEndpoint: documentEndpoint
              id: id
              provisioningState: provisioningState
              isZoneRedundant: true
            - failoverPriority: 0
              locationName: locationName
              documentEndpoint: documentEndpoint
              id: id
              provisioningState: provisioningState
              isZoneRedundant: true
            capabilities:
            - name: name
            - name: name
            connectorOffer: Small
            documentEndpoint: documentEndpoint
            provisioningState: provisioningState
            virtualNetworkRules:
            - id: id
              ignoreMissingVNetServiceEndpoint: true
            - id: id
              ignoreMissingVNetServiceEndpoint: true
            enableAutomaticFailover: true
            enableCassandraConnector: true
            enableMultipleWriteLocations: true
            consistencyPolicy:
              maxStalenessPrefix: 1294386359
              defaultConsistencyLevel: Eventual
              maxIntervalInSeconds: 6923
            failoverPolicies:
            - failoverPriority: 0
              locationName: locationName
              id: id
            - failoverPriority: 0
              locationName: locationName
              id: id
            readLocations:
            - failoverPriority: 0
              locationName: locationName
              documentEndpoint: documentEndpoint
              id: id
              provisioningState: provisioningState
              isZoneRedundant: true
            - failoverPriority: 0
              locationName: locationName
              documentEndpoint: documentEndpoint
              id: id
              provisioningState: provisioningState
              isZoneRedundant: true
            databaseAccountOfferType: Standard
            isVirtualNetworkFilterEnabled: true
      properties:
        value:
          description: List of database account and their properties.
          items:
            $ref: '#/components/schemas/DatabaseAccount'
          readOnly: true
          type: array
      type: object
    ErrorResponse:
      description: Error Response.
      example:
        code: code
        message: message
      properties:
        code:
          description: Error code.
          type: string
        message:
          description: Error message indicating why the operation failed.
          type: string
      type: object
    ExcludedPath:
      example:
        path: path
      properties:
        path:
          description: The path for which the indexing behavior applies to. Index
            paths typically start with root and end with wildcard (/path/*)
          type: string
      type: object
    ExtendedResourceProperties:
      description: The system generated resource properties associated with SQL databases
        and SQL containers.
      properties:
        _etag:
          description: A system generated property representing the resource etag
            required for optimistic concurrency control.
          type: string
        _rid:
          description: A system generated property. A unique identifier.
          type: string
        _ts:
          description: A system generated property that denotes the last updated timestamp
            of the resource.
          type: object
      type: object
    FailoverPolicies:
      description: The list of new failover policies for the failover priority change.
      example:
        failoverPolicies:
        - failoverPriority: 0
          locationName: locationName
          id: id
        - failoverPriority: 0
          locationName: locationName
          id: id
      properties:
        failoverPolicies:
          description: List of failover policies.
          items:
            $ref: '#/components/schemas/FailoverPolicy'
          type: array
      required:
      - failoverPolicies
      type: object
    FailoverPolicy:
      description: The failover policy for a given region of a database account.
      example:
        failoverPriority: 0
        locationName: locationName
        id: id
      properties:
        failoverPriority:
          description: The failover priority of the region. A failover priority of
            0 indicates a write region. The maximum value for a failover priority
            = (total number of regions - 1). Failover priority values must be unique
            for each of the regions in which the database account exists.
          format: int32
          minimum: 0
          type: integer
        id:
          description: "The unique identifier of the region in which the database\
            \ account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
          readOnly: true
          type: string
        locationName:
          description: The name of the region in which the database account exists.
          type: string
      type: object
    GremlinDatabase:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: An Azure Cosmos DB Gremlin database.
      example:
        properties:
          _rid: _rid
          _etag: _etag
          _ts: "{}"
      properties:
        properties:
          $ref: '#/components/schemas/GremlinDatabaseProperties'
    GremlinDatabaseCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB Gremlin database.
      example:
        properties:
          resource:
            id: id
          options:
            key: options
      properties:
        properties:
          $ref: '#/components/schemas/GremlinDatabaseCreateUpdateProperties'
      required:
      - properties
      type: object
    GremlinDatabaseCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB Gremlin database.
      example:
        resource:
          id: id
        options:
          key: options
      properties:
        options:
          additionalProperties:
            type: string
          description: "CreateUpdateOptions are a list of key-value pairs that describe\
            \ the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"\
            Session-Token\" and \"Throughput\""
          type: object
        resource:
          $ref: '#/components/schemas/GremlinDatabaseResource'
      required:
      - options
      - resource
      type: object
    GremlinDatabaseListResult:
      description: "The List operation response, that contains the Gremlin databases\
        \ and their properties."
      example:
        value:
        - properties:
            _rid: _rid
            _etag: _etag
            _ts: "{}"
        - properties:
            _rid: _rid
            _etag: _etag
            _ts: "{}"
      properties:
        value:
          description: List of Gremlin databases and their properties.
          items:
            $ref: '#/components/schemas/GremlinDatabase'
          readOnly: true
          type: array
      type: object
    GremlinDatabaseProperties:
      allOf:
      - $ref: '#/components/schemas/GremlinDatabaseResource'
      description: The properties of an Azure Cosmos DB SQL database
      example:
        _rid: _rid
        _etag: _etag
        _ts: "{}"
      properties:
        _etag:
          description: A system generated property representing the resource etag
            required for optimistic concurrency control.
          type: string
        _rid:
          description: A system generated property. A unique identifier.
          type: string
        _ts:
          description: A system generated property that denotes the last updated timestamp
            of the resource.
          type: object
    GremlinDatabaseResource:
      description: Cosmos DB Gremlin database id object
      example:
        id: id
      properties:
        id:
          description: Name of the Cosmos DB Gremlin database
          type: string
      required:
      - id
      type: object
    GremlinGraph:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: An Azure Cosmos DB Gremlin graph.
      example:
        properties:
          uniqueKeyPolicy:
            uniqueKeys:
            - paths:
              - null
              - null
            - paths:
              - null
              - null
          _rid: _rid
          partitionKey:
            kind: Hash
            paths:
            - null
            - null
          indexingPolicy:
            indexingMode: Consistent
            automatic: true
            includedPaths:
            - path: path
              indexes:
              - kind: Hash
                dataType: String
                precision: 6
              - kind: Hash
                dataType: String
                precision: 6
            - path: path
              indexes:
              - kind: Hash
                dataType: String
                precision: 6
              - kind: Hash
                dataType: String
                precision: 6
            excludedPaths:
            - path: path
            - path: path
          defaultTtl: 0
          id: id
          conflictResolutionPolicy:
            mode: LastWriterWins
            conflictResolutionProcedure: conflictResolutionProcedure
            conflictResolutionPath: conflictResolutionPath
          _etag: _etag
          _ts: "{}"
      properties:
        properties:
          $ref: '#/components/schemas/GremlinGraphProperties'
    GremlinGraphCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB Gremlin graph.
      example:
        properties:
          resource:
            uniqueKeyPolicy:
              uniqueKeys:
              - paths:
                - null
                - null
              - paths:
                - null
                - null
            partitionKey:
              kind: Hash
              paths:
              - null
              - null
            indexingPolicy:
              indexingMode: Consistent
              automatic: true
              includedPaths:
              - path: path
                indexes:
                - kind: Hash
                  dataType: String
                  precision: 6
                - kind: Hash
                  dataType: String
                  precision: 6
              - path: path
                indexes:
                - kind: Hash
                  dataType: String
                  precision: 6
                - kind: Hash
                  dataType: String
                  precision: 6
              excludedPaths:
              - path: path
              - path: path
            defaultTtl: 0
            id: id
            conflictResolutionPolicy:
              mode: LastWriterWins
              conflictResolutionProcedure: conflictResolutionProcedure
              conflictResolutionPath: conflictResolutionPath
          options:
            key: options
      properties:
        properties:
          $ref: '#/components/schemas/GremlinGraphCreateUpdateProperties'
      required:
      - properties
      type: object
    GremlinGraphCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB Gremlin graph.
      example:
        resource:
          uniqueKeyPolicy:
            uniqueKeys:
            - paths:
              - null
              - null
            - paths:
              - null
              - null
          partitionKey:
            kind: Hash
            paths:
            - null
            - null
          indexingPolicy:
            indexingMode: Consistent
            automatic: true
            includedPaths:
            - path: path
              indexes:
              - kind: Hash
                dataType: String
                precision: 6
              - kind: Hash
                dataType: String
                precision: 6
            - path: path
              indexes:
              - kind: Hash
                dataType: String
                precision: 6
              - kind: Hash
                dataType: String
                precision: 6
            excludedPaths:
            - path: path
            - path: path
          defaultTtl: 0
          id: id
          conflictResolutionPolicy:
            mode: LastWriterWins
            conflictResolutionProcedure: conflictResolutionProcedure
            conflictResolutionPath: conflictResolutionPath
        options:
          key: options
      properties:
        options:
          additionalProperties:
            type: string
          description: "CreateUpdateOptions are a list of key-value pairs that describe\
            \ the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"\
            Session-Token\" and \"Throughput\""
          type: object
        resource:
          $ref: '#/components/schemas/GremlinGraphResource'
      required:
      - options
      - resource
      type: object
    GremlinGraphListResult:
      description: "The List operation response, that contains the graphs and their\
        \ properties."
      example:
        value:
        - properties:
            uniqueKeyPolicy:
              uniqueKeys:
              - paths:
                - null
                - null
              - paths:
                - null
                - null
            _rid: _rid
            partitionKey:
              kind: Hash
              paths:
              - null
              - null
            indexingPolicy:
              indexingMode: Consistent
              automatic: true
              includedPaths:
              - path: path
                indexes:
                - kind: Hash
                  dataType: String
                  precision: 6
                - kind: Hash
                  dataType: String
                  precision: 6
              - path: path
                indexes:
                - kind: Hash
                  dataType: String
                  precision: 6
                - kind: Hash
                  dataType: String
                  precision: 6
              excludedPaths:
              - path: path
              - path: path
            defaultTtl: 0
            id: id
            conflictResolutionPolicy:
              mode: LastWriterWins
              conflictResolutionProcedure: conflictResolutionProcedure
              conflictResolutionPath: conflictResolutionPath
            _etag: _etag
            _ts: "{}"
        - properties:
            uniqueKeyPolicy:
              uniqueKeys:
              - paths:
                - null
                - null
              - paths:
                - null
                - null
            _rid: _rid
            partitionKey:
              kind: Hash
              paths:
              - null
              - null
            indexingPolicy:
              indexingMode: Consistent
              automatic: true
              includedPaths:
              - path: path
                indexes:
                - kind: Hash
                  dataType: String
                  precision: 6
                - kind: Hash
                  dataType: String
                  precision: 6
              - path: path
                indexes:
                - kind: Hash
                  dataType: String
                  precision: 6
                - kind: Hash
                  dataType: String
                  precision: 6
              excludedPaths:
              - path: path
              - path: path
            defaultTtl: 0
            id: id
            conflictResolutionPolicy:
              mode: LastWriterWins
              conflictResolutionProcedure: conflictResolutionProcedure
              conflictResolutionPath: conflictResolutionPath
            _etag: _etag
            _ts: "{}"
      properties:
        value:
          description: List of graphs and their properties.
          items:
            $ref: '#/components/schemas/GremlinGraph'
          readOnly: true
          type: array
      type: object
    GremlinGraphProperties:
      allOf:
      - $ref: '#/components/schemas/GremlinGraphResource'
      - $ref: '#/components/schemas/ExtendedResourceProperties'
      description: The properties of an Azure Cosmos DB Gremlin graph
      example:
        uniqueKeyPolicy:
          uniqueKeys:
          - paths:
            - null
            - null
          - paths:
            - null
            - null
        _rid: _rid
        partitionKey:
          kind: Hash
          paths:
          - null
          - null
        indexingPolicy:
          indexingMode: Consistent
          automatic: true
          includedPaths:
          - path: path
            indexes:
            - kind: Hash
              dataType: String
              precision: 6
            - kind: Hash
              dataType: String
              precision: 6
          - path: path
            indexes:
            - kind: Hash
              dataType: String
              precision: 6
            - kind: Hash
              dataType: String
              precision: 6
          excludedPaths:
          - path: path
          - path: path
        defaultTtl: 0
        id: id
        conflictResolutionPolicy:
          mode: LastWriterWins
          conflictResolutionProcedure: conflictResolutionProcedure
          conflictResolutionPath: conflictResolutionPath
        _etag: _etag
        _ts: "{}"
    GremlinGraphResource:
      description: Cosmos DB Gremlin graph resource object
      example:
        uniqueKeyPolicy:
          uniqueKeys:
          - paths:
            - null
            - null
          - paths:
            - null
            - null
        partitionKey:
          kind: Hash
          paths:
          - null
          - null
        indexingPolicy:
          indexingMode: Consistent
          automatic: true
          includedPaths:
          - path: path
            indexes:
            - kind: Hash
              dataType: String
              precision: 6
            - kind: Hash
              dataType: String
              precision: 6
          - path: path
            indexes:
            - kind: Hash
              dataType: String
              precision: 6
            - kind: Hash
              dataType: String
              precision: 6
          excludedPaths:
          - path: path
          - path: path
        defaultTtl: 0
        id: id
        conflictResolutionPolicy:
          mode: LastWriterWins
          conflictResolutionProcedure: conflictResolutionProcedure
          conflictResolutionPath: conflictResolutionPath
      properties:
        conflictResolutionPolicy:
          $ref: '#/components/schemas/ConflictResolutionPolicy'
        defaultTtl:
          description: Default time to live
          type: integer
        id:
          description: Name of the Cosmos DB Gremlin graph
          type: string
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        partitionKey:
          $ref: '#/components/schemas/ContainerPartitionKey'
        uniqueKeyPolicy:
          $ref: '#/components/schemas/UniqueKeyPolicy'
      required:
      - id
      type: object
    IPRangeFilter:
      description: "Cosmos DB Firewall Support: This value specifies the set of IP\
        \ addresses or IP address ranges in CIDR form to be included as the allowed\
        \ list of client IPs for a given database account. IP addresses/ranges must\
        \ be comma separated and must not contain any spaces."
      type: string
    IncludedPath:
      description: The paths that are included in indexing
      example:
        path: path
        indexes:
        - kind: Hash
          dataType: String
          precision: 6
        - kind: Hash
          dataType: String
          precision: 6
      properties:
        indexes:
          description: List of indexes for this path
          items:
            $ref: '#/components/schemas/Indexes'
          type: array
        path:
          description: The path for which the indexing behavior applies to. Index
            paths typically start with root and end with wildcard (/path/*)
          type: string
      type: object
    Indexes:
      description: The indexes for the path.
      example:
        kind: Hash
        dataType: String
        precision: 6
      properties:
        dataType:
          default: String
          description: The datatype for which the indexing behavior is applied to.
          enum:
          - String
          - Number
          - Point
          - Polygon
          - LineString
          - MultiPolygon
          type: string
          x-ms-enum:
            modelAsString: true
            name: DataType
        kind:
          default: Hash
          description: Indicates the type of index.
          enum:
          - Hash
          - Range
          - Spatial
          type: string
          x-ms-enum:
            modelAsString: true
            name: IndexKind
        precision:
          description: The precision of the index. -1 is maximum precision.
          type: integer
      type: object
    IndexingPolicy:
      description: Cosmos DB indexing policy
      example:
        indexingMode: Consistent
        automatic: true
        includedPaths:
        - path: path
          indexes:
          - kind: Hash
            dataType: String
            precision: 6
          - kind: Hash
            dataType: String
            precision: 6
        - path: path
          indexes:
          - kind: Hash
            dataType: String
            precision: 6
          - kind: Hash
            dataType: String
            precision: 6
        excludedPaths:
        - path: path
        - path: path
      properties:
        automatic:
          description: Indicates if the indexing policy is automatic
          type: boolean
        excludedPaths:
          description: List of paths to exclude from indexing
          items:
            $ref: '#/components/schemas/ExcludedPath'
          type: array
        includedPaths:
          description: List of paths to include in the indexing
          items:
            $ref: '#/components/schemas/IncludedPath'
          type: array
        indexingMode:
          default: Consistent
          description: Indicates the indexing mode.
          enum:
          - Consistent
          - Lazy
          - None
          type: string
          x-ms-enum:
            modelAsString: true
            name: IndexingMode
      type: object
    Key:
      description: A Key.
      type: string
    Location:
      description: A region in which the Azure Cosmos DB database account is deployed.
      example:
        failoverPriority: 0
        locationName: locationName
        documentEndpoint: documentEndpoint
        id: id
        provisioningState: provisioningState
        isZoneRedundant: true
      properties:
        documentEndpoint:
          description: "The connection endpoint for the specific region. Example:\
            \ https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
          readOnly: true
          type: string
        failoverPriority:
          description: The failover priority of the region. A failover priority of
            0 indicates a write region. The maximum value for a failover priority
            = (total number of regions - 1). Failover priority values must be unique
            for each of the regions in which the database account exists.
          format: int32
          minimum: 0
          type: integer
        id:
          description: "The unique identifier of the region within the database account.\
            \ Example: &lt;accountName&gt;-&lt;locationName&gt;."
          readOnly: true
          type: string
        isZoneRedundant:
          description: Flag to indicate whether or not this region is an AvailabilityZone
            region
          type: boolean
        locationName:
          description: The name of the region.
          type: string
        provisioningState:
          description: "The status of the Cosmos DB account at the time the operation\
            \ was called. The status can be one of following. 'Creating' – the Cosmos\
            \ DB account is being created. When an account is in Creating state, only\
            \ properties that are specified as input for the Create Cosmos DB account\
            \ operation are returned. 'Succeeded' – the Cosmos DB account is active\
            \ for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting'\
            \ – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account\
            \ failed creation."
          type: string
      type: object
    Metric:
      description: Metric data
      example:
        timeGrain: timeGrain
        unit: Count
        name:
          localizedValue: localizedValue
          value: value
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        metricValues:
        - average: 6.027456183070403
          total: 5.637376656633329
          _count: 0.8008281904610115
          maximum: 1.4658129805029452
          minimum: 5.962133916683182
          timestamp: 2000-01-23T04:56:07.000+00:00
        - average: 6.027456183070403
          total: 5.637376656633329
          _count: 0.8008281904610115
          maximum: 1.4658129805029452
          minimum: 5.962133916683182
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        endTime:
          description: The end time for the metric (ISO-8601 format).
          format: date-time
          readOnly: true
          type: string
        metricValues:
          description: The metric values for the specified time window and timestep.
          items:
            $ref: '#/components/schemas/MetricValue'
          readOnly: true
          type: array
        name:
          $ref: '#/components/schemas/MetricName'
        startTime:
          description: The start time for the metric (ISO-8601 format).
          format: date-time
          readOnly: true
          type: string
        timeGrain:
          description: The time grain to be used to summarize the metric values.
          readOnly: true
          type: string
        unit:
          $ref: '#/components/schemas/UnitType'
      type: object
    MetricAvailability:
      description: The availability of the metric.
      example:
        timeGrain: timeGrain
        retention: retention
      properties:
        retention:
          description: The retention for the metric values.
          readOnly: true
          type: string
        timeGrain:
          description: The time grain to be used to summarize the metric values.
          readOnly: true
          type: string
      type: object
    MetricDefinition:
      description: The definition of a metric.
      example:
        primaryAggregationType: None
        unit: Count
        name:
          localizedValue: localizedValue
          value: value
        resourceUri: resourceUri
        metricAvailabilities:
        - timeGrain: timeGrain
          retention: retention
        - timeGrain: timeGrain
          retention: retention
      properties:
        metricAvailabilities:
          description: The list of metric availabilities for the account.
          items:
            $ref: '#/components/schemas/MetricAvailability'
          readOnly: true
          type: array
        name:
          $ref: '#/components/schemas/MetricName'
        primaryAggregationType:
          description: The primary aggregation type of the metric.
          enum:
          - None
          - Average
          - Total
          - Minimum
          - Maximum
          - Last
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: PrimaryAggregationType
        resourceUri:
          description: The resource uri of the database.
          readOnly: true
          type: string
        unit:
          $ref: '#/components/schemas/UnitType'
      type: object
    MetricDefinitionsListResult:
      description: The response to a list metric definitions request.
      example:
        value:
        - primaryAggregationType: None
          unit: Count
          name:
            localizedValue: localizedValue
            value: value
          resourceUri: resourceUri
          metricAvailabilities:
          - timeGrain: timeGrain
            retention: retention
          - timeGrain: timeGrain
            retention: retention
        - primaryAggregationType: None
          unit: Count
          name:
            localizedValue: localizedValue
            value: value
          resourceUri: resourceUri
          metricAvailabilities:
          - timeGrain: timeGrain
            retention: retention
          - timeGrain: timeGrain
            retention: retention
      properties:
        value:
          description: The list of metric definitions for the account.
          items:
            $ref: '#/components/schemas/MetricDefinition'
          readOnly: true
          type: array
      type: object
    MetricListResult:
      description: The response to a list metrics request.
      example:
        value:
        - timeGrain: timeGrain
          unit: Count
          name:
            localizedValue: localizedValue
            value: value
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          metricValues:
          - average: 6.027456183070403
            total: 5.637376656633329
            _count: 0.8008281904610115
            maximum: 1.4658129805029452
            minimum: 5.962133916683182
            timestamp: 2000-01-23T04:56:07.000+00:00
          - average: 6.027456183070403
            total: 5.637376656633329
            _count: 0.8008281904610115
            maximum: 1.4658129805029452
            minimum: 5.962133916683182
            timestamp: 2000-01-23T04:56:07.000+00:00
        - timeGrain: timeGrain
          unit: Count
          name:
            localizedValue: localizedValue
            value: value
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          metricValues:
          - average: 6.027456183070403
            total: 5.637376656633329
            _count: 0.8008281904610115
            maximum: 1.4658129805029452
            minimum: 5.962133916683182
            timestamp: 2000-01-23T04:56:07.000+00:00
          - average: 6.027456183070403
            total: 5.637376656633329
            _count: 0.8008281904610115
            maximum: 1.4658129805029452
            minimum: 5.962133916683182
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        value:
          description: The list of metrics for the account.
          items:
            $ref: '#/components/schemas/Metric'
          readOnly: true
          type: array
      type: object
    MetricName:
      description: A metric name.
      example:
        localizedValue: localizedValue
        value: value
      properties:
        localizedValue:
          description: The friendly name of the metric.
          readOnly: true
          type: string
        value:
          description: The name of the metric.
          readOnly: true
          type: string
      type: object
    MetricValue:
      description: Represents metrics values.
      example:
        average: 6.027456183070403
        total: 5.637376656633329
        _count: 0.8008281904610115
        maximum: 1.4658129805029452
        minimum: 5.962133916683182
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        _count:
          description: The number of values for the metric.
          format: int32
          readOnly: true
          type: number
        average:
          description: The average value of the metric.
          format: double
          readOnly: true
          type: number
        maximum:
          description: The max value of the metric.
          format: double
          readOnly: true
          type: number
        minimum:
          description: The min value of the metric.
          format: double
          readOnly: true
          type: number
        timestamp:
          description: The metric timestamp (ISO-8601 format).
          format: date-time
          readOnly: true
          type: string
        total:
          description: The total value of the metric.
          format: double
          readOnly: true
          type: number
      type: object
    MongoDBCollection:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: An Azure Cosmos DB MongoDB collection.
      example:
        properties:
          indexes:
          - options:
              expireAfterSeconds: 0
              unique: true
            key:
              keys:
              - null
              - null
          - options:
              expireAfterSeconds: 0
              unique: true
            key:
              keys:
              - null
              - null
          id: id
          shardKey:
            key: shardKey
      properties:
        properties:
          $ref: '#/components/schemas/MongoDBCollectionProperties'
    MongoDBCollectionCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB MongoDB collection.
      example:
        properties:
          resource:
            indexes:
            - options:
                expireAfterSeconds: 0
                unique: true
              key:
                keys:
                - null
                - null
            - options:
                expireAfterSeconds: 0
                unique: true
              key:
                keys:
                - null
                - null
            id: id
            shardKey:
              key: shardKey
          options:
            key: options
      properties:
        properties:
          $ref: '#/components/schemas/MongoDBCollectionCreateUpdateProperties'
      required:
      - properties
      type: object
    MongoDBCollectionCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB MongoDB collection.
      example:
        resource:
          indexes:
          - options:
              expireAfterSeconds: 0
              unique: true
            key:
              keys:
              - null
              - null
          - options:
              expireAfterSeconds: 0
              unique: true
            key:
              keys:
              - null
              - null
          id: id
          shardKey:
            key: shardKey
        options:
          key: options
      properties:
        options:
          additionalProperties:
            type: string
          description: "CreateUpdateOptions are a list of key-value pairs that describe\
            \ the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"\
            Session-Token\" and \"Throughput\""
          type: object
        resource:
          $ref: '#/components/schemas/MongoDBCollectionResource'
      required:
      - options
      - resource
      type: object
    MongoDBCollectionListResult:
      description: "The List operation response, that contains the MongoDB collections\
        \ and their properties."
      example:
        value:
        - properties:
            indexes:
            - options:
                expireAfterSeconds: 0
                unique: true
              key:
                keys:
                - null
                - null
            - options:
                expireAfterSeconds: 0
                unique: true
              key:
                keys:
                - null
                - null
            id: id
            shardKey:
              key: shardKey
        - properties:
            indexes:
            - options:
                expireAfterSeconds: 0
                unique: true
              key:
                keys:
                - null
                - null
            - options:
                expireAfterSeconds: 0
                unique: true
              key:
                keys:
                - null
                - null
            id: id
            shardKey:
              key: shardKey
      properties:
        value:
          description: List of MongoDB collections and their properties.
          items:
            $ref: '#/components/schemas/MongoDBCollection'
          readOnly: true
          type: array
      type: object
    MongoDBCollectionProperties:
      allOf:
      - $ref: '#/components/schemas/MongoDBCollectionResource'
      description: The properties of an Azure Cosmos DB MongoDB collection
      example:
        indexes:
        - options:
            expireAfterSeconds: 0
            unique: true
          key:
            keys:
            - null
            - null
        - options:
            expireAfterSeconds: 0
            unique: true
          key:
            keys:
            - null
            - null
        id: id
        shardKey:
          key: shardKey
    MongoDBCollectionResource:
      description: Cosmos DB MongoDB collection resource object
      example:
        indexes:
        - options:
            expireAfterSeconds: 0
            unique: true
          key:
            keys:
            - null
            - null
        - options:
            expireAfterSeconds: 0
            unique: true
          key:
            keys:
            - null
            - null
        id: id
        shardKey:
          key: shardKey
      properties:
        id:
          description: Name of the Cosmos DB MongoDB collection
          type: string
        indexes:
          description: List of index keys
          items:
            $ref: '#/components/schemas/MongoIndex'
          type: array
        shardKey:
          additionalProperties:
            type: string
          description: "The shard key and partition kind pair, only support \"Hash\"\
            \ partition kind"
          type: object
      required:
      - id
      type: object
    MongoDBDatabase:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: An Azure Cosmos DB MongoDB database.
      example:
        properties:
          id: id
      properties:
        properties:
          $ref: '#/components/schemas/MongoDBDatabaseProperties'
    MongoDBDatabaseCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB MongoDB database.
      example:
        properties:
          resource:
            id: id
          options:
            key: options
      properties:
        properties:
          $ref: '#/components/schemas/MongoDBDatabaseCreateUpdateProperties'
      required:
      - properties
      type: object
    MongoDBDatabaseCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB MongoDB database.
      example:
        resource:
          id: id
        options:
          key: options
      properties:
        options:
          additionalProperties:
            type: string
          description: "CreateUpdateOptions are a list of key-value pairs that describe\
            \ the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"\
            Session-Token\" and \"Throughput\""
          type: object
        resource:
          $ref: '#/components/schemas/MongoDBDatabaseResource'
      required:
      - options
      - resource
      type: object
    MongoDBDatabaseListResult:
      description: "The List operation response, that contains the MongoDB databases\
        \ and their properties."
      example:
        value:
        - properties:
            id: id
        - properties:
            id: id
      properties:
        value:
          description: List of MongoDB databases and their properties.
          items:
            $ref: '#/components/schemas/MongoDBDatabase'
          readOnly: true
          type: array
      type: object
    MongoDBDatabaseProperties:
      allOf:
      - $ref: '#/components/schemas/MongoDBDatabaseResource'
      description: The properties of an Azure Cosmos DB MongoDB database
      example:
        id: id
    MongoDBDatabaseResource:
      description: Cosmos DB MongoDB database id object
      example:
        id: id
      properties:
        id:
          description: Name of the Cosmos DB MongoDB database
          type: string
      required:
      - id
      type: object
    MongoIndex:
      description: Cosmos DB MongoDB collection index key
      example:
        options:
          expireAfterSeconds: 0
          unique: true
        key:
          keys:
          - null
          - null
      properties:
        key:
          $ref: '#/components/schemas/MongoIndexKeys'
        options:
          $ref: '#/components/schemas/MongoIndexOptions'
      type: object
    MongoIndexKeys:
      description: Cosmos DB MongoDB collection resource object
      example:
        keys:
        - null
        - null
      properties:
        keys:
          description: List of keys for each MongoDB collection in the Azure Cosmos
            DB service
          items:
            $ref: '#/components/schemas/Key'
          type: array
      type: object
    MongoIndexOptions:
      description: Cosmos DB MongoDB collection index options
      example:
        expireAfterSeconds: 0
        unique: true
      properties:
        expireAfterSeconds:
          description: Expire after seconds
          type: integer
        unique:
          description: Is unique or not
          type: boolean
      type: object
    Operation:
      description: REST API operation
      example:
        display:
          Description: Description
          Resource: Resource
          Operation: Operation
          Provider: Provider
        name: name
      properties:
        display:
          $ref: '#/components/schemas/Operation_display'
        name:
          description: "Operation name: {provider}/{resource}/{operation}"
          type: string
      type: object
    OperationListResult:
      description: Result of the request to list Resource Provider operations. It
        contains a list of operations and a URL link to get the next set of results.
      example:
        value:
        - display:
            Description: Description
            Resource: Resource
            Operation: Operation
            Provider: Provider
          name: name
        - display:
            Description: Description
            Resource: Resource
            Operation: Operation
            Provider: Provider
          name: name
        nextLink: nextLink
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there
            are any.
          type: string
        value:
          description: List of operations supported by the Resource Provider.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      type: object
    PartitionMetric:
      allOf:
      - $ref: '#/components/schemas/Metric'
      description: The metric values for a single partition.
      example:
        partitionId: partitionId
        partitionKeyRangeId: partitionKeyRangeId
      properties:
        partitionId:
          description: The partition id (GUID identifier) of the metric values.
          readOnly: true
          type: string
        partitionKeyRangeId:
          description: The partition key range id (integer identifier) of the metric
            values.
          readOnly: true
          type: string
    PartitionMetricListResult:
      description: The response to a list partition metrics request.
      example:
        value:
        - partitionId: partitionId
          partitionKeyRangeId: partitionKeyRangeId
        - partitionId: partitionId
          partitionKeyRangeId: partitionKeyRangeId
      properties:
        value:
          description: The list of partition-level metrics for the account.
          items:
            $ref: '#/components/schemas/PartitionMetric'
          readOnly: true
          type: array
      type: object
    PartitionUsage:
      allOf:
      - $ref: '#/components/schemas/Usage'
      description: The partition level usage data for a usage request.
      example:
        partitionId: partitionId
        partitionKeyRangeId: partitionKeyRangeId
      properties:
        partitionId:
          description: The partition id (GUID identifier) of the usages.
          readOnly: true
          type: string
        partitionKeyRangeId:
          description: The partition key range id (integer identifier) of the usages.
          readOnly: true
          type: string
    PartitionUsagesResult:
      description: The response to a list partition level usage request.
      example:
        value:
        - partitionId: partitionId
          partitionKeyRangeId: partitionKeyRangeId
        - partitionId: partitionId
          partitionKeyRangeId: partitionKeyRangeId
      properties:
        value:
          description: The list of partition-level usages for the database. A usage
            is a point in time metric
          items:
            $ref: '#/components/schemas/PartitionUsage'
          readOnly: true
          type: array
      type: object
    Path:
      description: A path. These typically start with root (/path)
      type: string
    PercentileMetric:
      description: Percentile Metric data
      example:
        timeGrain: timeGrain
        unit: Count
        name:
          localizedValue: localizedValue
          value: value
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        metricValues:
        - P99: 7.061401241503109
          P25: 6.027456183070403
          P90: 5.637376656633329
          P50: 1.4658129805029452
          P95: 2.3021358869347655
          P10: 0.8008281904610115
          P75: 5.962133916683182
        - P99: 7.061401241503109
          P25: 6.027456183070403
          P90: 5.637376656633329
          P50: 1.4658129805029452
          P95: 2.3021358869347655
          P10: 0.8008281904610115
          P75: 5.962133916683182
      properties:
        endTime:
          description: The end time for the metric (ISO-8601 format).
          format: date-time
          readOnly: true
          type: string
        metricValues:
          description: The percentile metric values for the specified time window
            and timestep.
          items:
            $ref: '#/components/schemas/PercentileMetricValue'
          readOnly: true
          type: array
        name:
          $ref: '#/components/schemas/MetricName'
        startTime:
          description: The start time for the metric (ISO-8601 format).
          format: date-time
          readOnly: true
          type: string
        timeGrain:
          description: The time grain to be used to summarize the metric values.
          readOnly: true
          type: string
        unit:
          $ref: '#/components/schemas/UnitType'
      type: object
    PercentileMetricListResult:
      description: The response to a list percentile metrics request.
      example:
        value:
        - timeGrain: timeGrain
          unit: Count
          name:
            localizedValue: localizedValue
            value: value
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          metricValues:
          - P99: 7.061401241503109
            P25: 6.027456183070403
            P90: 5.637376656633329
            P50: 1.4658129805029452
            P95: 2.3021358869347655
            P10: 0.8008281904610115
            P75: 5.962133916683182
          - P99: 7.061401241503109
            P25: 6.027456183070403
            P90: 5.637376656633329
            P50: 1.4658129805029452
            P95: 2.3021358869347655
            P10: 0.8008281904610115
            P75: 5.962133916683182
        - timeGrain: timeGrain
          unit: Count
          name:
            localizedValue: localizedValue
            value: value
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          metricValues:
          - P99: 7.061401241503109
            P25: 6.027456183070403
            P90: 5.637376656633329
            P50: 1.4658129805029452
            P95: 2.3021358869347655
            P10: 0.8008281904610115
            P75: 5.962133916683182
          - P99: 7.061401241503109
            P25: 6.027456183070403
            P90: 5.637376656633329
            P50: 1.4658129805029452
            P95: 2.3021358869347655
            P10: 0.8008281904610115
            P75: 5.962133916683182
      properties:
        value:
          description: The list of percentile metrics for the account.
          items:
            $ref: '#/components/schemas/PercentileMetric'
          readOnly: true
          type: array
      type: object
    PercentileMetricValue:
      allOf:
      - $ref: '#/components/schemas/MetricValue'
      description: Represents percentile metrics values.
      example:
        P99: 7.061401241503109
        P25: 6.027456183070403
        P90: 5.637376656633329
        P50: 1.4658129805029452
        P95: 2.3021358869347655
        P10: 0.8008281904610115
        P75: 5.962133916683182
      properties:
        P10:
          description: The 10th percentile value for the metric.
          format: double
          readOnly: true
          type: number
        P25:
          description: The 25th percentile value for the metric.
          format: double
          readOnly: true
          type: number
        P50:
          description: The 50th percentile value for the metric.
          format: double
          readOnly: true
          type: number
        P75:
          description: The 75th percentile value for the metric.
          format: double
          readOnly: true
          type: number
        P90:
          description: The 90th percentile value for the metric.
          format: double
          readOnly: true
          type: number
        P95:
          description: The 95th percentile value for the metric.
          format: double
          readOnly: true
          type: number
        P99:
          description: The 99th percentile value for the metric.
          format: double
          readOnly: true
          type: number
    ProvisioningState:
      description: "The status of the Cosmos DB account at the time the operation\
        \ was called. The status can be one of following. 'Creating' – the Cosmos\
        \ DB account is being created. When an account is in Creating state, only\
        \ properties that are specified as input for the Create Cosmos DB account\
        \ operation are returned. 'Succeeded' – the Cosmos DB account is active for\
        \ use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the\
        \ Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed\
        \ creation."
      type: string
    RegionForOnlineOffline:
      description: Cosmos DB region to online or offline.
      example:
        region: region
      properties:
        region:
          description: "Cosmos DB region, with spaces between words and each word\
            \ capitalized."
          type: string
      required:
      - region
      type: object
    Resource:
      description: The core properties of ARM resources.
      properties:
        id:
          description: The unique resource identifier of the database account.
          readOnly: true
          type: string
        location:
          description: The location of the resource group to which the resource belongs.
          type: string
        name:
          description: The name of the database account.
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: "Tags are a list of key-value pairs that describe the resource.\
            \ These tags can be used in viewing and grouping this resource (across\
            \ resource groups). A maximum of 15 tags can be provided for a resource.\
            \ Each tag must have a key no greater than 128 characters and value no\
            \ greater than 256 characters. For example, the default experience for\
            \ a template type is set with \"defaultExperience\": \"Cassandra\". Current\
            \ \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\"\
            , and \"MongoDB\"."
          type: object
        type:
          description: The type of Azure resource.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    ShardKeys:
      additionalProperties:
        type: string
      description: "The shard key and partition kind pair, only support \"Hash\" partition\
        \ kind"
      type: object
    SqlContainer:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: An Azure Cosmos DB container.
      example:
        properties:
          uniqueKeyPolicy:
            uniqueKeys:
            - paths:
              - null
              - null
            - paths:
              - null
              - null
          _rid: _rid
          partitionKey:
            kind: Hash
            paths:
            - null
            - null
          indexingPolicy:
            indexingMode: Consistent
            automatic: true
            includedPaths:
            - path: path
              indexes:
              - kind: Hash
                dataType: String
                precision: 6
              - kind: Hash
                dataType: String
                precision: 6
            - path: path
              indexes:
              - kind: Hash
                dataType: String
                precision: 6
              - kind: Hash
                dataType: String
                precision: 6
            excludedPaths:
            - path: path
            - path: path
          defaultTtl: 0
          id: id
          conflictResolutionPolicy:
            mode: LastWriterWins
            conflictResolutionProcedure: conflictResolutionProcedure
            conflictResolutionPath: conflictResolutionPath
          _etag: _etag
          _ts: "{}"
      properties:
        properties:
          $ref: '#/components/schemas/SqlContainerProperties'
    SqlContainerCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB container.
      example:
        properties:
          resource:
            uniqueKeyPolicy:
              uniqueKeys:
              - paths:
                - null
                - null
              - paths:
                - null
                - null
            partitionKey:
              kind: Hash
              paths:
              - null
              - null
            indexingPolicy:
              indexingMode: Consistent
              automatic: true
              includedPaths:
              - path: path
                indexes:
                - kind: Hash
                  dataType: String
                  precision: 6
                - kind: Hash
                  dataType: String
                  precision: 6
              - path: path
                indexes:
                - kind: Hash
                  dataType: String
                  precision: 6
                - kind: Hash
                  dataType: String
                  precision: 6
              excludedPaths:
              - path: path
              - path: path
            defaultTtl: 0
            id: id
            conflictResolutionPolicy:
              mode: LastWriterWins
              conflictResolutionProcedure: conflictResolutionProcedure
              conflictResolutionPath: conflictResolutionPath
          options:
            key: options
      properties:
        properties:
          $ref: '#/components/schemas/SqlContainerCreateUpdateProperties'
      required:
      - properties
      type: object
    SqlContainerCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB container.
      example:
        resource:
          uniqueKeyPolicy:
            uniqueKeys:
            - paths:
              - null
              - null
            - paths:
              - null
              - null
          partitionKey:
            kind: Hash
            paths:
            - null
            - null
          indexingPolicy:
            indexingMode: Consistent
            automatic: true
            includedPaths:
            - path: path
              indexes:
              - kind: Hash
                dataType: String
                precision: 6
              - kind: Hash
                dataType: String
                precision: 6
            - path: path
              indexes:
              - kind: Hash
                dataType: String
                precision: 6
              - kind: Hash
                dataType: String
                precision: 6
            excludedPaths:
            - path: path
            - path: path
          defaultTtl: 0
          id: id
          conflictResolutionPolicy:
            mode: LastWriterWins
            conflictResolutionProcedure: conflictResolutionProcedure
            conflictResolutionPath: conflictResolutionPath
        options:
          key: options
      properties:
        options:
          additionalProperties:
            type: string
          description: "CreateUpdateOptions are a list of key-value pairs that describe\
            \ the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"\
            Session-Token\" and \"Throughput\""
          type: object
        resource:
          $ref: '#/components/schemas/SqlContainerResource'
      required:
      - options
      - resource
      type: object
    SqlContainerListResult:
      description: "The List operation response, that contains the containers and\
        \ their properties."
      example:
        value:
        - properties:
            uniqueKeyPolicy:
              uniqueKeys:
              - paths:
                - null
                - null
              - paths:
                - null
                - null
            _rid: _rid
            partitionKey:
              kind: Hash
              paths:
              - null
              - null
            indexingPolicy:
              indexingMode: Consistent
              automatic: true
              includedPaths:
              - path: path
                indexes:
                - kind: Hash
                  dataType: String
                  precision: 6
                - kind: Hash
                  dataType: String
                  precision: 6
              - path: path
                indexes:
                - kind: Hash
                  dataType: String
                  precision: 6
                - kind: Hash
                  dataType: String
                  precision: 6
              excludedPaths:
              - path: path
              - path: path
            defaultTtl: 0
            id: id
            conflictResolutionPolicy:
              mode: LastWriterWins
              conflictResolutionProcedure: conflictResolutionProcedure
              conflictResolutionPath: conflictResolutionPath
            _etag: _etag
            _ts: "{}"
        - properties:
            uniqueKeyPolicy:
              uniqueKeys:
              - paths:
                - null
                - null
              - paths:
                - null
                - null
            _rid: _rid
            partitionKey:
              kind: Hash
              paths:
              - null
              - null
            indexingPolicy:
              indexingMode: Consistent
              automatic: true
              includedPaths:
              - path: path
                indexes:
                - kind: Hash
                  dataType: String
                  precision: 6
                - kind: Hash
                  dataType: String
                  precision: 6
              - path: path
                indexes:
                - kind: Hash
                  dataType: String
                  precision: 6
                - kind: Hash
                  dataType: String
                  precision: 6
              excludedPaths:
              - path: path
              - path: path
            defaultTtl: 0
            id: id
            conflictResolutionPolicy:
              mode: LastWriterWins
              conflictResolutionProcedure: conflictResolutionProcedure
              conflictResolutionPath: conflictResolutionPath
            _etag: _etag
            _ts: "{}"
      properties:
        value:
          description: List of containers and their properties.
          items:
            $ref: '#/components/schemas/SqlContainer'
          readOnly: true
          type: array
      type: object
    SqlContainerProperties:
      allOf:
      - $ref: '#/components/schemas/SqlContainerResource'
      - $ref: '#/components/schemas/ExtendedResourceProperties'
      description: The properties of an Azure Cosmos DB container
      example:
        uniqueKeyPolicy:
          uniqueKeys:
          - paths:
            - null
            - null
          - paths:
            - null
            - null
        _rid: _rid
        partitionKey:
          kind: Hash
          paths:
          - null
          - null
        indexingPolicy:
          indexingMode: Consistent
          automatic: true
          includedPaths:
          - path: path
            indexes:
            - kind: Hash
              dataType: String
              precision: 6
            - kind: Hash
              dataType: String
              precision: 6
          - path: path
            indexes:
            - kind: Hash
              dataType: String
              precision: 6
            - kind: Hash
              dataType: String
              precision: 6
          excludedPaths:
          - path: path
          - path: path
        defaultTtl: 0
        id: id
        conflictResolutionPolicy:
          mode: LastWriterWins
          conflictResolutionProcedure: conflictResolutionProcedure
          conflictResolutionPath: conflictResolutionPath
        _etag: _etag
        _ts: "{}"
    SqlContainerResource:
      description: Cosmos DB SQL container resource object
      example:
        uniqueKeyPolicy:
          uniqueKeys:
          - paths:
            - null
            - null
          - paths:
            - null
            - null
        partitionKey:
          kind: Hash
          paths:
          - null
          - null
        indexingPolicy:
          indexingMode: Consistent
          automatic: true
          includedPaths:
          - path: path
            indexes:
            - kind: Hash
              dataType: String
              precision: 6
            - kind: Hash
              dataType: String
              precision: 6
          - path: path
            indexes:
            - kind: Hash
              dataType: String
              precision: 6
            - kind: Hash
              dataType: String
              precision: 6
          excludedPaths:
          - path: path
          - path: path
        defaultTtl: 0
        id: id
        conflictResolutionPolicy:
          mode: LastWriterWins
          conflictResolutionProcedure: conflictResolutionProcedure
          conflictResolutionPath: conflictResolutionPath
      properties:
        conflictResolutionPolicy:
          $ref: '#/components/schemas/ConflictResolutionPolicy'
        defaultTtl:
          description: Default time to live
          type: integer
        id:
          description: Name of the Cosmos DB SQL container
          type: string
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        partitionKey:
          $ref: '#/components/schemas/ContainerPartitionKey'
        uniqueKeyPolicy:
          $ref: '#/components/schemas/UniqueKeyPolicy'
      required:
      - id
      type: object
    SqlDatabase:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: An Azure Cosmos DB SQL database.
      example:
        properties:
          _colls: _colls
          _users: _users
      properties:
        properties:
          $ref: '#/components/schemas/SqlDatabaseProperties'
    SqlDatabaseCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB SQL database.
      example:
        properties:
          resource:
            id: id
          options:
            key: options
      properties:
        properties:
          $ref: '#/components/schemas/SqlDatabaseCreateUpdateProperties'
      required:
      - properties
      type: object
    SqlDatabaseCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB SQL database.
      example:
        resource:
          id: id
        options:
          key: options
      properties:
        options:
          additionalProperties:
            type: string
          description: "CreateUpdateOptions are a list of key-value pairs that describe\
            \ the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"\
            Session-Token\" and \"Throughput\""
          type: object
        resource:
          $ref: '#/components/schemas/SqlDatabaseResource'
      required:
      - options
      - resource
      type: object
    SqlDatabaseListResult:
      description: "The List operation response, that contains the SQL databases and\
        \ their properties."
      example:
        value:
        - properties:
            _colls: _colls
            _users: _users
        - properties:
            _colls: _colls
            _users: _users
      properties:
        value:
          description: List of SQL databases and their properties.
          items:
            $ref: '#/components/schemas/SqlDatabase'
          readOnly: true
          type: array
      type: object
    SqlDatabaseProperties:
      allOf:
      - $ref: '#/components/schemas/SqlDatabaseResource'
      - $ref: '#/components/schemas/ExtendedResourceProperties'
      description: The properties of an Azure Cosmos DB SQL database
      example:
        _colls: _colls
        _users: _users
      properties:
        _colls:
          description: A system generated property that specified the addressable
            path of the collections resource.
          type: string
        _users:
          description: A system generated property that specifies the addressable
            path of the users resource.
          type: string
    SqlDatabaseResource:
      description: Cosmos DB SQL database id object
      example:
        id: id
      properties:
        id:
          description: Name of the Cosmos DB SQL database
          type: string
      required:
      - id
      type: object
    Table:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: An Azure Cosmos DB Table.
      example:
        properties:
          id: id
      properties:
        properties:
          $ref: '#/components/schemas/TableProperties'
    TableCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB Table.
      example:
        properties:
          resource:
            id: id
          options:
            key: options
      properties:
        properties:
          $ref: '#/components/schemas/TableCreateUpdateProperties'
      required:
      - properties
      type: object
    TableCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB Table.
      example:
        resource:
          id: id
        options:
          key: options
      properties:
        options:
          additionalProperties:
            type: string
          description: "CreateUpdateOptions are a list of key-value pairs that describe\
            \ the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"\
            Session-Token\" and \"Throughput\""
          type: object
        resource:
          $ref: '#/components/schemas/TableResource'
      required:
      - options
      - resource
      type: object
    TableListResult:
      description: "The List operation response, that contains the Table and their\
        \ properties."
      example:
        value:
        - properties:
            id: id
        - properties:
            id: id
      properties:
        value:
          description: List of Table and their properties.
          items:
            $ref: '#/components/schemas/Table'
          readOnly: true
          type: array
      type: object
    TableProperties:
      allOf:
      - $ref: '#/components/schemas/TableResource'
      description: The properties of an Azure Cosmos Table
      example:
        id: id
    TableResource:
      description: Cosmos DB table id object
      example:
        id: id
      properties:
        id:
          description: Name of the Cosmos DB table
          type: string
      required:
      - id
      type: object
    Tags:
      additionalProperties:
        type: string
      description: "Tags are a list of key-value pairs that describe the resource.\
        \ These tags can be used in viewing and grouping this resource (across resource\
        \ groups). A maximum of 15 tags can be provided for a resource. Each tag must\
        \ have a key no greater than 128 characters and value no greater than 256\
        \ characters. For example, the default experience for a template type is set\
        \ with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\"\
        \ values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"\
        ."
      type: object
    Throughput:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: An Azure Cosmos DB resource throughput.
      example:
        properties:
          throughput: 0
      properties:
        properties:
          $ref: '#/components/schemas/ThroughputProperties'
    ThroughputProperties:
      allOf:
      - $ref: '#/components/schemas/ThroughputResource'
      description: The properties of an Azure Cosmos DB resource throughput
      example:
        throughput: 0
    ThroughputResource:
      description: Cosmos DB resource throughput object
      example:
        throughput: 0
      properties:
        throughput:
          description: Value of the Cosmos DB resource throughput
          type: integer
      required:
      - throughput
      type: object
    ThroughputUpdateParameters:
      description: Parameters to update Cosmos DB resource throughput.
      example:
        properties:
          resource:
            throughput: 0
      properties:
        properties:
          $ref: '#/components/schemas/ThroughputUpdateProperties'
      required:
      - properties
      type: object
    ThroughputUpdateProperties:
      description: Properties to update Azure Cosmos DB resource throughput.
      example:
        resource:
          throughput: 0
      properties:
        resource:
          $ref: '#/components/schemas/ThroughputResource'
      required:
      - resource
      type: object
    UniqueKey:
      description: The unique key on that enforces uniqueness constraint on documents
        in the collection in the Azure Cosmos DB service.
      example:
        paths:
        - null
        - null
      properties:
        paths:
          description: List of paths must be unique for each document in the Azure
            Cosmos DB service
          items:
            $ref: '#/components/schemas/Path'
          type: array
      type: object
    UniqueKeyPolicy:
      description: The unique key policy configuration for specifying uniqueness constraints
        on documents in the collection in the Azure Cosmos DB service.
      example:
        uniqueKeys:
        - paths:
          - null
          - null
        - paths:
          - null
          - null
      properties:
        uniqueKeys:
          description: List of unique keys on that enforces uniqueness constraint
            on documents in the collection in the Azure Cosmos DB service.
          items:
            $ref: '#/components/schemas/UniqueKey'
          type: array
      type: object
    UnitType:
      description: The unit of the metric.
      enum:
      - Count
      - Bytes
      - Seconds
      - Percent
      - CountPerSecond
      - BytesPerSecond
      - Milliseconds
      type: string
      x-ms-enum:
        modelAsString: true
        name: UnitType
    Usage:
      description: The usage data for a usage request.
      example:
        unit: Count
        quotaPeriod: quotaPeriod
        limit: 6
        name:
          localizedValue: localizedValue
          value: value
        currentValue: 0
      properties:
        currentValue:
          description: Current value for this metric
          format: int64
          readOnly: true
          type: integer
        limit:
          description: Maximum value for this metric
          format: int64
          readOnly: true
          type: integer
        name:
          $ref: '#/components/schemas/MetricName'
        quotaPeriod:
          description: The quota period used to summarize the usage values.
          readOnly: true
          type: string
        unit:
          $ref: '#/components/schemas/UnitType'
      type: object
    UsagesResult:
      description: The response to a list usage request.
      example:
        value:
        - unit: Count
          quotaPeriod: quotaPeriod
          limit: 6
          name:
            localizedValue: localizedValue
            value: value
          currentValue: 0
        - unit: Count
          quotaPeriod: quotaPeriod
          limit: 6
          name:
            localizedValue: localizedValue
            value: value
          currentValue: 0
      properties:
        value:
          description: The list of usages for the database. A usage is a point in
            time metric
          items:
            $ref: '#/components/schemas/Usage'
          readOnly: true
          type: array
      type: object
    VirtualNetworkRule:
      description: Virtual Network ACL Rule object
      example:
        id: id
        ignoreMissingVNetServiceEndpoint: true
      properties:
        id:
          description: "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
          type: string
        ignoreMissingVNetServiceEndpoint:
          description: Create firewall rule before the virtual network has vnet service
            endpoint enabled.
          type: boolean
      type: object
    Operation_display:
      description: The object that represents the operation.
      example:
        Description: Description
        Resource: Resource
        Operation: Operation
        Provider: Provider
      properties:
        Description:
          description: Description of operation
          type: string
        Operation:
          description: "Operation type: Read, write, delete, etc."
          type: string
        Provider:
          description: "Service provider: Microsoft.ResourceProvider"
          type: string
        Resource:
          description: "Resource on which the operation is performed: Profile, endpoint,\
            \ etc."
          type: string
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: Impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

