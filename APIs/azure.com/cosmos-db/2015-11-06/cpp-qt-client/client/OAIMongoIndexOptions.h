/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2015-11-06
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMongoIndexOptions.h
 *
 * Cosmos DB MongoDB collection index options
 */

#ifndef OAIMongoIndexOptions_H
#define OAIMongoIndexOptions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMongoIndexOptions : public OAIObject {
public:
    OAIMongoIndexOptions();
    OAIMongoIndexOptions(QString json);
    ~OAIMongoIndexOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getExpireAfterSeconds() const;
    void setExpireAfterSeconds(const qint32 &expire_after_seconds);
    bool is_expire_after_seconds_Set() const;
    bool is_expire_after_seconds_Valid() const;

    bool isUnique() const;
    void setUnique(const bool &unique);
    bool is_unique_Set() const;
    bool is_unique_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_expire_after_seconds;
    bool m_expire_after_seconds_isSet;
    bool m_expire_after_seconds_isValid;

    bool m_unique;
    bool m_unique_isSet;
    bool m_unique_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMongoIndexOptions)

#endif // OAIMongoIndexOptions_H
