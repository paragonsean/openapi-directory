/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2019-12-12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISqlUserDefinedFunctionGetProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISqlUserDefinedFunctionGetProperties::OAISqlUserDefinedFunctionGetProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISqlUserDefinedFunctionGetProperties::OAISqlUserDefinedFunctionGetProperties() {
    this->initializeModel();
}

OAISqlUserDefinedFunctionGetProperties::~OAISqlUserDefinedFunctionGetProperties() {}

void OAISqlUserDefinedFunctionGetProperties::initializeModel() {

    m_resource_isSet = false;
    m_resource_isValid = false;
}

void OAISqlUserDefinedFunctionGetProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISqlUserDefinedFunctionGetProperties::fromJsonObject(QJsonObject json) {

    m_resource_isValid = ::OpenAPI::fromJsonValue(m_resource, json[QString("resource")]);
    m_resource_isSet = !json[QString("resource")].isNull() && m_resource_isValid;
}

QString OAISqlUserDefinedFunctionGetProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISqlUserDefinedFunctionGetProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_resource.isSet()) {
        obj.insert(QString("resource"), ::OpenAPI::toJsonValue(m_resource));
    }
    return obj;
}

OAISqlUserDefinedFunctionGetProperties_resource OAISqlUserDefinedFunctionGetProperties::getResource() const {
    return m_resource;
}
void OAISqlUserDefinedFunctionGetProperties::setResource(const OAISqlUserDefinedFunctionGetProperties_resource &resource) {
    m_resource = resource;
    m_resource_isSet = true;
}

bool OAISqlUserDefinedFunctionGetProperties::is_resource_Set() const{
    return m_resource_isSet;
}

bool OAISqlUserDefinedFunctionGetProperties::is_resource_Valid() const{
    return m_resource_isValid;
}

bool OAISqlUserDefinedFunctionGetProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISqlUserDefinedFunctionGetProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
