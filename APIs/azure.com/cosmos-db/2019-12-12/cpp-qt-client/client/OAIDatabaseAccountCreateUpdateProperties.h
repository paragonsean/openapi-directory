/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2019-12-12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatabaseAccountCreateUpdateProperties.h
 *
 * Properties to create and update Azure Cosmos DB database accounts.
 */

#ifndef OAIDatabaseAccountCreateUpdateProperties_H
#define OAIDatabaseAccountCreateUpdateProperties_H

#include <QJsonObject>

#include "OAICapability.h"
#include "OAIConnectorOffer.h"
#include "OAIConsistencyPolicy.h"
#include "OAIDatabaseAccountOfferType.h"
#include "OAILocation.h"
#include "OAIVirtualNetworkRule.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICapability;
class OAIConsistencyPolicy;
class OAILocation;
class OAIVirtualNetworkRule;

class OAIDatabaseAccountCreateUpdateProperties : public OAIObject {
public:
    OAIDatabaseAccountCreateUpdateProperties();
    OAIDatabaseAccountCreateUpdateProperties(QString json);
    ~OAIDatabaseAccountCreateUpdateProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICapability> getCapabilities() const;
    void setCapabilities(const QList<OAICapability> &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    OAIConnectorOffer getConnectorOffer() const;
    void setConnectorOffer(const OAIConnectorOffer &connector_offer);
    bool is_connector_offer_Set() const;
    bool is_connector_offer_Valid() const;

    OAIConsistencyPolicy getConsistencyPolicy() const;
    void setConsistencyPolicy(const OAIConsistencyPolicy &consistency_policy);
    bool is_consistency_policy_Set() const;
    bool is_consistency_policy_Valid() const;

    OAIDatabaseAccountOfferType getDatabaseAccountOfferType() const;
    void setDatabaseAccountOfferType(const OAIDatabaseAccountOfferType &database_account_offer_type);
    bool is_database_account_offer_type_Set() const;
    bool is_database_account_offer_type_Valid() const;

    bool isDisableKeyBasedMetadataWriteAccess() const;
    void setDisableKeyBasedMetadataWriteAccess(const bool &disable_key_based_metadata_write_access);
    bool is_disable_key_based_metadata_write_access_Set() const;
    bool is_disable_key_based_metadata_write_access_Valid() const;

    bool isEnableAutomaticFailover() const;
    void setEnableAutomaticFailover(const bool &enable_automatic_failover);
    bool is_enable_automatic_failover_Set() const;
    bool is_enable_automatic_failover_Valid() const;

    bool isEnableCassandraConnector() const;
    void setEnableCassandraConnector(const bool &enable_cassandra_connector);
    bool is_enable_cassandra_connector_Set() const;
    bool is_enable_cassandra_connector_Valid() const;

    bool isEnableMultipleWriteLocations() const;
    void setEnableMultipleWriteLocations(const bool &enable_multiple_write_locations);
    bool is_enable_multiple_write_locations_Set() const;
    bool is_enable_multiple_write_locations_Valid() const;

    QString getIpRangeFilter() const;
    void setIpRangeFilter(const QString &ip_range_filter);
    bool is_ip_range_filter_Set() const;
    bool is_ip_range_filter_Valid() const;

    bool isIsVirtualNetworkFilterEnabled() const;
    void setIsVirtualNetworkFilterEnabled(const bool &is_virtual_network_filter_enabled);
    bool is_is_virtual_network_filter_enabled_Set() const;
    bool is_is_virtual_network_filter_enabled_Valid() const;

    QString getKeyVaultKeyUri() const;
    void setKeyVaultKeyUri(const QString &key_vault_key_uri);
    bool is_key_vault_key_uri_Set() const;
    bool is_key_vault_key_uri_Valid() const;

    QList<OAILocation> getLocations() const;
    void setLocations(const QList<OAILocation> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    QList<OAIVirtualNetworkRule> getVirtualNetworkRules() const;
    void setVirtualNetworkRules(const QList<OAIVirtualNetworkRule> &virtual_network_rules);
    bool is_virtual_network_rules_Set() const;
    bool is_virtual_network_rules_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICapability> m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    OAIConnectorOffer m_connector_offer;
    bool m_connector_offer_isSet;
    bool m_connector_offer_isValid;

    OAIConsistencyPolicy m_consistency_policy;
    bool m_consistency_policy_isSet;
    bool m_consistency_policy_isValid;

    OAIDatabaseAccountOfferType m_database_account_offer_type;
    bool m_database_account_offer_type_isSet;
    bool m_database_account_offer_type_isValid;

    bool m_disable_key_based_metadata_write_access;
    bool m_disable_key_based_metadata_write_access_isSet;
    bool m_disable_key_based_metadata_write_access_isValid;

    bool m_enable_automatic_failover;
    bool m_enable_automatic_failover_isSet;
    bool m_enable_automatic_failover_isValid;

    bool m_enable_cassandra_connector;
    bool m_enable_cassandra_connector_isSet;
    bool m_enable_cassandra_connector_isValid;

    bool m_enable_multiple_write_locations;
    bool m_enable_multiple_write_locations_isSet;
    bool m_enable_multiple_write_locations_isValid;

    QString m_ip_range_filter;
    bool m_ip_range_filter_isSet;
    bool m_ip_range_filter_isValid;

    bool m_is_virtual_network_filter_enabled;
    bool m_is_virtual_network_filter_enabled_isSet;
    bool m_is_virtual_network_filter_enabled_isValid;

    QString m_key_vault_key_uri;
    bool m_key_vault_key_uri_isSet;
    bool m_key_vault_key_uri_isValid;

    QList<OAILocation> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    QList<OAIVirtualNetworkRule> m_virtual_network_rules;
    bool m_virtual_network_rules_isSet;
    bool m_virtual_network_rules_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatabaseAccountCreateUpdateProperties)

#endif // OAIDatabaseAccountCreateUpdateProperties_H
