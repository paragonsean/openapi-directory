# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sql_user_defined_function_resource import SqlUserDefinedFunctionResource
from openapi_server import util


class SqlUserDefinedFunctionCreateUpdateProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, options: Dict[str, str]=None, resource: SqlUserDefinedFunctionResource=None):
        """SqlUserDefinedFunctionCreateUpdateProperties - a model defined in OpenAPI

        :param options: The options of this SqlUserDefinedFunctionCreateUpdateProperties.
        :param resource: The resource of this SqlUserDefinedFunctionCreateUpdateProperties.
        """
        self.openapi_types = {
            'options': Dict[str, str],
            'resource': SqlUserDefinedFunctionResource
        }

        self.attribute_map = {
            'options': 'options',
            'resource': 'resource'
        }

        self._options = options
        self._resource = resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SqlUserDefinedFunctionCreateUpdateProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SqlUserDefinedFunctionCreateUpdateProperties of this SqlUserDefinedFunctionCreateUpdateProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def options(self):
        """Gets the options of this SqlUserDefinedFunctionCreateUpdateProperties.

        CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"

        :return: The options of this SqlUserDefinedFunctionCreateUpdateProperties.
        :rtype: Dict[str, str]
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this SqlUserDefinedFunctionCreateUpdateProperties.

        CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"

        :param options: The options of this SqlUserDefinedFunctionCreateUpdateProperties.
        :type options: Dict[str, str]
        """
        if options is None:
            raise ValueError("Invalid value for `options`, must not be `None`")

        self._options = options

    @property
    def resource(self):
        """Gets the resource of this SqlUserDefinedFunctionCreateUpdateProperties.


        :return: The resource of this SqlUserDefinedFunctionCreateUpdateProperties.
        :rtype: SqlUserDefinedFunctionResource
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this SqlUserDefinedFunctionCreateUpdateProperties.


        :param resource: The resource of this SqlUserDefinedFunctionCreateUpdateProperties.
        :type resource: SqlUserDefinedFunctionResource
        """
        if resource is None:
            raise ValueError("Invalid value for `resource`, must not be `None`")

        self._resource = resource
