/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2019-12-12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OperationDisplay model module.
 * @module model/OperationDisplay
 * @version 2019-12-12
 */
class OperationDisplay {
    /**
     * Constructs a new <code>OperationDisplay</code>.
     * The object that represents the operation.
     * @alias module:model/OperationDisplay
     */
    constructor() { 
        
        OperationDisplay.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationDisplay</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationDisplay} obj Optional instance to populate.
     * @return {module:model/OperationDisplay} The populated <code>OperationDisplay</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationDisplay();

            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Operation')) {
                obj['Operation'] = ApiClient.convertToType(data['Operation'], 'String');
            }
            if (data.hasOwnProperty('Provider')) {
                obj['Provider'] = ApiClient.convertToType(data['Provider'], 'String');
            }
            if (data.hasOwnProperty('Resource')) {
                obj['Resource'] = ApiClient.convertToType(data['Resource'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationDisplay</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationDisplay</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Operation'] && !(typeof data['Operation'] === 'string' || data['Operation'] instanceof String)) {
            throw new Error("Expected the field `Operation` to be a primitive type in the JSON string but got " + data['Operation']);
        }
        // ensure the json data is a string
        if (data['Provider'] && !(typeof data['Provider'] === 'string' || data['Provider'] instanceof String)) {
            throw new Error("Expected the field `Provider` to be a primitive type in the JSON string but got " + data['Provider']);
        }
        // ensure the json data is a string
        if (data['Resource'] && !(typeof data['Resource'] === 'string' || data['Resource'] instanceof String)) {
            throw new Error("Expected the field `Resource` to be a primitive type in the JSON string but got " + data['Resource']);
        }

        return true;
    }


}



/**
 * Description of operation
 * @member {String} Description
 */
OperationDisplay.prototype['Description'] = undefined;

/**
 * Operation type: Read, write, delete, etc.
 * @member {String} Operation
 */
OperationDisplay.prototype['Operation'] = undefined;

/**
 * Service provider: Microsoft.ResourceProvider
 * @member {String} Provider
 */
OperationDisplay.prototype['Provider'] = undefined;

/**
 * Resource on which the operation is performed: Profile, endpoint, etc.
 * @member {String} Resource
 */
OperationDisplay.prototype['Resource'] = undefined;






export default OperationDisplay;

