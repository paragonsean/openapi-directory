/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2019-12-12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatabaseAccountListReadOnlyKeysResult from './DatabaseAccountListReadOnlyKeysResult';

/**
 * The DatabaseAccountListKeysResult model module.
 * @module model/DatabaseAccountListKeysResult
 * @version 2019-12-12
 */
class DatabaseAccountListKeysResult {
    /**
     * Constructs a new <code>DatabaseAccountListKeysResult</code>.
     * The access keys for the given database account.
     * @alias module:model/DatabaseAccountListKeysResult
     * @implements module:model/DatabaseAccountListReadOnlyKeysResult
     */
    constructor() { 
        DatabaseAccountListReadOnlyKeysResult.initialize(this);
        DatabaseAccountListKeysResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DatabaseAccountListKeysResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatabaseAccountListKeysResult} obj Optional instance to populate.
     * @return {module:model/DatabaseAccountListKeysResult} The populated <code>DatabaseAccountListKeysResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatabaseAccountListKeysResult();
            DatabaseAccountListReadOnlyKeysResult.constructFromObject(data, obj);

            if (data.hasOwnProperty('primaryMasterKey')) {
                obj['primaryMasterKey'] = ApiClient.convertToType(data['primaryMasterKey'], 'String');
            }
            if (data.hasOwnProperty('secondaryMasterKey')) {
                obj['secondaryMasterKey'] = ApiClient.convertToType(data['secondaryMasterKey'], 'String');
            }
            if (data.hasOwnProperty('primaryReadonlyMasterKey')) {
                obj['primaryReadonlyMasterKey'] = ApiClient.convertToType(data['primaryReadonlyMasterKey'], 'String');
            }
            if (data.hasOwnProperty('secondaryReadonlyMasterKey')) {
                obj['secondaryReadonlyMasterKey'] = ApiClient.convertToType(data['secondaryReadonlyMasterKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatabaseAccountListKeysResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatabaseAccountListKeysResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['primaryMasterKey'] && !(typeof data['primaryMasterKey'] === 'string' || data['primaryMasterKey'] instanceof String)) {
            throw new Error("Expected the field `primaryMasterKey` to be a primitive type in the JSON string but got " + data['primaryMasterKey']);
        }
        // ensure the json data is a string
        if (data['secondaryMasterKey'] && !(typeof data['secondaryMasterKey'] === 'string' || data['secondaryMasterKey'] instanceof String)) {
            throw new Error("Expected the field `secondaryMasterKey` to be a primitive type in the JSON string but got " + data['secondaryMasterKey']);
        }
        // ensure the json data is a string
        if (data['primaryReadonlyMasterKey'] && !(typeof data['primaryReadonlyMasterKey'] === 'string' || data['primaryReadonlyMasterKey'] instanceof String)) {
            throw new Error("Expected the field `primaryReadonlyMasterKey` to be a primitive type in the JSON string but got " + data['primaryReadonlyMasterKey']);
        }
        // ensure the json data is a string
        if (data['secondaryReadonlyMasterKey'] && !(typeof data['secondaryReadonlyMasterKey'] === 'string' || data['secondaryReadonlyMasterKey'] instanceof String)) {
            throw new Error("Expected the field `secondaryReadonlyMasterKey` to be a primitive type in the JSON string but got " + data['secondaryReadonlyMasterKey']);
        }

        return true;
    }


}



/**
 * Base 64 encoded value of the primary read-write key.
 * @member {String} primaryMasterKey
 */
DatabaseAccountListKeysResult.prototype['primaryMasterKey'] = undefined;

/**
 * Base 64 encoded value of the secondary read-write key.
 * @member {String} secondaryMasterKey
 */
DatabaseAccountListKeysResult.prototype['secondaryMasterKey'] = undefined;

/**
 * Base 64 encoded value of the primary read-only key.
 * @member {String} primaryReadonlyMasterKey
 */
DatabaseAccountListKeysResult.prototype['primaryReadonlyMasterKey'] = undefined;

/**
 * Base 64 encoded value of the secondary read-only key.
 * @member {String} secondaryReadonlyMasterKey
 */
DatabaseAccountListKeysResult.prototype['secondaryReadonlyMasterKey'] = undefined;


// Implement DatabaseAccountListReadOnlyKeysResult interface:
/**
 * Base 64 encoded value of the primary read-only key.
 * @member {String} primaryReadonlyMasterKey
 */
DatabaseAccountListReadOnlyKeysResult.prototype['primaryReadonlyMasterKey'] = undefined;
/**
 * Base 64 encoded value of the secondary read-only key.
 * @member {String} secondaryReadonlyMasterKey
 */
DatabaseAccountListReadOnlyKeysResult.prototype['secondaryReadonlyMasterKey'] = undefined;




export default DatabaseAccountListKeysResult;

