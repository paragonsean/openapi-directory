/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CompositePath model module.
 * @module model/CompositePath
 * @version 2019-08-01
 */
class CompositePath {
    /**
     * Constructs a new <code>CompositePath</code>.
     * @alias module:model/CompositePath
     */
    constructor() { 
        
        CompositePath.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompositePath</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompositePath} obj Optional instance to populate.
     * @return {module:model/CompositePath} The populated <code>CompositePath</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompositePath();

            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompositePath</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompositePath</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['order'] && !(typeof data['order'] === 'string' || data['order'] instanceof String)) {
            throw new Error("Expected the field `order` to be a primitive type in the JSON string but got " + data['order']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }

        return true;
    }


}



/**
 * Sort order for composite paths.
 * @member {module:model/CompositePath.OrderEnum} order
 */
CompositePath.prototype['order'] = undefined;

/**
 * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/_*)
 * @member {String} path
 */
CompositePath.prototype['path'] = undefined;





/**
 * Allowed values for the <code>order</code> property.
 * @enum {String}
 * @readonly
 */
CompositePath['OrderEnum'] = {

    /**
     * value: "Ascending"
     * @const
     */
    "Ascending": "Ascending",

    /**
     * value: "Descending"
     * @const
     */
    "Descending": "Descending"
};



export default CompositePath;

