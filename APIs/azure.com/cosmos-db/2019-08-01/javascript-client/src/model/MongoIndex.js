/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MongoIndexKeys from './MongoIndexKeys';
import MongoIndexOptions from './MongoIndexOptions';

/**
 * The MongoIndex model module.
 * @module model/MongoIndex
 * @version 2019-08-01
 */
class MongoIndex {
    /**
     * Constructs a new <code>MongoIndex</code>.
     * Cosmos DB MongoDB collection index key
     * @alias module:model/MongoIndex
     */
    constructor() { 
        
        MongoIndex.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MongoIndex</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MongoIndex} obj Optional instance to populate.
     * @return {module:model/MongoIndex} The populated <code>MongoIndex</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MongoIndex();

            if (data.hasOwnProperty('key')) {
                obj['key'] = MongoIndexKeys.constructFromObject(data['key']);
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = MongoIndexOptions.constructFromObject(data['options']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MongoIndex</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MongoIndex</code>.
     */
    static validateJSON(data) {
        // validate the optional field `key`
        if (data['key']) { // data not null
          MongoIndexKeys.validateJSON(data['key']);
        }
        // validate the optional field `options`
        if (data['options']) { // data not null
          MongoIndexOptions.validateJSON(data['options']);
        }

        return true;
    }


}



/**
 * @member {module:model/MongoIndexKeys} key
 */
MongoIndex.prototype['key'] = undefined;

/**
 * @member {module:model/MongoIndexOptions} options
 */
MongoIndex.prototype['options'] = undefined;






export default MongoIndex;

