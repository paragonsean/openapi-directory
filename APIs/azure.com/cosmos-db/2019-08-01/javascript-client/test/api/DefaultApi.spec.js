/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CosmosDb);
  }
}(this, function(expect, CosmosDb) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CosmosDb.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('cassandraResourcesCreateUpdateCassandraKeyspace', function() {
      it('should call cassandraResourcesCreateUpdateCassandraKeyspace successfully', function(done) {
        //uncomment below and update the code to test cassandraResourcesCreateUpdateCassandraKeyspace
        //instance.cassandraResourcesCreateUpdateCassandraKeyspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cassandraResourcesCreateUpdateCassandraTable', function() {
      it('should call cassandraResourcesCreateUpdateCassandraTable successfully', function(done) {
        //uncomment below and update the code to test cassandraResourcesCreateUpdateCassandraTable
        //instance.cassandraResourcesCreateUpdateCassandraTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cassandraResourcesDeleteCassandraKeyspace', function() {
      it('should call cassandraResourcesDeleteCassandraKeyspace successfully', function(done) {
        //uncomment below and update the code to test cassandraResourcesDeleteCassandraKeyspace
        //instance.cassandraResourcesDeleteCassandraKeyspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cassandraResourcesDeleteCassandraTable', function() {
      it('should call cassandraResourcesDeleteCassandraTable successfully', function(done) {
        //uncomment below and update the code to test cassandraResourcesDeleteCassandraTable
        //instance.cassandraResourcesDeleteCassandraTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cassandraResourcesGetCassandraKeyspace', function() {
      it('should call cassandraResourcesGetCassandraKeyspace successfully', function(done) {
        //uncomment below and update the code to test cassandraResourcesGetCassandraKeyspace
        //instance.cassandraResourcesGetCassandraKeyspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cassandraResourcesGetCassandraKeyspaceThroughput', function() {
      it('should call cassandraResourcesGetCassandraKeyspaceThroughput successfully', function(done) {
        //uncomment below and update the code to test cassandraResourcesGetCassandraKeyspaceThroughput
        //instance.cassandraResourcesGetCassandraKeyspaceThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cassandraResourcesGetCassandraTable', function() {
      it('should call cassandraResourcesGetCassandraTable successfully', function(done) {
        //uncomment below and update the code to test cassandraResourcesGetCassandraTable
        //instance.cassandraResourcesGetCassandraTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cassandraResourcesGetCassandraTableThroughput', function() {
      it('should call cassandraResourcesGetCassandraTableThroughput successfully', function(done) {
        //uncomment below and update the code to test cassandraResourcesGetCassandraTableThroughput
        //instance.cassandraResourcesGetCassandraTableThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cassandraResourcesListCassandraKeyspaces', function() {
      it('should call cassandraResourcesListCassandraKeyspaces successfully', function(done) {
        //uncomment below and update the code to test cassandraResourcesListCassandraKeyspaces
        //instance.cassandraResourcesListCassandraKeyspaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cassandraResourcesListCassandraTables', function() {
      it('should call cassandraResourcesListCassandraTables successfully', function(done) {
        //uncomment below and update the code to test cassandraResourcesListCassandraTables
        //instance.cassandraResourcesListCassandraTables(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cassandraResourcesUpdateCassandraKeyspaceThroughput', function() {
      it('should call cassandraResourcesUpdateCassandraKeyspaceThroughput successfully', function(done) {
        //uncomment below and update the code to test cassandraResourcesUpdateCassandraKeyspaceThroughput
        //instance.cassandraResourcesUpdateCassandraKeyspaceThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cassandraResourcesUpdateCassandraTableThroughput', function() {
      it('should call cassandraResourcesUpdateCassandraTableThroughput successfully', function(done) {
        //uncomment below and update the code to test cassandraResourcesUpdateCassandraTableThroughput
        //instance.cassandraResourcesUpdateCassandraTableThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionListMetricDefinitions', function() {
      it('should call collectionListMetricDefinitions successfully', function(done) {
        //uncomment below and update the code to test collectionListMetricDefinitions
        //instance.collectionListMetricDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionListMetrics', function() {
      it('should call collectionListMetrics successfully', function(done) {
        //uncomment below and update the code to test collectionListMetrics
        //instance.collectionListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionListUsages', function() {
      it('should call collectionListUsages successfully', function(done) {
        //uncomment below and update the code to test collectionListUsages
        //instance.collectionListUsages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionPartitionListMetrics', function() {
      it('should call collectionPartitionListMetrics successfully', function(done) {
        //uncomment below and update the code to test collectionPartitionListMetrics
        //instance.collectionPartitionListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionPartitionListUsages', function() {
      it('should call collectionPartitionListUsages successfully', function(done) {
        //uncomment below and update the code to test collectionPartitionListUsages
        //instance.collectionPartitionListUsages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionPartitionRegionListMetrics', function() {
      it('should call collectionPartitionRegionListMetrics successfully', function(done) {
        //uncomment below and update the code to test collectionPartitionRegionListMetrics
        //instance.collectionPartitionRegionListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('collectionRegionListMetrics', function() {
      it('should call collectionRegionListMetrics successfully', function(done) {
        //uncomment below and update the code to test collectionRegionListMetrics
        //instance.collectionRegionListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountRegionListMetrics', function() {
      it('should call databaseAccountRegionListMetrics successfully', function(done) {
        //uncomment below and update the code to test databaseAccountRegionListMetrics
        //instance.databaseAccountRegionListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCheckNameExists', function() {
      it('should call databaseAccountsCheckNameExists successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCheckNameExists
        //instance.databaseAccountsCheckNameExists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsCreateOrUpdate', function() {
      it('should call databaseAccountsCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsCreateOrUpdate
        //instance.databaseAccountsCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsDelete', function() {
      it('should call databaseAccountsDelete successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsDelete
        //instance.databaseAccountsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsFailoverPriorityChange', function() {
      it('should call databaseAccountsFailoverPriorityChange successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsFailoverPriorityChange
        //instance.databaseAccountsFailoverPriorityChange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGet', function() {
      it('should call databaseAccountsGet successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGet
        //instance.databaseAccountsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsGetReadOnlyKeys', function() {
      it('should call databaseAccountsGetReadOnlyKeys successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsGetReadOnlyKeys
        //instance.databaseAccountsGetReadOnlyKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsList', function() {
      it('should call databaseAccountsList successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsList
        //instance.databaseAccountsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListByResourceGroup', function() {
      it('should call databaseAccountsListByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListByResourceGroup
        //instance.databaseAccountsListByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListConnectionStrings', function() {
      it('should call databaseAccountsListConnectionStrings successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListConnectionStrings
        //instance.databaseAccountsListConnectionStrings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListKeys', function() {
      it('should call databaseAccountsListKeys successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListKeys
        //instance.databaseAccountsListKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListMetricDefinitions', function() {
      it('should call databaseAccountsListMetricDefinitions successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListMetricDefinitions
        //instance.databaseAccountsListMetricDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListMetrics', function() {
      it('should call databaseAccountsListMetrics successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListMetrics
        //instance.databaseAccountsListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListReadOnlyKeys', function() {
      it('should call databaseAccountsListReadOnlyKeys successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListReadOnlyKeys
        //instance.databaseAccountsListReadOnlyKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsListUsages', function() {
      it('should call databaseAccountsListUsages successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsListUsages
        //instance.databaseAccountsListUsages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsOfflineRegion', function() {
      it('should call databaseAccountsOfflineRegion successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsOfflineRegion
        //instance.databaseAccountsOfflineRegion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsOnlineRegion', function() {
      it('should call databaseAccountsOnlineRegion successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsOnlineRegion
        //instance.databaseAccountsOnlineRegion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsRegenerateKey', function() {
      it('should call databaseAccountsRegenerateKey successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsRegenerateKey
        //instance.databaseAccountsRegenerateKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseAccountsUpdate', function() {
      it('should call databaseAccountsUpdate successfully', function(done) {
        //uncomment below and update the code to test databaseAccountsUpdate
        //instance.databaseAccountsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseListMetricDefinitions', function() {
      it('should call databaseListMetricDefinitions successfully', function(done) {
        //uncomment below and update the code to test databaseListMetricDefinitions
        //instance.databaseListMetricDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseListMetrics', function() {
      it('should call databaseListMetrics successfully', function(done) {
        //uncomment below and update the code to test databaseListMetrics
        //instance.databaseListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseListUsages', function() {
      it('should call databaseListUsages successfully', function(done) {
        //uncomment below and update the code to test databaseListUsages
        //instance.databaseListUsages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gremlinResourcesCreateUpdateGremlinDatabase', function() {
      it('should call gremlinResourcesCreateUpdateGremlinDatabase successfully', function(done) {
        //uncomment below and update the code to test gremlinResourcesCreateUpdateGremlinDatabase
        //instance.gremlinResourcesCreateUpdateGremlinDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gremlinResourcesCreateUpdateGremlinGraph', function() {
      it('should call gremlinResourcesCreateUpdateGremlinGraph successfully', function(done) {
        //uncomment below and update the code to test gremlinResourcesCreateUpdateGremlinGraph
        //instance.gremlinResourcesCreateUpdateGremlinGraph(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gremlinResourcesDeleteGremlinDatabase', function() {
      it('should call gremlinResourcesDeleteGremlinDatabase successfully', function(done) {
        //uncomment below and update the code to test gremlinResourcesDeleteGremlinDatabase
        //instance.gremlinResourcesDeleteGremlinDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gremlinResourcesDeleteGremlinGraph', function() {
      it('should call gremlinResourcesDeleteGremlinGraph successfully', function(done) {
        //uncomment below and update the code to test gremlinResourcesDeleteGremlinGraph
        //instance.gremlinResourcesDeleteGremlinGraph(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gremlinResourcesGetGremlinDatabase', function() {
      it('should call gremlinResourcesGetGremlinDatabase successfully', function(done) {
        //uncomment below and update the code to test gremlinResourcesGetGremlinDatabase
        //instance.gremlinResourcesGetGremlinDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gremlinResourcesGetGremlinDatabaseThroughput', function() {
      it('should call gremlinResourcesGetGremlinDatabaseThroughput successfully', function(done) {
        //uncomment below and update the code to test gremlinResourcesGetGremlinDatabaseThroughput
        //instance.gremlinResourcesGetGremlinDatabaseThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gremlinResourcesGetGremlinGraph', function() {
      it('should call gremlinResourcesGetGremlinGraph successfully', function(done) {
        //uncomment below and update the code to test gremlinResourcesGetGremlinGraph
        //instance.gremlinResourcesGetGremlinGraph(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gremlinResourcesGetGremlinGraphThroughput', function() {
      it('should call gremlinResourcesGetGremlinGraphThroughput successfully', function(done) {
        //uncomment below and update the code to test gremlinResourcesGetGremlinGraphThroughput
        //instance.gremlinResourcesGetGremlinGraphThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gremlinResourcesListGremlinDatabases', function() {
      it('should call gremlinResourcesListGremlinDatabases successfully', function(done) {
        //uncomment below and update the code to test gremlinResourcesListGremlinDatabases
        //instance.gremlinResourcesListGremlinDatabases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gremlinResourcesListGremlinGraphs', function() {
      it('should call gremlinResourcesListGremlinGraphs successfully', function(done) {
        //uncomment below and update the code to test gremlinResourcesListGremlinGraphs
        //instance.gremlinResourcesListGremlinGraphs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gremlinResourcesUpdateGremlinDatabaseThroughput', function() {
      it('should call gremlinResourcesUpdateGremlinDatabaseThroughput successfully', function(done) {
        //uncomment below and update the code to test gremlinResourcesUpdateGremlinDatabaseThroughput
        //instance.gremlinResourcesUpdateGremlinDatabaseThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gremlinResourcesUpdateGremlinGraphThroughput', function() {
      it('should call gremlinResourcesUpdateGremlinGraphThroughput successfully', function(done) {
        //uncomment below and update the code to test gremlinResourcesUpdateGremlinGraphThroughput
        //instance.gremlinResourcesUpdateGremlinGraphThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mongoDBResourcesCreateUpdateMongoDBCollection', function() {
      it('should call mongoDBResourcesCreateUpdateMongoDBCollection successfully', function(done) {
        //uncomment below and update the code to test mongoDBResourcesCreateUpdateMongoDBCollection
        //instance.mongoDBResourcesCreateUpdateMongoDBCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mongoDBResourcesCreateUpdateMongoDBDatabase', function() {
      it('should call mongoDBResourcesCreateUpdateMongoDBDatabase successfully', function(done) {
        //uncomment below and update the code to test mongoDBResourcesCreateUpdateMongoDBDatabase
        //instance.mongoDBResourcesCreateUpdateMongoDBDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mongoDBResourcesDeleteMongoDBCollection', function() {
      it('should call mongoDBResourcesDeleteMongoDBCollection successfully', function(done) {
        //uncomment below and update the code to test mongoDBResourcesDeleteMongoDBCollection
        //instance.mongoDBResourcesDeleteMongoDBCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mongoDBResourcesDeleteMongoDBDatabase', function() {
      it('should call mongoDBResourcesDeleteMongoDBDatabase successfully', function(done) {
        //uncomment below and update the code to test mongoDBResourcesDeleteMongoDBDatabase
        //instance.mongoDBResourcesDeleteMongoDBDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mongoDBResourcesGetMongoDBCollection', function() {
      it('should call mongoDBResourcesGetMongoDBCollection successfully', function(done) {
        //uncomment below and update the code to test mongoDBResourcesGetMongoDBCollection
        //instance.mongoDBResourcesGetMongoDBCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mongoDBResourcesGetMongoDBCollectionThroughput', function() {
      it('should call mongoDBResourcesGetMongoDBCollectionThroughput successfully', function(done) {
        //uncomment below and update the code to test mongoDBResourcesGetMongoDBCollectionThroughput
        //instance.mongoDBResourcesGetMongoDBCollectionThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mongoDBResourcesGetMongoDBDatabase', function() {
      it('should call mongoDBResourcesGetMongoDBDatabase successfully', function(done) {
        //uncomment below and update the code to test mongoDBResourcesGetMongoDBDatabase
        //instance.mongoDBResourcesGetMongoDBDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mongoDBResourcesGetMongoDBDatabaseThroughput', function() {
      it('should call mongoDBResourcesGetMongoDBDatabaseThroughput successfully', function(done) {
        //uncomment below and update the code to test mongoDBResourcesGetMongoDBDatabaseThroughput
        //instance.mongoDBResourcesGetMongoDBDatabaseThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mongoDBResourcesListMongoDBCollections', function() {
      it('should call mongoDBResourcesListMongoDBCollections successfully', function(done) {
        //uncomment below and update the code to test mongoDBResourcesListMongoDBCollections
        //instance.mongoDBResourcesListMongoDBCollections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mongoDBResourcesListMongoDBDatabases', function() {
      it('should call mongoDBResourcesListMongoDBDatabases successfully', function(done) {
        //uncomment below and update the code to test mongoDBResourcesListMongoDBDatabases
        //instance.mongoDBResourcesListMongoDBDatabases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mongoDBResourcesUpdateMongoDBCollectionThroughput', function() {
      it('should call mongoDBResourcesUpdateMongoDBCollectionThroughput successfully', function(done) {
        //uncomment below and update the code to test mongoDBResourcesUpdateMongoDBCollectionThroughput
        //instance.mongoDBResourcesUpdateMongoDBCollectionThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mongoDBResourcesUpdateMongoDBDatabaseThroughput', function() {
      it('should call mongoDBResourcesUpdateMongoDBDatabaseThroughput successfully', function(done) {
        //uncomment below and update the code to test mongoDBResourcesUpdateMongoDBDatabaseThroughput
        //instance.mongoDBResourcesUpdateMongoDBDatabaseThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partitionKeyRangeIdListMetrics', function() {
      it('should call partitionKeyRangeIdListMetrics successfully', function(done) {
        //uncomment below and update the code to test partitionKeyRangeIdListMetrics
        //instance.partitionKeyRangeIdListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partitionKeyRangeIdRegionListMetrics', function() {
      it('should call partitionKeyRangeIdRegionListMetrics successfully', function(done) {
        //uncomment below and update the code to test partitionKeyRangeIdRegionListMetrics
        //instance.partitionKeyRangeIdRegionListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('percentileListMetrics', function() {
      it('should call percentileListMetrics successfully', function(done) {
        //uncomment below and update the code to test percentileListMetrics
        //instance.percentileListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('percentileSourceTargetListMetrics', function() {
      it('should call percentileSourceTargetListMetrics successfully', function(done) {
        //uncomment below and update the code to test percentileSourceTargetListMetrics
        //instance.percentileSourceTargetListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('percentileTargetListMetrics', function() {
      it('should call percentileTargetListMetrics successfully', function(done) {
        //uncomment below and update the code to test percentileTargetListMetrics
        //instance.percentileTargetListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesCreateUpdateSqlContainer', function() {
      it('should call sqlResourcesCreateUpdateSqlContainer successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesCreateUpdateSqlContainer
        //instance.sqlResourcesCreateUpdateSqlContainer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesCreateUpdateSqlDatabase', function() {
      it('should call sqlResourcesCreateUpdateSqlDatabase successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesCreateUpdateSqlDatabase
        //instance.sqlResourcesCreateUpdateSqlDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesCreateUpdateSqlStoredProcedure', function() {
      it('should call sqlResourcesCreateUpdateSqlStoredProcedure successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesCreateUpdateSqlStoredProcedure
        //instance.sqlResourcesCreateUpdateSqlStoredProcedure(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesCreateUpdateSqlTrigger', function() {
      it('should call sqlResourcesCreateUpdateSqlTrigger successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesCreateUpdateSqlTrigger
        //instance.sqlResourcesCreateUpdateSqlTrigger(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesCreateUpdateSqlUserDefinedFunction', function() {
      it('should call sqlResourcesCreateUpdateSqlUserDefinedFunction successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesCreateUpdateSqlUserDefinedFunction
        //instance.sqlResourcesCreateUpdateSqlUserDefinedFunction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesDeleteSqlContainer', function() {
      it('should call sqlResourcesDeleteSqlContainer successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesDeleteSqlContainer
        //instance.sqlResourcesDeleteSqlContainer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesDeleteSqlDatabase', function() {
      it('should call sqlResourcesDeleteSqlDatabase successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesDeleteSqlDatabase
        //instance.sqlResourcesDeleteSqlDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesDeleteSqlStoredProcedure', function() {
      it('should call sqlResourcesDeleteSqlStoredProcedure successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesDeleteSqlStoredProcedure
        //instance.sqlResourcesDeleteSqlStoredProcedure(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesDeleteSqlTrigger', function() {
      it('should call sqlResourcesDeleteSqlTrigger successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesDeleteSqlTrigger
        //instance.sqlResourcesDeleteSqlTrigger(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesDeleteSqlUserDefinedFunction', function() {
      it('should call sqlResourcesDeleteSqlUserDefinedFunction successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesDeleteSqlUserDefinedFunction
        //instance.sqlResourcesDeleteSqlUserDefinedFunction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesGetSqlContainer', function() {
      it('should call sqlResourcesGetSqlContainer successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesGetSqlContainer
        //instance.sqlResourcesGetSqlContainer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesGetSqlContainerThroughput', function() {
      it('should call sqlResourcesGetSqlContainerThroughput successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesGetSqlContainerThroughput
        //instance.sqlResourcesGetSqlContainerThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesGetSqlDatabase', function() {
      it('should call sqlResourcesGetSqlDatabase successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesGetSqlDatabase
        //instance.sqlResourcesGetSqlDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesGetSqlDatabaseThroughput', function() {
      it('should call sqlResourcesGetSqlDatabaseThroughput successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesGetSqlDatabaseThroughput
        //instance.sqlResourcesGetSqlDatabaseThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesGetSqlStoredProcedure', function() {
      it('should call sqlResourcesGetSqlStoredProcedure successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesGetSqlStoredProcedure
        //instance.sqlResourcesGetSqlStoredProcedure(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesGetSqlTrigger', function() {
      it('should call sqlResourcesGetSqlTrigger successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesGetSqlTrigger
        //instance.sqlResourcesGetSqlTrigger(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesGetSqlUserDefinedFunction', function() {
      it('should call sqlResourcesGetSqlUserDefinedFunction successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesGetSqlUserDefinedFunction
        //instance.sqlResourcesGetSqlUserDefinedFunction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesListSqlContainers', function() {
      it('should call sqlResourcesListSqlContainers successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesListSqlContainers
        //instance.sqlResourcesListSqlContainers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesListSqlDatabases', function() {
      it('should call sqlResourcesListSqlDatabases successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesListSqlDatabases
        //instance.sqlResourcesListSqlDatabases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesListSqlStoredProcedures', function() {
      it('should call sqlResourcesListSqlStoredProcedures successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesListSqlStoredProcedures
        //instance.sqlResourcesListSqlStoredProcedures(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesListSqlTriggers', function() {
      it('should call sqlResourcesListSqlTriggers successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesListSqlTriggers
        //instance.sqlResourcesListSqlTriggers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesListSqlUserDefinedFunctions', function() {
      it('should call sqlResourcesListSqlUserDefinedFunctions successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesListSqlUserDefinedFunctions
        //instance.sqlResourcesListSqlUserDefinedFunctions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesUpdateSqlContainerThroughput', function() {
      it('should call sqlResourcesUpdateSqlContainerThroughput successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesUpdateSqlContainerThroughput
        //instance.sqlResourcesUpdateSqlContainerThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sqlResourcesUpdateSqlDatabaseThroughput', function() {
      it('should call sqlResourcesUpdateSqlDatabaseThroughput successfully', function(done) {
        //uncomment below and update the code to test sqlResourcesUpdateSqlDatabaseThroughput
        //instance.sqlResourcesUpdateSqlDatabaseThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tableResourcesCreateUpdateTable', function() {
      it('should call tableResourcesCreateUpdateTable successfully', function(done) {
        //uncomment below and update the code to test tableResourcesCreateUpdateTable
        //instance.tableResourcesCreateUpdateTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tableResourcesDeleteTable', function() {
      it('should call tableResourcesDeleteTable successfully', function(done) {
        //uncomment below and update the code to test tableResourcesDeleteTable
        //instance.tableResourcesDeleteTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tableResourcesGetTable', function() {
      it('should call tableResourcesGetTable successfully', function(done) {
        //uncomment below and update the code to test tableResourcesGetTable
        //instance.tableResourcesGetTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tableResourcesGetTableThroughput', function() {
      it('should call tableResourcesGetTableThroughput successfully', function(done) {
        //uncomment below and update the code to test tableResourcesGetTableThroughput
        //instance.tableResourcesGetTableThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tableResourcesListTables', function() {
      it('should call tableResourcesListTables successfully', function(done) {
        //uncomment below and update the code to test tableResourcesListTables
        //instance.tableResourcesListTables(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tableResourcesUpdateTableThroughput', function() {
      it('should call tableResourcesUpdateTableThroughput successfully', function(done) {
        //uncomment below and update the code to test tableResourcesUpdateTableThroughput
        //instance.tableResourcesUpdateTableThroughput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
