# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conflict_resolution_policy import ConflictResolutionPolicy
from openapi_server.models.container_partition_key import ContainerPartitionKey
from openapi_server.models.indexing_policy import IndexingPolicy
from openapi_server.models.unique_key_policy import UniqueKeyPolicy
from openapi_server import util


class GremlinGraphGetPropertiesResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conflict_resolution_policy: ConflictResolutionPolicy=None, default_ttl: int=None, id: str=None, indexing_policy: IndexingPolicy=None, partition_key: ContainerPartitionKey=None, unique_key_policy: UniqueKeyPolicy=None, etag: str=None, rid: str=None, ts: object=None):
        """GremlinGraphGetPropertiesResource - a model defined in OpenAPI

        :param conflict_resolution_policy: The conflict_resolution_policy of this GremlinGraphGetPropertiesResource.
        :param default_ttl: The default_ttl of this GremlinGraphGetPropertiesResource.
        :param id: The id of this GremlinGraphGetPropertiesResource.
        :param indexing_policy: The indexing_policy of this GremlinGraphGetPropertiesResource.
        :param partition_key: The partition_key of this GremlinGraphGetPropertiesResource.
        :param unique_key_policy: The unique_key_policy of this GremlinGraphGetPropertiesResource.
        :param etag: The etag of this GremlinGraphGetPropertiesResource.
        :param rid: The rid of this GremlinGraphGetPropertiesResource.
        :param ts: The ts of this GremlinGraphGetPropertiesResource.
        """
        self.openapi_types = {
            'conflict_resolution_policy': ConflictResolutionPolicy,
            'default_ttl': int,
            'id': str,
            'indexing_policy': IndexingPolicy,
            'partition_key': ContainerPartitionKey,
            'unique_key_policy': UniqueKeyPolicy,
            'etag': str,
            'rid': str,
            'ts': object
        }

        self.attribute_map = {
            'conflict_resolution_policy': 'conflictResolutionPolicy',
            'default_ttl': 'defaultTtl',
            'id': 'id',
            'indexing_policy': 'indexingPolicy',
            'partition_key': 'partitionKey',
            'unique_key_policy': 'uniqueKeyPolicy',
            'etag': '_etag',
            'rid': '_rid',
            'ts': '_ts'
        }

        self._conflict_resolution_policy = conflict_resolution_policy
        self._default_ttl = default_ttl
        self._id = id
        self._indexing_policy = indexing_policy
        self._partition_key = partition_key
        self._unique_key_policy = unique_key_policy
        self._etag = etag
        self._rid = rid
        self._ts = ts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GremlinGraphGetPropertiesResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GremlinGraphGetProperties_resource of this GremlinGraphGetPropertiesResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conflict_resolution_policy(self):
        """Gets the conflict_resolution_policy of this GremlinGraphGetPropertiesResource.


        :return: The conflict_resolution_policy of this GremlinGraphGetPropertiesResource.
        :rtype: ConflictResolutionPolicy
        """
        return self._conflict_resolution_policy

    @conflict_resolution_policy.setter
    def conflict_resolution_policy(self, conflict_resolution_policy):
        """Sets the conflict_resolution_policy of this GremlinGraphGetPropertiesResource.


        :param conflict_resolution_policy: The conflict_resolution_policy of this GremlinGraphGetPropertiesResource.
        :type conflict_resolution_policy: ConflictResolutionPolicy
        """

        self._conflict_resolution_policy = conflict_resolution_policy

    @property
    def default_ttl(self):
        """Gets the default_ttl of this GremlinGraphGetPropertiesResource.

        Default time to live

        :return: The default_ttl of this GremlinGraphGetPropertiesResource.
        :rtype: int
        """
        return self._default_ttl

    @default_ttl.setter
    def default_ttl(self, default_ttl):
        """Sets the default_ttl of this GremlinGraphGetPropertiesResource.

        Default time to live

        :param default_ttl: The default_ttl of this GremlinGraphGetPropertiesResource.
        :type default_ttl: int
        """

        self._default_ttl = default_ttl

    @property
    def id(self):
        """Gets the id of this GremlinGraphGetPropertiesResource.

        Name of the Cosmos DB Gremlin graph

        :return: The id of this GremlinGraphGetPropertiesResource.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GremlinGraphGetPropertiesResource.

        Name of the Cosmos DB Gremlin graph

        :param id: The id of this GremlinGraphGetPropertiesResource.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def indexing_policy(self):
        """Gets the indexing_policy of this GremlinGraphGetPropertiesResource.


        :return: The indexing_policy of this GremlinGraphGetPropertiesResource.
        :rtype: IndexingPolicy
        """
        return self._indexing_policy

    @indexing_policy.setter
    def indexing_policy(self, indexing_policy):
        """Sets the indexing_policy of this GremlinGraphGetPropertiesResource.


        :param indexing_policy: The indexing_policy of this GremlinGraphGetPropertiesResource.
        :type indexing_policy: IndexingPolicy
        """

        self._indexing_policy = indexing_policy

    @property
    def partition_key(self):
        """Gets the partition_key of this GremlinGraphGetPropertiesResource.


        :return: The partition_key of this GremlinGraphGetPropertiesResource.
        :rtype: ContainerPartitionKey
        """
        return self._partition_key

    @partition_key.setter
    def partition_key(self, partition_key):
        """Sets the partition_key of this GremlinGraphGetPropertiesResource.


        :param partition_key: The partition_key of this GremlinGraphGetPropertiesResource.
        :type partition_key: ContainerPartitionKey
        """

        self._partition_key = partition_key

    @property
    def unique_key_policy(self):
        """Gets the unique_key_policy of this GremlinGraphGetPropertiesResource.


        :return: The unique_key_policy of this GremlinGraphGetPropertiesResource.
        :rtype: UniqueKeyPolicy
        """
        return self._unique_key_policy

    @unique_key_policy.setter
    def unique_key_policy(self, unique_key_policy):
        """Sets the unique_key_policy of this GremlinGraphGetPropertiesResource.


        :param unique_key_policy: The unique_key_policy of this GremlinGraphGetPropertiesResource.
        :type unique_key_policy: UniqueKeyPolicy
        """

        self._unique_key_policy = unique_key_policy

    @property
    def etag(self):
        """Gets the etag of this GremlinGraphGetPropertiesResource.

        A system generated property representing the resource etag required for optimistic concurrency control.

        :return: The etag of this GremlinGraphGetPropertiesResource.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GremlinGraphGetPropertiesResource.

        A system generated property representing the resource etag required for optimistic concurrency control.

        :param etag: The etag of this GremlinGraphGetPropertiesResource.
        :type etag: str
        """

        self._etag = etag

    @property
    def rid(self):
        """Gets the rid of this GremlinGraphGetPropertiesResource.

        A system generated property. A unique identifier.

        :return: The rid of this GremlinGraphGetPropertiesResource.
        :rtype: str
        """
        return self._rid

    @rid.setter
    def rid(self, rid):
        """Sets the rid of this GremlinGraphGetPropertiesResource.

        A system generated property. A unique identifier.

        :param rid: The rid of this GremlinGraphGetPropertiesResource.
        :type rid: str
        """

        self._rid = rid

    @property
    def ts(self):
        """Gets the ts of this GremlinGraphGetPropertiesResource.

        A system generated property that denotes the last updated timestamp of the resource.

        :return: The ts of this GremlinGraphGetPropertiesResource.
        :rtype: object
        """
        return self._ts

    @ts.setter
    def ts(self, ts):
        """Sets the ts of this GremlinGraphGetPropertiesResource.

        A system generated property that denotes the last updated timestamp of the resource.

        :param ts: The ts of this GremlinGraphGetPropertiesResource.
        :type ts: object
        """

        self._ts = ts
