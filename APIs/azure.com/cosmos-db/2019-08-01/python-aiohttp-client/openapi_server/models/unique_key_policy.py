# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.unique_key import UniqueKey
from openapi_server import util


class UniqueKeyPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, unique_keys: List[UniqueKey]=None):
        """UniqueKeyPolicy - a model defined in OpenAPI

        :param unique_keys: The unique_keys of this UniqueKeyPolicy.
        """
        self.openapi_types = {
            'unique_keys': List[UniqueKey]
        }

        self.attribute_map = {
            'unique_keys': 'uniqueKeys'
        }

        self._unique_keys = unique_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UniqueKeyPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UniqueKeyPolicy of this UniqueKeyPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def unique_keys(self):
        """Gets the unique_keys of this UniqueKeyPolicy.

        List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.

        :return: The unique_keys of this UniqueKeyPolicy.
        :rtype: List[UniqueKey]
        """
        return self._unique_keys

    @unique_keys.setter
    def unique_keys(self, unique_keys):
        """Sets the unique_keys of this UniqueKeyPolicy.

        List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.

        :param unique_keys: The unique_keys of this UniqueKeyPolicy.
        :type unique_keys: List[UniqueKey]
        """

        self._unique_keys = unique_keys
