# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cassandra_partition_key import CassandraPartitionKey
from openapi_server.models.cluster_key import ClusterKey
from openapi_server.models.column import Column
from openapi_server import util


class CassandraSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_keys: List[ClusterKey]=None, columns: List[Column]=None, partition_keys: List[CassandraPartitionKey]=None):
        """CassandraSchema - a model defined in OpenAPI

        :param cluster_keys: The cluster_keys of this CassandraSchema.
        :param columns: The columns of this CassandraSchema.
        :param partition_keys: The partition_keys of this CassandraSchema.
        """
        self.openapi_types = {
            'cluster_keys': List[ClusterKey],
            'columns': List[Column],
            'partition_keys': List[CassandraPartitionKey]
        }

        self.attribute_map = {
            'cluster_keys': 'clusterKeys',
            'columns': 'columns',
            'partition_keys': 'partitionKeys'
        }

        self._cluster_keys = cluster_keys
        self._columns = columns
        self._partition_keys = partition_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CassandraSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CassandraSchema of this CassandraSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_keys(self):
        """Gets the cluster_keys of this CassandraSchema.

        List of cluster key.

        :return: The cluster_keys of this CassandraSchema.
        :rtype: List[ClusterKey]
        """
        return self._cluster_keys

    @cluster_keys.setter
    def cluster_keys(self, cluster_keys):
        """Sets the cluster_keys of this CassandraSchema.

        List of cluster key.

        :param cluster_keys: The cluster_keys of this CassandraSchema.
        :type cluster_keys: List[ClusterKey]
        """

        self._cluster_keys = cluster_keys

    @property
    def columns(self):
        """Gets the columns of this CassandraSchema.

        List of Cassandra table columns.

        :return: The columns of this CassandraSchema.
        :rtype: List[Column]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this CassandraSchema.

        List of Cassandra table columns.

        :param columns: The columns of this CassandraSchema.
        :type columns: List[Column]
        """

        self._columns = columns

    @property
    def partition_keys(self):
        """Gets the partition_keys of this CassandraSchema.

        List of partition key.

        :return: The partition_keys of this CassandraSchema.
        :rtype: List[CassandraPartitionKey]
        """
        return self._partition_keys

    @partition_keys.setter
    def partition_keys(self, partition_keys):
        """Sets the partition_keys of this CassandraSchema.

        List of partition key.

        :param partition_keys: The partition_keys of this CassandraSchema.
        :type partition_keys: List[CassandraPartitionKey]
        """

        self._partition_keys = partition_keys
