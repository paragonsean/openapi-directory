/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2015-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Capability from './Capability';
import ConnectorOffer from './ConnectorOffer';
import ConsistencyPolicy from './ConsistencyPolicy';
import DatabaseAccountOfferType from './DatabaseAccountOfferType';
import Location from './Location';
import VirtualNetworkRule from './VirtualNetworkRule';

/**
 * The DatabaseAccountCreateUpdateProperties model module.
 * @module model/DatabaseAccountCreateUpdateProperties
 * @version 2015-04-01
 */
class DatabaseAccountCreateUpdateProperties {
    /**
     * Constructs a new <code>DatabaseAccountCreateUpdateProperties</code>.
     * Properties to create and update Azure Cosmos DB database accounts.
     * @alias module:model/DatabaseAccountCreateUpdateProperties
     * @param databaseAccountOfferType {module:model/DatabaseAccountOfferType} 
     * @param locations {Array.<module:model/Location>} An array that contains the georeplication locations enabled for the Cosmos DB account.
     */
    constructor(databaseAccountOfferType, locations) { 
        
        DatabaseAccountCreateUpdateProperties.initialize(this, databaseAccountOfferType, locations);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, databaseAccountOfferType, locations) { 
        obj['databaseAccountOfferType'] = databaseAccountOfferType;
        obj['locations'] = locations;
    }

    /**
     * Constructs a <code>DatabaseAccountCreateUpdateProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatabaseAccountCreateUpdateProperties} obj Optional instance to populate.
     * @return {module:model/DatabaseAccountCreateUpdateProperties} The populated <code>DatabaseAccountCreateUpdateProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatabaseAccountCreateUpdateProperties();

            if (data.hasOwnProperty('capabilities')) {
                obj['capabilities'] = ApiClient.convertToType(data['capabilities'], [Capability]);
            }
            if (data.hasOwnProperty('connectorOffer')) {
                obj['connectorOffer'] = ConnectorOffer.constructFromObject(data['connectorOffer']);
            }
            if (data.hasOwnProperty('consistencyPolicy')) {
                obj['consistencyPolicy'] = ConsistencyPolicy.constructFromObject(data['consistencyPolicy']);
            }
            if (data.hasOwnProperty('databaseAccountOfferType')) {
                obj['databaseAccountOfferType'] = DatabaseAccountOfferType.constructFromObject(data['databaseAccountOfferType']);
            }
            if (data.hasOwnProperty('enableAutomaticFailover')) {
                obj['enableAutomaticFailover'] = ApiClient.convertToType(data['enableAutomaticFailover'], 'Boolean');
            }
            if (data.hasOwnProperty('enableCassandraConnector')) {
                obj['enableCassandraConnector'] = ApiClient.convertToType(data['enableCassandraConnector'], 'Boolean');
            }
            if (data.hasOwnProperty('enableMultipleWriteLocations')) {
                obj['enableMultipleWriteLocations'] = ApiClient.convertToType(data['enableMultipleWriteLocations'], 'Boolean');
            }
            if (data.hasOwnProperty('ipRangeFilter')) {
                obj['ipRangeFilter'] = ApiClient.convertToType(data['ipRangeFilter'], 'String');
            }
            if (data.hasOwnProperty('isVirtualNetworkFilterEnabled')) {
                obj['isVirtualNetworkFilterEnabled'] = ApiClient.convertToType(data['isVirtualNetworkFilterEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('locations')) {
                obj['locations'] = ApiClient.convertToType(data['locations'], [Location]);
            }
            if (data.hasOwnProperty('virtualNetworkRules')) {
                obj['virtualNetworkRules'] = ApiClient.convertToType(data['virtualNetworkRules'], [VirtualNetworkRule]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatabaseAccountCreateUpdateProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatabaseAccountCreateUpdateProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DatabaseAccountCreateUpdateProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['capabilities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['capabilities'])) {
                throw new Error("Expected the field `capabilities` to be an array in the JSON data but got " + data['capabilities']);
            }
            // validate the optional field `capabilities` (array)
            for (const item of data['capabilities']) {
                Capability.validateJSON(item);
            };
        }
        // validate the optional field `consistencyPolicy`
        if (data['consistencyPolicy']) { // data not null
          ConsistencyPolicy.validateJSON(data['consistencyPolicy']);
        }
        // ensure the json data is a string
        if (data['ipRangeFilter'] && !(typeof data['ipRangeFilter'] === 'string' || data['ipRangeFilter'] instanceof String)) {
            throw new Error("Expected the field `ipRangeFilter` to be a primitive type in the JSON string but got " + data['ipRangeFilter']);
        }
        if (data['locations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['locations'])) {
                throw new Error("Expected the field `locations` to be an array in the JSON data but got " + data['locations']);
            }
            // validate the optional field `locations` (array)
            for (const item of data['locations']) {
                Location.validateJSON(item);
            };
        }
        if (data['virtualNetworkRules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['virtualNetworkRules'])) {
                throw new Error("Expected the field `virtualNetworkRules` to be an array in the JSON data but got " + data['virtualNetworkRules']);
            }
            // validate the optional field `virtualNetworkRules` (array)
            for (const item of data['virtualNetworkRules']) {
                VirtualNetworkRule.validateJSON(item);
            };
        }

        return true;
    }


}

DatabaseAccountCreateUpdateProperties.RequiredProperties = ["databaseAccountOfferType", "locations"];

/**
 * List of Cosmos DB capabilities for the account
 * @member {Array.<module:model/Capability>} capabilities
 */
DatabaseAccountCreateUpdateProperties.prototype['capabilities'] = undefined;

/**
 * @member {module:model/ConnectorOffer} connectorOffer
 */
DatabaseAccountCreateUpdateProperties.prototype['connectorOffer'] = undefined;

/**
 * @member {module:model/ConsistencyPolicy} consistencyPolicy
 */
DatabaseAccountCreateUpdateProperties.prototype['consistencyPolicy'] = undefined;

/**
 * @member {module:model/DatabaseAccountOfferType} databaseAccountOfferType
 */
DatabaseAccountCreateUpdateProperties.prototype['databaseAccountOfferType'] = undefined;

/**
 * Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
 * @member {Boolean} enableAutomaticFailover
 */
DatabaseAccountCreateUpdateProperties.prototype['enableAutomaticFailover'] = undefined;

/**
 * Enables the cassandra connector on the Cosmos DB C* account
 * @member {Boolean} enableCassandraConnector
 */
DatabaseAccountCreateUpdateProperties.prototype['enableCassandraConnector'] = undefined;

/**
 * Enables the account to write in multiple locations
 * @member {Boolean} enableMultipleWriteLocations
 */
DatabaseAccountCreateUpdateProperties.prototype['enableMultipleWriteLocations'] = undefined;

/**
 * Cosmos DB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
 * @member {String} ipRangeFilter
 */
DatabaseAccountCreateUpdateProperties.prototype['ipRangeFilter'] = undefined;

/**
 * Flag to indicate whether to enable/disable Virtual Network ACL rules.
 * @member {Boolean} isVirtualNetworkFilterEnabled
 */
DatabaseAccountCreateUpdateProperties.prototype['isVirtualNetworkFilterEnabled'] = undefined;

/**
 * An array that contains the georeplication locations enabled for the Cosmos DB account.
 * @member {Array.<module:model/Location>} locations
 */
DatabaseAccountCreateUpdateProperties.prototype['locations'] = undefined;

/**
 * List of Virtual Network ACL rules configured for the Cosmos DB account.
 * @member {Array.<module:model/VirtualNetworkRule>} virtualNetworkRules
 */
DatabaseAccountCreateUpdateProperties.prototype['virtualNetworkRules'] = undefined;






export default DatabaseAccountCreateUpdateProperties;

