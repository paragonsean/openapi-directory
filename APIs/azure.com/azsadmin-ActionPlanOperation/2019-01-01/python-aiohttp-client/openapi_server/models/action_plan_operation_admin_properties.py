# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_plan_operation_admin_properties_error import ActionPlanOperationAdminPropertiesError
from openapi_server import util


class ActionPlanOperationAdminProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_plan_instance_id: str=None, action_plan_operation_id: str=None, blob_container_name: str=None, description: str=None, end_time: datetime=None, error: ActionPlanOperationAdminPropertiesError=None, outputs: object=None, parameters: object=None, provisioning_state: str=None, start_time: datetime=None, subscription_id: str=None, title: str=None, type: str=None):
        """ActionPlanOperationAdminProperties - a model defined in OpenAPI

        :param action_plan_instance_id: The action_plan_instance_id of this ActionPlanOperationAdminProperties.
        :param action_plan_operation_id: The action_plan_operation_id of this ActionPlanOperationAdminProperties.
        :param blob_container_name: The blob_container_name of this ActionPlanOperationAdminProperties.
        :param description: The description of this ActionPlanOperationAdminProperties.
        :param end_time: The end_time of this ActionPlanOperationAdminProperties.
        :param error: The error of this ActionPlanOperationAdminProperties.
        :param outputs: The outputs of this ActionPlanOperationAdminProperties.
        :param parameters: The parameters of this ActionPlanOperationAdminProperties.
        :param provisioning_state: The provisioning_state of this ActionPlanOperationAdminProperties.
        :param start_time: The start_time of this ActionPlanOperationAdminProperties.
        :param subscription_id: The subscription_id of this ActionPlanOperationAdminProperties.
        :param title: The title of this ActionPlanOperationAdminProperties.
        :param type: The type of this ActionPlanOperationAdminProperties.
        """
        self.openapi_types = {
            'action_plan_instance_id': str,
            'action_plan_operation_id': str,
            'blob_container_name': str,
            'description': str,
            'end_time': datetime,
            'error': ActionPlanOperationAdminPropertiesError,
            'outputs': object,
            'parameters': object,
            'provisioning_state': str,
            'start_time': datetime,
            'subscription_id': str,
            'title': str,
            'type': str
        }

        self.attribute_map = {
            'action_plan_instance_id': 'actionPlanInstanceId',
            'action_plan_operation_id': 'actionPlanOperationId',
            'blob_container_name': 'blobContainerName',
            'description': 'description',
            'end_time': 'endTime',
            'error': 'error',
            'outputs': 'outputs',
            'parameters': 'parameters',
            'provisioning_state': 'provisioningState',
            'start_time': 'startTime',
            'subscription_id': 'subscriptionId',
            'title': 'title',
            'type': 'type'
        }

        self._action_plan_instance_id = action_plan_instance_id
        self._action_plan_operation_id = action_plan_operation_id
        self._blob_container_name = blob_container_name
        self._description = description
        self._end_time = end_time
        self._error = error
        self._outputs = outputs
        self._parameters = parameters
        self._provisioning_state = provisioning_state
        self._start_time = start_time
        self._subscription_id = subscription_id
        self._title = title
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionPlanOperationAdminProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionPlanOperationAdminProperties of this ActionPlanOperationAdminProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_plan_instance_id(self):
        """Gets the action_plan_instance_id of this ActionPlanOperationAdminProperties.

        Action plan instance identifier

        :return: The action_plan_instance_id of this ActionPlanOperationAdminProperties.
        :rtype: str
        """
        return self._action_plan_instance_id

    @action_plan_instance_id.setter
    def action_plan_instance_id(self, action_plan_instance_id):
        """Sets the action_plan_instance_id of this ActionPlanOperationAdminProperties.

        Action plan instance identifier

        :param action_plan_instance_id: The action_plan_instance_id of this ActionPlanOperationAdminProperties.
        :type action_plan_instance_id: str
        """

        self._action_plan_instance_id = action_plan_instance_id

    @property
    def action_plan_operation_id(self):
        """Gets the action_plan_operation_id of this ActionPlanOperationAdminProperties.

        Action plan operation identifier

        :return: The action_plan_operation_id of this ActionPlanOperationAdminProperties.
        :rtype: str
        """
        return self._action_plan_operation_id

    @action_plan_operation_id.setter
    def action_plan_operation_id(self, action_plan_operation_id):
        """Sets the action_plan_operation_id of this ActionPlanOperationAdminProperties.

        Action plan operation identifier

        :param action_plan_operation_id: The action_plan_operation_id of this ActionPlanOperationAdminProperties.
        :type action_plan_operation_id: str
        """

        self._action_plan_operation_id = action_plan_operation_id

    @property
    def blob_container_name(self):
        """Gets the blob_container_name of this ActionPlanOperationAdminProperties.

        Blob container name storing the deployment data

        :return: The blob_container_name of this ActionPlanOperationAdminProperties.
        :rtype: str
        """
        return self._blob_container_name

    @blob_container_name.setter
    def blob_container_name(self, blob_container_name):
        """Sets the blob_container_name of this ActionPlanOperationAdminProperties.

        Blob container name storing the deployment data

        :param blob_container_name: The blob_container_name of this ActionPlanOperationAdminProperties.
        :type blob_container_name: str
        """

        self._blob_container_name = blob_container_name

    @property
    def description(self):
        """Gets the description of this ActionPlanOperationAdminProperties.

        The operation description

        :return: The description of this ActionPlanOperationAdminProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ActionPlanOperationAdminProperties.

        The operation description

        :param description: The description of this ActionPlanOperationAdminProperties.
        :type description: str
        """

        self._description = description

    @property
    def end_time(self):
        """Gets the end_time of this ActionPlanOperationAdminProperties.

        The deployment end time

        :return: The end_time of this ActionPlanOperationAdminProperties.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this ActionPlanOperationAdminProperties.

        The deployment end time

        :param end_time: The end_time of this ActionPlanOperationAdminProperties.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def error(self):
        """Gets the error of this ActionPlanOperationAdminProperties.


        :return: The error of this ActionPlanOperationAdminProperties.
        :rtype: ActionPlanOperationAdminPropertiesError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ActionPlanOperationAdminProperties.


        :param error: The error of this ActionPlanOperationAdminProperties.
        :type error: ActionPlanOperationAdminPropertiesError
        """

        self._error = error

    @property
    def outputs(self):
        """Gets the outputs of this ActionPlanOperationAdminProperties.

        The action plan operation outputs in JToken format

        :return: The outputs of this ActionPlanOperationAdminProperties.
        :rtype: object
        """
        return self._outputs

    @outputs.setter
    def outputs(self, outputs):
        """Sets the outputs of this ActionPlanOperationAdminProperties.

        The action plan operation outputs in JToken format

        :param outputs: The outputs of this ActionPlanOperationAdminProperties.
        :type outputs: object
        """

        self._outputs = outputs

    @property
    def parameters(self):
        """Gets the parameters of this ActionPlanOperationAdminProperties.

        The deployment parameters in JToken format

        :return: The parameters of this ActionPlanOperationAdminProperties.
        :rtype: object
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this ActionPlanOperationAdminProperties.

        The deployment parameters in JToken format

        :param parameters: The parameters of this ActionPlanOperationAdminProperties.
        :type parameters: object
        """

        self._parameters = parameters

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ActionPlanOperationAdminProperties.

        The provisioning state

        :return: The provisioning_state of this ActionPlanOperationAdminProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ActionPlanOperationAdminProperties.

        The provisioning state

        :param provisioning_state: The provisioning_state of this ActionPlanOperationAdminProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def start_time(self):
        """Gets the start_time of this ActionPlanOperationAdminProperties.

        The deployment start time

        :return: The start_time of this ActionPlanOperationAdminProperties.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ActionPlanOperationAdminProperties.

        The deployment start time

        :param start_time: The start_time of this ActionPlanOperationAdminProperties.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def subscription_id(self):
        """Gets the subscription_id of this ActionPlanOperationAdminProperties.

        The target subscription identifier

        :return: The subscription_id of this ActionPlanOperationAdminProperties.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this ActionPlanOperationAdminProperties.

        The target subscription identifier

        :param subscription_id: The subscription_id of this ActionPlanOperationAdminProperties.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def title(self):
        """Gets the title of this ActionPlanOperationAdminProperties.

        The operation title

        :return: The title of this ActionPlanOperationAdminProperties.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ActionPlanOperationAdminProperties.

        The operation title

        :param title: The title of this ActionPlanOperationAdminProperties.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this ActionPlanOperationAdminProperties.

        Action plan operation type

        :return: The type of this ActionPlanOperationAdminProperties.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ActionPlanOperationAdminProperties.

        Action plan operation type

        :param type: The type of this ActionPlanOperationAdminProperties.
        :type type: str
        """

        self._type = type
