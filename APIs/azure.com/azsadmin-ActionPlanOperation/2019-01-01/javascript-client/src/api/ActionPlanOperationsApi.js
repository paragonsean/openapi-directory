/**
 * DeploymentAdminClient
 * Deployment Admin Client.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ActionPlanOperationResourceEntity from '../model/ActionPlanOperationResourceEntity';
import ActionPlanOperationsList from '../model/ActionPlanOperationsList';

/**
* ActionPlanOperations service.
* @module api/ActionPlanOperationsApi
* @version 2019-01-01
*/
export default class ActionPlanOperationsApi {

    /**
    * Constructs a new ActionPlanOperationsApi. 
    * @alias module:api/ActionPlanOperationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the actionPlanOperationsGet operation.
     * @callback module:api/ActionPlanOperationsApi~actionPlanOperationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActionPlanOperationResourceEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the specified action plan operation
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} planId Identifier of the action plan.
     * @param {String} operationId Identifier of the action plan operation.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/ActionPlanOperationsApi~actionPlanOperationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActionPlanOperationResourceEntity}
     */
    actionPlanOperationsGet(subscriptionId, planId, operationId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling actionPlanOperationsGet");
      }
      // verify the required parameter 'planId' is set
      if (planId === undefined || planId === null) {
        throw new Error("Missing the required parameter 'planId' when calling actionPlanOperationsGet");
      }
      // verify the required parameter 'operationId' is set
      if (operationId === undefined || operationId === null) {
        throw new Error("Missing the required parameter 'operationId' when calling actionPlanOperationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling actionPlanOperationsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'planId': planId,
        'operationId': operationId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ActionPlanOperationResourceEntity;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/actionPlans/{planId}/operations/{operationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the actionPlanOperationsList operation.
     * @callback module:api/ActionPlanOperationsApi~actionPlanOperationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActionPlanOperationsList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the action plan operations
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} planId Identifier of the action plan.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/ActionPlanOperationsApi~actionPlanOperationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActionPlanOperationsList}
     */
    actionPlanOperationsList(subscriptionId, planId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling actionPlanOperationsList");
      }
      // verify the required parameter 'planId' is set
      if (planId === undefined || planId === null) {
        throw new Error("Missing the required parameter 'planId' when calling actionPlanOperationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling actionPlanOperationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'planId': planId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ActionPlanOperationsList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/actionPlans/{planId}/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
