/*
 * Azure Monitor Private Link Scopes
 * Azure Monitor API reference for Private Links Scopes management.
 *
 * The version of the OpenAPI document: 2019-10-17-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ScopedResource;
import org.openapitools.client.model.ScopedResourceListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PrivateLinkScopedResourcesApi
 */
@Disabled
public class PrivateLinkScopedResourcesApiTest {

    private final PrivateLinkScopedResourcesApi api = new PrivateLinkScopedResourcesApi();

    /**
     * Approve or reject a private endpoint connection with a given name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateLinkScopedResourcesCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String scopeName = null;
        String name = null;
        ScopedResource parameters = null;
        ScopedResource response = api.privateLinkScopedResourcesCreateOrUpdate(subscriptionId, resourceGroupName, apiVersion, scopeName, name, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a private endpoint connection with a given name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateLinkScopedResourcesDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String scopeName = null;
        String name = null;
        api.privateLinkScopedResourcesDelete(subscriptionId, resourceGroupName, apiVersion, scopeName, name);
        // TODO: test validations
    }

    /**
     * Gets a scoped resource in a private link scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateLinkScopedResourcesGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String scopeName = null;
        String name = null;
        ScopedResource response = api.privateLinkScopedResourcesGet(subscriptionId, resourceGroupName, apiVersion, scopeName, name);
        // TODO: test validations
    }

    /**
     * Gets all private endpoint connections on a private link scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateLinkScopedResourcesListByPrivateLinkScopeTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String scopeName = null;
        ScopedResourceListResult response = api.privateLinkScopedResourcesListByPrivateLinkScope(subscriptionId, resourceGroupName, apiVersion, scopeName);
        // TODO: test validations
    }

}
