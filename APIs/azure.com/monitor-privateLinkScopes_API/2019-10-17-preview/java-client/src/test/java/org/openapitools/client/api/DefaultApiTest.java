/*
 * Azure Monitor Private Link Scopes
 * Azure Monitor API reference for Private Links Scopes management.
 *
 * The version of the OpenAPI document: 2019-10-17-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AzureMonitorPrivateLinkScope;
import org.openapitools.client.model.AzureMonitorPrivateLinkScopeListResult;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.TagsResource;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Creates (or updates) a Azure Monitor PrivateLinkScope. Note: You cannot specify a different value for InstrumentationKey nor AppId in the Put operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateLinkScopesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String scopeName = null;
        AzureMonitorPrivateLinkScope azureMonitorPrivateLinkScopePayload = null;
        AzureMonitorPrivateLinkScope response = api.privateLinkScopesCreateOrUpdate(resourceGroupName, apiVersion, subscriptionId, scopeName, azureMonitorPrivateLinkScopePayload);
        // TODO: test validations
    }

    /**
     * Deletes a Azure Monitor PrivateLinkScope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateLinkScopesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String scopeName = null;
        api.privateLinkScopesDelete(resourceGroupName, apiVersion, subscriptionId, scopeName);
        // TODO: test validations
    }

    /**
     * Returns a Azure Monitor PrivateLinkScope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateLinkScopesGetTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String scopeName = null;
        AzureMonitorPrivateLinkScope response = api.privateLinkScopesGet(resourceGroupName, apiVersion, subscriptionId, scopeName);
        // TODO: test validations
    }

    /**
     * Gets a list of all Azure Monitor PrivateLinkScopes within a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateLinkScopesListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        AzureMonitorPrivateLinkScopeListResult response = api.privateLinkScopesList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a list of Azure Monitor PrivateLinkScopes within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateLinkScopesListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        AzureMonitorPrivateLinkScopeListResult response = api.privateLinkScopesListByResourceGroup(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates an existing PrivateLinkScope&#39;s tags. To update other fields use the CreateOrUpdate method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateLinkScopesUpdateTagsTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String scopeName = null;
        TagsResource privateLinkScopeTags = null;
        AzureMonitorPrivateLinkScope response = api.privateLinkScopesUpdateTags(resourceGroupName, apiVersion, subscriptionId, scopeName, privateLinkScopeTags);
        // TODO: test validations
    }

}
