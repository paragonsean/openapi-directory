# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScopedResourceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, linked_resource_id: str=None, provisioning_state: str=None):
        """ScopedResourceProperties - a model defined in OpenAPI

        :param linked_resource_id: The linked_resource_id of this ScopedResourceProperties.
        :param provisioning_state: The provisioning_state of this ScopedResourceProperties.
        """
        self.openapi_types = {
            'linked_resource_id': str,
            'provisioning_state': str
        }

        self.attribute_map = {
            'linked_resource_id': 'linkedResourceId',
            'provisioning_state': 'provisioningState'
        }

        self._linked_resource_id = linked_resource_id
        self._provisioning_state = provisioning_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScopedResourceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScopedResourceProperties of this ScopedResourceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def linked_resource_id(self):
        """Gets the linked_resource_id of this ScopedResourceProperties.

        The resource id of the scoped Azure monitor resource.

        :return: The linked_resource_id of this ScopedResourceProperties.
        :rtype: str
        """
        return self._linked_resource_id

    @linked_resource_id.setter
    def linked_resource_id(self, linked_resource_id):
        """Sets the linked_resource_id of this ScopedResourceProperties.

        The resource id of the scoped Azure monitor resource.

        :param linked_resource_id: The linked_resource_id of this ScopedResourceProperties.
        :type linked_resource_id: str
        """

        self._linked_resource_id = linked_resource_id

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ScopedResourceProperties.

        State of the private endpoint connection.

        :return: The provisioning_state of this ScopedResourceProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ScopedResourceProperties.

        State of the private endpoint connection.

        :param provisioning_state: The provisioning_state of this ScopedResourceProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state
