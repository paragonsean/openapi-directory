/**
 * Azure Monitor Private Link Scopes
 * Azure Monitor API reference for Private Links Scopes management.
 *
 * The version of the OpenAPI document: 2019-10-17-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AzureMonitorPrivateLinkScope from '../model/AzureMonitorPrivateLinkScope';
import AzureMonitorPrivateLinkScopeListResult from '../model/AzureMonitorPrivateLinkScopeListResult';
import ErrorResponse from '../model/ErrorResponse';
import TagsResource from '../model/TagsResource';

/**
* Default service.
* @module api/DefaultApi
* @version 2019-10-17-preview
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the privateLinkScopesCreateOrUpdate operation.
     * @callback module:api/DefaultApi~privateLinkScopesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AzureMonitorPrivateLinkScope} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates (or updates) a Azure Monitor PrivateLinkScope. Note: You cannot specify a different value for InstrumentationKey nor AppId in the Put operation.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} scopeName The name of the Azure Monitor PrivateLinkScope resource.
     * @param {module:model/AzureMonitorPrivateLinkScope} azureMonitorPrivateLinkScopePayload Properties that need to be specified to create or update a Azure Monitor PrivateLinkScope.
     * @param {module:api/DefaultApi~privateLinkScopesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AzureMonitorPrivateLinkScope}
     */
    privateLinkScopesCreateOrUpdate(resourceGroupName, apiVersion, subscriptionId, scopeName, azureMonitorPrivateLinkScopePayload, callback) {
      let postBody = azureMonitorPrivateLinkScopePayload;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateLinkScopesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateLinkScopesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateLinkScopesCreateOrUpdate");
      }
      // verify the required parameter 'scopeName' is set
      if (scopeName === undefined || scopeName === null) {
        throw new Error("Missing the required parameter 'scopeName' when calling privateLinkScopesCreateOrUpdate");
      }
      // verify the required parameter 'azureMonitorPrivateLinkScopePayload' is set
      if (azureMonitorPrivateLinkScopePayload === undefined || azureMonitorPrivateLinkScopePayload === null) {
        throw new Error("Missing the required parameter 'azureMonitorPrivateLinkScopePayload' when calling privateLinkScopesCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'scopeName': scopeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AzureMonitorPrivateLinkScope;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/privateLinkScopes/{scopeName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateLinkScopesDelete operation.
     * @callback module:api/DefaultApi~privateLinkScopesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Azure Monitor PrivateLinkScope.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} scopeName The name of the Azure Monitor PrivateLinkScope resource.
     * @param {module:api/DefaultApi~privateLinkScopesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    privateLinkScopesDelete(resourceGroupName, apiVersion, subscriptionId, scopeName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateLinkScopesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateLinkScopesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateLinkScopesDelete");
      }
      // verify the required parameter 'scopeName' is set
      if (scopeName === undefined || scopeName === null) {
        throw new Error("Missing the required parameter 'scopeName' when calling privateLinkScopesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'scopeName': scopeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/privateLinkScopes/{scopeName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateLinkScopesGet operation.
     * @callback module:api/DefaultApi~privateLinkScopesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AzureMonitorPrivateLinkScope} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a Azure Monitor PrivateLinkScope.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} scopeName The name of the Azure Monitor PrivateLinkScope resource.
     * @param {module:api/DefaultApi~privateLinkScopesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AzureMonitorPrivateLinkScope}
     */
    privateLinkScopesGet(resourceGroupName, apiVersion, subscriptionId, scopeName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateLinkScopesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateLinkScopesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateLinkScopesGet");
      }
      // verify the required parameter 'scopeName' is set
      if (scopeName === undefined || scopeName === null) {
        throw new Error("Missing the required parameter 'scopeName' when calling privateLinkScopesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'scopeName': scopeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AzureMonitorPrivateLinkScope;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/privateLinkScopes/{scopeName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateLinkScopesList operation.
     * @callback module:api/DefaultApi~privateLinkScopesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AzureMonitorPrivateLinkScopeListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of all Azure Monitor PrivateLinkScopes within a subscription.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {module:api/DefaultApi~privateLinkScopesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AzureMonitorPrivateLinkScopeListResult}
     */
    privateLinkScopesList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateLinkScopesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateLinkScopesList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AzureMonitorPrivateLinkScopeListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/microsoft.insights/privateLinkScopes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateLinkScopesListByResourceGroup operation.
     * @callback module:api/DefaultApi~privateLinkScopesListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AzureMonitorPrivateLinkScopeListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of Azure Monitor PrivateLinkScopes within a resource group.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {module:api/DefaultApi~privateLinkScopesListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AzureMonitorPrivateLinkScopeListResult}
     */
    privateLinkScopesListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateLinkScopesListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateLinkScopesListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateLinkScopesListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AzureMonitorPrivateLinkScopeListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/privateLinkScopes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateLinkScopesUpdateTags operation.
     * @callback module:api/DefaultApi~privateLinkScopesUpdateTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AzureMonitorPrivateLinkScope} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing PrivateLinkScope's tags. To update other fields use the CreateOrUpdate method.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} scopeName The name of the Azure Monitor PrivateLinkScope resource.
     * @param {module:model/TagsResource} privateLinkScopeTags Updated tag information to set into the PrivateLinkScope instance.
     * @param {module:api/DefaultApi~privateLinkScopesUpdateTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AzureMonitorPrivateLinkScope}
     */
    privateLinkScopesUpdateTags(resourceGroupName, apiVersion, subscriptionId, scopeName, privateLinkScopeTags, callback) {
      let postBody = privateLinkScopeTags;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateLinkScopesUpdateTags");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateLinkScopesUpdateTags");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateLinkScopesUpdateTags");
      }
      // verify the required parameter 'scopeName' is set
      if (scopeName === undefined || scopeName === null) {
        throw new Error("Missing the required parameter 'scopeName' when calling privateLinkScopesUpdateTags");
      }
      // verify the required parameter 'privateLinkScopeTags' is set
      if (privateLinkScopeTags === undefined || privateLinkScopeTags === null) {
        throw new Error("Missing the required parameter 'privateLinkScopeTags' when calling privateLinkScopesUpdateTags");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'scopeName': scopeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AzureMonitorPrivateLinkScope;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/privateLinkScopes/{scopeName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
