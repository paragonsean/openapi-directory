/**
 * Azure Monitor Private Link Scopes
 * Azure Monitor API reference for Private Links Scopes management.
 *
 * The version of the OpenAPI document: 2019-10-17-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PrivateLinkResource from '../model/PrivateLinkResource';
import PrivateLinkResourceListResult from '../model/PrivateLinkResourceListResult';

/**
* PrivateLinkResources service.
* @module api/PrivateLinkResourcesApi
* @version 2019-10-17-preview
*/
export default class PrivateLinkResourcesApi {

    /**
    * Constructs a new PrivateLinkResourcesApi. 
    * @alias module:api/PrivateLinkResourcesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the privateLinkResourcesGet operation.
     * @callback module:api/PrivateLinkResourcesApi~privateLinkResourcesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PrivateLinkResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the private link resources that need to be created for a Azure Monitor PrivateLinkScope.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} scopeName Name of the Azure Monitor PrivateLinkScope that will contain the datasource
     * @param {String} groupName The name of the private link resource.
     * @param {module:api/PrivateLinkResourcesApi~privateLinkResourcesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PrivateLinkResource}
     */
    privateLinkResourcesGet(subscriptionId, resourceGroupName, apiVersion, scopeName, groupName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateLinkResourcesGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateLinkResourcesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateLinkResourcesGet");
      }
      // verify the required parameter 'scopeName' is set
      if (scopeName === undefined || scopeName === null) {
        throw new Error("Missing the required parameter 'scopeName' when calling privateLinkResourcesGet");
      }
      // verify the required parameter 'groupName' is set
      if (groupName === undefined || groupName === null) {
        throw new Error("Missing the required parameter 'groupName' when calling privateLinkResourcesGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'scopeName': scopeName,
        'groupName': groupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PrivateLinkResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/privateLinkScopes/{scopeName}/privateLinkResources/{groupName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateLinkResourcesListByPrivateLinkScope operation.
     * @callback module:api/PrivateLinkResourcesApi~privateLinkResourcesListByPrivateLinkScopeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PrivateLinkResourceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the private link resources that need to be created for a Azure Monitor PrivateLinkScope.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} scopeName Name of the Azure Monitor PrivateLinkScope that will contain the datasource
     * @param {module:api/PrivateLinkResourcesApi~privateLinkResourcesListByPrivateLinkScopeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PrivateLinkResourceListResult}
     */
    privateLinkResourcesListByPrivateLinkScope(subscriptionId, resourceGroupName, apiVersion, scopeName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateLinkResourcesListByPrivateLinkScope");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateLinkResourcesListByPrivateLinkScope");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateLinkResourcesListByPrivateLinkScope");
      }
      // verify the required parameter 'scopeName' is set
      if (scopeName === undefined || scopeName === null) {
        throw new Error("Missing the required parameter 'scopeName' when calling privateLinkResourcesListByPrivateLinkScope");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'scopeName': scopeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PrivateLinkResourceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/privateLinkScopes/{scopeName}/privateLinkResources', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
