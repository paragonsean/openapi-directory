/**
 * CertificateRegistrationProvider API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationLogSpecificationsInner from './CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationLogSpecificationsInner';
import CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner from './CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner';

/**
 * The CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification model module.
 * @module model/CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification
 * @version 2019-08-01
 */
class CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification {
    /**
     * Constructs a new <code>CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification</code>.
     * Resource metrics service provided by Microsoft.Insights resource provider.
     * @alias module:model/CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification
     */
    constructor() { 
        
        CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification} obj Optional instance to populate.
     * @return {module:model/CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification} The populated <code>CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification();

            if (data.hasOwnProperty('logSpecifications')) {
                obj['logSpecifications'] = ApiClient.convertToType(data['logSpecifications'], [CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationLogSpecificationsInner]);
            }
            if (data.hasOwnProperty('metricSpecifications')) {
                obj['metricSpecifications'] = ApiClient.convertToType(data['metricSpecifications'], [CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification</code>.
     */
    static validateJSON(data) {
        if (data['logSpecifications']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['logSpecifications'])) {
                throw new Error("Expected the field `logSpecifications` to be an array in the JSON data but got " + data['logSpecifications']);
            }
            // validate the optional field `logSpecifications` (array)
            for (const item of data['logSpecifications']) {
                CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationLogSpecificationsInner.validateJSON(item);
            };
        }
        if (data['metricSpecifications']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metricSpecifications'])) {
                throw new Error("Expected the field `metricSpecifications` to be an array in the JSON data but got " + data['metricSpecifications']);
            }
            // validate the optional field `metricSpecifications` (array)
            for (const item of data['metricSpecifications']) {
                CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationLogSpecificationsInner>} logSpecifications
 */
CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification.prototype['logSpecifications'] = undefined;

/**
 * @member {Array.<module:model/CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner>} metricSpecifications
 */
CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification.prototype['metricSpecifications'] = undefined;






export default CertificateRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecification;

