/**
 * CertificateRegistrationProvider API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner() {
    this->initializeModel();
}

OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::~OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner() {}

void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::initializeModel() {

    m_aggregation_type_isSet = false;
    m_aggregation_type_isValid = false;

    m_availabilities_isSet = false;
    m_availabilities_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;

    m_dimensions_isSet = false;
    m_dimensions_isValid = false;

    m_display_description_isSet = false;
    m_display_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_enable_regional_mdm_account_isSet = false;
    m_enable_regional_mdm_account_isValid = false;

    m_fill_gap_with_zero_isSet = false;
    m_fill_gap_with_zero_isValid = false;

    m_is_internal_isSet = false;
    m_is_internal_isValid = false;

    m_metric_filter_pattern_isSet = false;
    m_metric_filter_pattern_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_source_mdm_account_isSet = false;
    m_source_mdm_account_isValid = false;

    m_source_mdm_namespace_isSet = false;
    m_source_mdm_namespace_isValid = false;

    m_supports_instance_level_aggregation_isSet = false;
    m_supports_instance_level_aggregation_isValid = false;

    m_unit_isSet = false;
    m_unit_isValid = false;
}

void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::fromJsonObject(QJsonObject json) {

    m_aggregation_type_isValid = ::OpenAPI::fromJsonValue(m_aggregation_type, json[QString("aggregationType")]);
    m_aggregation_type_isSet = !json[QString("aggregationType")].isNull() && m_aggregation_type_isValid;

    m_availabilities_isValid = ::OpenAPI::fromJsonValue(m_availabilities, json[QString("availabilities")]);
    m_availabilities_isSet = !json[QString("availabilities")].isNull() && m_availabilities_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_dimensions_isValid = ::OpenAPI::fromJsonValue(m_dimensions, json[QString("dimensions")]);
    m_dimensions_isSet = !json[QString("dimensions")].isNull() && m_dimensions_isValid;

    m_display_description_isValid = ::OpenAPI::fromJsonValue(m_display_description, json[QString("displayDescription")]);
    m_display_description_isSet = !json[QString("displayDescription")].isNull() && m_display_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_enable_regional_mdm_account_isValid = ::OpenAPI::fromJsonValue(m_enable_regional_mdm_account, json[QString("enableRegionalMdmAccount")]);
    m_enable_regional_mdm_account_isSet = !json[QString("enableRegionalMdmAccount")].isNull() && m_enable_regional_mdm_account_isValid;

    m_fill_gap_with_zero_isValid = ::OpenAPI::fromJsonValue(m_fill_gap_with_zero, json[QString("fillGapWithZero")]);
    m_fill_gap_with_zero_isSet = !json[QString("fillGapWithZero")].isNull() && m_fill_gap_with_zero_isValid;

    m_is_internal_isValid = ::OpenAPI::fromJsonValue(m_is_internal, json[QString("isInternal")]);
    m_is_internal_isSet = !json[QString("isInternal")].isNull() && m_is_internal_isValid;

    m_metric_filter_pattern_isValid = ::OpenAPI::fromJsonValue(m_metric_filter_pattern, json[QString("metricFilterPattern")]);
    m_metric_filter_pattern_isSet = !json[QString("metricFilterPattern")].isNull() && m_metric_filter_pattern_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_source_mdm_account_isValid = ::OpenAPI::fromJsonValue(m_source_mdm_account, json[QString("sourceMdmAccount")]);
    m_source_mdm_account_isSet = !json[QString("sourceMdmAccount")].isNull() && m_source_mdm_account_isValid;

    m_source_mdm_namespace_isValid = ::OpenAPI::fromJsonValue(m_source_mdm_namespace, json[QString("sourceMdmNamespace")]);
    m_source_mdm_namespace_isSet = !json[QString("sourceMdmNamespace")].isNull() && m_source_mdm_namespace_isValid;

    m_supports_instance_level_aggregation_isValid = ::OpenAPI::fromJsonValue(m_supports_instance_level_aggregation, json[QString("supportsInstanceLevelAggregation")]);
    m_supports_instance_level_aggregation_isSet = !json[QString("supportsInstanceLevelAggregation")].isNull() && m_supports_instance_level_aggregation_isValid;

    m_unit_isValid = ::OpenAPI::fromJsonValue(m_unit, json[QString("unit")]);
    m_unit_isSet = !json[QString("unit")].isNull() && m_unit_isValid;
}

QString OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregation_type_isSet) {
        obj.insert(QString("aggregationType"), ::OpenAPI::toJsonValue(m_aggregation_type));
    }
    if (m_availabilities.size() > 0) {
        obj.insert(QString("availabilities"), ::OpenAPI::toJsonValue(m_availabilities));
    }
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_dimensions.size() > 0) {
        obj.insert(QString("dimensions"), ::OpenAPI::toJsonValue(m_dimensions));
    }
    if (m_display_description_isSet) {
        obj.insert(QString("displayDescription"), ::OpenAPI::toJsonValue(m_display_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_enable_regional_mdm_account_isSet) {
        obj.insert(QString("enableRegionalMdmAccount"), ::OpenAPI::toJsonValue(m_enable_regional_mdm_account));
    }
    if (m_fill_gap_with_zero_isSet) {
        obj.insert(QString("fillGapWithZero"), ::OpenAPI::toJsonValue(m_fill_gap_with_zero));
    }
    if (m_is_internal_isSet) {
        obj.insert(QString("isInternal"), ::OpenAPI::toJsonValue(m_is_internal));
    }
    if (m_metric_filter_pattern_isSet) {
        obj.insert(QString("metricFilterPattern"), ::OpenAPI::toJsonValue(m_metric_filter_pattern));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_source_mdm_account_isSet) {
        obj.insert(QString("sourceMdmAccount"), ::OpenAPI::toJsonValue(m_source_mdm_account));
    }
    if (m_source_mdm_namespace_isSet) {
        obj.insert(QString("sourceMdmNamespace"), ::OpenAPI::toJsonValue(m_source_mdm_namespace));
    }
    if (m_supports_instance_level_aggregation_isSet) {
        obj.insert(QString("supportsInstanceLevelAggregation"), ::OpenAPI::toJsonValue(m_supports_instance_level_aggregation));
    }
    if (m_unit_isSet) {
        obj.insert(QString("unit"), ::OpenAPI::toJsonValue(m_unit));
    }
    return obj;
}

QString OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::getAggregationType() const {
    return m_aggregation_type;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setAggregationType(const QString &aggregation_type) {
    m_aggregation_type = aggregation_type;
    m_aggregation_type_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_aggregation_type_Set() const{
    return m_aggregation_type_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_aggregation_type_Valid() const{
    return m_aggregation_type_isValid;
}

QList<OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner_availabilities_inner> OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::getAvailabilities() const {
    return m_availabilities;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setAvailabilities(const QList<OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner_availabilities_inner> &availabilities) {
    m_availabilities = availabilities;
    m_availabilities_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_availabilities_Set() const{
    return m_availabilities_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_availabilities_Valid() const{
    return m_availabilities_isValid;
}

QString OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::getCategory() const {
    return m_category;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_category_Set() const{
    return m_category_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_category_Valid() const{
    return m_category_isValid;
}

QList<OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner_dimensions_inner> OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::getDimensions() const {
    return m_dimensions;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setDimensions(const QList<OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner_dimensions_inner> &dimensions) {
    m_dimensions = dimensions;
    m_dimensions_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_dimensions_Set() const{
    return m_dimensions_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_dimensions_Valid() const{
    return m_dimensions_isValid;
}

QString OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::getDisplayDescription() const {
    return m_display_description;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setDisplayDescription(const QString &display_description) {
    m_display_description = display_description;
    m_display_description_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_display_description_Set() const{
    return m_display_description_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_display_description_Valid() const{
    return m_display_description_isValid;
}

QString OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::getDisplayName() const {
    return m_display_name;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::isEnableRegionalMdmAccount() const {
    return m_enable_regional_mdm_account;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setEnableRegionalMdmAccount(const bool &enable_regional_mdm_account) {
    m_enable_regional_mdm_account = enable_regional_mdm_account;
    m_enable_regional_mdm_account_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_enable_regional_mdm_account_Set() const{
    return m_enable_regional_mdm_account_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_enable_regional_mdm_account_Valid() const{
    return m_enable_regional_mdm_account_isValid;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::isFillGapWithZero() const {
    return m_fill_gap_with_zero;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setFillGapWithZero(const bool &fill_gap_with_zero) {
    m_fill_gap_with_zero = fill_gap_with_zero;
    m_fill_gap_with_zero_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_fill_gap_with_zero_Set() const{
    return m_fill_gap_with_zero_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_fill_gap_with_zero_Valid() const{
    return m_fill_gap_with_zero_isValid;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::isIsInternal() const {
    return m_is_internal;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setIsInternal(const bool &is_internal) {
    m_is_internal = is_internal;
    m_is_internal_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_is_internal_Set() const{
    return m_is_internal_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_is_internal_Valid() const{
    return m_is_internal_isValid;
}

QString OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::getMetricFilterPattern() const {
    return m_metric_filter_pattern;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setMetricFilterPattern(const QString &metric_filter_pattern) {
    m_metric_filter_pattern = metric_filter_pattern;
    m_metric_filter_pattern_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_metric_filter_pattern_Set() const{
    return m_metric_filter_pattern_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_metric_filter_pattern_Valid() const{
    return m_metric_filter_pattern_isValid;
}

QString OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::getName() const {
    return m_name;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::getSourceMdmAccount() const {
    return m_source_mdm_account;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setSourceMdmAccount(const QString &source_mdm_account) {
    m_source_mdm_account = source_mdm_account;
    m_source_mdm_account_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_source_mdm_account_Set() const{
    return m_source_mdm_account_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_source_mdm_account_Valid() const{
    return m_source_mdm_account_isValid;
}

QString OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::getSourceMdmNamespace() const {
    return m_source_mdm_namespace;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setSourceMdmNamespace(const QString &source_mdm_namespace) {
    m_source_mdm_namespace = source_mdm_namespace;
    m_source_mdm_namespace_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_source_mdm_namespace_Set() const{
    return m_source_mdm_namespace_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_source_mdm_namespace_Valid() const{
    return m_source_mdm_namespace_isValid;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::isSupportsInstanceLevelAggregation() const {
    return m_supports_instance_level_aggregation;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setSupportsInstanceLevelAggregation(const bool &supports_instance_level_aggregation) {
    m_supports_instance_level_aggregation = supports_instance_level_aggregation;
    m_supports_instance_level_aggregation_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_supports_instance_level_aggregation_Set() const{
    return m_supports_instance_level_aggregation_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_supports_instance_level_aggregation_Valid() const{
    return m_supports_instance_level_aggregation_isValid;
}

QString OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::getUnit() const {
    return m_unit;
}
void OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::setUnit(const QString &unit) {
    m_unit = unit;
    m_unit_isSet = true;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_unit_Set() const{
    return m_unit_isSet;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::is_unit_Valid() const{
    return m_unit_isValid;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_availabilities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimensions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_regional_mdm_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fill_gap_with_zero_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_internal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_filter_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_mdm_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_mdm_namespace_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supports_instance_level_aggregation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICertificateRegistrationProvider_ListOperations_200_response_value_inner_properties_serviceSpecification_metricSpecifications_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
