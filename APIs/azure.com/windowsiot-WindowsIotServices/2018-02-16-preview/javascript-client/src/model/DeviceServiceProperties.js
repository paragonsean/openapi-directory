/**
 * DeviceServices
 * Use this API to manage the Windows IoT device services in your Azure subscription.
 *
 * The version of the OpenAPI document: 2018-02-16-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeviceServiceProperties model module.
 * @module model/DeviceServiceProperties
 * @version 2018-02-16-preview
 */
class DeviceServiceProperties {
    /**
     * Constructs a new <code>DeviceServiceProperties</code>.
     * The properties of a Windows IoT Device Service.
     * @alias module:model/DeviceServiceProperties
     */
    constructor() { 
        
        DeviceServiceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeviceServiceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceServiceProperties} obj Optional instance to populate.
     * @return {module:model/DeviceServiceProperties} The populated <code>DeviceServiceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceServiceProperties();

            if (data.hasOwnProperty('adminDomainName')) {
                obj['adminDomainName'] = ApiClient.convertToType(data['adminDomainName'], 'String');
            }
            if (data.hasOwnProperty('billingDomainName')) {
                obj['billingDomainName'] = ApiClient.convertToType(data['billingDomainName'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceServiceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceServiceProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adminDomainName'] && !(typeof data['adminDomainName'] === 'string' || data['adminDomainName'] instanceof String)) {
            throw new Error("Expected the field `adminDomainName` to be a primitive type in the JSON string but got " + data['adminDomainName']);
        }
        // ensure the json data is a string
        if (data['billingDomainName'] && !(typeof data['billingDomainName'] === 'string' || data['billingDomainName'] instanceof String)) {
            throw new Error("Expected the field `billingDomainName` to be a primitive type in the JSON string but got " + data['billingDomainName']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }

        return true;
    }


}



/**
 * Windows IoT Device Service OEM AAD domain
 * @member {String} adminDomainName
 */
DeviceServiceProperties.prototype['adminDomainName'] = undefined;

/**
 * Windows IoT Device Service ODM AAD domain
 * @member {String} billingDomainName
 */
DeviceServiceProperties.prototype['billingDomainName'] = undefined;

/**
 * Windows IoT Device Service notes.
 * @member {String} notes
 */
DeviceServiceProperties.prototype['notes'] = undefined;

/**
 * Windows IoT Device Service device allocation,
 * @member {Number} quantity
 */
DeviceServiceProperties.prototype['quantity'] = undefined;

/**
 * Windows IoT Device Service start date,
 * @member {Date} startDate
 */
DeviceServiceProperties.prototype['startDate'] = undefined;






export default DeviceServiceProperties;

