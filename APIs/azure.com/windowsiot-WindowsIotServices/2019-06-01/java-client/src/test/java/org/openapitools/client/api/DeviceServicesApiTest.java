/*
 * DeviceServices
 * Use this API to manage the Windows IoT device services in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeviceService;
import org.openapitools.client.model.DeviceServiceDescriptionListResult;
import org.openapitools.client.model.DeviceServiceProperties;
import org.openapitools.client.model.ErrorDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeviceServicesApi
 */
@Disabled
public class DeviceServicesApiTest {

    private final DeviceServicesApi api = new DeviceServicesApi();

    /**
     * Create or update the metadata of a Windows IoT Device Service.
     *
     * Create or update the metadata of a Windows IoT Device Service. The usual pattern to modify a property is to retrieve the Windows IoT Device Service metadata and security metadata, and then combine them with the modified values in a new body to update the Windows IoT Device Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String deviceName = null;
        DeviceServiceProperties deviceService = null;
        String ifMatch = null;
        DeviceService response = api.servicesCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, deviceName, deviceService, ifMatch);
        // TODO: test validations
    }

    /**
     * Delete a Windows IoT Device Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesDeleteTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String deviceName = null;
        DeviceService response = api.servicesDelete(apiVersion, subscriptionId, resourceGroupName, deviceName);
        // TODO: test validations
    }

    /**
     * Get the non-security related metadata of a Windows IoT Device Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String deviceName = null;
        DeviceService response = api.servicesGet(apiVersion, subscriptionId, resourceGroupName, deviceName);
        // TODO: test validations
    }

    /**
     * Get all the IoT hubs in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        DeviceServiceDescriptionListResult response = api.servicesList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get all the IoT hubs in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesListByResourceGroupTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        DeviceServiceDescriptionListResult response = api.servicesListByResourceGroup(apiVersion, subscriptionId, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Updates the metadata of a Windows IoT Device Service.
     *
     * Updates the metadata of a Windows IoT Device Service. The usual pattern to modify a property is to retrieve the Windows IoT Device Service metadata and security metadata, and then combine them with the modified values in a new body to update the Windows IoT Device Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String deviceName = null;
        DeviceServiceProperties deviceService = null;
        String ifMatch = null;
        DeviceService response = api.servicesUpdate(apiVersion, subscriptionId, resourceGroupName, deviceName, deviceService, ifMatch);
        // TODO: test validations
    }

}
