# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceServiceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_domain_name: str=None, billing_domain_name: str=None, notes: str=None, quantity: int=None, start_date: datetime=None):
        """DeviceServiceProperties - a model defined in OpenAPI

        :param admin_domain_name: The admin_domain_name of this DeviceServiceProperties.
        :param billing_domain_name: The billing_domain_name of this DeviceServiceProperties.
        :param notes: The notes of this DeviceServiceProperties.
        :param quantity: The quantity of this DeviceServiceProperties.
        :param start_date: The start_date of this DeviceServiceProperties.
        """
        self.openapi_types = {
            'admin_domain_name': str,
            'billing_domain_name': str,
            'notes': str,
            'quantity': int,
            'start_date': datetime
        }

        self.attribute_map = {
            'admin_domain_name': 'adminDomainName',
            'billing_domain_name': 'billingDomainName',
            'notes': 'notes',
            'quantity': 'quantity',
            'start_date': 'startDate'
        }

        self._admin_domain_name = admin_domain_name
        self._billing_domain_name = billing_domain_name
        self._notes = notes
        self._quantity = quantity
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceServiceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceServiceProperties of this DeviceServiceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_domain_name(self):
        """Gets the admin_domain_name of this DeviceServiceProperties.

        Windows IoT Device Service OEM AAD domain

        :return: The admin_domain_name of this DeviceServiceProperties.
        :rtype: str
        """
        return self._admin_domain_name

    @admin_domain_name.setter
    def admin_domain_name(self, admin_domain_name):
        """Sets the admin_domain_name of this DeviceServiceProperties.

        Windows IoT Device Service OEM AAD domain

        :param admin_domain_name: The admin_domain_name of this DeviceServiceProperties.
        :type admin_domain_name: str
        """

        self._admin_domain_name = admin_domain_name

    @property
    def billing_domain_name(self):
        """Gets the billing_domain_name of this DeviceServiceProperties.

        Windows IoT Device Service ODM AAD domain

        :return: The billing_domain_name of this DeviceServiceProperties.
        :rtype: str
        """
        return self._billing_domain_name

    @billing_domain_name.setter
    def billing_domain_name(self, billing_domain_name):
        """Sets the billing_domain_name of this DeviceServiceProperties.

        Windows IoT Device Service ODM AAD domain

        :param billing_domain_name: The billing_domain_name of this DeviceServiceProperties.
        :type billing_domain_name: str
        """

        self._billing_domain_name = billing_domain_name

    @property
    def notes(self):
        """Gets the notes of this DeviceServiceProperties.

        Windows IoT Device Service notes.

        :return: The notes of this DeviceServiceProperties.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this DeviceServiceProperties.

        Windows IoT Device Service notes.

        :param notes: The notes of this DeviceServiceProperties.
        :type notes: str
        """

        self._notes = notes

    @property
    def quantity(self):
        """Gets the quantity of this DeviceServiceProperties.

        Windows IoT Device Service device allocation,

        :return: The quantity of this DeviceServiceProperties.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this DeviceServiceProperties.

        Windows IoT Device Service device allocation,

        :param quantity: The quantity of this DeviceServiceProperties.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def start_date(self):
        """Gets the start_date of this DeviceServiceProperties.

        Windows IoT Device Service start date,

        :return: The start_date of this DeviceServiceProperties.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this DeviceServiceProperties.

        Windows IoT Device Service start date,

        :param start_date: The start_date of this DeviceServiceProperties.
        :type start_date: datetime
        """

        self._start_date = start_date
