/**
 * DeviceServices
 * Use this API to manage the Windows IoT device services in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DeviceService from './model/DeviceService';
import DeviceServiceCheckNameAvailabilityParameters from './model/DeviceServiceCheckNameAvailabilityParameters';
import DeviceServiceDescriptionListResult from './model/DeviceServiceDescriptionListResult';
import DeviceServiceNameAvailabilityInfo from './model/DeviceServiceNameAvailabilityInfo';
import DeviceServiceProperties from './model/DeviceServiceProperties';
import ErrorDetails from './model/ErrorDetails';
import OperationDisplayInfo from './model/OperationDisplayInfo';
import OperationEntity from './model/OperationEntity';
import OperationListResult from './model/OperationListResult';
import ProxyResource from './model/ProxyResource';
import Resource from './model/Resource';
import TrackedResource from './model/TrackedResource';
import CheckDeviceServiceNameAvailabilityApi from './api/CheckDeviceServiceNameAvailabilityApi';
import DeviceServicesApi from './api/DeviceServicesApi';
import OperationsApi from './api/OperationsApi';


/**
* Use this API to manage the Windows IoT device services in your Azure subscription..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var DeviceServices = require('index'); // See note below*.
* var xxxSvc = new DeviceServices.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new DeviceServices.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new DeviceServices.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new DeviceServices.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-06-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DeviceService model constructor.
     * @property {module:model/DeviceService}
     */
    DeviceService,

    /**
     * The DeviceServiceCheckNameAvailabilityParameters model constructor.
     * @property {module:model/DeviceServiceCheckNameAvailabilityParameters}
     */
    DeviceServiceCheckNameAvailabilityParameters,

    /**
     * The DeviceServiceDescriptionListResult model constructor.
     * @property {module:model/DeviceServiceDescriptionListResult}
     */
    DeviceServiceDescriptionListResult,

    /**
     * The DeviceServiceNameAvailabilityInfo model constructor.
     * @property {module:model/DeviceServiceNameAvailabilityInfo}
     */
    DeviceServiceNameAvailabilityInfo,

    /**
     * The DeviceServiceProperties model constructor.
     * @property {module:model/DeviceServiceProperties}
     */
    DeviceServiceProperties,

    /**
     * The ErrorDetails model constructor.
     * @property {module:model/ErrorDetails}
     */
    ErrorDetails,

    /**
     * The OperationDisplayInfo model constructor.
     * @property {module:model/OperationDisplayInfo}
     */
    OperationDisplayInfo,

    /**
     * The OperationEntity model constructor.
     * @property {module:model/OperationEntity}
     */
    OperationEntity,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The ProxyResource model constructor.
     * @property {module:model/ProxyResource}
     */
    ProxyResource,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The TrackedResource model constructor.
     * @property {module:model/TrackedResource}
     */
    TrackedResource,

    /**
    * The CheckDeviceServiceNameAvailabilityApi service constructor.
    * @property {module:api/CheckDeviceServiceNameAvailabilityApi}
    */
    CheckDeviceServiceNameAvailabilityApi,

    /**
    * The DeviceServicesApi service constructor.
    * @property {module:api/DeviceServicesApi}
    */
    DeviceServicesApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi
};
