/**
 * DeviceServices
 * Use this API to manage the Windows IoT device services in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DeviceService from '../model/DeviceService';
import DeviceServiceDescriptionListResult from '../model/DeviceServiceDescriptionListResult';
import DeviceServiceProperties from '../model/DeviceServiceProperties';
import ErrorDetails from '../model/ErrorDetails';

/**
* DeviceServices service.
* @module api/DeviceServicesApi
* @version 2019-06-01
*/
export default class DeviceServicesApi {

    /**
    * Constructs a new DeviceServicesApi. 
    * @alias module:api/DeviceServicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the servicesCreateOrUpdate operation.
     * @callback module:api/DeviceServicesApi~servicesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeviceService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update the metadata of a Windows IoT Device Service.
     * Create or update the metadata of a Windows IoT Device Service. The usual pattern to modify a property is to retrieve the Windows IoT Device Service metadata and security metadata, and then combine them with the modified values in a new body to update the Windows IoT Device Service.
     * @param {String} apiVersion The version of the API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param {String} deviceName The name of the Windows IoT Device Service.
     * @param {module:model/DeviceServiceProperties} deviceService The Windows IoT Device Service metadata and security metadata.
     * @param {Object} opts Optional parameters
     * @param {String} [ifMatch] ETag of the Windows IoT Device Service. Do not specify for creating a new Windows IoT Device Service. Required to update an existing Windows IoT Device Service.
     * @param {module:api/DeviceServicesApi~servicesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeviceService}
     */
    servicesCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, deviceName, deviceService, opts, callback) {
      opts = opts || {};
      let postBody = deviceService;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling servicesCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling servicesCreateOrUpdate");
      }
      // verify the required parameter 'deviceName' is set
      if (deviceName === undefined || deviceName === null) {
        throw new Error("Missing the required parameter 'deviceName' when calling servicesCreateOrUpdate");
      }
      // verify the required parameter 'deviceService' is set
      if (deviceService === undefined || deviceService === null) {
        throw new Error("Missing the required parameter 'deviceService' when calling servicesCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'deviceName': deviceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
        'If-Match': opts['ifMatch']
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeviceService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WindowsIoT/deviceServices/{deviceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicesDelete operation.
     * @callback module:api/DeviceServicesApi~servicesDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeviceService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a Windows IoT Device Service.
     * @param {String} apiVersion The version of the API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param {String} deviceName The name of the Windows IoT Device Service.
     * @param {module:api/DeviceServicesApi~servicesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeviceService}
     */
    servicesDelete(apiVersion, subscriptionId, resourceGroupName, deviceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling servicesDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling servicesDelete");
      }
      // verify the required parameter 'deviceName' is set
      if (deviceName === undefined || deviceName === null) {
        throw new Error("Missing the required parameter 'deviceName' when calling servicesDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'deviceName': deviceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeviceService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WindowsIoT/deviceServices/{deviceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicesGet operation.
     * @callback module:api/DeviceServicesApi~servicesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeviceService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the non-security related metadata of a Windows IoT Device Service.
     * @param {String} apiVersion The version of the API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param {String} deviceName The name of the Windows IoT Device Service.
     * @param {module:api/DeviceServicesApi~servicesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeviceService}
     */
    servicesGet(apiVersion, subscriptionId, resourceGroupName, deviceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling servicesGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling servicesGet");
      }
      // verify the required parameter 'deviceName' is set
      if (deviceName === undefined || deviceName === null) {
        throw new Error("Missing the required parameter 'deviceName' when calling servicesGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'deviceName': deviceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeviceService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WindowsIoT/deviceServices/{deviceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicesList operation.
     * @callback module:api/DeviceServicesApi~servicesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeviceServiceDescriptionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all the IoT hubs in a subscription.
     * @param {String} apiVersion The version of the API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {module:api/DeviceServicesApi~servicesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeviceServiceDescriptionListResult}
     */
    servicesList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling servicesList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeviceServiceDescriptionListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.WindowsIoT/deviceServices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicesListByResourceGroup operation.
     * @callback module:api/DeviceServicesApi~servicesListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeviceServiceDescriptionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all the IoT hubs in a resource group.
     * @param {String} apiVersion The version of the API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param {module:api/DeviceServicesApi~servicesListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeviceServiceDescriptionListResult}
     */
    servicesListByResourceGroup(apiVersion, subscriptionId, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicesListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling servicesListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling servicesListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeviceServiceDescriptionListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WindowsIoT/deviceServices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicesUpdate operation.
     * @callback module:api/DeviceServicesApi~servicesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeviceService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the metadata of a Windows IoT Device Service.
     * Updates the metadata of a Windows IoT Device Service. The usual pattern to modify a property is to retrieve the Windows IoT Device Service metadata and security metadata, and then combine them with the modified values in a new body to update the Windows IoT Device Service.
     * @param {String} apiVersion The version of the API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param {String} deviceName The name of the Windows IoT Device Service.
     * @param {module:model/DeviceServiceProperties} deviceService The Windows IoT Device Service metadata and security metadata.
     * @param {Object} opts Optional parameters
     * @param {String} [ifMatch] ETag of the Windows IoT Device Service. Do not specify for creating a brand new Windows IoT Device Service. Required to update an existing Windows IoT Device Service.
     * @param {module:api/DeviceServicesApi~servicesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeviceService}
     */
    servicesUpdate(apiVersion, subscriptionId, resourceGroupName, deviceName, deviceService, opts, callback) {
      opts = opts || {};
      let postBody = deviceService;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicesUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling servicesUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling servicesUpdate");
      }
      // verify the required parameter 'deviceName' is set
      if (deviceName === undefined || deviceName === null) {
        throw new Error("Missing the required parameter 'deviceName' when calling servicesUpdate");
      }
      // verify the required parameter 'deviceService' is set
      if (deviceService === undefined || deviceService === null) {
        throw new Error("Missing the required parameter 'deviceService' when calling servicesUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'deviceName': deviceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
        'If-Match': opts['ifMatch']
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeviceService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WindowsIoT/deviceServices/{deviceName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
