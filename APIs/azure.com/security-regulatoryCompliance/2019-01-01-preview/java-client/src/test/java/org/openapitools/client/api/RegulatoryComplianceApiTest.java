/*
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2019-01-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RegulatoryComplianceAssessment;
import org.openapitools.client.model.RegulatoryComplianceAssessmentList;
import org.openapitools.client.model.RegulatoryComplianceControl;
import org.openapitools.client.model.RegulatoryComplianceControlList;
import org.openapitools.client.model.RegulatoryComplianceStandard;
import org.openapitools.client.model.RegulatoryComplianceStandardList;
import org.openapitools.client.model.RegulatoryComplianceStandardsListDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RegulatoryComplianceApi
 */
@Disabled
public class RegulatoryComplianceApiTest {

    private final RegulatoryComplianceApi api = new RegulatoryComplianceApi();

    /**
     * Supported regulatory compliance details and state for selected assessment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void regulatoryComplianceAssessmentsGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String regulatoryComplianceStandardName = null;
        String regulatoryComplianceControlName = null;
        String regulatoryComplianceAssessmentName = null;
        RegulatoryComplianceAssessment response = api.regulatoryComplianceAssessmentsGet(apiVersion, subscriptionId, regulatoryComplianceStandardName, regulatoryComplianceControlName, regulatoryComplianceAssessmentName);
        // TODO: test validations
    }

    /**
     * Details and state of assessments mapped to selected regulatory compliance control
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void regulatoryComplianceAssessmentsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String regulatoryComplianceStandardName = null;
        String regulatoryComplianceControlName = null;
        String $filter = null;
        RegulatoryComplianceAssessmentList response = api.regulatoryComplianceAssessmentsList(apiVersion, subscriptionId, regulatoryComplianceStandardName, regulatoryComplianceControlName, $filter);
        // TODO: test validations
    }

    /**
     * Selected regulatory compliance control details and state
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void regulatoryComplianceControlsGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String regulatoryComplianceStandardName = null;
        String regulatoryComplianceControlName = null;
        RegulatoryComplianceControl response = api.regulatoryComplianceControlsGet(apiVersion, subscriptionId, regulatoryComplianceStandardName, regulatoryComplianceControlName);
        // TODO: test validations
    }

    /**
     * All supported regulatory compliance controls details and state for selected standard
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void regulatoryComplianceControlsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String regulatoryComplianceStandardName = null;
        String $filter = null;
        RegulatoryComplianceControlList response = api.regulatoryComplianceControlsList(apiVersion, subscriptionId, regulatoryComplianceStandardName, $filter);
        // TODO: test validations
    }

    /**
     * Supported regulatory compliance details state for selected standard
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void regulatoryComplianceStandardsGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String regulatoryComplianceStandardName = null;
        RegulatoryComplianceStandard response = api.regulatoryComplianceStandardsGet(apiVersion, subscriptionId, regulatoryComplianceStandardName);
        // TODO: test validations
    }

    /**
     * Supported regulatory compliance standards details and state
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void regulatoryComplianceStandardsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        RegulatoryComplianceStandardList response = api.regulatoryComplianceStandardsList(apiVersion, subscriptionId, $filter);
        // TODO: test validations
    }

}
