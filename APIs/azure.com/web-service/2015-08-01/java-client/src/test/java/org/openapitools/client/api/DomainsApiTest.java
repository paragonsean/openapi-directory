/*
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Domain;
import org.openapitools.client.model.DomainCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DomainsApi
 */
@Disabled
public class DomainsApiTest {

    private final DomainsApi api = new DomainsApi();

    /**
     * Creates a domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsCreateOrUpdateDomainTest() throws ApiException {
        String resourceGroupName = null;
        String domainName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Domain domain = null;
        Domain response = api.domainsCreateOrUpdateDomain(resourceGroupName, domainName, subscriptionId, apiVersion, domain);
        // TODO: test validations
    }

    /**
     * Deletes a domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsDeleteDomainTest() throws ApiException {
        String resourceGroupName = null;
        String domainName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Boolean forceHardDeleteDomain = null;
        Object response = api.domainsDeleteDomain(resourceGroupName, domainName, subscriptionId, apiVersion, forceHardDeleteDomain);
        // TODO: test validations
    }

    /**
     * Gets details of a domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsGetDomainTest() throws ApiException {
        String resourceGroupName = null;
        String domainName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Domain response = api.domainsGetDomain(resourceGroupName, domainName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves the latest status of a domain purchase operation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsGetDomainOperationTest() throws ApiException {
        String resourceGroupName = null;
        String domainName = null;
        String operationId = null;
        String subscriptionId = null;
        String apiVersion = null;
        Domain response = api.domainsGetDomainOperation(resourceGroupName, domainName, operationId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists domains under a resource group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsGetDomainsTest() throws ApiException {
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DomainCollection response = api.domainsGetDomains(resourceGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Creates a domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsUpdateDomainTest() throws ApiException {
        String resourceGroupName = null;
        String domainName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Domain domain = null;
        Domain response = api.domainsUpdateDomain(resourceGroupName, domainName, subscriptionId, apiVersion, domain);
        // TODO: test validations
    }

}
