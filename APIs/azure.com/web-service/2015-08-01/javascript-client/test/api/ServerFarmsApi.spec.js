/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WebSiteManagementClient);
  }
}(this, function(expect, WebSiteManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WebSiteManagementClient.ServerFarmsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ServerFarmsApi', function() {
    describe('serverFarmsCreateOrUpdateServerFarm', function() {
      it('should call serverFarmsCreateOrUpdateServerFarm successfully', function(done) {
        //uncomment below and update the code to test serverFarmsCreateOrUpdateServerFarm
        //instance.serverFarmsCreateOrUpdateServerFarm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsCreateOrUpdateVnetRoute', function() {
      it('should call serverFarmsCreateOrUpdateVnetRoute successfully', function(done) {
        //uncomment below and update the code to test serverFarmsCreateOrUpdateVnetRoute
        //instance.serverFarmsCreateOrUpdateVnetRoute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsDeleteServerFarm', function() {
      it('should call serverFarmsDeleteServerFarm successfully', function(done) {
        //uncomment below and update the code to test serverFarmsDeleteServerFarm
        //instance.serverFarmsDeleteServerFarm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsDeleteVnetRoute', function() {
      it('should call serverFarmsDeleteVnetRoute successfully', function(done) {
        //uncomment below and update the code to test serverFarmsDeleteVnetRoute
        //instance.serverFarmsDeleteVnetRoute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsGetRouteForVnet', function() {
      it('should call serverFarmsGetRouteForVnet successfully', function(done) {
        //uncomment below and update the code to test serverFarmsGetRouteForVnet
        //instance.serverFarmsGetRouteForVnet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsGetRoutesForVnet', function() {
      it('should call serverFarmsGetRoutesForVnet successfully', function(done) {
        //uncomment below and update the code to test serverFarmsGetRoutesForVnet
        //instance.serverFarmsGetRoutesForVnet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsGetServerFarm', function() {
      it('should call serverFarmsGetServerFarm successfully', function(done) {
        //uncomment below and update the code to test serverFarmsGetServerFarm
        //instance.serverFarmsGetServerFarm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsGetServerFarmMetricDefintions', function() {
      it('should call serverFarmsGetServerFarmMetricDefintions successfully', function(done) {
        //uncomment below and update the code to test serverFarmsGetServerFarmMetricDefintions
        //instance.serverFarmsGetServerFarmMetricDefintions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsGetServerFarmMetrics', function() {
      it('should call serverFarmsGetServerFarmMetrics successfully', function(done) {
        //uncomment below and update the code to test serverFarmsGetServerFarmMetrics
        //instance.serverFarmsGetServerFarmMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsGetServerFarmOperation', function() {
      it('should call serverFarmsGetServerFarmOperation successfully', function(done) {
        //uncomment below and update the code to test serverFarmsGetServerFarmOperation
        //instance.serverFarmsGetServerFarmOperation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsGetServerFarmSites', function() {
      it('should call serverFarmsGetServerFarmSites successfully', function(done) {
        //uncomment below and update the code to test serverFarmsGetServerFarmSites
        //instance.serverFarmsGetServerFarmSites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsGetServerFarmVnetGateway', function() {
      it('should call serverFarmsGetServerFarmVnetGateway successfully', function(done) {
        //uncomment below and update the code to test serverFarmsGetServerFarmVnetGateway
        //instance.serverFarmsGetServerFarmVnetGateway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsGetServerFarms', function() {
      it('should call serverFarmsGetServerFarms successfully', function(done) {
        //uncomment below and update the code to test serverFarmsGetServerFarms
        //instance.serverFarmsGetServerFarms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsGetVnetFromServerFarm', function() {
      it('should call serverFarmsGetVnetFromServerFarm successfully', function(done) {
        //uncomment below and update the code to test serverFarmsGetVnetFromServerFarm
        //instance.serverFarmsGetVnetFromServerFarm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsGetVnetsForServerFarm', function() {
      it('should call serverFarmsGetVnetsForServerFarm successfully', function(done) {
        //uncomment below and update the code to test serverFarmsGetVnetsForServerFarm
        //instance.serverFarmsGetVnetsForServerFarm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsRebootWorkerForServerFarm', function() {
      it('should call serverFarmsRebootWorkerForServerFarm successfully', function(done) {
        //uncomment below and update the code to test serverFarmsRebootWorkerForServerFarm
        //instance.serverFarmsRebootWorkerForServerFarm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsRestartSitesForServerFarm', function() {
      it('should call serverFarmsRestartSitesForServerFarm successfully', function(done) {
        //uncomment below and update the code to test serverFarmsRestartSitesForServerFarm
        //instance.serverFarmsRestartSitesForServerFarm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsUpdateServerFarmVnetGateway', function() {
      it('should call serverFarmsUpdateServerFarmVnetGateway successfully', function(done) {
        //uncomment below and update the code to test serverFarmsUpdateServerFarmVnetGateway
        //instance.serverFarmsUpdateServerFarmVnetGateway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverFarmsUpdateVnetRoute', function() {
      it('should call serverFarmsUpdateVnetRoute successfully', function(done) {
        //uncomment below and update the code to test serverFarmsUpdateVnetRoute
        //instance.serverFarmsUpdateVnetRoute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
