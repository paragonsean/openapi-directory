/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WebSiteManagementClient);
  }
}(this, function(expect, WebSiteManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WebSiteManagementClient.CertificateOrdersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CertificateOrdersApi', function() {
    describe('certificateOrdersCreateOrUpdateCertificate', function() {
      it('should call certificateOrdersCreateOrUpdateCertificate successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersCreateOrUpdateCertificate
        //instance.certificateOrdersCreateOrUpdateCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersCreateOrUpdateCertificateOrder', function() {
      it('should call certificateOrdersCreateOrUpdateCertificateOrder successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersCreateOrUpdateCertificateOrder
        //instance.certificateOrdersCreateOrUpdateCertificateOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersDeleteCertificate', function() {
      it('should call certificateOrdersDeleteCertificate successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersDeleteCertificate
        //instance.certificateOrdersDeleteCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersDeleteCertificateOrder', function() {
      it('should call certificateOrdersDeleteCertificateOrder successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersDeleteCertificateOrder
        //instance.certificateOrdersDeleteCertificateOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersGetCertificate', function() {
      it('should call certificateOrdersGetCertificate successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersGetCertificate
        //instance.certificateOrdersGetCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersGetCertificateOrder', function() {
      it('should call certificateOrdersGetCertificateOrder successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersGetCertificateOrder
        //instance.certificateOrdersGetCertificateOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersGetCertificateOrders', function() {
      it('should call certificateOrdersGetCertificateOrders successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersGetCertificateOrders
        //instance.certificateOrdersGetCertificateOrders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersGetCertificates', function() {
      it('should call certificateOrdersGetCertificates successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersGetCertificates
        //instance.certificateOrdersGetCertificates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersReissueCertificateOrder', function() {
      it('should call certificateOrdersReissueCertificateOrder successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersReissueCertificateOrder
        //instance.certificateOrdersReissueCertificateOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersRenewCertificateOrder', function() {
      it('should call certificateOrdersRenewCertificateOrder successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersRenewCertificateOrder
        //instance.certificateOrdersRenewCertificateOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersResendCertificateEmail', function() {
      it('should call certificateOrdersResendCertificateEmail successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersResendCertificateEmail
        //instance.certificateOrdersResendCertificateEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersRetrieveCertificateActions', function() {
      it('should call certificateOrdersRetrieveCertificateActions successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersRetrieveCertificateActions
        //instance.certificateOrdersRetrieveCertificateActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersRetrieveCertificateEmailHistory', function() {
      it('should call certificateOrdersRetrieveCertificateEmailHistory successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersRetrieveCertificateEmailHistory
        //instance.certificateOrdersRetrieveCertificateEmailHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersUpdateCertificate', function() {
      it('should call certificateOrdersUpdateCertificate successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersUpdateCertificate
        //instance.certificateOrdersUpdateCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersUpdateCertificateOrder', function() {
      it('should call certificateOrdersUpdateCertificateOrder successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersUpdateCertificateOrder
        //instance.certificateOrdersUpdateCertificateOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('certificateOrdersVerifyDomainOwnership', function() {
      it('should call certificateOrdersVerifyDomainOwnership successfully', function(done) {
        //uncomment below and update the code to test certificateOrdersVerifyDomainOwnership
        //instance.certificateOrdersVerifyDomainOwnership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
