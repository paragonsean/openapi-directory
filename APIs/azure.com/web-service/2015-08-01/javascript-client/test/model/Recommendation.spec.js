/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WebSiteManagementClient);
  }
}(this, function(expect, WebSiteManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WebSiteManagementClient.Recommendation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Recommendation', function() {
    it('should create an instance of Recommendation', function() {
      // uncomment below and update the code to test Recommendation
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be.a(WebSiteManagementClient.Recommendation);
    });

    it('should have the property actionName (base name: "actionName")', function() {
      // uncomment below and update the code to test the property actionName
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property channels (base name: "channels")', function() {
      // uncomment below and update the code to test the property channels
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property creationTime (base name: "creationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "endTime")', function() {
      // uncomment below and update the code to test the property endTime
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property level (base name: "level")', function() {
      // uncomment below and update the code to test the property level
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "message")', function() {
      // uncomment below and update the code to test the property message
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property nextNotificationTime (base name: "nextNotificationTime")', function() {
      // uncomment below and update the code to test the property nextNotificationTime
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property notificationExpirationTime (base name: "notificationExpirationTime")', function() {
      // uncomment below and update the code to test the property notificationExpirationTime
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property notifiedTime (base name: "notifiedTime")', function() {
      // uncomment below and update the code to test the property notifiedTime
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property recommendationId (base name: "recommendationId")', function() {
      // uncomment below and update the code to test the property recommendationId
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property resourceId (base name: "resourceId")', function() {
      // uncomment below and update the code to test the property resourceId
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property resourceScope (base name: "resourceScope")', function() {
      // uncomment below and update the code to test the property resourceScope
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property ruleName (base name: "ruleName")', function() {
      // uncomment below and update the code to test the property ruleName
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property score (base name: "score")', function() {
      // uncomment below and update the code to test the property score
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new WebSiteManagementClient.Recommendation();
      //expect(instance).to.be();
    });

  });

}));
