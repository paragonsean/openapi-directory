/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Address from './model/Address';
import AddressResponse from './model/AddressResponse';
import ApiDefinitionInfo from './model/ApiDefinitionInfo';
import ApplicationLogsConfig from './model/ApplicationLogsConfig';
import ArmPlan from './model/ArmPlan';
import AutoHealActions from './model/AutoHealActions';
import AutoHealCustomAction from './model/AutoHealCustomAction';
import AutoHealRules from './model/AutoHealRules';
import AutoHealTriggers from './model/AutoHealTriggers';
import AzureBlobStorageApplicationLogsConfig from './model/AzureBlobStorageApplicationLogsConfig';
import AzureBlobStorageHttpLogsConfig from './model/AzureBlobStorageHttpLogsConfig';
import AzureTableStorageApplicationLogsConfig from './model/AzureTableStorageApplicationLogsConfig';
import BackupItem from './model/BackupItem';
import BackupItemCollection from './model/BackupItemCollection';
import BackupRequest from './model/BackupRequest';
import BackupSchedule from './model/BackupSchedule';
import Certificate from './model/Certificate';
import CertificateCollection from './model/CertificateCollection';
import CertificateDetails from './model/CertificateDetails';
import CertificateEmail from './model/CertificateEmail';
import CertificateOrder from './model/CertificateOrder';
import CertificateOrderAction from './model/CertificateOrderAction';
import CertificateOrderCertificate from './model/CertificateOrderCertificate';
import CertificateOrderCertificateCollection from './model/CertificateOrderCertificateCollection';
import CertificateOrderCollection from './model/CertificateOrderCollection';
import ClassicMobileService from './model/ClassicMobileService';
import ClassicMobileServiceCollection from './model/ClassicMobileServiceCollection';
import CloningInfo from './model/CloningInfo';
import ConnStringInfo from './model/ConnStringInfo';
import ConnStringValueTypePair from './model/ConnStringValueTypePair';
import ConnectionStringDictionary from './model/ConnectionStringDictionary';
import Contact from './model/Contact';
import CorsSettings from './model/CorsSettings';
import CsmMoveResourceEnvelope from './model/CsmMoveResourceEnvelope';
import CsmPublishingProfileOptions from './model/CsmPublishingProfileOptions';
import CsmSiteRecoveryEntity from './model/CsmSiteRecoveryEntity';
import CsmSlotEntity from './model/CsmSlotEntity';
import CsmUsageQuota from './model/CsmUsageQuota';
import CsmUsageQuotaCollection from './model/CsmUsageQuotaCollection';
import Csr from './model/Csr';
import DatabaseBackupSetting from './model/DatabaseBackupSetting';
import DeletedSite from './model/DeletedSite';
import DeletedSiteCollection from './model/DeletedSiteCollection';
import Deployment from './model/Deployment';
import DeploymentCollection from './model/DeploymentCollection';
import Domain from './model/Domain';
import DomainAvailablilityCheckResult from './model/DomainAvailablilityCheckResult';
import DomainCollection from './model/DomainCollection';
import DomainControlCenterSsoRequest from './model/DomainControlCenterSsoRequest';
import DomainPurchaseConsent from './model/DomainPurchaseConsent';
import DomainRecommendationSearchParameters from './model/DomainRecommendationSearchParameters';
import DomainRegistrationInput from './model/DomainRegistrationInput';
import EnabledConfig from './model/EnabledConfig';
import Experiments from './model/Experiments';
import FileSystemApplicationLogsConfig from './model/FileSystemApplicationLogsConfig';
import FileSystemHttpLogsConfig from './model/FileSystemHttpLogsConfig';
import GeoRegion from './model/GeoRegion';
import GeoRegionCollection from './model/GeoRegionCollection';
import HandlerMapping from './model/HandlerMapping';
import HostName from './model/HostName';
import HostNameBinding from './model/HostNameBinding';
import HostNameBindingCollection from './model/HostNameBindingCollection';
import HostNameSslState from './model/HostNameSslState';
import HostingEnvironment from './model/HostingEnvironment';
import HostingEnvironmentCollection from './model/HostingEnvironmentCollection';
import HostingEnvironmentDiagnostics from './model/HostingEnvironmentDiagnostics';
import HostingEnvironmentProfile from './model/HostingEnvironmentProfile';
import HttpLogsConfig from './model/HttpLogsConfig';
import IpSecurityRestriction from './model/IpSecurityRestriction';
import KeyValuePairStringString from './model/KeyValuePairStringString';
import LocalizableString from './model/LocalizableString';
import ManagedHostingEnvironment from './model/ManagedHostingEnvironment';
import ManagedHostingEnvironmentCollection from './model/ManagedHostingEnvironmentCollection';
import MetricAvailabilily from './model/MetricAvailabilily';
import MetricDefinition from './model/MetricDefinition';
import MetricDefinitionCollection from './model/MetricDefinitionCollection';
import NameIdentifier from './model/NameIdentifier';
import NameIdentifierCollection from './model/NameIdentifierCollection';
import NameValuePair from './model/NameValuePair';
import NetworkAccessControlEntry from './model/NetworkAccessControlEntry';
import NetworkFeatures from './model/NetworkFeatures';
import PremierAddOnRequest from './model/PremierAddOnRequest';
import RampUpRule from './model/RampUpRule';
import Recommendation from './model/Recommendation';
import RecommendationRule from './model/RecommendationRule';
import ReissueCertificateOrderRequest from './model/ReissueCertificateOrderRequest';
import RelayServiceConnectionEntity from './model/RelayServiceConnectionEntity';
import RenewCertificateOrderRequest from './model/RenewCertificateOrderRequest';
import RequestsBasedTrigger from './model/RequestsBasedTrigger';
import Resource from './model/Resource';
import ResourceMetric from './model/ResourceMetric';
import ResourceMetricCollection from './model/ResourceMetricCollection';
import ResourceMetricName from './model/ResourceMetricName';
import ResourceMetricValue from './model/ResourceMetricValue';
import ResourceNameAvailability from './model/ResourceNameAvailability';
import ResourceNameAvailabilityRequest from './model/ResourceNameAvailabilityRequest';
import RestoreRequest from './model/RestoreRequest';
import RestoreResponse from './model/RestoreResponse';
import RoutingRule from './model/RoutingRule';
import ServerFarmCollection from './model/ServerFarmCollection';
import ServerFarmWithRichSku from './model/ServerFarmWithRichSku';
import Site from './model/Site';
import SiteAuthSettings from './model/SiteAuthSettings';
import SiteCloneability from './model/SiteCloneability';
import SiteCloneabilityCriterion from './model/SiteCloneabilityCriterion';
import SiteCollection from './model/SiteCollection';
import SiteConfig from './model/SiteConfig';
import SiteInstance from './model/SiteInstance';
import SiteInstanceCollection from './model/SiteInstanceCollection';
import SiteLimits from './model/SiteLimits';
import SiteLogsConfig from './model/SiteLogsConfig';
import SiteProperties from './model/SiteProperties';
import SiteSourceControl from './model/SiteSourceControl';
import SkuCapacity from './model/SkuCapacity';
import SkuDescription from './model/SkuDescription';
import SkuInfo from './model/SkuInfo';
import SkuInfoCollection from './model/SkuInfoCollection';
import SlotConfigNames from './model/SlotConfigNames';
import SlotConfigNamesResource from './model/SlotConfigNamesResource';
import SlotDifference from './model/SlotDifference';
import SlotDifferenceCollection from './model/SlotDifferenceCollection';
import SlowRequestsBasedTrigger from './model/SlowRequestsBasedTrigger';
import SourceControl from './model/SourceControl';
import SourceControlCollection from './model/SourceControlCollection';
import StampCapacity from './model/StampCapacity';
import StampCapacityCollection from './model/StampCapacityCollection';
import StatusCodesBasedTrigger from './model/StatusCodesBasedTrigger';
import StringDictionary from './model/StringDictionary';
import TldLegalAgreement from './model/TldLegalAgreement';
import TldLegalAgreementCollection from './model/TldLegalAgreementCollection';
import TopLevelDomain from './model/TopLevelDomain';
import TopLevelDomainAgreementOption from './model/TopLevelDomainAgreementOption';
import TopLevelDomainCollection from './model/TopLevelDomainCollection';
import Usage from './model/Usage';
import UsageCollection from './model/UsageCollection';
import User from './model/User';
import VirtualApplication from './model/VirtualApplication';
import VirtualDirectory from './model/VirtualDirectory';
import VirtualIPMapping from './model/VirtualIPMapping';
import VirtualNetworkProfile from './model/VirtualNetworkProfile';
import VnetGateway from './model/VnetGateway';
import VnetInfo from './model/VnetInfo';
import VnetRoute from './model/VnetRoute';
import WorkerPool from './model/WorkerPool';
import WorkerPoolCollection from './model/WorkerPoolCollection';
import CertificateOrdersApi from './api/CertificateOrdersApi';
import CertificatesApi from './api/CertificatesApi';
import ClassicMobileServicesApi from './api/ClassicMobileServicesApi';
import DomainsApi from './api/DomainsApi';
import GlobalApi from './api/GlobalApi';
import GlobalCertificateOrderApi from './api/GlobalCertificateOrderApi';
import GlobalDomainRegistrationApi from './api/GlobalDomainRegistrationApi';
import GlobalResourceGroupsApi from './api/GlobalResourceGroupsApi';
import HostingEnvironmentsApi from './api/HostingEnvironmentsApi';
import ManagedHostingEnvironmentsApi from './api/ManagedHostingEnvironmentsApi';
import ProviderApi from './api/ProviderApi';
import RecommendationsApi from './api/RecommendationsApi';
import ServerFarmsApi from './api/ServerFarmsApi';
import SitesApi from './api/SitesApi';
import TopLevelDomainsApi from './api/TopLevelDomainsApi';
import UsageApi from './api/UsageApi';


/**
* Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var WebSiteManagementClient = require('index'); // See note below*.
* var xxxSvc = new WebSiteManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new WebSiteManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new WebSiteManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new WebSiteManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-08-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The AddressResponse model constructor.
     * @property {module:model/AddressResponse}
     */
    AddressResponse,

    /**
     * The ApiDefinitionInfo model constructor.
     * @property {module:model/ApiDefinitionInfo}
     */
    ApiDefinitionInfo,

    /**
     * The ApplicationLogsConfig model constructor.
     * @property {module:model/ApplicationLogsConfig}
     */
    ApplicationLogsConfig,

    /**
     * The ArmPlan model constructor.
     * @property {module:model/ArmPlan}
     */
    ArmPlan,

    /**
     * The AutoHealActions model constructor.
     * @property {module:model/AutoHealActions}
     */
    AutoHealActions,

    /**
     * The AutoHealCustomAction model constructor.
     * @property {module:model/AutoHealCustomAction}
     */
    AutoHealCustomAction,

    /**
     * The AutoHealRules model constructor.
     * @property {module:model/AutoHealRules}
     */
    AutoHealRules,

    /**
     * The AutoHealTriggers model constructor.
     * @property {module:model/AutoHealTriggers}
     */
    AutoHealTriggers,

    /**
     * The AzureBlobStorageApplicationLogsConfig model constructor.
     * @property {module:model/AzureBlobStorageApplicationLogsConfig}
     */
    AzureBlobStorageApplicationLogsConfig,

    /**
     * The AzureBlobStorageHttpLogsConfig model constructor.
     * @property {module:model/AzureBlobStorageHttpLogsConfig}
     */
    AzureBlobStorageHttpLogsConfig,

    /**
     * The AzureTableStorageApplicationLogsConfig model constructor.
     * @property {module:model/AzureTableStorageApplicationLogsConfig}
     */
    AzureTableStorageApplicationLogsConfig,

    /**
     * The BackupItem model constructor.
     * @property {module:model/BackupItem}
     */
    BackupItem,

    /**
     * The BackupItemCollection model constructor.
     * @property {module:model/BackupItemCollection}
     */
    BackupItemCollection,

    /**
     * The BackupRequest model constructor.
     * @property {module:model/BackupRequest}
     */
    BackupRequest,

    /**
     * The BackupSchedule model constructor.
     * @property {module:model/BackupSchedule}
     */
    BackupSchedule,

    /**
     * The Certificate model constructor.
     * @property {module:model/Certificate}
     */
    Certificate,

    /**
     * The CertificateCollection model constructor.
     * @property {module:model/CertificateCollection}
     */
    CertificateCollection,

    /**
     * The CertificateDetails model constructor.
     * @property {module:model/CertificateDetails}
     */
    CertificateDetails,

    /**
     * The CertificateEmail model constructor.
     * @property {module:model/CertificateEmail}
     */
    CertificateEmail,

    /**
     * The CertificateOrder model constructor.
     * @property {module:model/CertificateOrder}
     */
    CertificateOrder,

    /**
     * The CertificateOrderAction model constructor.
     * @property {module:model/CertificateOrderAction}
     */
    CertificateOrderAction,

    /**
     * The CertificateOrderCertificate model constructor.
     * @property {module:model/CertificateOrderCertificate}
     */
    CertificateOrderCertificate,

    /**
     * The CertificateOrderCertificateCollection model constructor.
     * @property {module:model/CertificateOrderCertificateCollection}
     */
    CertificateOrderCertificateCollection,

    /**
     * The CertificateOrderCollection model constructor.
     * @property {module:model/CertificateOrderCollection}
     */
    CertificateOrderCollection,

    /**
     * The ClassicMobileService model constructor.
     * @property {module:model/ClassicMobileService}
     */
    ClassicMobileService,

    /**
     * The ClassicMobileServiceCollection model constructor.
     * @property {module:model/ClassicMobileServiceCollection}
     */
    ClassicMobileServiceCollection,

    /**
     * The CloningInfo model constructor.
     * @property {module:model/CloningInfo}
     */
    CloningInfo,

    /**
     * The ConnStringInfo model constructor.
     * @property {module:model/ConnStringInfo}
     */
    ConnStringInfo,

    /**
     * The ConnStringValueTypePair model constructor.
     * @property {module:model/ConnStringValueTypePair}
     */
    ConnStringValueTypePair,

    /**
     * The ConnectionStringDictionary model constructor.
     * @property {module:model/ConnectionStringDictionary}
     */
    ConnectionStringDictionary,

    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact,

    /**
     * The CorsSettings model constructor.
     * @property {module:model/CorsSettings}
     */
    CorsSettings,

    /**
     * The CsmMoveResourceEnvelope model constructor.
     * @property {module:model/CsmMoveResourceEnvelope}
     */
    CsmMoveResourceEnvelope,

    /**
     * The CsmPublishingProfileOptions model constructor.
     * @property {module:model/CsmPublishingProfileOptions}
     */
    CsmPublishingProfileOptions,

    /**
     * The CsmSiteRecoveryEntity model constructor.
     * @property {module:model/CsmSiteRecoveryEntity}
     */
    CsmSiteRecoveryEntity,

    /**
     * The CsmSlotEntity model constructor.
     * @property {module:model/CsmSlotEntity}
     */
    CsmSlotEntity,

    /**
     * The CsmUsageQuota model constructor.
     * @property {module:model/CsmUsageQuota}
     */
    CsmUsageQuota,

    /**
     * The CsmUsageQuotaCollection model constructor.
     * @property {module:model/CsmUsageQuotaCollection}
     */
    CsmUsageQuotaCollection,

    /**
     * The Csr model constructor.
     * @property {module:model/Csr}
     */
    Csr,

    /**
     * The DatabaseBackupSetting model constructor.
     * @property {module:model/DatabaseBackupSetting}
     */
    DatabaseBackupSetting,

    /**
     * The DeletedSite model constructor.
     * @property {module:model/DeletedSite}
     */
    DeletedSite,

    /**
     * The DeletedSiteCollection model constructor.
     * @property {module:model/DeletedSiteCollection}
     */
    DeletedSiteCollection,

    /**
     * The Deployment model constructor.
     * @property {module:model/Deployment}
     */
    Deployment,

    /**
     * The DeploymentCollection model constructor.
     * @property {module:model/DeploymentCollection}
     */
    DeploymentCollection,

    /**
     * The Domain model constructor.
     * @property {module:model/Domain}
     */
    Domain,

    /**
     * The DomainAvailablilityCheckResult model constructor.
     * @property {module:model/DomainAvailablilityCheckResult}
     */
    DomainAvailablilityCheckResult,

    /**
     * The DomainCollection model constructor.
     * @property {module:model/DomainCollection}
     */
    DomainCollection,

    /**
     * The DomainControlCenterSsoRequest model constructor.
     * @property {module:model/DomainControlCenterSsoRequest}
     */
    DomainControlCenterSsoRequest,

    /**
     * The DomainPurchaseConsent model constructor.
     * @property {module:model/DomainPurchaseConsent}
     */
    DomainPurchaseConsent,

    /**
     * The DomainRecommendationSearchParameters model constructor.
     * @property {module:model/DomainRecommendationSearchParameters}
     */
    DomainRecommendationSearchParameters,

    /**
     * The DomainRegistrationInput model constructor.
     * @property {module:model/DomainRegistrationInput}
     */
    DomainRegistrationInput,

    /**
     * The EnabledConfig model constructor.
     * @property {module:model/EnabledConfig}
     */
    EnabledConfig,

    /**
     * The Experiments model constructor.
     * @property {module:model/Experiments}
     */
    Experiments,

    /**
     * The FileSystemApplicationLogsConfig model constructor.
     * @property {module:model/FileSystemApplicationLogsConfig}
     */
    FileSystemApplicationLogsConfig,

    /**
     * The FileSystemHttpLogsConfig model constructor.
     * @property {module:model/FileSystemHttpLogsConfig}
     */
    FileSystemHttpLogsConfig,

    /**
     * The GeoRegion model constructor.
     * @property {module:model/GeoRegion}
     */
    GeoRegion,

    /**
     * The GeoRegionCollection model constructor.
     * @property {module:model/GeoRegionCollection}
     */
    GeoRegionCollection,

    /**
     * The HandlerMapping model constructor.
     * @property {module:model/HandlerMapping}
     */
    HandlerMapping,

    /**
     * The HostName model constructor.
     * @property {module:model/HostName}
     */
    HostName,

    /**
     * The HostNameBinding model constructor.
     * @property {module:model/HostNameBinding}
     */
    HostNameBinding,

    /**
     * The HostNameBindingCollection model constructor.
     * @property {module:model/HostNameBindingCollection}
     */
    HostNameBindingCollection,

    /**
     * The HostNameSslState model constructor.
     * @property {module:model/HostNameSslState}
     */
    HostNameSslState,

    /**
     * The HostingEnvironment model constructor.
     * @property {module:model/HostingEnvironment}
     */
    HostingEnvironment,

    /**
     * The HostingEnvironmentCollection model constructor.
     * @property {module:model/HostingEnvironmentCollection}
     */
    HostingEnvironmentCollection,

    /**
     * The HostingEnvironmentDiagnostics model constructor.
     * @property {module:model/HostingEnvironmentDiagnostics}
     */
    HostingEnvironmentDiagnostics,

    /**
     * The HostingEnvironmentProfile model constructor.
     * @property {module:model/HostingEnvironmentProfile}
     */
    HostingEnvironmentProfile,

    /**
     * The HttpLogsConfig model constructor.
     * @property {module:model/HttpLogsConfig}
     */
    HttpLogsConfig,

    /**
     * The IpSecurityRestriction model constructor.
     * @property {module:model/IpSecurityRestriction}
     */
    IpSecurityRestriction,

    /**
     * The KeyValuePairStringString model constructor.
     * @property {module:model/KeyValuePairStringString}
     */
    KeyValuePairStringString,

    /**
     * The LocalizableString model constructor.
     * @property {module:model/LocalizableString}
     */
    LocalizableString,

    /**
     * The ManagedHostingEnvironment model constructor.
     * @property {module:model/ManagedHostingEnvironment}
     */
    ManagedHostingEnvironment,

    /**
     * The ManagedHostingEnvironmentCollection model constructor.
     * @property {module:model/ManagedHostingEnvironmentCollection}
     */
    ManagedHostingEnvironmentCollection,

    /**
     * The MetricAvailabilily model constructor.
     * @property {module:model/MetricAvailabilily}
     */
    MetricAvailabilily,

    /**
     * The MetricDefinition model constructor.
     * @property {module:model/MetricDefinition}
     */
    MetricDefinition,

    /**
     * The MetricDefinitionCollection model constructor.
     * @property {module:model/MetricDefinitionCollection}
     */
    MetricDefinitionCollection,

    /**
     * The NameIdentifier model constructor.
     * @property {module:model/NameIdentifier}
     */
    NameIdentifier,

    /**
     * The NameIdentifierCollection model constructor.
     * @property {module:model/NameIdentifierCollection}
     */
    NameIdentifierCollection,

    /**
     * The NameValuePair model constructor.
     * @property {module:model/NameValuePair}
     */
    NameValuePair,

    /**
     * The NetworkAccessControlEntry model constructor.
     * @property {module:model/NetworkAccessControlEntry}
     */
    NetworkAccessControlEntry,

    /**
     * The NetworkFeatures model constructor.
     * @property {module:model/NetworkFeatures}
     */
    NetworkFeatures,

    /**
     * The PremierAddOnRequest model constructor.
     * @property {module:model/PremierAddOnRequest}
     */
    PremierAddOnRequest,

    /**
     * The RampUpRule model constructor.
     * @property {module:model/RampUpRule}
     */
    RampUpRule,

    /**
     * The Recommendation model constructor.
     * @property {module:model/Recommendation}
     */
    Recommendation,

    /**
     * The RecommendationRule model constructor.
     * @property {module:model/RecommendationRule}
     */
    RecommendationRule,

    /**
     * The ReissueCertificateOrderRequest model constructor.
     * @property {module:model/ReissueCertificateOrderRequest}
     */
    ReissueCertificateOrderRequest,

    /**
     * The RelayServiceConnectionEntity model constructor.
     * @property {module:model/RelayServiceConnectionEntity}
     */
    RelayServiceConnectionEntity,

    /**
     * The RenewCertificateOrderRequest model constructor.
     * @property {module:model/RenewCertificateOrderRequest}
     */
    RenewCertificateOrderRequest,

    /**
     * The RequestsBasedTrigger model constructor.
     * @property {module:model/RequestsBasedTrigger}
     */
    RequestsBasedTrigger,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ResourceMetric model constructor.
     * @property {module:model/ResourceMetric}
     */
    ResourceMetric,

    /**
     * The ResourceMetricCollection model constructor.
     * @property {module:model/ResourceMetricCollection}
     */
    ResourceMetricCollection,

    /**
     * The ResourceMetricName model constructor.
     * @property {module:model/ResourceMetricName}
     */
    ResourceMetricName,

    /**
     * The ResourceMetricValue model constructor.
     * @property {module:model/ResourceMetricValue}
     */
    ResourceMetricValue,

    /**
     * The ResourceNameAvailability model constructor.
     * @property {module:model/ResourceNameAvailability}
     */
    ResourceNameAvailability,

    /**
     * The ResourceNameAvailabilityRequest model constructor.
     * @property {module:model/ResourceNameAvailabilityRequest}
     */
    ResourceNameAvailabilityRequest,

    /**
     * The RestoreRequest model constructor.
     * @property {module:model/RestoreRequest}
     */
    RestoreRequest,

    /**
     * The RestoreResponse model constructor.
     * @property {module:model/RestoreResponse}
     */
    RestoreResponse,

    /**
     * The RoutingRule model constructor.
     * @property {module:model/RoutingRule}
     */
    RoutingRule,

    /**
     * The ServerFarmCollection model constructor.
     * @property {module:model/ServerFarmCollection}
     */
    ServerFarmCollection,

    /**
     * The ServerFarmWithRichSku model constructor.
     * @property {module:model/ServerFarmWithRichSku}
     */
    ServerFarmWithRichSku,

    /**
     * The Site model constructor.
     * @property {module:model/Site}
     */
    Site,

    /**
     * The SiteAuthSettings model constructor.
     * @property {module:model/SiteAuthSettings}
     */
    SiteAuthSettings,

    /**
     * The SiteCloneability model constructor.
     * @property {module:model/SiteCloneability}
     */
    SiteCloneability,

    /**
     * The SiteCloneabilityCriterion model constructor.
     * @property {module:model/SiteCloneabilityCriterion}
     */
    SiteCloneabilityCriterion,

    /**
     * The SiteCollection model constructor.
     * @property {module:model/SiteCollection}
     */
    SiteCollection,

    /**
     * The SiteConfig model constructor.
     * @property {module:model/SiteConfig}
     */
    SiteConfig,

    /**
     * The SiteInstance model constructor.
     * @property {module:model/SiteInstance}
     */
    SiteInstance,

    /**
     * The SiteInstanceCollection model constructor.
     * @property {module:model/SiteInstanceCollection}
     */
    SiteInstanceCollection,

    /**
     * The SiteLimits model constructor.
     * @property {module:model/SiteLimits}
     */
    SiteLimits,

    /**
     * The SiteLogsConfig model constructor.
     * @property {module:model/SiteLogsConfig}
     */
    SiteLogsConfig,

    /**
     * The SiteProperties model constructor.
     * @property {module:model/SiteProperties}
     */
    SiteProperties,

    /**
     * The SiteSourceControl model constructor.
     * @property {module:model/SiteSourceControl}
     */
    SiteSourceControl,

    /**
     * The SkuCapacity model constructor.
     * @property {module:model/SkuCapacity}
     */
    SkuCapacity,

    /**
     * The SkuDescription model constructor.
     * @property {module:model/SkuDescription}
     */
    SkuDescription,

    /**
     * The SkuInfo model constructor.
     * @property {module:model/SkuInfo}
     */
    SkuInfo,

    /**
     * The SkuInfoCollection model constructor.
     * @property {module:model/SkuInfoCollection}
     */
    SkuInfoCollection,

    /**
     * The SlotConfigNames model constructor.
     * @property {module:model/SlotConfigNames}
     */
    SlotConfigNames,

    /**
     * The SlotConfigNamesResource model constructor.
     * @property {module:model/SlotConfigNamesResource}
     */
    SlotConfigNamesResource,

    /**
     * The SlotDifference model constructor.
     * @property {module:model/SlotDifference}
     */
    SlotDifference,

    /**
     * The SlotDifferenceCollection model constructor.
     * @property {module:model/SlotDifferenceCollection}
     */
    SlotDifferenceCollection,

    /**
     * The SlowRequestsBasedTrigger model constructor.
     * @property {module:model/SlowRequestsBasedTrigger}
     */
    SlowRequestsBasedTrigger,

    /**
     * The SourceControl model constructor.
     * @property {module:model/SourceControl}
     */
    SourceControl,

    /**
     * The SourceControlCollection model constructor.
     * @property {module:model/SourceControlCollection}
     */
    SourceControlCollection,

    /**
     * The StampCapacity model constructor.
     * @property {module:model/StampCapacity}
     */
    StampCapacity,

    /**
     * The StampCapacityCollection model constructor.
     * @property {module:model/StampCapacityCollection}
     */
    StampCapacityCollection,

    /**
     * The StatusCodesBasedTrigger model constructor.
     * @property {module:model/StatusCodesBasedTrigger}
     */
    StatusCodesBasedTrigger,

    /**
     * The StringDictionary model constructor.
     * @property {module:model/StringDictionary}
     */
    StringDictionary,

    /**
     * The TldLegalAgreement model constructor.
     * @property {module:model/TldLegalAgreement}
     */
    TldLegalAgreement,

    /**
     * The TldLegalAgreementCollection model constructor.
     * @property {module:model/TldLegalAgreementCollection}
     */
    TldLegalAgreementCollection,

    /**
     * The TopLevelDomain model constructor.
     * @property {module:model/TopLevelDomain}
     */
    TopLevelDomain,

    /**
     * The TopLevelDomainAgreementOption model constructor.
     * @property {module:model/TopLevelDomainAgreementOption}
     */
    TopLevelDomainAgreementOption,

    /**
     * The TopLevelDomainCollection model constructor.
     * @property {module:model/TopLevelDomainCollection}
     */
    TopLevelDomainCollection,

    /**
     * The Usage model constructor.
     * @property {module:model/Usage}
     */
    Usage,

    /**
     * The UsageCollection model constructor.
     * @property {module:model/UsageCollection}
     */
    UsageCollection,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The VirtualApplication model constructor.
     * @property {module:model/VirtualApplication}
     */
    VirtualApplication,

    /**
     * The VirtualDirectory model constructor.
     * @property {module:model/VirtualDirectory}
     */
    VirtualDirectory,

    /**
     * The VirtualIPMapping model constructor.
     * @property {module:model/VirtualIPMapping}
     */
    VirtualIPMapping,

    /**
     * The VirtualNetworkProfile model constructor.
     * @property {module:model/VirtualNetworkProfile}
     */
    VirtualNetworkProfile,

    /**
     * The VnetGateway model constructor.
     * @property {module:model/VnetGateway}
     */
    VnetGateway,

    /**
     * The VnetInfo model constructor.
     * @property {module:model/VnetInfo}
     */
    VnetInfo,

    /**
     * The VnetRoute model constructor.
     * @property {module:model/VnetRoute}
     */
    VnetRoute,

    /**
     * The WorkerPool model constructor.
     * @property {module:model/WorkerPool}
     */
    WorkerPool,

    /**
     * The WorkerPoolCollection model constructor.
     * @property {module:model/WorkerPoolCollection}
     */
    WorkerPoolCollection,

    /**
    * The CertificateOrdersApi service constructor.
    * @property {module:api/CertificateOrdersApi}
    */
    CertificateOrdersApi,

    /**
    * The CertificatesApi service constructor.
    * @property {module:api/CertificatesApi}
    */
    CertificatesApi,

    /**
    * The ClassicMobileServicesApi service constructor.
    * @property {module:api/ClassicMobileServicesApi}
    */
    ClassicMobileServicesApi,

    /**
    * The DomainsApi service constructor.
    * @property {module:api/DomainsApi}
    */
    DomainsApi,

    /**
    * The GlobalApi service constructor.
    * @property {module:api/GlobalApi}
    */
    GlobalApi,

    /**
    * The GlobalCertificateOrderApi service constructor.
    * @property {module:api/GlobalCertificateOrderApi}
    */
    GlobalCertificateOrderApi,

    /**
    * The GlobalDomainRegistrationApi service constructor.
    * @property {module:api/GlobalDomainRegistrationApi}
    */
    GlobalDomainRegistrationApi,

    /**
    * The GlobalResourceGroupsApi service constructor.
    * @property {module:api/GlobalResourceGroupsApi}
    */
    GlobalResourceGroupsApi,

    /**
    * The HostingEnvironmentsApi service constructor.
    * @property {module:api/HostingEnvironmentsApi}
    */
    HostingEnvironmentsApi,

    /**
    * The ManagedHostingEnvironmentsApi service constructor.
    * @property {module:api/ManagedHostingEnvironmentsApi}
    */
    ManagedHostingEnvironmentsApi,

    /**
    * The ProviderApi service constructor.
    * @property {module:api/ProviderApi}
    */
    ProviderApi,

    /**
    * The RecommendationsApi service constructor.
    * @property {module:api/RecommendationsApi}
    */
    RecommendationsApi,

    /**
    * The ServerFarmsApi service constructor.
    * @property {module:api/ServerFarmsApi}
    */
    ServerFarmsApi,

    /**
    * The SitesApi service constructor.
    * @property {module:api/SitesApi}
    */
    SitesApi,

    /**
    * The TopLevelDomainsApi service constructor.
    * @property {module:api/TopLevelDomainsApi}
    */
    TopLevelDomainsApi,

    /**
    * The UsageApi service constructor.
    * @property {module:api/UsageApi}
    */
    UsageApi
};
