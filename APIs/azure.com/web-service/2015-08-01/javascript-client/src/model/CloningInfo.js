/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CloningInfo model module.
 * @module model/CloningInfo
 * @version 2015-08-01
 */
class CloningInfo {
    /**
     * Constructs a new <code>CloningInfo</code>.
     * Represents information needed for cloning operation
     * @alias module:model/CloningInfo
     */
    constructor() { 
        
        CloningInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CloningInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloningInfo} obj Optional instance to populate.
     * @return {module:model/CloningInfo} The populated <code>CloningInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloningInfo();

            if (data.hasOwnProperty('appSettingsOverrides')) {
                obj['appSettingsOverrides'] = ApiClient.convertToType(data['appSettingsOverrides'], {'String': 'String'});
            }
            if (data.hasOwnProperty('cloneCustomHostNames')) {
                obj['cloneCustomHostNames'] = ApiClient.convertToType(data['cloneCustomHostNames'], 'Boolean');
            }
            if (data.hasOwnProperty('cloneSourceControl')) {
                obj['cloneSourceControl'] = ApiClient.convertToType(data['cloneSourceControl'], 'Boolean');
            }
            if (data.hasOwnProperty('configureLoadBalancing')) {
                obj['configureLoadBalancing'] = ApiClient.convertToType(data['configureLoadBalancing'], 'Boolean');
            }
            if (data.hasOwnProperty('correlationId')) {
                obj['correlationId'] = ApiClient.convertToType(data['correlationId'], 'String');
            }
            if (data.hasOwnProperty('hostingEnvironment')) {
                obj['hostingEnvironment'] = ApiClient.convertToType(data['hostingEnvironment'], 'String');
            }
            if (data.hasOwnProperty('overwrite')) {
                obj['overwrite'] = ApiClient.convertToType(data['overwrite'], 'Boolean');
            }
            if (data.hasOwnProperty('sourceWebAppId')) {
                obj['sourceWebAppId'] = ApiClient.convertToType(data['sourceWebAppId'], 'String');
            }
            if (data.hasOwnProperty('trafficManagerProfileId')) {
                obj['trafficManagerProfileId'] = ApiClient.convertToType(data['trafficManagerProfileId'], 'String');
            }
            if (data.hasOwnProperty('trafficManagerProfileName')) {
                obj['trafficManagerProfileName'] = ApiClient.convertToType(data['trafficManagerProfileName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloningInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloningInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['correlationId'] && !(typeof data['correlationId'] === 'string' || data['correlationId'] instanceof String)) {
            throw new Error("Expected the field `correlationId` to be a primitive type in the JSON string but got " + data['correlationId']);
        }
        // ensure the json data is a string
        if (data['hostingEnvironment'] && !(typeof data['hostingEnvironment'] === 'string' || data['hostingEnvironment'] instanceof String)) {
            throw new Error("Expected the field `hostingEnvironment` to be a primitive type in the JSON string but got " + data['hostingEnvironment']);
        }
        // ensure the json data is a string
        if (data['sourceWebAppId'] && !(typeof data['sourceWebAppId'] === 'string' || data['sourceWebAppId'] instanceof String)) {
            throw new Error("Expected the field `sourceWebAppId` to be a primitive type in the JSON string but got " + data['sourceWebAppId']);
        }
        // ensure the json data is a string
        if (data['trafficManagerProfileId'] && !(typeof data['trafficManagerProfileId'] === 'string' || data['trafficManagerProfileId'] instanceof String)) {
            throw new Error("Expected the field `trafficManagerProfileId` to be a primitive type in the JSON string but got " + data['trafficManagerProfileId']);
        }
        // ensure the json data is a string
        if (data['trafficManagerProfileName'] && !(typeof data['trafficManagerProfileName'] === 'string' || data['trafficManagerProfileName'] instanceof String)) {
            throw new Error("Expected the field `trafficManagerProfileName` to be a primitive type in the JSON string but got " + data['trafficManagerProfileName']);
        }

        return true;
    }


}



/**
 * Application settings overrides for cloned web app. If specified these settings will override the settings cloned               from source web app. If not specified, application settings from source web app are retained.
 * @member {Object.<String, String>} appSettingsOverrides
 */
CloningInfo.prototype['appSettingsOverrides'] = undefined;

/**
 * If true, clone custom hostnames from source web app
 * @member {Boolean} cloneCustomHostNames
 */
CloningInfo.prototype['cloneCustomHostNames'] = undefined;

/**
 * Clone source control from source web app
 * @member {Boolean} cloneSourceControl
 */
CloningInfo.prototype['cloneSourceControl'] = undefined;

/**
 * If specified configure load balancing for source and clone site
 * @member {Boolean} configureLoadBalancing
 */
CloningInfo.prototype['configureLoadBalancing'] = undefined;

/**
 * Correlation Id of cloning operation. This id ties multiple cloning operations              together to use the same snapshot
 * @member {String} correlationId
 */
CloningInfo.prototype['correlationId'] = undefined;

/**
 * Hosting environment
 * @member {String} hostingEnvironment
 */
CloningInfo.prototype['hostingEnvironment'] = undefined;

/**
 * Overwrite destination web app
 * @member {Boolean} overwrite
 */
CloningInfo.prototype['overwrite'] = undefined;

/**
 * ARM resource id of the source web app. Web app resource id is of the form               /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and               /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots
 * @member {String} sourceWebAppId
 */
CloningInfo.prototype['sourceWebAppId'] = undefined;

/**
 * ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form               /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
 * @member {String} trafficManagerProfileId
 */
CloningInfo.prototype['trafficManagerProfileId'] = undefined;

/**
 * Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist
 * @member {String} trafficManagerProfileName
 */
CloningInfo.prototype['trafficManagerProfileName'] = undefined;






export default CloningInfo;

