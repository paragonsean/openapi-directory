/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AzureBlobStorageHttpLogsConfig from './AzureBlobStorageHttpLogsConfig';
import FileSystemHttpLogsConfig from './FileSystemHttpLogsConfig';

/**
 * The HttpLogsConfig model module.
 * @module model/HttpLogsConfig
 * @version 2015-08-01
 */
class HttpLogsConfig {
    /**
     * Constructs a new <code>HttpLogsConfig</code>.
     * Http logs configuration
     * @alias module:model/HttpLogsConfig
     */
    constructor() { 
        
        HttpLogsConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HttpLogsConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HttpLogsConfig} obj Optional instance to populate.
     * @return {module:model/HttpLogsConfig} The populated <code>HttpLogsConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HttpLogsConfig();

            if (data.hasOwnProperty('azureBlobStorage')) {
                obj['azureBlobStorage'] = AzureBlobStorageHttpLogsConfig.constructFromObject(data['azureBlobStorage']);
            }
            if (data.hasOwnProperty('fileSystem')) {
                obj['fileSystem'] = FileSystemHttpLogsConfig.constructFromObject(data['fileSystem']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HttpLogsConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HttpLogsConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `azureBlobStorage`
        if (data['azureBlobStorage']) { // data not null
          AzureBlobStorageHttpLogsConfig.validateJSON(data['azureBlobStorage']);
        }
        // validate the optional field `fileSystem`
        if (data['fileSystem']) { // data not null
          FileSystemHttpLogsConfig.validateJSON(data['fileSystem']);
        }

        return true;
    }


}



/**
 * @member {module:model/AzureBlobStorageHttpLogsConfig} azureBlobStorage
 */
HttpLogsConfig.prototype['azureBlobStorage'] = undefined;

/**
 * @member {module:model/FileSystemHttpLogsConfig} fileSystem
 */
HttpLogsConfig.prototype['fileSystem'] = undefined;






export default HttpLogsConfig;

