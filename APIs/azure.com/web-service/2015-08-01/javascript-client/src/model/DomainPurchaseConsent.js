/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DomainPurchaseConsent model module.
 * @module model/DomainPurchaseConsent
 * @version 2015-08-01
 */
class DomainPurchaseConsent {
    /**
     * Constructs a new <code>DomainPurchaseConsent</code>.
     * Domain purchase consent object representing acceptance of applicable legal agreements
     * @alias module:model/DomainPurchaseConsent
     */
    constructor() { 
        
        DomainPurchaseConsent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DomainPurchaseConsent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DomainPurchaseConsent} obj Optional instance to populate.
     * @return {module:model/DomainPurchaseConsent} The populated <code>DomainPurchaseConsent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DomainPurchaseConsent();

            if (data.hasOwnProperty('agreedAt')) {
                obj['agreedAt'] = ApiClient.convertToType(data['agreedAt'], 'Date');
            }
            if (data.hasOwnProperty('agreedBy')) {
                obj['agreedBy'] = ApiClient.convertToType(data['agreedBy'], 'String');
            }
            if (data.hasOwnProperty('agreementKeys')) {
                obj['agreementKeys'] = ApiClient.convertToType(data['agreementKeys'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DomainPurchaseConsent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DomainPurchaseConsent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['agreedBy'] && !(typeof data['agreedBy'] === 'string' || data['agreedBy'] instanceof String)) {
            throw new Error("Expected the field `agreedBy` to be a primitive type in the JSON string but got " + data['agreedBy']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['agreementKeys'])) {
            throw new Error("Expected the field `agreementKeys` to be an array in the JSON data but got " + data['agreementKeys']);
        }

        return true;
    }


}



/**
 * Timestamp when the agreements were accepted
 * @member {Date} agreedAt
 */
DomainPurchaseConsent.prototype['agreedAt'] = undefined;

/**
 * Client IP address
 * @member {String} agreedBy
 */
DomainPurchaseConsent.prototype['agreedBy'] = undefined;

/**
 * List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements Api under TopLevelDomain resource
 * @member {Array.<String>} agreementKeys
 */
DomainPurchaseConsent.prototype['agreementKeys'] = undefined;






export default DomainPurchaseConsent;

