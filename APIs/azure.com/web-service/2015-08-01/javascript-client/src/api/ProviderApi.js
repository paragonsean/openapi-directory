/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SourceControl from '../model/SourceControl';
import SourceControlCollection from '../model/SourceControlCollection';
import User from '../model/User';

/**
* Provider service.
* @module api/ProviderApi
* @version 2015-08-01
*/
export default class ProviderApi {

    /**
    * Constructs a new ProviderApi. 
    * @alias module:api/ProviderApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the providerGetPublishingUser operation.
     * @callback module:api/ProviderApi~providerGetPublishingUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets publishing user
     * @param {String} apiVersion API Version
     * @param {module:api/ProviderApi~providerGetPublishingUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/User}
     */
    providerGetPublishingUser(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling providerGetPublishingUser");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = User;
      return this.apiClient.callApi(
        '/providers/Microsoft.Web/publishingUsers/web', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the providerGetSourceControl operation.
     * @callback module:api/ProviderApi~providerGetSourceControlCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SourceControl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets source control token
     * @param {String} sourceControlType Type of source control
     * @param {String} apiVersion API Version
     * @param {module:api/ProviderApi~providerGetSourceControlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SourceControl}
     */
    providerGetSourceControl(sourceControlType, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'sourceControlType' is set
      if (sourceControlType === undefined || sourceControlType === null) {
        throw new Error("Missing the required parameter 'sourceControlType' when calling providerGetSourceControl");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling providerGetSourceControl");
      }

      let pathParams = {
        'sourceControlType': sourceControlType
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = SourceControl;
      return this.apiClient.callApi(
        '/providers/Microsoft.Web/sourcecontrols/{sourceControlType}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the providerGetSourceControls operation.
     * @callback module:api/ProviderApi~providerGetSourceControlsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SourceControlCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the source controls available for Azure websites
     * @param {String} apiVersion API Version
     * @param {module:api/ProviderApi~providerGetSourceControlsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SourceControlCollection}
     */
    providerGetSourceControls(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling providerGetSourceControls");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = SourceControlCollection;
      return this.apiClient.callApi(
        '/providers/Microsoft.Web/sourcecontrols', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the providerUpdatePublishingUser operation.
     * @callback module:api/ProviderApi~providerUpdatePublishingUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates publishing user
     * @param {String} apiVersion API Version
     * @param {module:model/User} requestMessage Details of publishing user
     * @param {module:api/ProviderApi~providerUpdatePublishingUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/User}
     */
    providerUpdatePublishingUser(apiVersion, requestMessage, callback) {
      let postBody = requestMessage;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling providerUpdatePublishingUser");
      }
      // verify the required parameter 'requestMessage' is set
      if (requestMessage === undefined || requestMessage === null) {
        throw new Error("Missing the required parameter 'requestMessage' when calling providerUpdatePublishingUser");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json', 'application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = User;
      return this.apiClient.callApi(
        '/providers/Microsoft.Web/publishingUsers/web', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the providerUpdateSourceControl operation.
     * @callback module:api/ProviderApi~providerUpdateSourceControlCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SourceControl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates source control token
     * @param {String} sourceControlType Type of source control
     * @param {String} apiVersion API Version
     * @param {module:model/SourceControl} requestMessage Source control token information
     * @param {module:api/ProviderApi~providerUpdateSourceControlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SourceControl}
     */
    providerUpdateSourceControl(sourceControlType, apiVersion, requestMessage, callback) {
      let postBody = requestMessage;
      // verify the required parameter 'sourceControlType' is set
      if (sourceControlType === undefined || sourceControlType === null) {
        throw new Error("Missing the required parameter 'sourceControlType' when calling providerUpdateSourceControl");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling providerUpdateSourceControl");
      }
      // verify the required parameter 'requestMessage' is set
      if (requestMessage === undefined || requestMessage === null) {
        throw new Error("Missing the required parameter 'requestMessage' when calling providerUpdateSourceControl");
      }

      let pathParams = {
        'sourceControlType': sourceControlType
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json', 'application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = SourceControl;
      return this.apiClient.callApi(
        '/providers/Microsoft.Web/sourcecontrols/{sourceControlType}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
