/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Usage service.
* @module api/UsageApi
* @version 2015-08-01
*/
export default class UsageApi {

    /**
    * Constructs a new UsageApi. 
    * @alias module:api/UsageApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the usageGetUsage operation.
     * @callback module:api/UsageApi~usageGetUsageCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns usage records for specified subscription and resource groups
     * @param {String} resourceGroupName Name of resource group
     * @param {String} environmentName Environment name
     * @param {String} lastId Last marker that was returned from the batch
     * @param {Number} batchSize size of the batch to be returned.
     * @param {String} subscriptionId Subscription Id
     * @param {String} apiVersion API Version
     * @param {module:api/UsageApi~usageGetUsageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    usageGetUsage(resourceGroupName, environmentName, lastId, batchSize, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling usageGetUsage");
      }
      // verify the required parameter 'environmentName' is set
      if (environmentName === undefined || environmentName === null) {
        throw new Error("Missing the required parameter 'environmentName' when calling usageGetUsage");
      }
      // verify the required parameter 'lastId' is set
      if (lastId === undefined || lastId === null) {
        throw new Error("Missing the required parameter 'lastId' when calling usageGetUsage");
      }
      // verify the required parameter 'batchSize' is set
      if (batchSize === undefined || batchSize === null) {
        throw new Error("Missing the required parameter 'batchSize' when calling usageGetUsage");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling usageGetUsage");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling usageGetUsage");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'environmentName': environmentName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'lastId': lastId,
        'batchSize': batchSize,
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web.Admin/environments/{environmentName}/usage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
