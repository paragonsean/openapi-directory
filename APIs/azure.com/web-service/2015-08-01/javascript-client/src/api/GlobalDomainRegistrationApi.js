/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DomainAvailablilityCheckResult from '../model/DomainAvailablilityCheckResult';
import DomainCollection from '../model/DomainCollection';
import DomainControlCenterSsoRequest from '../model/DomainControlCenterSsoRequest';
import DomainRecommendationSearchParameters from '../model/DomainRecommendationSearchParameters';
import DomainRegistrationInput from '../model/DomainRegistrationInput';
import NameIdentifier from '../model/NameIdentifier';
import NameIdentifierCollection from '../model/NameIdentifierCollection';

/**
* GlobalDomainRegistration service.
* @module api/GlobalDomainRegistrationApi
* @version 2015-08-01
*/
export default class GlobalDomainRegistrationApi {

    /**
    * Constructs a new GlobalDomainRegistrationApi. 
    * @alias module:api/GlobalDomainRegistrationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the globalDomainRegistrationCheckDomainAvailability operation.
     * @callback module:api/GlobalDomainRegistrationApi~globalDomainRegistrationCheckDomainAvailabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainAvailablilityCheckResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks if a domain is available for registration
     * @param {String} subscriptionId Subscription Id
     * @param {String} apiVersion API Version
     * @param {module:model/NameIdentifier} identifier Name of the domain
     * @param {module:api/GlobalDomainRegistrationApi~globalDomainRegistrationCheckDomainAvailabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainAvailablilityCheckResult}
     */
    globalDomainRegistrationCheckDomainAvailability(subscriptionId, apiVersion, identifier, callback) {
      let postBody = identifier;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling globalDomainRegistrationCheckDomainAvailability");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling globalDomainRegistrationCheckDomainAvailability");
      }
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling globalDomainRegistrationCheckDomainAvailability");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = DomainAvailablilityCheckResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/checkDomainAvailability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the globalDomainRegistrationGetAllDomains operation.
     * @callback module:api/GlobalDomainRegistrationApi~globalDomainRegistrationGetAllDomainsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all domains in a subscription
     * @param {String} subscriptionId Subscription Id
     * @param {String} apiVersion API Version
     * @param {module:api/GlobalDomainRegistrationApi~globalDomainRegistrationGetAllDomainsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainCollection}
     */
    globalDomainRegistrationGetAllDomains(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling globalDomainRegistrationGetAllDomains");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling globalDomainRegistrationGetAllDomains");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = DomainCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/domains', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the globalDomainRegistrationGetDomainControlCenterSsoRequest operation.
     * @callback module:api/GlobalDomainRegistrationApi~globalDomainRegistrationGetDomainControlCenterSsoRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainControlCenterSsoRequest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a single sign on request for domain management portal
     * @param {String} subscriptionId Subscription Id
     * @param {String} apiVersion API Version
     * @param {module:api/GlobalDomainRegistrationApi~globalDomainRegistrationGetDomainControlCenterSsoRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainControlCenterSsoRequest}
     */
    globalDomainRegistrationGetDomainControlCenterSsoRequest(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling globalDomainRegistrationGetDomainControlCenterSsoRequest");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling globalDomainRegistrationGetDomainControlCenterSsoRequest");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = DomainControlCenterSsoRequest;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/generateSsoRequest', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the globalDomainRegistrationListDomainRecommendations operation.
     * @callback module:api/GlobalDomainRegistrationApi~globalDomainRegistrationListDomainRecommendationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NameIdentifierCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists domain recommendations based on keywords
     * @param {String} subscriptionId Subscription Id
     * @param {String} apiVersion API Version
     * @param {module:model/DomainRecommendationSearchParameters} parameters Domain recommendation search parameters
     * @param {module:api/GlobalDomainRegistrationApi~globalDomainRegistrationListDomainRecommendationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NameIdentifierCollection}
     */
    globalDomainRegistrationListDomainRecommendations(subscriptionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling globalDomainRegistrationListDomainRecommendations");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling globalDomainRegistrationListDomainRecommendations");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling globalDomainRegistrationListDomainRecommendations");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'text/json'];
      let returnType = NameIdentifierCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/listDomainRecommendations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the globalDomainRegistrationValidateDomainPurchaseInformation operation.
     * @callback module:api/GlobalDomainRegistrationApi~globalDomainRegistrationValidateDomainPurchaseInformationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validates domain registration information
     * @param {String} subscriptionId Subscription Id
     * @param {String} apiVersion API Version
     * @param {module:model/DomainRegistrationInput} domainRegistrationInput Domain registration information
     * @param {module:api/GlobalDomainRegistrationApi~globalDomainRegistrationValidateDomainPurchaseInformationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    globalDomainRegistrationValidateDomainPurchaseInformation(subscriptionId, apiVersion, domainRegistrationInput, callback) {
      let postBody = domainRegistrationInput;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling globalDomainRegistrationValidateDomainPurchaseInformation");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling globalDomainRegistrationValidateDomainPurchaseInformation");
      }
      // verify the required parameter 'domainRegistrationInput' is set
      if (domainRegistrationInput === undefined || domainRegistrationInput === null) {
        throw new Error("Missing the required parameter 'domainRegistrationInput' when calling globalDomainRegistrationValidateDomainPurchaseInformation");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/validateDomainRegistrationInformation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
