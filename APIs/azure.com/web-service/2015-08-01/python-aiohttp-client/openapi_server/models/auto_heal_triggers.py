# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.requests_based_trigger import RequestsBasedTrigger
from openapi_server.models.slow_requests_based_trigger import SlowRequestsBasedTrigger
from openapi_server.models.status_codes_based_trigger import StatusCodesBasedTrigger
from openapi_server import util


class AutoHealTriggers(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, private_bytes_in_kb: int=None, requests: RequestsBasedTrigger=None, slow_requests: SlowRequestsBasedTrigger=None, status_codes: List[StatusCodesBasedTrigger]=None):
        """AutoHealTriggers - a model defined in OpenAPI

        :param private_bytes_in_kb: The private_bytes_in_kb of this AutoHealTriggers.
        :param requests: The requests of this AutoHealTriggers.
        :param slow_requests: The slow_requests of this AutoHealTriggers.
        :param status_codes: The status_codes of this AutoHealTriggers.
        """
        self.openapi_types = {
            'private_bytes_in_kb': int,
            'requests': RequestsBasedTrigger,
            'slow_requests': SlowRequestsBasedTrigger,
            'status_codes': List[StatusCodesBasedTrigger]
        }

        self.attribute_map = {
            'private_bytes_in_kb': 'privateBytesInKB',
            'requests': 'requests',
            'slow_requests': 'slowRequests',
            'status_codes': 'statusCodes'
        }

        self._private_bytes_in_kb = private_bytes_in_kb
        self._requests = requests
        self._slow_requests = slow_requests
        self._status_codes = status_codes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoHealTriggers':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoHealTriggers of this AutoHealTriggers.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def private_bytes_in_kb(self):
        """Gets the private_bytes_in_kb of this AutoHealTriggers.

        PrivateBytesInKB - Defines a rule based on private bytes

        :return: The private_bytes_in_kb of this AutoHealTriggers.
        :rtype: int
        """
        return self._private_bytes_in_kb

    @private_bytes_in_kb.setter
    def private_bytes_in_kb(self, private_bytes_in_kb):
        """Sets the private_bytes_in_kb of this AutoHealTriggers.

        PrivateBytesInKB - Defines a rule based on private bytes

        :param private_bytes_in_kb: The private_bytes_in_kb of this AutoHealTriggers.
        :type private_bytes_in_kb: int
        """

        self._private_bytes_in_kb = private_bytes_in_kb

    @property
    def requests(self):
        """Gets the requests of this AutoHealTriggers.


        :return: The requests of this AutoHealTriggers.
        :rtype: RequestsBasedTrigger
        """
        return self._requests

    @requests.setter
    def requests(self, requests):
        """Sets the requests of this AutoHealTriggers.


        :param requests: The requests of this AutoHealTriggers.
        :type requests: RequestsBasedTrigger
        """

        self._requests = requests

    @property
    def slow_requests(self):
        """Gets the slow_requests of this AutoHealTriggers.


        :return: The slow_requests of this AutoHealTriggers.
        :rtype: SlowRequestsBasedTrigger
        """
        return self._slow_requests

    @slow_requests.setter
    def slow_requests(self, slow_requests):
        """Sets the slow_requests of this AutoHealTriggers.


        :param slow_requests: The slow_requests of this AutoHealTriggers.
        :type slow_requests: SlowRequestsBasedTrigger
        """

        self._slow_requests = slow_requests

    @property
    def status_codes(self):
        """Gets the status_codes of this AutoHealTriggers.

        StatusCodes - Defines a rule based on status codes

        :return: The status_codes of this AutoHealTriggers.
        :rtype: List[StatusCodesBasedTrigger]
        """
        return self._status_codes

    @status_codes.setter
    def status_codes(self, status_codes):
        """Sets the status_codes of this AutoHealTriggers.

        StatusCodes - Defines a rule based on status codes

        :param status_codes: The status_codes of this AutoHealTriggers.
        :type status_codes: List[StatusCodesBasedTrigger]
        """

        self._status_codes = status_codes
