# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DomainPurchaseConsent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agreed_at: datetime=None, agreed_by: str=None, agreement_keys: List[str]=None):
        """DomainPurchaseConsent - a model defined in OpenAPI

        :param agreed_at: The agreed_at of this DomainPurchaseConsent.
        :param agreed_by: The agreed_by of this DomainPurchaseConsent.
        :param agreement_keys: The agreement_keys of this DomainPurchaseConsent.
        """
        self.openapi_types = {
            'agreed_at': datetime,
            'agreed_by': str,
            'agreement_keys': List[str]
        }

        self.attribute_map = {
            'agreed_at': 'agreedAt',
            'agreed_by': 'agreedBy',
            'agreement_keys': 'agreementKeys'
        }

        self._agreed_at = agreed_at
        self._agreed_by = agreed_by
        self._agreement_keys = agreement_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainPurchaseConsent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainPurchaseConsent of this DomainPurchaseConsent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agreed_at(self):
        """Gets the agreed_at of this DomainPurchaseConsent.

        Timestamp when the agreements were accepted

        :return: The agreed_at of this DomainPurchaseConsent.
        :rtype: datetime
        """
        return self._agreed_at

    @agreed_at.setter
    def agreed_at(self, agreed_at):
        """Sets the agreed_at of this DomainPurchaseConsent.

        Timestamp when the agreements were accepted

        :param agreed_at: The agreed_at of this DomainPurchaseConsent.
        :type agreed_at: datetime
        """

        self._agreed_at = agreed_at

    @property
    def agreed_by(self):
        """Gets the agreed_by of this DomainPurchaseConsent.

        Client IP address

        :return: The agreed_by of this DomainPurchaseConsent.
        :rtype: str
        """
        return self._agreed_by

    @agreed_by.setter
    def agreed_by(self, agreed_by):
        """Sets the agreed_by of this DomainPurchaseConsent.

        Client IP address

        :param agreed_by: The agreed_by of this DomainPurchaseConsent.
        :type agreed_by: str
        """

        self._agreed_by = agreed_by

    @property
    def agreement_keys(self):
        """Gets the agreement_keys of this DomainPurchaseConsent.

        List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements Api under TopLevelDomain resource

        :return: The agreement_keys of this DomainPurchaseConsent.
        :rtype: List[str]
        """
        return self._agreement_keys

    @agreement_keys.setter
    def agreement_keys(self, agreement_keys):
        """Sets the agreement_keys of this DomainPurchaseConsent.

        List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements Api under TopLevelDomain resource

        :param agreement_keys: The agreement_keys of this DomainPurchaseConsent.
        :type agreement_keys: List[str]
        """

        self._agreement_keys = agreement_keys
