# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileSystemApplicationLogsConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, level: str=None):
        """FileSystemApplicationLogsConfig - a model defined in OpenAPI

        :param level: The level of this FileSystemApplicationLogsConfig.
        """
        self.openapi_types = {
            'level': str
        }

        self.attribute_map = {
            'level': 'level'
        }

        self._level = level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileSystemApplicationLogsConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileSystemApplicationLogsConfig of this FileSystemApplicationLogsConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def level(self):
        """Gets the level of this FileSystemApplicationLogsConfig.

        Log level

        :return: The level of this FileSystemApplicationLogsConfig.
        :rtype: str
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this FileSystemApplicationLogsConfig.

        Log level

        :param level: The level of this FileSystemApplicationLogsConfig.
        :type level: str
        """
        allowed_values = ["Off", "Verbose", "Information", "Warning", "Error"]  # noqa: E501
        if level not in allowed_values:
            raise ValueError(
                "Invalid value for `level` ({0}), must be one of {1}"
                .format(level, allowed_values)
            )

        self._level = level
