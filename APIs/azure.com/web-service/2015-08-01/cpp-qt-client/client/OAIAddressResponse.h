/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddressResponse.h
 *
 * Describes main public ip address and any extra vips
 */

#ifndef OAIAddressResponse_H
#define OAIAddressResponse_H

#include <QJsonObject>

#include "OAIVirtualIPMapping.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVirtualIPMapping;

class OAIAddressResponse : public OAIObject {
public:
    OAIAddressResponse();
    OAIAddressResponse(QString json);
    ~OAIAddressResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInternalIpAddress() const;
    void setInternalIpAddress(const QString &internal_ip_address);
    bool is_internal_ip_address_Set() const;
    bool is_internal_ip_address_Valid() const;

    QList<QString> getOutboundIpAddresses() const;
    void setOutboundIpAddresses(const QList<QString> &outbound_ip_addresses);
    bool is_outbound_ip_addresses_Set() const;
    bool is_outbound_ip_addresses_Valid() const;

    QString getServiceIpAddress() const;
    void setServiceIpAddress(const QString &service_ip_address);
    bool is_service_ip_address_Set() const;
    bool is_service_ip_address_Valid() const;

    QList<OAIVirtualIPMapping> getVipMappings() const;
    void setVipMappings(const QList<OAIVirtualIPMapping> &vip_mappings);
    bool is_vip_mappings_Set() const;
    bool is_vip_mappings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_internal_ip_address;
    bool m_internal_ip_address_isSet;
    bool m_internal_ip_address_isValid;

    QList<QString> m_outbound_ip_addresses;
    bool m_outbound_ip_addresses_isSet;
    bool m_outbound_ip_addresses_isValid;

    QString m_service_ip_address;
    bool m_service_ip_address_isSet;
    bool m_service_ip_address_isValid;

    QList<OAIVirtualIPMapping> m_vip_mappings;
    bool m_vip_mappings_isSet;
    bool m_vip_mappings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddressResponse)

#endif // OAIAddressResponse_H
