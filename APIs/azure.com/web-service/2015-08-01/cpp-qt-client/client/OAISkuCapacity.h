/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISkuCapacity.h
 *
 * Description of the App Service Plan scale options
 */

#ifndef OAISkuCapacity_H
#define OAISkuCapacity_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISkuCapacity : public OAIObject {
public:
    OAISkuCapacity();
    OAISkuCapacity(QString json);
    ~OAISkuCapacity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getRDefault() const;
    void setRDefault(const qint32 &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    qint32 getMaximum() const;
    void setMaximum(const qint32 &maximum);
    bool is_maximum_Set() const;
    bool is_maximum_Valid() const;

    qint32 getMinimum() const;
    void setMinimum(const qint32 &minimum);
    bool is_minimum_Set() const;
    bool is_minimum_Valid() const;

    QString getScaleType() const;
    void setScaleType(const QString &scale_type);
    bool is_scale_type_Set() const;
    bool is_scale_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    qint32 m_maximum;
    bool m_maximum_isSet;
    bool m_maximum_isValid;

    qint32 m_minimum;
    bool m_minimum_isSet;
    bool m_minimum_isValid;

    QString m_scale_type;
    bool m_scale_type_isSet;
    bool m_scale_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISkuCapacity)

#endif // OAISkuCapacity_H
