/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkAccessControlEntry.h
 *
 * 
 */

#ifndef OAINetworkAccessControlEntry_H
#define OAINetworkAccessControlEntry_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkAccessControlEntry : public OAIObject {
public:
    OAINetworkAccessControlEntry();
    OAINetworkAccessControlEntry(QString json);
    ~OAINetworkAccessControlEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getOrder() const;
    void setOrder(const qint32 &order);
    bool is_order_Set() const;
    bool is_order_Valid() const;

    QString getRemoteSubnet() const;
    void setRemoteSubnet(const QString &remote_subnet);
    bool is_remote_subnet_Set() const;
    bool is_remote_subnet_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_order;
    bool m_order_isSet;
    bool m_order_isValid;

    QString m_remote_subnet;
    bool m_remote_subnet_isSet;
    bool m_remote_subnet_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkAccessControlEntry)

#endif // OAINetworkAccessControlEntry_H
