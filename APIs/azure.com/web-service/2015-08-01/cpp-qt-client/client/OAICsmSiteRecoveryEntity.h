/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICsmSiteRecoveryEntity.h
 *
 * Class containing details about site recovery operation.
 */

#ifndef OAICsmSiteRecoveryEntity_H
#define OAICsmSiteRecoveryEntity_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICsmSiteRecoveryEntity : public OAIObject {
public:
    OAICsmSiteRecoveryEntity();
    OAICsmSiteRecoveryEntity(QString json);
    ~OAICsmSiteRecoveryEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isRecoverConfig() const;
    void setRecoverConfig(const bool &recover_config);
    bool is_recover_config_Set() const;
    bool is_recover_config_Valid() const;

    QString getSiteName() const;
    void setSiteName(const QString &site_name);
    bool is_site_name_Set() const;
    bool is_site_name_Valid() const;

    QString getSlotName() const;
    void setSlotName(const QString &slot_name);
    bool is_slot_name_Set() const;
    bool is_slot_name_Valid() const;

    QDateTime getSnapshotTime() const;
    void setSnapshotTime(const QDateTime &snapshot_time);
    bool is_snapshot_time_Set() const;
    bool is_snapshot_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_recover_config;
    bool m_recover_config_isSet;
    bool m_recover_config_isValid;

    QString m_site_name;
    bool m_site_name_isSet;
    bool m_site_name_isValid;

    QString m_slot_name;
    bool m_slot_name_isSet;
    bool m_slot_name_isValid;

    QDateTime m_snapshot_time;
    bool m_snapshot_time_isSet;
    bool m_snapshot_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICsmSiteRecoveryEntity)

#endif // OAICsmSiteRecoveryEntity_H
