/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHandlerMapping.h
 *
 * The IIS handler mappings used to define which handler processes HTTP requests with certain extension.               For example it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
 */

#ifndef OAIHandlerMapping_H
#define OAIHandlerMapping_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHandlerMapping : public OAIObject {
public:
    OAIHandlerMapping();
    OAIHandlerMapping(QString json);
    ~OAIHandlerMapping() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArguments() const;
    void setArguments(const QString &arguments);
    bool is_arguments_Set() const;
    bool is_arguments_Valid() const;

    QString getExtension() const;
    void setExtension(const QString &extension);
    bool is_extension_Set() const;
    bool is_extension_Valid() const;

    QString getScriptProcessor() const;
    void setScriptProcessor(const QString &script_processor);
    bool is_script_processor_Set() const;
    bool is_script_processor_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arguments;
    bool m_arguments_isSet;
    bool m_arguments_isValid;

    QString m_extension;
    bool m_extension_isSet;
    bool m_extension_isValid;

    QString m_script_processor;
    bool m_script_processor_isSet;
    bool m_script_processor_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHandlerMapping)

#endif // OAIHandlerMapping_H
