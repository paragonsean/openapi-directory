/**
 * WebSite Management Client
 * Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceMetric.h
 *
 * Object representing a metric for any resource
 */

#ifndef OAIResourceMetric_H
#define OAIResourceMetric_H

#include <QJsonObject>

#include "OAIKeyValuePair_StringString.h"
#include "OAIResourceMetricName.h"
#include "OAIResourceMetricValue.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceMetricValue;
class OAIResourceMetricName;
class OAIKeyValuePair_StringString;

class OAIResourceMetric : public OAIObject {
public:
    OAIResourceMetric();
    OAIResourceMetric(QString json);
    ~OAIResourceMetric() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QList<OAIResourceMetricValue> getMetricValues() const;
    void setMetricValues(const QList<OAIResourceMetricValue> &metric_values);
    bool is_metric_values_Set() const;
    bool is_metric_values_Valid() const;

    OAIResourceMetricName getName() const;
    void setName(const OAIResourceMetricName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIKeyValuePair_StringString> getProperties() const;
    void setProperties(const QList<OAIKeyValuePair_StringString> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QString getResourceId() const;
    void setResourceId(const QString &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getTimeGrain() const;
    void setTimeGrain(const QString &time_grain);
    bool is_time_grain_Set() const;
    bool is_time_grain_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QList<OAIResourceMetricValue> m_metric_values;
    bool m_metric_values_isSet;
    bool m_metric_values_isValid;

    OAIResourceMetricName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIKeyValuePair_StringString> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QString m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_time_grain;
    bool m_time_grain_isSet;
    bool m_time_grain_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceMetric)

#endif // OAIResourceMetric_H
