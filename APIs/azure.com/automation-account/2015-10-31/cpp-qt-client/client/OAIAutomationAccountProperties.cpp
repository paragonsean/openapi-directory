/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutomationAccountProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutomationAccountProperties::OAIAutomationAccountProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutomationAccountProperties::OAIAutomationAccountProperties() {
    this->initializeModel();
}

OAIAutomationAccountProperties::~OAIAutomationAccountProperties() {}

void OAIAutomationAccountProperties::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_last_modified_by_isSet = false;
    m_last_modified_by_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIAutomationAccountProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutomationAccountProperties::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_last_modified_by_isValid = ::OpenAPI::fromJsonValue(m_last_modified_by, json[QString("lastModifiedBy")]);
    m_last_modified_by_isSet = !json[QString("lastModifiedBy")].isNull() && m_last_modified_by_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIAutomationAccountProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutomationAccountProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_last_modified_by_isSet) {
        obj.insert(QString("lastModifiedBy"), ::OpenAPI::toJsonValue(m_last_modified_by));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_sku.isSet()) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QDateTime OAIAutomationAccountProperties::getCreationTime() const {
    return m_creation_time;
}
void OAIAutomationAccountProperties::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIAutomationAccountProperties::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIAutomationAccountProperties::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIAutomationAccountProperties::getDescription() const {
    return m_description;
}
void OAIAutomationAccountProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAutomationAccountProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAutomationAccountProperties::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIAutomationAccountProperties::getLastModifiedBy() const {
    return m_last_modified_by;
}
void OAIAutomationAccountProperties::setLastModifiedBy(const QString &last_modified_by) {
    m_last_modified_by = last_modified_by;
    m_last_modified_by_isSet = true;
}

bool OAIAutomationAccountProperties::is_last_modified_by_Set() const{
    return m_last_modified_by_isSet;
}

bool OAIAutomationAccountProperties::is_last_modified_by_Valid() const{
    return m_last_modified_by_isValid;
}

QDateTime OAIAutomationAccountProperties::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIAutomationAccountProperties::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIAutomationAccountProperties::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIAutomationAccountProperties::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

OAISku OAIAutomationAccountProperties::getSku() const {
    return m_sku;
}
void OAIAutomationAccountProperties::setSku(const OAISku &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIAutomationAccountProperties::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIAutomationAccountProperties::is_sku_Valid() const{
    return m_sku_isValid;
}

QString OAIAutomationAccountProperties::getState() const {
    return m_state;
}
void OAIAutomationAccountProperties::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIAutomationAccountProperties::is_state_Set() const{
    return m_state_isSet;
}

bool OAIAutomationAccountProperties::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIAutomationAccountProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutomationAccountProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
