/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStatistics.h
 *
 * Definition of the statistic.
 */

#ifndef OAIStatistics_H
#define OAIStatistics_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStatistics : public OAIObject {
public:
    OAIStatistics();
    OAIStatistics(QString json);
    ~OAIStatistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCounterProperty() const;
    void setCounterProperty(const QString &counter_property);
    bool is_counter_property_Set() const;
    bool is_counter_property_Valid() const;

    qint64 getCounterValue() const;
    void setCounterValue(const qint64 &counter_value);
    bool is_counter_value_Set() const;
    bool is_counter_value_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_counter_property;
    bool m_counter_property_isSet;
    bool m_counter_property_isValid;

    qint64 m_counter_value;
    bool m_counter_value_isSet;
    bool m_counter_value_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStatistics)

#endif // OAIStatistics_H
