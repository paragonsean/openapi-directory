/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIaasVMRecoveryPoint.h
 *
 * Azure VM (also known as IaaS VM) workload-specific backup copy.
 */

#ifndef OAIIaasVMRecoveryPoint_H
#define OAIIaasVMRecoveryPoint_H

#include <QJsonObject>

#include "OAIKeyAndSecretDetails.h"
#include "OAIRecoveryPoint.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyAndSecretDetails;

class OAIIaasVMRecoveryPoint : public OAIObject {
public:
    OAIIaasVMRecoveryPoint();
    OAIIaasVMRecoveryPoint(QString json);
    ~OAIIaasVMRecoveryPoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsInstantIlrSessionActive() const;
    void setIsInstantIlrSessionActive(const bool &is_instant_ilr_session_active);
    bool is_is_instant_ilr_session_active_Set() const;
    bool is_is_instant_ilr_session_active_Valid() const;

    bool isIsSourceVmEncrypted() const;
    void setIsSourceVmEncrypted(const bool &is_source_vm_encrypted);
    bool is_is_source_vm_encrypted_Set() const;
    bool is_is_source_vm_encrypted_Valid() const;

    OAIKeyAndSecretDetails getKeyAndSecret() const;
    void setKeyAndSecret(const OAIKeyAndSecretDetails &key_and_secret);
    bool is_key_and_secret_Set() const;
    bool is_key_and_secret_Valid() const;

    QString getRecoveryPointAdditionalInfo() const;
    void setRecoveryPointAdditionalInfo(const QString &recovery_point_additional_info);
    bool is_recovery_point_additional_info_Set() const;
    bool is_recovery_point_additional_info_Valid() const;

    QDateTime getRecoveryPointTime() const;
    void setRecoveryPointTime(const QDateTime &recovery_point_time);
    bool is_recovery_point_time_Set() const;
    bool is_recovery_point_time_Valid() const;

    QString getRecoveryPointType() const;
    void setRecoveryPointType(const QString &recovery_point_type);
    bool is_recovery_point_type_Set() const;
    bool is_recovery_point_type_Valid() const;

    QString getSourceVmStorageType() const;
    void setSourceVmStorageType(const QString &source_vm_storage_type);
    bool is_source_vm_storage_type_Set() const;
    bool is_source_vm_storage_type_Valid() const;

    QString getObjectType() const;
    void setObjectType(const QString &object_type);
    bool is_object_type_Set() const;
    bool is_object_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_instant_ilr_session_active;
    bool m_is_instant_ilr_session_active_isSet;
    bool m_is_instant_ilr_session_active_isValid;

    bool m_is_source_vm_encrypted;
    bool m_is_source_vm_encrypted_isSet;
    bool m_is_source_vm_encrypted_isValid;

    OAIKeyAndSecretDetails m_key_and_secret;
    bool m_key_and_secret_isSet;
    bool m_key_and_secret_isValid;

    QString m_recovery_point_additional_info;
    bool m_recovery_point_additional_info_isSet;
    bool m_recovery_point_additional_info_isValid;

    QDateTime m_recovery_point_time;
    bool m_recovery_point_time_isSet;
    bool m_recovery_point_time_isValid;

    QString m_recovery_point_type;
    bool m_recovery_point_type_isSet;
    bool m_recovery_point_type_isValid;

    QString m_source_vm_storage_type;
    bool m_source_vm_storage_type_isSet;
    bool m_source_vm_storage_type_isValid;

    QString m_object_type;
    bool m_object_type_isSet;
    bool m_object_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIaasVMRecoveryPoint)

#endif // OAIIaasVMRecoveryPoint_H
