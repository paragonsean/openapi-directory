/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeyAndSecretDetails.h
 *
 * BEK stands for Bitlocker Encryption Key.   KEK stands for Key Encryption Key. KEK is the encryption key used to protect the Secret for the BEK    If the VM is encrypted, then the service stores the following details :    1. Secret(BEK) - Url + Backup Data + vaultID.              2. Key(KEK) - Url + Backup Data + vaultID.     It is possible for the BEK and KEK to have different vaultIDs.
 */

#ifndef OAIKeyAndSecretDetails_H
#define OAIKeyAndSecretDetails_H

#include <QJsonObject>

#include "OAIBEKDetails.h"
#include "OAIKEKDetails.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBEKDetails;
class OAIKEKDetails;

class OAIKeyAndSecretDetails : public OAIObject {
public:
    OAIKeyAndSecretDetails();
    OAIKeyAndSecretDetails(QString json);
    ~OAIKeyAndSecretDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBEKDetails getBekDetails() const;
    void setBekDetails(const OAIBEKDetails &bek_details);
    bool is_bek_details_Set() const;
    bool is_bek_details_Valid() const;

    OAIKEKDetails getKekDetails() const;
    void setKekDetails(const OAIKEKDetails &kek_details);
    bool is_kek_details_Set() const;
    bool is_kek_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBEKDetails m_bek_details;
    bool m_bek_details_isSet;
    bool m_bek_details_isValid;

    OAIKEKDetails m_kek_details;
    bool m_kek_details_isSet;
    bool m_kek_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeyAndSecretDetails)

#endif // OAIKeyAndSecretDetails_H
