/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIaasVMILRRegistrationRequest.h
 *
 * Restore files or folders from a backup copy, or recovery point, of an IaaS (or Azure) VM.
 */

#ifndef OAIIaasVMILRRegistrationRequest_H
#define OAIIaasVMILRRegistrationRequest_H

#include <QJsonObject>

#include "OAIILRRequest.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIaasVMILRRegistrationRequest : public OAIObject {
public:
    OAIIaasVMILRRegistrationRequest();
    OAIIaasVMILRRegistrationRequest(QString json);
    ~OAIIaasVMILRRegistrationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInitiatorName() const;
    void setInitiatorName(const QString &initiator_name);
    bool is_initiator_name_Set() const;
    bool is_initiator_name_Valid() const;

    QString getRecoveryPointId() const;
    void setRecoveryPointId(const QString &recovery_point_id);
    bool is_recovery_point_id_Set() const;
    bool is_recovery_point_id_Valid() const;

    bool isRenewExistingRegistration() const;
    void setRenewExistingRegistration(const bool &renew_existing_registration);
    bool is_renew_existing_registration_Set() const;
    bool is_renew_existing_registration_Valid() const;

    QString getVirtualMachineId() const;
    void setVirtualMachineId(const QString &virtual_machine_id);
    bool is_virtual_machine_id_Set() const;
    bool is_virtual_machine_id_Valid() const;

    QString getObjectType() const;
    void setObjectType(const QString &object_type);
    bool is_object_type_Set() const;
    bool is_object_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_initiator_name;
    bool m_initiator_name_isSet;
    bool m_initiator_name_isValid;

    QString m_recovery_point_id;
    bool m_recovery_point_id_isSet;
    bool m_recovery_point_id_isValid;

    bool m_renew_existing_registration;
    bool m_renew_existing_registration_isSet;
    bool m_renew_existing_registration_isValid;

    QString m_virtual_machine_id;
    bool m_virtual_machine_id_isSet;
    bool m_virtual_machine_id_isValid;

    QString m_object_type;
    bool m_object_type_isSet;
    bool m_object_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIaasVMILRRegistrationRequest)

#endif // OAIIaasVMILRRegistrationRequest_H
