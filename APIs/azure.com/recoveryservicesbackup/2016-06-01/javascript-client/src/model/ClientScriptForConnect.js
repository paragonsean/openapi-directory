/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClientScriptForConnect model module.
 * @module model/ClientScriptForConnect
 * @version 2016-06-01
 */
class ClientScriptForConnect {
    /**
     * Constructs a new <code>ClientScriptForConnect</code>.
     * Client script details for the file or folder restore.
     * @alias module:model/ClientScriptForConnect
     */
    constructor() { 
        
        ClientScriptForConnect.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientScriptForConnect</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientScriptForConnect} obj Optional instance to populate.
     * @return {module:model/ClientScriptForConnect} The populated <code>ClientScriptForConnect</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientScriptForConnect();

            if (data.hasOwnProperty('osType')) {
                obj['osType'] = ApiClient.convertToType(data['osType'], 'String');
            }
            if (data.hasOwnProperty('scriptContent')) {
                obj['scriptContent'] = ApiClient.convertToType(data['scriptContent'], 'String');
            }
            if (data.hasOwnProperty('scriptExtension')) {
                obj['scriptExtension'] = ApiClient.convertToType(data['scriptExtension'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientScriptForConnect</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientScriptForConnect</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['osType'] && !(typeof data['osType'] === 'string' || data['osType'] instanceof String)) {
            throw new Error("Expected the field `osType` to be a primitive type in the JSON string but got " + data['osType']);
        }
        // ensure the json data is a string
        if (data['scriptContent'] && !(typeof data['scriptContent'] === 'string' || data['scriptContent'] instanceof String)) {
            throw new Error("Expected the field `scriptContent` to be a primitive type in the JSON string but got " + data['scriptContent']);
        }
        // ensure the json data is a string
        if (data['scriptExtension'] && !(typeof data['scriptExtension'] === 'string' || data['scriptExtension'] instanceof String)) {
            throw new Error("Expected the field `scriptExtension` to be a primitive type in the JSON string but got " + data['scriptExtension']);
        }

        return true;
    }


}



/**
 * The operating system platform (\"Windows\" or \"Linux\") for which this file or folder restore client script works.
 * @member {String} osType
 */
ClientScriptForConnect.prototype['osType'] = undefined;

/**
 * File content of the client script for file or folder restore.
 * @member {String} scriptContent
 */
ClientScriptForConnect.prototype['scriptContent'] = undefined;

/**
 * File extension of the client script for the file or folder restore. Some examples of the extension are: .ps1 and .sh.
 * @member {String} scriptExtension
 */
ClientScriptForConnect.prototype['scriptExtension'] = undefined;






export default ClientScriptForConnect;

