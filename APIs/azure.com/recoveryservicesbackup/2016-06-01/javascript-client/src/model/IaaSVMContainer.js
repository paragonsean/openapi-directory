/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProtectionContainer from './ProtectionContainer';

/**
 * The IaaSVMContainer model module.
 * @module model/IaaSVMContainer
 * @version 2016-06-01
 */
class IaaSVMContainer {
    /**
     * Constructs a new <code>IaaSVMContainer</code>.
     * IaaS VM workload-specific container.
     * @alias module:model/IaaSVMContainer
     * @extends module:model/ProtectionContainer
     * @implements module:model/ProtectionContainer
     */
    constructor() { 
        ProtectionContainer.initialize(this);
        IaaSVMContainer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IaaSVMContainer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IaaSVMContainer} obj Optional instance to populate.
     * @return {module:model/IaaSVMContainer} The populated <code>IaaSVMContainer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IaaSVMContainer();
            ProtectionContainer.constructFromObject(data, obj);
            ProtectionContainer.constructFromObject(data, obj);

            if (data.hasOwnProperty('resourceGroup')) {
                obj['resourceGroup'] = ApiClient.convertToType(data['resourceGroup'], 'String');
            }
            if (data.hasOwnProperty('virtualMachineId')) {
                obj['virtualMachineId'] = ApiClient.convertToType(data['virtualMachineId'], 'String');
            }
            if (data.hasOwnProperty('virtualMachineVersion')) {
                obj['virtualMachineVersion'] = ApiClient.convertToType(data['virtualMachineVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IaaSVMContainer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IaaSVMContainer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['resourceGroup'] && !(typeof data['resourceGroup'] === 'string' || data['resourceGroup'] instanceof String)) {
            throw new Error("Expected the field `resourceGroup` to be a primitive type in the JSON string but got " + data['resourceGroup']);
        }
        // ensure the json data is a string
        if (data['virtualMachineId'] && !(typeof data['virtualMachineId'] === 'string' || data['virtualMachineId'] instanceof String)) {
            throw new Error("Expected the field `virtualMachineId` to be a primitive type in the JSON string but got " + data['virtualMachineId']);
        }
        // ensure the json data is a string
        if (data['virtualMachineVersion'] && !(typeof data['virtualMachineVersion'] === 'string' || data['virtualMachineVersion'] instanceof String)) {
            throw new Error("Expected the field `virtualMachineVersion` to be a primitive type in the JSON string but got " + data['virtualMachineVersion']);
        }

        return true;
    }


}



/**
 * The resource group name associated with the Recovery Services vault.
 * @member {String} resourceGroup
 */
IaaSVMContainer.prototype['resourceGroup'] = undefined;

/**
 * The fully qualified Resource Manager URL of the virtual machine represented by this Azure IaaS VM container.
 * @member {String} virtualMachineId
 */
IaaSVMContainer.prototype['virtualMachineId'] = undefined;

/**
 * Specifies whether the container represents a classic or a Resource Manager-deployed virtual machine.
 * @member {String} virtualMachineVersion
 */
IaaSVMContainer.prototype['virtualMachineVersion'] = undefined;


// Implement ProtectionContainer interface:
/**
 * The backup management type for the container.
 * @member {module:model/ProtectionContainer.BackupManagementTypeEnum} backupManagementType
 */
ProtectionContainer.prototype['backupManagementType'] = undefined;
/**
 * The type assigned to the container. The values to use for each of these properties are:<br/> 1. Compute Azure VM is Microsoft.Compute/virtualMachines<br/> 2. Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines<br/> 3. Windows machines (like Azure Backup Server and DPM) is Windows<br/> 4. Azure SQL instance is AzureSqlContainer.
 * @member {String} containerType
 */
ProtectionContainer.prototype['containerType'] = undefined;
/**
 * Friendly name of the container.
 * @member {String} friendlyName
 */
ProtectionContainer.prototype['friendlyName'] = undefined;
/**
 * The status of the container's health.
 * @member {String} healthStatus
 */
ProtectionContainer.prototype['healthStatus'] = undefined;
/**
 * The protectable object type associated with the container.
 * @member {String} protectableObjectType
 */
ProtectionContainer.prototype['protectableObjectType'] = undefined;
/**
 * The container's registration status with the Recovery Services vault.
 * @member {String} registrationStatus
 */
ProtectionContainer.prototype['registrationStatus'] = undefined;




export default IaaSVMContainer;

