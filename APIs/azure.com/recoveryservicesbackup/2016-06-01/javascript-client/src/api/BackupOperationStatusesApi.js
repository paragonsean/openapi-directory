/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OperationStatus from '../model/OperationStatus';

/**
* BackupOperationStatuses service.
* @module api/BackupOperationStatusesApi
* @version 2016-06-01
*/
export default class BackupOperationStatusesApi {

    /**
    * Constructs a new BackupOperationStatusesApi. 
    * @alias module:api/BackupOperationStatusesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the backupOperationStatusesGet operation.
     * @callback module:api/BackupOperationStatusesApi~backupOperationStatusesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the status of an operation such as triggering a backup or restore. The status can be In progress, Completed or Failed. You can refer to the OperationStatus enum for all the possible states of an operation. Some operations create jobs. This method returns the list of jobs when the operation is complete.
     * @param {String} apiVersion Client API version.
     * @param {String} vaultName The name of the Recovery Services vault.
     * @param {String} resourceGroupName The name of the resource group associated with the Recovery Services vault.
     * @param {String} subscriptionId The subscription ID.
     * @param {String} operationId The ID of the operation.
     * @param {module:api/BackupOperationStatusesApi~backupOperationStatusesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatus}
     */
    backupOperationStatusesGet(apiVersion, vaultName, resourceGroupName, subscriptionId, operationId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling backupOperationStatusesGet");
      }
      // verify the required parameter 'vaultName' is set
      if (vaultName === undefined || vaultName === null) {
        throw new Error("Missing the required parameter 'vaultName' when calling backupOperationStatusesGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling backupOperationStatusesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling backupOperationStatusesGet");
      }
      // verify the required parameter 'operationId' is set
      if (operationId === undefined || operationId === null) {
        throw new Error("Missing the required parameter 'operationId' when calling backupOperationStatusesGet");
      }

      let pathParams = {
        'vaultName': vaultName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'operationId': operationId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationStatus;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupOperations/{operationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
