# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KEKDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_backup_data: str=None, key_url: str=None, key_vault_id: str=None):
        """KEKDetails - a model defined in OpenAPI

        :param key_backup_data: The key_backup_data of this KEKDetails.
        :param key_url: The key_url of this KEKDetails.
        :param key_vault_id: The key_vault_id of this KEKDetails.
        """
        self.openapi_types = {
            'key_backup_data': str,
            'key_url': str,
            'key_vault_id': str
        }

        self.attribute_map = {
            'key_backup_data': 'keyBackupData',
            'key_url': 'keyUrl',
            'key_vault_id': 'keyVaultId'
        }

        self._key_backup_data = key_backup_data
        self._key_url = key_url
        self._key_vault_id = key_vault_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KEKDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KEKDetails of this KEKDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_backup_data(self):
        """Gets the key_backup_data of this KEKDetails.

        Key Backup Data refers to Key Encryption Key (KEK) data.

        :return: The key_backup_data of this KEKDetails.
        :rtype: str
        """
        return self._key_backup_data

    @key_backup_data.setter
    def key_backup_data(self, key_backup_data):
        """Sets the key_backup_data of this KEKDetails.

        Key Backup Data refers to Key Encryption Key (KEK) data.

        :param key_backup_data: The key_backup_data of this KEKDetails.
        :type key_backup_data: str
        """

        self._key_backup_data = key_backup_data

    @property
    def key_url(self):
        """Gets the key_url of this KEKDetails.

        Key refers to the Key Encryption Key (KEK). The KEK is the Key to unlock the Secret.

        :return: The key_url of this KEKDetails.
        :rtype: str
        """
        return self._key_url

    @key_url.setter
    def key_url(self, key_url):
        """Sets the key_url of this KEKDetails.

        Key refers to the Key Encryption Key (KEK). The KEK is the Key to unlock the Secret.

        :param key_url: The key_url of this KEKDetails.
        :type key_url: str
        """

        self._key_url = key_url

    @property
    def key_vault_id(self):
        """Gets the key_vault_id of this KEKDetails.

        Key Vault ID identifies where the KEK is stored.

        :return: The key_vault_id of this KEKDetails.
        :rtype: str
        """
        return self._key_vault_id

    @key_vault_id.setter
    def key_vault_id(self, key_vault_id):
        """Sets the key_vault_id of this KEKDetails.

        Key Vault ID identifies where the KEK is stored.

        :param key_vault_id: The key_vault_id of this KEKDetails.
        :type key_vault_id: str
        """

        self._key_vault_id = key_vault_id
