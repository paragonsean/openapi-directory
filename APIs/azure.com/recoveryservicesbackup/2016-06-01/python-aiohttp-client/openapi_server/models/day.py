# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Day(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: int=None, is_last: bool=None):
        """Day - a model defined in OpenAPI

        :param _date: The _date of this Day.
        :param is_last: The is_last of this Day.
        """
        self.openapi_types = {
            '_date': int,
            'is_last': bool
        }

        self.attribute_map = {
            '_date': 'date',
            'is_last': 'isLast'
        }

        self.__date = _date
        self._is_last = is_last

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Day':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Day of this Day.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this Day.


        :return: The _date of this Day.
        :rtype: int
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Day.


        :param _date: The _date of this Day.
        :type _date: int
        """

        self.__date = _date

    @property
    def is_last(self):
        """Gets the is_last of this Day.


        :return: The is_last of this Day.
        :rtype: bool
        """
        return self._is_last

    @is_last.setter
    def is_last(self, is_last):
        """Sets the is_last of this Day.


        :param is_last: The is_last of this Day.
        :type is_last: bool
        """

        self._is_last = is_last
