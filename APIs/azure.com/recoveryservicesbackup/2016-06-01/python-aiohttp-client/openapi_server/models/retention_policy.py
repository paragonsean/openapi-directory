# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RetentionPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, retention_policy_type: str=None):
        """RetentionPolicy - a model defined in OpenAPI

        :param retention_policy_type: The retention_policy_type of this RetentionPolicy.
        """
        self.openapi_types = {
            'retention_policy_type': str
        }

        self.attribute_map = {
            'retention_policy_type': 'retentionPolicyType'
        }

        self._retention_policy_type = retention_policy_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RetentionPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RetentionPolicy of this RetentionPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def retention_policy_type(self):
        """Gets the retention_policy_type of this RetentionPolicy.

        This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :return: The retention_policy_type of this RetentionPolicy.
        :rtype: str
        """
        return self._retention_policy_type

    @retention_policy_type.setter
    def retention_policy_type(self, retention_policy_type):
        """Sets the retention_policy_type of this RetentionPolicy.

        This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :param retention_policy_type: The retention_policy_type of this RetentionPolicy.
        :type retention_policy_type: str
        """

        self._retention_policy_type = retention_policy_type
