# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.day import Day
from openapi_server import util


class DailyRetentionFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, days_of_the_month: List[Day]=None):
        """DailyRetentionFormat - a model defined in OpenAPI

        :param days_of_the_month: The days_of_the_month of this DailyRetentionFormat.
        """
        self.openapi_types = {
            'days_of_the_month': List[Day]
        }

        self.attribute_map = {
            'days_of_the_month': 'daysOfTheMonth'
        }

        self._days_of_the_month = days_of_the_month

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DailyRetentionFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DailyRetentionFormat of this DailyRetentionFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def days_of_the_month(self):
        """Gets the days_of_the_month of this DailyRetentionFormat.

        List of days of the month.

        :return: The days_of_the_month of this DailyRetentionFormat.
        :rtype: List[Day]
        """
        return self._days_of_the_month

    @days_of_the_month.setter
    def days_of_the_month(self, days_of_the_month):
        """Sets the days_of_the_month of this DailyRetentionFormat.

        List of days of the month.

        :param days_of_the_month: The days_of_the_month of this DailyRetentionFormat.
        :type days_of_the_month: List[Day]
        """

        self._days_of_the_month = days_of_the_month
