/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.EncryptionDetails;
import org.openapitools.client.model.RestoreRequest;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IaaS VM workload-specific restore.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:23:21.567091-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IaasVMRestoreRequest extends RestoreRequest {
  public static final String SERIALIZED_NAME_AFFINITY_GROUP = "affinityGroup";
  @SerializedName(SERIALIZED_NAME_AFFINITY_GROUP)
  private String affinityGroup;

  public static final String SERIALIZED_NAME_CREATE_NEW_CLOUD_SERVICE = "createNewCloudService";
  @SerializedName(SERIALIZED_NAME_CREATE_NEW_CLOUD_SERVICE)
  private Boolean createNewCloudService;

  public static final String SERIALIZED_NAME_ENCRYPTION_DETAILS = "encryptionDetails";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_DETAILS)
  private EncryptionDetails encryptionDetails;

  public static final String SERIALIZED_NAME_RECOVERY_POINT_ID = "recoveryPointId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_ID)
  private String recoveryPointId;

  /**
   * The type of this recovery.
   */
  @JsonAdapter(RecoveryTypeEnum.Adapter.class)
  public enum RecoveryTypeEnum {
    INVALID("Invalid"),
    
    ORIGINAL_LOCATION("OriginalLocation"),
    
    ALTERNATE_LOCATION("AlternateLocation"),
    
    RESTORE_DISKS("RestoreDisks");

    private String value;

    RecoveryTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RecoveryTypeEnum fromValue(String value) {
      for (RecoveryTypeEnum b : RecoveryTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RecoveryTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecoveryTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecoveryTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RecoveryTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RecoveryTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RECOVERY_TYPE = "recoveryType";
  @SerializedName(SERIALIZED_NAME_RECOVERY_TYPE)
  private RecoveryTypeEnum recoveryType;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_SOURCE_RESOURCE_ID = "sourceResourceId";
  @SerializedName(SERIALIZED_NAME_SOURCE_RESOURCE_ID)
  private String sourceResourceId;

  public static final String SERIALIZED_NAME_STORAGE_ACCOUNT_ID = "storageAccountId";
  @SerializedName(SERIALIZED_NAME_STORAGE_ACCOUNT_ID)
  private String storageAccountId;

  public static final String SERIALIZED_NAME_SUBNET_ID = "subnetId";
  @SerializedName(SERIALIZED_NAME_SUBNET_ID)
  private String subnetId;

  public static final String SERIALIZED_NAME_TARGET_DOMAIN_NAME_ID = "targetDomainNameId";
  @SerializedName(SERIALIZED_NAME_TARGET_DOMAIN_NAME_ID)
  private String targetDomainNameId;

  public static final String SERIALIZED_NAME_TARGET_RESOURCE_GROUP_ID = "targetResourceGroupId";
  @SerializedName(SERIALIZED_NAME_TARGET_RESOURCE_GROUP_ID)
  private String targetResourceGroupId;

  public static final String SERIALIZED_NAME_TARGET_VIRTUAL_MACHINE_ID = "targetVirtualMachineId";
  @SerializedName(SERIALIZED_NAME_TARGET_VIRTUAL_MACHINE_ID)
  private String targetVirtualMachineId;

  public static final String SERIALIZED_NAME_VIRTUAL_NETWORK_ID = "virtualNetworkId";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_NETWORK_ID)
  private String virtualNetworkId;

  public IaasVMRestoreRequest() {
    this.objectType = this.getClass().getSimpleName();
  }

  public IaasVMRestoreRequest affinityGroup(String affinityGroup) {
    this.affinityGroup = affinityGroup;
    return this;
  }

  /**
   * The affinity group associated with the VM to be restored. Affinity groups are used only for Classic-deployed virtual machines.
   * @return affinityGroup
   */
  @javax.annotation.Nullable
  public String getAffinityGroup() {
    return affinityGroup;
  }

  public void setAffinityGroup(String affinityGroup) {
    this.affinityGroup = affinityGroup;
  }


  public IaasVMRestoreRequest createNewCloudService(Boolean createNewCloudService) {
    this.createNewCloudService = createNewCloudService;
    return this;
  }

  /**
   * Asks the question if a new cloud service should be created while restoring the VM. If the answer is false, the VM is restored to the same cloud service.
   * @return createNewCloudService
   */
  @javax.annotation.Nullable
  public Boolean getCreateNewCloudService() {
    return createNewCloudService;
  }

  public void setCreateNewCloudService(Boolean createNewCloudService) {
    this.createNewCloudService = createNewCloudService;
  }


  public IaasVMRestoreRequest encryptionDetails(EncryptionDetails encryptionDetails) {
    this.encryptionDetails = encryptionDetails;
    return this;
  }

  /**
   * Get encryptionDetails
   * @return encryptionDetails
   */
  @javax.annotation.Nullable
  public EncryptionDetails getEncryptionDetails() {
    return encryptionDetails;
  }

  public void setEncryptionDetails(EncryptionDetails encryptionDetails) {
    this.encryptionDetails = encryptionDetails;
  }


  public IaasVMRestoreRequest recoveryPointId(String recoveryPointId) {
    this.recoveryPointId = recoveryPointId;
    return this;
  }

  /**
   * The ID of the backup copy to be recovered.
   * @return recoveryPointId
   */
  @javax.annotation.Nullable
  public String getRecoveryPointId() {
    return recoveryPointId;
  }

  public void setRecoveryPointId(String recoveryPointId) {
    this.recoveryPointId = recoveryPointId;
  }


  public IaasVMRestoreRequest recoveryType(RecoveryTypeEnum recoveryType) {
    this.recoveryType = recoveryType;
    return this;
  }

  /**
   * The type of this recovery.
   * @return recoveryType
   */
  @javax.annotation.Nullable
  public RecoveryTypeEnum getRecoveryType() {
    return recoveryType;
  }

  public void setRecoveryType(RecoveryTypeEnum recoveryType) {
    this.recoveryType = recoveryType;
  }


  public IaasVMRestoreRequest region(String region) {
    this.region = region;
    return this;
  }

  /**
   * The region where the virtual machine is restored.
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public IaasVMRestoreRequest sourceResourceId(String sourceResourceId) {
    this.sourceResourceId = sourceResourceId;
    return this;
  }

  /**
   * The fully qualified Resource Manager ID of the VM being recovered.
   * @return sourceResourceId
   */
  @javax.annotation.Nullable
  public String getSourceResourceId() {
    return sourceResourceId;
  }

  public void setSourceResourceId(String sourceResourceId) {
    this.sourceResourceId = sourceResourceId;
  }


  public IaasVMRestoreRequest storageAccountId(String storageAccountId) {
    this.storageAccountId = storageAccountId;
    return this;
  }

  /**
   * The fully qualified Resource Manager ID of the storage account where the VM will be restored.
   * @return storageAccountId
   */
  @javax.annotation.Nullable
  public String getStorageAccountId() {
    return storageAccountId;
  }

  public void setStorageAccountId(String storageAccountId) {
    this.storageAccountId = storageAccountId;
  }


  public IaasVMRestoreRequest subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

  /**
   * Subnet ID is the identifier for the VM to be restored. For Classic VMs the subnet ID would be {VnetID}/Subnet/{SubnetName}, and for the Resource Manager VMs, the subnet ID would be the Resource Manager resource ID used to represent the subnet.
   * @return subnetId
   */
  @javax.annotation.Nullable
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }


  public IaasVMRestoreRequest targetDomainNameId(String targetDomainNameId) {
    this.targetDomainNameId = targetDomainNameId;
    return this;
  }

  /**
   * The fully qualified Resource Manager ID of the domain name to be associated with the VM being restored. Use the Resource Manager ID to identify the domain, only for Classic-deployed virtual machines.
   * @return targetDomainNameId
   */
  @javax.annotation.Nullable
  public String getTargetDomainNameId() {
    return targetDomainNameId;
  }

  public void setTargetDomainNameId(String targetDomainNameId) {
    this.targetDomainNameId = targetDomainNameId;
  }


  public IaasVMRestoreRequest targetResourceGroupId(String targetResourceGroupId) {
    this.targetResourceGroupId = targetResourceGroupId;
    return this;
  }

  /**
   * The Resource Manager ID of the resource group you&#39;re creating for this VM and other artifacts.      For example: /subscriptions/{subId}/resourcegroups/{rg}
   * @return targetResourceGroupId
   */
  @javax.annotation.Nullable
  public String getTargetResourceGroupId() {
    return targetResourceGroupId;
  }

  public void setTargetResourceGroupId(String targetResourceGroupId) {
    this.targetResourceGroupId = targetResourceGroupId;
  }


  public IaasVMRestoreRequest targetVirtualMachineId(String targetVirtualMachineId) {
    this.targetVirtualMachineId = targetVirtualMachineId;
    return this;
  }

  /**
   * The complete Resource Manager ID of the VM that will be created.              For example: /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}
   * @return targetVirtualMachineId
   */
  @javax.annotation.Nullable
  public String getTargetVirtualMachineId() {
    return targetVirtualMachineId;
  }

  public void setTargetVirtualMachineId(String targetVirtualMachineId) {
    this.targetVirtualMachineId = targetVirtualMachineId;
  }


  public IaasVMRestoreRequest virtualNetworkId(String virtualNetworkId) {
    this.virtualNetworkId = virtualNetworkId;
    return this;
  }

  /**
   * This is the virtual network ID of the vnet that is attached to the virtual machine.              Your join action permissions are validated during the linked access.
   * @return virtualNetworkId
   */
  @javax.annotation.Nullable
  public String getVirtualNetworkId() {
    return virtualNetworkId;
  }

  public void setVirtualNetworkId(String virtualNetworkId) {
    this.virtualNetworkId = virtualNetworkId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IaasVMRestoreRequest iaasVMRestoreRequest = (IaasVMRestoreRequest) o;
    return Objects.equals(this.affinityGroup, iaasVMRestoreRequest.affinityGroup) &&
        Objects.equals(this.createNewCloudService, iaasVMRestoreRequest.createNewCloudService) &&
        Objects.equals(this.encryptionDetails, iaasVMRestoreRequest.encryptionDetails) &&
        Objects.equals(this.recoveryPointId, iaasVMRestoreRequest.recoveryPointId) &&
        Objects.equals(this.recoveryType, iaasVMRestoreRequest.recoveryType) &&
        Objects.equals(this.region, iaasVMRestoreRequest.region) &&
        Objects.equals(this.sourceResourceId, iaasVMRestoreRequest.sourceResourceId) &&
        Objects.equals(this.storageAccountId, iaasVMRestoreRequest.storageAccountId) &&
        Objects.equals(this.subnetId, iaasVMRestoreRequest.subnetId) &&
        Objects.equals(this.targetDomainNameId, iaasVMRestoreRequest.targetDomainNameId) &&
        Objects.equals(this.targetResourceGroupId, iaasVMRestoreRequest.targetResourceGroupId) &&
        Objects.equals(this.targetVirtualMachineId, iaasVMRestoreRequest.targetVirtualMachineId) &&
        Objects.equals(this.virtualNetworkId, iaasVMRestoreRequest.virtualNetworkId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affinityGroup, createNewCloudService, encryptionDetails, recoveryPointId, recoveryType, region, sourceResourceId, storageAccountId, subnetId, targetDomainNameId, targetResourceGroupId, targetVirtualMachineId, virtualNetworkId, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IaasVMRestoreRequest {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    affinityGroup: ").append(toIndentedString(affinityGroup)).append("\n");
    sb.append("    createNewCloudService: ").append(toIndentedString(createNewCloudService)).append("\n");
    sb.append("    encryptionDetails: ").append(toIndentedString(encryptionDetails)).append("\n");
    sb.append("    recoveryPointId: ").append(toIndentedString(recoveryPointId)).append("\n");
    sb.append("    recoveryType: ").append(toIndentedString(recoveryType)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    sourceResourceId: ").append(toIndentedString(sourceResourceId)).append("\n");
    sb.append("    storageAccountId: ").append(toIndentedString(storageAccountId)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    targetDomainNameId: ").append(toIndentedString(targetDomainNameId)).append("\n");
    sb.append("    targetResourceGroupId: ").append(toIndentedString(targetResourceGroupId)).append("\n");
    sb.append("    targetVirtualMachineId: ").append(toIndentedString(targetVirtualMachineId)).append("\n");
    sb.append("    virtualNetworkId: ").append(toIndentedString(virtualNetworkId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("objectType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IaasVMRestoreRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IaasVMRestoreRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IaasVMRestoreRequest is not found in the empty JSON string", IaasVMRestoreRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IaasVMRestoreRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IaasVMRestoreRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IaasVMRestoreRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IaasVMRestoreRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IaasVMRestoreRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IaasVMRestoreRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<IaasVMRestoreRequest>() {
           @Override
           public void write(JsonWriter out, IaasVMRestoreRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IaasVMRestoreRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IaasVMRestoreRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IaasVMRestoreRequest
   * @throws IOException if the JSON string is invalid with respect to IaasVMRestoreRequest
   */
  public static IaasVMRestoreRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IaasVMRestoreRequest.class);
  }

  /**
   * Convert an instance of IaasVMRestoreRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

