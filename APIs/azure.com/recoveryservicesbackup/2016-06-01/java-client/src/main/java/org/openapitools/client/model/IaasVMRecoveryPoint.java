/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.KeyAndSecretDetails;
import org.openapitools.client.model.RecoveryPoint;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Azure VM (also known as IaaS VM) workload-specific backup copy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:23:21.567091-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IaasVMRecoveryPoint extends RecoveryPoint {
  public static final String SERIALIZED_NAME_IS_INSTANT_I_L_R_SESSION_ACTIVE = "isInstantILRSessionActive";
  @SerializedName(SERIALIZED_NAME_IS_INSTANT_I_L_R_SESSION_ACTIVE)
  private Boolean isInstantILRSessionActive;

  public static final String SERIALIZED_NAME_IS_SOURCE_V_M_ENCRYPTED = "isSourceVMEncrypted";
  @SerializedName(SERIALIZED_NAME_IS_SOURCE_V_M_ENCRYPTED)
  private Boolean isSourceVMEncrypted;

  public static final String SERIALIZED_NAME_KEY_AND_SECRET = "keyAndSecret";
  @SerializedName(SERIALIZED_NAME_KEY_AND_SECRET)
  private KeyAndSecretDetails keyAndSecret;

  public static final String SERIALIZED_NAME_RECOVERY_POINT_ADDITIONAL_INFO = "recoveryPointAdditionalInfo";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_ADDITIONAL_INFO)
  private String recoveryPointAdditionalInfo;

  public static final String SERIALIZED_NAME_RECOVERY_POINT_TIME = "recoveryPointTime";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_TIME)
  private OffsetDateTime recoveryPointTime;

  public static final String SERIALIZED_NAME_RECOVERY_POINT_TYPE = "recoveryPointType";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_TYPE)
  private String recoveryPointType;

  public static final String SERIALIZED_NAME_SOURCE_V_M_STORAGE_TYPE = "sourceVMStorageType";
  @SerializedName(SERIALIZED_NAME_SOURCE_V_M_STORAGE_TYPE)
  private String sourceVMStorageType;

  public IaasVMRecoveryPoint() {
    this.objectType = this.getClass().getSimpleName();
  }

  public IaasVMRecoveryPoint isInstantILRSessionActive(Boolean isInstantILRSessionActive) {
    this.isInstantILRSessionActive = isInstantILRSessionActive;
    return this;
  }

  /**
   * Answer to the question - Is the session to recover items from this backup copy still active.
   * @return isInstantILRSessionActive
   */
  @javax.annotation.Nullable
  public Boolean getIsInstantILRSessionActive() {
    return isInstantILRSessionActive;
  }

  public void setIsInstantILRSessionActive(Boolean isInstantILRSessionActive) {
    this.isInstantILRSessionActive = isInstantILRSessionActive;
  }


  public IaasVMRecoveryPoint isSourceVMEncrypted(Boolean isSourceVMEncrypted) {
    this.isSourceVMEncrypted = isSourceVMEncrypted;
    return this;
  }

  /**
   * Identifies whether the VM was encrypted when the backup copy is created.
   * @return isSourceVMEncrypted
   */
  @javax.annotation.Nullable
  public Boolean getIsSourceVMEncrypted() {
    return isSourceVMEncrypted;
  }

  public void setIsSourceVMEncrypted(Boolean isSourceVMEncrypted) {
    this.isSourceVMEncrypted = isSourceVMEncrypted;
  }


  public IaasVMRecoveryPoint keyAndSecret(KeyAndSecretDetails keyAndSecret) {
    this.keyAndSecret = keyAndSecret;
    return this;
  }

  /**
   * Get keyAndSecret
   * @return keyAndSecret
   */
  @javax.annotation.Nullable
  public KeyAndSecretDetails getKeyAndSecret() {
    return keyAndSecret;
  }

  public void setKeyAndSecret(KeyAndSecretDetails keyAndSecret) {
    this.keyAndSecret = keyAndSecret;
  }


  public IaasVMRecoveryPoint recoveryPointAdditionalInfo(String recoveryPointAdditionalInfo) {
    this.recoveryPointAdditionalInfo = recoveryPointAdditionalInfo;
    return this;
  }

  /**
   * Additional information associated with this backup copy.
   * @return recoveryPointAdditionalInfo
   */
  @javax.annotation.Nullable
  public String getRecoveryPointAdditionalInfo() {
    return recoveryPointAdditionalInfo;
  }

  public void setRecoveryPointAdditionalInfo(String recoveryPointAdditionalInfo) {
    this.recoveryPointAdditionalInfo = recoveryPointAdditionalInfo;
  }


  public IaasVMRecoveryPoint recoveryPointTime(OffsetDateTime recoveryPointTime) {
    this.recoveryPointTime = recoveryPointTime;
    return this;
  }

  /**
   * The date and time when the backup copy was created.
   * @return recoveryPointTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getRecoveryPointTime() {
    return recoveryPointTime;
  }

  public void setRecoveryPointTime(OffsetDateTime recoveryPointTime) {
    this.recoveryPointTime = recoveryPointTime;
  }


  public IaasVMRecoveryPoint recoveryPointType(String recoveryPointType) {
    this.recoveryPointType = recoveryPointType;
    return this;
  }

  /**
   * Type of the backup copy.
   * @return recoveryPointType
   */
  @javax.annotation.Nullable
  public String getRecoveryPointType() {
    return recoveryPointType;
  }

  public void setRecoveryPointType(String recoveryPointType) {
    this.recoveryPointType = recoveryPointType;
  }


  public IaasVMRecoveryPoint sourceVMStorageType(String sourceVMStorageType) {
    this.sourceVMStorageType = sourceVMStorageType;
    return this;
  }

  /**
   * The storage type for the VM whose backup copy was created.
   * @return sourceVMStorageType
   */
  @javax.annotation.Nullable
  public String getSourceVMStorageType() {
    return sourceVMStorageType;
  }

  public void setSourceVMStorageType(String sourceVMStorageType) {
    this.sourceVMStorageType = sourceVMStorageType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IaasVMRecoveryPoint iaasVMRecoveryPoint = (IaasVMRecoveryPoint) o;
    return Objects.equals(this.isInstantILRSessionActive, iaasVMRecoveryPoint.isInstantILRSessionActive) &&
        Objects.equals(this.isSourceVMEncrypted, iaasVMRecoveryPoint.isSourceVMEncrypted) &&
        Objects.equals(this.keyAndSecret, iaasVMRecoveryPoint.keyAndSecret) &&
        Objects.equals(this.recoveryPointAdditionalInfo, iaasVMRecoveryPoint.recoveryPointAdditionalInfo) &&
        Objects.equals(this.recoveryPointTime, iaasVMRecoveryPoint.recoveryPointTime) &&
        Objects.equals(this.recoveryPointType, iaasVMRecoveryPoint.recoveryPointType) &&
        Objects.equals(this.sourceVMStorageType, iaasVMRecoveryPoint.sourceVMStorageType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isInstantILRSessionActive, isSourceVMEncrypted, keyAndSecret, recoveryPointAdditionalInfo, recoveryPointTime, recoveryPointType, sourceVMStorageType, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IaasVMRecoveryPoint {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    isInstantILRSessionActive: ").append(toIndentedString(isInstantILRSessionActive)).append("\n");
    sb.append("    isSourceVMEncrypted: ").append(toIndentedString(isSourceVMEncrypted)).append("\n");
    sb.append("    keyAndSecret: ").append(toIndentedString(keyAndSecret)).append("\n");
    sb.append("    recoveryPointAdditionalInfo: ").append(toIndentedString(recoveryPointAdditionalInfo)).append("\n");
    sb.append("    recoveryPointTime: ").append(toIndentedString(recoveryPointTime)).append("\n");
    sb.append("    recoveryPointType: ").append(toIndentedString(recoveryPointType)).append("\n");
    sb.append("    sourceVMStorageType: ").append(toIndentedString(sourceVMStorageType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("objectType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IaasVMRecoveryPoint
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IaasVMRecoveryPoint.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IaasVMRecoveryPoint is not found in the empty JSON string", IaasVMRecoveryPoint.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IaasVMRecoveryPoint.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IaasVMRecoveryPoint` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IaasVMRecoveryPoint.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IaasVMRecoveryPoint' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IaasVMRecoveryPoint> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IaasVMRecoveryPoint.class));

       return (TypeAdapter<T>) new TypeAdapter<IaasVMRecoveryPoint>() {
           @Override
           public void write(JsonWriter out, IaasVMRecoveryPoint value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IaasVMRecoveryPoint read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IaasVMRecoveryPoint given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IaasVMRecoveryPoint
   * @throws IOException if the JSON string is invalid with respect to IaasVMRecoveryPoint
   */
  public static IaasVMRecoveryPoint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IaasVMRecoveryPoint.class);
  }

  /**
   * Convert an instance of IaasVMRecoveryPoint to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

