# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PolicyMetadataProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, requirements: str=None, additional_content_url: str=None, category: str=None, metadata: object=None, metadata_id: str=None, owner: str=None, title: str=None):
        """PolicyMetadataProperties - a model defined in OpenAPI

        :param description: The description of this PolicyMetadataProperties.
        :param requirements: The requirements of this PolicyMetadataProperties.
        :param additional_content_url: The additional_content_url of this PolicyMetadataProperties.
        :param category: The category of this PolicyMetadataProperties.
        :param metadata: The metadata of this PolicyMetadataProperties.
        :param metadata_id: The metadata_id of this PolicyMetadataProperties.
        :param owner: The owner of this PolicyMetadataProperties.
        :param title: The title of this PolicyMetadataProperties.
        """
        self.openapi_types = {
            'description': str,
            'requirements': str,
            'additional_content_url': str,
            'category': str,
            'metadata': object,
            'metadata_id': str,
            'owner': str,
            'title': str
        }

        self.attribute_map = {
            'description': 'description',
            'requirements': 'requirements',
            'additional_content_url': 'additionalContentUrl',
            'category': 'category',
            'metadata': 'metadata',
            'metadata_id': 'metadataId',
            'owner': 'owner',
            'title': 'title'
        }

        self._description = description
        self._requirements = requirements
        self._additional_content_url = additional_content_url
        self._category = category
        self._metadata = metadata
        self._metadata_id = metadata_id
        self._owner = owner
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyMetadataProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicyMetadataProperties of this PolicyMetadataProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this PolicyMetadataProperties.

        The description of the policy metadata.

        :return: The description of this PolicyMetadataProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PolicyMetadataProperties.

        The description of the policy metadata.

        :param description: The description of this PolicyMetadataProperties.
        :type description: str
        """

        self._description = description

    @property
    def requirements(self):
        """Gets the requirements of this PolicyMetadataProperties.

        The requirements of the policy metadata.

        :return: The requirements of this PolicyMetadataProperties.
        :rtype: str
        """
        return self._requirements

    @requirements.setter
    def requirements(self, requirements):
        """Sets the requirements of this PolicyMetadataProperties.

        The requirements of the policy metadata.

        :param requirements: The requirements of this PolicyMetadataProperties.
        :type requirements: str
        """

        self._requirements = requirements

    @property
    def additional_content_url(self):
        """Gets the additional_content_url of this PolicyMetadataProperties.

        Url for getting additional content about the resource metadata.

        :return: The additional_content_url of this PolicyMetadataProperties.
        :rtype: str
        """
        return self._additional_content_url

    @additional_content_url.setter
    def additional_content_url(self, additional_content_url):
        """Sets the additional_content_url of this PolicyMetadataProperties.

        Url for getting additional content about the resource metadata.

        :param additional_content_url: The additional_content_url of this PolicyMetadataProperties.
        :type additional_content_url: str
        """

        self._additional_content_url = additional_content_url

    @property
    def category(self):
        """Gets the category of this PolicyMetadataProperties.

        The category of the policy metadata.

        :return: The category of this PolicyMetadataProperties.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this PolicyMetadataProperties.

        The category of the policy metadata.

        :param category: The category of this PolicyMetadataProperties.
        :type category: str
        """

        self._category = category

    @property
    def metadata(self):
        """Gets the metadata of this PolicyMetadataProperties.

        Additional metadata.

        :return: The metadata of this PolicyMetadataProperties.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this PolicyMetadataProperties.

        Additional metadata.

        :param metadata: The metadata of this PolicyMetadataProperties.
        :type metadata: object
        """

        self._metadata = metadata

    @property
    def metadata_id(self):
        """Gets the metadata_id of this PolicyMetadataProperties.

        The policy metadata identifier.

        :return: The metadata_id of this PolicyMetadataProperties.
        :rtype: str
        """
        return self._metadata_id

    @metadata_id.setter
    def metadata_id(self, metadata_id):
        """Sets the metadata_id of this PolicyMetadataProperties.

        The policy metadata identifier.

        :param metadata_id: The metadata_id of this PolicyMetadataProperties.
        :type metadata_id: str
        """

        self._metadata_id = metadata_id

    @property
    def owner(self):
        """Gets the owner of this PolicyMetadataProperties.

        The owner of the policy metadata.

        :return: The owner of this PolicyMetadataProperties.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this PolicyMetadataProperties.

        The owner of the policy metadata.

        :param owner: The owner of this PolicyMetadataProperties.
        :type owner: str
        """

        self._owner = owner

    @property
    def title(self):
        """Gets the title of this PolicyMetadataProperties.

        The title of the policy metadata.

        :return: The title of this PolicyMetadataProperties.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PolicyMetadataProperties.

        The title of the policy metadata.

        :param title: The title of this PolicyMetadataProperties.
        :type title: str
        """

        self._title = title
