# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_confidence_reason import AlertConfidenceReason
from openapi_server.models.alert_entity import AlertEntity
from openapi_server import util


class AlertProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_taken: str=None, alert_display_name: str=None, alert_name: str=None, associated_resource: str=None, can_be_investigated: bool=None, compromised_entity: str=None, confidence_reasons: List[AlertConfidenceReason]=None, confidence_score: float=None, correlation_key: str=None, description: str=None, detected_time_utc: datetime=None, entities: List[AlertEntity]=None, extended_properties: Dict[str, object]=None, instance_id: str=None, is_incident: bool=None, remediation_steps: str=None, reported_severity: str=None, reported_time_utc: datetime=None, state: str=None, subscription_id: str=None, system_source: str=None, vendor_name: str=None, workspace_arm_id: str=None):
        """AlertProperties - a model defined in OpenAPI

        :param action_taken: The action_taken of this AlertProperties.
        :param alert_display_name: The alert_display_name of this AlertProperties.
        :param alert_name: The alert_name of this AlertProperties.
        :param associated_resource: The associated_resource of this AlertProperties.
        :param can_be_investigated: The can_be_investigated of this AlertProperties.
        :param compromised_entity: The compromised_entity of this AlertProperties.
        :param confidence_reasons: The confidence_reasons of this AlertProperties.
        :param confidence_score: The confidence_score of this AlertProperties.
        :param correlation_key: The correlation_key of this AlertProperties.
        :param description: The description of this AlertProperties.
        :param detected_time_utc: The detected_time_utc of this AlertProperties.
        :param entities: The entities of this AlertProperties.
        :param extended_properties: The extended_properties of this AlertProperties.
        :param instance_id: The instance_id of this AlertProperties.
        :param is_incident: The is_incident of this AlertProperties.
        :param remediation_steps: The remediation_steps of this AlertProperties.
        :param reported_severity: The reported_severity of this AlertProperties.
        :param reported_time_utc: The reported_time_utc of this AlertProperties.
        :param state: The state of this AlertProperties.
        :param subscription_id: The subscription_id of this AlertProperties.
        :param system_source: The system_source of this AlertProperties.
        :param vendor_name: The vendor_name of this AlertProperties.
        :param workspace_arm_id: The workspace_arm_id of this AlertProperties.
        """
        self.openapi_types = {
            'action_taken': str,
            'alert_display_name': str,
            'alert_name': str,
            'associated_resource': str,
            'can_be_investigated': bool,
            'compromised_entity': str,
            'confidence_reasons': List[AlertConfidenceReason],
            'confidence_score': float,
            'correlation_key': str,
            'description': str,
            'detected_time_utc': datetime,
            'entities': List[AlertEntity],
            'extended_properties': Dict[str, object],
            'instance_id': str,
            'is_incident': bool,
            'remediation_steps': str,
            'reported_severity': str,
            'reported_time_utc': datetime,
            'state': str,
            'subscription_id': str,
            'system_source': str,
            'vendor_name': str,
            'workspace_arm_id': str
        }

        self.attribute_map = {
            'action_taken': 'actionTaken',
            'alert_display_name': 'alertDisplayName',
            'alert_name': 'alertName',
            'associated_resource': 'associatedResource',
            'can_be_investigated': 'canBeInvestigated',
            'compromised_entity': 'compromisedEntity',
            'confidence_reasons': 'confidenceReasons',
            'confidence_score': 'confidenceScore',
            'correlation_key': 'correlationKey',
            'description': 'description',
            'detected_time_utc': 'detectedTimeUtc',
            'entities': 'entities',
            'extended_properties': 'extendedProperties',
            'instance_id': 'instanceId',
            'is_incident': 'isIncident',
            'remediation_steps': 'remediationSteps',
            'reported_severity': 'reportedSeverity',
            'reported_time_utc': 'reportedTimeUtc',
            'state': 'state',
            'subscription_id': 'subscriptionId',
            'system_source': 'systemSource',
            'vendor_name': 'vendorName',
            'workspace_arm_id': 'workspaceArmId'
        }

        self._action_taken = action_taken
        self._alert_display_name = alert_display_name
        self._alert_name = alert_name
        self._associated_resource = associated_resource
        self._can_be_investigated = can_be_investigated
        self._compromised_entity = compromised_entity
        self._confidence_reasons = confidence_reasons
        self._confidence_score = confidence_score
        self._correlation_key = correlation_key
        self._description = description
        self._detected_time_utc = detected_time_utc
        self._entities = entities
        self._extended_properties = extended_properties
        self._instance_id = instance_id
        self._is_incident = is_incident
        self._remediation_steps = remediation_steps
        self._reported_severity = reported_severity
        self._reported_time_utc = reported_time_utc
        self._state = state
        self._subscription_id = subscription_id
        self._system_source = system_source
        self._vendor_name = vendor_name
        self._workspace_arm_id = workspace_arm_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertProperties of this AlertProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_taken(self):
        """Gets the action_taken of this AlertProperties.

        The action that was taken as a response to the alert (Active, Blocked etc.)

        :return: The action_taken of this AlertProperties.
        :rtype: str
        """
        return self._action_taken

    @action_taken.setter
    def action_taken(self, action_taken):
        """Sets the action_taken of this AlertProperties.

        The action that was taken as a response to the alert (Active, Blocked etc.)

        :param action_taken: The action_taken of this AlertProperties.
        :type action_taken: str
        """

        self._action_taken = action_taken

    @property
    def alert_display_name(self):
        """Gets the alert_display_name of this AlertProperties.

        Display name of the alert type

        :return: The alert_display_name of this AlertProperties.
        :rtype: str
        """
        return self._alert_display_name

    @alert_display_name.setter
    def alert_display_name(self, alert_display_name):
        """Sets the alert_display_name of this AlertProperties.

        Display name of the alert type

        :param alert_display_name: The alert_display_name of this AlertProperties.
        :type alert_display_name: str
        """

        self._alert_display_name = alert_display_name

    @property
    def alert_name(self):
        """Gets the alert_name of this AlertProperties.

        Name of the alert type

        :return: The alert_name of this AlertProperties.
        :rtype: str
        """
        return self._alert_name

    @alert_name.setter
    def alert_name(self, alert_name):
        """Sets the alert_name of this AlertProperties.

        Name of the alert type

        :param alert_name: The alert_name of this AlertProperties.
        :type alert_name: str
        """

        self._alert_name = alert_name

    @property
    def associated_resource(self):
        """Gets the associated_resource of this AlertProperties.

        Azure resource ID of the associated resource

        :return: The associated_resource of this AlertProperties.
        :rtype: str
        """
        return self._associated_resource

    @associated_resource.setter
    def associated_resource(self, associated_resource):
        """Sets the associated_resource of this AlertProperties.

        Azure resource ID of the associated resource

        :param associated_resource: The associated_resource of this AlertProperties.
        :type associated_resource: str
        """

        self._associated_resource = associated_resource

    @property
    def can_be_investigated(self):
        """Gets the can_be_investigated of this AlertProperties.

        Whether this alert can be investigated with Azure Security Center

        :return: The can_be_investigated of this AlertProperties.
        :rtype: bool
        """
        return self._can_be_investigated

    @can_be_investigated.setter
    def can_be_investigated(self, can_be_investigated):
        """Sets the can_be_investigated of this AlertProperties.

        Whether this alert can be investigated with Azure Security Center

        :param can_be_investigated: The can_be_investigated of this AlertProperties.
        :type can_be_investigated: bool
        """

        self._can_be_investigated = can_be_investigated

    @property
    def compromised_entity(self):
        """Gets the compromised_entity of this AlertProperties.

        The entity that the incident happened on

        :return: The compromised_entity of this AlertProperties.
        :rtype: str
        """
        return self._compromised_entity

    @compromised_entity.setter
    def compromised_entity(self, compromised_entity):
        """Sets the compromised_entity of this AlertProperties.

        The entity that the incident happened on

        :param compromised_entity: The compromised_entity of this AlertProperties.
        :type compromised_entity: str
        """

        self._compromised_entity = compromised_entity

    @property
    def confidence_reasons(self):
        """Gets the confidence_reasons of this AlertProperties.

        reasons the alert got the confidenceScore value

        :return: The confidence_reasons of this AlertProperties.
        :rtype: List[AlertConfidenceReason]
        """
        return self._confidence_reasons

    @confidence_reasons.setter
    def confidence_reasons(self, confidence_reasons):
        """Sets the confidence_reasons of this AlertProperties.

        reasons the alert got the confidenceScore value

        :param confidence_reasons: The confidence_reasons of this AlertProperties.
        :type confidence_reasons: List[AlertConfidenceReason]
        """

        self._confidence_reasons = confidence_reasons

    @property
    def confidence_score(self):
        """Gets the confidence_score of this AlertProperties.

        level of confidence we have on the alert

        :return: The confidence_score of this AlertProperties.
        :rtype: float
        """
        return self._confidence_score

    @confidence_score.setter
    def confidence_score(self, confidence_score):
        """Sets the confidence_score of this AlertProperties.

        level of confidence we have on the alert

        :param confidence_score: The confidence_score of this AlertProperties.
        :type confidence_score: float
        """
        if confidence_score is not None and confidence_score > 1:
            raise ValueError("Invalid value for `confidence_score`, must be a value less than or equal to `1`")
        if confidence_score is not None and confidence_score < 0:
            raise ValueError("Invalid value for `confidence_score`, must be a value greater than or equal to `0`")

        self._confidence_score = confidence_score

    @property
    def correlation_key(self):
        """Gets the correlation_key of this AlertProperties.

        Alerts with the same CorrelationKey will be grouped together in Ibiza.

        :return: The correlation_key of this AlertProperties.
        :rtype: str
        """
        return self._correlation_key

    @correlation_key.setter
    def correlation_key(self, correlation_key):
        """Sets the correlation_key of this AlertProperties.

        Alerts with the same CorrelationKey will be grouped together in Ibiza.

        :param correlation_key: The correlation_key of this AlertProperties.
        :type correlation_key: str
        """

        self._correlation_key = correlation_key

    @property
    def description(self):
        """Gets the description of this AlertProperties.

        Description of the incident and what it means

        :return: The description of this AlertProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AlertProperties.

        Description of the incident and what it means

        :param description: The description of this AlertProperties.
        :type description: str
        """

        self._description = description

    @property
    def detected_time_utc(self):
        """Gets the detected_time_utc of this AlertProperties.

        The time the incident was detected by the vendor

        :return: The detected_time_utc of this AlertProperties.
        :rtype: datetime
        """
        return self._detected_time_utc

    @detected_time_utc.setter
    def detected_time_utc(self, detected_time_utc):
        """Sets the detected_time_utc of this AlertProperties.

        The time the incident was detected by the vendor

        :param detected_time_utc: The detected_time_utc of this AlertProperties.
        :type detected_time_utc: datetime
        """

        self._detected_time_utc = detected_time_utc

    @property
    def entities(self):
        """Gets the entities of this AlertProperties.

        objects that are related to this alerts

        :return: The entities of this AlertProperties.
        :rtype: List[AlertEntity]
        """
        return self._entities

    @entities.setter
    def entities(self, entities):
        """Sets the entities of this AlertProperties.

        objects that are related to this alerts

        :param entities: The entities of this AlertProperties.
        :type entities: List[AlertEntity]
        """

        self._entities = entities

    @property
    def extended_properties(self):
        """Gets the extended_properties of this AlertProperties.

        Changing set of properties depending on the alert type.

        :return: The extended_properties of this AlertProperties.
        :rtype: Dict[str, object]
        """
        return self._extended_properties

    @extended_properties.setter
    def extended_properties(self, extended_properties):
        """Sets the extended_properties of this AlertProperties.

        Changing set of properties depending on the alert type.

        :param extended_properties: The extended_properties of this AlertProperties.
        :type extended_properties: Dict[str, object]
        """

        self._extended_properties = extended_properties

    @property
    def instance_id(self):
        """Gets the instance_id of this AlertProperties.

        Instance ID of the alert.

        :return: The instance_id of this AlertProperties.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this AlertProperties.

        Instance ID of the alert.

        :param instance_id: The instance_id of this AlertProperties.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def is_incident(self):
        """Gets the is_incident of this AlertProperties.

        Whether this alert is for incident type or not (otherwise - single alert)

        :return: The is_incident of this AlertProperties.
        :rtype: bool
        """
        return self._is_incident

    @is_incident.setter
    def is_incident(self, is_incident):
        """Sets the is_incident of this AlertProperties.

        Whether this alert is for incident type or not (otherwise - single alert)

        :param is_incident: The is_incident of this AlertProperties.
        :type is_incident: bool
        """

        self._is_incident = is_incident

    @property
    def remediation_steps(self):
        """Gets the remediation_steps of this AlertProperties.

        Recommended steps to reradiate the incident

        :return: The remediation_steps of this AlertProperties.
        :rtype: str
        """
        return self._remediation_steps

    @remediation_steps.setter
    def remediation_steps(self, remediation_steps):
        """Sets the remediation_steps of this AlertProperties.

        Recommended steps to reradiate the incident

        :param remediation_steps: The remediation_steps of this AlertProperties.
        :type remediation_steps: str
        """

        self._remediation_steps = remediation_steps

    @property
    def reported_severity(self):
        """Gets the reported_severity of this AlertProperties.

        Estimated severity of this alert

        :return: The reported_severity of this AlertProperties.
        :rtype: str
        """
        return self._reported_severity

    @reported_severity.setter
    def reported_severity(self, reported_severity):
        """Sets the reported_severity of this AlertProperties.

        Estimated severity of this alert

        :param reported_severity: The reported_severity of this AlertProperties.
        :type reported_severity: str
        """
        allowed_values = ["Informational", "Low", "Medium", "High"]  # noqa: E501
        if reported_severity not in allowed_values:
            raise ValueError(
                "Invalid value for `reported_severity` ({0}), must be one of {1}"
                .format(reported_severity, allowed_values)
            )

        self._reported_severity = reported_severity

    @property
    def reported_time_utc(self):
        """Gets the reported_time_utc of this AlertProperties.

        The time the incident was reported to Microsoft.Security in UTC

        :return: The reported_time_utc of this AlertProperties.
        :rtype: datetime
        """
        return self._reported_time_utc

    @reported_time_utc.setter
    def reported_time_utc(self, reported_time_utc):
        """Sets the reported_time_utc of this AlertProperties.

        The time the incident was reported to Microsoft.Security in UTC

        :param reported_time_utc: The reported_time_utc of this AlertProperties.
        :type reported_time_utc: datetime
        """

        self._reported_time_utc = reported_time_utc

    @property
    def state(self):
        """Gets the state of this AlertProperties.

        State of the alert (Active, Dismissed etc.)

        :return: The state of this AlertProperties.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this AlertProperties.

        State of the alert (Active, Dismissed etc.)

        :param state: The state of this AlertProperties.
        :type state: str
        """

        self._state = state

    @property
    def subscription_id(self):
        """Gets the subscription_id of this AlertProperties.

        Azure subscription ID of the resource that had the security alert or the subscription ID of the workspace that this resource reports to

        :return: The subscription_id of this AlertProperties.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this AlertProperties.

        Azure subscription ID of the resource that had the security alert or the subscription ID of the workspace that this resource reports to

        :param subscription_id: The subscription_id of this AlertProperties.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def system_source(self):
        """Gets the system_source of this AlertProperties.

        The type of the alerted resource (Azure, Non-Azure)

        :return: The system_source of this AlertProperties.
        :rtype: str
        """
        return self._system_source

    @system_source.setter
    def system_source(self, system_source):
        """Sets the system_source of this AlertProperties.

        The type of the alerted resource (Azure, Non-Azure)

        :param system_source: The system_source of this AlertProperties.
        :type system_source: str
        """

        self._system_source = system_source

    @property
    def vendor_name(self):
        """Gets the vendor_name of this AlertProperties.

        Name of the vendor that discovered the incident

        :return: The vendor_name of this AlertProperties.
        :rtype: str
        """
        return self._vendor_name

    @vendor_name.setter
    def vendor_name(self, vendor_name):
        """Sets the vendor_name of this AlertProperties.

        Name of the vendor that discovered the incident

        :param vendor_name: The vendor_name of this AlertProperties.
        :type vendor_name: str
        """

        self._vendor_name = vendor_name

    @property
    def workspace_arm_id(self):
        """Gets the workspace_arm_id of this AlertProperties.

        Azure resource ID of the workspace that the alert was reported to.

        :return: The workspace_arm_id of this AlertProperties.
        :rtype: str
        """
        return self._workspace_arm_id

    @workspace_arm_id.setter
    def workspace_arm_id(self, workspace_arm_id):
        """Sets the workspace_arm_id of this AlertProperties.

        Azure resource ID of the workspace that the alert was reported to.

        :param workspace_arm_id: The workspace_arm_id of this AlertProperties.
        :type workspace_arm_id: str
        """

        self._workspace_arm_id = workspace_arm_id
