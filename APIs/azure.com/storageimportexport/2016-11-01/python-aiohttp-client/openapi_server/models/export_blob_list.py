# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExportBlobList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob_path: List[str]=None, blob_path_prefix: List[str]=None):
        """ExportBlobList - a model defined in OpenAPI

        :param blob_path: The blob_path of this ExportBlobList.
        :param blob_path_prefix: The blob_path_prefix of this ExportBlobList.
        """
        self.openapi_types = {
            'blob_path': List[str],
            'blob_path_prefix': List[str]
        }

        self.attribute_map = {
            'blob_path': 'blobPath',
            'blob_path_prefix': 'blobPathPrefix'
        }

        self._blob_path = blob_path
        self._blob_path_prefix = blob_path_prefix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportBlobList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Export_blobList of this ExportBlobList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_path(self):
        """Gets the blob_path of this ExportBlobList.

        A collection of blob-path strings.

        :return: The blob_path of this ExportBlobList.
        :rtype: List[str]
        """
        return self._blob_path

    @blob_path.setter
    def blob_path(self, blob_path):
        """Sets the blob_path of this ExportBlobList.

        A collection of blob-path strings.

        :param blob_path: The blob_path of this ExportBlobList.
        :type blob_path: List[str]
        """

        self._blob_path = blob_path

    @property
    def blob_path_prefix(self):
        """Gets the blob_path_prefix of this ExportBlobList.

        A collection of blob-prefix strings.

        :return: The blob_path_prefix of this ExportBlobList.
        :rtype: List[str]
        """
        return self._blob_path_prefix

    @blob_path_prefix.setter
    def blob_path_prefix(self, blob_path_prefix):
        """Sets the blob_path_prefix of this ExportBlobList.

        A collection of blob-prefix strings.

        :param blob_path_prefix: The blob_path_prefix of this ExportBlobList.
        :type blob_path_prefix: List[str]
        """

        self._blob_path_prefix = blob_path_prefix
