/**
 * StorageImportExport
 * The Storage Import/Export Resource Provider API.
 *
 * The version of the OpenAPI document: 2016-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DriveStatus from './DriveStatus';
import PackageInfomation from './PackageInfomation';
import ReturnAddress from './ReturnAddress';
import ReturnShipping from './ReturnShipping';

/**
 * The UpdateJobParametersProperties model module.
 * @module model/UpdateJobParametersProperties
 * @version 2016-11-01
 */
class UpdateJobParametersProperties {
    /**
     * Constructs a new <code>UpdateJobParametersProperties</code>.
     * Specifies the properties of a UpdateJob.
     * @alias module:model/UpdateJobParametersProperties
     */
    constructor() { 
        
        UpdateJobParametersProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateJobParametersProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateJobParametersProperties} obj Optional instance to populate.
     * @return {module:model/UpdateJobParametersProperties} The populated <code>UpdateJobParametersProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateJobParametersProperties();

            if (data.hasOwnProperty('backupDriveManifest')) {
                obj['backupDriveManifest'] = ApiClient.convertToType(data['backupDriveManifest'], 'Boolean');
            }
            if (data.hasOwnProperty('cancelRequested')) {
                obj['cancelRequested'] = ApiClient.convertToType(data['cancelRequested'], 'Boolean');
            }
            if (data.hasOwnProperty('deliveryPackage')) {
                obj['deliveryPackage'] = PackageInfomation.constructFromObject(data['deliveryPackage']);
            }
            if (data.hasOwnProperty('driveList')) {
                obj['driveList'] = ApiClient.convertToType(data['driveList'], [DriveStatus]);
            }
            if (data.hasOwnProperty('logLevel')) {
                obj['logLevel'] = ApiClient.convertToType(data['logLevel'], 'String');
            }
            if (data.hasOwnProperty('returnAddress')) {
                obj['returnAddress'] = ReturnAddress.constructFromObject(data['returnAddress']);
            }
            if (data.hasOwnProperty('returnShipping')) {
                obj['returnShipping'] = ReturnShipping.constructFromObject(data['returnShipping']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateJobParametersProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateJobParametersProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `deliveryPackage`
        if (data['deliveryPackage']) { // data not null
          PackageInfomation.validateJSON(data['deliveryPackage']);
        }
        if (data['driveList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['driveList'])) {
                throw new Error("Expected the field `driveList` to be an array in the JSON data but got " + data['driveList']);
            }
            // validate the optional field `driveList` (array)
            for (const item of data['driveList']) {
                DriveStatus.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['logLevel'] && !(typeof data['logLevel'] === 'string' || data['logLevel'] instanceof String)) {
            throw new Error("Expected the field `logLevel` to be a primitive type in the JSON string but got " + data['logLevel']);
        }
        // validate the optional field `returnAddress`
        if (data['returnAddress']) { // data not null
          ReturnAddress.validateJSON(data['returnAddress']);
        }
        // validate the optional field `returnShipping`
        if (data['returnShipping']) { // data not null
          ReturnShipping.validateJSON(data['returnShipping']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * Indicates whether the manifest files on the drives should be copied to block blobs.
 * @member {Boolean} backupDriveManifest
 */
UpdateJobParametersProperties.prototype['backupDriveManifest'] = undefined;

/**
 * If specified, the value must be true. The service will attempt to cancel the job. 
 * @member {Boolean} cancelRequested
 */
UpdateJobParametersProperties.prototype['cancelRequested'] = undefined;

/**
 * @member {module:model/PackageInfomation} deliveryPackage
 */
UpdateJobParametersProperties.prototype['deliveryPackage'] = undefined;

/**
 * List of drives that comprise the job.
 * @member {Array.<module:model/DriveStatus>} driveList
 */
UpdateJobParametersProperties.prototype['driveList'] = undefined;

/**
 * Indicates whether error logging or verbose logging is enabled.
 * @member {String} logLevel
 */
UpdateJobParametersProperties.prototype['logLevel'] = undefined;

/**
 * @member {module:model/ReturnAddress} returnAddress
 */
UpdateJobParametersProperties.prototype['returnAddress'] = undefined;

/**
 * @member {module:model/ReturnShipping} returnShipping
 */
UpdateJobParametersProperties.prototype['returnShipping'] = undefined;

/**
 * If specified, the value must be Shipping, which tells the Import/Export service that the package for the job has been shipped. The ReturnAddress and DeliveryPackage properties must have been set either in this request or in a previous request, otherwise the request will fail. 
 * @member {String} state
 */
UpdateJobParametersProperties.prototype['state'] = undefined;






export default UpdateJobParametersProperties;

