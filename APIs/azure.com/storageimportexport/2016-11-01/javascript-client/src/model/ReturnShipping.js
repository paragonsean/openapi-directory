/**
 * StorageImportExport
 * The Storage Import/Export Resource Provider API.
 *
 * The version of the OpenAPI document: 2016-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReturnShipping model module.
 * @module model/ReturnShipping
 * @version 2016-11-01
 */
class ReturnShipping {
    /**
     * Constructs a new <code>ReturnShipping</code>.
     * Specifies the return carrier and customer&#39;s account with the carrier.
     * @alias module:model/ReturnShipping
     * @param carrierAccountNumber {String} The customer's account number with the carrier.
     * @param carrierName {String} The carrier's name.
     */
    constructor(carrierAccountNumber, carrierName) { 
        
        ReturnShipping.initialize(this, carrierAccountNumber, carrierName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, carrierAccountNumber, carrierName) { 
        obj['carrierAccountNumber'] = carrierAccountNumber;
        obj['carrierName'] = carrierName;
    }

    /**
     * Constructs a <code>ReturnShipping</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReturnShipping} obj Optional instance to populate.
     * @return {module:model/ReturnShipping} The populated <code>ReturnShipping</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReturnShipping();

            if (data.hasOwnProperty('carrierAccountNumber')) {
                obj['carrierAccountNumber'] = ApiClient.convertToType(data['carrierAccountNumber'], 'String');
            }
            if (data.hasOwnProperty('carrierName')) {
                obj['carrierName'] = ApiClient.convertToType(data['carrierName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReturnShipping</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReturnShipping</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReturnShipping.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['carrierAccountNumber'] && !(typeof data['carrierAccountNumber'] === 'string' || data['carrierAccountNumber'] instanceof String)) {
            throw new Error("Expected the field `carrierAccountNumber` to be a primitive type in the JSON string but got " + data['carrierAccountNumber']);
        }
        // ensure the json data is a string
        if (data['carrierName'] && !(typeof data['carrierName'] === 'string' || data['carrierName'] instanceof String)) {
            throw new Error("Expected the field `carrierName` to be a primitive type in the JSON string but got " + data['carrierName']);
        }

        return true;
    }


}

ReturnShipping.RequiredProperties = ["carrierAccountNumber", "carrierName"];

/**
 * The customer's account number with the carrier.
 * @member {String} carrierAccountNumber
 */
ReturnShipping.prototype['carrierAccountNumber'] = undefined;

/**
 * The carrier's name.
 * @member {String} carrierName
 */
ReturnShipping.prototype['carrierName'] = undefined;






export default ReturnShipping;

