/**
 * StorageImportExport
 * The Storage Import/Export Resource Provider API.
 *
 * The version of the OpenAPI document: 2016-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PackageInfomation model module.
 * @module model/PackageInfomation
 * @version 2016-11-01
 */
class PackageInfomation {
    /**
     * Constructs a new <code>PackageInfomation</code>.
     * Contains information about the package being shipped by the customer to the Microsoft data center.
     * @alias module:model/PackageInfomation
     * @param carrierName {String} The name of the carrier that is used to ship the import or export drives.
     * @param driveCount {Number} The number of drives included in the package.
     * @param shipDate {String} The date when the package is shipped.
     * @param trackingNumber {String} The tracking number of the package.
     */
    constructor(carrierName, driveCount, shipDate, trackingNumber) { 
        
        PackageInfomation.initialize(this, carrierName, driveCount, shipDate, trackingNumber);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, carrierName, driveCount, shipDate, trackingNumber) { 
        obj['carrierName'] = carrierName;
        obj['driveCount'] = driveCount;
        obj['shipDate'] = shipDate;
        obj['trackingNumber'] = trackingNumber;
    }

    /**
     * Constructs a <code>PackageInfomation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PackageInfomation} obj Optional instance to populate.
     * @return {module:model/PackageInfomation} The populated <code>PackageInfomation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PackageInfomation();

            if (data.hasOwnProperty('carrierName')) {
                obj['carrierName'] = ApiClient.convertToType(data['carrierName'], 'String');
            }
            if (data.hasOwnProperty('driveCount')) {
                obj['driveCount'] = ApiClient.convertToType(data['driveCount'], 'Number');
            }
            if (data.hasOwnProperty('shipDate')) {
                obj['shipDate'] = ApiClient.convertToType(data['shipDate'], 'String');
            }
            if (data.hasOwnProperty('trackingNumber')) {
                obj['trackingNumber'] = ApiClient.convertToType(data['trackingNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PackageInfomation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PackageInfomation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PackageInfomation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['carrierName'] && !(typeof data['carrierName'] === 'string' || data['carrierName'] instanceof String)) {
            throw new Error("Expected the field `carrierName` to be a primitive type in the JSON string but got " + data['carrierName']);
        }
        // ensure the json data is a string
        if (data['shipDate'] && !(typeof data['shipDate'] === 'string' || data['shipDate'] instanceof String)) {
            throw new Error("Expected the field `shipDate` to be a primitive type in the JSON string but got " + data['shipDate']);
        }
        // ensure the json data is a string
        if (data['trackingNumber'] && !(typeof data['trackingNumber'] === 'string' || data['trackingNumber'] instanceof String)) {
            throw new Error("Expected the field `trackingNumber` to be a primitive type in the JSON string but got " + data['trackingNumber']);
        }

        return true;
    }


}

PackageInfomation.RequiredProperties = ["carrierName", "driveCount", "shipDate", "trackingNumber"];

/**
 * The name of the carrier that is used to ship the import or export drives.
 * @member {String} carrierName
 */
PackageInfomation.prototype['carrierName'] = undefined;

/**
 * The number of drives included in the package.
 * @member {Number} driveCount
 */
PackageInfomation.prototype['driveCount'] = undefined;

/**
 * The date when the package is shipped.
 * @member {String} shipDate
 */
PackageInfomation.prototype['shipDate'] = undefined;

/**
 * The tracking number of the package.
 * @member {String} trackingNumber
 */
PackageInfomation.prototype['trackingNumber'] = undefined;






export default PackageInfomation;

