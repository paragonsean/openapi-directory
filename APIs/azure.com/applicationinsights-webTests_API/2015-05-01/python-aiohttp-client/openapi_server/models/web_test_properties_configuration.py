# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebTestPropertiesConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, web_test: str=None):
        """WebTestPropertiesConfiguration - a model defined in OpenAPI

        :param web_test: The web_test of this WebTestPropertiesConfiguration.
        """
        self.openapi_types = {
            'web_test': str
        }

        self.attribute_map = {
            'web_test': 'WebTest'
        }

        self._web_test = web_test

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebTestPropertiesConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebTestProperties_Configuration of this WebTestPropertiesConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def web_test(self):
        """Gets the web_test of this WebTestPropertiesConfiguration.

        The XML specification of a WebTest to run against an application.

        :return: The web_test of this WebTestPropertiesConfiguration.
        :rtype: str
        """
        return self._web_test

    @web_test.setter
    def web_test(self, web_test):
        """Sets the web_test of this WebTestPropertiesConfiguration.

        The XML specification of a WebTest to run against an application.

        :param web_test: The web_test of this WebTestPropertiesConfiguration.
        :type web_test: str
        """

        self._web_test = web_test
