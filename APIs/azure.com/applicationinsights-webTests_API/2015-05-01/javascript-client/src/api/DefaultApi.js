/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for web test based alerting.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import TagsResource from '../model/TagsResource';
import WebTest from '../model/WebTest';
import WebTestListResult from '../model/WebTestListResult';

/**
* Default service.
* @module api/DefaultApi
* @version 2015-05-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the webTestsCreateOrUpdate operation.
     * @callback module:api/DefaultApi~webTestsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebTest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates an Application Insights web test definition.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} webTestName The name of the Application Insights webtest resource.
     * @param {module:model/WebTest} webTestDefinition Properties that need to be specified to create or update an Application Insights web test definition.
     * @param {module:api/DefaultApi~webTestsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebTest}
     */
    webTestsCreateOrUpdate(resourceGroupName, apiVersion, subscriptionId, webTestName, webTestDefinition, callback) {
      let postBody = webTestDefinition;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling webTestsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling webTestsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling webTestsCreateOrUpdate");
      }
      // verify the required parameter 'webTestName' is set
      if (webTestName === undefined || webTestName === null) {
        throw new Error("Missing the required parameter 'webTestName' when calling webTestsCreateOrUpdate");
      }
      // verify the required parameter 'webTestDefinition' is set
      if (webTestDefinition === undefined || webTestDefinition === null) {
        throw new Error("Missing the required parameter 'webTestDefinition' when calling webTestsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'webTestName': webTestName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WebTest;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/webtests/{webTestName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the webTestsDelete operation.
     * @callback module:api/DefaultApi~webTestsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an Application Insights web test.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} webTestName The name of the Application Insights webtest resource.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:api/DefaultApi~webTestsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    webTestsDelete(subscriptionId, resourceGroupName, webTestName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling webTestsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling webTestsDelete");
      }
      // verify the required parameter 'webTestName' is set
      if (webTestName === undefined || webTestName === null) {
        throw new Error("Missing the required parameter 'webTestName' when calling webTestsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling webTestsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'webTestName': webTestName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/webtests/{webTestName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the webTestsGet operation.
     * @callback module:api/DefaultApi~webTestsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebTest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a specific Application Insights web test definition.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} webTestName The name of the Application Insights webtest resource.
     * @param {module:api/DefaultApi~webTestsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebTest}
     */
    webTestsGet(resourceGroupName, apiVersion, subscriptionId, webTestName, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling webTestsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling webTestsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling webTestsGet");
      }
      // verify the required parameter 'webTestName' is set
      if (webTestName === undefined || webTestName === null) {
        throw new Error("Missing the required parameter 'webTestName' when calling webTestsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'webTestName': webTestName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WebTest;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/webtests/{webTestName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the webTestsList operation.
     * @callback module:api/DefaultApi~webTestsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebTestListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all Application Insights web test alerts definitions within a subscription.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {module:api/DefaultApi~webTestsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebTestListResult}
     */
    webTestsList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling webTestsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling webTestsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WebTestListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Insights/webtests', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the webTestsListByComponent operation.
     * @callback module:api/DefaultApi~webTestsListByComponentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebTestListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all Application Insights web tests defined for the specified component.
     * @param {String} componentName The name of the Application Insights component resource.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {module:api/DefaultApi~webTestsListByComponentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebTestListResult}
     */
    webTestsListByComponent(componentName, resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'componentName' is set
      if (componentName === undefined || componentName === null) {
        throw new Error("Missing the required parameter 'componentName' when calling webTestsListByComponent");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling webTestsListByComponent");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling webTestsListByComponent");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling webTestsListByComponent");
      }

      let pathParams = {
        'componentName': componentName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WebTestListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{componentName}/webtests', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the webTestsListByResourceGroup operation.
     * @callback module:api/DefaultApi~webTestsListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebTestListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all Application Insights web tests defined within a specified resource group.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {module:api/DefaultApi~webTestsListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebTestListResult}
     */
    webTestsListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling webTestsListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling webTestsListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling webTestsListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WebTestListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/webtests', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the webTestsUpdateTags operation.
     * @callback module:api/DefaultApi~webTestsUpdateTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebTest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates an Application Insights web test definition.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} webTestName The name of the Application Insights webtest resource.
     * @param {module:model/TagsResource} webTestTags Updated tag information to set into the web test instance.
     * @param {module:api/DefaultApi~webTestsUpdateTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebTest}
     */
    webTestsUpdateTags(resourceGroupName, apiVersion, subscriptionId, webTestName, webTestTags, callback) {
      let postBody = webTestTags;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling webTestsUpdateTags");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling webTestsUpdateTags");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling webTestsUpdateTags");
      }
      // verify the required parameter 'webTestName' is set
      if (webTestName === undefined || webTestName === null) {
        throw new Error("Missing the required parameter 'webTestName' when calling webTestsUpdateTags");
      }
      // verify the required parameter 'webTestTags' is set
      if (webTestTags === undefined || webTestTags === null) {
        throw new Error("Missing the required parameter 'webTestTags' when calling webTestsUpdateTags");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'webTestName': webTestName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WebTest;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/webtests/{webTestName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
