# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alias_path_type import AliasPathType
from openapi_server import util


class AliasType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, paths: List[AliasPathType]=None):
        """AliasType - a model defined in OpenAPI

        :param name: The name of this AliasType.
        :param paths: The paths of this AliasType.
        """
        self.openapi_types = {
            'name': str,
            'paths': List[AliasPathType]
        }

        self.attribute_map = {
            'name': 'name',
            'paths': 'paths'
        }

        self._name = name
        self._paths = paths

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AliasType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AliasType of this AliasType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this AliasType.

        The alias name.

        :return: The name of this AliasType.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AliasType.

        The alias name.

        :param name: The name of this AliasType.
        :type name: str
        """

        self._name = name

    @property
    def paths(self):
        """Gets the paths of this AliasType.

        The paths for an alias.

        :return: The paths of this AliasType.
        :rtype: List[AliasPathType]
        """
        return self._paths

    @paths.setter
    def paths(self, paths):
        """Sets the paths of this AliasType.

        The paths for an alias.

        :param paths: The paths of this AliasType.
        :type paths: List[AliasPathType]
        """

        self._paths = paths
