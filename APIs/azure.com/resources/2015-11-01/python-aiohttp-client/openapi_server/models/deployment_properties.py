# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parameters_link import ParametersLink
from openapi_server.models.template_link import TemplateLink
from openapi_server import util


class DeploymentProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mode: str=None, parameters: object=None, parameters_link: ParametersLink=None, template: object=None, template_link: TemplateLink=None):
        """DeploymentProperties - a model defined in OpenAPI

        :param mode: The mode of this DeploymentProperties.
        :param parameters: The parameters of this DeploymentProperties.
        :param parameters_link: The parameters_link of this DeploymentProperties.
        :param template: The template of this DeploymentProperties.
        :param template_link: The template_link of this DeploymentProperties.
        """
        self.openapi_types = {
            'mode': str,
            'parameters': object,
            'parameters_link': ParametersLink,
            'template': object,
            'template_link': TemplateLink
        }

        self.attribute_map = {
            'mode': 'mode',
            'parameters': 'parameters',
            'parameters_link': 'parametersLink',
            'template': 'template',
            'template_link': 'templateLink'
        }

        self._mode = mode
        self._parameters = parameters
        self._parameters_link = parameters_link
        self._template = template
        self._template_link = template_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentProperties of this DeploymentProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mode(self):
        """Gets the mode of this DeploymentProperties.

        Gets or sets the deployment mode.

        :return: The mode of this DeploymentProperties.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this DeploymentProperties.

        Gets or sets the deployment mode.

        :param mode: The mode of this DeploymentProperties.
        :type mode: str
        """
        allowed_values = ["Incremental", "Complete"]  # noqa: E501
        if mode not in allowed_values:
            raise ValueError(
                "Invalid value for `mode` ({0}), must be one of {1}"
                .format(mode, allowed_values)
            )

        self._mode = mode

    @property
    def parameters(self):
        """Gets the parameters of this DeploymentProperties.

        Deployment parameters. Use only one of Parameters or ParametersLink.

        :return: The parameters of this DeploymentProperties.
        :rtype: object
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this DeploymentProperties.

        Deployment parameters. Use only one of Parameters or ParametersLink.

        :param parameters: The parameters of this DeploymentProperties.
        :type parameters: object
        """

        self._parameters = parameters

    @property
    def parameters_link(self):
        """Gets the parameters_link of this DeploymentProperties.


        :return: The parameters_link of this DeploymentProperties.
        :rtype: ParametersLink
        """
        return self._parameters_link

    @parameters_link.setter
    def parameters_link(self, parameters_link):
        """Sets the parameters_link of this DeploymentProperties.


        :param parameters_link: The parameters_link of this DeploymentProperties.
        :type parameters_link: ParametersLink
        """

        self._parameters_link = parameters_link

    @property
    def template(self):
        """Gets the template of this DeploymentProperties.

        Gets or sets the template content. Use only one of Template or TemplateLink.

        :return: The template of this DeploymentProperties.
        :rtype: object
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this DeploymentProperties.

        Gets or sets the template content. Use only one of Template or TemplateLink.

        :param template: The template of this DeploymentProperties.
        :type template: object
        """

        self._template = template

    @property
    def template_link(self):
        """Gets the template_link of this DeploymentProperties.


        :return: The template_link of this DeploymentProperties.
        :rtype: TemplateLink
        """
        return self._template_link

    @template_link.setter
    def template_link(self, template_link):
        """Sets the template_link of this DeploymentProperties.


        :param template_link: The template_link of this DeploymentProperties.
        :type template_link: TemplateLink
        """

        self._template_link = template_link
