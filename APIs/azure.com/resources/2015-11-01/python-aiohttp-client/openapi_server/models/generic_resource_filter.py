# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GenericResourceFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_type: str=None, tagname: str=None, tagvalue: str=None):
        """GenericResourceFilter - a model defined in OpenAPI

        :param resource_type: The resource_type of this GenericResourceFilter.
        :param tagname: The tagname of this GenericResourceFilter.
        :param tagvalue: The tagvalue of this GenericResourceFilter.
        """
        self.openapi_types = {
            'resource_type': str,
            'tagname': str,
            'tagvalue': str
        }

        self.attribute_map = {
            'resource_type': 'resourceType',
            'tagname': 'tagname',
            'tagvalue': 'tagvalue'
        }

        self._resource_type = resource_type
        self._tagname = tagname
        self._tagvalue = tagvalue

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenericResourceFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenericResourceFilter of this GenericResourceFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_type(self):
        """Gets the resource_type of this GenericResourceFilter.

        Gets or sets the resource type.

        :return: The resource_type of this GenericResourceFilter.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this GenericResourceFilter.

        Gets or sets the resource type.

        :param resource_type: The resource_type of this GenericResourceFilter.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def tagname(self):
        """Gets the tagname of this GenericResourceFilter.

        Gets or sets the tag name.

        :return: The tagname of this GenericResourceFilter.
        :rtype: str
        """
        return self._tagname

    @tagname.setter
    def tagname(self, tagname):
        """Sets the tagname of this GenericResourceFilter.

        Gets or sets the tag name.

        :param tagname: The tagname of this GenericResourceFilter.
        :type tagname: str
        """

        self._tagname = tagname

    @property
    def tagvalue(self):
        """Gets the tagvalue of this GenericResourceFilter.

        Gets or sets the tag value.

        :return: The tagvalue of this GenericResourceFilter.
        :rtype: str
        """
        return self._tagvalue

    @tagvalue.setter
    def tagvalue(self, tagvalue):
        """Sets the tagvalue of this GenericResourceFilter.

        Gets or sets the tag value.

        :param tagvalue: The tagvalue of this GenericResourceFilter.
        :type tagvalue: str
        """

        self._tagvalue = tagvalue
