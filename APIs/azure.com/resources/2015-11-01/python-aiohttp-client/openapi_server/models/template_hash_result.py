# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TemplateHashResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, minified_template: str=None, template_hash: str=None):
        """TemplateHashResult - a model defined in OpenAPI

        :param minified_template: The minified_template of this TemplateHashResult.
        :param template_hash: The template_hash of this TemplateHashResult.
        """
        self.openapi_types = {
            'minified_template': str,
            'template_hash': str
        }

        self.attribute_map = {
            'minified_template': 'minifiedTemplate',
            'template_hash': 'templateHash'
        }

        self._minified_template = minified_template
        self._template_hash = template_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateHashResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateHashResult of this TemplateHashResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def minified_template(self):
        """Gets the minified_template of this TemplateHashResult.

        The minified template string.

        :return: The minified_template of this TemplateHashResult.
        :rtype: str
        """
        return self._minified_template

    @minified_template.setter
    def minified_template(self, minified_template):
        """Sets the minified_template of this TemplateHashResult.

        The minified template string.

        :param minified_template: The minified_template of this TemplateHashResult.
        :type minified_template: str
        """

        self._minified_template = minified_template

    @property
    def template_hash(self):
        """Gets the template_hash of this TemplateHashResult.

        The template hash.

        :return: The template_hash of this TemplateHashResult.
        :rtype: str
        """
        return self._template_hash

    @template_hash.setter
    def template_hash(self, template_hash):
        """Sets the template_hash of this TemplateHashResult.

        The template hash.

        :param template_hash: The template_hash of this TemplateHashResult.
        :type template_hash: str
        """

        self._template_hash = template_hash
