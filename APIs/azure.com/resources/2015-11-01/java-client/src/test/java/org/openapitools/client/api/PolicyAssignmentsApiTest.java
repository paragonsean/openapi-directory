/*
 * ResourceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PolicyAssignment;
import org.openapitools.client.model.PolicyAssignmentListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PolicyAssignmentsApi
 */
@Disabled
public class PolicyAssignmentsApiTest {

    private final PolicyAssignmentsApi api = new PolicyAssignmentsApi();

    /**
     * Create policy assignment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyAssignmentsCreateTest() throws ApiException {
        String scope = null;
        String policyAssignmentName = null;
        String apiVersion = null;
        PolicyAssignment parameters = null;
        PolicyAssignment response = api.policyAssignmentsCreate(scope, policyAssignmentName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Create policy assignment by Id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyAssignmentsCreateByIdTest() throws ApiException {
        String policyAssignmentId = null;
        String apiVersion = null;
        PolicyAssignment parameters = null;
        PolicyAssignment response = api.policyAssignmentsCreateById(policyAssignmentId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete policy assignment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyAssignmentsDeleteTest() throws ApiException {
        String scope = null;
        String policyAssignmentName = null;
        PolicyAssignment response = api.policyAssignmentsDelete(scope, policyAssignmentName);
        // TODO: test validations
    }

    /**
     * Delete policy assignment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyAssignmentsDeleteByIdTest() throws ApiException {
        String policyAssignmentId = null;
        String apiVersion = null;
        PolicyAssignment response = api.policyAssignmentsDeleteById(policyAssignmentId, apiVersion);
        // TODO: test validations
    }

    /**
     * Get single policy assignment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyAssignmentsGetTest() throws ApiException {
        String scope = null;
        String policyAssignmentName = null;
        String apiVersion = null;
        PolicyAssignment response = api.policyAssignmentsGet(scope, policyAssignmentName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get single policy assignment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyAssignmentsGetByIdTest() throws ApiException {
        String policyAssignmentId = null;
        String apiVersion = null;
        PolicyAssignment response = api.policyAssignmentsGetById(policyAssignmentId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets policy assignments of the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyAssignmentsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        PolicyAssignmentListResult response = api.policyAssignmentsList(apiVersion, subscriptionId, $filter);
        // TODO: test validations
    }

    /**
     * Gets policy assignments of the resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyAssignmentsListForResourceTest() throws ApiException {
        String resourceGroupName = null;
        String resourceProviderNamespace = null;
        String parentResourcePath = null;
        String resourceType = null;
        String resourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        PolicyAssignmentListResult response = api.policyAssignmentsListForResource(resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, subscriptionId, $filter);
        // TODO: test validations
    }

    /**
     * Gets policy assignments of the resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyAssignmentsListForResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        PolicyAssignmentListResult response = api.policyAssignmentsListForResourceGroup(resourceGroupName, apiVersion, subscriptionId, $filter);
        // TODO: test validations
    }

    /**
     * Gets policy assignments of the scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyAssignmentsListForScopeTest() throws ApiException {
        String scope = null;
        String apiVersion = null;
        String $filter = null;
        PolicyAssignmentListResult response = api.policyAssignmentsListForScope(scope, apiVersion, $filter);
        // TODO: test validations
    }

}
