/**
 * ResourceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PolicyDefinition from '../model/PolicyDefinition';

/**
* PolicyDefinitions service.
* @module api/PolicyDefinitionsApi
* @version 2015-11-01
*/
export default class PolicyDefinitionsApi {

    /**
    * Constructs a new PolicyDefinitionsApi. 
    * @alias module:api/PolicyDefinitionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the policyDefinitionsCreateOrUpdate operation.
     * @callback module:api/PolicyDefinitionsApi~policyDefinitionsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PolicyDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update policy definition.
     * @param {String} policyDefinitionName The policy definition name.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/PolicyDefinition} parameters The policy definition properties
     * @param {module:api/PolicyDefinitionsApi~policyDefinitionsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PolicyDefinition}
     */
    policyDefinitionsCreateOrUpdate(policyDefinitionName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'policyDefinitionName' is set
      if (policyDefinitionName === undefined || policyDefinitionName === null) {
        throw new Error("Missing the required parameter 'policyDefinitionName' when calling policyDefinitionsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling policyDefinitionsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling policyDefinitionsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling policyDefinitionsCreateOrUpdate");
      }

      let pathParams = {
        'policyDefinitionName': policyDefinitionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PolicyDefinition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions/{policyDefinitionName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the policyDefinitionsDelete operation.
     * @callback module:api/PolicyDefinitionsApi~policyDefinitionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes policy definition.
     * @param {String} policyDefinitionName The policy definition name.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/PolicyDefinitionsApi~policyDefinitionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    policyDefinitionsDelete(policyDefinitionName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'policyDefinitionName' is set
      if (policyDefinitionName === undefined || policyDefinitionName === null) {
        throw new Error("Missing the required parameter 'policyDefinitionName' when calling policyDefinitionsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling policyDefinitionsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling policyDefinitionsDelete");
      }

      let pathParams = {
        'policyDefinitionName': policyDefinitionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions/{policyDefinitionName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the policyDefinitionsGet operation.
     * @callback module:api/PolicyDefinitionsApi~policyDefinitionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PolicyDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets policy definition.
     * @param {String} policyDefinitionName The policy definition name.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/PolicyDefinitionsApi~policyDefinitionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PolicyDefinition}
     */
    policyDefinitionsGet(policyDefinitionName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'policyDefinitionName' is set
      if (policyDefinitionName === undefined || policyDefinitionName === null) {
        throw new Error("Missing the required parameter 'policyDefinitionName' when calling policyDefinitionsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling policyDefinitionsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling policyDefinitionsGet");
      }

      let pathParams = {
        'policyDefinitionName': policyDefinitionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PolicyDefinition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions/{policyDefinitionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
