# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_group_properties import ResourceGroupProperties
from openapi_server import util


class ResourceGroupPatchable(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, managed_by: str=None, name: str=None, properties: ResourceGroupProperties=None, tags: Dict[str, str]=None):
        """ResourceGroupPatchable - a model defined in OpenAPI

        :param managed_by: The managed_by of this ResourceGroupPatchable.
        :param name: The name of this ResourceGroupPatchable.
        :param properties: The properties of this ResourceGroupPatchable.
        :param tags: The tags of this ResourceGroupPatchable.
        """
        self.openapi_types = {
            'managed_by': str,
            'name': str,
            'properties': ResourceGroupProperties,
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'managed_by': 'managedBy',
            'name': 'name',
            'properties': 'properties',
            'tags': 'tags'
        }

        self._managed_by = managed_by
        self._name = name
        self._properties = properties
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceGroupPatchable':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceGroupPatchable of this ResourceGroupPatchable.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def managed_by(self):
        """Gets the managed_by of this ResourceGroupPatchable.

        The ID of the resource that manages this resource group.

        :return: The managed_by of this ResourceGroupPatchable.
        :rtype: str
        """
        return self._managed_by

    @managed_by.setter
    def managed_by(self, managed_by):
        """Sets the managed_by of this ResourceGroupPatchable.

        The ID of the resource that manages this resource group.

        :param managed_by: The managed_by of this ResourceGroupPatchable.
        :type managed_by: str
        """

        self._managed_by = managed_by

    @property
    def name(self):
        """Gets the name of this ResourceGroupPatchable.

        The name of the resource group.

        :return: The name of this ResourceGroupPatchable.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ResourceGroupPatchable.

        The name of the resource group.

        :param name: The name of this ResourceGroupPatchable.
        :type name: str
        """

        self._name = name

    @property
    def properties(self):
        """Gets the properties of this ResourceGroupPatchable.


        :return: The properties of this ResourceGroupPatchable.
        :rtype: ResourceGroupProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this ResourceGroupPatchable.


        :param properties: The properties of this ResourceGroupPatchable.
        :type properties: ResourceGroupProperties
        """

        self._properties = properties

    @property
    def tags(self):
        """Gets the tags of this ResourceGroupPatchable.

        The tags attached to the resource group.

        :return: The tags of this ResourceGroupPatchable.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ResourceGroupPatchable.

        The tags attached to the resource group.

        :param tags: The tags of this ResourceGroupPatchable.
        :type tags: Dict[str, str]
        """

        self._tags = tags
