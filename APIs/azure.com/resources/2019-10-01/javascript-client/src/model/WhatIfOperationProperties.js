/**
 * ResourceManagementClient
 * Provides operations for working with resources and resource groups.
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WhatIfChange from './WhatIfChange';

/**
 * The WhatIfOperationProperties model module.
 * @module model/WhatIfOperationProperties
 * @version 2019-10-01
 */
class WhatIfOperationProperties {
    /**
     * Constructs a new <code>WhatIfOperationProperties</code>.
     * Deployment operation properties.
     * @alias module:model/WhatIfOperationProperties
     */
    constructor() { 
        
        WhatIfOperationProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WhatIfOperationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WhatIfOperationProperties} obj Optional instance to populate.
     * @return {module:model/WhatIfOperationProperties} The populated <code>WhatIfOperationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WhatIfOperationProperties();

            if (data.hasOwnProperty('changes')) {
                obj['changes'] = ApiClient.convertToType(data['changes'], [WhatIfChange]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WhatIfOperationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WhatIfOperationProperties</code>.
     */
    static validateJSON(data) {
        if (data['changes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['changes'])) {
                throw new Error("Expected the field `changes` to be an array in the JSON data but got " + data['changes']);
            }
            // validate the optional field `changes` (array)
            for (const item of data['changes']) {
                WhatIfChange.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of resource changes predicted by What-If operation.
 * @member {Array.<module:model/WhatIfChange>} changes
 */
WhatIfOperationProperties.prototype['changes'] = undefined;






export default WhatIfOperationProperties;

