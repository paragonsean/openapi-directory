/**
 * ResourceManagementClient
 * Provides operations for working with resources and resource groups.
 *
 * The version of the OpenAPI document: 2019-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHttpMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHttpMessage::OAIHttpMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHttpMessage::OAIHttpMessage() {
    this->initializeModel();
}

OAIHttpMessage::~OAIHttpMessage() {}

void OAIHttpMessage::initializeModel() {

    m_content_isSet = false;
    m_content_isValid = false;
}

void OAIHttpMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHttpMessage::fromJsonObject(QJsonObject json) {

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;
}

QString OAIHttpMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHttpMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_content_isSet) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    return obj;
}

OAIObject OAIHttpMessage::getContent() const {
    return m_content;
}
void OAIHttpMessage::setContent(const OAIObject &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIHttpMessage::is_content_Set() const{
    return m_content_isSet;
}

bool OAIHttpMessage::is_content_Valid() const{
    return m_content_isValid;
}

bool OAIHttpMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHttpMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
