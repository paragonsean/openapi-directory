/*
 * ResourceManagementClient
 * Provides operations for working with resources and resource groups.
 *
 * The version of the OpenAPI document: 2016-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ExportTemplateRequest;
import org.openapitools.client.model.ResourceGroup;
import org.openapitools.client.model.ResourceGroupExportResult;
import org.openapitools.client.model.ResourceGroupListResult;
import org.openapitools.client.model.ResourceListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ResourceGroupsApi
 */
@Disabled
public class ResourceGroupsApiTest {

    private final ResourceGroupsApi api = new ResourceGroupsApi();

    /**
     * Checks whether a resource group exists.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resourceGroupsCheckExistenceTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.resourceGroupsCheckExistence(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Creates a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resourceGroupsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ResourceGroup parameters = null;
        ResourceGroup response = api.resourceGroupsCreateOrUpdate(resourceGroupName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a resource group.
     *
     * When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resourceGroupsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.resourceGroupsDelete(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Captures the specified resource group as a template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resourceGroupsExportTemplateTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExportTemplateRequest parameters = null;
        ResourceGroupExportResult response = api.resourceGroupsExportTemplate(resourceGroupName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Gets a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resourceGroupsGetTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ResourceGroup response = api.resourceGroupsGet(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the resource groups for a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resourceGroupsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        Integer $top = null;
        ResourceGroupListResult response = api.resourceGroupsList(apiVersion, subscriptionId, $filter, $top);
        // TODO: test validations
    }

    /**
     * Get all the resources for a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resourceGroupsListResourcesTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        String $expand = null;
        Integer $top = null;
        ResourceListResult response = api.resourceGroupsListResources(resourceGroupName, apiVersion, subscriptionId, $filter, $expand, $top);
        // TODO: test validations
    }

    /**
     * Updates a resource group.
     *
     * Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource group. If a field is unspecified, the current value is retained.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resourceGroupsPatchTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ResourceGroup parameters = null;
        ResourceGroup response = api.resourceGroupsPatch(resourceGroupName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
