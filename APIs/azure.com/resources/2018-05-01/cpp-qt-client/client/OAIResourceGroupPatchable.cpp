/**
 * ResourceManagementClient
 * Provides operations for working with resources and resource groups.
 *
 * The version of the OpenAPI document: 2018-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceGroupPatchable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceGroupPatchable::OAIResourceGroupPatchable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceGroupPatchable::OAIResourceGroupPatchable() {
    this->initializeModel();
}

OAIResourceGroupPatchable::~OAIResourceGroupPatchable() {}

void OAIResourceGroupPatchable::initializeModel() {

    m_managed_by_isSet = false;
    m_managed_by_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIResourceGroupPatchable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResourceGroupPatchable::fromJsonObject(QJsonObject json) {

    m_managed_by_isValid = ::OpenAPI::fromJsonValue(m_managed_by, json[QString("managedBy")]);
    m_managed_by_isSet = !json[QString("managedBy")].isNull() && m_managed_by_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAIResourceGroupPatchable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResourceGroupPatchable::asJsonObject() const {
    QJsonObject obj;
    if (m_managed_by_isSet) {
        obj.insert(QString("managedBy"), ::OpenAPI::toJsonValue(m_managed_by));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAIResourceGroupPatchable::getManagedBy() const {
    return m_managed_by;
}
void OAIResourceGroupPatchable::setManagedBy(const QString &managed_by) {
    m_managed_by = managed_by;
    m_managed_by_isSet = true;
}

bool OAIResourceGroupPatchable::is_managed_by_Set() const{
    return m_managed_by_isSet;
}

bool OAIResourceGroupPatchable::is_managed_by_Valid() const{
    return m_managed_by_isValid;
}

QString OAIResourceGroupPatchable::getName() const {
    return m_name;
}
void OAIResourceGroupPatchable::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIResourceGroupPatchable::is_name_Set() const{
    return m_name_isSet;
}

bool OAIResourceGroupPatchable::is_name_Valid() const{
    return m_name_isValid;
}

OAIResourceGroupProperties OAIResourceGroupPatchable::getProperties() const {
    return m_properties;
}
void OAIResourceGroupPatchable::setProperties(const OAIResourceGroupProperties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIResourceGroupPatchable::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIResourceGroupPatchable::is_properties_Valid() const{
    return m_properties_isValid;
}

QMap<QString, QString> OAIResourceGroupPatchable::getTags() const {
    return m_tags;
}
void OAIResourceGroupPatchable::setTags(const QMap<QString, QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIResourceGroupPatchable::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIResourceGroupPatchable::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIResourceGroupPatchable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_managed_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResourceGroupPatchable::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
