/**
 * ResourceManagementClient
 * Provides operations for working with resources and resource groups.
 *
 * The version of the OpenAPI document: 2018-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceGroupFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceGroupFilter::OAIResourceGroupFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceGroupFilter::OAIResourceGroupFilter() {
    this->initializeModel();
}

OAIResourceGroupFilter::~OAIResourceGroupFilter() {}

void OAIResourceGroupFilter::initializeModel() {

    m_tag_name_isSet = false;
    m_tag_name_isValid = false;

    m_tag_value_isSet = false;
    m_tag_value_isValid = false;
}

void OAIResourceGroupFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResourceGroupFilter::fromJsonObject(QJsonObject json) {

    m_tag_name_isValid = ::OpenAPI::fromJsonValue(m_tag_name, json[QString("tagName")]);
    m_tag_name_isSet = !json[QString("tagName")].isNull() && m_tag_name_isValid;

    m_tag_value_isValid = ::OpenAPI::fromJsonValue(m_tag_value, json[QString("tagValue")]);
    m_tag_value_isSet = !json[QString("tagValue")].isNull() && m_tag_value_isValid;
}

QString OAIResourceGroupFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResourceGroupFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_tag_name_isSet) {
        obj.insert(QString("tagName"), ::OpenAPI::toJsonValue(m_tag_name));
    }
    if (m_tag_value_isSet) {
        obj.insert(QString("tagValue"), ::OpenAPI::toJsonValue(m_tag_value));
    }
    return obj;
}

QString OAIResourceGroupFilter::getTagName() const {
    return m_tag_name;
}
void OAIResourceGroupFilter::setTagName(const QString &tag_name) {
    m_tag_name = tag_name;
    m_tag_name_isSet = true;
}

bool OAIResourceGroupFilter::is_tag_name_Set() const{
    return m_tag_name_isSet;
}

bool OAIResourceGroupFilter::is_tag_name_Valid() const{
    return m_tag_name_isValid;
}

QString OAIResourceGroupFilter::getTagValue() const {
    return m_tag_value;
}
void OAIResourceGroupFilter::setTagValue(const QString &tag_value) {
    m_tag_value = tag_value;
    m_tag_value_isSet = true;
}

bool OAIResourceGroupFilter::is_tag_value_Set() const{
    return m_tag_value_isSet;
}

bool OAIResourceGroupFilter::is_tag_value_Valid() const{
    return m_tag_value_isValid;
}

bool OAIResourceGroupFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tag_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResourceGroupFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
