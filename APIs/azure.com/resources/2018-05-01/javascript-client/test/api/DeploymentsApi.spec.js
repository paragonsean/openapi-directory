/**
 * ResourceManagementClient
 * Provides operations for working with resources and resource groups.
 *
 * The version of the OpenAPI document: 2018-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ResourceManagementClient);
  }
}(this, function(expect, ResourceManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ResourceManagementClient.DeploymentsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DeploymentsApi', function() {
    describe('deploymentsCalculateTemplateHash', function() {
      it('should call deploymentsCalculateTemplateHash successfully', function(done) {
        //uncomment below and update the code to test deploymentsCalculateTemplateHash
        //instance.deploymentsCalculateTemplateHash(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsCancel', function() {
      it('should call deploymentsCancel successfully', function(done) {
        //uncomment below and update the code to test deploymentsCancel
        //instance.deploymentsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsCancelAtSubscriptionScope', function() {
      it('should call deploymentsCancelAtSubscriptionScope successfully', function(done) {
        //uncomment below and update the code to test deploymentsCancelAtSubscriptionScope
        //instance.deploymentsCancelAtSubscriptionScope(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsCheckExistence', function() {
      it('should call deploymentsCheckExistence successfully', function(done) {
        //uncomment below and update the code to test deploymentsCheckExistence
        //instance.deploymentsCheckExistence(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsCheckExistenceAtSubscriptionScope', function() {
      it('should call deploymentsCheckExistenceAtSubscriptionScope successfully', function(done) {
        //uncomment below and update the code to test deploymentsCheckExistenceAtSubscriptionScope
        //instance.deploymentsCheckExistenceAtSubscriptionScope(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsCreateOrUpdate', function() {
      it('should call deploymentsCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test deploymentsCreateOrUpdate
        //instance.deploymentsCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsCreateOrUpdateAtSubscriptionScope', function() {
      it('should call deploymentsCreateOrUpdateAtSubscriptionScope successfully', function(done) {
        //uncomment below and update the code to test deploymentsCreateOrUpdateAtSubscriptionScope
        //instance.deploymentsCreateOrUpdateAtSubscriptionScope(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsDelete', function() {
      it('should call deploymentsDelete successfully', function(done) {
        //uncomment below and update the code to test deploymentsDelete
        //instance.deploymentsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsDeleteAtSubscriptionScope', function() {
      it('should call deploymentsDeleteAtSubscriptionScope successfully', function(done) {
        //uncomment below and update the code to test deploymentsDeleteAtSubscriptionScope
        //instance.deploymentsDeleteAtSubscriptionScope(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsExportTemplate', function() {
      it('should call deploymentsExportTemplate successfully', function(done) {
        //uncomment below and update the code to test deploymentsExportTemplate
        //instance.deploymentsExportTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsExportTemplateAtSubscriptionScope', function() {
      it('should call deploymentsExportTemplateAtSubscriptionScope successfully', function(done) {
        //uncomment below and update the code to test deploymentsExportTemplateAtSubscriptionScope
        //instance.deploymentsExportTemplateAtSubscriptionScope(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsGet', function() {
      it('should call deploymentsGet successfully', function(done) {
        //uncomment below and update the code to test deploymentsGet
        //instance.deploymentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsGetAtSubscriptionScope', function() {
      it('should call deploymentsGetAtSubscriptionScope successfully', function(done) {
        //uncomment below and update the code to test deploymentsGetAtSubscriptionScope
        //instance.deploymentsGetAtSubscriptionScope(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsListAtSubscriptionScope', function() {
      it('should call deploymentsListAtSubscriptionScope successfully', function(done) {
        //uncomment below and update the code to test deploymentsListAtSubscriptionScope
        //instance.deploymentsListAtSubscriptionScope(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsListByResourceGroup', function() {
      it('should call deploymentsListByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test deploymentsListByResourceGroup
        //instance.deploymentsListByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsValidate', function() {
      it('should call deploymentsValidate successfully', function(done) {
        //uncomment below and update the code to test deploymentsValidate
        //instance.deploymentsValidate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deploymentsValidateAtSubscriptionScope', function() {
      it('should call deploymentsValidateAtSubscriptionScope successfully', function(done) {
        //uncomment below and update the code to test deploymentsValidateAtSubscriptionScope
        //instance.deploymentsValidateAtSubscriptionScope(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
