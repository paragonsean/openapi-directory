/*
 * ResourceManagementClient
 * Provides operations for working with resources and resource groups.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeploymentOperation;
import org.openapitools.client.model.DeploymentOperationsListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeploymentOperationsApi
 */
@Disabled
public class DeploymentOperationsApiTest {

    private final DeploymentOperationsApi api = new DeploymentOperationsApi();

    /**
     * Gets a deployments operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentOperationsGetTest() throws ApiException {
        String resourceGroupName = null;
        String deploymentName = null;
        String operationId = null;
        String apiVersion = null;
        String subscriptionId = null;
        DeploymentOperation response = api.deploymentOperationsGet(resourceGroupName, deploymentName, operationId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a deployments operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentOperationsGetAtManagementGroupScopeTest() throws ApiException {
        String groupId = null;
        String deploymentName = null;
        String operationId = null;
        String apiVersion = null;
        DeploymentOperation response = api.deploymentOperationsGetAtManagementGroupScope(groupId, deploymentName, operationId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a deployments operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentOperationsGetAtSubscriptionScopeTest() throws ApiException {
        String deploymentName = null;
        String operationId = null;
        String apiVersion = null;
        String subscriptionId = null;
        DeploymentOperation response = api.deploymentOperationsGetAtSubscriptionScope(deploymentName, operationId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all deployments operations for a deployment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentOperationsListTest() throws ApiException {
        String resourceGroupName = null;
        String deploymentName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Integer $top = null;
        DeploymentOperationsListResult response = api.deploymentOperationsList(resourceGroupName, deploymentName, apiVersion, subscriptionId, $top);
        // TODO: test validations
    }

    /**
     * Gets all deployments operations for a deployment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentOperationsListAtManagementGroupScopeTest() throws ApiException {
        String groupId = null;
        String deploymentName = null;
        String apiVersion = null;
        Integer $top = null;
        DeploymentOperationsListResult response = api.deploymentOperationsListAtManagementGroupScope(groupId, deploymentName, apiVersion, $top);
        // TODO: test validations
    }

    /**
     * Gets all deployments operations for a deployment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentOperationsListAtSubscriptionScopeTest() throws ApiException {
        String deploymentName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Integer $top = null;
        DeploymentOperationsListResult response = api.deploymentOperationsListAtSubscriptionScope(deploymentName, apiVersion, subscriptionId, $top);
        // TODO: test validations
    }

}
