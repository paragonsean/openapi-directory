/**
 * ResourceManagementClient
 * Provides operations for working with resources and resource groups.
 *
 * The version of the OpenAPI document: 2017-05-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ResourceManagementClient);
  }
}(this, function(expect, ResourceManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ResourceManagementClient.DeploymentPropertiesExtended();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DeploymentPropertiesExtended', function() {
    it('should create an instance of DeploymentPropertiesExtended', function() {
      // uncomment below and update the code to test DeploymentPropertiesExtended
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be.a(ResourceManagementClient.DeploymentPropertiesExtended);
    });

    it('should have the property correlationId (base name: "correlationId")', function() {
      // uncomment below and update the code to test the property correlationId
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be();
    });

    it('should have the property debugSetting (base name: "debugSetting")', function() {
      // uncomment below and update the code to test the property debugSetting
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be();
    });

    it('should have the property dependencies (base name: "dependencies")', function() {
      // uncomment below and update the code to test the property dependencies
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be();
    });

    it('should have the property mode (base name: "mode")', function() {
      // uncomment below and update the code to test the property mode
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be();
    });

    it('should have the property outputs (base name: "outputs")', function() {
      // uncomment below and update the code to test the property outputs
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be();
    });

    it('should have the property parameters (base name: "parameters")', function() {
      // uncomment below and update the code to test the property parameters
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be();
    });

    it('should have the property parametersLink (base name: "parametersLink")', function() {
      // uncomment below and update the code to test the property parametersLink
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be();
    });

    it('should have the property providers (base name: "providers")', function() {
      // uncomment below and update the code to test the property providers
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be();
    });

    it('should have the property provisioningState (base name: "provisioningState")', function() {
      // uncomment below and update the code to test the property provisioningState
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be();
    });

    it('should have the property template (base name: "template")', function() {
      // uncomment below and update the code to test the property template
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be();
    });

    it('should have the property templateLink (base name: "templateLink")', function() {
      // uncomment below and update the code to test the property templateLink
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new ResourceManagementClient.DeploymentPropertiesExtended();
      //expect(instance).to.be();
    });

  });

}));
