/**
 * ResourceManagementClient
 * Provides operations for working with resources and resource groups.
 *
 * The version of the OpenAPI document: 2017-05-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeploymentPropertiesExtended.h
 *
 * Deployment properties with additional details.
 */

#ifndef OAIDeploymentPropertiesExtended_H
#define OAIDeploymentPropertiesExtended_H

#include <QJsonObject>

#include "OAIDebugSetting.h"
#include "OAIDependency.h"
#include "OAIObject.h"
#include "OAIParametersLink.h"
#include "OAIProvider.h"
#include "OAITemplateLink.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDebugSetting;
class OAIDependency;
class OAIParametersLink;
class OAIProvider;
class OAITemplateLink;

class OAIDeploymentPropertiesExtended : public OAIObject {
public:
    OAIDeploymentPropertiesExtended();
    OAIDeploymentPropertiesExtended(QString json);
    ~OAIDeploymentPropertiesExtended() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCorrelationId() const;
    void setCorrelationId(const QString &correlation_id);
    bool is_correlation_id_Set() const;
    bool is_correlation_id_Valid() const;

    OAIDebugSetting getDebugSetting() const;
    void setDebugSetting(const OAIDebugSetting &debug_setting);
    bool is_debug_setting_Set() const;
    bool is_debug_setting_Valid() const;

    QList<OAIDependency> getDependencies() const;
    void setDependencies(const QList<OAIDependency> &dependencies);
    bool is_dependencies_Set() const;
    bool is_dependencies_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    OAIObject getOutputs() const;
    void setOutputs(const OAIObject &outputs);
    bool is_outputs_Set() const;
    bool is_outputs_Valid() const;

    OAIObject getParameters() const;
    void setParameters(const OAIObject &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    OAIParametersLink getParametersLink() const;
    void setParametersLink(const OAIParametersLink &parameters_link);
    bool is_parameters_link_Set() const;
    bool is_parameters_link_Valid() const;

    QList<OAIProvider> getProviders() const;
    void setProviders(const QList<OAIProvider> &providers);
    bool is_providers_Set() const;
    bool is_providers_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIObject getRTemplate() const;
    void setRTemplate(const OAIObject &r_template);
    bool is_r_template_Set() const;
    bool is_r_template_Valid() const;

    OAITemplateLink getTemplateLink() const;
    void setTemplateLink(const OAITemplateLink &template_link);
    bool is_template_link_Set() const;
    bool is_template_link_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_correlation_id;
    bool m_correlation_id_isSet;
    bool m_correlation_id_isValid;

    OAIDebugSetting m_debug_setting;
    bool m_debug_setting_isSet;
    bool m_debug_setting_isValid;

    QList<OAIDependency> m_dependencies;
    bool m_dependencies_isSet;
    bool m_dependencies_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    OAIObject m_outputs;
    bool m_outputs_isSet;
    bool m_outputs_isValid;

    OAIObject m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    OAIParametersLink m_parameters_link;
    bool m_parameters_link_isSet;
    bool m_parameters_link_isValid;

    QList<OAIProvider> m_providers;
    bool m_providers_isSet;
    bool m_providers_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIObject m_r_template;
    bool m_r_template_isSet;
    bool m_r_template_isValid;

    OAITemplateLink m_template_link;
    bool m_template_link_isSet;
    bool m_template_link_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeploymentPropertiesExtended)

#endif // OAIDeploymentPropertiesExtended_H
