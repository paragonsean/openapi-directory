# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeploymentWhatIfSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, result_format: str=None):
        """DeploymentWhatIfSettings - a model defined in OpenAPI

        :param result_format: The result_format of this DeploymentWhatIfSettings.
        """
        self.openapi_types = {
            'result_format': str
        }

        self.attribute_map = {
            'result_format': 'resultFormat'
        }

        self._result_format = result_format

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentWhatIfSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentWhatIfSettings of this DeploymentWhatIfSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result_format(self):
        """Gets the result_format of this DeploymentWhatIfSettings.

        The format of the What-If results

        :return: The result_format of this DeploymentWhatIfSettings.
        :rtype: str
        """
        return self._result_format

    @result_format.setter
    def result_format(self, result_format):
        """Sets the result_format of this DeploymentWhatIfSettings.

        The format of the What-If results

        :param result_format: The result_format of this DeploymentWhatIfSettings.
        :type result_format: str
        """
        allowed_values = ["ResourceIdOnly", "FullResourcePayloads"]  # noqa: E501
        if result_format not in allowed_values:
            raise ValueError(
                "Invalid value for `result_format` ({0}), must be one of {1}"
                .format(result_format, allowed_values)
            )

        self._result_format = result_format
