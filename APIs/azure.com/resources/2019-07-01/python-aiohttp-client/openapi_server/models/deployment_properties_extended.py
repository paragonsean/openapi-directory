# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.debug_setting import DebugSetting
from openapi_server.models.dependency import Dependency
from openapi_server.models.on_error_deployment_extended import OnErrorDeploymentExtended
from openapi_server.models.parameters_link import ParametersLink
from openapi_server.models.provider import Provider
from openapi_server.models.template_link import TemplateLink
from openapi_server import util


class DeploymentPropertiesExtended(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, correlation_id: str=None, debug_setting: DebugSetting=None, dependencies: List[Dependency]=None, duration: str=None, mode: str=None, on_error_deployment: OnErrorDeploymentExtended=None, outputs: object=None, parameters: object=None, parameters_link: ParametersLink=None, providers: List[Provider]=None, provisioning_state: str=None, template: object=None, template_link: TemplateLink=None, timestamp: datetime=None):
        """DeploymentPropertiesExtended - a model defined in OpenAPI

        :param correlation_id: The correlation_id of this DeploymentPropertiesExtended.
        :param debug_setting: The debug_setting of this DeploymentPropertiesExtended.
        :param dependencies: The dependencies of this DeploymentPropertiesExtended.
        :param duration: The duration of this DeploymentPropertiesExtended.
        :param mode: The mode of this DeploymentPropertiesExtended.
        :param on_error_deployment: The on_error_deployment of this DeploymentPropertiesExtended.
        :param outputs: The outputs of this DeploymentPropertiesExtended.
        :param parameters: The parameters of this DeploymentPropertiesExtended.
        :param parameters_link: The parameters_link of this DeploymentPropertiesExtended.
        :param providers: The providers of this DeploymentPropertiesExtended.
        :param provisioning_state: The provisioning_state of this DeploymentPropertiesExtended.
        :param template: The template of this DeploymentPropertiesExtended.
        :param template_link: The template_link of this DeploymentPropertiesExtended.
        :param timestamp: The timestamp of this DeploymentPropertiesExtended.
        """
        self.openapi_types = {
            'correlation_id': str,
            'debug_setting': DebugSetting,
            'dependencies': List[Dependency],
            'duration': str,
            'mode': str,
            'on_error_deployment': OnErrorDeploymentExtended,
            'outputs': object,
            'parameters': object,
            'parameters_link': ParametersLink,
            'providers': List[Provider],
            'provisioning_state': str,
            'template': object,
            'template_link': TemplateLink,
            'timestamp': datetime
        }

        self.attribute_map = {
            'correlation_id': 'correlationId',
            'debug_setting': 'debugSetting',
            'dependencies': 'dependencies',
            'duration': 'duration',
            'mode': 'mode',
            'on_error_deployment': 'onErrorDeployment',
            'outputs': 'outputs',
            'parameters': 'parameters',
            'parameters_link': 'parametersLink',
            'providers': 'providers',
            'provisioning_state': 'provisioningState',
            'template': 'template',
            'template_link': 'templateLink',
            'timestamp': 'timestamp'
        }

        self._correlation_id = correlation_id
        self._debug_setting = debug_setting
        self._dependencies = dependencies
        self._duration = duration
        self._mode = mode
        self._on_error_deployment = on_error_deployment
        self._outputs = outputs
        self._parameters = parameters
        self._parameters_link = parameters_link
        self._providers = providers
        self._provisioning_state = provisioning_state
        self._template = template
        self._template_link = template_link
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentPropertiesExtended':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentPropertiesExtended of this DeploymentPropertiesExtended.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def correlation_id(self):
        """Gets the correlation_id of this DeploymentPropertiesExtended.

        The correlation ID of the deployment.

        :return: The correlation_id of this DeploymentPropertiesExtended.
        :rtype: str
        """
        return self._correlation_id

    @correlation_id.setter
    def correlation_id(self, correlation_id):
        """Sets the correlation_id of this DeploymentPropertiesExtended.

        The correlation ID of the deployment.

        :param correlation_id: The correlation_id of this DeploymentPropertiesExtended.
        :type correlation_id: str
        """

        self._correlation_id = correlation_id

    @property
    def debug_setting(self):
        """Gets the debug_setting of this DeploymentPropertiesExtended.


        :return: The debug_setting of this DeploymentPropertiesExtended.
        :rtype: DebugSetting
        """
        return self._debug_setting

    @debug_setting.setter
    def debug_setting(self, debug_setting):
        """Sets the debug_setting of this DeploymentPropertiesExtended.


        :param debug_setting: The debug_setting of this DeploymentPropertiesExtended.
        :type debug_setting: DebugSetting
        """

        self._debug_setting = debug_setting

    @property
    def dependencies(self):
        """Gets the dependencies of this DeploymentPropertiesExtended.

        The list of deployment dependencies.

        :return: The dependencies of this DeploymentPropertiesExtended.
        :rtype: List[Dependency]
        """
        return self._dependencies

    @dependencies.setter
    def dependencies(self, dependencies):
        """Sets the dependencies of this DeploymentPropertiesExtended.

        The list of deployment dependencies.

        :param dependencies: The dependencies of this DeploymentPropertiesExtended.
        :type dependencies: List[Dependency]
        """

        self._dependencies = dependencies

    @property
    def duration(self):
        """Gets the duration of this DeploymentPropertiesExtended.

        The duration of the template deployment.

        :return: The duration of this DeploymentPropertiesExtended.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this DeploymentPropertiesExtended.

        The duration of the template deployment.

        :param duration: The duration of this DeploymentPropertiesExtended.
        :type duration: str
        """

        self._duration = duration

    @property
    def mode(self):
        """Gets the mode of this DeploymentPropertiesExtended.

        The deployment mode. Possible values are Incremental and Complete.

        :return: The mode of this DeploymentPropertiesExtended.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this DeploymentPropertiesExtended.

        The deployment mode. Possible values are Incremental and Complete.

        :param mode: The mode of this DeploymentPropertiesExtended.
        :type mode: str
        """
        allowed_values = ["Incremental", "Complete"]  # noqa: E501
        if mode not in allowed_values:
            raise ValueError(
                "Invalid value for `mode` ({0}), must be one of {1}"
                .format(mode, allowed_values)
            )

        self._mode = mode

    @property
    def on_error_deployment(self):
        """Gets the on_error_deployment of this DeploymentPropertiesExtended.


        :return: The on_error_deployment of this DeploymentPropertiesExtended.
        :rtype: OnErrorDeploymentExtended
        """
        return self._on_error_deployment

    @on_error_deployment.setter
    def on_error_deployment(self, on_error_deployment):
        """Sets the on_error_deployment of this DeploymentPropertiesExtended.


        :param on_error_deployment: The on_error_deployment of this DeploymentPropertiesExtended.
        :type on_error_deployment: OnErrorDeploymentExtended
        """

        self._on_error_deployment = on_error_deployment

    @property
    def outputs(self):
        """Gets the outputs of this DeploymentPropertiesExtended.

        Key/value pairs that represent deployment output.

        :return: The outputs of this DeploymentPropertiesExtended.
        :rtype: object
        """
        return self._outputs

    @outputs.setter
    def outputs(self, outputs):
        """Sets the outputs of this DeploymentPropertiesExtended.

        Key/value pairs that represent deployment output.

        :param outputs: The outputs of this DeploymentPropertiesExtended.
        :type outputs: object
        """

        self._outputs = outputs

    @property
    def parameters(self):
        """Gets the parameters of this DeploymentPropertiesExtended.

        Deployment parameters. Use only one of Parameters or ParametersLink.

        :return: The parameters of this DeploymentPropertiesExtended.
        :rtype: object
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this DeploymentPropertiesExtended.

        Deployment parameters. Use only one of Parameters or ParametersLink.

        :param parameters: The parameters of this DeploymentPropertiesExtended.
        :type parameters: object
        """

        self._parameters = parameters

    @property
    def parameters_link(self):
        """Gets the parameters_link of this DeploymentPropertiesExtended.


        :return: The parameters_link of this DeploymentPropertiesExtended.
        :rtype: ParametersLink
        """
        return self._parameters_link

    @parameters_link.setter
    def parameters_link(self, parameters_link):
        """Sets the parameters_link of this DeploymentPropertiesExtended.


        :param parameters_link: The parameters_link of this DeploymentPropertiesExtended.
        :type parameters_link: ParametersLink
        """

        self._parameters_link = parameters_link

    @property
    def providers(self):
        """Gets the providers of this DeploymentPropertiesExtended.

        The list of resource providers needed for the deployment.

        :return: The providers of this DeploymentPropertiesExtended.
        :rtype: List[Provider]
        """
        return self._providers

    @providers.setter
    def providers(self, providers):
        """Sets the providers of this DeploymentPropertiesExtended.

        The list of resource providers needed for the deployment.

        :param providers: The providers of this DeploymentPropertiesExtended.
        :type providers: List[Provider]
        """

        self._providers = providers

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this DeploymentPropertiesExtended.

        The state of the provisioning.

        :return: The provisioning_state of this DeploymentPropertiesExtended.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this DeploymentPropertiesExtended.

        The state of the provisioning.

        :param provisioning_state: The provisioning_state of this DeploymentPropertiesExtended.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def template(self):
        """Gets the template of this DeploymentPropertiesExtended.

        The template content. Use only one of Template or TemplateLink.

        :return: The template of this DeploymentPropertiesExtended.
        :rtype: object
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this DeploymentPropertiesExtended.

        The template content. Use only one of Template or TemplateLink.

        :param template: The template of this DeploymentPropertiesExtended.
        :type template: object
        """

        self._template = template

    @property
    def template_link(self):
        """Gets the template_link of this DeploymentPropertiesExtended.


        :return: The template_link of this DeploymentPropertiesExtended.
        :rtype: TemplateLink
        """
        return self._template_link

    @template_link.setter
    def template_link(self, template_link):
        """Sets the template_link of this DeploymentPropertiesExtended.


        :param template_link: The template_link of this DeploymentPropertiesExtended.
        :type template_link: TemplateLink
        """

        self._template_link = template_link

    @property
    def timestamp(self):
        """Gets the timestamp of this DeploymentPropertiesExtended.

        The timestamp of the template deployment.

        :return: The timestamp of this DeploymentPropertiesExtended.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this DeploymentPropertiesExtended.

        The timestamp of the template deployment.

        :param timestamp: The timestamp of this DeploymentPropertiesExtended.
        :type timestamp: datetime
        """

        self._timestamp = timestamp
