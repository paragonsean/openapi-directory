/**
 * ResourceManagementClient
 * Provides operations for working with resources and resource groups.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Sku model module.
 * @module model/Sku
 * @version 2019-07-01
 */
class Sku {
    /**
     * Constructs a new <code>Sku</code>.
     * SKU for the resource.
     * @alias module:model/Sku
     */
    constructor() { 
        
        Sku.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Sku</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Sku} obj Optional instance to populate.
     * @return {module:model/Sku} The populated <code>Sku</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Sku();

            if (data.hasOwnProperty('capacity')) {
                obj['capacity'] = ApiClient.convertToType(data['capacity'], 'Number');
            }
            if (data.hasOwnProperty('family')) {
                obj['family'] = ApiClient.convertToType(data['family'], 'String');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'String');
            }
            if (data.hasOwnProperty('tier')) {
                obj['tier'] = ApiClient.convertToType(data['tier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Sku</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Sku</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['family'] && !(typeof data['family'] === 'string' || data['family'] instanceof String)) {
            throw new Error("Expected the field `family` to be a primitive type in the JSON string but got " + data['family']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['size'] && !(typeof data['size'] === 'string' || data['size'] instanceof String)) {
            throw new Error("Expected the field `size` to be a primitive type in the JSON string but got " + data['size']);
        }
        // ensure the json data is a string
        if (data['tier'] && !(typeof data['tier'] === 'string' || data['tier'] instanceof String)) {
            throw new Error("Expected the field `tier` to be a primitive type in the JSON string but got " + data['tier']);
        }

        return true;
    }


}



/**
 * The SKU capacity.
 * @member {Number} capacity
 */
Sku.prototype['capacity'] = undefined;

/**
 * The SKU family.
 * @member {String} family
 */
Sku.prototype['family'] = undefined;

/**
 * The SKU model.
 * @member {String} model
 */
Sku.prototype['model'] = undefined;

/**
 * The SKU name.
 * @member {String} name
 */
Sku.prototype['name'] = undefined;

/**
 * The SKU size.
 * @member {String} size
 */
Sku.prototype['size'] = undefined;

/**
 * The SKU tier.
 * @member {String} tier
 */
Sku.prototype['tier'] = undefined;






export default Sku;

