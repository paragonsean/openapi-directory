openapi: 3.0.1
info:
  description: Provides operations for working with resources and resource groups.
  title: ResourceManagementClient
  version: 2019-08-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/resources/resource-manager/Microsoft.Resources/stable/2019-08-01/resources.json
    version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: resources
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /providers:
    get:
      description: Gets all resource providers for the tenant.
      operationId: Providers_ListAtTenantScope
      parameters:
      - description: The number of results to return. If null is passed returns all
          providers.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "The properties to include in the results. For example, use &$expand=metadata\
          \ in the query string to retrieve resource provider metadata. To include\
          \ property aliases in response, use $expand=resourceTypes/aliases."
        in: query
        name: $expand
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderListResult'
          description: OK - Returns an array of resource providers.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Providers
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/:
    get:
      description: Get all the deployments for a management group.
      operationId: Deployments_ListAtManagementGroupScope
      parameters:
      - description: The management group ID.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 90
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The filter to apply on the operation. For example, you can use\
          \ $filter=provisioningState eq '{state}'."
        in: query
        name: $filter
        schema:
          type: string
      - description: "The number of results to get. If null is passed, returns all\
          \ deployments."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
          description: OK - Returns an array of deployments.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-ms-odata: '#/definitions/DeploymentExtendedFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}:
    delete:
      description: "A template deployment that is currently running cannot be deleted.\
        \ Deleting a template deployment removes the associated deployment operations.\
        \ This is an asynchronous operation that returns a status of 202 until the\
        \ template deployment is successfully deleted. The Location response header\
        \ contains the URI that is used to obtain the status of the process. While\
        \ the process is running, a call to the URI in the Location header returns\
        \ a status of 202. When the process finishes, the URI in the Location header\
        \ returns a status of 204 on success. If the asynchronous request failed,\
        \ the URI in the Location header returns an error-level status code."
      operationId: Deployments_DeleteAtManagementGroupScope
      parameters:
      - description: The management group ID.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 90
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: Accepted - Returns this status until the asynchronous operation
            has completed.
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Deletes a deployment from the deployment history.
      tags:
      - Deployments
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets a deployment.
      operationId: Deployments_GetAtManagementGroupScope
      parameters:
      - description: The management group ID.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 90
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "OK - Returns information about the deployment, including provisioning\
            \ status."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
    head:
      description: Checks whether the deployment exists.
      operationId: Deployments_CheckExistenceAtManagementGroupScope
      parameters:
      - description: The management group ID.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 90
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content: {}
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
    put:
      description: You can provide the template and parameters directly in the request
        or link to JSON files.
      operationId: Deployments_CreateOrUpdateAtManagementGroupScope
      parameters:
      - description: The management group ID.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 90
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedDeployment'
        description: Additional parameters supplied to the operation.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "OK - Returns information about the deployment, including provisioning\
            \ status."
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "Created - Returns information about the deployment, including\
            \ provisioning status."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Deploys resources at management group scope.
      tags:
      - Deployments
      x-ms-examples:
        Create deployment at management group scope.:
          parameters:
            api-version: 2019-08-01
            deploymentName: mg-dep01
            groupId: tiano-group1
            parameters:
              location: eastus
              properties:
                mode: Incremental
                parameters: {}
                templateLink: "{templateUri}"
          responses:
            "200":
              body:
                id: /providers/Microsoft.Management/managementGroups/tiano-group1/providers/Microsoft.Resources/deployments/mg-dep01
                location: eastus
                name: mg-dep01
                properties:
                  correlationId: "{correlationId}"
                  dependencies:
                  - dependsOn:
                    - id: /providers/Microsoft.Management/managementGroups/tiano-group1/providers/Microsoft.Authorization/policyDefinitions/policy2
                      resourceName: policy2
                      resourceType: Microsoft.Authorization/policyDefinitions
                    id: /providers/Microsoft.Management/managementGroups/tiano-group1/providers/Microsoft.Authorization/policyAssignments/location-lock
                    resourceName: location-lock
                    resourceType: Microsoft.Authorization/policyAssignments
                  duration: PT1.2970875S
                  mode: Incremental
                  parameters: {}
                  providers:
                  - namespace: Microsoft.Authorization
                    resourceTypes:
                    - locations:
                      - null
                      resourceType: policyDefinitions
                    - locations:
                      - null
                      resourceType: policyAssignments
                  - namespace: Microsoft.Resources
                    resourceTypes:
                    - locations:
                      - eastus
                      resourceType: deployments
                  provisioningState: Accepted
                  timestamp: 2019-04-24T22:52:38.7895563Z
                type: Microsoft.Resources/deployments
            "201":
              body:
                id: /providers/Microsoft.Management/managementGroups/tiano-group1/providers/Microsoft.Resources/deployments/mg-dep01
                location: eastus
                name: mg-dep01
                properties:
                  correlationId: "{correlationId}"
                  dependencies:
                  - dependsOn:
                    - id: /providers/Microsoft.Management/managementGroups/tiano-group1/providers/Microsoft.Authorization/policyDefinitions/policy2
                      resourceName: policy2
                      resourceType: Microsoft.Authorization/policyDefinitions
                    id: /providers/Microsoft.Management/managementGroups/tiano-group1/providers/Microsoft.Authorization/policyAssignments/location-lock
                    resourceName: location-lock
                    resourceType: Microsoft.Authorization/policyAssignments
                  duration: PT1.2970875S
                  mode: Incremental
                  parameters: {}
                  providers:
                  - namespace: Microsoft.Authorization
                    resourceTypes:
                    - locations:
                      - null
                      resourceType: policyDefinitions
                    - locations:
                      - null
                      resourceType: policyAssignments
                  - namespace: Microsoft.Resources
                    resourceTypes:
                    - locations:
                      - eastus
                      resourceType: deployments
                  provisioningState: Accepted
                  timestamp: 2019-04-24T22:52:38.7895563Z
                type: Microsoft.Resources/deployments
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel:
    post:
      description: "You can cancel a deployment only if the provisioningState is Accepted\
        \ or Running. After the deployment is canceled, the provisioningState is set\
        \ to Canceled. Canceling a template deployment stops the currently running\
        \ template deployment and leaves the resources partially deployed."
      operationId: Deployments_CancelAtManagementGroupScope
      parameters:
      - description: The management group ID.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 90
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Cancels a currently running template deployment.
      tags:
      - Deployments
      x-accepts:
      - application/json
  ? /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate
  : post:
      description: Exports the template used for specified deployment.
      operationId: Deployments_ExportTemplateAtManagementGroupScope
      parameters:
      - description: The management group ID.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 90
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExportResult'
          description: OK - Returns the template.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
  ? /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations
  : get:
      description: Gets all deployments operations for a deployment.
      operationId: DeploymentOperations_ListAtManagementGroupScope
      parameters:
      - description: The management group ID.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 90
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The number of results to return.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperationsListResult'
          description: OK - Return an array of deployment operations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - DeploymentOperations
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}
  : get:
      description: Gets a deployments operation.
      operationId: DeploymentOperations_GetAtManagementGroupScope
      parameters:
      - description: The management group ID.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 90
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The ID of the operation to get.
        in: path
        name: operationId
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperation'
          description: OK - Returns information about the deployment operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - DeploymentOperations
      x-accepts:
      - application/json
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate:
    post:
      description: Validates whether the specified template is syntactically correct
        and will be accepted by Azure Resource Manager..
      operationId: Deployments_ValidateAtManagementGroupScope
      parameters:
      - description: The management group ID.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 90
          minLength: 1
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedDeployment'
        description: Parameters to validate.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
          description: OK - Returns the validation result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
          description: Returns the validation result.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /providers/Microsoft.Resources/calculateTemplateHash:
    post:
      description: Calculate the hash of the given template.
      operationId: Deployments_CalculateTemplateHash
      parameters:
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: The template provided to calculate hash.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateHashResult'
          description: OK - Returns the hash.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-ms-examples:
        Calculate template hash:
          parameters:
            api-version: 2019-08-01
            template:
              $schema: http://schemas.management.azure.com/deploymentTemplate?api-version=2014-04-01-preview
              contentVersion: 1.0.0.0
              outputs:
                string:
                  type: string
                  value: myvalue
              parameters:
                string:
                  type: string
              resources: []
              variables:
                array:
                - 1
                - 2
                - 3
                - 4
                bool: true
                int: 42
                object:
                  object:
                    location: West US
                    vmSize: Large
                string: string
          responses:
            "200":
              body:
                minifiedTemplate: "{\"$SCHEMA\":\"HTTP://SCHEMAS.MANAGEMENT.AZURE.COM/DEPLOYMENTTEMPLATE?API-VERSION=2014-04-01-PREVIEW\"\
                  ,\"CONTENTVERSION\":\"1.0.0.0\",\"PARAMETERS\":{\"STRING\":{\"TYPE\"\
                  :\"STRING\"}},\"VARIABLES\":{\"STRING\":\"STRING\",\"INT\":42,\"\
                  BOOL\":TRUE,\"ARRAY\":[1,2,3,4],\"OBJECT\":{\"OBJECT\":{\"VMSIZE\"\
                  :\"LARGE\",\"LOCATION\":\"WEST US\"}}},\"RESOURCES\":[],\"OUTPUTS\"\
                  :{\"STRING\":{\"TYPE\":\"STRING\",\"VALUE\":\"MYVALUE\"}}}"
                templateHash: "695440707931307747"
      x-codegen-request-body-name: template
      x-content-type: application/json
      x-accepts:
      - application/json
  /providers/Microsoft.Resources/deployments/:
    get:
      description: Get all the deployments at the tenant scope.
      operationId: Deployments_ListAtTenantScope
      parameters:
      - description: "The filter to apply on the operation. For example, you can use\
          \ $filter=provisioningState eq '{state}'."
        in: query
        name: $filter
        schema:
          type: string
      - description: "The number of results to get. If null is passed, returns all\
          \ deployments."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
          description: OK - Returns an array of deployments.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-ms-odata: '#/definitions/DeploymentExtendedFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /providers/Microsoft.Resources/deployments/{deploymentName}:
    delete:
      description: "A template deployment that is currently running cannot be deleted.\
        \ Deleting a template deployment removes the associated deployment operations.\
        \ This is an asynchronous operation that returns a status of 202 until the\
        \ template deployment is successfully deleted. The Location response header\
        \ contains the URI that is used to obtain the status of the process. While\
        \ the process is running, a call to the URI in the Location header returns\
        \ a status of 202. When the process finishes, the URI in the Location header\
        \ returns a status of 204 on success. If the asynchronous request failed,\
        \ the URI in the Location header returns an error-level status code."
      operationId: Deployments_DeleteAtTenantScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: Accepted - Returns this status until the asynchronous operation
            has completed.
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Deletes a deployment from the deployment history.
      tags:
      - Deployments
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets a deployment.
      operationId: Deployments_GetAtTenantScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "OK - Returns information about the deployment, including provisioning\
            \ status."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
    head:
      description: Checks whether the deployment exists.
      operationId: Deployments_CheckExistenceAtTenantScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content: {}
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
    put:
      description: You can provide the template and parameters directly in the request
        or link to JSON files.
      operationId: Deployments_CreateOrUpdateAtTenantScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedDeployment'
        description: Additional parameters supplied to the operation.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "OK - Returns information about the deployment, including provisioning\
            \ status."
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "Created - Returns information about the deployment, including\
            \ provisioning status."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Deploys resources at tenant scope.
      tags:
      - Deployments
      x-ms-examples:
        Create deployment at tenant scope.:
          parameters:
            api-version: 2019-08-01
            deploymentName: tenant-dep01
            parameters:
              location: eastus
              properties:
                mode: Incremental
                parameters: {}
                templateLink: "{templateUri}"
          responses:
            "200":
              body:
                id: /providers/Microsoft.Resources/deployments/tenant-dep01
                location: eastus
                name: tenant-dep01
                properties:
                  correlationId: "{correlationId}"
                  dependencies:
                  - dependsOn:
                    - id: /providers/Microsoft.Authorization/policyDefinitions/policy2
                      resourceName: policy2
                      resourceType: Microsoft.Authorization/policyDefinitions
                    id: /providers/Microsoft.Authorization/policyAssignments/location-lock
                    resourceName: location-lock
                    resourceType: Microsoft.Authorization/policyAssignments
                  duration: PT1.2970875S
                  mode: Incremental
                  parameters: {}
                  providers:
                  - namespace: Microsoft.Authorization
                    resourceTypes:
                    - locations:
                      - null
                      resourceType: policyDefinitions
                    - locations:
                      - null
                      resourceType: policyAssignments
                  - namespace: Microsoft.Resources
                    resourceTypes:
                    - locations:
                      - eastus
                      resourceType: deployments
                  provisioningState: Accepted
                  timestamp: 2019-04-24T22:52:38.7895563Z
                type: Microsoft.Resources/deployments
            "201":
              body:
                id: /providers/Microsoft.Resources/deployments/tenant-dep01
                location: eastus
                name: tenant-dep01
                properties:
                  correlationId: "{correlationId}"
                  dependencies:
                  - dependsOn:
                    - id: /providers/Microsoft.Authorization/policyDefinitions/policy2
                      resourceName: policy2
                      resourceType: Microsoft.Authorization/policyDefinitions
                    id: /providers/Microsoft.Authorization/policyAssignments/location-lock
                    resourceName: location-lock
                    resourceType: Microsoft.Authorization/policyAssignments
                  duration: PT1.2970875S
                  mode: Incremental
                  parameters: {}
                  providers:
                  - namespace: Microsoft.Authorization
                    resourceTypes:
                    - locations:
                      - null
                      resourceType: policyDefinitions
                    - locations:
                      - null
                      resourceType: policyAssignments
                  - namespace: Microsoft.Resources
                    resourceTypes:
                    - locations:
                      - eastus
                      resourceType: deployments
                  provisioningState: Accepted
                  timestamp: 2019-04-24T22:52:38.7895563Z
                type: Microsoft.Resources/deployments
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /providers/Microsoft.Resources/deployments/{deploymentName}/cancel:
    post:
      description: "You can cancel a deployment only if the provisioningState is Accepted\
        \ or Running. After the deployment is canceled, the provisioningState is set\
        \ to Canceled. Canceling a template deployment stops the currently running\
        \ template deployment and leaves the resources partially deployed."
      operationId: Deployments_CancelAtTenantScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Cancels a currently running template deployment.
      tags:
      - Deployments
      x-accepts:
      - application/json
  /providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate:
    post:
      description: Exports the template used for specified deployment.
      operationId: Deployments_ExportTemplateAtTenantScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExportResult'
          description: OK - Returns the template.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
  /providers/Microsoft.Resources/deployments/{deploymentName}/operations:
    get:
      description: Gets all deployments operations for a deployment.
      operationId: DeploymentOperations_ListAtTenantScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The number of results to return.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperationsListResult'
          description: OK - Return an array of deployment operations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - DeploymentOperations
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}:
    get:
      description: Gets a deployments operation.
      operationId: DeploymentOperations_GetAtTenantScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The ID of the operation to get.
        in: path
        name: operationId
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperation'
          description: OK - Returns information about the deployment operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - DeploymentOperations
      x-accepts:
      - application/json
  /providers/Microsoft.Resources/deployments/{deploymentName}/validate:
    post:
      description: Validates whether the specified template is syntactically correct
        and will be accepted by Azure Resource Manager..
      operationId: Deployments_ValidateAtTenantScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedDeployment'
        description: Parameters to validate.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
          description: OK - Returns the validation result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
          description: Returns the validation result.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /providers/Microsoft.Resources/operations:
    get:
      description: Lists all of the available Microsoft.Resources REST API operations.
      operationId: Operations_List
      parameters:
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
          description: OK. The request has succeeded.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Operations
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /providers/{resourceProviderNamespace}:
    get:
      description: Gets the specified resource provider at the tenant level.
      operationId: Providers_GetAtTenantScope
      parameters:
      - description: "The $expand query parameter. For example, to include property\
          \ aliases in response, use $expand=resourceTypes/aliases."
        in: query
        name: $expand
        schema:
          type: string
      - description: The namespace of the resource provider.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: OK - Returns information about the resource provider.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Providers
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers:
    get:
      description: Gets all resource providers for a subscription.
      operationId: Providers_List
      parameters:
      - description: The number of results to return. If null is passed returns all
          deployments.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "The properties to include in the results. For example, use &$expand=metadata\
          \ in the query string to retrieve resource provider metadata. To include\
          \ property aliases in response, use $expand=resourceTypes/aliases."
        in: query
        name: $expand
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderListResult'
          description: OK - Returns an array of resource providers.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Providers
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/:
    get:
      description: Get all the deployments for a subscription.
      operationId: Deployments_ListAtSubscriptionScope
      parameters:
      - description: "The filter to apply on the operation. For example, you can use\
          \ $filter=provisioningState eq '{state}'."
        in: query
        name: $filter
        schema:
          type: string
      - description: "The number of results to get. If null is passed, returns all\
          \ deployments."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
          description: OK - Returns an array of deployments.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-ms-odata: '#/definitions/DeploymentExtendedFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}:
    delete:
      description: "A template deployment that is currently running cannot be deleted.\
        \ Deleting a template deployment removes the associated deployment operations.\
        \ This is an asynchronous operation that returns a status of 202 until the\
        \ template deployment is successfully deleted. The Location response header\
        \ contains the URI that is used to obtain the status of the process. While\
        \ the process is running, a call to the URI in the Location header returns\
        \ a status of 202. When the process finishes, the URI in the Location header\
        \ returns a status of 204 on success. If the asynchronous request failed,\
        \ the URI in the Location header returns an error-level status code."
      operationId: Deployments_DeleteAtSubscriptionScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: Accepted - Returns this status until the asynchronous operation
            has completed.
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Deletes a deployment from the deployment history.
      tags:
      - Deployments
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets a deployment.
      operationId: Deployments_GetAtSubscriptionScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "OK - Returns information about the deployment, including provisioning\
            \ status."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
    head:
      description: Checks whether the deployment exists.
      operationId: Deployments_CheckExistenceAtSubscriptionScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content: {}
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
    put:
      description: You can provide the template and parameters directly in the request
        or link to JSON files.
      operationId: Deployments_CreateOrUpdateAtSubscriptionScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
        description: Additional parameters supplied to the operation.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "OK - Returns information about the deployment, including provisioning\
            \ status."
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "Created - Returns information about the deployment, including\
            \ provisioning status."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Deploys resources at subscription scope.
      tags:
      - Deployments
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel:
    post:
      description: "You can cancel a deployment only if the provisioningState is Accepted\
        \ or Running. After the deployment is canceled, the provisioningState is set\
        \ to Canceled. Canceling a template deployment stops the currently running\
        \ template deployment and leaves the resources partially deployed."
      operationId: Deployments_CancelAtSubscriptionScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Cancels a currently running template deployment.
      tags:
      - Deployments
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate:
    post:
      description: Exports the template used for specified deployment.
      operationId: Deployments_ExportTemplateAtSubscriptionScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExportResult'
          description: OK - Returns the template.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations:
    get:
      description: Gets all deployments operations for a deployment.
      operationId: DeploymentOperations_ListAtSubscriptionScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The number of results to return.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperationsListResult'
          description: OK - Return an array of deployment operations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - DeploymentOperations
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}:
    get:
      description: Gets a deployments operation.
      operationId: DeploymentOperations_GetAtSubscriptionScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The ID of the operation to get.
        in: path
        name: operationId
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperation'
          description: OK - Returns information about the deployment operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - DeploymentOperations
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate:
    post:
      description: Validates whether the specified template is syntactically correct
        and will be accepted by Azure Resource Manager..
      operationId: Deployments_ValidateAtSubscriptionScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
        description: Parameters to validate.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
          description: OK - Returns the validation result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
          description: Returns the validation result.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf:
    post:
      description: Returns changes that will be made by the deployment if executed
        at the scope of the subscription.
      operationId: Deployments_WhatIfAtSubscriptionScope
      parameters:
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentWhatIf'
        description: Parameters to What If.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatIfOperationResult'
          description: OK - Returns What-If operation status
        "202":
          content: {}
          description: Accepted - Returns URL in Location header to query for long-running
            operation status.
          headers:
            Retry-After:
              description: Number of seconds to wait before polling for status.
              schema:
                type: string
            Location:
              description: URL to get status of this long-running operation.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-ms-examples:
        Predict template changes at subscription scope:
          parameters:
            api-version: 2019-08-01
            deploymentName: exampleDeploymentName
            parameters:
              location: westus
              properties:
                mode: Incremental
                parameters: {}
                templateLink: https://example.com/exampleTemplate.json
            subscriptionId: 00000000-0000-0000-0000-000000000001
          responses:
            "200":
              body:
                properties:
                  changes:
                  - after:
                      apiVersion: 2018-11-30
                      id: /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myExistingIdentity
                      location: westus2
                      name: myExistingIdentity
                      tags:
                        myNewTag: my tag value
                      type: Microsoft.ManagedIdentity/userAssignedIdentities
                    before:
                      apiVersion: 2018-11-30
                      id: /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myExistingIdentity
                      location: westus2
                      name: myExistingIdentity
                      type: Microsoft.ManagedIdentity/userAssignedIdentities
                    changeType: Modify
                    delta:
                    - after: my tag value
                      path: tags.myNewTag
                      propertyChangeType: Create
                    resourceId: /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myExistingIdentity
                  - after:
                      apiVersion: 2018-11-30
                      id: /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myNewIdentity
                      location: eastus
                      name: myNewIdentity
                      tags:
                        myOtherNewTag: another new tag value
                      type: Microsoft.ManagedIdentity/userAssignedIdentities
                    changeType: Create
                    resourceId: /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myNewIdentity
                  - after:
                      apiVersion: 2019-03-01
                      id: /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/myResourceGroup2
                      location: "{location3}"
                      name: myResourceGroup2
                      type: Microsoft.Resources/resourceGroups
                    changeType: Create
                    resourceId: /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/myResourceGroup2
                status: succeeded
            "202":
              headers:
                Location: /subscriptions/4d0ca63b-7939-4c9c-afbe-5fafae501724/operationresults/ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}:
    get:
      description: Gets the specified resource provider.
      operationId: Providers_Get
      parameters:
      - description: "The $expand query parameter. For example, to include property\
          \ aliases in response, use $expand=resourceTypes/aliases."
        in: query
        name: $expand
        schema:
          type: string
      - description: The namespace of the resource provider.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: OK - Returns information about the resource provider.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Providers
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register:
    post:
      description: Registers a subscription with a resource provider.
      operationId: Providers_Register
      parameters:
      - description: The namespace of the resource provider to register.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: OK - Returns information about the resource provider.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Providers
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister:
    post:
      description: Unregisters a subscription from a resource provider.
      operationId: Providers_Unregister
      parameters:
      - description: The namespace of the resource provider to unregister.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: OK - Returns information about the resource provider.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Providers
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources:
    get:
      description: Get all the resources for a resource group.
      operationId: Resources_ListByResourceGroup
      parameters:
      - description: The resource group with the resources to get.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: "The filter to apply on the operation.<br><br>The properties\
          \ you can use for eq (equals) or ne (not equals) are: location, resourceType,\
          \ name, resourceGroup, identity, identity/principalId, plan, plan/publisher,\
          \ plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For\
          \ example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You\
          \ can use substringof(value, property) in the filter. The properties you\
          \ can use for substring are: name and resourceGroup.<br><br>For example,\
          \ to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo',\
          \ name)<br><br>You can link more than one substringof together by adding\
          \ and/or operators.<br><br>You can filter by tag names and values. For example,\
          \ to filter for a tag name and value, use $filter=tagName eq 'tag1' and\
          \ tagValue eq 'Value1'. When you filter by a tag name and value, the tags\
          \ for each resource are not returned in the results.<br><br>You can use\
          \ some properties together when filtering. The combinations you can use\
          \ are: substringof and/or resourceType, plan and plan/publisher and plan/name,\
          \ identity and identity/principalId."
        in: query
        name: $filter
        schema:
          type: string
      - description: "The $expand query parameter. You can expand createdTime and\
          \ changedTime. For example, to expand both properties, use $expand=changedTime,createdTime"
        in: query
        name: $expand
        schema:
          type: string
      - description: "The number of results to return. If null is passed, returns\
          \ all resources."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListResult'
          description: OK - Returns an array of resources
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - ResourceGroups
      x-ms-odata: '#/definitions/GenericResourceFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources:
    post:
      description: "The resources to move must be in the same source resource group.\
        \ The target resource group may be in a different subscription. When moving\
        \ resources, both the source group and the target group are locked for the\
        \ duration of the operation. Write and delete operations are blocked on the\
        \ groups until the move completes. "
      operationId: Resources_MoveResources
      parameters:
      - description: The name of the resource group containing the resources to move.
        in: path
        name: sourceResourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesMoveInfo'
        description: Parameters for moving resources.
        required: true
      responses:
        "202":
          content: {}
          description: Accepted
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Moves resources from one resource group to another resource group.
      tags:
      - Resources
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources:
    post:
      description: "This operation checks whether the specified resources can be moved\
        \ to the target. The resources to move must be in the same source resource\
        \ group. The target resource group may be in a different subscription. If\
        \ validation succeeds, it returns HTTP response code 204 (no content). If\
        \ validation fails, it returns HTTP response code 409 (Conflict) with an error\
        \ message. Retrieve the URL in the Location header value to check the result\
        \ of the long-running operation."
      operationId: Resources_ValidateMoveResources
      parameters:
      - description: The name of the resource group containing the resources to validate
          for move.
        in: path
        name: sourceResourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesMoveInfo'
        description: Parameters for moving resources.
        required: true
      responses:
        "202":
          content: {}
          description: Accepted
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Validates whether resources can be moved from one resource group to
        another resource group.
      tags:
      - Resources
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourcegroups:
    get:
      description: Gets all the resource groups for a subscription.
      operationId: ResourceGroups_List
      parameters:
      - description: "The filter to apply on the operation.<br><br>You can filter\
          \ by tag names and values. For example, to filter for a tag name and value,\
          \ use $filter=tagName eq 'tag1' and tagValue eq 'Value1'"
        in: query
        name: $filter
        schema:
          type: string
      - description: "The number of results to return. If null is passed, returns\
          \ all resource groups."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupListResult'
          description: OK - Returns an array of resource groups.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - ResourceGroups
      x-ms-odata: '#/definitions/ResourceGroupFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}:
    delete:
      description: "When you delete a resource group, all of its resources are also\
        \ deleted. Deleting a resource group deletes all of its template deployments\
        \ and currently stored operations."
      operationId: ResourceGroups_Delete
      parameters:
      - description: The name of the resource group to delete. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "202":
          content: {}
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Deletes a resource group.
      tags:
      - ResourceGroups
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets a resource group.
      operationId: ResourceGroups_Get
      parameters:
      - description: The name of the resource group to get. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroup'
          description: OK - Returns information about the resource group.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - ResourceGroups
      x-accepts:
      - application/json
    head:
      description: Checks whether a resource group exists.
      operationId: ResourceGroups_CheckExistence
      parameters:
      - description: The name of the resource group to check. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content: {}
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - ResourceGroups
      x-accepts:
      - application/json
    patch:
      description: "Resource groups can be updated through a simple PATCH operation\
        \ to a group address. The format of the request is the same as that for creating\
        \ a resource group. If a field is unspecified, the current value is retained."
      operationId: ResourceGroups_Update
      parameters:
      - description: The name of the resource group to update. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupPatchable'
        description: Parameters supplied to update a resource group.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroup'
          description: OK - Returns information about the resource group.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Updates a resource group.
      tags:
      - ResourceGroups
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Creates or updates a resource group.
      operationId: ResourceGroups_CreateOrUpdate
      parameters:
      - description: "The name of the resource group to create or update. Can include\
          \ alphanumeric, underscore, parentheses, hyphen, period (except at end),\
          \ and Unicode characters that match the allowed characters."
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroup'
        description: Parameters supplied to the create or update a resource group.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroup'
          description: OK - Returns information about the new resource group.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroup'
          description: Created - Returns information about the new resource group.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - ResourceGroups
      x-ms-examples:
        Create or update a resource group:
          parameters:
            api-version: 2019-08-01
            parameters:
              location: eastus
            resourceGroupName: myResourceGroup
            subscriptionId: "{subscription-id}"
          responses:
            "200":
              body:
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup"
                location: eastus
                name: myResourceGroup
                properties:
                  provisioningState: Succeeded
            "201":
              body:
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup"
                location: eastus
                name: myResourceGroup
                properties:
                  provisioningState: Succeeded
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations:
    get:
      description: Gets all deployments operations for a deployment.
      operationId: DeploymentOperations_List
      parameters:
      - description: The name of the resource group. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The number of results to return.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperationsListResult'
          description: OK - Return an array of deployment operations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - DeploymentOperations
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}:
    get:
      description: Gets a deployments operation.
      operationId: DeploymentOperations_Get
      parameters:
      - description: The name of the resource group. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The ID of the operation to get.
        in: path
        name: operationId
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperation'
          description: OK - Returns information about the deployment operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - DeploymentOperations
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate:
    post:
      description: Captures the specified resource group as a template.
      operationId: ResourceGroups_ExportTemplate
      parameters:
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          minLength: 1
          type: string
      - description: The name of the resource group. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          minLength: 1
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportTemplateRequest'
        description: Parameters for exporting the template.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupExportResult'
          description: OK - Returns the result of the export.
        "202":
          content: {}
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - ResourceGroups
      x-ms-examples:
        Export a resource group:
          parameters:
            api-version: 2019-08-01
            parameters:
              options: "IncludeParameterDefaultValue,IncludeComments"
              resources:
              - '*'
            resourceGroupName: myResourceGroup
            subscriptionId: eaee6a92-e973-4922-9471-3a0a6abf81cd
          responses:
            "200":
              body:
                error:
                  code: ExportTemplateCompletedWithErrors
                  details: []
                  message: Export template operation completed with errors. Some resources
                    were not exported. Please see details for more information.
                template:
                  $schema: https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#
                  contentVersion: 1.0.0.0
                  parameters:
                    myResourceType_myFirstResource_name:
                      defaultValue: myFirstResource
                      type: String
                    myResourceType_myFirstResource_secret:
                      type: SecureString
                    myResourceType_mySecondResource_name:
                      defaultValue: mySecondResource
                      type: String
                  resources:
                  - apiVersion: 2019-01-01
                    location: West US
                    name: "[parameters('myResourceType_myFirstResource_name')]"
                    properties:
                      secret: "[parameters('myResourceType_myFirstResource_secret')]"
                    type: My.RP/myResourceType
                  - apiVersion: 2019-01-01
                    location: West US
                    name: "[parameters('myResourceType_mySecondResource_name')]"
                    properties:
                      customProperty: hello!
                    type: My.RP/myResourceType
                  variables: {}
            "202":
              headers:
                location: https://management.azure.com/subscriptions/eaee6a92-e973-4922-9471-3a0a6abf81cd/operationresults/c9bbccf4-e16a-4eb7-befb-2e2e5195c347?api-version=2018-08-01
        Export a resource group with filtering:
          parameters:
            api-version: 2019-08-01
            parameters:
              options: SkipResourceNameParameterization
              resources:
              - /subscriptions/eaee6a92-e973-4922-9471-3a0a6abf81cd/resourceGroups/myResourceGroup/providers/My.RP/myResourceType/myFirstResource
            resourceGroupName: myResourceGroup
            subscriptionId: eaee6a92-e973-4922-9471-3a0a6abf81cd
          responses:
            "200":
              body:
                template:
                  $schema: https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#
                  contentVersion: 1.0.0.0
                  parameters:
                    myResourceType_myFirstResource_secret:
                      type: SecureString
                  resources:
                  - apiVersion: 2019-01-01
                    location: West US
                    name: myFirstResource
                    properties:
                      secret: "[parameters('myResourceType_myFirstResource_secret')]"
                    type: My.RP/myResourceType
                  variables: {}
            "202":
              headers:
                location: https://management.azure.com/subscriptions/eaee6a92-e973-4922-9471-3a0a6abf81cd/operationresults/c9bbccf4-e16a-4eb7-befb-2e2e5195c347?api-version=2018-08-01
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/:
    get:
      description: Get all the deployments for a resource group.
      operationId: Deployments_ListByResourceGroup
      parameters:
      - description: The name of the resource group with the deployments to get. The
          name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: "The filter to apply on the operation. For example, you can use\
          \ $filter=provisioningState eq '{state}'."
        in: query
        name: $filter
        schema:
          type: string
      - description: "The number of results to get. If null is passed, returns all\
          \ deployments."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
          description: OK - Returns an array of deployments.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-ms-odata: '#/definitions/DeploymentExtendedFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}:
    delete:
      description: "A template deployment that is currently running cannot be deleted.\
        \ Deleting a template deployment removes the associated deployment operations.\
        \ Deleting a template deployment does not affect the state of the resource\
        \ group. This is an asynchronous operation that returns a status of 202 until\
        \ the template deployment is successfully deleted. The Location response header\
        \ contains the URI that is used to obtain the status of the process. While\
        \ the process is running, a call to the URI in the Location header returns\
        \ a status of 202. When the process finishes, the URI in the Location header\
        \ returns a status of 204 on success. If the asynchronous request failed,\
        \ the URI in the Location header returns an error-level status code."
      operationId: Deployments_Delete
      parameters:
      - description: The name of the resource group with the deployment to delete.
          The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: Accepted - Returns this status until the asynchronous operation
            has completed.
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Deletes a deployment from the deployment history.
      tags:
      - Deployments
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets a deployment.
      operationId: Deployments_Get
      parameters:
      - description: The name of the resource group. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "OK - Returns information about the deployment, including provisioning\
            \ status."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
    head:
      description: Checks whether the deployment exists.
      operationId: Deployments_CheckExistence
      parameters:
      - description: The name of the resource group with the deployment to check.
          The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content: {}
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
    put:
      description: You can provide the template and parameters directly in the request
        or link to JSON files.
      operationId: Deployments_CreateOrUpdate
      parameters:
      - description: The name of the resource group to deploy the resources to. The
          name is case insensitive. The resource group must already exist.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
        description: Additional parameters supplied to the operation.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "OK - Returns information about the deployment, including provisioning\
            \ status."
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "Created - Returns information about the deployment, including\
            \ provisioning status."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Deploys resources to a resource group.
      tags:
      - Deployments
      x-ms-examples:
        Create a deployment that will redeploy another deployment on failure:
          parameters:
            api-version: 2019-08-01
            deploymentName: exampleDeploymentName
            parameters:
              properties:
                mode: Complete
                onErrorDeployment:
                  deploymentName: "{nameOfDeploymentToUse}"
                  type: SpecificDeployment
                parameters: {}
                templateLink: "{templateUri}"
            resourceGroupName: myResourceGroup
            subscriptionId: "{subscriptionId}"
          responses:
            "200":
              body:
                id: "/subscriptions/{subscriptionId}/resourcegroups/myResourceGroup/providers/Microsoft.Resources/deployments/exampleDeploymentName"
                name: exampleDeploymentName
                properties:
                  correlationId: "{correlationId}"
                  mode: Complete
                  onErrorDeployment:
                    deploymentName: "{nameOfDeploymentToUse}"
                    type: SpecificDeployment
                  provisioningState: Accepted
                  timestamp: 2019-03-01T00:00:00.0000000Z
                type: Microsoft.Resources/deployments
            "201":
              body:
                id: "/subscriptions/{subscriptionId}/resourcegroups/myResourceGroup/providers/Microsoft.Resources/deployments/exampleDeploymentName"
                name: exampleDeploymentName
                properties:
                  correlationId: "{correlationId}"
                  mode: Complete
                  onErrorDeployment:
                    deploymentName: "{nameOfDeploymentToUse}"
                    type: SpecificDeployment
                  provisioningState: Accepted
                  timestamp: 2019-03-01T00:00:00.0000000Z
                type: Microsoft.Resources/deployments
        Create a deployment that will redeploy the last successful deployment on failure:
          parameters:
            api-version: 2019-08-01
            deploymentName: exampleDeploymentName
            parameters:
              properties:
                mode: Complete
                onErrorDeployment:
                  type: LastSuccessful
                parameters: {}
                templateLink: "{templateUri}"
            resourceGroupName: myResourceGroup
            subscriptionId: "{subscriptionId}"
          responses:
            "200":
              body:
                id: "/subscriptions/{subscriptionId}/resourcegroups/myResourceGroup/providers/Microsoft.Resources/deployments/exampleDeploymentName"
                name: exampleDeploymentName
                properties:
                  correlationId: "{correlationId}"
                  mode: Complete
                  onErrorDeployment:
                    deploymentName: "{nameOfLastSuccesfulDeployment}"
                    type: LastSuccessful
                  provisioningState: Accepted
                  timestamp: 2019-03-01T00:00:00.0000000Z
                type: Microsoft.Resources/deployments
            "201":
              body:
                id: "/subscriptions/{subscriptionId}/resourcegroups/myResourceGroup/providers/Microsoft.Resources/deployments/exampleDeploymentName"
                name: exampleDeploymentName
                properties:
                  correlationId: "{correlationId}"
                  mode: Complete
                  onErrorDeployment:
                    deploymentName: "{nameOfLastSuccesfulDeployment}"
                    type: LastSuccessful
                  provisioningState: Accepted
                  timestamp: 2019-03-01T00:00:00.0000000Z
                type: Microsoft.Resources/deployments
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel
  : post:
      description: "You can cancel a deployment only if the provisioningState is Accepted\
        \ or Running. After the deployment is canceled, the provisioningState is set\
        \ to Canceled. Canceling a template deployment stops the currently running\
        \ template deployment and leaves the resource group partially deployed."
      operationId: Deployments_Cancel
      parameters:
      - description: The name of the resource group. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Cancels a currently running template deployment.
      tags:
      - Deployments
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate
  : post:
      description: Exports the template used for specified deployment.
      operationId: Deployments_ExportTemplate
      parameters:
      - description: The name of the resource group. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExportResult'
          description: OK - Returns the template.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate
  : post:
      description: Validates whether the specified template is syntactically correct
        and will be accepted by Azure Resource Manager..
      operationId: Deployments_Validate
      parameters:
      - description: The name of the resource group the template will be deployed
          to. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
        description: Parameters to validate.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
          description: OK - Returns the validation result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
          description: Returns the validation result.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf
  : post:
      description: Returns changes that will be made by the deployment if executed
        at the scope of the resource group.
      operationId: Deployments_WhatIf
      parameters:
      - description: The name of the resource group the template will be deployed
          to. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentWhatIf'
        description: Parameters to validate.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatIfOperationResult'
          description: OK - Returns What-If operation status
        "202":
          content: {}
          description: Accepted - Returns URL in Location header to query for long-running
            operation status.
          headers:
            Retry-After:
              description: Number of seconds to wait before polling for status.
              schema:
                type: string
            Location:
              description: URL to get status of this long-running operation.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-ms-examples:
        Predict template changes at resource group scope:
          parameters:
            api-version: 2019-08-01
            deploymentName: exampleDeploymentName
            parameters:
              properties:
                mode: Incremental
                parameters: {}
                templateLink: https://example.com/exampleTemplate.json
            resourceGroupName: myResourceGroup
            subscriptionId: 00000000-0000-0000-0000-000000000001
          responses:
            "200":
              body:
                properties:
                  changes:
                  - after:
                      apiVersion: 2018-11-30
                      id: /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myExistingIdentity
                      location: westus2
                      name: myExistingIdentity
                      tags:
                        myNewTag: my tag value
                      type: Microsoft.ManagedIdentity/userAssignedIdentities
                    before:
                      apiVersion: 2018-11-30
                      id: /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myExistingIdentity
                      location: westus2
                      name: myExistingIdentity
                      type: Microsoft.ManagedIdentity/userAssignedIdentities
                    changeType: Modify
                    delta:
                    - after: my tag value
                      path: tags.myNewTag
                      propertyChangeType: Create
                    resourceId: /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myExistingIdentity
                  - after:
                      apiVersion: 2018-11-30
                      id: /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myNewIdentity
                      location: eastus
                      name: myNewIdentity
                      tags:
                        myOtherNewTag: another new tag value
                      type: Microsoft.ManagedIdentity/userAssignedIdentities
                    changeType: Create
                    resourceId: /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myNewIdentity
                status: succeeded
            "202":
              headers:
                Location: /subscriptions/4d0ca63b-7939-4c9c-afbe-5fafae501724/operationresults/ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}
  : delete:
      description: Deletes a resource.
      operationId: Resources_Delete
      parameters:
      - description: The name of the resource group that contains the resource to
          delete. The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The namespace of the resource provider.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The parent resource identity.
        in: path
        name: parentResourcePath
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The resource type.
        in: path
        name: resourceType
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the resource to delete.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "202":
          content: {}
          description: Accepted
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Resources
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets a resource.
      operationId: Resources_Get
      parameters:
      - description: The name of the resource group containing the resource to get.
          The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The namespace of the resource provider.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The parent resource identity.
        in: path
        name: parentResourcePath
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The resource type of the resource.
        in: path
        name: resourceType
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the resource to get.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
          description: OK - Returns information about the resource.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Resources
      x-accepts:
      - application/json
    head:
      description: Checks whether a resource exists.
      operationId: Resources_CheckExistence
      parameters:
      - description: The name of the resource group containing the resource to check.
          The name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The resource provider of the resource to check.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The parent resource identity.
        in: path
        name: parentResourcePath
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The resource type.
        in: path
        name: resourceType
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the resource to check whether it exists.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content: {}
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Resources
      x-accepts:
      - application/json
    patch:
      description: Updates a resource.
      operationId: Resources_Update
      parameters:
      - description: The name of the resource group for the resource. The name is
          case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The namespace of the resource provider.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The parent resource identity.
        in: path
        name: parentResourcePath
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The resource type of the resource to update.
        in: path
        name: resourceType
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the resource to update.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericResource'
        description: Parameters for updating the resource.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
          description: OK - Returns information about the resource.
        "202":
          content: {}
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Resources
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Creates a resource.
      operationId: Resources_CreateOrUpdate
      parameters:
      - description: The name of the resource group for the resource. The name is
          case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          maxLength: 90
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
      - description: The namespace of the resource provider.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The parent resource identity.
        in: path
        name: parentResourcePath
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The resource type of the resource to create.
        in: path
        name: resourceType
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the resource to create.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericResource'
        description: Parameters for creating or updating the resource.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
          description: OK - Returns information about the resource.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
          description: Created - Returns information about the resource.
        "202":
          content: {}
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Resources
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resources:
    get:
      description: Get all the resources in a subscription.
      operationId: Resources_List
      parameters:
      - description: "The filter to apply on the operation.<br><br>The properties\
          \ you can use for eq (equals) or ne (not equals) are: location, resourceType,\
          \ name, resourceGroup, identity, identity/principalId, plan, plan/publisher,\
          \ plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For\
          \ example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You\
          \ can use substringof(value, property) in the filter. The properties you\
          \ can use for substring are: name and resourceGroup.<br><br>For example,\
          \ to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo',\
          \ name)<br><br>You can link more than one substringof together by adding\
          \ and/or operators.<br><br>You can filter by tag names and values. For example,\
          \ to filter for a tag name and value, use $filter=tagName eq 'tag1' and\
          \ tagValue eq 'Value1'. When you filter by a tag name and value, the tags\
          \ for each resource are not returned in the results.<br><br>You can use\
          \ some properties together when filtering. The combinations you can use\
          \ are: substringof and/or resourceType, plan and plan/publisher and plan/name,\
          \ identity and identity/principalId."
        in: query
        name: $filter
        schema:
          type: string
      - description: "The $expand query parameter. You can expand createdTime and\
          \ changedTime. For example, to expand both properties, use $expand=changedTime,createdTime"
        in: query
        name: $expand
        schema:
          type: string
      - description: "The number of results to return. If null is passed, returns\
          \ all resource groups."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListResult'
          description: OK - Returns an array of resources.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Resources
      x-ms-odata: '#/definitions/GenericResourceFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/tagNames:
    get:
      description: Gets the names and values of all resource tags that are defined
        in a subscription.
      operationId: Tags_List
      parameters:
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsListResult'
          description: OK - Returns an array of tag names and values.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Tags
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/tagNames/{tagName}:
    delete:
      description: You must remove all values from a resource tag before you can delete
        it.
      operationId: Tags_Delete
      parameters:
      - description: The name of the tag.
        in: path
        name: tagName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Deletes a tag from the subscription.
      tags:
      - Tags
      x-accepts:
      - application/json
    put:
      description: "The tag name can have a maximum of 512 characters and is case\
        \ insensitive. Tag names created by Azure have prefixes of microsoft, azure,\
        \ or windows. You cannot create tags with one of these prefixes."
      operationId: Tags_CreateOrUpdate
      parameters:
      - description: The name of the tag to create.
        in: path
        name: tagName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDetails'
          description: OK - Returns information about the tag.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDetails'
          description: Created - Returns information about the tag.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Creates a tag in the subscription.
      tags:
      - Tags
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}:
    delete:
      description: Deletes a tag value.
      operationId: Tags_DeleteValue
      parameters:
      - description: The name of the tag.
        in: path
        name: tagName
        required: true
        schema:
          type: string
      - description: The value of the tag to delete.
        in: path
        name: tagValue
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Tags
      x-accepts:
      - application/json
    put:
      description: Creates a tag value. The name of the tag must already exist.
      operationId: Tags_CreateOrUpdateValue
      parameters:
      - description: The name of the tag.
        in: path
        name: tagName
        required: true
        schema:
          type: string
      - description: The value of the tag to create.
        in: path
        name: tagValue
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagValue'
          description: OK - Returns information about the tag value.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagValue'
          description: Created - Returns information about the tag value.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Tags
      x-accepts:
      - application/json
  /{resourceId}:
    delete:
      description: Deletes a resource by ID.
      operationId: Resources_DeleteById
      parameters:
      - description: "The fully qualified ID of the resource, including the resource\
          \ name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        in: path
        name: resourceId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "202":
          content: {}
          description: Accepted
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Resources
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets a resource by ID.
      operationId: Resources_GetById
      parameters:
      - description: "The fully qualified ID of the resource, including the resource\
          \ name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        in: path
        name: resourceId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
          description: OK - Returns information about the resource.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Resources
      x-accepts:
      - application/json
    head:
      description: Checks by ID whether a resource exists.
      operationId: Resources_CheckExistenceById
      parameters:
      - description: "The fully qualified ID of the resource, including the resource\
          \ name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        in: path
        name: resourceId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content: {}
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Resources
      x-accepts:
      - application/json
    patch:
      description: Updates a resource by ID.
      operationId: Resources_UpdateById
      parameters:
      - description: "The fully qualified ID of the resource, including the resource\
          \ name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        in: path
        name: resourceId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericResource'
        description: Update resource parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
          description: OK - Returns information about the resource.
        "202":
          content: {}
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Resources
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Create a resource by ID.
      operationId: Resources_CreateOrUpdateById
      parameters:
      - description: "The fully qualified ID of the resource, including the resource\
          \ name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        in: path
        name: resourceId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericResource'
        description: Create or update resource parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
          description: OK - Returns information about the resource.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
          description: Created - Returns information about the resource.
        "202":
          content: {}
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Resources
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /{scope}/providers/Microsoft.Resources/deployments/:
    get:
      description: Get all the deployments at the given scope.
      operationId: Deployments_ListAtScope
      parameters:
      - description: The scope of a deployment.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The filter to apply on the operation. For example, you can use\
          \ $filter=provisioningState eq '{state}'."
        in: query
        name: $filter
        schema:
          type: string
      - description: "The number of results to get. If null is passed, returns all\
          \ deployments."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
          description: OK - Returns an array of deployments.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-ms-odata: '#/definitions/DeploymentExtendedFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}:
    delete:
      description: "A template deployment that is currently running cannot be deleted.\
        \ Deleting a template deployment removes the associated deployment operations.\
        \ This is an asynchronous operation that returns a status of 202 until the\
        \ template deployment is successfully deleted. The Location response header\
        \ contains the URI that is used to obtain the status of the process. While\
        \ the process is running, a call to the URI in the Location header returns\
        \ a status of 202. When the process finishes, the URI in the Location header\
        \ returns a status of 204 on success. If the asynchronous request failed,\
        \ the URI in the Location header returns an error-level status code."
      operationId: Deployments_DeleteAtScope
      parameters:
      - description: The scope of a deployment.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: Accepted - Returns this status until the asynchronous operation
            has completed.
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Deletes a deployment from the deployment history.
      tags:
      - Deployments
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets a deployment.
      operationId: Deployments_GetAtScope
      parameters:
      - description: The scope of a deployment.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "OK - Returns information about the deployment, including provisioning\
            \ status."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
    head:
      description: Checks whether the deployment exists.
      operationId: Deployments_CheckExistenceAtScope
      parameters:
      - description: The scope of a deployment.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content: {}
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
    put:
      description: You can provide the template and parameters directly in the request
        or link to JSON files.
      operationId: Deployments_CreateOrUpdateAtScope
      parameters:
      - description: The scope of a deployment.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
        description: Additional parameters supplied to the operation.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "OK - Returns information about the deployment, including provisioning\
            \ status."
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
          description: "Created - Returns information about the deployment, including\
            \ provisioning status."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Deploys resources at a given scope.
      tags:
      - Deployments
      x-ms-examples:
        Create deployment at a given scope.:
          parameters:
            api-version: 2019-08-01
            deploymentName: mg-dep01
            parameters:
              location: eastus
              properties:
                mode: Incremental
                parameters: {}
                templateLink: "{templateUri}"
            scope: providers/Microsoft.Management/managementGroups/tiano-group1
          responses:
            "200":
              body:
                id: /providers/Microsoft.Management/managementGroups/tiano-group1/providers/Microsoft.Resources/deployments/mg-dep01
                location: eastus
                name: mg-dep01
                properties:
                  correlationId: "{correlationId}"
                  dependencies:
                  - dependsOn:
                    - id: /providers/Microsoft.Management/managementGroups/tiano-group1/providers/Microsoft.Authorization/policyDefinitions/policy2
                      resourceName: policy2
                      resourceType: Microsoft.Authorization/policyDefinitions
                    id: /providers/Microsoft.Management/managementGroups/tiano-group1/providers/Microsoft.Authorization/policyAssignments/location-lock
                    resourceName: location-lock
                    resourceType: Microsoft.Authorization/policyAssignments
                  duration: PT1.2970875S
                  mode: Incremental
                  parameters: {}
                  providers:
                  - namespace: Microsoft.Authorization
                    resourceTypes:
                    - locations:
                      - null
                      resourceType: policyDefinitions
                    - locations:
                      - null
                      resourceType: policyAssignments
                  - namespace: Microsoft.Resources
                    resourceTypes:
                    - locations:
                      - eastus
                      resourceType: deployments
                  provisioningState: Accepted
                  timestamp: 2019-04-24T22:52:38.7895563Z
                type: Microsoft.Resources/deployments
            "201":
              body:
                id: /providers/Microsoft.Management/managementGroups/tiano-group1/providers/Microsoft.Resources/deployments/mg-dep01
                location: eastus
                name: mg-dep01
                properties:
                  correlationId: "{correlationId}"
                  dependencies:
                  - dependsOn:
                    - id: /providers/Microsoft.Management/managementGroups/tiano-group1/providers/Microsoft.Authorization/policyDefinitions/policy2
                      resourceName: policy2
                      resourceType: Microsoft.Authorization/policyDefinitions
                    id: /providers/Microsoft.Management/managementGroups/tiano-group1/providers/Microsoft.Authorization/policyAssignments/location-lock
                    resourceName: location-lock
                    resourceType: Microsoft.Authorization/policyAssignments
                  duration: PT1.2970875S
                  mode: Incremental
                  parameters: {}
                  providers:
                  - namespace: Microsoft.Authorization
                    resourceTypes:
                    - locations:
                      - null
                      resourceType: policyDefinitions
                    - locations:
                      - null
                      resourceType: policyAssignments
                  - namespace: Microsoft.Resources
                    resourceTypes:
                    - locations:
                      - eastus
                      resourceType: deployments
                  provisioningState: Accepted
                  timestamp: 2019-04-24T22:52:38.7895563Z
                type: Microsoft.Resources/deployments
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel:
    post:
      description: "You can cancel a deployment only if the provisioningState is Accepted\
        \ or Running. After the deployment is canceled, the provisioningState is set\
        \ to Canceled. Canceling a template deployment stops the currently running\
        \ template deployment and leaves the resources partially deployed."
      operationId: Deployments_CancelAtScope
      parameters:
      - description: The scope of a deployment.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      summary: Cancels a currently running template deployment.
      tags:
      - Deployments
      x-accepts:
      - application/json
  /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate:
    post:
      description: Exports the template used for specified deployment.
      operationId: Deployments_ExportTemplateAtScope
      parameters:
      - description: The scope of a deployment.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExportResult'
          description: OK - Returns the template.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-accepts:
      - application/json
  /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations:
    get:
      description: Gets all deployments operations for a deployment.
      operationId: DeploymentOperations_ListAtScope
      parameters:
      - description: The scope of a deployment.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The number of results to return.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperationsListResult'
          description: OK - Return an array of deployment operations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - DeploymentOperations
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}:
    get:
      description: Gets a deployments operation.
      operationId: DeploymentOperations_GetAtScope
      parameters:
      - description: The scope of a deployment.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The ID of the operation to get.
        in: path
        name: operationId
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperation'
          description: OK - Returns information about the deployment operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - DeploymentOperations
      x-accepts:
      - application/json
  /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate:
    post:
      description: Validates whether the specified template is syntactically correct
        and will be accepted by Azure Resource Manager..
      operationId: Deployments_ValidateAtScope
      parameters:
      - description: The scope of a deployment.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[-\\w\\._\\(\\)]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
        description: Parameters to validate.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
          description: OK - Returns the validation result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
          description: Returns the validation result.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
      - Deployments
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    ApiVersionParameter:
      description: The API version to use for this operation.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    DeploymentNameParameter:
      description: The name of the deployment.
      in: path
      name: deploymentName
      required: true
      schema:
        maxLength: 64
        minLength: 1
        pattern: "^[-\\w\\._\\(\\)]+$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    GroupIdParameter:
      description: The management group ID.
      in: path
      name: groupId
      required: true
      schema:
        maxLength: 90
        minLength: 1
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ScopeParameter:
      description: The scope of a deployment.
      in: path
      name: scope
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: The ID of the target subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    AliasPathType:
      description: 'The type of the paths for alias. '
      example:
        path: path
        apiVersions:
        - apiVersions
        - apiVersions
      properties:
        apiVersions:
          description: The API versions.
          items:
            type: string
          type: array
        path:
          description: The path of an alias.
          type: string
      type: object
    AliasType:
      description: 'The alias type. '
      example:
        paths:
        - path: path
          apiVersions:
          - apiVersions
          - apiVersions
        - path: path
          apiVersions:
          - apiVersions
          - apiVersions
        name: name
      properties:
        name:
          description: The alias name.
          type: string
        paths:
          description: The paths for an alias.
          items:
            $ref: '#/components/schemas/AliasPathType'
          type: array
      type: object
    BasicDependency:
      description: Deployment dependency information.
      example:
        resourceName: resourceName
        id: id
        resourceType: resourceType
      properties:
        id:
          description: The ID of the dependency.
          type: string
        resourceName:
          description: The dependency resource name.
          type: string
        resourceType:
          description: The dependency resource type.
          type: string
      type: object
    CloudError:
      description: An error response for a resource management request.
      example:
        error:
          code: code
          additionalInfo:
          - type: type
            info: "{}"
          - type: type
            info: "{}"
          details:
          - null
          - null
          message: message
          target: target
      properties:
        error:
          $ref: '#/components/schemas/CloudError_error'
      type: object
      x-ms-external: true
    DebugSetting:
      description: The debug setting.
      example:
        detailLevel: detailLevel
      properties:
        detailLevel:
          description: "Specifies the type of information to log for debugging. The\
            \ permitted values are none, requestContent, responseContent, or both\
            \ requestContent and responseContent separated by a comma. The default\
            \ is none. When setting this value, carefully consider the type of information\
            \ you are passing in during deployment. By logging information about the\
            \ request or response, you could potentially expose sensitive data that\
            \ is retrieved through the deployment operations."
          type: string
      type: object
    Dependency:
      description: Deployment dependency information.
      example:
        dependsOn:
        - resourceName: resourceName
          id: id
          resourceType: resourceType
        - resourceName: resourceName
          id: id
          resourceType: resourceType
        resourceName: resourceName
        id: id
        resourceType: resourceType
      properties:
        dependsOn:
          description: The list of dependencies.
          items:
            $ref: '#/components/schemas/BasicDependency'
          type: array
        id:
          description: The ID of the dependency.
          type: string
        resourceName:
          description: The dependency resource name.
          type: string
        resourceType:
          description: The dependency resource type.
          type: string
      type: object
    Deployment:
      description: Deployment operation parameters.
      example:
        location: location
        properties:
          mode: Incremental
          parametersLink:
            contentVersion: contentVersion
            uri: uri
          template: "{}"
          onErrorDeployment:
            deploymentName: deploymentName
            type: LastSuccessful
          templateLink:
            contentVersion: contentVersion
            uri: uri
          parameters: "{}"
          debugSetting:
            detailLevel: detailLevel
      properties:
        location:
          description: The location to store the deployment data.
          type: string
        properties:
          $ref: '#/components/schemas/DeploymentProperties'
      required:
      - properties
      type: object
    DeploymentExportResult:
      description: 'The deployment export result. '
      example:
        template: "{}"
      properties:
        template:
          description: The template content.
          properties: {}
          type: object
      type: object
    DeploymentExtended:
      description: Deployment information.
      example:
        name: name
        location: location
        id: id
        type: type
        properties:
          outputs: "{}"
          template: "{}"
          templateLink:
            contentVersion: contentVersion
            uri: uri
          provisioningState: provisioningState
          debugSetting:
            detailLevel: detailLevel
          dependencies:
          - dependsOn:
            - resourceName: resourceName
              id: id
              resourceType: resourceType
            - resourceName: resourceName
              id: id
              resourceType: resourceType
            resourceName: resourceName
            id: id
            resourceType: resourceType
          - dependsOn:
            - resourceName: resourceName
              id: id
              resourceType: resourceType
            - resourceName: resourceName
              id: id
              resourceType: resourceType
            resourceName: resourceName
            id: id
            resourceType: resourceType
          duration: duration
          mode: Incremental
          parametersLink:
            contentVersion: contentVersion
            uri: uri
          onErrorDeployment:
            deploymentName: deploymentName
            provisioningState: provisioningState
            type: LastSuccessful
          correlationId: correlationId
          parameters: "{}"
          providers:
          - resourceTypes:
            - aliases:
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              capabilities: capabilities
              apiVersions:
              - apiVersions
              - apiVersions
              locations:
              - locations
              - locations
              properties:
                key: properties
              resourceType: resourceType
            - aliases:
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              capabilities: capabilities
              apiVersions:
              - apiVersions
              - apiVersions
              locations:
              - locations
              - locations
              properties:
                key: properties
              resourceType: resourceType
            registrationPolicy: registrationPolicy
            namespace: namespace
            id: id
            registrationState: registrationState
          - resourceTypes:
            - aliases:
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              capabilities: capabilities
              apiVersions:
              - apiVersions
              - apiVersions
              locations:
              - locations
              - locations
              properties:
                key: properties
              resourceType: resourceType
            - aliases:
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              capabilities: capabilities
              apiVersions:
              - apiVersions
              - apiVersions
              locations:
              - locations
              - locations
              properties:
                key: properties
              resourceType: resourceType
            registrationPolicy: registrationPolicy
            namespace: namespace
            id: id
            registrationState: registrationState
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The ID of the deployment.
          readOnly: true
          type: string
        location:
          description: the location of the deployment.
          type: string
        name:
          description: The name of the deployment.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/DeploymentPropertiesExtended'
        type:
          description: The type of the deployment.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    DeploymentExtendedFilter:
      description: Deployment filter.
      properties:
        provisioningState:
          description: The provisioning state.
          type: string
      type: object
    DeploymentListResult:
      description: List of deployments.
      example:
        value:
        - name: name
          location: location
          id: id
          type: type
          properties:
            outputs: "{}"
            template: "{}"
            templateLink:
              contentVersion: contentVersion
              uri: uri
            provisioningState: provisioningState
            debugSetting:
              detailLevel: detailLevel
            dependencies:
            - dependsOn:
              - resourceName: resourceName
                id: id
                resourceType: resourceType
              - resourceName: resourceName
                id: id
                resourceType: resourceType
              resourceName: resourceName
              id: id
              resourceType: resourceType
            - dependsOn:
              - resourceName: resourceName
                id: id
                resourceType: resourceType
              - resourceName: resourceName
                id: id
                resourceType: resourceType
              resourceName: resourceName
              id: id
              resourceType: resourceType
            duration: duration
            mode: Incremental
            parametersLink:
              contentVersion: contentVersion
              uri: uri
            onErrorDeployment:
              deploymentName: deploymentName
              provisioningState: provisioningState
              type: LastSuccessful
            correlationId: correlationId
            parameters: "{}"
            providers:
            - resourceTypes:
              - aliases:
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                capabilities: capabilities
                apiVersions:
                - apiVersions
                - apiVersions
                locations:
                - locations
                - locations
                properties:
                  key: properties
                resourceType: resourceType
              - aliases:
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                capabilities: capabilities
                apiVersions:
                - apiVersions
                - apiVersions
                locations:
                - locations
                - locations
                properties:
                  key: properties
                resourceType: resourceType
              registrationPolicy: registrationPolicy
              namespace: namespace
              id: id
              registrationState: registrationState
            - resourceTypes:
              - aliases:
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                capabilities: capabilities
                apiVersions:
                - apiVersions
                - apiVersions
                locations:
                - locations
                - locations
                properties:
                  key: properties
                resourceType: resourceType
              - aliases:
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                capabilities: capabilities
                apiVersions:
                - apiVersions
                - apiVersions
                locations:
                - locations
                - locations
                properties:
                  key: properties
                resourceType: resourceType
              registrationPolicy: registrationPolicy
              namespace: namespace
              id: id
              registrationState: registrationState
            timestamp: 2000-01-23T04:56:07.000+00:00
        - name: name
          location: location
          id: id
          type: type
          properties:
            outputs: "{}"
            template: "{}"
            templateLink:
              contentVersion: contentVersion
              uri: uri
            provisioningState: provisioningState
            debugSetting:
              detailLevel: detailLevel
            dependencies:
            - dependsOn:
              - resourceName: resourceName
                id: id
                resourceType: resourceType
              - resourceName: resourceName
                id: id
                resourceType: resourceType
              resourceName: resourceName
              id: id
              resourceType: resourceType
            - dependsOn:
              - resourceName: resourceName
                id: id
                resourceType: resourceType
              - resourceName: resourceName
                id: id
                resourceType: resourceType
              resourceName: resourceName
              id: id
              resourceType: resourceType
            duration: duration
            mode: Incremental
            parametersLink:
              contentVersion: contentVersion
              uri: uri
            onErrorDeployment:
              deploymentName: deploymentName
              provisioningState: provisioningState
              type: LastSuccessful
            correlationId: correlationId
            parameters: "{}"
            providers:
            - resourceTypes:
              - aliases:
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                capabilities: capabilities
                apiVersions:
                - apiVersions
                - apiVersions
                locations:
                - locations
                - locations
                properties:
                  key: properties
                resourceType: resourceType
              - aliases:
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                capabilities: capabilities
                apiVersions:
                - apiVersions
                - apiVersions
                locations:
                - locations
                - locations
                properties:
                  key: properties
                resourceType: resourceType
              registrationPolicy: registrationPolicy
              namespace: namespace
              id: id
              registrationState: registrationState
            - resourceTypes:
              - aliases:
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                capabilities: capabilities
                apiVersions:
                - apiVersions
                - apiVersions
                locations:
                - locations
                - locations
                properties:
                  key: properties
                resourceType: resourceType
              - aliases:
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                - paths:
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  - path: path
                    apiVersions:
                    - apiVersions
                    - apiVersions
                  name: name
                capabilities: capabilities
                apiVersions:
                - apiVersions
                - apiVersions
                locations:
                - locations
                - locations
                properties:
                  key: properties
                resourceType: resourceType
              registrationPolicy: registrationPolicy
              namespace: namespace
              id: id
              registrationState: registrationState
            timestamp: 2000-01-23T04:56:07.000+00:00
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          readOnly: true
          type: string
        value:
          description: An array of deployments.
          items:
            $ref: '#/components/schemas/DeploymentExtended'
          type: array
      type: object
    DeploymentOperation:
      description: Deployment operation information.
      example:
        operationId: operationId
        id: id
        properties:
          duration: duration
          request:
            content: "{}"
          serviceRequestId: serviceRequestId
          response:
            content: "{}"
          targetResource:
            resourceName: resourceName
            id: id
            resourceType: resourceType
          provisioningState: provisioningState
          statusMessage: "{}"
          statusCode: statusCode
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Full deployment operation ID.
          readOnly: true
          type: string
        operationId:
          description: Deployment operation ID.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/DeploymentOperationProperties'
      type: object
    DeploymentOperationProperties:
      description: Deployment operation properties.
      example:
        duration: duration
        request:
          content: "{}"
        serviceRequestId: serviceRequestId
        response:
          content: "{}"
        targetResource:
          resourceName: resourceName
          id: id
          resourceType: resourceType
        provisioningState: provisioningState
        statusMessage: "{}"
        statusCode: statusCode
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        duration:
          description: The duration of the operation.
          readOnly: true
          type: string
        provisioningState:
          description: The state of the provisioning.
          readOnly: true
          type: string
        request:
          $ref: '#/components/schemas/HttpMessage'
        response:
          $ref: '#/components/schemas/HttpMessage'
        serviceRequestId:
          description: Deployment operation service request id.
          readOnly: true
          type: string
        statusCode:
          description: Operation status code.
          readOnly: true
          type: string
        statusMessage:
          description: Operation status message.
          properties: {}
          readOnly: true
          type: object
        targetResource:
          $ref: '#/components/schemas/TargetResource'
        timestamp:
          description: The date and time of the operation.
          format: date-time
          readOnly: true
          type: string
      type: object
    DeploymentOperationsListResult:
      description: List of deployment operations.
      example:
        value:
        - operationId: operationId
          id: id
          properties:
            duration: duration
            request:
              content: "{}"
            serviceRequestId: serviceRequestId
            response:
              content: "{}"
            targetResource:
              resourceName: resourceName
              id: id
              resourceType: resourceType
            provisioningState: provisioningState
            statusMessage: "{}"
            statusCode: statusCode
            timestamp: 2000-01-23T04:56:07.000+00:00
        - operationId: operationId
          id: id
          properties:
            duration: duration
            request:
              content: "{}"
            serviceRequestId: serviceRequestId
            response:
              content: "{}"
            targetResource:
              resourceName: resourceName
              id: id
              resourceType: resourceType
            provisioningState: provisioningState
            statusMessage: "{}"
            statusCode: statusCode
            timestamp: 2000-01-23T04:56:07.000+00:00
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          readOnly: true
          type: string
        value:
          description: An array of deployment operations.
          items:
            $ref: '#/components/schemas/DeploymentOperation'
          type: array
      type: object
    DeploymentProperties:
      description: Deployment properties.
      example:
        mode: Incremental
        parametersLink:
          contentVersion: contentVersion
          uri: uri
        template: "{}"
        onErrorDeployment:
          deploymentName: deploymentName
          type: LastSuccessful
        templateLink:
          contentVersion: contentVersion
          uri: uri
        parameters: "{}"
        debugSetting:
          detailLevel: detailLevel
      properties:
        debugSetting:
          $ref: '#/components/schemas/DebugSetting'
        mode:
          description: "The mode that is used to deploy resources. This value can\
            \ be either Incremental or Complete. In Incremental mode, resources are\
            \ deployed without deleting existing resources that are not included in\
            \ the template. In Complete mode, resources are deployed and existing\
            \ resources in the resource group that are not included in the template\
            \ are deleted. Be careful when using Complete mode as you may unintentionally\
            \ delete resources."
          enum:
          - Incremental
          - Complete
          type: string
          x-ms-enum:
            modelAsString: false
            name: DeploymentMode
        onErrorDeployment:
          $ref: '#/components/schemas/OnErrorDeployment'
        parameters:
          description: "Name and value pairs that define the deployment parameters\
            \ for the template. You use this element when you want to provide the\
            \ parameter values directly in the request rather than link to an existing\
            \ parameter file. Use either the parametersLink property or the parameters\
            \ property, but not both. It can be a JObject or a well formed JSON string."
          properties: {}
          type: object
        parametersLink:
          $ref: '#/components/schemas/ParametersLink'
        template:
          description: "The template content. You use this element when you want to\
            \ pass the template syntax directly in the request rather than link to\
            \ an existing template. It can be a JObject or well-formed JSON string.\
            \ Use either the templateLink property or the template property, but not\
            \ both."
          properties: {}
          type: object
        templateLink:
          $ref: '#/components/schemas/TemplateLink'
      required:
      - mode
      type: object
    DeploymentPropertiesExtended:
      description: Deployment properties with additional details.
      example:
        outputs: "{}"
        template: "{}"
        templateLink:
          contentVersion: contentVersion
          uri: uri
        provisioningState: provisioningState
        debugSetting:
          detailLevel: detailLevel
        dependencies:
        - dependsOn:
          - resourceName: resourceName
            id: id
            resourceType: resourceType
          - resourceName: resourceName
            id: id
            resourceType: resourceType
          resourceName: resourceName
          id: id
          resourceType: resourceType
        - dependsOn:
          - resourceName: resourceName
            id: id
            resourceType: resourceType
          - resourceName: resourceName
            id: id
            resourceType: resourceType
          resourceName: resourceName
          id: id
          resourceType: resourceType
        duration: duration
        mode: Incremental
        parametersLink:
          contentVersion: contentVersion
          uri: uri
        onErrorDeployment:
          deploymentName: deploymentName
          provisioningState: provisioningState
          type: LastSuccessful
        correlationId: correlationId
        parameters: "{}"
        providers:
        - resourceTypes:
          - aliases:
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            capabilities: capabilities
            apiVersions:
            - apiVersions
            - apiVersions
            locations:
            - locations
            - locations
            properties:
              key: properties
            resourceType: resourceType
          - aliases:
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            capabilities: capabilities
            apiVersions:
            - apiVersions
            - apiVersions
            locations:
            - locations
            - locations
            properties:
              key: properties
            resourceType: resourceType
          registrationPolicy: registrationPolicy
          namespace: namespace
          id: id
          registrationState: registrationState
        - resourceTypes:
          - aliases:
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            capabilities: capabilities
            apiVersions:
            - apiVersions
            - apiVersions
            locations:
            - locations
            - locations
            properties:
              key: properties
            resourceType: resourceType
          - aliases:
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            capabilities: capabilities
            apiVersions:
            - apiVersions
            - apiVersions
            locations:
            - locations
            - locations
            properties:
              key: properties
            resourceType: resourceType
          registrationPolicy: registrationPolicy
          namespace: namespace
          id: id
          registrationState: registrationState
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        correlationId:
          description: The correlation ID of the deployment.
          readOnly: true
          type: string
        debugSetting:
          $ref: '#/components/schemas/DebugSetting'
        dependencies:
          description: The list of deployment dependencies.
          items:
            $ref: '#/components/schemas/Dependency'
          type: array
        duration:
          description: The duration of the template deployment.
          readOnly: true
          type: string
        mode:
          description: The deployment mode. Possible values are Incremental and Complete.
          enum:
          - Incremental
          - Complete
          type: string
          x-ms-enum:
            modelAsString: false
            name: DeploymentMode
        onErrorDeployment:
          $ref: '#/components/schemas/OnErrorDeploymentExtended'
        outputs:
          description: Key/value pairs that represent deployment output.
          properties: {}
          type: object
        parameters:
          description: Deployment parameters. Use only one of Parameters or ParametersLink.
          properties: {}
          type: object
        parametersLink:
          $ref: '#/components/schemas/ParametersLink'
        providers:
          description: The list of resource providers needed for the deployment.
          items:
            $ref: '#/components/schemas/Provider'
          type: array
        provisioningState:
          description: The state of the provisioning.
          readOnly: true
          type: string
        template:
          description: The template content. Use only one of Template or TemplateLink.
          properties: {}
          type: object
        templateLink:
          $ref: '#/components/schemas/TemplateLink'
        timestamp:
          description: The timestamp of the template deployment.
          format: date-time
          readOnly: true
          type: string
      type: object
    DeploymentValidateResult:
      description: Information from validate template deployment response.
      example:
        error:
          code: code
          additionalInfo:
          - type: type
            info: "{}"
          - type: type
            info: "{}"
          details:
          - null
          - null
          message: message
          target: target
        properties:
          outputs: "{}"
          template: "{}"
          templateLink:
            contentVersion: contentVersion
            uri: uri
          provisioningState: provisioningState
          debugSetting:
            detailLevel: detailLevel
          dependencies:
          - dependsOn:
            - resourceName: resourceName
              id: id
              resourceType: resourceType
            - resourceName: resourceName
              id: id
              resourceType: resourceType
            resourceName: resourceName
            id: id
            resourceType: resourceType
          - dependsOn:
            - resourceName: resourceName
              id: id
              resourceType: resourceType
            - resourceName: resourceName
              id: id
              resourceType: resourceType
            resourceName: resourceName
            id: id
            resourceType: resourceType
          duration: duration
          mode: Incremental
          parametersLink:
            contentVersion: contentVersion
            uri: uri
          onErrorDeployment:
            deploymentName: deploymentName
            provisioningState: provisioningState
            type: LastSuccessful
          correlationId: correlationId
          parameters: "{}"
          providers:
          - resourceTypes:
            - aliases:
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              capabilities: capabilities
              apiVersions:
              - apiVersions
              - apiVersions
              locations:
              - locations
              - locations
              properties:
                key: properties
              resourceType: resourceType
            - aliases:
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              capabilities: capabilities
              apiVersions:
              - apiVersions
              - apiVersions
              locations:
              - locations
              - locations
              properties:
                key: properties
              resourceType: resourceType
            registrationPolicy: registrationPolicy
            namespace: namespace
            id: id
            registrationState: registrationState
          - resourceTypes:
            - aliases:
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              capabilities: capabilities
              apiVersions:
              - apiVersions
              - apiVersions
              locations:
              - locations
              - locations
              properties:
                key: properties
              resourceType: resourceType
            - aliases:
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              - paths:
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                - path: path
                  apiVersions:
                  - apiVersions
                  - apiVersions
                name: name
              capabilities: capabilities
              apiVersions:
              - apiVersions
              - apiVersions
              locations:
              - locations
              - locations
              properties:
                key: properties
              resourceType: resourceType
            registrationPolicy: registrationPolicy
            namespace: namespace
            id: id
            registrationState: registrationState
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        error:
          $ref: '#/components/schemas/CloudError_error'
        properties:
          $ref: '#/components/schemas/DeploymentPropertiesExtended'
      type: object
    DeploymentWhatIf:
      description: Deployment What-if operation parameters.
      example:
        location: location
        properties:
          whatIfSettings:
            resultFormat: ResourceIdOnly
      properties:
        location:
          description: The location to store the deployment data.
          type: string
        properties:
          $ref: '#/components/schemas/DeploymentWhatIfProperties'
      required:
      - properties
      type: object
    DeploymentWhatIfProperties:
      allOf:
      - $ref: '#/components/schemas/DeploymentProperties'
      description: Deployment What-if properties.
      example:
        whatIfSettings:
          resultFormat: ResourceIdOnly
      properties:
        whatIfSettings:
          $ref: '#/components/schemas/DeploymentWhatIfSettings'
    DeploymentWhatIfSettings:
      description: Deployment What-If operation settings.
      example:
        resultFormat: ResourceIdOnly
      properties:
        resultFormat:
          description: The format of the What-If results
          enum:
          - ResourceIdOnly
          - FullResourcePayloads
          type: string
          x-ms-enum:
            modelAsString: false
            name: WhatIfResultFormat
      type: object
    ErrorResponse:
      type: object
    ExportTemplateRequest:
      description: Export resource group template request parameters.
      example:
        options: options
        resources:
        - resources
        - resources
      properties:
        options:
          description: "The export template options. A CSV-formatted list containing\
            \ zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments',\
            \ 'SkipResourceNameParameterization', 'SkipAllParameterization'"
          type: string
        resources:
          description: "The IDs of the resources to filter the export by. To export\
            \ all resources, supply an array with single entry '*'."
          items:
            type: string
          type: array
      type: object
    GenericResource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: Resource information.
      example:
        managedBy: managedBy
        identity:
          userAssignedIdentities:
            key:
              clientId: clientId
              principalId: principalId
          tenantId: tenantId
          principalId: principalId
          type: SystemAssigned
        kind: kind
        sku:
          size: size
          tier: tier
          name: name
          model: model
          family: family
          capacity: 0
        plan:
          product: product
          name: name
          promotionCode: promotionCode
          publisher: publisher
          version: version
        properties: "{}"
      properties:
        identity:
          $ref: '#/components/schemas/Identity'
        kind:
          description: The kind of the resource.
          pattern: "^[-\\w\\._,\\(\\)]+$"
          type: string
        managedBy:
          description: ID of the resource that manages this resource.
          type: string
        plan:
          $ref: '#/components/schemas/Plan'
        properties:
          description: The resource properties.
          properties: {}
          type: object
        sku:
          $ref: '#/components/schemas/Sku'
    GenericResourceFilter:
      description: Resource filter.
      properties:
        resourceType:
          description: The resource type.
          type: string
        tagname:
          description: The tag name.
          type: string
        tagvalue:
          description: The tag value.
          type: string
      type: object
    HttpMessage:
      description: HTTP message.
      example:
        content: "{}"
      properties:
        content:
          description: HTTP message content.
          properties: {}
          type: object
      type: object
    Identity:
      description: Identity for the resource.
      example:
        userAssignedIdentities:
          key:
            clientId: clientId
            principalId: principalId
        tenantId: tenantId
        principalId: principalId
        type: SystemAssigned
      properties:
        principalId:
          description: The principal ID of resource identity.
          readOnly: true
          type: string
        tenantId:
          description: The tenant ID of resource.
          readOnly: true
          type: string
        type:
          description: The identity type.
          enum:
          - SystemAssigned
          - UserAssigned
          - "SystemAssigned, UserAssigned"
          - None
          type: string
          x-ms-enum:
            modelAsString: false
            name: ResourceIdentityType
        userAssignedIdentities:
          additionalProperties:
            $ref: '#/components/schemas/Identity_userAssignedIdentities_value'
          description: "The list of user identities associated with the resource.\
            \ The user identity dictionary key references will be ARM resource ids\
            \ in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
          type: object
      type: object
    OnErrorDeployment:
      description: Deployment on error behavior.
      example:
        deploymentName: deploymentName
        type: LastSuccessful
      properties:
        deploymentName:
          description: The deployment to be used on error case.
          type: string
        type:
          description: The deployment on error behavior type. Possible values are
            LastSuccessful and SpecificDeployment.
          enum:
          - LastSuccessful
          - SpecificDeployment
          type: string
          x-ms-enum:
            modelAsString: false
            name: OnErrorDeploymentType
      type: object
    OnErrorDeploymentExtended:
      description: Deployment on error behavior with additional details.
      example:
        deploymentName: deploymentName
        provisioningState: provisioningState
        type: LastSuccessful
      properties:
        deploymentName:
          description: The deployment to be used on error case.
          type: string
        provisioningState:
          description: The state of the provisioning for the on error deployment.
          readOnly: true
          type: string
        type:
          description: The deployment on error behavior type. Possible values are
            LastSuccessful and SpecificDeployment.
          enum:
          - LastSuccessful
          - SpecificDeployment
          type: string
          x-ms-enum:
            modelAsString: false
            name: OnErrorDeploymentType
      type: object
    Operation:
      description: Microsoft.Resources operation
      example:
        display:
          provider: provider
          resource: resource
          description: description
          operation: operation
        name: name
      properties:
        display:
          $ref: '#/components/schemas/Operation_display'
        name:
          description: "Operation name: {provider}/{resource}/{operation}"
          type: string
      type: object
    OperationListResult:
      description: Result of the request to list Microsoft.Resources operations. It
        contains a list of operations and a URL link to get the next set of results.
      example:
        value:
        - display:
            provider: provider
            resource: resource
            description: description
            operation: operation
          name: name
        - display:
            provider: provider
            resource: resource
            description: description
            operation: operation
          name: name
        nextLink: nextLink
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there
            are any.
          type: string
        value:
          description: List of Microsoft.Resources operations.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      type: object
    ParametersLink:
      description: Entity representing the reference to the deployment parameters.
      example:
        contentVersion: contentVersion
        uri: uri
      properties:
        contentVersion:
          description: "If included, must match the ContentVersion in the template."
          type: string
        uri:
          description: The URI of the parameters file.
          type: string
      required:
      - uri
      type: object
    Plan:
      description: Plan for the resource.
      example:
        product: product
        name: name
        promotionCode: promotionCode
        publisher: publisher
        version: version
      properties:
        name:
          description: The plan ID.
          type: string
        product:
          description: The offer ID.
          type: string
        promotionCode:
          description: The promotion code.
          type: string
        publisher:
          description: The publisher ID.
          type: string
        version:
          description: The plan's version.
          type: string
      type: object
    Provider:
      description: Resource provider information.
      example:
        resourceTypes:
        - aliases:
          - paths:
            - path: path
              apiVersions:
              - apiVersions
              - apiVersions
            - path: path
              apiVersions:
              - apiVersions
              - apiVersions
            name: name
          - paths:
            - path: path
              apiVersions:
              - apiVersions
              - apiVersions
            - path: path
              apiVersions:
              - apiVersions
              - apiVersions
            name: name
          capabilities: capabilities
          apiVersions:
          - apiVersions
          - apiVersions
          locations:
          - locations
          - locations
          properties:
            key: properties
          resourceType: resourceType
        - aliases:
          - paths:
            - path: path
              apiVersions:
              - apiVersions
              - apiVersions
            - path: path
              apiVersions:
              - apiVersions
              - apiVersions
            name: name
          - paths:
            - path: path
              apiVersions:
              - apiVersions
              - apiVersions
            - path: path
              apiVersions:
              - apiVersions
              - apiVersions
            name: name
          capabilities: capabilities
          apiVersions:
          - apiVersions
          - apiVersions
          locations:
          - locations
          - locations
          properties:
            key: properties
          resourceType: resourceType
        registrationPolicy: registrationPolicy
        namespace: namespace
        id: id
        registrationState: registrationState
      properties:
        id:
          description: The provider ID.
          readOnly: true
          type: string
        namespace:
          description: The namespace of the resource provider.
          type: string
        registrationPolicy:
          description: The registration policy of the resource provider.
          readOnly: true
          type: string
        registrationState:
          description: The registration state of the resource provider.
          readOnly: true
          type: string
        resourceTypes:
          description: The collection of provider resource types.
          items:
            $ref: '#/components/schemas/ProviderResourceType'
          readOnly: true
          type: array
      type: object
    ProviderListResult:
      description: List of resource providers.
      example:
        value:
        - resourceTypes:
          - aliases:
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            capabilities: capabilities
            apiVersions:
            - apiVersions
            - apiVersions
            locations:
            - locations
            - locations
            properties:
              key: properties
            resourceType: resourceType
          - aliases:
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            capabilities: capabilities
            apiVersions:
            - apiVersions
            - apiVersions
            locations:
            - locations
            - locations
            properties:
              key: properties
            resourceType: resourceType
          registrationPolicy: registrationPolicy
          namespace: namespace
          id: id
          registrationState: registrationState
        - resourceTypes:
          - aliases:
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            capabilities: capabilities
            apiVersions:
            - apiVersions
            - apiVersions
            locations:
            - locations
            - locations
            properties:
              key: properties
            resourceType: resourceType
          - aliases:
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            - paths:
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              - path: path
                apiVersions:
                - apiVersions
                - apiVersions
              name: name
            capabilities: capabilities
            apiVersions:
            - apiVersions
            - apiVersions
            locations:
            - locations
            - locations
            properties:
              key: properties
            resourceType: resourceType
          registrationPolicy: registrationPolicy
          namespace: namespace
          id: id
          registrationState: registrationState
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          readOnly: true
          type: string
        value:
          description: An array of resource providers.
          items:
            $ref: '#/components/schemas/Provider'
          type: array
      type: object
    ProviderResourceType:
      description: Resource type managed by the resource provider.
      example:
        aliases:
        - paths:
          - path: path
            apiVersions:
            - apiVersions
            - apiVersions
          - path: path
            apiVersions:
            - apiVersions
            - apiVersions
          name: name
        - paths:
          - path: path
            apiVersions:
            - apiVersions
            - apiVersions
          - path: path
            apiVersions:
            - apiVersions
            - apiVersions
          name: name
        capabilities: capabilities
        apiVersions:
        - apiVersions
        - apiVersions
        locations:
        - locations
        - locations
        properties:
          key: properties
        resourceType: resourceType
      properties:
        aliases:
          description: The aliases that are supported by this resource type.
          items:
            $ref: '#/components/schemas/AliasType'
          type: array
        apiVersions:
          description: The API version.
          items:
            type: string
          type: array
        capabilities:
          description: The additional capabilities offered by this resource type.
          type: string
        locations:
          description: The collection of locations where this resource type can be
            created.
          items:
            type: string
          type: array
        properties:
          additionalProperties:
            description: 'The additional properties. '
            type: string
          description: The properties.
          type: object
        resourceType:
          description: The resource type.
          type: string
      type: object
    Resource:
      description: Specified resource.
      properties:
        id:
          description: Resource ID
          readOnly: true
          type: string
        location:
          description: Resource location
          type: string
        name:
          description: Resource name
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
        type:
          description: Resource type
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    ResourceGroup:
      description: Resource group information.
      example:
        managedBy: managedBy
        name: name
        location: location
        id: id
        type: type
        properties:
          provisioningState: provisioningState
        tags:
          key: tags
      properties:
        id:
          description: The ID of the resource group.
          readOnly: true
          type: string
        location:
          description: The location of the resource group. It cannot be changed after
            the resource group has been created. It must be one of the supported Azure
            locations.
          type: string
        managedBy:
          description: The ID of the resource that manages this resource group.
          type: string
        name:
          description: The name of the resource group.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/ResourceGroupProperties'
        tags:
          additionalProperties:
            description: 'The additional properties. '
            type: string
          description: The tags attached to the resource group.
          type: object
        type:
          description: The type of the resource group.
          readOnly: true
          type: string
      required:
      - location
      type: object
      x-ms-azure-resource: true
    ResourceGroupExportResult:
      description: Resource group export result.
      example:
        template: "{}"
        error:
          code: code
          additionalInfo:
          - type: type
            info: "{}"
          - type: type
            info: "{}"
          details:
          - null
          - null
          message: message
          target: target
      properties:
        error:
          $ref: '#/components/schemas/CloudError_error'
        template:
          description: The template content.
          properties: {}
          type: object
      type: object
    ResourceGroupFilter:
      description: Resource group filter.
      properties:
        tagName:
          description: The tag name.
          type: string
        tagValue:
          description: The tag value.
          type: string
      type: object
    ResourceGroupListResult:
      description: List of resource groups.
      example:
        value:
        - managedBy: managedBy
          name: name
          location: location
          id: id
          type: type
          properties:
            provisioningState: provisioningState
          tags:
            key: tags
        - managedBy: managedBy
          name: name
          location: location
          id: id
          type: type
          properties:
            provisioningState: provisioningState
          tags:
            key: tags
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          readOnly: true
          type: string
        value:
          description: An array of resource groups.
          items:
            $ref: '#/components/schemas/ResourceGroup'
          type: array
      type: object
    ResourceGroupPatchable:
      description: Resource group information.
      example:
        managedBy: managedBy
        name: name
        properties:
          provisioningState: provisioningState
        tags:
          key: tags
      properties:
        managedBy:
          description: The ID of the resource that manages this resource group.
          type: string
        name:
          description: The name of the resource group.
          type: string
        properties:
          $ref: '#/components/schemas/ResourceGroupProperties'
        tags:
          additionalProperties:
            description: 'The additional properties. '
            type: string
          description: The tags attached to the resource group.
          type: object
      type: object
    ResourceGroupProperties:
      description: The resource group properties.
      example:
        provisioningState: provisioningState
      properties:
        provisioningState:
          description: 'The provisioning state. '
          readOnly: true
          type: string
      type: object
    ResourceListResult:
      description: List of resource groups.
      example:
        value:
        - managedBy: managedBy
          identity:
            userAssignedIdentities:
              key:
                clientId: clientId
                principalId: principalId
            tenantId: tenantId
            principalId: principalId
            type: SystemAssigned
          kind: kind
          sku:
            size: size
            tier: tier
            name: name
            model: model
            family: family
            capacity: 0
          plan:
            product: product
            name: name
            promotionCode: promotionCode
            publisher: publisher
            version: version
          properties: "{}"
        - managedBy: managedBy
          identity:
            userAssignedIdentities:
              key:
                clientId: clientId
                principalId: principalId
            tenantId: tenantId
            principalId: principalId
            type: SystemAssigned
          kind: kind
          sku:
            size: size
            tier: tier
            name: name
            model: model
            family: family
            capacity: 0
          plan:
            product: product
            name: name
            promotionCode: promotionCode
            publisher: publisher
            version: version
          properties: "{}"
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          readOnly: true
          type: string
        value:
          description: An array of resources.
          items:
            $ref: '#/components/schemas/GenericResource'
          type: array
      type: object
    ResourceProviderOperationDisplayProperties:
      description: Resource provider operation's display properties.
      properties:
        description:
          description: Operation description.
          type: string
        operation:
          description: Resource provider operation.
          type: string
        provider:
          description: Operation provider.
          type: string
        publisher:
          description: Operation description.
          type: string
        resource:
          description: Operation resource.
          type: string
      type: object
    ResourcesMoveInfo:
      description: Parameters of move resources.
      example:
        targetResourceGroup: targetResourceGroup
        resources:
        - resources
        - resources
      properties:
        resources:
          description: The IDs of the resources.
          items:
            type: string
          type: array
        targetResourceGroup:
          description: The target resource group.
          type: string
      type: object
    ScopedDeployment:
      description: Deployment operation parameters.
      example:
        location: location
        properties:
          mode: Incremental
          parametersLink:
            contentVersion: contentVersion
            uri: uri
          template: "{}"
          onErrorDeployment:
            deploymentName: deploymentName
            type: LastSuccessful
          templateLink:
            contentVersion: contentVersion
            uri: uri
          parameters: "{}"
          debugSetting:
            detailLevel: detailLevel
      properties:
        location:
          description: The location to store the deployment data.
          type: string
        properties:
          $ref: '#/components/schemas/DeploymentProperties'
      required:
      - location
      - properties
      type: object
    Sku:
      description: SKU for the resource.
      example:
        size: size
        tier: tier
        name: name
        model: model
        family: family
        capacity: 0
      properties:
        capacity:
          description: The SKU capacity.
          format: int32
          type: integer
        family:
          description: The SKU family.
          type: string
        model:
          description: The SKU model.
          type: string
        name:
          description: The SKU name.
          type: string
        size:
          description: The SKU size.
          type: string
        tier:
          description: The SKU tier.
          type: string
      type: object
    SubResource:
      description: Sub-resource.
      properties:
        id:
          description: Resource ID
          type: string
      type: object
      x-ms-azure-resource: true
    TagCount:
      description: Tag count.
      example:
        type: type
        value: 0
      properties:
        type:
          description: Type of count.
          type: string
        value:
          description: Value of count.
          type: integer
      type: object
    TagDetails:
      description: Tag details.
      example:
        values:
        - tagValue: tagValue
          count:
            type: type
            value: 0
          id: id
        - tagValue: tagValue
          count:
            type: type
            value: 0
          id: id
        count:
          type: type
          value: 0
        id: id
        tagName: tagName
      properties:
        count:
          $ref: '#/components/schemas/TagCount'
        id:
          description: The tag ID.
          readOnly: true
          type: string
        tagName:
          description: The tag name.
          type: string
        values:
          description: The list of tag values.
          items:
            $ref: '#/components/schemas/TagValue'
          type: array
      type: object
    TagValue:
      description: Tag information.
      example:
        tagValue: tagValue
        count:
          type: type
          value: 0
        id: id
      properties:
        count:
          $ref: '#/components/schemas/TagCount'
        id:
          description: The tag ID.
          readOnly: true
          type: string
        tagValue:
          description: The tag value.
          type: string
      type: object
      x-ms-azure-resource: true
    TagsListResult:
      description: List of subscription tags.
      example:
        value:
        - values:
          - tagValue: tagValue
            count:
              type: type
              value: 0
            id: id
          - tagValue: tagValue
            count:
              type: type
              value: 0
            id: id
          count:
            type: type
            value: 0
          id: id
          tagName: tagName
        - values:
          - tagValue: tagValue
            count:
              type: type
              value: 0
            id: id
          - tagValue: tagValue
            count:
              type: type
              value: 0
            id: id
          count:
            type: type
            value: 0
          id: id
          tagName: tagName
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          readOnly: true
          type: string
        value:
          description: An array of tags.
          items:
            $ref: '#/components/schemas/TagDetails'
          type: array
      type: object
    TargetResource:
      description: Target resource.
      example:
        resourceName: resourceName
        id: id
        resourceType: resourceType
      properties:
        id:
          description: The ID of the resource.
          type: string
        resourceName:
          description: The name of the resource.
          type: string
        resourceType:
          description: The type of the resource.
          type: string
      type: object
    TemplateHashResult:
      description: Result of the request to calculate template hash. It contains a
        string of minified template and its hash.
      example:
        minifiedTemplate: minifiedTemplate
        templateHash: templateHash
      properties:
        minifiedTemplate:
          description: The minified template string.
          type: string
        templateHash:
          description: The template hash.
          type: string
      type: object
    TemplateLink:
      description: Entity representing the reference to the template.
      example:
        contentVersion: contentVersion
        uri: uri
      properties:
        contentVersion:
          description: "If included, must match the ContentVersion in the template."
          type: string
        uri:
          description: The URI of the template to deploy.
          type: string
      required:
      - uri
      type: object
    WhatIfChange:
      description: Information about a single resource change predicted by What-If
        operation.
      example:
        resourceId: resourceId
        before: "{}"
        changeType: Create
        delta:
        - path: path
          before: "{}"
          children:
          - null
          - null
          propertyChangeType: Create
          after: "{}"
        - path: path
          before: "{}"
          children:
          - null
          - null
          propertyChangeType: Create
          after: "{}"
        after: "{}"
      properties:
        after:
          description: The predicted snapshot of the resource after the deployment
            is executed.
          properties: {}
          type: object
        before:
          description: The snapshot of the resource before the deployment is executed.
          properties: {}
          type: object
        changeType:
          description: Type of change that will be made to the resource when the deployment
            is executed.
          enum:
          - Create
          - Delete
          - Ignore
          - Deploy
          - NoChange
          - Modify
          type: string
          x-ms-enum:
            modelAsString: false
            name: ChangeType
            values:
            - description: The resource does not exist in the current state but is
                present in the desired state. The resource will be created when the
                deployment is executed.
              value: Create
            - description: The resource exists in the current state and is missing
                from the desired state. The resource will be deleted when the deployment
                is executed.
              value: Delete
            - description: The resource exists in the current state and is missing
                from the desired state. The resource will not be deployed or modified
                when the deployment is executed.
              value: Ignore
            - description: The resource exists in the current state and the desired
                state and will be redeployed when the deployment is executed. The
                properties of the resource may or may not change.
              value: Deploy
            - description: The resource exists in the current state and the desired
                state and will be redeployed when the deployment is executed. The
                properties of the resource will not change.
              value: NoChange
            - description: The resource exists in the current state and the desired
                state and will be redeployed when the deployment is executed. The
                properties of the resource will change.
              value: Modify
        delta:
          description: The predicted changes to resource properties.
          items:
            $ref: '#/components/schemas/WhatIfPropertyChange'
          type: array
        resourceId:
          description: Resource ID
          type: string
      required:
      - changeType
      - resourceId
      type: object
    WhatIfOperationProperties:
      description: Deployment operation properties.
      example:
        changes:
        - resourceId: resourceId
          before: "{}"
          changeType: Create
          delta:
          - path: path
            before: "{}"
            children:
            - null
            - null
            propertyChangeType: Create
            after: "{}"
          - path: path
            before: "{}"
            children:
            - null
            - null
            propertyChangeType: Create
            after: "{}"
          after: "{}"
        - resourceId: resourceId
          before: "{}"
          changeType: Create
          delta:
          - path: path
            before: "{}"
            children:
            - null
            - null
            propertyChangeType: Create
            after: "{}"
          - path: path
            before: "{}"
            children:
            - null
            - null
            propertyChangeType: Create
            after: "{}"
          after: "{}"
      properties:
        changes:
          description: List of resource changes predicted by What-If operation.
          items:
            $ref: '#/components/schemas/WhatIfChange'
          type: array
      type: object
    WhatIfOperationResult:
      description: Result of the What-If operation. Contains a list of predicted changes
        and a URL link to get to the next set of results.
      example:
        error:
          code: code
          additionalInfo:
          - type: type
            info: "{}"
          - type: type
            info: "{}"
          details:
          - null
          - null
          message: message
          target: target
        properties:
          changes:
          - resourceId: resourceId
            before: "{}"
            changeType: Create
            delta:
            - path: path
              before: "{}"
              children:
              - null
              - null
              propertyChangeType: Create
              after: "{}"
            - path: path
              before: "{}"
              children:
              - null
              - null
              propertyChangeType: Create
              after: "{}"
            after: "{}"
          - resourceId: resourceId
            before: "{}"
            changeType: Create
            delta:
            - path: path
              before: "{}"
              children:
              - null
              - null
              propertyChangeType: Create
              after: "{}"
            - path: path
              before: "{}"
              children:
              - null
              - null
              propertyChangeType: Create
              after: "{}"
            after: "{}"
        status: status
      properties:
        error:
          $ref: '#/components/schemas/CloudError_error'
        properties:
          $ref: '#/components/schemas/WhatIfOperationProperties'
        status:
          description: Status of the What-If operation.
          type: string
      type: object
    WhatIfPropertyChange:
      description: The predicted change to the resource property.
      example:
        path: path
        before: "{}"
        children:
        - null
        - null
        propertyChangeType: Create
        after: "{}"
      properties:
        after:
          description: The value of the property after the deployment is executed.
          properties: {}
          type: object
        before:
          description: The value of the property before the deployment is executed.
          properties: {}
          type: object
        children:
          description: Nested property changes.
          items:
            $ref: '#/components/schemas/WhatIfPropertyChange'
          type: array
        path:
          description: The path of the property.
          type: string
        propertyChangeType:
          description: The type of property change.
          enum:
          - Create
          - Delete
          - Modify
          - Array
          type: string
          x-ms-enum:
            modelAsString: false
            name: PropertyChangeType
            values:
            - description: The property does not exist in the current state but is
                present in the desired state. The property will be created when the
                deployment is executed.
              value: Create
            - description: The property exists in the current state and is missing
                from the desired state. It will be deleted when the deployment is
                executed.
              value: Delete
            - description: The property exists in both current and desired state and
                is different. The value of the property will change when the deployment
                is executed.
              value: Modify
            - description: The property is an array and contains nested changes.
              value: Array
      required:
      - path
      - propertyChangeType
      type: object
    CloudError_error_additionalInfo_inner:
      description: The resource management error additional info.
      example:
        type: type
        info: "{}"
      properties:
        info:
          description: The additional info.
          properties: {}
          readOnly: true
          type: object
        type:
          description: The additional info type.
          readOnly: true
          type: string
      type: object
    CloudError_error:
      description: The resource management error response.
      example:
        code: code
        additionalInfo:
        - type: type
          info: "{}"
        - type: type
          info: "{}"
        details:
        - null
        - null
        message: message
        target: target
      properties:
        additionalInfo:
          description: The error additional info.
          items:
            $ref: '#/components/schemas/CloudError_error_additionalInfo_inner'
          readOnly: true
          type: array
        code:
          description: The error code.
          readOnly: true
          type: string
        details:
          description: The error details.
          items:
            $ref: '#/components/schemas/ErrorResponse'
          readOnly: true
          type: array
        message:
          description: The error message.
          readOnly: true
          type: string
        target:
          description: The error target.
          readOnly: true
          type: string
      type: object
    Identity_userAssignedIdentities_value:
      example:
        clientId: clientId
        principalId: principalId
      properties:
        clientId:
          description: The client id of user assigned identity.
          readOnly: true
          type: string
        principalId:
          description: The principal id of user assigned identity.
          readOnly: true
          type: string
      type: object
    Operation_display:
      description: The object that represents the operation.
      example:
        provider: provider
        resource: resource
        description: description
        operation: operation
      properties:
        description:
          description: Description of the operation.
          type: string
        operation:
          description: "Operation type: Read, write, delete, etc."
          type: string
        provider:
          description: "Service provider: Microsoft.Resources"
          type: string
        resource:
          description: "Resource on which the operation is performed: Profile, endpoint,\
            \ etc."
          type: string
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

