/**
 * ResourceManagementClient
 * Provides operations for working with resources and resource groups.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeploymentProperties.h
 *
 * Deployment properties.
 */

#ifndef OAIDeploymentProperties_H
#define OAIDeploymentProperties_H

#include <QJsonObject>

#include "OAIDebugSetting.h"
#include "OAIObject.h"
#include "OAIOnErrorDeployment.h"
#include "OAIParametersLink.h"
#include "OAITemplateLink.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDebugSetting;
class OAIOnErrorDeployment;
class OAIParametersLink;
class OAITemplateLink;

class OAIDeploymentProperties : public OAIObject {
public:
    OAIDeploymentProperties();
    OAIDeploymentProperties(QString json);
    ~OAIDeploymentProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDebugSetting getDebugSetting() const;
    void setDebugSetting(const OAIDebugSetting &debug_setting);
    bool is_debug_setting_Set() const;
    bool is_debug_setting_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    OAIOnErrorDeployment getOnErrorDeployment() const;
    void setOnErrorDeployment(const OAIOnErrorDeployment &on_error_deployment);
    bool is_on_error_deployment_Set() const;
    bool is_on_error_deployment_Valid() const;

    OAIObject getParameters() const;
    void setParameters(const OAIObject &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    OAIParametersLink getParametersLink() const;
    void setParametersLink(const OAIParametersLink &parameters_link);
    bool is_parameters_link_Set() const;
    bool is_parameters_link_Valid() const;

    OAIObject getRTemplate() const;
    void setRTemplate(const OAIObject &r_template);
    bool is_r_template_Set() const;
    bool is_r_template_Valid() const;

    OAITemplateLink getTemplateLink() const;
    void setTemplateLink(const OAITemplateLink &template_link);
    bool is_template_link_Set() const;
    bool is_template_link_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDebugSetting m_debug_setting;
    bool m_debug_setting_isSet;
    bool m_debug_setting_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    OAIOnErrorDeployment m_on_error_deployment;
    bool m_on_error_deployment_isSet;
    bool m_on_error_deployment_isValid;

    OAIObject m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    OAIParametersLink m_parameters_link;
    bool m_parameters_link_isSet;
    bool m_parameters_link_isValid;

    OAIObject m_r_template;
    bool m_r_template_isSet;
    bool m_r_template_isValid;

    OAITemplateLink m_template_link;
    bool m_template_link_isSet;
    bool m_template_link_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeploymentProperties)

#endif // OAIDeploymentProperties_H
