/*
 * ResourceManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Provider;
import org.openapitools.client.model.ProviderListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProvidersApi
 */
@Disabled
public class ProvidersApiTest {

    private final ProvidersApi api = new ProvidersApi();

    /**
     * Gets a resource provider.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void providersGetTest() throws ApiException {
        String resourceProviderNamespace = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $expand = null;
        Provider response = api.providersGet(resourceProviderNamespace, apiVersion, subscriptionId, $expand);
        // TODO: test validations
    }

    /**
     * Gets a list of resource providers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void providersListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        Integer $top = null;
        String $expand = null;
        ProviderListResult response = api.providersList(apiVersion, subscriptionId, $top, $expand);
        // TODO: test validations
    }

    /**
     * Registers provider to be used with a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void providersRegisterTest() throws ApiException {
        String resourceProviderNamespace = null;
        String apiVersion = null;
        String subscriptionId = null;
        Provider response = api.providersRegister(resourceProviderNamespace, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Unregisters provider from a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void providersUnregisterTest() throws ApiException {
        String resourceProviderNamespace = null;
        String apiVersion = null;
        String subscriptionId = null;
        Provider response = api.providersUnregister(resourceProviderNamespace, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
