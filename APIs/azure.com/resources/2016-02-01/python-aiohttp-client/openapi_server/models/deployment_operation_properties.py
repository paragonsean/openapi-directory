# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.http_message import HttpMessage
from openapi_server.models.target_resource import TargetResource
from openapi_server import util


class DeploymentOperationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provisioning_state: str=None, request: HttpMessage=None, response: HttpMessage=None, service_request_id: str=None, status_code: str=None, status_message: object=None, target_resource: TargetResource=None, timestamp: datetime=None):
        """DeploymentOperationProperties - a model defined in OpenAPI

        :param provisioning_state: The provisioning_state of this DeploymentOperationProperties.
        :param request: The request of this DeploymentOperationProperties.
        :param response: The response of this DeploymentOperationProperties.
        :param service_request_id: The service_request_id of this DeploymentOperationProperties.
        :param status_code: The status_code of this DeploymentOperationProperties.
        :param status_message: The status_message of this DeploymentOperationProperties.
        :param target_resource: The target_resource of this DeploymentOperationProperties.
        :param timestamp: The timestamp of this DeploymentOperationProperties.
        """
        self.openapi_types = {
            'provisioning_state': str,
            'request': HttpMessage,
            'response': HttpMessage,
            'service_request_id': str,
            'status_code': str,
            'status_message': object,
            'target_resource': TargetResource,
            'timestamp': datetime
        }

        self.attribute_map = {
            'provisioning_state': 'provisioningState',
            'request': 'request',
            'response': 'response',
            'service_request_id': 'serviceRequestId',
            'status_code': 'statusCode',
            'status_message': 'statusMessage',
            'target_resource': 'targetResource',
            'timestamp': 'timestamp'
        }

        self._provisioning_state = provisioning_state
        self._request = request
        self._response = response
        self._service_request_id = service_request_id
        self._status_code = status_code
        self._status_message = status_message
        self._target_resource = target_resource
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentOperationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentOperationProperties of this DeploymentOperationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this DeploymentOperationProperties.

        The state of the provisioning.

        :return: The provisioning_state of this DeploymentOperationProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this DeploymentOperationProperties.

        The state of the provisioning.

        :param provisioning_state: The provisioning_state of this DeploymentOperationProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def request(self):
        """Gets the request of this DeploymentOperationProperties.


        :return: The request of this DeploymentOperationProperties.
        :rtype: HttpMessage
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this DeploymentOperationProperties.


        :param request: The request of this DeploymentOperationProperties.
        :type request: HttpMessage
        """

        self._request = request

    @property
    def response(self):
        """Gets the response of this DeploymentOperationProperties.


        :return: The response of this DeploymentOperationProperties.
        :rtype: HttpMessage
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this DeploymentOperationProperties.


        :param response: The response of this DeploymentOperationProperties.
        :type response: HttpMessage
        """

        self._response = response

    @property
    def service_request_id(self):
        """Gets the service_request_id of this DeploymentOperationProperties.

        Deployment operation service request id.

        :return: The service_request_id of this DeploymentOperationProperties.
        :rtype: str
        """
        return self._service_request_id

    @service_request_id.setter
    def service_request_id(self, service_request_id):
        """Sets the service_request_id of this DeploymentOperationProperties.

        Deployment operation service request id.

        :param service_request_id: The service_request_id of this DeploymentOperationProperties.
        :type service_request_id: str
        """

        self._service_request_id = service_request_id

    @property
    def status_code(self):
        """Gets the status_code of this DeploymentOperationProperties.

        Operation status code.

        :return: The status_code of this DeploymentOperationProperties.
        :rtype: str
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this DeploymentOperationProperties.

        Operation status code.

        :param status_code: The status_code of this DeploymentOperationProperties.
        :type status_code: str
        """

        self._status_code = status_code

    @property
    def status_message(self):
        """Gets the status_message of this DeploymentOperationProperties.

        Operation status message.

        :return: The status_message of this DeploymentOperationProperties.
        :rtype: object
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this DeploymentOperationProperties.

        Operation status message.

        :param status_message: The status_message of this DeploymentOperationProperties.
        :type status_message: object
        """

        self._status_message = status_message

    @property
    def target_resource(self):
        """Gets the target_resource of this DeploymentOperationProperties.


        :return: The target_resource of this DeploymentOperationProperties.
        :rtype: TargetResource
        """
        return self._target_resource

    @target_resource.setter
    def target_resource(self, target_resource):
        """Sets the target_resource of this DeploymentOperationProperties.


        :param target_resource: The target_resource of this DeploymentOperationProperties.
        :type target_resource: TargetResource
        """

        self._target_resource = target_resource

    @property
    def timestamp(self):
        """Gets the timestamp of this DeploymentOperationProperties.

        The date and time of the operation.

        :return: The timestamp of this DeploymentOperationProperties.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this DeploymentOperationProperties.

        The date and time of the operation.

        :param timestamp: The timestamp of this DeploymentOperationProperties.
        :type timestamp: datetime
        """

        self._timestamp = timestamp
