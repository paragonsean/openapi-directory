# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_management_error_with_details import ResourceManagementErrorWithDetails
from openapi_server import util


class ResourceGroupExportResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: ResourceManagementErrorWithDetails=None, template: object=None):
        """ResourceGroupExportResult - a model defined in OpenAPI

        :param error: The error of this ResourceGroupExportResult.
        :param template: The template of this ResourceGroupExportResult.
        """
        self.openapi_types = {
            'error': ResourceManagementErrorWithDetails,
            'template': object
        }

        self.attribute_map = {
            'error': 'error',
            'template': 'template'
        }

        self._error = error
        self._template = template

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceGroupExportResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceGroupExportResult of this ResourceGroupExportResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this ResourceGroupExportResult.


        :return: The error of this ResourceGroupExportResult.
        :rtype: ResourceManagementErrorWithDetails
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ResourceGroupExportResult.


        :param error: The error of this ResourceGroupExportResult.
        :type error: ResourceManagementErrorWithDetails
        """

        self._error = error

    @property
    def template(self):
        """Gets the template of this ResourceGroupExportResult.

        The template content.

        :return: The template of this ResourceGroupExportResult.
        :rtype: object
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this ResourceGroupExportResult.

        The template content.

        :param template: The template of this ResourceGroupExportResult.
        :type template: object
        """

        self._template = template
