/*
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.client.model.JobNavigation;
import org.openapitools.client.model.SoftwareUpdateConfigurationMachineRunsListDefaultResponse;
import org.openapitools.client.model.UpdateConfigurationNavigation;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Software update configuration machine run properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:32:00.632352-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateConfigurationMachineRunProperties {
  public static final String SERIALIZED_NAME_CONFIGURED_DURATION = "configuredDuration";
  @SerializedName(SERIALIZED_NAME_CONFIGURED_DURATION)
  private String configuredDuration;

  public static final String SERIALIZED_NAME_CORRELATION_ID = "correlationId";
  @SerializedName(SERIALIZED_NAME_CORRELATION_ID)
  private UUID correlationId;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private SoftwareUpdateConfigurationMachineRunsListDefaultResponse error;

  public static final String SERIALIZED_NAME_JOB = "job";
  @SerializedName(SERIALIZED_NAME_JOB)
  private JobNavigation job;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "lastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private String lastModifiedBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "lastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_OS_TYPE = "osType";
  @SerializedName(SERIALIZED_NAME_OS_TYPE)
  private String osType;

  public static final String SERIALIZED_NAME_SOFTWARE_UPDATE_CONFIGURATION = "softwareUpdateConfiguration";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_UPDATE_CONFIGURATION)
  private UpdateConfigurationNavigation softwareUpdateConfiguration;

  public static final String SERIALIZED_NAME_SOURCE_COMPUTER_ID = "sourceComputerId";
  @SerializedName(SERIALIZED_NAME_SOURCE_COMPUTER_ID)
  private UUID sourceComputerId;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TARGET_COMPUTER = "targetComputer";
  @SerializedName(SERIALIZED_NAME_TARGET_COMPUTER)
  private String targetComputer;

  public static final String SERIALIZED_NAME_TARGET_COMPUTER_TYPE = "targetComputerType";
  @SerializedName(SERIALIZED_NAME_TARGET_COMPUTER_TYPE)
  private String targetComputerType;

  public UpdateConfigurationMachineRunProperties() {
  }

  public UpdateConfigurationMachineRunProperties(
     String configuredDuration, 
     UUID correlationId, 
     String createdBy, 
     OffsetDateTime creationTime, 
     OffsetDateTime endTime, 
     String lastModifiedBy, 
     OffsetDateTime lastModifiedTime, 
     String osType, 
     UUID sourceComputerId, 
     OffsetDateTime startTime, 
     String status, 
     String targetComputer, 
     String targetComputerType
  ) {
    this();
    this.configuredDuration = configuredDuration;
    this.correlationId = correlationId;
    this.createdBy = createdBy;
    this.creationTime = creationTime;
    this.endTime = endTime;
    this.lastModifiedBy = lastModifiedBy;
    this.lastModifiedTime = lastModifiedTime;
    this.osType = osType;
    this.sourceComputerId = sourceComputerId;
    this.startTime = startTime;
    this.status = status;
    this.targetComputer = targetComputer;
    this.targetComputerType = targetComputerType;
  }

  /**
   * configured duration for the software update configuration run.
   * @return configuredDuration
   */
  @javax.annotation.Nullable
  public String getConfiguredDuration() {
    return configuredDuration;
  }



  /**
   * correlation id of the software update configuration machine run
   * @return correlationId
   */
  @javax.annotation.Nullable
  public UUID getCorrelationId() {
    return correlationId;
  }



  /**
   * createdBy property, which only appears in the response.
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }



  /**
   * Creation time of the resource, which only appears in the response.
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }



  /**
   * End time of the software update configuration machine run.
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }



  public UpdateConfigurationMachineRunProperties error(SoftwareUpdateConfigurationMachineRunsListDefaultResponse error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public SoftwareUpdateConfigurationMachineRunsListDefaultResponse getError() {
    return error;
  }

  public void setError(SoftwareUpdateConfigurationMachineRunsListDefaultResponse error) {
    this.error = error;
  }


  public UpdateConfigurationMachineRunProperties job(JobNavigation job) {
    this.job = job;
    return this;
  }

  /**
   * Get job
   * @return job
   */
  @javax.annotation.Nullable
  public JobNavigation getJob() {
    return job;
  }

  public void setJob(JobNavigation job) {
    this.job = job;
  }


  /**
   * lastModifiedBy property, which only appears in the response.
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public String getLastModifiedBy() {
    return lastModifiedBy;
  }



  /**
   * Last time resource was modified, which only appears in the response.
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }



  /**
   * Operating system target of the software update configuration triggered this run
   * @return osType
   */
  @javax.annotation.Nullable
  public String getOsType() {
    return osType;
  }



  public UpdateConfigurationMachineRunProperties softwareUpdateConfiguration(UpdateConfigurationNavigation softwareUpdateConfiguration) {
    this.softwareUpdateConfiguration = softwareUpdateConfiguration;
    return this;
  }

  /**
   * Get softwareUpdateConfiguration
   * @return softwareUpdateConfiguration
   */
  @javax.annotation.Nullable
  public UpdateConfigurationNavigation getSoftwareUpdateConfiguration() {
    return softwareUpdateConfiguration;
  }

  public void setSoftwareUpdateConfiguration(UpdateConfigurationNavigation softwareUpdateConfiguration) {
    this.softwareUpdateConfiguration = softwareUpdateConfiguration;
  }


  /**
   * source computer id of the software update configuration machine run
   * @return sourceComputerId
   */
  @javax.annotation.Nullable
  public UUID getSourceComputerId() {
    return sourceComputerId;
  }



  /**
   * Start time of the software update configuration machine run.
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }



  /**
   * Status of the software update configuration machine run.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }



  /**
   * name of the updated computer
   * @return targetComputer
   */
  @javax.annotation.Nullable
  public String getTargetComputer() {
    return targetComputer;
  }



  /**
   * type of the updated computer.
   * @return targetComputerType
   */
  @javax.annotation.Nullable
  public String getTargetComputerType() {
    return targetComputerType;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateConfigurationMachineRunProperties updateConfigurationMachineRunProperties = (UpdateConfigurationMachineRunProperties) o;
    return Objects.equals(this.configuredDuration, updateConfigurationMachineRunProperties.configuredDuration) &&
        Objects.equals(this.correlationId, updateConfigurationMachineRunProperties.correlationId) &&
        Objects.equals(this.createdBy, updateConfigurationMachineRunProperties.createdBy) &&
        Objects.equals(this.creationTime, updateConfigurationMachineRunProperties.creationTime) &&
        Objects.equals(this.endTime, updateConfigurationMachineRunProperties.endTime) &&
        Objects.equals(this.error, updateConfigurationMachineRunProperties.error) &&
        Objects.equals(this.job, updateConfigurationMachineRunProperties.job) &&
        Objects.equals(this.lastModifiedBy, updateConfigurationMachineRunProperties.lastModifiedBy) &&
        Objects.equals(this.lastModifiedTime, updateConfigurationMachineRunProperties.lastModifiedTime) &&
        Objects.equals(this.osType, updateConfigurationMachineRunProperties.osType) &&
        Objects.equals(this.softwareUpdateConfiguration, updateConfigurationMachineRunProperties.softwareUpdateConfiguration) &&
        Objects.equals(this.sourceComputerId, updateConfigurationMachineRunProperties.sourceComputerId) &&
        Objects.equals(this.startTime, updateConfigurationMachineRunProperties.startTime) &&
        Objects.equals(this.status, updateConfigurationMachineRunProperties.status) &&
        Objects.equals(this.targetComputer, updateConfigurationMachineRunProperties.targetComputer) &&
        Objects.equals(this.targetComputerType, updateConfigurationMachineRunProperties.targetComputerType);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(configuredDuration, correlationId, createdBy, creationTime, endTime, error, job, lastModifiedBy, lastModifiedTime, osType, softwareUpdateConfiguration, sourceComputerId, startTime, status, targetComputer, targetComputerType);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateConfigurationMachineRunProperties {\n");
    sb.append("    configuredDuration: ").append(toIndentedString(configuredDuration)).append("\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    job: ").append(toIndentedString(job)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    osType: ").append(toIndentedString(osType)).append("\n");
    sb.append("    softwareUpdateConfiguration: ").append(toIndentedString(softwareUpdateConfiguration)).append("\n");
    sb.append("    sourceComputerId: ").append(toIndentedString(sourceComputerId)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    targetComputer: ").append(toIndentedString(targetComputer)).append("\n");
    sb.append("    targetComputerType: ").append(toIndentedString(targetComputerType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("configuredDuration");
    openapiFields.add("correlationId");
    openapiFields.add("createdBy");
    openapiFields.add("creationTime");
    openapiFields.add("endTime");
    openapiFields.add("error");
    openapiFields.add("job");
    openapiFields.add("lastModifiedBy");
    openapiFields.add("lastModifiedTime");
    openapiFields.add("osType");
    openapiFields.add("softwareUpdateConfiguration");
    openapiFields.add("sourceComputerId");
    openapiFields.add("startTime");
    openapiFields.add("status");
    openapiFields.add("targetComputer");
    openapiFields.add("targetComputerType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateConfigurationMachineRunProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateConfigurationMachineRunProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateConfigurationMachineRunProperties is not found in the empty JSON string", UpdateConfigurationMachineRunProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateConfigurationMachineRunProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateConfigurationMachineRunProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("configuredDuration") != null && !jsonObj.get("configuredDuration").isJsonNull()) && !jsonObj.get("configuredDuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `configuredDuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("configuredDuration").toString()));
      }
      if ((jsonObj.get("correlationId") != null && !jsonObj.get("correlationId").isJsonNull()) && !jsonObj.get("correlationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `correlationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("correlationId").toString()));
      }
      if ((jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) && !jsonObj.get("createdBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdBy").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        SoftwareUpdateConfigurationMachineRunsListDefaultResponse.validateJsonElement(jsonObj.get("error"));
      }
      // validate the optional field `job`
      if (jsonObj.get("job") != null && !jsonObj.get("job").isJsonNull()) {
        JobNavigation.validateJsonElement(jsonObj.get("job"));
      }
      if ((jsonObj.get("lastModifiedBy") != null && !jsonObj.get("lastModifiedBy").isJsonNull()) && !jsonObj.get("lastModifiedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedBy").toString()));
      }
      if ((jsonObj.get("osType") != null && !jsonObj.get("osType").isJsonNull()) && !jsonObj.get("osType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `osType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("osType").toString()));
      }
      // validate the optional field `softwareUpdateConfiguration`
      if (jsonObj.get("softwareUpdateConfiguration") != null && !jsonObj.get("softwareUpdateConfiguration").isJsonNull()) {
        UpdateConfigurationNavigation.validateJsonElement(jsonObj.get("softwareUpdateConfiguration"));
      }
      if ((jsonObj.get("sourceComputerId") != null && !jsonObj.get("sourceComputerId").isJsonNull()) && !jsonObj.get("sourceComputerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceComputerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceComputerId").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("targetComputer") != null && !jsonObj.get("targetComputer").isJsonNull()) && !jsonObj.get("targetComputer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetComputer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetComputer").toString()));
      }
      if ((jsonObj.get("targetComputerType") != null && !jsonObj.get("targetComputerType").isJsonNull()) && !jsonObj.get("targetComputerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetComputerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetComputerType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateConfigurationMachineRunProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateConfigurationMachineRunProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateConfigurationMachineRunProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateConfigurationMachineRunProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateConfigurationMachineRunProperties>() {
           @Override
           public void write(JsonWriter out, UpdateConfigurationMachineRunProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateConfigurationMachineRunProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateConfigurationMachineRunProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateConfigurationMachineRunProperties
   * @throws IOException if the JSON string is invalid with respect to UpdateConfigurationMachineRunProperties
   */
  public static UpdateConfigurationMachineRunProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateConfigurationMachineRunProperties.class);
  }

  /**
   * Convert an instance of UpdateConfigurationMachineRunProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

