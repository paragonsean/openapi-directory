/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateConfigurationMachineRunProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateConfigurationMachineRunProperties::OAIUpdateConfigurationMachineRunProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateConfigurationMachineRunProperties::OAIUpdateConfigurationMachineRunProperties() {
    this->initializeModel();
}

OAIUpdateConfigurationMachineRunProperties::~OAIUpdateConfigurationMachineRunProperties() {}

void OAIUpdateConfigurationMachineRunProperties::initializeModel() {

    m_configured_duration_isSet = false;
    m_configured_duration_isValid = false;

    m_correlation_id_isSet = false;
    m_correlation_id_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_job_isSet = false;
    m_job_isValid = false;

    m_last_modified_by_isSet = false;
    m_last_modified_by_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_os_type_isSet = false;
    m_os_type_isValid = false;

    m_software_update_configuration_isSet = false;
    m_software_update_configuration_isValid = false;

    m_source_computer_id_isSet = false;
    m_source_computer_id_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_target_computer_isSet = false;
    m_target_computer_isValid = false;

    m_target_computer_type_isSet = false;
    m_target_computer_type_isValid = false;
}

void OAIUpdateConfigurationMachineRunProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateConfigurationMachineRunProperties::fromJsonObject(QJsonObject json) {

    m_configured_duration_isValid = ::OpenAPI::fromJsonValue(m_configured_duration, json[QString("configuredDuration")]);
    m_configured_duration_isSet = !json[QString("configuredDuration")].isNull() && m_configured_duration_isValid;

    m_correlation_id_isValid = ::OpenAPI::fromJsonValue(m_correlation_id, json[QString("correlationId")]);
    m_correlation_id_isSet = !json[QString("correlationId")].isNull() && m_correlation_id_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("createdBy")]);
    m_created_by_isSet = !json[QString("createdBy")].isNull() && m_created_by_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_job_isValid = ::OpenAPI::fromJsonValue(m_job, json[QString("job")]);
    m_job_isSet = !json[QString("job")].isNull() && m_job_isValid;

    m_last_modified_by_isValid = ::OpenAPI::fromJsonValue(m_last_modified_by, json[QString("lastModifiedBy")]);
    m_last_modified_by_isSet = !json[QString("lastModifiedBy")].isNull() && m_last_modified_by_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_os_type_isValid = ::OpenAPI::fromJsonValue(m_os_type, json[QString("osType")]);
    m_os_type_isSet = !json[QString("osType")].isNull() && m_os_type_isValid;

    m_software_update_configuration_isValid = ::OpenAPI::fromJsonValue(m_software_update_configuration, json[QString("softwareUpdateConfiguration")]);
    m_software_update_configuration_isSet = !json[QString("softwareUpdateConfiguration")].isNull() && m_software_update_configuration_isValid;

    m_source_computer_id_isValid = ::OpenAPI::fromJsonValue(m_source_computer_id, json[QString("sourceComputerId")]);
    m_source_computer_id_isSet = !json[QString("sourceComputerId")].isNull() && m_source_computer_id_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_target_computer_isValid = ::OpenAPI::fromJsonValue(m_target_computer, json[QString("targetComputer")]);
    m_target_computer_isSet = !json[QString("targetComputer")].isNull() && m_target_computer_isValid;

    m_target_computer_type_isValid = ::OpenAPI::fromJsonValue(m_target_computer_type, json[QString("targetComputerType")]);
    m_target_computer_type_isSet = !json[QString("targetComputerType")].isNull() && m_target_computer_type_isValid;
}

QString OAIUpdateConfigurationMachineRunProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateConfigurationMachineRunProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_configured_duration_isSet) {
        obj.insert(QString("configuredDuration"), ::OpenAPI::toJsonValue(m_configured_duration));
    }
    if (m_correlation_id_isSet) {
        obj.insert(QString("correlationId"), ::OpenAPI::toJsonValue(m_correlation_id));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("createdBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_job.isSet()) {
        obj.insert(QString("job"), ::OpenAPI::toJsonValue(m_job));
    }
    if (m_last_modified_by_isSet) {
        obj.insert(QString("lastModifiedBy"), ::OpenAPI::toJsonValue(m_last_modified_by));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_os_type_isSet) {
        obj.insert(QString("osType"), ::OpenAPI::toJsonValue(m_os_type));
    }
    if (m_software_update_configuration.isSet()) {
        obj.insert(QString("softwareUpdateConfiguration"), ::OpenAPI::toJsonValue(m_software_update_configuration));
    }
    if (m_source_computer_id_isSet) {
        obj.insert(QString("sourceComputerId"), ::OpenAPI::toJsonValue(m_source_computer_id));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_target_computer_isSet) {
        obj.insert(QString("targetComputer"), ::OpenAPI::toJsonValue(m_target_computer));
    }
    if (m_target_computer_type_isSet) {
        obj.insert(QString("targetComputerType"), ::OpenAPI::toJsonValue(m_target_computer_type));
    }
    return obj;
}

QString OAIUpdateConfigurationMachineRunProperties::getConfiguredDuration() const {
    return m_configured_duration;
}
void OAIUpdateConfigurationMachineRunProperties::setConfiguredDuration(const QString &configured_duration) {
    m_configured_duration = configured_duration;
    m_configured_duration_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_configured_duration_Set() const{
    return m_configured_duration_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_configured_duration_Valid() const{
    return m_configured_duration_isValid;
}

QString OAIUpdateConfigurationMachineRunProperties::getCorrelationId() const {
    return m_correlation_id;
}
void OAIUpdateConfigurationMachineRunProperties::setCorrelationId(const QString &correlation_id) {
    m_correlation_id = correlation_id;
    m_correlation_id_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_correlation_id_Set() const{
    return m_correlation_id_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_correlation_id_Valid() const{
    return m_correlation_id_isValid;
}

QString OAIUpdateConfigurationMachineRunProperties::getCreatedBy() const {
    return m_created_by;
}
void OAIUpdateConfigurationMachineRunProperties::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIUpdateConfigurationMachineRunProperties::getCreationTime() const {
    return m_creation_time;
}
void OAIUpdateConfigurationMachineRunProperties::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIUpdateConfigurationMachineRunProperties::getEndTime() const {
    return m_end_time;
}
void OAIUpdateConfigurationMachineRunProperties::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAISoftwareUpdateConfigurationMachineRuns_List_default_response OAIUpdateConfigurationMachineRunProperties::getError() const {
    return m_error;
}
void OAIUpdateConfigurationMachineRunProperties::setError(const OAISoftwareUpdateConfigurationMachineRuns_List_default_response &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_error_Set() const{
    return m_error_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_error_Valid() const{
    return m_error_isValid;
}

OAIJobNavigation OAIUpdateConfigurationMachineRunProperties::getJob() const {
    return m_job;
}
void OAIUpdateConfigurationMachineRunProperties::setJob(const OAIJobNavigation &job) {
    m_job = job;
    m_job_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_job_Set() const{
    return m_job_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_job_Valid() const{
    return m_job_isValid;
}

QString OAIUpdateConfigurationMachineRunProperties::getLastModifiedBy() const {
    return m_last_modified_by;
}
void OAIUpdateConfigurationMachineRunProperties::setLastModifiedBy(const QString &last_modified_by) {
    m_last_modified_by = last_modified_by;
    m_last_modified_by_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_last_modified_by_Set() const{
    return m_last_modified_by_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_last_modified_by_Valid() const{
    return m_last_modified_by_isValid;
}

QDateTime OAIUpdateConfigurationMachineRunProperties::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIUpdateConfigurationMachineRunProperties::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIUpdateConfigurationMachineRunProperties::getOsType() const {
    return m_os_type;
}
void OAIUpdateConfigurationMachineRunProperties::setOsType(const QString &os_type) {
    m_os_type = os_type;
    m_os_type_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_os_type_Set() const{
    return m_os_type_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_os_type_Valid() const{
    return m_os_type_isValid;
}

OAIUpdateConfigurationNavigation OAIUpdateConfigurationMachineRunProperties::getSoftwareUpdateConfiguration() const {
    return m_software_update_configuration;
}
void OAIUpdateConfigurationMachineRunProperties::setSoftwareUpdateConfiguration(const OAIUpdateConfigurationNavigation &software_update_configuration) {
    m_software_update_configuration = software_update_configuration;
    m_software_update_configuration_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_software_update_configuration_Set() const{
    return m_software_update_configuration_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_software_update_configuration_Valid() const{
    return m_software_update_configuration_isValid;
}

QString OAIUpdateConfigurationMachineRunProperties::getSourceComputerId() const {
    return m_source_computer_id;
}
void OAIUpdateConfigurationMachineRunProperties::setSourceComputerId(const QString &source_computer_id) {
    m_source_computer_id = source_computer_id;
    m_source_computer_id_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_source_computer_id_Set() const{
    return m_source_computer_id_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_source_computer_id_Valid() const{
    return m_source_computer_id_isValid;
}

QDateTime OAIUpdateConfigurationMachineRunProperties::getStartTime() const {
    return m_start_time;
}
void OAIUpdateConfigurationMachineRunProperties::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIUpdateConfigurationMachineRunProperties::getStatus() const {
    return m_status;
}
void OAIUpdateConfigurationMachineRunProperties::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIUpdateConfigurationMachineRunProperties::getTargetComputer() const {
    return m_target_computer;
}
void OAIUpdateConfigurationMachineRunProperties::setTargetComputer(const QString &target_computer) {
    m_target_computer = target_computer;
    m_target_computer_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_target_computer_Set() const{
    return m_target_computer_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_target_computer_Valid() const{
    return m_target_computer_isValid;
}

QString OAIUpdateConfigurationMachineRunProperties::getTargetComputerType() const {
    return m_target_computer_type;
}
void OAIUpdateConfigurationMachineRunProperties::setTargetComputerType(const QString &target_computer_type) {
    m_target_computer_type = target_computer_type;
    m_target_computer_type_isSet = true;
}

bool OAIUpdateConfigurationMachineRunProperties::is_target_computer_type_Set() const{
    return m_target_computer_type_isSet;
}

bool OAIUpdateConfigurationMachineRunProperties::is_target_computer_type_Valid() const{
    return m_target_computer_type_isValid;
}

bool OAIUpdateConfigurationMachineRunProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configured_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_correlation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_job.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_os_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_software_update_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_computer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_computer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_computer_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateConfigurationMachineRunProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
