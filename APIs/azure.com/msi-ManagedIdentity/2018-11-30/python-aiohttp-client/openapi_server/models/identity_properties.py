# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentityProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, client_secret_url: str=None, principal_id: str=None, tenant_id: str=None):
        """IdentityProperties - a model defined in OpenAPI

        :param client_id: The client_id of this IdentityProperties.
        :param client_secret_url: The client_secret_url of this IdentityProperties.
        :param principal_id: The principal_id of this IdentityProperties.
        :param tenant_id: The tenant_id of this IdentityProperties.
        """
        self.openapi_types = {
            'client_id': str,
            'client_secret_url': str,
            'principal_id': str,
            'tenant_id': str
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'client_secret_url': 'clientSecretUrl',
            'principal_id': 'principalId',
            'tenant_id': 'tenantId'
        }

        self._client_id = client_id
        self._client_secret_url = client_secret_url
        self._principal_id = principal_id
        self._tenant_id = tenant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentityProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentityProperties of this IdentityProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this IdentityProperties.

        The id of the app associated with the identity. This is a random generated UUID by MSI.

        :return: The client_id of this IdentityProperties.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this IdentityProperties.

        The id of the app associated with the identity. This is a random generated UUID by MSI.

        :param client_id: The client_id of this IdentityProperties.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def client_secret_url(self):
        """Gets the client_secret_url of this IdentityProperties.

         The ManagedServiceIdentity DataPlane URL that can be queried to obtain the identity credentials. If identity is user assigned, then the clientSecretUrl will not be present in the response, otherwise it will be present.

        :return: The client_secret_url of this IdentityProperties.
        :rtype: str
        """
        return self._client_secret_url

    @client_secret_url.setter
    def client_secret_url(self, client_secret_url):
        """Sets the client_secret_url of this IdentityProperties.

         The ManagedServiceIdentity DataPlane URL that can be queried to obtain the identity credentials. If identity is user assigned, then the clientSecretUrl will not be present in the response, otherwise it will be present.

        :param client_secret_url: The client_secret_url of this IdentityProperties.
        :type client_secret_url: str
        """

        self._client_secret_url = client_secret_url

    @property
    def principal_id(self):
        """Gets the principal_id of this IdentityProperties.

        The id of the service principal object associated with the created identity.

        :return: The principal_id of this IdentityProperties.
        :rtype: str
        """
        return self._principal_id

    @principal_id.setter
    def principal_id(self, principal_id):
        """Sets the principal_id of this IdentityProperties.

        The id of the service principal object associated with the created identity.

        :param principal_id: The principal_id of this IdentityProperties.
        :type principal_id: str
        """

        self._principal_id = principal_id

    @property
    def tenant_id(self):
        """Gets the tenant_id of this IdentityProperties.

        The id of the tenant which the identity belongs to.

        :return: The tenant_id of this IdentityProperties.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this IdentityProperties.

        The id of the tenant which the identity belongs to.

        :param tenant_id: The tenant_id of this IdentityProperties.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id
