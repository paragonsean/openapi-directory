/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProtocolCustomSettingsFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProtocolCustomSettingsFormat::OAIProtocolCustomSettingsFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProtocolCustomSettingsFormat::OAIProtocolCustomSettingsFormat() {
    this->initializeModel();
}

OAIProtocolCustomSettingsFormat::~OAIProtocolCustomSettingsFormat() {}

void OAIProtocolCustomSettingsFormat::initializeModel() {

    m_protocol_isSet = false;
    m_protocol_isValid = false;

    m_source_rate_override_isSet = false;
    m_source_rate_override_isValid = false;

    m_trigger_rate_override_isSet = false;
    m_trigger_rate_override_isValid = false;

    m_trigger_sensitivity_override_isSet = false;
    m_trigger_sensitivity_override_isValid = false;
}

void OAIProtocolCustomSettingsFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProtocolCustomSettingsFormat::fromJsonObject(QJsonObject json) {

    m_protocol_isValid = ::OpenAPI::fromJsonValue(m_protocol, json[QString("protocol")]);
    m_protocol_isSet = !json[QString("protocol")].isNull() && m_protocol_isValid;

    m_source_rate_override_isValid = ::OpenAPI::fromJsonValue(m_source_rate_override, json[QString("sourceRateOverride")]);
    m_source_rate_override_isSet = !json[QString("sourceRateOverride")].isNull() && m_source_rate_override_isValid;

    m_trigger_rate_override_isValid = ::OpenAPI::fromJsonValue(m_trigger_rate_override, json[QString("triggerRateOverride")]);
    m_trigger_rate_override_isSet = !json[QString("triggerRateOverride")].isNull() && m_trigger_rate_override_isValid;

    m_trigger_sensitivity_override_isValid = ::OpenAPI::fromJsonValue(m_trigger_sensitivity_override, json[QString("triggerSensitivityOverride")]);
    m_trigger_sensitivity_override_isSet = !json[QString("triggerSensitivityOverride")].isNull() && m_trigger_sensitivity_override_isValid;
}

QString OAIProtocolCustomSettingsFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProtocolCustomSettingsFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_protocol_isSet) {
        obj.insert(QString("protocol"), ::OpenAPI::toJsonValue(m_protocol));
    }
    if (m_source_rate_override_isSet) {
        obj.insert(QString("sourceRateOverride"), ::OpenAPI::toJsonValue(m_source_rate_override));
    }
    if (m_trigger_rate_override_isSet) {
        obj.insert(QString("triggerRateOverride"), ::OpenAPI::toJsonValue(m_trigger_rate_override));
    }
    if (m_trigger_sensitivity_override_isSet) {
        obj.insert(QString("triggerSensitivityOverride"), ::OpenAPI::toJsonValue(m_trigger_sensitivity_override));
    }
    return obj;
}

QString OAIProtocolCustomSettingsFormat::getProtocol() const {
    return m_protocol;
}
void OAIProtocolCustomSettingsFormat::setProtocol(const QString &protocol) {
    m_protocol = protocol;
    m_protocol_isSet = true;
}

bool OAIProtocolCustomSettingsFormat::is_protocol_Set() const{
    return m_protocol_isSet;
}

bool OAIProtocolCustomSettingsFormat::is_protocol_Valid() const{
    return m_protocol_isValid;
}

QString OAIProtocolCustomSettingsFormat::getSourceRateOverride() const {
    return m_source_rate_override;
}
void OAIProtocolCustomSettingsFormat::setSourceRateOverride(const QString &source_rate_override) {
    m_source_rate_override = source_rate_override;
    m_source_rate_override_isSet = true;
}

bool OAIProtocolCustomSettingsFormat::is_source_rate_override_Set() const{
    return m_source_rate_override_isSet;
}

bool OAIProtocolCustomSettingsFormat::is_source_rate_override_Valid() const{
    return m_source_rate_override_isValid;
}

QString OAIProtocolCustomSettingsFormat::getTriggerRateOverride() const {
    return m_trigger_rate_override;
}
void OAIProtocolCustomSettingsFormat::setTriggerRateOverride(const QString &trigger_rate_override) {
    m_trigger_rate_override = trigger_rate_override;
    m_trigger_rate_override_isSet = true;
}

bool OAIProtocolCustomSettingsFormat::is_trigger_rate_override_Set() const{
    return m_trigger_rate_override_isSet;
}

bool OAIProtocolCustomSettingsFormat::is_trigger_rate_override_Valid() const{
    return m_trigger_rate_override_isValid;
}

QString OAIProtocolCustomSettingsFormat::getTriggerSensitivityOverride() const {
    return m_trigger_sensitivity_override;
}
void OAIProtocolCustomSettingsFormat::setTriggerSensitivityOverride(const QString &trigger_sensitivity_override) {
    m_trigger_sensitivity_override = trigger_sensitivity_override;
    m_trigger_sensitivity_override_isSet = true;
}

bool OAIProtocolCustomSettingsFormat::is_trigger_sensitivity_override_Set() const{
    return m_trigger_sensitivity_override_isSet;
}

bool OAIProtocolCustomSettingsFormat::is_trigger_sensitivity_override_Valid() const{
    return m_trigger_sensitivity_override_isValid;
}

bool OAIProtocolCustomSettingsFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_protocol_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_rate_override_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_rate_override_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_sensitivity_override_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProtocolCustomSettingsFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
