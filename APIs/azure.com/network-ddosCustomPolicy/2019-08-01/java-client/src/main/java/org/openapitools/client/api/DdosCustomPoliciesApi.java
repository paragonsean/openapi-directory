/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.DdosCustomPoliciesUpdateTagsRequest;
import org.openapitools.client.model.DdosCustomPolicy;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DdosCustomPoliciesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DdosCustomPoliciesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DdosCustomPoliciesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for ddosCustomPoliciesCreateOrUpdate
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the create or update operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Create successful. The operation returns the resulting DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ddosCustomPoliciesCreateOrUpdateCall(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, DdosCustomPolicy parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "ddosCustomPolicyName" + "}", localVarApiClient.escapeString(ddosCustomPolicyName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ddosCustomPoliciesCreateOrUpdateValidateBeforeCall(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, DdosCustomPolicy parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling ddosCustomPoliciesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'ddosCustomPolicyName' is set
        if (ddosCustomPolicyName == null) {
            throw new ApiException("Missing the required parameter 'ddosCustomPolicyName' when calling ddosCustomPoliciesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling ddosCustomPoliciesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling ddosCustomPoliciesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling ddosCustomPoliciesCreateOrUpdate(Async)");
        }

        return ddosCustomPoliciesCreateOrUpdateCall(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Creates or updates a DDoS custom policy.
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the create or update operation. (required)
     * @return DdosCustomPolicy
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Create successful. The operation returns the resulting DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public DdosCustomPolicy ddosCustomPoliciesCreateOrUpdate(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, DdosCustomPolicy parameters) throws ApiException {
        ApiResponse<DdosCustomPolicy> localVarResp = ddosCustomPoliciesCreateOrUpdateWithHttpInfo(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates or updates a DDoS custom policy.
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the create or update operation. (required)
     * @return ApiResponse&lt;DdosCustomPolicy&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Create successful. The operation returns the resulting DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DdosCustomPolicy> ddosCustomPoliciesCreateOrUpdateWithHttpInfo(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, DdosCustomPolicy parameters) throws ApiException {
        okhttp3.Call localVarCall = ddosCustomPoliciesCreateOrUpdateValidateBeforeCall(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<DdosCustomPolicy>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates or updates a DDoS custom policy.
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the create or update operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Create successful. The operation returns the resulting DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ddosCustomPoliciesCreateOrUpdateAsync(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, DdosCustomPolicy parameters, final ApiCallback<DdosCustomPolicy> _callback) throws ApiException {

        okhttp3.Call localVarCall = ddosCustomPoliciesCreateOrUpdateValidateBeforeCall(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<DdosCustomPolicy>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for ddosCustomPoliciesDelete
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Request successful. Resource does not exist. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ddosCustomPoliciesDeleteCall(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "ddosCustomPolicyName" + "}", localVarApiClient.escapeString(ddosCustomPolicyName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ddosCustomPoliciesDeleteValidateBeforeCall(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling ddosCustomPoliciesDelete(Async)");
        }

        // verify the required parameter 'ddosCustomPolicyName' is set
        if (ddosCustomPolicyName == null) {
            throw new ApiException("Missing the required parameter 'ddosCustomPolicyName' when calling ddosCustomPoliciesDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling ddosCustomPoliciesDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling ddosCustomPoliciesDelete(Async)");
        }

        return ddosCustomPoliciesDeleteCall(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Deletes the specified DDoS custom policy.
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Request successful. Resource does not exist. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void ddosCustomPoliciesDelete(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId) throws ApiException {
        ddosCustomPoliciesDeleteWithHttpInfo(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId);
    }

    /**
     * 
     * Deletes the specified DDoS custom policy.
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Request successful. Resource does not exist. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> ddosCustomPoliciesDeleteWithHttpInfo(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = ddosCustomPoliciesDeleteValidateBeforeCall(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes the specified DDoS custom policy.
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Request successful. Resource does not exist. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ddosCustomPoliciesDeleteAsync(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = ddosCustomPoliciesDeleteValidateBeforeCall(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for ddosCustomPoliciesGet
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the specified DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ddosCustomPoliciesGetCall(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "ddosCustomPolicyName" + "}", localVarApiClient.escapeString(ddosCustomPolicyName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ddosCustomPoliciesGetValidateBeforeCall(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling ddosCustomPoliciesGet(Async)");
        }

        // verify the required parameter 'ddosCustomPolicyName' is set
        if (ddosCustomPolicyName == null) {
            throw new ApiException("Missing the required parameter 'ddosCustomPolicyName' when calling ddosCustomPoliciesGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling ddosCustomPoliciesGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling ddosCustomPoliciesGet(Async)");
        }

        return ddosCustomPoliciesGetCall(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets information about the specified DDoS custom policy.
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return DdosCustomPolicy
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the specified DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public DdosCustomPolicy ddosCustomPoliciesGet(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<DdosCustomPolicy> localVarResp = ddosCustomPoliciesGetWithHttpInfo(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets information about the specified DDoS custom policy.
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;DdosCustomPolicy&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the specified DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DdosCustomPolicy> ddosCustomPoliciesGetWithHttpInfo(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = ddosCustomPoliciesGetValidateBeforeCall(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<DdosCustomPolicy>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets information about the specified DDoS custom policy.
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. The operation returns the specified DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ddosCustomPoliciesGetAsync(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, final ApiCallback<DdosCustomPolicy> _callback) throws ApiException {

        okhttp3.Call localVarCall = ddosCustomPoliciesGetValidateBeforeCall(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<DdosCustomPolicy>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for ddosCustomPoliciesUpdateTags
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the update DDoS custom policy resource tags. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ddosCustomPoliciesUpdateTagsCall(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, DdosCustomPoliciesUpdateTagsRequest parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "ddosCustomPolicyName" + "}", localVarApiClient.escapeString(ddosCustomPolicyName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ddosCustomPoliciesUpdateTagsValidateBeforeCall(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, DdosCustomPoliciesUpdateTagsRequest parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling ddosCustomPoliciesUpdateTags(Async)");
        }

        // verify the required parameter 'ddosCustomPolicyName' is set
        if (ddosCustomPolicyName == null) {
            throw new ApiException("Missing the required parameter 'ddosCustomPolicyName' when calling ddosCustomPoliciesUpdateTags(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling ddosCustomPoliciesUpdateTags(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling ddosCustomPoliciesUpdateTags(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling ddosCustomPoliciesUpdateTags(Async)");
        }

        return ddosCustomPoliciesUpdateTagsCall(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Update a DDoS custom policy tags.
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the update DDoS custom policy resource tags. (required)
     * @return DdosCustomPolicy
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public DdosCustomPolicy ddosCustomPoliciesUpdateTags(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, DdosCustomPoliciesUpdateTagsRequest parameters) throws ApiException {
        ApiResponse<DdosCustomPolicy> localVarResp = ddosCustomPoliciesUpdateTagsWithHttpInfo(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Update a DDoS custom policy tags.
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the update DDoS custom policy resource tags. (required)
     * @return ApiResponse&lt;DdosCustomPolicy&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DdosCustomPolicy> ddosCustomPoliciesUpdateTagsWithHttpInfo(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, DdosCustomPoliciesUpdateTagsRequest parameters) throws ApiException {
        okhttp3.Call localVarCall = ddosCustomPoliciesUpdateTagsValidateBeforeCall(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<DdosCustomPolicy>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update a DDoS custom policy tags.
     * @param resourceGroupName The name of the resource group. (required)
     * @param ddosCustomPolicyName The name of the DDoS custom policy. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the update DDoS custom policy resource tags. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update successful. The operation returns the resulting DDoS custom policy resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ddosCustomPoliciesUpdateTagsAsync(String resourceGroupName, String ddosCustomPolicyName, String apiVersion, String subscriptionId, DdosCustomPoliciesUpdateTagsRequest parameters, final ApiCallback<DdosCustomPolicy> _callback) throws ApiException {

        okhttp3.Call localVarCall = ddosCustomPoliciesUpdateTagsValidateBeforeCall(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<DdosCustomPolicy>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
