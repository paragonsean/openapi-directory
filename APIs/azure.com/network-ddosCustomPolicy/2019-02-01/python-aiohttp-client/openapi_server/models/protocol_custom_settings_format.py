# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProtocolCustomSettingsFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, protocol: str=None, source_rate_override: str=None, trigger_rate_override: str=None, trigger_sensitivity_override: str=None):
        """ProtocolCustomSettingsFormat - a model defined in OpenAPI

        :param protocol: The protocol of this ProtocolCustomSettingsFormat.
        :param source_rate_override: The source_rate_override of this ProtocolCustomSettingsFormat.
        :param trigger_rate_override: The trigger_rate_override of this ProtocolCustomSettingsFormat.
        :param trigger_sensitivity_override: The trigger_sensitivity_override of this ProtocolCustomSettingsFormat.
        """
        self.openapi_types = {
            'protocol': str,
            'source_rate_override': str,
            'trigger_rate_override': str,
            'trigger_sensitivity_override': str
        }

        self.attribute_map = {
            'protocol': 'protocol',
            'source_rate_override': 'sourceRateOverride',
            'trigger_rate_override': 'triggerRateOverride',
            'trigger_sensitivity_override': 'triggerSensitivityOverride'
        }

        self._protocol = protocol
        self._source_rate_override = source_rate_override
        self._trigger_rate_override = trigger_rate_override
        self._trigger_sensitivity_override = trigger_sensitivity_override

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProtocolCustomSettingsFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProtocolCustomSettingsFormat of this ProtocolCustomSettingsFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def protocol(self):
        """Gets the protocol of this ProtocolCustomSettingsFormat.

        The protocol for which the DDoS protection policy is being customized.

        :return: The protocol of this ProtocolCustomSettingsFormat.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this ProtocolCustomSettingsFormat.

        The protocol for which the DDoS protection policy is being customized.

        :param protocol: The protocol of this ProtocolCustomSettingsFormat.
        :type protocol: str
        """
        allowed_values = ["Tcp", "Udp", "Syn"]  # noqa: E501
        if protocol not in allowed_values:
            raise ValueError(
                "Invalid value for `protocol` ({0}), must be one of {1}"
                .format(protocol, allowed_values)
            )

        self._protocol = protocol

    @property
    def source_rate_override(self):
        """Gets the source_rate_override of this ProtocolCustomSettingsFormat.

        The customized DDoS protection source rate.

        :return: The source_rate_override of this ProtocolCustomSettingsFormat.
        :rtype: str
        """
        return self._source_rate_override

    @source_rate_override.setter
    def source_rate_override(self, source_rate_override):
        """Sets the source_rate_override of this ProtocolCustomSettingsFormat.

        The customized DDoS protection source rate.

        :param source_rate_override: The source_rate_override of this ProtocolCustomSettingsFormat.
        :type source_rate_override: str
        """

        self._source_rate_override = source_rate_override

    @property
    def trigger_rate_override(self):
        """Gets the trigger_rate_override of this ProtocolCustomSettingsFormat.

        The customized DDoS protection trigger rate.

        :return: The trigger_rate_override of this ProtocolCustomSettingsFormat.
        :rtype: str
        """
        return self._trigger_rate_override

    @trigger_rate_override.setter
    def trigger_rate_override(self, trigger_rate_override):
        """Sets the trigger_rate_override of this ProtocolCustomSettingsFormat.

        The customized DDoS protection trigger rate.

        :param trigger_rate_override: The trigger_rate_override of this ProtocolCustomSettingsFormat.
        :type trigger_rate_override: str
        """

        self._trigger_rate_override = trigger_rate_override

    @property
    def trigger_sensitivity_override(self):
        """Gets the trigger_sensitivity_override of this ProtocolCustomSettingsFormat.

        The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.

        :return: The trigger_sensitivity_override of this ProtocolCustomSettingsFormat.
        :rtype: str
        """
        return self._trigger_sensitivity_override

    @trigger_sensitivity_override.setter
    def trigger_sensitivity_override(self, trigger_sensitivity_override):
        """Sets the trigger_sensitivity_override of this ProtocolCustomSettingsFormat.

        The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.

        :param trigger_sensitivity_override: The trigger_sensitivity_override of this ProtocolCustomSettingsFormat.
        :type trigger_sensitivity_override: str
        """
        allowed_values = ["Relaxed", "Low", "Default", "High"]  # noqa: E501
        if trigger_sensitivity_override not in allowed_values:
            raise ValueError(
                "Invalid value for `trigger_sensitivity_override` ({0}), must be one of {1}"
                .format(trigger_sensitivity_override, allowed_values)
            )

        self._trigger_sensitivity_override = trigger_sensitivity_override
