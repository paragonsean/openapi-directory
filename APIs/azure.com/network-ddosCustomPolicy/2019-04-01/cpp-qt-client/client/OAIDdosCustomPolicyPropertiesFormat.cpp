/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDdosCustomPolicyPropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDdosCustomPolicyPropertiesFormat::OAIDdosCustomPolicyPropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDdosCustomPolicyPropertiesFormat::OAIDdosCustomPolicyPropertiesFormat() {
    this->initializeModel();
}

OAIDdosCustomPolicyPropertiesFormat::~OAIDdosCustomPolicyPropertiesFormat() {}

void OAIDdosCustomPolicyPropertiesFormat::initializeModel() {

    m_protocol_custom_settings_isSet = false;
    m_protocol_custom_settings_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_public_ip_addresses_isSet = false;
    m_public_ip_addresses_isValid = false;

    m_resource_guid_isSet = false;
    m_resource_guid_isValid = false;
}

void OAIDdosCustomPolicyPropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDdosCustomPolicyPropertiesFormat::fromJsonObject(QJsonObject json) {

    m_protocol_custom_settings_isValid = ::OpenAPI::fromJsonValue(m_protocol_custom_settings, json[QString("protocolCustomSettings")]);
    m_protocol_custom_settings_isSet = !json[QString("protocolCustomSettings")].isNull() && m_protocol_custom_settings_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_public_ip_addresses_isValid = ::OpenAPI::fromJsonValue(m_public_ip_addresses, json[QString("publicIPAddresses")]);
    m_public_ip_addresses_isSet = !json[QString("publicIPAddresses")].isNull() && m_public_ip_addresses_isValid;

    m_resource_guid_isValid = ::OpenAPI::fromJsonValue(m_resource_guid, json[QString("resourceGuid")]);
    m_resource_guid_isSet = !json[QString("resourceGuid")].isNull() && m_resource_guid_isValid;
}

QString OAIDdosCustomPolicyPropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDdosCustomPolicyPropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_protocol_custom_settings.size() > 0) {
        obj.insert(QString("protocolCustomSettings"), ::OpenAPI::toJsonValue(m_protocol_custom_settings));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_public_ip_addresses.size() > 0) {
        obj.insert(QString("publicIPAddresses"), ::OpenAPI::toJsonValue(m_public_ip_addresses));
    }
    if (m_resource_guid_isSet) {
        obj.insert(QString("resourceGuid"), ::OpenAPI::toJsonValue(m_resource_guid));
    }
    return obj;
}

QList<OAIProtocolCustomSettingsFormat> OAIDdosCustomPolicyPropertiesFormat::getProtocolCustomSettings() const {
    return m_protocol_custom_settings;
}
void OAIDdosCustomPolicyPropertiesFormat::setProtocolCustomSettings(const QList<OAIProtocolCustomSettingsFormat> &protocol_custom_settings) {
    m_protocol_custom_settings = protocol_custom_settings;
    m_protocol_custom_settings_isSet = true;
}

bool OAIDdosCustomPolicyPropertiesFormat::is_protocol_custom_settings_Set() const{
    return m_protocol_custom_settings_isSet;
}

bool OAIDdosCustomPolicyPropertiesFormat::is_protocol_custom_settings_Valid() const{
    return m_protocol_custom_settings_isValid;
}

QString OAIDdosCustomPolicyPropertiesFormat::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIDdosCustomPolicyPropertiesFormat::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIDdosCustomPolicyPropertiesFormat::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIDdosCustomPolicyPropertiesFormat::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QList<OAIDdosCustomPolicyPropertiesFormat_publicIPAddresses_inner> OAIDdosCustomPolicyPropertiesFormat::getPublicIpAddresses() const {
    return m_public_ip_addresses;
}
void OAIDdosCustomPolicyPropertiesFormat::setPublicIpAddresses(const QList<OAIDdosCustomPolicyPropertiesFormat_publicIPAddresses_inner> &public_ip_addresses) {
    m_public_ip_addresses = public_ip_addresses;
    m_public_ip_addresses_isSet = true;
}

bool OAIDdosCustomPolicyPropertiesFormat::is_public_ip_addresses_Set() const{
    return m_public_ip_addresses_isSet;
}

bool OAIDdosCustomPolicyPropertiesFormat::is_public_ip_addresses_Valid() const{
    return m_public_ip_addresses_isValid;
}

QString OAIDdosCustomPolicyPropertiesFormat::getResourceGuid() const {
    return m_resource_guid;
}
void OAIDdosCustomPolicyPropertiesFormat::setResourceGuid(const QString &resource_guid) {
    m_resource_guid = resource_guid;
    m_resource_guid_isSet = true;
}

bool OAIDdosCustomPolicyPropertiesFormat::is_resource_guid_Set() const{
    return m_resource_guid_isSet;
}

bool OAIDdosCustomPolicyPropertiesFormat::is_resource_guid_Valid() const{
    return m_resource_guid_isValid;
}

bool OAIDdosCustomPolicyPropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_protocol_custom_settings.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_ip_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_guid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDdosCustomPolicyPropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
