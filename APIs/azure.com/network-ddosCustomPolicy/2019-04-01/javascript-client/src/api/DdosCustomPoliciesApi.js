/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import DdosCustomPoliciesUpdateTagsRequest from '../model/DdosCustomPoliciesUpdateTagsRequest';
import DdosCustomPolicy from '../model/DdosCustomPolicy';

/**
* DdosCustomPolicies service.
* @module api/DdosCustomPoliciesApi
* @version 2019-04-01
*/
export default class DdosCustomPoliciesApi {

    /**
    * Constructs a new DdosCustomPoliciesApi. 
    * @alias module:api/DdosCustomPoliciesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the ddosCustomPoliciesCreateOrUpdate operation.
     * @callback module:api/DdosCustomPoliciesApi~ddosCustomPoliciesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DdosCustomPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a DDoS custom policy.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} ddosCustomPolicyName The name of the DDoS custom policy.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/DdosCustomPolicy} parameters Parameters supplied to the create or update operation.
     * @param {module:api/DdosCustomPoliciesApi~ddosCustomPoliciesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DdosCustomPolicy}
     */
    ddosCustomPoliciesCreateOrUpdate(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling ddosCustomPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'ddosCustomPolicyName' is set
      if (ddosCustomPolicyName === undefined || ddosCustomPolicyName === null) {
        throw new Error("Missing the required parameter 'ddosCustomPolicyName' when calling ddosCustomPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling ddosCustomPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling ddosCustomPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling ddosCustomPoliciesCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'ddosCustomPolicyName': ddosCustomPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DdosCustomPolicy;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ddosCustomPoliciesDelete operation.
     * @callback module:api/DdosCustomPoliciesApi~ddosCustomPoliciesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified DDoS custom policy.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} ddosCustomPolicyName The name of the DDoS custom policy.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/DdosCustomPoliciesApi~ddosCustomPoliciesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    ddosCustomPoliciesDelete(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling ddosCustomPoliciesDelete");
      }
      // verify the required parameter 'ddosCustomPolicyName' is set
      if (ddosCustomPolicyName === undefined || ddosCustomPolicyName === null) {
        throw new Error("Missing the required parameter 'ddosCustomPolicyName' when calling ddosCustomPoliciesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling ddosCustomPoliciesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling ddosCustomPoliciesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'ddosCustomPolicyName': ddosCustomPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ddosCustomPoliciesGet operation.
     * @callback module:api/DdosCustomPoliciesApi~ddosCustomPoliciesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DdosCustomPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets information about the specified DDoS custom policy.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} ddosCustomPolicyName The name of the DDoS custom policy.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/DdosCustomPoliciesApi~ddosCustomPoliciesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DdosCustomPolicy}
     */
    ddosCustomPoliciesGet(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling ddosCustomPoliciesGet");
      }
      // verify the required parameter 'ddosCustomPolicyName' is set
      if (ddosCustomPolicyName === undefined || ddosCustomPolicyName === null) {
        throw new Error("Missing the required parameter 'ddosCustomPolicyName' when calling ddosCustomPoliciesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling ddosCustomPoliciesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling ddosCustomPoliciesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'ddosCustomPolicyName': ddosCustomPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DdosCustomPolicy;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ddosCustomPoliciesUpdateTags operation.
     * @callback module:api/DdosCustomPoliciesApi~ddosCustomPoliciesUpdateTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DdosCustomPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a DDoS custom policy tags.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} ddosCustomPolicyName The name of the DDoS custom policy.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/DdosCustomPoliciesUpdateTagsRequest} parameters Parameters supplied to the update DDoS custom policy resource tags.
     * @param {module:api/DdosCustomPoliciesApi~ddosCustomPoliciesUpdateTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DdosCustomPolicy}
     */
    ddosCustomPoliciesUpdateTags(resourceGroupName, ddosCustomPolicyName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling ddosCustomPoliciesUpdateTags");
      }
      // verify the required parameter 'ddosCustomPolicyName' is set
      if (ddosCustomPolicyName === undefined || ddosCustomPolicyName === null) {
        throw new Error("Missing the required parameter 'ddosCustomPolicyName' when calling ddosCustomPoliciesUpdateTags");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling ddosCustomPoliciesUpdateTags");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling ddosCustomPoliciesUpdateTags");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling ddosCustomPoliciesUpdateTags");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'ddosCustomPolicyName': ddosCustomPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DdosCustomPolicy;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
