/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShareProperties.h
 *
 * The share properties.
 */

#ifndef OAIShareProperties_H
#define OAIShareProperties_H

#include <QJsonObject>

#include "OAIAzureContainerInfo.h"
#include "OAIClientAccessRight.h"
#include "OAIMountPointMap.h"
#include "OAIRefreshDetails.h"
#include "OAIUserAccessRight.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAzureContainerInfo;
class OAIClientAccessRight;
class OAIRefreshDetails;
class OAIMountPointMap;
class OAIUserAccessRight;

class OAIShareProperties : public OAIObject {
public:
    OAIShareProperties();
    OAIShareProperties(QString json);
    ~OAIShareProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessProtocol() const;
    void setAccessProtocol(const QString &access_protocol);
    bool is_access_protocol_Set() const;
    bool is_access_protocol_Valid() const;

    OAIAzureContainerInfo getAzureContainerInfo() const;
    void setAzureContainerInfo(const OAIAzureContainerInfo &azure_container_info);
    bool is_azure_container_info_Set() const;
    bool is_azure_container_info_Valid() const;

    QList<OAIClientAccessRight> getClientAccessRights() const;
    void setClientAccessRights(const QList<OAIClientAccessRight> &client_access_rights);
    bool is_client_access_rights_Set() const;
    bool is_client_access_rights_Valid() const;

    QString getDataPolicy() const;
    void setDataPolicy(const QString &data_policy);
    bool is_data_policy_Set() const;
    bool is_data_policy_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getMonitoringStatus() const;
    void setMonitoringStatus(const QString &monitoring_status);
    bool is_monitoring_status_Set() const;
    bool is_monitoring_status_Valid() const;

    OAIRefreshDetails getRefreshDetails() const;
    void setRefreshDetails(const OAIRefreshDetails &refresh_details);
    bool is_refresh_details_Set() const;
    bool is_refresh_details_Valid() const;

    QList<OAIMountPointMap> getShareMappings() const;
    void setShareMappings(const QList<OAIMountPointMap> &share_mappings);
    bool is_share_mappings_Set() const;
    bool is_share_mappings_Valid() const;

    QString getShareStatus() const;
    void setShareStatus(const QString &share_status);
    bool is_share_status_Set() const;
    bool is_share_status_Valid() const;

    QList<OAIUserAccessRight> getUserAccessRights() const;
    void setUserAccessRights(const QList<OAIUserAccessRight> &user_access_rights);
    bool is_user_access_rights_Set() const;
    bool is_user_access_rights_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_protocol;
    bool m_access_protocol_isSet;
    bool m_access_protocol_isValid;

    OAIAzureContainerInfo m_azure_container_info;
    bool m_azure_container_info_isSet;
    bool m_azure_container_info_isValid;

    QList<OAIClientAccessRight> m_client_access_rights;
    bool m_client_access_rights_isSet;
    bool m_client_access_rights_isValid;

    QString m_data_policy;
    bool m_data_policy_isSet;
    bool m_data_policy_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_monitoring_status;
    bool m_monitoring_status_isSet;
    bool m_monitoring_status_isValid;

    OAIRefreshDetails m_refresh_details;
    bool m_refresh_details_isSet;
    bool m_refresh_details_isValid;

    QList<OAIMountPointMap> m_share_mappings;
    bool m_share_mappings_isSet;
    bool m_share_mappings_isValid;

    QString m_share_status;
    bool m_share_status_isSet;
    bool m_share_status_isValid;

    QList<OAIUserAccessRight> m_user_access_rights;
    bool m_user_access_rights_isSet;
    bool m_user_access_rights_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShareProperties)

#endif // OAIShareProperties_H
