/*
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.User;
import org.openapitools.client.model.UserList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Disabled
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    /**
     * Creates a new user or updates an existing user&#39;s information on a data box edge/gateway device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersCreateOrUpdateTest() throws ApiException {
        String deviceName = null;
        String name = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        User user = null;
        User response = api.usersCreateOrUpdate(deviceName, name, subscriptionId, resourceGroupName, apiVersion, user);
        // TODO: test validations
    }

    /**
     * Deletes the user on a databox edge/gateway device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersDeleteTest() throws ApiException {
        String deviceName = null;
        String name = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        api.usersDelete(deviceName, name, subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the properties of the specified user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersGetTest() throws ApiException {
        String deviceName = null;
        String name = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        User response = api.usersGet(deviceName, name, subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all the users registered on a data box edge/gateway device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersListByDataBoxEdgeDeviceTest() throws ApiException {
        String deviceName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        UserList response = api.usersListByDataBoxEdgeDevice(deviceName, subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

}
