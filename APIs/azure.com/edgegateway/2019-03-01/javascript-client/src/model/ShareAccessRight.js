/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShareAccessRight model module.
 * @module model/ShareAccessRight
 * @version 2019-03-01
 */
class ShareAccessRight {
    /**
     * Constructs a new <code>ShareAccessRight</code>.
     * Specifies the mapping between this particular user and the type of access he has on shares on this device.
     * @alias module:model/ShareAccessRight
     * @param accessType {module:model/ShareAccessRight.AccessTypeEnum} Type of access to be allowed on the share for this user.
     * @param shareId {String} The share ID.
     */
    constructor(accessType, shareId) { 
        
        ShareAccessRight.initialize(this, accessType, shareId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessType, shareId) { 
        obj['accessType'] = accessType;
        obj['shareId'] = shareId;
    }

    /**
     * Constructs a <code>ShareAccessRight</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShareAccessRight} obj Optional instance to populate.
     * @return {module:model/ShareAccessRight} The populated <code>ShareAccessRight</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShareAccessRight();

            if (data.hasOwnProperty('accessType')) {
                obj['accessType'] = ApiClient.convertToType(data['accessType'], 'String');
            }
            if (data.hasOwnProperty('shareId')) {
                obj['shareId'] = ApiClient.convertToType(data['shareId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShareAccessRight</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShareAccessRight</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ShareAccessRight.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accessType'] && !(typeof data['accessType'] === 'string' || data['accessType'] instanceof String)) {
            throw new Error("Expected the field `accessType` to be a primitive type in the JSON string but got " + data['accessType']);
        }
        // ensure the json data is a string
        if (data['shareId'] && !(typeof data['shareId'] === 'string' || data['shareId'] instanceof String)) {
            throw new Error("Expected the field `shareId` to be a primitive type in the JSON string but got " + data['shareId']);
        }

        return true;
    }


}

ShareAccessRight.RequiredProperties = ["accessType", "shareId"];

/**
 * Type of access to be allowed on the share for this user.
 * @member {module:model/ShareAccessRight.AccessTypeEnum} accessType
 */
ShareAccessRight.prototype['accessType'] = undefined;

/**
 * The share ID.
 * @member {String} shareId
 */
ShareAccessRight.prototype['shareId'] = undefined;





/**
 * Allowed values for the <code>accessType</code> property.
 * @enum {String}
 * @readonly
 */
ShareAccessRight['AccessTypeEnum'] = {

    /**
     * value: "Change"
     * @const
     */
    "Change": "Change",

    /**
     * value: "Read"
     * @const
     */
    "Read": "Read",

    /**
     * value: "Custom"
     * @const
     */
    "Custom": "Custom"
};



export default ShareAccessRight;

