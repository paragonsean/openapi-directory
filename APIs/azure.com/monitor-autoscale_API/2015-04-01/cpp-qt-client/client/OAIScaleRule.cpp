/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScaleRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScaleRule::OAIScaleRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScaleRule::OAIScaleRule() {
    this->initializeModel();
}

OAIScaleRule::~OAIScaleRule() {}

void OAIScaleRule::initializeModel() {

    m_metric_trigger_isSet = false;
    m_metric_trigger_isValid = false;

    m_scale_action_isSet = false;
    m_scale_action_isValid = false;
}

void OAIScaleRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScaleRule::fromJsonObject(QJsonObject json) {

    m_metric_trigger_isValid = ::OpenAPI::fromJsonValue(m_metric_trigger, json[QString("metricTrigger")]);
    m_metric_trigger_isSet = !json[QString("metricTrigger")].isNull() && m_metric_trigger_isValid;

    m_scale_action_isValid = ::OpenAPI::fromJsonValue(m_scale_action, json[QString("scaleAction")]);
    m_scale_action_isSet = !json[QString("scaleAction")].isNull() && m_scale_action_isValid;
}

QString OAIScaleRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScaleRule::asJsonObject() const {
    QJsonObject obj;
    if (m_metric_trigger.isSet()) {
        obj.insert(QString("metricTrigger"), ::OpenAPI::toJsonValue(m_metric_trigger));
    }
    if (m_scale_action.isSet()) {
        obj.insert(QString("scaleAction"), ::OpenAPI::toJsonValue(m_scale_action));
    }
    return obj;
}

OAIMetricTrigger OAIScaleRule::getMetricTrigger() const {
    return m_metric_trigger;
}
void OAIScaleRule::setMetricTrigger(const OAIMetricTrigger &metric_trigger) {
    m_metric_trigger = metric_trigger;
    m_metric_trigger_isSet = true;
}

bool OAIScaleRule::is_metric_trigger_Set() const{
    return m_metric_trigger_isSet;
}

bool OAIScaleRule::is_metric_trigger_Valid() const{
    return m_metric_trigger_isValid;
}

OAIScaleAction OAIScaleRule::getScaleAction() const {
    return m_scale_action;
}
void OAIScaleRule::setScaleAction(const OAIScaleAction &scale_action) {
    m_scale_action = scale_action;
    m_scale_action_isSet = true;
}

bool OAIScaleRule::is_scale_action_Set() const{
    return m_scale_action_isSet;
}

bool OAIScaleRule::is_scale_action_Valid() const{
    return m_scale_action_isValid;
}

bool OAIScaleRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metric_trigger.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scale_action.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScaleRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_metric_trigger_isValid && m_scale_action_isValid && true;
}

} // namespace OpenAPI
