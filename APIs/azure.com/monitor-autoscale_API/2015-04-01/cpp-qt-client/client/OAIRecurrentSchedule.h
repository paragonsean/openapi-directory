/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecurrentSchedule.h
 *
 * The scheduling constraints for when the profile begins.
 */

#ifndef OAIRecurrentSchedule_H
#define OAIRecurrentSchedule_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRecurrentSchedule : public OAIObject {
public:
    OAIRecurrentSchedule();
    OAIRecurrentSchedule(QString json);
    ~OAIRecurrentSchedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getDays() const;
    void setDays(const QList<QString> &days);
    bool is_days_Set() const;
    bool is_days_Valid() const;

    QList<qint32> getHours() const;
    void setHours(const QList<qint32> &hours);
    bool is_hours_Set() const;
    bool is_hours_Valid() const;

    QList<qint32> getMinutes() const;
    void setMinutes(const QList<qint32> &minutes);
    bool is_minutes_Set() const;
    bool is_minutes_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_days;
    bool m_days_isSet;
    bool m_days_isValid;

    QList<qint32> m_hours;
    bool m_hours_isSet;
    bool m_hours_isValid;

    QList<qint32> m_minutes;
    bool m_minutes_isSet;
    bool m_minutes_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecurrentSchedule)

#endif // OAIRecurrentSchedule_H
