/*
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AutoscaleSettingResource;
import org.openapitools.client.model.AutoscaleSettingResourceCollection;
import org.openapitools.client.model.ErrorResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AutoscaleSettingsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AutoscaleSettingsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AutoscaleSettingsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for autoscaleSettingsCreateOrUpdate
     * @param resourceGroupName The name of the resource group. (required)
     * @param autoscaleSettingName The autoscale setting name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @param parameters Parameters supplied to the operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to create or update an autoscale setting </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created autoscale setting </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call autoscaleSettingsCreateOrUpdateCall(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId, AutoscaleSettingResource parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/autoscalesettings/{autoscaleSettingName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "autoscaleSettingName" + "}", localVarApiClient.escapeString(autoscaleSettingName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call autoscaleSettingsCreateOrUpdateValidateBeforeCall(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId, AutoscaleSettingResource parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling autoscaleSettingsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'autoscaleSettingName' is set
        if (autoscaleSettingName == null) {
            throw new ApiException("Missing the required parameter 'autoscaleSettingName' when calling autoscaleSettingsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling autoscaleSettingsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling autoscaleSettingsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling autoscaleSettingsCreateOrUpdate(Async)");
        }

        return autoscaleSettingsCreateOrUpdateCall(resourceGroupName, autoscaleSettingName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Creates or updates an autoscale setting.
     * @param resourceGroupName The name of the resource group. (required)
     * @param autoscaleSettingName The autoscale setting name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @param parameters Parameters supplied to the operation. (required)
     * @return AutoscaleSettingResource
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to create or update an autoscale setting </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created autoscale setting </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public AutoscaleSettingResource autoscaleSettingsCreateOrUpdate(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId, AutoscaleSettingResource parameters) throws ApiException {
        ApiResponse<AutoscaleSettingResource> localVarResp = autoscaleSettingsCreateOrUpdateWithHttpInfo(resourceGroupName, autoscaleSettingName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates or updates an autoscale setting.
     * @param resourceGroupName The name of the resource group. (required)
     * @param autoscaleSettingName The autoscale setting name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @param parameters Parameters supplied to the operation. (required)
     * @return ApiResponse&lt;AutoscaleSettingResource&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to create or update an autoscale setting </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created autoscale setting </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AutoscaleSettingResource> autoscaleSettingsCreateOrUpdateWithHttpInfo(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId, AutoscaleSettingResource parameters) throws ApiException {
        okhttp3.Call localVarCall = autoscaleSettingsCreateOrUpdateValidateBeforeCall(resourceGroupName, autoscaleSettingName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<AutoscaleSettingResource>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates or updates an autoscale setting.
     * @param resourceGroupName The name of the resource group. (required)
     * @param autoscaleSettingName The autoscale setting name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @param parameters Parameters supplied to the operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to create or update an autoscale setting </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created autoscale setting </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call autoscaleSettingsCreateOrUpdateAsync(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId, AutoscaleSettingResource parameters, final ApiCallback<AutoscaleSettingResource> _callback) throws ApiException {

        okhttp3.Call localVarCall = autoscaleSettingsCreateOrUpdateValidateBeforeCall(resourceGroupName, autoscaleSettingName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<AutoscaleSettingResource>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for autoscaleSettingsDelete
     * @param resourceGroupName The name of the resource group. (required)
     * @param autoscaleSettingName The autoscale setting name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to delete an autoscale setting </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No content: Successful request to delete an autoscale setting, but the response is intentionally empty </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call autoscaleSettingsDeleteCall(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/autoscalesettings/{autoscaleSettingName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "autoscaleSettingName" + "}", localVarApiClient.escapeString(autoscaleSettingName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call autoscaleSettingsDeleteValidateBeforeCall(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling autoscaleSettingsDelete(Async)");
        }

        // verify the required parameter 'autoscaleSettingName' is set
        if (autoscaleSettingName == null) {
            throw new ApiException("Missing the required parameter 'autoscaleSettingName' when calling autoscaleSettingsDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling autoscaleSettingsDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling autoscaleSettingsDelete(Async)");
        }

        return autoscaleSettingsDeleteCall(resourceGroupName, autoscaleSettingName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Deletes and autoscale setting
     * @param resourceGroupName The name of the resource group. (required)
     * @param autoscaleSettingName The autoscale setting name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to delete an autoscale setting </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No content: Successful request to delete an autoscale setting, but the response is intentionally empty </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void autoscaleSettingsDelete(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId) throws ApiException {
        autoscaleSettingsDeleteWithHttpInfo(resourceGroupName, autoscaleSettingName, apiVersion, subscriptionId);
    }

    /**
     * 
     * Deletes and autoscale setting
     * @param resourceGroupName The name of the resource group. (required)
     * @param autoscaleSettingName The autoscale setting name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to delete an autoscale setting </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No content: Successful request to delete an autoscale setting, but the response is intentionally empty </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> autoscaleSettingsDeleteWithHttpInfo(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = autoscaleSettingsDeleteValidateBeforeCall(resourceGroupName, autoscaleSettingName, apiVersion, subscriptionId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes and autoscale setting
     * @param resourceGroupName The name of the resource group. (required)
     * @param autoscaleSettingName The autoscale setting name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to delete an autoscale setting </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No content: Successful request to delete an autoscale setting, but the response is intentionally empty </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call autoscaleSettingsDeleteAsync(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = autoscaleSettingsDeleteValidateBeforeCall(resourceGroupName, autoscaleSettingName, apiVersion, subscriptionId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for autoscaleSettingsGet
     * @param resourceGroupName The name of the resource group. (required)
     * @param autoscaleSettingName The autoscale setting name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to get one autoscale setting </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call autoscaleSettingsGetCall(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/autoscalesettings/{autoscaleSettingName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "autoscaleSettingName" + "}", localVarApiClient.escapeString(autoscaleSettingName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call autoscaleSettingsGetValidateBeforeCall(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling autoscaleSettingsGet(Async)");
        }

        // verify the required parameter 'autoscaleSettingName' is set
        if (autoscaleSettingName == null) {
            throw new ApiException("Missing the required parameter 'autoscaleSettingName' when calling autoscaleSettingsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling autoscaleSettingsGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling autoscaleSettingsGet(Async)");
        }

        return autoscaleSettingsGetCall(resourceGroupName, autoscaleSettingName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets an autoscale setting
     * @param resourceGroupName The name of the resource group. (required)
     * @param autoscaleSettingName The autoscale setting name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @return AutoscaleSettingResource
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to get one autoscale setting </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public AutoscaleSettingResource autoscaleSettingsGet(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<AutoscaleSettingResource> localVarResp = autoscaleSettingsGetWithHttpInfo(resourceGroupName, autoscaleSettingName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets an autoscale setting
     * @param resourceGroupName The name of the resource group. (required)
     * @param autoscaleSettingName The autoscale setting name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @return ApiResponse&lt;AutoscaleSettingResource&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to get one autoscale setting </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AutoscaleSettingResource> autoscaleSettingsGetWithHttpInfo(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = autoscaleSettingsGetValidateBeforeCall(resourceGroupName, autoscaleSettingName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<AutoscaleSettingResource>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets an autoscale setting
     * @param resourceGroupName The name of the resource group. (required)
     * @param autoscaleSettingName The autoscale setting name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to get one autoscale setting </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call autoscaleSettingsGetAsync(String resourceGroupName, String autoscaleSettingName, String apiVersion, String subscriptionId, final ApiCallback<AutoscaleSettingResource> _callback) throws ApiException {

        okhttp3.Call localVarCall = autoscaleSettingsGetValidateBeforeCall(resourceGroupName, autoscaleSettingName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<AutoscaleSettingResource>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for autoscaleSettingsListByResourceGroup
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request for a list of autoscale settings </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call autoscaleSettingsListByResourceGroupCall(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/autoscalesettings"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call autoscaleSettingsListByResourceGroupValidateBeforeCall(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling autoscaleSettingsListByResourceGroup(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling autoscaleSettingsListByResourceGroup(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling autoscaleSettingsListByResourceGroup(Async)");
        }

        return autoscaleSettingsListByResourceGroupCall(resourceGroupName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Lists the autoscale settings for a resource group
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @return AutoscaleSettingResourceCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request for a list of autoscale settings </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public AutoscaleSettingResourceCollection autoscaleSettingsListByResourceGroup(String resourceGroupName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<AutoscaleSettingResourceCollection> localVarResp = autoscaleSettingsListByResourceGroupWithHttpInfo(resourceGroupName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the autoscale settings for a resource group
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @return ApiResponse&lt;AutoscaleSettingResourceCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request for a list of autoscale settings </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AutoscaleSettingResourceCollection> autoscaleSettingsListByResourceGroupWithHttpInfo(String resourceGroupName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = autoscaleSettingsListByResourceGroupValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<AutoscaleSettingResourceCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the autoscale settings for a resource group
     * @param resourceGroupName The name of the resource group. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request for a list of autoscale settings </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call autoscaleSettingsListByResourceGroupAsync(String resourceGroupName, String apiVersion, String subscriptionId, final ApiCallback<AutoscaleSettingResourceCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = autoscaleSettingsListByResourceGroupValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<AutoscaleSettingResourceCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for autoscaleSettingsListBySubscription
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request for a list of autoscale settings </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call autoscaleSettingsListBySubscriptionCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/microsoft.insights/autoscalesettings"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call autoscaleSettingsListBySubscriptionValidateBeforeCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling autoscaleSettingsListBySubscription(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling autoscaleSettingsListBySubscription(Async)");
        }

        return autoscaleSettingsListBySubscriptionCall(apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Lists the autoscale settings for a subscription
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @return AutoscaleSettingResourceCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request for a list of autoscale settings </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public AutoscaleSettingResourceCollection autoscaleSettingsListBySubscription(String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<AutoscaleSettingResourceCollection> localVarResp = autoscaleSettingsListBySubscriptionWithHttpInfo(apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the autoscale settings for a subscription
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @return ApiResponse&lt;AutoscaleSettingResourceCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request for a list of autoscale settings </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AutoscaleSettingResourceCollection> autoscaleSettingsListBySubscriptionWithHttpInfo(String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = autoscaleSettingsListBySubscriptionValidateBeforeCall(apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<AutoscaleSettingResourceCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the autoscale settings for a subscription
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId The Azure subscription Id. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request for a list of autoscale settings </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call autoscaleSettingsListBySubscriptionAsync(String apiVersion, String subscriptionId, final ApiCallback<AutoscaleSettingResourceCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = autoscaleSettingsListBySubscriptionValidateBeforeCall(apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<AutoscaleSettingResourceCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
