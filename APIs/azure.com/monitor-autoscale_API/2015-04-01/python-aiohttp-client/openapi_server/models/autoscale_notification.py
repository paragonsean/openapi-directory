# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.email_notification import EmailNotification
from openapi_server.models.webhook_notification import WebhookNotification
from openapi_server import util


class AutoscaleNotification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: EmailNotification=None, operation: str=None, webhooks: List[WebhookNotification]=None):
        """AutoscaleNotification - a model defined in OpenAPI

        :param email: The email of this AutoscaleNotification.
        :param operation: The operation of this AutoscaleNotification.
        :param webhooks: The webhooks of this AutoscaleNotification.
        """
        self.openapi_types = {
            'email': EmailNotification,
            'operation': str,
            'webhooks': List[WebhookNotification]
        }

        self.attribute_map = {
            'email': 'email',
            'operation': 'operation',
            'webhooks': 'webhooks'
        }

        self._email = email
        self._operation = operation
        self._webhooks = webhooks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoscaleNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoscaleNotification of this AutoscaleNotification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this AutoscaleNotification.


        :return: The email of this AutoscaleNotification.
        :rtype: EmailNotification
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this AutoscaleNotification.


        :param email: The email of this AutoscaleNotification.
        :type email: EmailNotification
        """

        self._email = email

    @property
    def operation(self):
        """Gets the operation of this AutoscaleNotification.

        the operation associated with the notification and its value must be \"scale\"

        :return: The operation of this AutoscaleNotification.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this AutoscaleNotification.

        the operation associated with the notification and its value must be \"scale\"

        :param operation: The operation of this AutoscaleNotification.
        :type operation: str
        """
        allowed_values = ["Scale"]  # noqa: E501
        if operation not in allowed_values:
            raise ValueError(
                "Invalid value for `operation` ({0}), must be one of {1}"
                .format(operation, allowed_values)
            )

        self._operation = operation

    @property
    def webhooks(self):
        """Gets the webhooks of this AutoscaleNotification.

        the collection of webhook notifications.

        :return: The webhooks of this AutoscaleNotification.
        :rtype: List[WebhookNotification]
        """
        return self._webhooks

    @webhooks.setter
    def webhooks(self, webhooks):
        """Sets the webhooks of this AutoscaleNotification.

        the collection of webhook notifications.

        :param webhooks: The webhooks of this AutoscaleNotification.
        :type webhooks: List[WebhookNotification]
        """

        self._webhooks = webhooks
