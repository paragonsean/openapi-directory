/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Recurrence from './Recurrence';
import ScaleCapacity from './ScaleCapacity';
import ScaleRule from './ScaleRule';
import TimeWindow from './TimeWindow';

/**
 * The AutoscaleProfile model module.
 * @module model/AutoscaleProfile
 * @version 2015-04-01
 */
class AutoscaleProfile {
    /**
     * Constructs a new <code>AutoscaleProfile</code>.
     * Autoscale profile.
     * @alias module:model/AutoscaleProfile
     * @param capacity {module:model/ScaleCapacity} 
     * @param name {String} the name of the profile.
     * @param rules {Array.<module:model/ScaleRule>} the collection of rules that provide the triggers and parameters for the scaling action. A maximum of 10 rules can be specified.
     */
    constructor(capacity, name, rules) { 
        
        AutoscaleProfile.initialize(this, capacity, name, rules);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, capacity, name, rules) { 
        obj['capacity'] = capacity;
        obj['name'] = name;
        obj['rules'] = rules;
    }

    /**
     * Constructs a <code>AutoscaleProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoscaleProfile} obj Optional instance to populate.
     * @return {module:model/AutoscaleProfile} The populated <code>AutoscaleProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoscaleProfile();

            if (data.hasOwnProperty('capacity')) {
                obj['capacity'] = ScaleCapacity.constructFromObject(data['capacity']);
            }
            if (data.hasOwnProperty('fixedDate')) {
                obj['fixedDate'] = TimeWindow.constructFromObject(data['fixedDate']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('recurrence')) {
                obj['recurrence'] = Recurrence.constructFromObject(data['recurrence']);
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [ScaleRule]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoscaleProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoscaleProfile</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AutoscaleProfile.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `capacity`
        if (data['capacity']) { // data not null
          ScaleCapacity.validateJSON(data['capacity']);
        }
        // validate the optional field `fixedDate`
        if (data['fixedDate']) { // data not null
          TimeWindow.validateJSON(data['fixedDate']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `recurrence`
        if (data['recurrence']) { // data not null
          Recurrence.validateJSON(data['recurrence']);
        }
        if (data['rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rules'])) {
                throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
            }
            // validate the optional field `rules` (array)
            for (const item of data['rules']) {
                ScaleRule.validateJSON(item);
            };
        }

        return true;
    }


}

AutoscaleProfile.RequiredProperties = ["capacity", "name", "rules"];

/**
 * @member {module:model/ScaleCapacity} capacity
 */
AutoscaleProfile.prototype['capacity'] = undefined;

/**
 * @member {module:model/TimeWindow} fixedDate
 */
AutoscaleProfile.prototype['fixedDate'] = undefined;

/**
 * the name of the profile.
 * @member {String} name
 */
AutoscaleProfile.prototype['name'] = undefined;

/**
 * @member {module:model/Recurrence} recurrence
 */
AutoscaleProfile.prototype['recurrence'] = undefined;

/**
 * the collection of rules that provide the triggers and parameters for the scaling action. A maximum of 10 rules can be specified.
 * @member {Array.<module:model/ScaleRule>} rules
 */
AutoscaleProfile.prototype['rules'] = undefined;






export default AutoscaleProfile;

