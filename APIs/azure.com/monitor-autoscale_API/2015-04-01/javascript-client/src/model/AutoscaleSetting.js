/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoscaleNotification from './AutoscaleNotification';
import AutoscaleProfile from './AutoscaleProfile';

/**
 * The AutoscaleSetting model module.
 * @module model/AutoscaleSetting
 * @version 2015-04-01
 */
class AutoscaleSetting {
    /**
     * Constructs a new <code>AutoscaleSetting</code>.
     * A setting that contains all of the configuration for the automatic scaling of a resource.
     * @alias module:model/AutoscaleSetting
     * @param profiles {Array.<module:model/AutoscaleProfile>} the collection of automatic scaling profiles that specify different scaling parameters for different time periods. A maximum of 20 profiles can be specified.
     */
    constructor(profiles) { 
        
        AutoscaleSetting.initialize(this, profiles);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, profiles) { 
        obj['enabled'] = true;
        obj['profiles'] = profiles;
    }

    /**
     * Constructs a <code>AutoscaleSetting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoscaleSetting} obj Optional instance to populate.
     * @return {module:model/AutoscaleSetting} The populated <code>AutoscaleSetting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoscaleSetting();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notifications')) {
                obj['notifications'] = ApiClient.convertToType(data['notifications'], [AutoscaleNotification]);
            }
            if (data.hasOwnProperty('profiles')) {
                obj['profiles'] = ApiClient.convertToType(data['profiles'], [AutoscaleProfile]);
            }
            if (data.hasOwnProperty('targetResourceUri')) {
                obj['targetResourceUri'] = ApiClient.convertToType(data['targetResourceUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoscaleSetting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoscaleSetting</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AutoscaleSetting.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['notifications']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['notifications'])) {
                throw new Error("Expected the field `notifications` to be an array in the JSON data but got " + data['notifications']);
            }
            // validate the optional field `notifications` (array)
            for (const item of data['notifications']) {
                AutoscaleNotification.validateJSON(item);
            };
        }
        if (data['profiles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['profiles'])) {
                throw new Error("Expected the field `profiles` to be an array in the JSON data but got " + data['profiles']);
            }
            // validate the optional field `profiles` (array)
            for (const item of data['profiles']) {
                AutoscaleProfile.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['targetResourceUri'] && !(typeof data['targetResourceUri'] === 'string' || data['targetResourceUri'] instanceof String)) {
            throw new Error("Expected the field `targetResourceUri` to be a primitive type in the JSON string but got " + data['targetResourceUri']);
        }

        return true;
    }


}

AutoscaleSetting.RequiredProperties = ["profiles"];

/**
 * the enabled flag. Specifies whether automatic scaling is enabled for the resource. The default value is 'true'.
 * @member {Boolean} enabled
 * @default true
 */
AutoscaleSetting.prototype['enabled'] = true;

/**
 * the name of the autoscale setting.
 * @member {String} name
 */
AutoscaleSetting.prototype['name'] = undefined;

/**
 * the collection of notifications.
 * @member {Array.<module:model/AutoscaleNotification>} notifications
 */
AutoscaleSetting.prototype['notifications'] = undefined;

/**
 * the collection of automatic scaling profiles that specify different scaling parameters for different time periods. A maximum of 20 profiles can be specified.
 * @member {Array.<module:model/AutoscaleProfile>} profiles
 */
AutoscaleSetting.prototype['profiles'] = undefined;

/**
 * the resource identifier of the resource that the autoscale setting should be added to.
 * @member {String} targetResourceUri
 */
AutoscaleSetting.prototype['targetResourceUri'] = undefined;






export default AutoscaleSetting;

