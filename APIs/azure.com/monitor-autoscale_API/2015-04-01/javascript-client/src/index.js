/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AutoscaleNotification from './model/AutoscaleNotification';
import AutoscaleProfile from './model/AutoscaleProfile';
import AutoscaleSetting from './model/AutoscaleSetting';
import AutoscaleSettingResource from './model/AutoscaleSettingResource';
import AutoscaleSettingResourceCollection from './model/AutoscaleSettingResourceCollection';
import AutoscaleSettingResourcePatch from './model/AutoscaleSettingResourcePatch';
import EmailNotification from './model/EmailNotification';
import ErrorResponse from './model/ErrorResponse';
import MetricTrigger from './model/MetricTrigger';
import Recurrence from './model/Recurrence';
import RecurrentSchedule from './model/RecurrentSchedule';
import Resource from './model/Resource';
import ScaleAction from './model/ScaleAction';
import ScaleCapacity from './model/ScaleCapacity';
import ScaleRule from './model/ScaleRule';
import TimeWindow from './model/TimeWindow';
import WebhookNotification from './model/WebhookNotification';
import AutoscaleSettingsApi from './api/AutoscaleSettingsApi';
import DefaultApi from './api/DefaultApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MonitorManagementClient = require('index'); // See note below*.
* var xxxSvc = new MonitorManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MonitorManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MonitorManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MonitorManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-04-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AutoscaleNotification model constructor.
     * @property {module:model/AutoscaleNotification}
     */
    AutoscaleNotification,

    /**
     * The AutoscaleProfile model constructor.
     * @property {module:model/AutoscaleProfile}
     */
    AutoscaleProfile,

    /**
     * The AutoscaleSetting model constructor.
     * @property {module:model/AutoscaleSetting}
     */
    AutoscaleSetting,

    /**
     * The AutoscaleSettingResource model constructor.
     * @property {module:model/AutoscaleSettingResource}
     */
    AutoscaleSettingResource,

    /**
     * The AutoscaleSettingResourceCollection model constructor.
     * @property {module:model/AutoscaleSettingResourceCollection}
     */
    AutoscaleSettingResourceCollection,

    /**
     * The AutoscaleSettingResourcePatch model constructor.
     * @property {module:model/AutoscaleSettingResourcePatch}
     */
    AutoscaleSettingResourcePatch,

    /**
     * The EmailNotification model constructor.
     * @property {module:model/EmailNotification}
     */
    EmailNotification,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The MetricTrigger model constructor.
     * @property {module:model/MetricTrigger}
     */
    MetricTrigger,

    /**
     * The Recurrence model constructor.
     * @property {module:model/Recurrence}
     */
    Recurrence,

    /**
     * The RecurrentSchedule model constructor.
     * @property {module:model/RecurrentSchedule}
     */
    RecurrentSchedule,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ScaleAction model constructor.
     * @property {module:model/ScaleAction}
     */
    ScaleAction,

    /**
     * The ScaleCapacity model constructor.
     * @property {module:model/ScaleCapacity}
     */
    ScaleCapacity,

    /**
     * The ScaleRule model constructor.
     * @property {module:model/ScaleRule}
     */
    ScaleRule,

    /**
     * The TimeWindow model constructor.
     * @property {module:model/TimeWindow}
     */
    TimeWindow,

    /**
     * The WebhookNotification model constructor.
     * @property {module:model/WebhookNotification}
     */
    WebhookNotification,

    /**
    * The AutoscaleSettingsApi service constructor.
    * @property {module:api/AutoscaleSettingsApi}
    */
    AutoscaleSettingsApi,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
