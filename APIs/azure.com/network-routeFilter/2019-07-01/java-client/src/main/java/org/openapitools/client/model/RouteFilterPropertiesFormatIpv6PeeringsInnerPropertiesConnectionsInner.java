/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInnerProperties;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:00:44.870343-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner {
  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInnerProperties properties;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner() {
  }

  public RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner(
     String etag, 
     String type
  ) {
    this();
    this.etag = etag;
    this.type = type;
  }

  /**
   * A unique read-only string that changes whenever the resource is updated.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }



  public RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner properties(RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInnerProperties properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @javax.annotation.Nullable
  public RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInnerProperties getProperties() {
    return properties;
  }

  public void setProperties(RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInnerProperties properties) {
    this.properties = properties;
  }


  /**
   * Type of the resource.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner routeFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner = (RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner) o;
    return Objects.equals(this.etag, routeFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner.etag) &&
        Objects.equals(this.name, routeFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner.name) &&
        Objects.equals(this.properties, routeFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner.properties) &&
        Objects.equals(this.type, routeFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(etag, name, properties, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner {\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("etag");
    openapiFields.add("name");
    openapiFields.add("properties");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner is not found in the empty JSON string", RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `properties`
      if (jsonObj.get("properties") != null && !jsonObj.get("properties").isJsonNull()) {
        RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInnerProperties.validateJsonElement(jsonObj.get("properties"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner>() {
           @Override
           public void write(JsonWriter out, RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner
   * @throws IOException if the JSON string is invalid with respect to RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner
   */
  public static RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner.class);
  }

  /**
   * Convert an instance of RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesConnectionsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

