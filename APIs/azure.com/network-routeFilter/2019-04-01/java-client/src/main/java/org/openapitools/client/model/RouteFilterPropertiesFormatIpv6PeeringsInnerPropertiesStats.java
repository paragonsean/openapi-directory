/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains stats associated with the peering.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:00:50.388135-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats {
  public static final String SERIALIZED_NAME_PRIMARYBYTES_IN = "primarybytesIn";
  @SerializedName(SERIALIZED_NAME_PRIMARYBYTES_IN)
  private Long primarybytesIn;

  public static final String SERIALIZED_NAME_PRIMARYBYTES_OUT = "primarybytesOut";
  @SerializedName(SERIALIZED_NAME_PRIMARYBYTES_OUT)
  private Long primarybytesOut;

  public static final String SERIALIZED_NAME_SECONDARYBYTES_IN = "secondarybytesIn";
  @SerializedName(SERIALIZED_NAME_SECONDARYBYTES_IN)
  private Long secondarybytesIn;

  public static final String SERIALIZED_NAME_SECONDARYBYTES_OUT = "secondarybytesOut";
  @SerializedName(SERIALIZED_NAME_SECONDARYBYTES_OUT)
  private Long secondarybytesOut;

  public RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats() {
  }

  public RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats primarybytesIn(Long primarybytesIn) {
    this.primarybytesIn = primarybytesIn;
    return this;
  }

  /**
   * Gets BytesIn of the peering.
   * @return primarybytesIn
   */
  @javax.annotation.Nullable
  public Long getPrimarybytesIn() {
    return primarybytesIn;
  }

  public void setPrimarybytesIn(Long primarybytesIn) {
    this.primarybytesIn = primarybytesIn;
  }


  public RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats primarybytesOut(Long primarybytesOut) {
    this.primarybytesOut = primarybytesOut;
    return this;
  }

  /**
   * Gets BytesOut of the peering.
   * @return primarybytesOut
   */
  @javax.annotation.Nullable
  public Long getPrimarybytesOut() {
    return primarybytesOut;
  }

  public void setPrimarybytesOut(Long primarybytesOut) {
    this.primarybytesOut = primarybytesOut;
  }


  public RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats secondarybytesIn(Long secondarybytesIn) {
    this.secondarybytesIn = secondarybytesIn;
    return this;
  }

  /**
   * Gets BytesIn of the peering.
   * @return secondarybytesIn
   */
  @javax.annotation.Nullable
  public Long getSecondarybytesIn() {
    return secondarybytesIn;
  }

  public void setSecondarybytesIn(Long secondarybytesIn) {
    this.secondarybytesIn = secondarybytesIn;
  }


  public RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats secondarybytesOut(Long secondarybytesOut) {
    this.secondarybytesOut = secondarybytesOut;
    return this;
  }

  /**
   * Gets BytesOut of the peering.
   * @return secondarybytesOut
   */
  @javax.annotation.Nullable
  public Long getSecondarybytesOut() {
    return secondarybytesOut;
  }

  public void setSecondarybytesOut(Long secondarybytesOut) {
    this.secondarybytesOut = secondarybytesOut;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats routeFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats = (RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats) o;
    return Objects.equals(this.primarybytesIn, routeFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats.primarybytesIn) &&
        Objects.equals(this.primarybytesOut, routeFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats.primarybytesOut) &&
        Objects.equals(this.secondarybytesIn, routeFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats.secondarybytesIn) &&
        Objects.equals(this.secondarybytesOut, routeFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats.secondarybytesOut);
  }

  @Override
  public int hashCode() {
    return Objects.hash(primarybytesIn, primarybytesOut, secondarybytesIn, secondarybytesOut);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats {\n");
    sb.append("    primarybytesIn: ").append(toIndentedString(primarybytesIn)).append("\n");
    sb.append("    primarybytesOut: ").append(toIndentedString(primarybytesOut)).append("\n");
    sb.append("    secondarybytesIn: ").append(toIndentedString(secondarybytesIn)).append("\n");
    sb.append("    secondarybytesOut: ").append(toIndentedString(secondarybytesOut)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("primarybytesIn");
    openapiFields.add("primarybytesOut");
    openapiFields.add("secondarybytesIn");
    openapiFields.add("secondarybytesOut");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats is not found in the empty JSON string", RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats.class));

       return (TypeAdapter<T>) new TypeAdapter<RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats>() {
           @Override
           public void write(JsonWriter out, RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats
   * @throws IOException if the JSON string is invalid with respect to RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats
   */
  public static RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats.class);
  }

  /**
   * Convert an instance of RouteFilterPropertiesFormatIpv6PeeringsInnerPropertiesStats to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

