/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRouteFilterPropertiesFormat.h
 *
 * Route Filter Resource.
 */

#ifndef OAIRouteFilterPropertiesFormat_H
#define OAIRouteFilterPropertiesFormat_H

#include <QJsonObject>

#include "OAIRouteFilterPropertiesFormat_ipv6Peerings_inner.h"
#include "OAIRouteFilterRule.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRouteFilterPropertiesFormat_ipv6Peerings_inner;
class OAIRouteFilterRule;

class OAIRouteFilterPropertiesFormat : public OAIObject {
public:
    OAIRouteFilterPropertiesFormat();
    OAIRouteFilterPropertiesFormat(QString json);
    ~OAIRouteFilterPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIRouteFilterPropertiesFormat_ipv6Peerings_inner> getIpv6Peerings() const;
    void setIpv6Peerings(const QList<OAIRouteFilterPropertiesFormat_ipv6Peerings_inner> &ipv6_peerings);
    bool is_ipv6_peerings_Set() const;
    bool is_ipv6_peerings_Valid() const;

    QList<OAIRouteFilterPropertiesFormat_ipv6Peerings_inner> getPeerings() const;
    void setPeerings(const QList<OAIRouteFilterPropertiesFormat_ipv6Peerings_inner> &peerings);
    bool is_peerings_Set() const;
    bool is_peerings_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QList<OAIRouteFilterRule> getRules() const;
    void setRules(const QList<OAIRouteFilterRule> &rules);
    bool is_rules_Set() const;
    bool is_rules_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIRouteFilterPropertiesFormat_ipv6Peerings_inner> m_ipv6_peerings;
    bool m_ipv6_peerings_isSet;
    bool m_ipv6_peerings_isValid;

    QList<OAIRouteFilterPropertiesFormat_ipv6Peerings_inner> m_peerings;
    bool m_peerings_isSet;
    bool m_peerings_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QList<OAIRouteFilterRule> m_rules;
    bool m_rules_isSet;
    bool m_rules_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRouteFilterPropertiesFormat)

#endif // OAIRouteFilterPropertiesFormat_H
