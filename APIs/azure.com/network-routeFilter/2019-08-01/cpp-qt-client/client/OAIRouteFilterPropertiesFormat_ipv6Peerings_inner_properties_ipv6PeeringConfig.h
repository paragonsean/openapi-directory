/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig.h
 *
 * Contains IPv6 peering config.
 */

#ifndef OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig_H
#define OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig_H

#include <QJsonObject>

#include "OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_connections_inner_properties_expressRouteCircuitPeering.h"
#include "OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig_microsoftPeeringConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig_microsoftPeeringConfig;
class OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_connections_inner_properties_expressRouteCircuitPeering;

class OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig : public OAIObject {
public:
    OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig();
    OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig(QString json);
    ~OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig_microsoftPeeringConfig getMicrosoftPeeringConfig() const;
    void setMicrosoftPeeringConfig(const OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig_microsoftPeeringConfig &microsoft_peering_config);
    bool is_microsoft_peering_config_Set() const;
    bool is_microsoft_peering_config_Valid() const;

    QString getPrimaryPeerAddressPrefix() const;
    void setPrimaryPeerAddressPrefix(const QString &primary_peer_address_prefix);
    bool is_primary_peer_address_prefix_Set() const;
    bool is_primary_peer_address_prefix_Valid() const;

    OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_connections_inner_properties_expressRouteCircuitPeering getRouteFilter() const;
    void setRouteFilter(const OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_connections_inner_properties_expressRouteCircuitPeering &route_filter);
    bool is_route_filter_Set() const;
    bool is_route_filter_Valid() const;

    QString getSecondaryPeerAddressPrefix() const;
    void setSecondaryPeerAddressPrefix(const QString &secondary_peer_address_prefix);
    bool is_secondary_peer_address_prefix_Set() const;
    bool is_secondary_peer_address_prefix_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig_microsoftPeeringConfig m_microsoft_peering_config;
    bool m_microsoft_peering_config_isSet;
    bool m_microsoft_peering_config_isValid;

    QString m_primary_peer_address_prefix;
    bool m_primary_peer_address_prefix_isSet;
    bool m_primary_peer_address_prefix_isValid;

    OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_connections_inner_properties_expressRouteCircuitPeering m_route_filter;
    bool m_route_filter_isSet;
    bool m_route_filter_isValid;

    QString m_secondary_peer_address_prefix;
    bool m_secondary_peer_address_prefix_isSet;
    bool m_secondary_peer_address_prefix_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig)

#endif // OAIRouteFilterPropertiesFormat_ipv6Peerings_inner_properties_ipv6PeeringConfig_H
