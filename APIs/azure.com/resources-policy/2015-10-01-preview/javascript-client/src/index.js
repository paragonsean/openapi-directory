/**
 * PolicyClient
 * To manage and control access to your resources, you can define customized policies and assign them at a scope.
 *
 * The version of the OpenAPI document: 2015-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import PolicyAssignment from './model/PolicyAssignment';
import PolicyAssignmentListResult from './model/PolicyAssignmentListResult';
import PolicyAssignmentProperties from './model/PolicyAssignmentProperties';
import PolicyDefinition from './model/PolicyDefinition';
import PolicyDefinitionListResult from './model/PolicyDefinitionListResult';
import PolicyDefinitionProperties from './model/PolicyDefinitionProperties';
import PolicyAssignmentsApi from './api/PolicyAssignmentsApi';
import PolicyDefinitionsApi from './api/PolicyDefinitionsApi';


/**
* To manage and control access to your resources, you can define customized policies and assign them at a scope..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var PolicyClient = require('index'); // See note below*.
* var xxxSvc = new PolicyClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new PolicyClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new PolicyClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new PolicyClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-10-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The PolicyAssignment model constructor.
     * @property {module:model/PolicyAssignment}
     */
    PolicyAssignment,

    /**
     * The PolicyAssignmentListResult model constructor.
     * @property {module:model/PolicyAssignmentListResult}
     */
    PolicyAssignmentListResult,

    /**
     * The PolicyAssignmentProperties model constructor.
     * @property {module:model/PolicyAssignmentProperties}
     */
    PolicyAssignmentProperties,

    /**
     * The PolicyDefinition model constructor.
     * @property {module:model/PolicyDefinition}
     */
    PolicyDefinition,

    /**
     * The PolicyDefinitionListResult model constructor.
     * @property {module:model/PolicyDefinitionListResult}
     */
    PolicyDefinitionListResult,

    /**
     * The PolicyDefinitionProperties model constructor.
     * @property {module:model/PolicyDefinitionProperties}
     */
    PolicyDefinitionProperties,

    /**
    * The PolicyAssignmentsApi service constructor.
    * @property {module:api/PolicyAssignmentsApi}
    */
    PolicyAssignmentsApi,

    /**
    * The PolicyDefinitionsApi service constructor.
    * @property {module:api/PolicyDefinitionsApi}
    */
    PolicyDefinitionsApi
};
