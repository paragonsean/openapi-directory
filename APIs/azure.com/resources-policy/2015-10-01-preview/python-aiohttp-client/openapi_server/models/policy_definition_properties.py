# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PolicyDefinitionProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, display_name: str=None, policy_rule: object=None, policy_type: str=None):
        """PolicyDefinitionProperties - a model defined in OpenAPI

        :param description: The description of this PolicyDefinitionProperties.
        :param display_name: The display_name of this PolicyDefinitionProperties.
        :param policy_rule: The policy_rule of this PolicyDefinitionProperties.
        :param policy_type: The policy_type of this PolicyDefinitionProperties.
        """
        self.openapi_types = {
            'description': str,
            'display_name': str,
            'policy_rule': object,
            'policy_type': str
        }

        self.attribute_map = {
            'description': 'description',
            'display_name': 'displayName',
            'policy_rule': 'policyRule',
            'policy_type': 'policyType'
        }

        self._description = description
        self._display_name = display_name
        self._policy_rule = policy_rule
        self._policy_type = policy_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyDefinitionProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicyDefinitionProperties of this PolicyDefinitionProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this PolicyDefinitionProperties.

        The policy definition description.

        :return: The description of this PolicyDefinitionProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PolicyDefinitionProperties.

        The policy definition description.

        :param description: The description of this PolicyDefinitionProperties.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this PolicyDefinitionProperties.

        The display name of the policy definition.

        :return: The display_name of this PolicyDefinitionProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this PolicyDefinitionProperties.

        The display name of the policy definition.

        :param display_name: The display_name of this PolicyDefinitionProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def policy_rule(self):
        """Gets the policy_rule of this PolicyDefinitionProperties.

        The policy rule.

        :return: The policy_rule of this PolicyDefinitionProperties.
        :rtype: object
        """
        return self._policy_rule

    @policy_rule.setter
    def policy_rule(self, policy_rule):
        """Sets the policy_rule of this PolicyDefinitionProperties.

        The policy rule.

        :param policy_rule: The policy_rule of this PolicyDefinitionProperties.
        :type policy_rule: object
        """

        self._policy_rule = policy_rule

    @property
    def policy_type(self):
        """Gets the policy_type of this PolicyDefinitionProperties.

        The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.

        :return: The policy_type of this PolicyDefinitionProperties.
        :rtype: str
        """
        return self._policy_type

    @policy_type.setter
    def policy_type(self, policy_type):
        """Sets the policy_type of this PolicyDefinitionProperties.

        The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.

        :param policy_type: The policy_type of this PolicyDefinitionProperties.
        :type policy_type: str
        """
        allowed_values = ["NotSpecified", "BuiltIn", "Custom"]  # noqa: E501
        if policy_type not in allowed_values:
            raise ValueError(
                "Invalid value for `policy_type` ({0}), must be one of {1}"
                .format(policy_type, allowed_values)
            )

        self._policy_type = policy_type
