/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DatabaseOperationListResult;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DatabasesApi
 */
@Disabled
public class DatabasesApiTest {

    private final DatabasesApi api = new DatabasesApi();

    /**
     * Cancels the asynchronous operation on the database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseOperationsCancelTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        UUID operationId = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.databaseOperationsCancel(resourceGroupName, serverName, databaseName, operationId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of operations performed on the database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseOperationsListByDatabaseTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DatabaseOperationListResult response = api.databaseOperationsListByDatabase(resourceGroupName, serverName, databaseName, subscriptionId, apiVersion);
        // TODO: test validations
    }

}
