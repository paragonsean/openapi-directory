openapi: 3.0.1
info:
  description: Role based access control provides you a way to apply granular level
    policy administration down to individual resources or resource groups. These operations
    enable you to manage role definitions and role assignments. A role definition
    describes the set of actions that can be performed on resources. A role assignment
    grants access to Azure Active Directory users.
  title: AuthorizationManagementClient
  version: 2015-07-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/authorization/resource-manager/Microsoft.Authorization/stable/2015-07-01/authorization-ClassicAdminCalls.json
    version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: authorization-authorization-ClassicAdminCalls
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators:
    get:
      description: "Gets service administrator, account administrator, and co-administrators\
        \ for the subscription."
      operationId: classic_administrators_list
      parameters:
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassicAdministratorListResult'
          description: Returns an array of administrators.
      tags:
      - ClassicAdministrators
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            subscriptionId: subId
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subId/providers/Microsoft.Authorization/classicAdministrators/classicadminid
                  name: classicadminid
                  properties:
                    emailAddress: test@test.com
                    role: ServiceAdministrator;AccountAdministrator
                  type: Microsoft.Authorization/classicAdministrators
                - id: /subscriptions/subId/providers/Microsoft.Authorization/classicAdministrators/classicadminid2
                  name: classicadminid2
                  properties:
                    emailAddress: coadmin@test.com
                    role: CoAdministrator
                  type: Microsoft.Authorization/classicAdministrators
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.classic_administrators_controller
components:
  parameters:
    ApiVersionParameter:
      description: The API version to use for this operation.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: The ID of the target subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    ClassicAdministrator:
      description: Classic Administrators
      example:
        name: name
        id: id
        type: type
        properties:
          emailAddress: emailAddress
          role: role
      properties:
        id:
          description: The ID of the administrator.
          title: id
          type: string
        name:
          description: The name of the administrator.
          title: name
          type: string
        properties:
          $ref: '#/components/schemas/ClassicAdministratorProperties'
        type:
          description: The type of the administrator.
          title: type
          type: string
      title: ClassicAdministrator
      type: object
    ClassicAdministratorListResult:
      description: ClassicAdministrator list result information.
      example:
        value:
        - name: name
          id: id
          type: type
          properties:
            emailAddress: emailAddress
            role: role
        - name: name
          id: id
          type: type
          properties:
            emailAddress: emailAddress
            role: role
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          title: nextLink
          type: string
        value:
          description: An array of administrators.
          items:
            $ref: '#/components/schemas/ClassicAdministrator'
          title: value
          type: array
      title: ClassicAdministratorListResult
      type: object
    ClassicAdministratorProperties:
      description: Classic Administrator properties.
      example:
        emailAddress: emailAddress
        role: role
      properties:
        emailAddress:
          description: The email address of the administrator.
          title: emailAddress
          type: string
        role:
          description: The role of the administrator.
          title: role
          type: string
      title: ClassicAdministratorProperties
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_azure_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_azure_auth
x-original-swagger-version: "2.0"
