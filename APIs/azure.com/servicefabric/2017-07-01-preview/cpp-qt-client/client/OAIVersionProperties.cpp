/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2017-07-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVersionProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVersionProperties::OAIVersionProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVersionProperties::OAIVersionProperties() {
    this->initializeModel();
}

OAIVersionProperties::~OAIVersionProperties() {}

void OAIVersionProperties::initializeModel() {

    m_app_package_url_isSet = false;
    m_app_package_url_isValid = false;

    m_default_parameter_list_isSet = false;
    m_default_parameter_list_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;
}

void OAIVersionProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVersionProperties::fromJsonObject(QJsonObject json) {

    m_app_package_url_isValid = ::OpenAPI::fromJsonValue(m_app_package_url, json[QString("appPackageUrl")]);
    m_app_package_url_isSet = !json[QString("appPackageUrl")].isNull() && m_app_package_url_isValid;

    m_default_parameter_list_isValid = ::OpenAPI::fromJsonValue(m_default_parameter_list, json[QString("defaultParameterList")]);
    m_default_parameter_list_isSet = !json[QString("defaultParameterList")].isNull() && m_default_parameter_list_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;
}

QString OAIVersionProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVersionProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_app_package_url_isSet) {
        obj.insert(QString("appPackageUrl"), ::OpenAPI::toJsonValue(m_app_package_url));
    }
    if (m_default_parameter_list.size() > 0) {
        obj.insert(QString("defaultParameterList"), ::OpenAPI::toJsonValue(m_default_parameter_list));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    return obj;
}

QString OAIVersionProperties::getAppPackageUrl() const {
    return m_app_package_url;
}
void OAIVersionProperties::setAppPackageUrl(const QString &app_package_url) {
    m_app_package_url = app_package_url;
    m_app_package_url_isSet = true;
}

bool OAIVersionProperties::is_app_package_url_Set() const{
    return m_app_package_url_isSet;
}

bool OAIVersionProperties::is_app_package_url_Valid() const{
    return m_app_package_url_isValid;
}

QList<OAIApplicationParameter> OAIVersionProperties::getDefaultParameterList() const {
    return m_default_parameter_list;
}
void OAIVersionProperties::setDefaultParameterList(const QList<OAIApplicationParameter> &default_parameter_list) {
    m_default_parameter_list = default_parameter_list;
    m_default_parameter_list_isSet = true;
}

bool OAIVersionProperties::is_default_parameter_list_Set() const{
    return m_default_parameter_list_isSet;
}

bool OAIVersionProperties::is_default_parameter_list_Valid() const{
    return m_default_parameter_list_isValid;
}

QString OAIVersionProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIVersionProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIVersionProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIVersionProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

bool OAIVersionProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_package_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_parameter_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVersionProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_package_url_isValid && true;
}

} // namespace OpenAPI
