openapi: 3.0.1
info:
  description: Azure Service Fabric Resource Provider API Client
  title: ServiceFabricManagementClient
  version: 2017-07-01-preview
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/servicefabric/resource-manager/Microsoft.ServiceFabric/preview/2017-07-01-preview/servicefabric.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: servicefabric
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /providers/Microsoft.ServiceFabric/operations:
    get:
      operationId: operations_list
      parameters:
      - description: The version of the ServiceFabric resource provider api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
          description: OK. The request has succeeded.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error response describing why the operation failed.
      summary: Lists all of the available ServiceFabric Resource Manager REST API
        operations.
      tags:
      - Operations
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.operations_controller
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/clusters:
    get:
      description: |
        List cluster resource
      operationId: clusters_list
      parameters:
      - description: The version of the API.
        in: query
        name: api-version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The customer subscription identifier
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
          description: OK - Get cluster  successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: List cluster resource
      tags:
      - Cluster
      x-ms-examples:
        List clusters:
          parameters:
            api-version: 2017-07-01-preview
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                nextLink: ""
                value:
                - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
                  location: eastus
                  name: myCluster
                  properties:
                    addOnFeatures:
                    - RepairManager
                    - DnsService
                    availableClusterVersions:
                    - codeVersion: 6.0.219.9494
                      environment: Windows
                      supportExpiryUtc: 9999-12-31T23:59:59.9999999
                    azureActiveDirectory:
                      clientApplication: d151ad89-4bce-4ae8-b3d1-1dc79679fa75
                      clusterApplication: 5886372e-7bf4-4878-a497-8098aba608ae
                      tenantId: 6abcc6a0-8666-43f1-87b8-172cf86a9f9c
                    certificate:
                      thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                      thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                      x509StoreName: My
                    clientCertificateCommonNames:
                    - certificateCommonName: abc.com
                      certificateIssuerThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                      isAdmin: true
                    clientCertificateThumbprints:
                    - certificateThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                      isAdmin: false
                    clusterCodeVersion: 6.0.219.9494
                    clusterEndpoint: https://eastus.servicefabric.azure.com
                    clusterId: 92584666-9889-4ae8-8d02-91902923d37f
                    clusterState: WaitingForNodes
                    diagnosticsStorageAccountConfig:
                      blobEndpoint: https://diag.blob.core.windows.net/
                      protectedAccountKeyName: StorageAccountKey1
                      queueEndpoint: https://diag.queue.core.windows.net/
                      storageAccountName: diag
                      tableEndpoint: https://diag.table.core.windows.net/
                    fabricSettings:
                    - name: UpgradeService
                      parameters:
                      - name: AppPollIntervalInSeconds
                        value: "60"
                    managementEndpoint: https://myCluster.eastus.cloudapp.azure.com:19080
                    nodeTypes:
                    - applicationPorts:
                        endPort: 30000
                        startPort: 20000
                      clientConnectionEndpointPort: 19000
                      durabilityLevel: Bronze
                      ephemeralPorts:
                        endPort: 64000
                        startPort: 49000
                      httpGatewayEndpointPort: 19007
                      isPrimary: true
                      name: nt1vm
                      vmInstanceCount: 5
                    provisioningState: Succeeded
                    reliabilityLevel: Silver
                    reverseProxyCertificate:
                      thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                      thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                      x509StoreName: My
                    upgradeDescription:
                      forceRestart: true
                      healthCheckRetryTimeout: 00:05:00
                      healthCheckStableDuration: 00:00:30
                      healthCheckWaitDuration: 00:00:30
                      healthPolicy:
                        maxPercentUnhealthyApplications: 100
                        maxPercentUnhealthyNodes: 100
                      upgradeDomainTimeout: 00:15:00
                      upgradeReplicaSetCheckTimeout: 00:10:00
                      upgradeTimeout: 00:15:00
                    upgradeMode: Manual
                    vmImage: Windows
                  type: Microsoft.ServiceFabric/clusters
                - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster2
                  location: eastus
                  name: myCluster2
                  properties:
                    addOnFeatures:
                    - RepairManager
                    availableClusterVersions:
                    - codeVersion: 6.0.127.1
                      environment: Linux
                      supportExpiryUtc: 9999-12-31T23:59:59.9999999
                    clientCertificateCommonNames: []
                    clientCertificateThumbprints: []
                    clusterCodeVersion: 6.0.127.1
                    clusterEndpoint: https://eastus.servicefabric.azure.com
                    clusterId: 2747e469-b24e-4039-8a0a-46151419523f
                    clusterState: WaitingForNodes
                    diagnosticsStorageAccountConfig:
                      blobEndpoint: https://diag.blob.core.windows.net/
                      protectedAccountKeyName: StorageAccountKey1
                      queueEndpoint: https://diag.queue.core.windows.net/
                      storageAccountName: diag
                      tableEndpoint: https://diag.table.core.windows.net/
                    fabricSettings:
                    - name: UpgradeService
                      parameters:
                      - name: AppPollIntervalInSeconds
                        value: "60"
                    managementEndpoint: http://myCluster2.eastus.cloudapp.azure.com:19080
                    nodeTypes:
                    - applicationPorts:
                        endPort: 30000
                        startPort: 20000
                      clientConnectionEndpointPort: 19000
                      durabilityLevel: Bronze
                      ephemeralPorts:
                        endPort: 64000
                        startPort: 49000
                      httpGatewayEndpointPort: 19007
                      isPrimary: true
                      name: nt1vm
                      vmInstanceCount: 5
                    provisioningState: Succeeded
                    reliabilityLevel: Silver
                    upgradeDescription:
                      deltaHealthPolicy:
                        maxPercentDeltaUnhealthyApplications: 0
                        maxPercentDeltaUnhealthyNodes: 0
                        maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                      forceRestart: false
                      healthCheckRetryTimeout: 00:45:00
                      healthCheckStableDuration: 00:05:00
                      healthCheckWaitDuration: 00:05:00
                      healthPolicy:
                        maxPercentUnhealthyApplications: 100
                        maxPercentUnhealthyNodes: 100
                      upgradeDomainTimeout: 02:00:00
                      upgradeReplicaSetCheckTimeout: 10675199.02:48:05.4775807
                      upgradeTimeout: 12:00:00
                    upgradeMode: Manual
                    vmImage: linux
                  type: Microsoft.ServiceFabric/clusters
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions:
    get:
      description: |
        List cluster code versions by location
      operationId: cluster_versions_list
      parameters:
      - description: "The location for the cluster code versions, this is different\
          \ from cluster location"
        in: path
        name: location
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the API.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The customer subscription identifier
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCodeVersionsListResult'
          description: OK - List cluster code versions successfully
      summary: List cluster code versions by location
      tags:
      - ClusterVersion
      x-ms-examples:
        List cluster versions:
          parameters:
            api-version: 2017-07-01-preview
            location: eastus
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                value:
                - id: subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/clusterVersions/6.0.219.9494
                  name: 6.0.219.9494
                  properties:
                    codeVersion: 6.0.219.9494
                    environment: Windows
                    supportExpiryUtc: 9999-12-31T23:59:59.9999999
                  type: Microsoft.ServiceFabric/locations/environments/clusterVersions
                - id: subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Linux/clusterVersions/6.0.127.1
                  name: 6.0.127.1
                  properties:
                    codeVersion: 6.0.127.1
                    environment: Linux
                    supportExpiryUtc: 9999-12-31T23:59:59.9999999
                  type: Microsoft.ServiceFabric/locations/environments/clusterVersions
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.cluster_version_controller
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions/{clusterVersion}:
    get:
      description: |
        Get cluster code versions by location
      operationId: cluster_versions_get
      parameters:
      - description: "The location for the cluster code versions, this is different\
          \ from cluster location"
        in: path
        name: location
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the API.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The customer subscription identifier
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The cluster code version
        in: path
        name: clusterVersion
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCodeVersionsListResult'
          description: OK - Get cluster code versions successfully
      summary: Get cluster code versions
      tags:
      - ClusterVersion
      x-ms-examples:
        Get cluster version:
          parameters:
            api-version: 2017-07-01-preview
            clusterVersion: 6.0.219.9494
            location: eastus
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                value:
                - id: subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/clusterVersions/6.0.219.9494
                  name: 6.0.219.9494
                  properties:
                    codeVersion: 6.0.219.9494
                    environment: Windows
                    supportExpiryUtc: 9999-12-31T23:59:59.9999999
                  type: Microsoft.ServiceFabric/locations/environments/clusterVersions
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.cluster_version_controller
  ? /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions
  : get:
      description: |
        List cluster code versions by environment
      operationId: cluster_versions_list_by_environment
      parameters:
      - description: "The location for the cluster code versions, this is different\
          \ from cluster location"
        in: path
        name: location
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "Cluster operating system, the default means all"
        in: path
        name: environment
        required: true
        schema:
          enum:
          - Windows
          - Linux
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the API.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The customer subscription identifier
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCodeVersionsListResult'
          description: OK - List cluster code versions successfully
      summary: List cluster code versions by environment
      tags:
      - ClusterVersion
      x-ms-examples:
        List cluster versions by environment:
          parameters:
            api-version: 2017-07-01-preview
            environment: Windows
            location: eastus
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                value:
                - id: subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/clusterVersions/6.0.219.9494
                  name: 6.0.219.9494
                  properties:
                    codeVersion: 6.0.219.9494
                    environment: Windows
                    supportExpiryUtc: 9999-12-31T23:59:59.9999999
                  type: Microsoft.ServiceFabric/locations/environments/clusterVersions
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.cluster_version_controller
  ? /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/{clusterVersion}
  : get:
      description: |
        Get cluster code versions by environment
      operationId: cluster_versions_get_by_environment
      parameters:
      - description: "The location for the cluster code versions, this is different\
          \ from cluster location"
        in: path
        name: location
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "Cluster operating system, the default means all"
        in: path
        name: environment
        required: true
        schema:
          enum:
          - Windows
          - Linux
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the API.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The customer subscription identifier
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The cluster code version
        in: path
        name: cluster_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCodeVersionsListResult'
          description: OK - Get cluster code versions successfully
      summary: Get cluster code versions by environment
      tags:
      - ClusterVersion
      x-ms-examples:
        Get cluster version by environment:
          parameters:
            api-version: 2017-07-01-preview
            clusterVersion: 6.0.219.9494
            environment: Windows
            location: eastus
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                value:
                - id: subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/clusterVersions/6.0.219.9494
                  name: 6.0.219.9494
                  properties:
                    codeVersion: 6.0.219.9494
                    environment: Windows
                    supportExpiryUtc: 9999-12-31T23:59:59.9999999
                  type: Microsoft.ServiceFabric/locations/environments/clusterVersions
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.cluster_version_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}:
    delete:
      description: |
        Delete cluster resource
      operationId: clusters_delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the cluster resource
        in: path
        name: cluster_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the API.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The customer subscription identifier
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: OK - cluster deleted successfully
        "204":
          content: {}
          description: NoContent - cluster does not exist
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Delete cluster resource
      tags:
      - Cluster
      x-ms-examples:
        Delete a cluster:
          parameters:
            api-version: 2017-07-01-preview
            clusterName: myCluster
            resourceGroupName: resRg
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              headers: {}
            "204": {}
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
    get:
      description: |
        Get cluster resource
      operationId: clusters_get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the cluster resource
        in: path
        name: clusterName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the API.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The customer subscription identifier
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: OK - Get cluster successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get cluster resource
      tags:
      - Cluster
      x-ms-examples:
        Get a cluster:
          parameters:
            api-version: 2017-07-01-preview
            clusterName: myCluster
            resourceGroupName: resRg
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
                location: eastus
                name: myCluster
                properties:
                  addOnFeatures:
                  - RepairManager
                  - DnsService
                  availableClusterVersions:
                  - codeVersion: 6.0.219.9494
                    environment: Windows
                    supportExpiryUtc: 9999-12-31T23:59:59.9999999
                  azureActiveDirectory:
                    clientApplication: d151ad89-4bce-4ae8-b3d1-1dc79679fa75
                    clusterApplication: 5886372e-7bf4-4878-a497-8098aba608ae
                    tenantId: 6abcc6a0-8666-43f1-87b8-172cf86a9f9c
                  certificate:
                    thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                    x509StoreName: My
                  clientCertificateCommonNames:
                  - certificateCommonName: abc.com
                    certificateIssuerThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    isAdmin: true
                  clientCertificateThumbprints:
                  - certificateThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    isAdmin: false
                  clusterCodeVersion: 6.0.219.9494
                  clusterEndpoint: https://eastus.servicefabric.azure.com
                  clusterId: 92584666-9889-4ae8-8d02-91902923d37f
                  clusterState: WaitingForNodes
                  diagnosticsStorageAccountConfig:
                    blobEndpoint: https://diag.blob.core.windows.net/
                    protectedAccountKeyName: StorageAccountKey1
                    queueEndpoint: https://diag.queue.core.windows.net/
                    storageAccountName: diag
                    tableEndpoint: https://diag.table.core.windows.net/
                  fabricSettings:
                  - name: UpgradeService
                    parameters:
                    - name: AppPollIntervalInSeconds
                      value: "60"
                  managementEndpoint: https://myCluster.eastus.cloudapp.azure.com:19080
                  nodeTypes:
                  - applicationPorts:
                      endPort: 30000
                      startPort: 20000
                    clientConnectionEndpointPort: 19000
                    durabilityLevel: Bronze
                    ephemeralPorts:
                      endPort: 64000
                      startPort: 49000
                    httpGatewayEndpointPort: 19007
                    isPrimary: true
                    name: nt1vm
                    vmInstanceCount: 5
                  provisioningState: Succeeded
                  reliabilityLevel: Silver
                  reverseProxyCertificate:
                    thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                    x509StoreName: My
                  upgradeDescription:
                    deltaHealthPolicy:
                      maxPercentDeltaUnhealthyApplications: 0
                      maxPercentDeltaUnhealthyNodes: 0
                      maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                    forceRestart: true
                    healthCheckRetryTimeout: 00:05:00
                    healthCheckStableDuration: 00:00:30
                    healthCheckWaitDuration: 00:00:30
                    healthPolicy:
                      maxPercentUnhealthyApplications: 100
                      maxPercentUnhealthyNodes: 100
                    upgradeDomainTimeout: 00:15:00
                    upgradeReplicaSetCheckTimeout: 00:10:00
                    upgradeTimeout: 00:15:00
                  upgradeMode: Manual
                  vmImage: Windows
                type: Microsoft.ServiceFabric/clusters
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
    patch:
      description: |
        Update cluster configuration
      operationId: clusters_update
      parameters:
      - description: The name of the resource group.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the cluster resource
        in: path
        name: cluster_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the API.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The customer subscription identifier
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterUpdateParameters'
        description: The parameters which contains the property value and property
          name which used to update the cluster configuration.
        required: true
        x-ms-parameter-location: method
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: OK - Cluster updated successfully
        "202":
          content: {}
          description: Accepted - Update request accepted; the operation will complete
            asynchronously.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Update cluster configuration
      tags:
      - Cluster
      x-ms-examples:
        Patch a cluster:
          parameters:
            api-version: 2017-07-01-preview
            clusterName: myCluster
            parameters:
              properties:
                addOnFeatures: []
                nodeTypes:
                - applicationPorts:
                    endPort: 30000
                    startPort: 20000
                  clientConnectionEndpointPort: 19000
                  durabilityLevel: Bronze
                  ephemeralPorts:
                    endPort: 64000
                    startPort: 49000
                  httpGatewayEndpointPort: 19007
                  isPrimary: true
                  name: nt1vm
                  vmInstanceCount: 5
                - applicationPorts:
                    endPort: 2000
                    startPort: 1000
                  clientConnectionEndpointPort: 0
                  durabilityLevel: Bronze
                  ephemeralPorts:
                    endPort: 4000
                    startPort: 3000
                  httpGatewayEndpointPort: 0
                  isPrimary: false
                  name: testnt1
                  vmInstanceCount: 3
                reliabilityLevel: Bronze
                upgradeMode: Automatic
              tags:
                a: b
            resourceGroupName: resRg
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
                location: eastus
                name: myCluster
                properties:
                  addOnFeatures: []
                  availableClusterVersions:
                  - codeVersion: 6.0.219.9494
                    environment: Windows
                    supportExpiryUtc: 9999-12-31T23:59:59.9999999
                  clientCertificateCommonNames: []
                  clientCertificateThumbprints: []
                  clusterCodeVersion: 6.0.219.9494
                  clusterEndpoint: https://eastus.servicefabric.azure.com
                  clusterId: 92584666-9889-4ae8-8d02-91902923d37f
                  clusterState: WaitingForNodes
                  diagnosticsStorageAccountConfig:
                    blobEndpoint: https://diag.blob.core.windows.net/
                    protectedAccountKeyName: StorageAccountKey1
                    queueEndpoint: https://diag.queue.core.windows.net/
                    storageAccountName: diag
                    tableEndpoint: https://diag.table.core.windows.net/
                  fabricSettings:
                  - name: UpgradeService
                    parameters:
                    - name: AppPollIntervalInSeconds
                      value: "60"
                  managementEndpoint: http://myCluster.eastus.cloudapp.azure.com:19080
                  nodeTypes:
                  - applicationPorts:
                      endPort: 30000
                      startPort: 20000
                    clientConnectionEndpointPort: 19000
                    durabilityLevel: Bronze
                    ephemeralPorts:
                      endPort: 64000
                      startPort: 49000
                    httpGatewayEndpointPort: 19007
                    isPrimary: true
                    name: nt1vm
                    vmInstanceCount: 5
                  - applicationPorts:
                      endPort: 2000
                      startPort: 1000
                    clientConnectionEndpointPort: 0
                    durabilityLevel: Bronze
                    ephemeralPorts:
                      endPort: 4000
                      startPort: 3000
                    httpGatewayEndpointPort: 0
                    isPrimary: false
                    name: testnt1
                    vmInstanceCount: 3
                  provisioningState: Succeeded
                  reliabilityLevel: Bronze
                  upgradeDescription:
                    deltaHealthPolicy:
                      maxPercentDeltaUnhealthyApplications: 0
                      maxPercentDeltaUnhealthyNodes: 0
                      maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                    forceRestart: false
                    healthCheckRetryTimeout: 00:45:00
                    healthCheckStableDuration: 00:05:00
                    healthCheckWaitDuration: 00:05:00
                    healthPolicy:
                      maxPercentUnhealthyApplications: 100
                      maxPercentUnhealthyNodes: 100
                    upgradeDomainTimeout: 02:00:00
                    upgradeReplicaSetCheckTimeout: 10675199.02:48:05.4775807
                    upgradeTimeout: 12:00:00
                  upgradeMode: Automatic
                tags:
                  a: b
                type: Microsoft.ServiceFabric/clusters
              headers:
                Location: http://10.91.140.224/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/operationResults/1ca6e48d-70ca-4e43-b652-3b0522f64d67?api-version=2017-07-01-privatepreview
                Retry-After: "10"
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
    put:
      description: |
        Create cluster resource
      operationId: clusters_create
      parameters:
      - description: The name of the resource group.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the cluster resource
        in: path
        name: cluster_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the API.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The customer subscription identifier
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
        description: The cluster resource.
        required: true
        x-ms-parameter-location: method
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: OK - Put cluster successfully
        "202":
          content: {}
          description: Accepted - Put request accepted; the operation will complete
            asynchronously.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Create a ServiceFabric cluster
      tags:
      - Cluster
      x-ms-examples:
        Put a cluster with max parameter:
          parameters:
            api-version: 2017-07-01-preview
            clusterName: myCluster
            parameters:
              id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
              location: eastus
              name: myCluster
              properties:
                addOnFeatures:
                - RepairManager
                - DnsService
                azureActiveDirectory:
                  clientApplication: d151ad89-4bce-4ae8-b3d1-1dc79679fa75
                  clusterApplication: 5886372e-7bf4-4878-a497-8098aba608ae
                  tenantId: 6abcc6a0-8666-43f1-87b8-172cf86a9f9c
                certificate:
                  thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                  thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                  x509StoreName: My
                clientCertificateCommonNames:
                - certificateCommonName: abc.com
                  certificateIssuerThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                  isAdmin: true
                clientCertificateThumbprints:
                - certificateThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                  isAdmin: false
                clusterCodeVersion: 6.0.219.9494
                diagnosticsStorageAccountConfig:
                  blobEndpoint: https://diag.blob.core.windows.net/
                  protectedAccountKeyName: StorageAccountKey1
                  queueEndpoint: https://diag.queue.core.windows.net/
                  storageAccountName: diag
                  tableEndpoint: https://diag.table.core.windows.net/
                fabricSettings:
                - name: UpgradeService
                  parameters:
                  - name: AppPollIntervalInSeconds
                    value: "60"
                managementEndpoint: https://myCluster.eastus.cloudapp.azure.com:19080
                nodeTypes:
                - applicationPorts:
                    endPort: 30000
                    startPort: 20000
                  clientConnectionEndpointPort: 19000
                  durabilityLevel: Bronze
                  ephemeralPorts:
                    endPort: 64000
                    startPort: 49000
                  httpGatewayEndpointPort: 19007
                  isPrimary: true
                  name: nt1vm
                  vmInstanceCount: 5
                reliabilityLevel: Silver
                reverseProxyCertificate:
                  thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                  thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                  x509StoreName: My
                upgradeDescription:
                  deltaHealthPolicy:
                    maxPercentDeltaUnhealthyApplications: 0
                    maxPercentDeltaUnhealthyNodes: 0
                    maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                  forceRestart: true
                  healthCheckRetryTimeout: 00:05:00
                  healthCheckStableDuration: 00:00:30
                  healthCheckWaitDuration: 00:00:30
                  healthPolicy:
                    maxPercentUnhealthyApplications: 100
                    maxPercentUnhealthyNodes: 100
                  upgradeDomainTimeout: 00:15:00
                  upgradeReplicaSetCheckTimeout: 00:10:00
                  upgradeTimeout: 00:15:00
                upgradeMode: Manual
                vmImage: Windows
              type: Microsoft.ServiceFabric/clusters
            resourceGroupName: resRg
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
                location: eastus
                name: myCluster
                properties:
                  addOnFeatures:
                  - RepairManager
                  - DnsService
                  availableClusterVersions:
                  - codeVersion: 6.0.219.9494
                    environment: Windows
                    supportExpiryUtc: 9999-12-31T23:59:59.9999999
                  azureActiveDirectory:
                    clientApplication: d151ad89-4bce-4ae8-b3d1-1dc79679fa75
                    clusterApplication: 5886372e-7bf4-4878-a497-8098aba608ae
                    tenantId: 6abcc6a0-8666-43f1-87b8-172cf86a9f9c
                  certificate:
                    thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                    x509StoreName: My
                  clientCertificateCommonNames:
                  - certificateCommonName: abc.com
                    certificateIssuerThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    isAdmin: true
                  clientCertificateThumbprints:
                  - certificateThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    isAdmin: false
                  clusterCodeVersion: 6.0.219.9494
                  clusterEndpoint: https://eastus.servicefabric.azure.com
                  clusterId: 92584666-9889-4ae8-8d02-91902923d37f
                  clusterState: WaitingForNodes
                  diagnosticsStorageAccountConfig:
                    blobEndpoint: https://diag.blob.core.windows.net/
                    protectedAccountKeyName: StorageAccountKey1
                    queueEndpoint: https://diag.queue.core.windows.net/
                    storageAccountName: diag
                    tableEndpoint: https://diag.table.core.windows.net/
                  fabricSettings:
                  - name: UpgradeService
                    parameters:
                    - name: AppPollIntervalInSeconds
                      value: "60"
                  managementEndpoint: https://myCluster.eastus.cloudapp.azure.com:19080
                  nodeTypes:
                  - applicationPorts:
                      endPort: 30000
                      startPort: 20000
                    clientConnectionEndpointPort: 19000
                    durabilityLevel: Bronze
                    ephemeralPorts:
                      endPort: 64000
                      startPort: 49000
                    httpGatewayEndpointPort: 19007
                    isPrimary: true
                    name: nt1vm
                    vmInstanceCount: 5
                  provisioningState: Succeeded
                  reliabilityLevel: Silver
                  reverseProxyCertificate:
                    thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                    x509StoreName: My
                  upgradeDescription:
                    deltaHealthPolicy:
                      maxPercentDeltaUnhealthyApplications: 0
                      maxPercentDeltaUnhealthyNodes: 0
                      maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                    forceRestart: true
                    healthCheckRetryTimeout: 00:05:00
                    healthCheckStableDuration: 00:00:30
                    healthCheckWaitDuration: 00:00:30
                    healthPolicy:
                      maxPercentUnhealthyApplications: 100
                      maxPercentUnhealthyNodes: 100
                    upgradeDomainTimeout: 00:15:00
                    upgradeReplicaSetCheckTimeout: 00:10:00
                    upgradeTimeout: 00:15:00
                  upgradeMode: Manual
                  vmImage: Windows
                type: Microsoft.ServiceFabric/clusters
              headers:
                Location: http://10.91.140.224/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/operationResults/4b5f6709-bc12-4365-8df3-894984b2a221?api-version=2017-07-01-privatepreview
                Retry-After: "10"
            "202": {}
        Put a cluster with min parameter:
          parameters:
            api-version: 2017-07-01-preview
            clusterName: myCluster
            parameters:
              id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
              location: eastus
              name: myCluster
              properties:
                diagnosticsStorageAccountConfig:
                  blobEndpoint: https://diag.blob.core.windows.net/
                  protectedAccountKeyName: StorageAccountKey1
                  queueEndpoint: https://diag.queue.core.windows.net/
                  storageAccountName: diag
                  tableEndpoint: https://diag.table.core.windows.net/
                fabricSettings:
                - name: UpgradeService
                  parameters:
                  - name: AppPollIntervalInSeconds
                    value: "60"
                managementEndpoint: http://myCluster.eastus.cloudapp.azure.com:19080
                nodeTypes:
                - applicationPorts:
                    endPort: 30000
                    startPort: 20000
                  clientConnectionEndpointPort: 19000
                  durabilityLevel: Bronze
                  ephemeralPorts:
                    endPort: 64000
                    startPort: 49000
                  httpGatewayEndpointPort: 19007
                  isPrimary: true
                  name: nt1vm
                  vmInstanceCount: 5
                reliabilityLevel: Silver
                upgradeMode: Automatic
              type: Microsoft.ServiceFabric/clusters
            resourceGroupName: resRg
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
                location: eastus
                name: myCluster
                properties:
                  availableClusterVersions:
                  - codeVersion: 6.0.219.9494
                    environment: Windows
                    supportExpiryUtc: 9999-12-31T23:59:59.9999999
                  clientCertificateCommonNames: []
                  clientCertificateThumbprints: []
                  clusterCodeVersion: 6.0.219.9494
                  clusterEndpoint: https://eastus.servicefabric.azure.com
                  clusterId: 92584666-9889-4ae8-8d02-91902923d37f
                  clusterState: WaitingForNodes
                  diagnosticsStorageAccountConfig:
                    blobEndpoint: https://diag.blob.core.windows.net/
                    protectedAccountKeyName: StorageAccountKey1
                    queueEndpoint: https://diag.queue.core.windows.net/
                    storageAccountName: diag
                    tableEndpoint: https://diag.table.core.windows.net/
                  fabricSettings:
                  - name: UpgradeService
                    parameters:
                    - name: AppPollIntervalInSeconds
                      value: "60"
                  managementEndpoint: http://myCluster.eastus.cloudapp.azure.com:19080
                  nodeTypes:
                  - applicationPorts:
                      endPort: 30000
                      startPort: 20000
                    clientConnectionEndpointPort: 19000
                    durabilityLevel: Bronze
                    ephemeralPorts:
                      endPort: 64000
                      startPort: 49000
                    httpGatewayEndpointPort: 19007
                    isPrimary: true
                    name: nt1vm
                    vmInstanceCount: 5
                  provisioningState: Succeeded
                  reliabilityLevel: Silver
                  upgradeDescription:
                    deltaHealthPolicy:
                      maxPercentDeltaUnhealthyApplications: 0
                      maxPercentDeltaUnhealthyNodes: 0
                      maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                    forceRestart: false
                    healthCheckRetryTimeout: 00:45:00
                    healthCheckStableDuration: 00:05:00
                    healthCheckWaitDuration: 00:05:00
                    healthPolicy:
                      maxPercentUnhealthyApplications: 100
                      maxPercentUnhealthyNodes: 100
                    upgradeDomainTimeout: 02:00:00
                    upgradeReplicaSetCheckTimeout: 10675199.02:48:05.4775807
                    upgradeTimeout: 12:00:00
                  upgradeMode: Automatic
                type: Microsoft.ServiceFabric/clusters
              headers: {}
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters:
    get:
      description: |
        List cluster resource by resource group
      operationId: clusters_list_by_resource_group
      parameters:
      - description: The name of the resource group.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the API.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The customer subscription identifier
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
          description: OK - Get cluster  successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: List cluster resource by resource group
      tags:
      - Cluster
      x-ms-examples:
        List cluster by resource group:
          parameters:
            api-version: 2017-07-01-preview
            resourceGroupName: resRg
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
                  location: eastus
                  name: myCluster
                  properties:
                    addOnFeatures:
                    - RepairManager
                    - DnsService
                    availableClusterVersions:
                    - codeVersion: 6.0.219.9494
                      environment: Windows
                      supportExpiryUtc: 9999-12-31T23:59:59.9999999
                    azureActiveDirectory:
                      clientApplication: d151ad89-4bce-4ae8-b3d1-1dc79679fa75
                      clusterApplication: 5886372e-7bf4-4878-a497-8098aba608ae
                      tenantId: 6abcc6a0-8666-43f1-87b8-172cf86a9f9c
                    certificate:
                      thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                      thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                      x509StoreName: My
                    clientCertificateCommonNames:
                    - certificateCommonName: abc.com
                      certificateIssuerThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                      isAdmin: true
                    clientCertificateThumbprints:
                    - certificateThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                      isAdmin: false
                    clusterCodeVersion: 6.0.219.9494
                    clusterEndpoint: https://eastus.servicefabric.azure.com
                    clusterId: 92584666-9889-4ae8-8d02-91902923d37f
                    clusterState: WaitingForNodes
                    diagnosticsStorageAccountConfig:
                      blobEndpoint: https://diag.blob.core.windows.net/
                      protectedAccountKeyName: StorageAccountKey1
                      queueEndpoint: https://diag.queue.core.windows.net/
                      storageAccountName: diag
                      tableEndpoint: https://diag.table.core.windows.net/
                    fabricSettings:
                    - name: UpgradeService
                      parameters:
                      - name: AppPollIntervalInSeconds
                        value: "60"
                    managementEndpoint: https://myCluster.eastus.cloudapp.azure.com:19080
                    nodeTypes:
                    - applicationPorts:
                        endPort: 30000
                        startPort: 20000
                      clientConnectionEndpointPort: 19000
                      durabilityLevel: Bronze
                      ephemeralPorts:
                        endPort: 64000
                        startPort: 49000
                      httpGatewayEndpointPort: 19007
                      isPrimary: true
                      name: nt1vm
                      vmInstanceCount: 5
                    provisioningState: Succeeded
                    reliabilityLevel: Silver
                    reverseProxyCertificate:
                      thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                      thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                      x509StoreName: My
                    upgradeDescription:
                      forceRestart: true
                      healthCheckRetryTimeout: 00:05:00
                      healthCheckStableDuration: 00:00:30
                      healthCheckWaitDuration: 00:00:30
                      healthPolicy:
                        maxPercentUnhealthyApplications: 100
                        maxPercentUnhealthyNodes: 100
                      upgradeDomainTimeout: 00:15:00
                      upgradeReplicaSetCheckTimeout: 00:10:00
                      upgradeTimeout: 00:15:00
                    upgradeMode: Manual
                    vmImage: Windows
                  type: Microsoft.ServiceFabric/clusters
                - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster2
                  location: eastus
                  name: myCluster2
                  properties:
                    addOnFeatures:
                    - RepairManager
                    availableClusterVersions:
                    - codeVersion: 6.0.127.1
                      environment: Linux
                      supportExpiryUtc: 9999-12-31T23:59:59.9999999
                    clientCertificateCommonNames: []
                    clientCertificateThumbprints: []
                    clusterCodeVersion: 6.0.127.1
                    clusterEndpoint: https://eastus.servicefabric.azure.com
                    clusterId: 2747e469-b24e-4039-8a0a-46151419523f
                    clusterState: WaitingForNodes
                    diagnosticsStorageAccountConfig:
                      blobEndpoint: https://diag.blob.core.windows.net/
                      protectedAccountKeyName: StorageAccountKey1
                      queueEndpoint: https://diag.queue.core.windows.net/
                      storageAccountName: diag
                      tableEndpoint: https://diag.table.core.windows.net/
                    fabricSettings:
                    - name: UpgradeService
                      parameters:
                      - name: AppPollIntervalInSeconds
                        value: "60"
                    managementEndpoint: http://myCluster2.eastus.cloudapp.azure.com:19080
                    nodeTypes:
                    - applicationPorts:
                        endPort: 30000
                        startPort: 20000
                      clientConnectionEndpointPort: 19000
                      durabilityLevel: Bronze
                      ephemeralPorts:
                        endPort: 64000
                        startPort: 49000
                      httpGatewayEndpointPort: 19007
                      isPrimary: true
                      name: nt1vm
                      vmInstanceCount: 5
                    provisioningState: Succeeded
                    reliabilityLevel: Silver
                    upgradeDescription:
                      deltaHealthPolicy:
                        maxPercentDeltaUnhealthyApplications: 0
                        maxPercentDeltaUnhealthyNodes: 0
                        maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                      forceRestart: false
                      healthCheckRetryTimeout: 00:45:00
                      healthCheckStableDuration: 00:05:00
                      healthCheckWaitDuration: 00:05:00
                      healthPolicy:
                        maxPercentUnhealthyApplications: 100
                        maxPercentUnhealthyNodes: 100
                      upgradeDomainTimeout: 02:00:00
                      upgradeReplicaSetCheckTimeout: 10675199.02:48:05.4775807
                      upgradeTimeout: 12:00:00
                    upgradeMode: Manual
                    vmImage: linux
                  type: Microsoft.ServiceFabric/clusters
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
components:
  parameters:
    api-version:
      description: The version of the API.
      in: query
      name: api-version
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    applicationName:
      description: The name of the application resource.
      in: path
      name: applicationName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    applicationTypeName:
      description: The name of the application type name resource
      in: path
      name: applicationTypeName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    clusterNameParameter:
      description: The name of the cluster resource
      in: path
      name: clusterName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    clusterVersion:
      description: The cluster code version
      in: path
      name: clusterVersion
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    environment:
      description: "Cluster operating system, the default means all"
      in: path
      name: environment
      required: true
      schema:
        enum:
        - Windows
        - Linux
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    locationForClusterCodeVersions:
      description: "The location for the cluster code versions, this is different\
        \ from cluster location"
      in: path
      name: location
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    resourceGroupNameParameter:
      description: The name of the resource group.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    serviceName:
      description: "The name of the service resource in the format of {applicationName}~{serviceName}."
      in: path
      name: serviceName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    subscriptionId:
      description: The customer subscription identifier
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    version:
      description: The application type version.
      in: path
      name: version
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  schemas:
    AddOnFeatures:
      description: Available cluster add-on features
      enum:
      - RepairManager
      - DnsService
      - BackupRestoreService
      title: AddOnFeatures
      type: string
    ApplicationHealthPolicy:
      description: |
        Defines a health policy used to evaluate the health of an application or one of its children entities.
      properties:
        ConsiderWarningAsError:
          default: false
          description: Indicates whether warnings are treated with the same severity
            as errors.
          title: ConsiderWarningAsError
          type: boolean
        DefaultServiceTypeHealthPolicy:
          $ref: '#/components/schemas/ServiceTypeHealthPolicy'
        MaxPercentUnhealthyDeployedApplications:
          description: |
            The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.
            The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.
            This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.
            The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
          title: MaxPercentUnhealthyDeployedApplications
          type: integer
        ServiceTypeHealthPolicyMap:
          description: |
            Defines a ServiceTypeHealthPolicy per service type name.

            The entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.

            If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
          items:
            $ref: '#/components/schemas/ServiceTypeHealthPolicyMapItem'
          title: ServiceTypeHealthPolicyMap
          type: array
      title: ApplicationHealthPolicy
      type: object
    ApplicationMetricDescription:
      description: |
        Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.
      properties:
        MaximumCapacity:
          description: |
            The maximum node capacity for Service Fabric application.
            This is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.
            If set to zero, capacity for this metric is unlimited on each node.
            When creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.
            When updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.
          format: int64
          title: MaximumCapacity
          type: integer
        Name:
          description: The name of the metric.
          title: Name
          type: string
        ReservationCapacity:
          description: |
            The node reservation capacity for Service Fabric application.
            This is the amount of load which is reserved on nodes which have instances of this application.
            If MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.
            If set to zero, no capacity is reserved for this metric.
            When setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.
          format: int64
          title: ReservationCapacity
          type: integer
        TotalApplicationCapacity:
          description: |
            The total metric capacity for Service Fabric application.
            This is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.
            When creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.
          format: int64
          title: TotalApplicationCapacity
          type: integer
      title: ApplicationMetricDescription
      type: object
    ApplicationMetricDescriptionList:
      description: List of application capacity metric description.
      items:
        $ref: '#/components/schemas/ApplicationMetricDescription'
      title: ApplicationMetricDescriptionList
      type: array
    ApplicationParameter:
      description: Describes an application parameter override to be applied when
        creating or upgrading an application.
      properties:
        Key:
          description: The name of the parameter.
          title: Key
          type: string
        Value:
          description: The value of the parameter.
          title: Value
          type: string
      required:
      - Key
      - Value
      title: ApplicationParameter
      type: object
    ApplicationParameterList:
      description: List of application parameters with overridden values from their
        default values specified in the application manifest.
      items:
        $ref: '#/components/schemas/ApplicationParameter'
      title: ApplicationParameterList
      type: array
    ApplicationProperties:
      allOf:
      - $ref: '#/components/schemas/ApplicationUpdateProperties'
      description: The application resource properties.
      properties:
        provisioningState:
          description: "The current deployment or provisioning state, which only appears\
            \ in the response"
          readOnly: true
          title: provisioningState
          type: string
        typeName:
          description: The application type name as defined in the application manifest.
          title: typeName
          type: string
      title: ApplicationProperties
    ApplicationResource:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: The application resource.
      properties:
        properties:
          $ref: '#/components/schemas/ApplicationProperties'
      title: ApplicationResource
    ApplicationResourceList:
      description: The list of application resources.
      properties:
        value:
          items:
            $ref: '#/components/schemas/ApplicationResource'
          type: array
      type: object
    ApplicationResourceUpdate:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: The application resource for patch operations.
      properties:
        properties:
          $ref: '#/components/schemas/ApplicationUpdateProperties'
    ApplicationTypeName:
      description: The application type name as defined in the application manifest.
      title: typeName
      type: string
    ApplicationTypeParameterList:
      description: List of application type parameters that can be overridden when
        creating or updating the application.
      items:
        $ref: '#/components/schemas/ApplicationParameter'
      title: defaultParameterList
      type: array
    ApplicationTypeProperties:
      description: The application type name properties
      properties:
        provisioningState:
          description: "The current deployment or provisioning state, which only appears\
            \ in the response."
          readOnly: true
          title: provisioningState
          type: string
      title: ApplicationTypeProperties
      type: object
    ApplicationTypeResource:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: The application type name resource
      properties:
        properties:
          $ref: '#/components/schemas/ApplicationTypeProperties'
      title: ApplicationTypeResource
    ApplicationTypeResourceList:
      description: The list of application type names.
      properties:
        value:
          items:
            $ref: '#/components/schemas/ApplicationTypeResource'
          type: array
      type: object
    ApplicationTypeVersion:
      description: The version of the application type as defined in the application
        manifest.
      title: ApplicationTypeVersion
      type: string
    ApplicationUpdateProperties:
      description: The application resource properties for patch operations.
      properties:
        maximumNodes:
          default: 0
          description: "The maximum number of nodes where Service Fabric will reserve\
            \ capacity for this application. Note that this does not mean that the\
            \ services of this application will be placed on all of those nodes. By\
            \ default, the value of this property is zero and it means that the services\
            \ can be placed on any node."
          format: int64
          minimum: 0
          title: maximumNodes
          type: integer
        metrics:
          description: List of application capacity metric description.
          items:
            $ref: '#/components/schemas/ApplicationMetricDescription'
          title: ApplicationMetricDescriptionList
          type: array
        minimumNodes:
          description: "The minimum number of nodes where Service Fabric will reserve\
            \ capacity for this application. Note that this does not mean that the\
            \ services of this application will be placed on all of those nodes. If\
            \ this property is set to zero, no capacity will be reserved. The value\
            \ of this property cannot be more than the value of the MaximumNodes property."
          format: int64
          minimum: 0
          title: minimumNodes
          type: integer
        parameters:
          description: List of application parameters with overridden values from
            their default values specified in the application manifest.
          items:
            $ref: '#/components/schemas/ApplicationParameter'
          title: ApplicationParameterList
          type: array
        removeApplicationCapacity:
          description: The version of the application type
          title: removeApplicationCapacity
          type: boolean
        typeVersion:
          description: The version of the application type as defined in the application
            manifest.
          title: ApplicationTypeVersion
          type: string
        upgradePolicy:
          $ref: '#/components/schemas/ApplicationUpgradePolicy'
      title: ApplicationUpdateProperties
      type: object
    ApplicationUpgradePolicy:
      description: Describes the policy for a monitored application upgrade.
      properties:
        applicationHealthPolicy:
          $ref: '#/components/schemas/ApplicationHealthPolicy'
        forceRestart:
          default: false
          description: "If true, then processes are forcefully restarted during upgrade\
            \ even when the code version has not changed (the upgrade only changes\
            \ configuration or data)."
          title: ForceRestart
          type: boolean
        rollingUpgradeMonitoringPolicy:
          $ref: '#/components/schemas/RollingUpgradeMonitoringPolicy'
        upgradeReplicaSetCheckTimeout:
          description: "The maximum amount of time to block processing of an upgrade\
            \ domain and prevent loss of availability when there are unexpected issues.\
            \ When this timeout expires, processing of the upgrade domain will proceed\
            \ regardless of availability loss issues. The timeout is reset at the\
            \ start of each upgrade domain. Valid values are between 0 and 42949672925\
            \ inclusive. (unsigned 32-bit integer)."
          format: int64
          title: UpgradeReplicaSetCheckTimeout
          type: integer
      title: ApplicationUpgradePolicy
      type: object
    AvailableOperationDisplay:
      description: Operation supported by Service Fabric resource provider
      example:
        provider: provider
        resource: resource
        description: description
        operation: operation
      properties:
        description:
          description: Operation description
          title: description
          type: string
        operation:
          description: The operation that can be performed.
          title: operation
          type: string
        provider:
          description: The name of the provider.
          title: provider
          type: string
        resource:
          description: The resource on which the operation is performed
          title: resource
          type: string
      title: AvailableOperationDisplay
      type: object
    AzureActiveDirectory:
      description: The settings to enable AAD authentication on the cluster.
      example:
        clientApplication: clientApplication
        tenantId: tenantId
        clusterApplication: clusterApplication
      properties:
        clientApplication:
          description: Azure active directory client application id.
          title: clientApplication
          type: string
        clusterApplication:
          description: Azure active directory cluster application id.
          title: clusterApplication
          type: string
        tenantId:
          description: Azure active directory tenant id.
          title: tenantId
          type: string
      title: AzureActiveDirectory
      type: object
    CertificateDescription:
      description: Describes the certificate details.
      example:
        x509StoreName: AddressBook
        thumbprint: thumbprint
        thumbprintSecondary: thumbprintSecondary
      properties:
        thumbprint:
          description: Thumbprint of the primary certificate.
          title: thumbprint
          type: string
        thumbprintSecondary:
          description: Thumbprint of the secondary certificate.
          title: thumbprintSecondary
          type: string
        x509StoreName:
          description: The local certificate store location.
          enum:
          - AddressBook
          - AuthRoot
          - CertificateAuthority
          - Disallowed
          - My
          - Root
          - TrustedPeople
          - TrustedPublisher
          title: x509StoreName
          type: string
      required:
      - thumbprint
      title: CertificateDescription
      type: object
    ClientCertificateCommonName:
      description: Describes the client certificate details using common name.
      example:
        isAdmin: true
        certificateIssuerThumbprint: certificateIssuerThumbprint
        certificateCommonName: certificateCommonName
      properties:
        certificateCommonName:
          description: The common name of the client certificate.
          title: certificateCommonName
          type: string
        certificateIssuerThumbprint:
          description: The issuer thumbprint of the client certificate.
          title: certificateIssuerThumbprint
          type: string
        isAdmin:
          description: Indicates if the client certificate has admin access to the
            cluster. Non admin clients can perform only read only operations on the
            cluster.
          title: isAdmin
          type: boolean
      required:
      - certificateCommonName
      - certificateIssuerThumbprint
      - isAdmin
      title: ClientCertificateCommonName
      type: object
    ClientCertificateThumbprint:
      description: Describes the client certificate details using thumbprint.
      example:
        certificateThumbprint: certificateThumbprint
        isAdmin: true
      properties:
        certificateThumbprint:
          description: The thumbprint of the client certificate.
          title: certificateThumbprint
          type: string
        isAdmin:
          description: Indicates if the client certificate has admin access to the
            cluster. Non admin clients can perform only read only operations on the
            cluster.
          title: isAdmin
          type: boolean
      required:
      - certificateThumbprint
      - isAdmin
      title: ClientCertificateThumbprint
      type: object
    Cluster:
      allOf:
      - description: The cluster resource properties
        type: object
      - $ref: '#/components/schemas/Resource'
      - properties:
          properties:
            $ref: '#/components/schemas/ClusterProperties'
        type: object
      description: |
        The cluster resource
      example:
        name: name
        location: location
        id: id
        type: type
        properties:
          clusterEndpoint: clusterEndpoint
          addOnFeatures:
          - RepairManager
          - RepairManager
          availableClusterVersions:
          - supportExpiryUtc: supportExpiryUtc
            environment: Windows
            codeVersion: codeVersion
          - supportExpiryUtc: supportExpiryUtc
            environment: Windows
            codeVersion: codeVersion
          certificate:
            x509StoreName: AddressBook
            thumbprint: thumbprint
            thumbprintSecondary: thumbprintSecondary
          clusterId: clusterId
          provisioningState: Updating
          reverseProxyCertificate:
            x509StoreName: AddressBook
            thumbprint: thumbprint
            thumbprintSecondary: thumbprintSecondary
          upgradeDescription:
            healthCheckRetryTimeout: healthCheckRetryTimeout
            upgradeReplicaSetCheckTimeout: upgradeReplicaSetCheckTimeout
            healthCheckWaitDuration: healthCheckWaitDuration
            forceRestart: true
            deltaHealthPolicy:
              maxPercentUpgradeDomainDeltaUnhealthyNodes: 36
              maxPercentDeltaUnhealthyApplications: 70
              maxPercentDeltaUnhealthyNodes: 93
            healthPolicy:
              maxPercentUnhealthyApplications: 20
              maxPercentUnhealthyNodes: 41
            healthCheckStableDuration: healthCheckStableDuration
            upgradeDomainTimeout: upgradeDomainTimeout
            upgradeTimeout: upgradeTimeout
          managementEndpoint: managementEndpoint
          vmImage: vmImage
          upgradeMode: Automatic
          azureActiveDirectory:
            clientApplication: clientApplication
            tenantId: tenantId
            clusterApplication: clusterApplication
          clientCertificateCommonNames:
          - isAdmin: true
            certificateIssuerThumbprint: certificateIssuerThumbprint
            certificateCommonName: certificateCommonName
          - isAdmin: true
            certificateIssuerThumbprint: certificateIssuerThumbprint
            certificateCommonName: certificateCommonName
          fabricSettings:
          - name: name
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - name: name
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          nodeTypes:
          - ephemeralPorts:
              startPort: 6
              endPort: 0
            reverseProxyEndpointPort: 5
            applicationPorts:
              startPort: 6
              endPort: 0
            durabilityLevel: Bronze
            httpGatewayEndpointPort: 5
            isPrimary: true
            name: name
            capacities:
              key: capacities
            placementProperties:
              key: placementProperties
            clientConnectionEndpointPort: 1
            vmInstanceCount: 494379917
          - ephemeralPorts:
              startPort: 6
              endPort: 0
            reverseProxyEndpointPort: 5
            applicationPorts:
              startPort: 6
              endPort: 0
            durabilityLevel: Bronze
            httpGatewayEndpointPort: 5
            isPrimary: true
            name: name
            capacities:
              key: capacities
            placementProperties:
              key: placementProperties
            clientConnectionEndpointPort: 1
            vmInstanceCount: 494379917
          reliabilityLevel: None
          clusterState: WaitingForNodes
          diagnosticsStorageAccountConfig:
            protectedAccountKeyName: protectedAccountKeyName
            queueEndpoint: queueEndpoint
            storageAccountName: storageAccountName
            blobEndpoint: blobEndpoint
            tableEndpoint: tableEndpoint
          clientCertificateThumbprints:
          - certificateThumbprint: certificateThumbprint
            isAdmin: true
          - certificateThumbprint: certificateThumbprint
            isAdmin: true
          clusterCodeVersion: clusterCodeVersion
        tags:
          key: tags
      title: Cluster
    ClusterCodeVersionsListResult:
      description: The list results of the ServiceFabric runtime versions.
      example:
        value:
        - name: name
          id: id
          type: type
          properties:
            supportExpiryUtc: supportExpiryUtc
            environment: Windows
            codeVersion: codeVersion
        - name: name
          id: id
          type: type
          properties:
            supportExpiryUtc: supportExpiryUtc
            environment: Windows
            codeVersion: codeVersion
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          title: nextLink
          type: string
        value:
          items:
            $ref: '#/components/schemas/ClusterCodeVersionsResult'
          title: value
          type: array
      title: ClusterCodeVersionsListResult
      type: object
    ClusterCodeVersionsResult:
      description: The result of the ServiceFabric runtime versions
      example:
        name: name
        id: id
        type: type
        properties:
          supportExpiryUtc: supportExpiryUtc
          environment: Windows
          codeVersion: codeVersion
      properties:
        id:
          description: The identification of the result
          title: id
          type: string
        name:
          description: The name of the result
          title: name
          type: string
        properties:
          $ref: '#/components/schemas/ClusterVersionDetails'
        type:
          description: The result resource type
          title: type
          type: string
      title: ClusterCodeVersionsResult
      type: object
    ClusterEnvironment:
      description: "Cluster operating system, the default will be Windows"
      enum:
      - Windows
      - Linux
      title: ClusterEnvironment
      type: string
    ClusterHealthPolicy:
      description: Defines a health policy used to evaluate the health of the cluster
        or of a cluster node.
      example:
        maxPercentUnhealthyApplications: 20
        maxPercentUnhealthyNodes: 41
      properties:
        maxPercentUnhealthyApplications:
          description: "The maximum allowed percentage of unhealthy applications before\
            \ reporting an error. For example, to allow 10% of applications to be\
            \ unhealthy, this value would be 10. "
          maximum: 100
          minimum: 0
          title: maxPercentUnhealthyApplications
          type: integer
        maxPercentUnhealthyNodes:
          description: "The maximum allowed percentage of unhealthy nodes before reporting\
            \ an error. For example, to allow 10% of nodes to be unhealthy, this value\
            \ would be 10. "
          maximum: 100
          minimum: 0
          title: maxPercentUnhealthyNodes
          type: integer
      title: ClusterHealthPolicy
      type: object
    ClusterListResult:
      description: Cluster list results
      example:
        value:
        - name: name
          location: location
          id: id
          type: type
          properties:
            clusterEndpoint: clusterEndpoint
            addOnFeatures:
            - RepairManager
            - RepairManager
            availableClusterVersions:
            - supportExpiryUtc: supportExpiryUtc
              environment: Windows
              codeVersion: codeVersion
            - supportExpiryUtc: supportExpiryUtc
              environment: Windows
              codeVersion: codeVersion
            certificate:
              x509StoreName: AddressBook
              thumbprint: thumbprint
              thumbprintSecondary: thumbprintSecondary
            clusterId: clusterId
            provisioningState: Updating
            reverseProxyCertificate:
              x509StoreName: AddressBook
              thumbprint: thumbprint
              thumbprintSecondary: thumbprintSecondary
            upgradeDescription:
              healthCheckRetryTimeout: healthCheckRetryTimeout
              upgradeReplicaSetCheckTimeout: upgradeReplicaSetCheckTimeout
              healthCheckWaitDuration: healthCheckWaitDuration
              forceRestart: true
              deltaHealthPolicy:
                maxPercentUpgradeDomainDeltaUnhealthyNodes: 36
                maxPercentDeltaUnhealthyApplications: 70
                maxPercentDeltaUnhealthyNodes: 93
              healthPolicy:
                maxPercentUnhealthyApplications: 20
                maxPercentUnhealthyNodes: 41
              healthCheckStableDuration: healthCheckStableDuration
              upgradeDomainTimeout: upgradeDomainTimeout
              upgradeTimeout: upgradeTimeout
            managementEndpoint: managementEndpoint
            vmImage: vmImage
            upgradeMode: Automatic
            azureActiveDirectory:
              clientApplication: clientApplication
              tenantId: tenantId
              clusterApplication: clusterApplication
            clientCertificateCommonNames:
            - isAdmin: true
              certificateIssuerThumbprint: certificateIssuerThumbprint
              certificateCommonName: certificateCommonName
            - isAdmin: true
              certificateIssuerThumbprint: certificateIssuerThumbprint
              certificateCommonName: certificateCommonName
            fabricSettings:
            - name: name
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            - name: name
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            nodeTypes:
            - ephemeralPorts:
                startPort: 6
                endPort: 0
              reverseProxyEndpointPort: 5
              applicationPorts:
                startPort: 6
                endPort: 0
              durabilityLevel: Bronze
              httpGatewayEndpointPort: 5
              isPrimary: true
              name: name
              capacities:
                key: capacities
              placementProperties:
                key: placementProperties
              clientConnectionEndpointPort: 1
              vmInstanceCount: 494379917
            - ephemeralPorts:
                startPort: 6
                endPort: 0
              reverseProxyEndpointPort: 5
              applicationPorts:
                startPort: 6
                endPort: 0
              durabilityLevel: Bronze
              httpGatewayEndpointPort: 5
              isPrimary: true
              name: name
              capacities:
                key: capacities
              placementProperties:
                key: placementProperties
              clientConnectionEndpointPort: 1
              vmInstanceCount: 494379917
            reliabilityLevel: None
            clusterState: WaitingForNodes
            diagnosticsStorageAccountConfig:
              protectedAccountKeyName: protectedAccountKeyName
              queueEndpoint: queueEndpoint
              storageAccountName: storageAccountName
              blobEndpoint: blobEndpoint
              tableEndpoint: tableEndpoint
            clientCertificateThumbprints:
            - certificateThumbprint: certificateThumbprint
              isAdmin: true
            - certificateThumbprint: certificateThumbprint
              isAdmin: true
            clusterCodeVersion: clusterCodeVersion
          tags:
            key: tags
        - name: name
          location: location
          id: id
          type: type
          properties:
            clusterEndpoint: clusterEndpoint
            addOnFeatures:
            - RepairManager
            - RepairManager
            availableClusterVersions:
            - supportExpiryUtc: supportExpiryUtc
              environment: Windows
              codeVersion: codeVersion
            - supportExpiryUtc: supportExpiryUtc
              environment: Windows
              codeVersion: codeVersion
            certificate:
              x509StoreName: AddressBook
              thumbprint: thumbprint
              thumbprintSecondary: thumbprintSecondary
            clusterId: clusterId
            provisioningState: Updating
            reverseProxyCertificate:
              x509StoreName: AddressBook
              thumbprint: thumbprint
              thumbprintSecondary: thumbprintSecondary
            upgradeDescription:
              healthCheckRetryTimeout: healthCheckRetryTimeout
              upgradeReplicaSetCheckTimeout: upgradeReplicaSetCheckTimeout
              healthCheckWaitDuration: healthCheckWaitDuration
              forceRestart: true
              deltaHealthPolicy:
                maxPercentUpgradeDomainDeltaUnhealthyNodes: 36
                maxPercentDeltaUnhealthyApplications: 70
                maxPercentDeltaUnhealthyNodes: 93
              healthPolicy:
                maxPercentUnhealthyApplications: 20
                maxPercentUnhealthyNodes: 41
              healthCheckStableDuration: healthCheckStableDuration
              upgradeDomainTimeout: upgradeDomainTimeout
              upgradeTimeout: upgradeTimeout
            managementEndpoint: managementEndpoint
            vmImage: vmImage
            upgradeMode: Automatic
            azureActiveDirectory:
              clientApplication: clientApplication
              tenantId: tenantId
              clusterApplication: clusterApplication
            clientCertificateCommonNames:
            - isAdmin: true
              certificateIssuerThumbprint: certificateIssuerThumbprint
              certificateCommonName: certificateCommonName
            - isAdmin: true
              certificateIssuerThumbprint: certificateIssuerThumbprint
              certificateCommonName: certificateCommonName
            fabricSettings:
            - name: name
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            - name: name
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            nodeTypes:
            - ephemeralPorts:
                startPort: 6
                endPort: 0
              reverseProxyEndpointPort: 5
              applicationPorts:
                startPort: 6
                endPort: 0
              durabilityLevel: Bronze
              httpGatewayEndpointPort: 5
              isPrimary: true
              name: name
              capacities:
                key: capacities
              placementProperties:
                key: placementProperties
              clientConnectionEndpointPort: 1
              vmInstanceCount: 494379917
            - ephemeralPorts:
                startPort: 6
                endPort: 0
              reverseProxyEndpointPort: 5
              applicationPorts:
                startPort: 6
                endPort: 0
              durabilityLevel: Bronze
              httpGatewayEndpointPort: 5
              isPrimary: true
              name: name
              capacities:
                key: capacities
              placementProperties:
                key: placementProperties
              clientConnectionEndpointPort: 1
              vmInstanceCount: 494379917
            reliabilityLevel: None
            clusterState: WaitingForNodes
            diagnosticsStorageAccountConfig:
              protectedAccountKeyName: protectedAccountKeyName
              queueEndpoint: queueEndpoint
              storageAccountName: storageAccountName
              blobEndpoint: blobEndpoint
              tableEndpoint: tableEndpoint
            clientCertificateThumbprints:
            - certificateThumbprint: certificateThumbprint
              isAdmin: true
            - certificateThumbprint: certificateThumbprint
              isAdmin: true
            clusterCodeVersion: clusterCodeVersion
          tags:
            key: tags
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          title: nextLink
          type: string
        value:
          items:
            $ref: '#/components/schemas/Cluster'
          title: value
          type: array
      title: ClusterListResult
      type: object
    ClusterProperties:
      description: Describes the cluster resource properties.
      example:
        clusterEndpoint: clusterEndpoint
        addOnFeatures:
        - RepairManager
        - RepairManager
        availableClusterVersions:
        - supportExpiryUtc: supportExpiryUtc
          environment: Windows
          codeVersion: codeVersion
        - supportExpiryUtc: supportExpiryUtc
          environment: Windows
          codeVersion: codeVersion
        certificate:
          x509StoreName: AddressBook
          thumbprint: thumbprint
          thumbprintSecondary: thumbprintSecondary
        clusterId: clusterId
        provisioningState: Updating
        reverseProxyCertificate:
          x509StoreName: AddressBook
          thumbprint: thumbprint
          thumbprintSecondary: thumbprintSecondary
        upgradeDescription:
          healthCheckRetryTimeout: healthCheckRetryTimeout
          upgradeReplicaSetCheckTimeout: upgradeReplicaSetCheckTimeout
          healthCheckWaitDuration: healthCheckWaitDuration
          forceRestart: true
          deltaHealthPolicy:
            maxPercentUpgradeDomainDeltaUnhealthyNodes: 36
            maxPercentDeltaUnhealthyApplications: 70
            maxPercentDeltaUnhealthyNodes: 93
          healthPolicy:
            maxPercentUnhealthyApplications: 20
            maxPercentUnhealthyNodes: 41
          healthCheckStableDuration: healthCheckStableDuration
          upgradeDomainTimeout: upgradeDomainTimeout
          upgradeTimeout: upgradeTimeout
        managementEndpoint: managementEndpoint
        vmImage: vmImage
        upgradeMode: Automatic
        azureActiveDirectory:
          clientApplication: clientApplication
          tenantId: tenantId
          clusterApplication: clusterApplication
        clientCertificateCommonNames:
        - isAdmin: true
          certificateIssuerThumbprint: certificateIssuerThumbprint
          certificateCommonName: certificateCommonName
        - isAdmin: true
          certificateIssuerThumbprint: certificateIssuerThumbprint
          certificateCommonName: certificateCommonName
        fabricSettings:
        - name: name
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - name: name
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        nodeTypes:
        - ephemeralPorts:
            startPort: 6
            endPort: 0
          reverseProxyEndpointPort: 5
          applicationPorts:
            startPort: 6
            endPort: 0
          durabilityLevel: Bronze
          httpGatewayEndpointPort: 5
          isPrimary: true
          name: name
          capacities:
            key: capacities
          placementProperties:
            key: placementProperties
          clientConnectionEndpointPort: 1
          vmInstanceCount: 494379917
        - ephemeralPorts:
            startPort: 6
            endPort: 0
          reverseProxyEndpointPort: 5
          applicationPorts:
            startPort: 6
            endPort: 0
          durabilityLevel: Bronze
          httpGatewayEndpointPort: 5
          isPrimary: true
          name: name
          capacities:
            key: capacities
          placementProperties:
            key: placementProperties
          clientConnectionEndpointPort: 1
          vmInstanceCount: 494379917
        reliabilityLevel: None
        clusterState: WaitingForNodes
        diagnosticsStorageAccountConfig:
          protectedAccountKeyName: protectedAccountKeyName
          queueEndpoint: queueEndpoint
          storageAccountName: storageAccountName
          blobEndpoint: blobEndpoint
          tableEndpoint: tableEndpoint
        clientCertificateThumbprints:
        - certificateThumbprint: certificateThumbprint
          isAdmin: true
        - certificateThumbprint: certificateThumbprint
          isAdmin: true
        clusterCodeVersion: clusterCodeVersion
      properties:
        addOnFeatures:
          description: The list of add-on features to enable in the cluster.
          items:
            $ref: '#/components/schemas/AddOnFeatures'
          title: addOnFeatures
          type: array
        availableClusterVersions:
          description: The Service Fabric runtime versions available for this cluster.
          items:
            $ref: '#/components/schemas/ClusterVersionDetails'
          title: availableClusterVersions
          type: array
        azureActiveDirectory:
          $ref: '#/components/schemas/AzureActiveDirectory'
        certificate:
          $ref: '#/components/schemas/CertificateDescription'
        clientCertificateCommonNames:
          description: The list of client certificates referenced by common name that
            are allowed to manage the cluster.
          items:
            $ref: '#/components/schemas/ClientCertificateCommonName'
          title: clientCertificateCommonNames
          type: array
        clientCertificateThumbprints:
          description: The list of client certificates referenced by thumbprint that
            are allowed to manage the cluster.
          items:
            $ref: '#/components/schemas/ClientCertificateThumbprint'
          title: clientCertificateThumbprints
          type: array
        clusterCodeVersion:
          description: "The Service Fabric runtime version of the cluster. This property\
            \ can only by set the user when **upgradeMode** is set to 'Manual'. To\
            \ get list of available Service Fabric versions for new clusters use [ClusterVersion\
            \ API](./ClusterVersion.md). To get the list of available version for\
            \ existing clusters use **availableClusterVersions**."
          title: clusterCodeVersion
          type: string
        clusterEndpoint:
          description: The Azure Resource Provider endpoint. A system service in the
            cluster connects to this  endpoint.
          readOnly: true
          title: clusterEndpoint
          type: string
        clusterId:
          description: A service generated unique identifier for the cluster resource.
          readOnly: true
          title: clusterId
          type: string
        clusterState:
          $ref: '#/components/schemas/ClusterState'
        diagnosticsStorageAccountConfig:
          $ref: '#/components/schemas/DiagnosticsStorageAccountConfig'
        fabricSettings:
          description: The list of custom fabric settings to configure the cluster.
          items:
            $ref: '#/components/schemas/SettingsSectionDescription'
          title: fabricSettings
          type: array
        managementEndpoint:
          description: The http management endpoint of the cluster.
          title: managementEndpoint
          type: string
        nodeTypes:
          description: The list of node types in the cluster.
          items:
            $ref: '#/components/schemas/NodeTypeDescription'
          title: nodeTypes
          type: array
        provisioningState:
          description: The provisioning state of the cluster resource.
          enum:
          - Updating
          - Succeeded
          - Failed
          - Canceled
          readOnly: true
          title: provisioningState
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        reliabilityLevel:
          $ref: '#/components/schemas/ReliabilityLevel'
        reverseProxyCertificate:
          $ref: '#/components/schemas/CertificateDescription'
        upgradeDescription:
          $ref: '#/components/schemas/ClusterUpgradePolicy'
        upgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
        vmImage:
          description: The VM image VMSS has been configured with. Generic names such
            as Windows or Linux can be used.
          title: vmImage
          type: string
      required:
      - managementEndpoint
      - nodeTypes
      title: ClusterProperties
      type: object
    ClusterPropertiesUpdateParameters:
      description: Describes the cluster resource properties that can be updated during
        PATCH operation.
      example:
        upgradeDescription:
          healthCheckRetryTimeout: healthCheckRetryTimeout
          upgradeReplicaSetCheckTimeout: upgradeReplicaSetCheckTimeout
          healthCheckWaitDuration: healthCheckWaitDuration
          forceRestart: true
          deltaHealthPolicy:
            maxPercentUpgradeDomainDeltaUnhealthyNodes: 36
            maxPercentDeltaUnhealthyApplications: 70
            maxPercentDeltaUnhealthyNodes: 93
          healthPolicy:
            maxPercentUnhealthyApplications: 20
            maxPercentUnhealthyNodes: 41
          healthCheckStableDuration: healthCheckStableDuration
          upgradeDomainTimeout: upgradeDomainTimeout
          upgradeTimeout: upgradeTimeout
        addOnFeatures:
        - RepairManager
        - RepairManager
        upgradeMode: Automatic
        clientCertificateCommonNames:
        - isAdmin: true
          certificateIssuerThumbprint: certificateIssuerThumbprint
          certificateCommonName: certificateCommonName
        - isAdmin: true
          certificateIssuerThumbprint: certificateIssuerThumbprint
          certificateCommonName: certificateCommonName
        certificate:
          x509StoreName: AddressBook
          thumbprint: thumbprint
          thumbprintSecondary: thumbprintSecondary
        fabricSettings:
        - name: name
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - name: name
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        reverseProxyCertificate:
          x509StoreName: AddressBook
          thumbprint: thumbprint
          thumbprintSecondary: thumbprintSecondary
        nodeTypes:
        - ephemeralPorts:
            startPort: 6
            endPort: 0
          reverseProxyEndpointPort: 5
          applicationPorts:
            startPort: 6
            endPort: 0
          durabilityLevel: Bronze
          httpGatewayEndpointPort: 5
          isPrimary: true
          name: name
          capacities:
            key: capacities
          placementProperties:
            key: placementProperties
          clientConnectionEndpointPort: 1
          vmInstanceCount: 494379917
        - ephemeralPorts:
            startPort: 6
            endPort: 0
          reverseProxyEndpointPort: 5
          applicationPorts:
            startPort: 6
            endPort: 0
          durabilityLevel: Bronze
          httpGatewayEndpointPort: 5
          isPrimary: true
          name: name
          capacities:
            key: capacities
          placementProperties:
            key: placementProperties
          clientConnectionEndpointPort: 1
          vmInstanceCount: 494379917
        reliabilityLevel: Bronze
        clientCertificateThumbprints:
        - certificateThumbprint: certificateThumbprint
          isAdmin: true
        - certificateThumbprint: certificateThumbprint
          isAdmin: true
        clusterCodeVersion: clusterCodeVersion
      properties:
        addOnFeatures:
          description: The list of add-on features to enable in the cluster.
          items:
            $ref: '#/components/schemas/AddOnFeatures'
          title: addOnFeatures
          type: array
        certificate:
          $ref: '#/components/schemas/CertificateDescription'
        clientCertificateCommonNames:
          description: The list of client certificates referenced by common name that
            are allowed to manage the cluster. This will overwrite the existing list.
          items:
            $ref: '#/components/schemas/ClientCertificateCommonName'
          title: clientCertificateCommonNames
          type: array
        clientCertificateThumbprints:
          description: The list of client certificates referenced by thumbprint that
            are allowed to manage the cluster. This will overwrite the existing list.
          items:
            $ref: '#/components/schemas/ClientCertificateThumbprint'
          title: clientCertificateThumbprints
          type: array
        clusterCodeVersion:
          description: "The Service Fabric runtime version of the cluster. This property\
            \ can only by set the user when **upgradeMode** is set to 'Manual'. To\
            \ get list of available Service Fabric versions for new clusters use [ClusterVersion\
            \ API](./ClusterVersion.md). To get the list of available version for\
            \ existing clusters use **availableClusterVersions**."
          title: clusterCodeVersion
          type: string
        fabricSettings:
          description: The list of custom fabric settings to configure the cluster.
            This will overwrite the existing list.
          items:
            $ref: '#/components/schemas/SettingsSectionDescription'
          title: fabricSettings
          type: array
        nodeTypes:
          description: The list of node types in the cluster. This will overwrite
            the existing list.
          items:
            $ref: '#/components/schemas/NodeTypeDescription'
          title: nodeTypes
          type: array
        reliabilityLevel:
          description: "The reliability level sets the replica set size of system\
            \ services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity)."
          enum:
          - Bronze
          - Silver
          - Gold
          title: reliabilityLevel
          type: string
        reverseProxyCertificate:
          $ref: '#/components/schemas/CertificateDescription'
        upgradeDescription:
          $ref: '#/components/schemas/ClusterUpgradePolicy'
        upgradeMode:
          description: The upgrade mode of the cluster. This indicates if the cluster
            should be automatically upgraded when new Service Fabric runtime version
            is available.
          enum:
          - Automatic
          - Manual
          title: upgradeMode
          type: string
      title: ClusterPropertiesUpdateParameters
      type: object
    ClusterState:
      description: |
        The current state of the cluster.

          - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.
          - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.
          - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.
          - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.
          - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.
          - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.
          - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.
          - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.
          - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.
          - Ready - Indicates that the cluster is in a stable state.
      enum:
      - WaitingForNodes
      - Deploying
      - BaselineUpgrade
      - UpdatingUserConfiguration
      - UpdatingUserCertificate
      - UpdatingInfrastructure
      - EnforcingClusterVersion
      - UpgradeServiceUnreachable
      - AutoScale
      - Ready
      title: ClusterState
      type: string
    ClusterUpdateParameters:
      description: Cluster update request
      example:
        properties:
          upgradeDescription:
            healthCheckRetryTimeout: healthCheckRetryTimeout
            upgradeReplicaSetCheckTimeout: upgradeReplicaSetCheckTimeout
            healthCheckWaitDuration: healthCheckWaitDuration
            forceRestart: true
            deltaHealthPolicy:
              maxPercentUpgradeDomainDeltaUnhealthyNodes: 36
              maxPercentDeltaUnhealthyApplications: 70
              maxPercentDeltaUnhealthyNodes: 93
            healthPolicy:
              maxPercentUnhealthyApplications: 20
              maxPercentUnhealthyNodes: 41
            healthCheckStableDuration: healthCheckStableDuration
            upgradeDomainTimeout: upgradeDomainTimeout
            upgradeTimeout: upgradeTimeout
          addOnFeatures:
          - RepairManager
          - RepairManager
          upgradeMode: Automatic
          clientCertificateCommonNames:
          - isAdmin: true
            certificateIssuerThumbprint: certificateIssuerThumbprint
            certificateCommonName: certificateCommonName
          - isAdmin: true
            certificateIssuerThumbprint: certificateIssuerThumbprint
            certificateCommonName: certificateCommonName
          certificate:
            x509StoreName: AddressBook
            thumbprint: thumbprint
            thumbprintSecondary: thumbprintSecondary
          fabricSettings:
          - name: name
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - name: name
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          reverseProxyCertificate:
            x509StoreName: AddressBook
            thumbprint: thumbprint
            thumbprintSecondary: thumbprintSecondary
          nodeTypes:
          - ephemeralPorts:
              startPort: 6
              endPort: 0
            reverseProxyEndpointPort: 5
            applicationPorts:
              startPort: 6
              endPort: 0
            durabilityLevel: Bronze
            httpGatewayEndpointPort: 5
            isPrimary: true
            name: name
            capacities:
              key: capacities
            placementProperties:
              key: placementProperties
            clientConnectionEndpointPort: 1
            vmInstanceCount: 494379917
          - ephemeralPorts:
              startPort: 6
              endPort: 0
            reverseProxyEndpointPort: 5
            applicationPorts:
              startPort: 6
              endPort: 0
            durabilityLevel: Bronze
            httpGatewayEndpointPort: 5
            isPrimary: true
            name: name
            capacities:
              key: capacities
            placementProperties:
              key: placementProperties
            clientConnectionEndpointPort: 1
            vmInstanceCount: 494379917
          reliabilityLevel: Bronze
          clientCertificateThumbprints:
          - certificateThumbprint: certificateThumbprint
            isAdmin: true
          - certificateThumbprint: certificateThumbprint
            isAdmin: true
          clusterCodeVersion: clusterCodeVersion
        tags:
          key: tags
      properties:
        properties:
          $ref: '#/components/schemas/ClusterPropertiesUpdateParameters'
        tags:
          additionalProperties:
            type: string
          description: Cluster update parameters
          title: tags
          type: object
      title: ClusterUpdateParameters
      type: object
    ClusterUpgradeDeltaHealthPolicy:
      description: Describes the delta health policies for the cluster upgrade.
      example:
        maxPercentUpgradeDomainDeltaUnhealthyNodes: 36
        maxPercentDeltaUnhealthyApplications: 70
        maxPercentDeltaUnhealthyNodes: 93
      properties:
        maxPercentDeltaUnhealthyApplications:
          description: The maximum allowed percentage of applications health degradation
            allowed during cluster upgrades. The delta is measured between the state
            of the applications at the beginning of upgrade and the state of the applications
            at the time of the health evaluation. The check is performed after every
            upgrade domain upgrade completion to make sure the global state of the
            cluster is within tolerated limits. System services are not included in
            this.
          maximum: 100
          minimum: 0
          title: maxPercentDeltaUnhealthyApplications
          type: integer
        maxPercentDeltaUnhealthyNodes:
          description: The maximum allowed percentage of nodes health degradation
            allowed during cluster upgrades. The delta is measured between the state
            of the nodes at the beginning of upgrade and the state of the nodes at
            the time of the health evaluation. The check is performed after every
            upgrade domain upgrade completion to make sure the global state of the
            cluster is within tolerated limits.
          maximum: 100
          minimum: 0
          title: maxPercentDeltaUnhealthyNodes
          type: integer
        maxPercentUpgradeDomainDeltaUnhealthyNodes:
          description: 'The maximum allowed percentage of upgrade domain nodes health
            degradation allowed during cluster upgrades. The delta is measured between
            the state of the upgrade domain nodes at the beginning of upgrade and
            the state of the upgrade domain nodes at the time of the health evaluation.
            The check is performed after every upgrade domain upgrade completion for
            all completed upgrade domains to make sure the state of the upgrade domains
            is within tolerated limits. '
          maximum: 100
          minimum: 0
          title: maxPercentUpgradeDomainDeltaUnhealthyNodes
          type: integer
      required:
      - maxPercentDeltaUnhealthyApplications
      - maxPercentDeltaUnhealthyNodes
      - maxPercentUpgradeDomainDeltaUnhealthyNodes
      title: ClusterUpgradeDeltaHealthPolicy
      type: object
    ClusterUpgradePolicy:
      description: Describes the policy used when upgrading the cluster.
      example:
        healthCheckRetryTimeout: healthCheckRetryTimeout
        upgradeReplicaSetCheckTimeout: upgradeReplicaSetCheckTimeout
        healthCheckWaitDuration: healthCheckWaitDuration
        forceRestart: true
        deltaHealthPolicy:
          maxPercentUpgradeDomainDeltaUnhealthyNodes: 36
          maxPercentDeltaUnhealthyApplications: 70
          maxPercentDeltaUnhealthyNodes: 93
        healthPolicy:
          maxPercentUnhealthyApplications: 20
          maxPercentUnhealthyNodes: 41
        healthCheckStableDuration: healthCheckStableDuration
        upgradeDomainTimeout: upgradeDomainTimeout
        upgradeTimeout: upgradeTimeout
      properties:
        deltaHealthPolicy:
          $ref: '#/components/schemas/ClusterUpgradeDeltaHealthPolicy'
        forceRestart:
          description: "If true, then processes are forcefully restarted during upgrade\
            \ even when the code version has not changed (the upgrade only changes\
            \ configuration or data)."
          title: forceRestart
          type: boolean
        healthCheckRetryTimeout:
          description: The amount of time to retry health evaluation when the application
            or cluster is unhealthy before the upgrade rolls back. The timeout can
            be in either hh:mm:ss or in d.hh:mm:ss.ms format.
          title: healthCheckRetryTimeout
          type: string
        healthCheckStableDuration:
          description: The amount of time that the application or cluster must remain
            healthy before the upgrade proceeds to the next upgrade domain. The duration
            can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
          title: healthCheckStableDuration
          type: string
        healthCheckWaitDuration:
          description: The length of time to wait after completing an upgrade domain
            before performing health checks. The duration can be in either hh:mm:ss
            or in d.hh:mm:ss.ms format.
          title: healthCheckWaitDuration
          type: string
        healthPolicy:
          $ref: '#/components/schemas/ClusterHealthPolicy'
        upgradeDomainTimeout:
          description: The amount of time each upgrade domain has to complete before
            the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms
            format.
          title: upgradeDomainTimeout
          type: string
        upgradeReplicaSetCheckTimeout:
          description: "The maximum amount of time to block processing of an upgrade\
            \ domain and prevent loss of availability when there are unexpected issues.\
            \ When this timeout expires, processing of the upgrade domain will proceed\
            \ regardless of availability loss issues. The timeout is reset at the\
            \ start of each upgrade domain. The timeout can be in either hh:mm:ss\
            \ or in d.hh:mm:ss.ms format."
          title: upgradeReplicaSetCheckTimeout
          type: string
        upgradeTimeout:
          description: The amount of time the overall upgrade has to complete before
            the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms
            format.
          title: upgradeTimeout
          type: string
      required:
      - healthCheckRetryTimeout
      - healthCheckStableDuration
      - healthCheckWaitDuration
      - healthPolicy
      - upgradeDomainTimeout
      - upgradeReplicaSetCheckTimeout
      - upgradeTimeout
      title: ClusterUpgradePolicy
      type: object
    ClusterVersionDetails:
      description: The detail of the Service Fabric runtime version result
      example:
        supportExpiryUtc: supportExpiryUtc
        environment: Windows
        codeVersion: codeVersion
      properties:
        codeVersion:
          description: The Service Fabric runtime version of the cluster.
          title: codeVersion
          type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment'
        supportExpiryUtc:
          description: The date of expiry of support of the version.
          title: supportExpiryUtc
          type: string
      title: ClusterVersionDetails
      type: object
    CorrelationSchemeList:
      description: A list that describes the correlation of the service with other
        services.
      items:
        $ref: '#/components/schemas/ServiceCorrelationDescription'
      title: CorrelationSchemeList
      type: array
    DiagnosticsStorageAccountConfig:
      description: The storage account information for storing Service Fabric diagnostic
        logs.
      example:
        protectedAccountKeyName: protectedAccountKeyName
        queueEndpoint: queueEndpoint
        storageAccountName: storageAccountName
        blobEndpoint: blobEndpoint
        tableEndpoint: tableEndpoint
      properties:
        blobEndpoint:
          description: The blob endpoint of the azure storage account.
          title: blobEndpoint
          type: string
        protectedAccountKeyName:
          description: The protected diagnostics storage key name.
          title: protectedAccountKeyName
          type: string
        queueEndpoint:
          description: The queue endpoint of the azure storage account.
          title: queueEndpoint
          type: string
        storageAccountName:
          description: The Azure storage account name.
          title: storageAccountName
          type: string
        tableEndpoint:
          description: The table endpoint of the azure storage account.
          title: tableEndpoint
          type: string
      required:
      - blobEndpoint
      - protectedAccountKeyName
      - queueEndpoint
      - storageAccountName
      - tableEndpoint
      title: DiagnosticsStorageAccountConfig
      type: object
    DurabilityLevel:
      description: |
        The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

          - Bronze - No privileges. This is the default.
          - Silver - The infrastructure jobs can be paused for a duration of 30 minutes per UD.
          - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.
      enum:
      - Bronze
      - Silver
      - Gold
      title: DurabilityLevel
      type: string
    EndpointRangeDescription:
      description: Port range details
      example:
        startPort: 6
        endPort: 0
      properties:
        endPort:
          description: End port of a range of ports
          title: endPort
          type: integer
        startPort:
          description: Starting port of a range of ports
          title: startPort
          type: integer
      required:
      - endPort
      - startPort
      title: EndpointRangeDescription
      type: object
    ErrorModel:
      description: The error details.
      example:
        code: code
        message: message
      properties:
        code:
          description: The error code.
          title: code
          type: string
        message:
          description: The error message.
          title: message
          type: string
      title: ErrorModel
      type: object
    ForceRestart:
      default: false
      description: "If true, then processes are forcefully restarted during upgrade\
        \ even when the code version has not changed (the upgrade only changes configuration\
        \ or data)."
      title: ForceRestart
      type: boolean
    HealthCheckRetryTimeout:
      default: PT0H10M0S
      description: "The amount of time to retry health evaluation when the application\
        \ or cluster is unhealthy before FailureAction is executed. It is first interpreted\
        \ as a string representing an ISO 8601 duration. If that fails, then it is\
        \ interpreted as a number representing the total number of milliseconds."
      title: HealthCheckRetryTimeout
      type: string
    HealthCheckStableDuration:
      default: PT0H2M0S
      description: "The amount of time that the application or cluster must remain\
        \ healthy before the upgrade proceeds to the next upgrade domain. It is first\
        \ interpreted as a string representing an ISO 8601 duration. If that fails,\
        \ then it is interpreted as a number representing the total number of milliseconds."
      title: HealthCheckStableDuration
      type: string
    HealthCheckWaitDuration:
      default: "0"
      description: "The amount of time to wait after completing an upgrade domain\
        \ before applying health policies. It is first interpreted as a string representing\
        \ an ISO 8601 duration. If that fails, then it is interpreted as a number\
        \ representing the total number of milliseconds."
      title: HealthCheckWaitDuration
      type: string
    MoveCost:
      description: |
        Specifies the move cost for the service. Possible values are the following.

          - Zero - Zero move cost. This value is zero.
          - Low - Specifies the move cost of the service as Low. The value is 1.
          - Medium - Specifies the move cost of the service as Medium. The value is 2.
          - High - Specifies the move cost of the service as High. The value is 3.
      enum:
      - Zero
      - Low
      - Medium
      - High
      title: MoveCost
      type: string
    NamedPartitionSchemeDescription:
      allOf:
      - $ref: '#/components/schemas/PartitionSchemeDescription'
      - description: NamedPartitionSchemeDescription
        type: object
      description: Describes the named partition scheme of the service.
      properties:
        Count:
          description: The number of partitions.
          type: integer
        Names:
          description: "Array of size specified by the ‘Count’ parameter, for the\
            \ names of the partitions."
          items:
            type: string
          type: array
      required:
      - Count
      - Names
      x-ms-discriminator-value: Named
    NodeTypeDescription:
      description: "Describes a node type in the cluster, each node type represents\
        \ sub set of nodes in the cluster."
      example:
        ephemeralPorts:
          startPort: 6
          endPort: 0
        reverseProxyEndpointPort: 5
        applicationPorts:
          startPort: 6
          endPort: 0
        durabilityLevel: Bronze
        httpGatewayEndpointPort: 5
        isPrimary: true
        name: name
        capacities:
          key: capacities
        placementProperties:
          key: placementProperties
        clientConnectionEndpointPort: 1
        vmInstanceCount: 494379917
      properties:
        applicationPorts:
          $ref: '#/components/schemas/EndpointRangeDescription'
        capacities:
          additionalProperties:
            description: Capacity tag value
            type: string
          description: "The capacity tags applied to the nodes in the node type, the\
            \ cluster resource manager uses these tags to understand how much resource\
            \ a node has."
          title: capacities
          type: object
        clientConnectionEndpointPort:
          description: The TCP cluster management endpoint port.
          title: clientConnectionEndpointPort
          type: integer
        durabilityLevel:
          $ref: '#/components/schemas/DurabilityLevel'
        ephemeralPorts:
          $ref: '#/components/schemas/EndpointRangeDescription'
        httpGatewayEndpointPort:
          description: The HTTP cluster management endpoint port.
          title: httpGatewayEndpointPort
          type: integer
        isPrimary:
          description: The node type on which system services will run. Only one node
            type should be marked as primary. Primary node type cannot be deleted
            or changed for existing clusters.
          title: isPrimary
          type: boolean
        name:
          description: The name of the node type.
          title: name
          type: string
        placementProperties:
          additionalProperties:
            description: Placement tag value
            type: string
          description: "The placement tags applied to nodes in the node type, which\
            \ can be used to indicate where certain services (workload) should run."
          title: placementProperties
          type: object
        reverseProxyEndpointPort:
          description: The endpoint used by reverse proxy.
          title: reverseProxyEndpointPort
          type: integer
        vmInstanceCount:
          description: The number of nodes in the node type. This count should match
            the capacity property in the corresponding VirtualMachineScaleSet resource.
          maximum: 2147483647
          minimum: 1
          title: vmInstanceCount
          type: integer
      required:
      - clientConnectionEndpointPort
      - httpGatewayEndpointPort
      - isPrimary
      - name
      - vmInstanceCount
      title: NodeTypeDescription
      type: object
    OperationListResult:
      description: Describes the result of the request to list Service Fabric operations.
      example:
        value:
        - display:
            provider: provider
            resource: resource
            description: description
            operation: operation
          origin: origin
          name: name
          nextLink: nextLink
        - display:
            provider: provider
            resource: resource
            description: description
            operation: operation
          origin: origin
          name: name
          nextLink: nextLink
        nextLink: nextLink
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there
            are any.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: List of Service Fabric operations supported by the Microsoft.ServiceFabric
            resource provider.
          items:
            $ref: '#/components/schemas/OperationResult'
          title: value
          type: array
      title: OperationListResult
      type: object
    OperationResult:
      description: Available operation list result
      example:
        display:
          provider: provider
          resource: resource
          description: description
          operation: operation
        origin: origin
        name: name
        nextLink: nextLink
      properties:
        display:
          $ref: '#/components/schemas/AvailableOperationDisplay'
        name:
          description: The name of the operation.
          title: name
          type: string
        nextLink:
          description: The URL to use for getting the next set of results.
          title: nextLink
          type: string
        origin:
          description: Origin result
          title: origin
          type: string
      title: OperationResult
      type: object
    PartitionScheme:
      description: |
        Enumerates the ways that a service can be partitioned. Possible values are:

        - Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - Singleton - Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.
        - UniformInt64Range - Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.
        - Named - Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
      enum:
      - Invalid
      - Singleton
      - UniformInt64Range
      - Named
      title: PartitionScheme
      type: string
    PartitionSchemeDescription:
      description: Describes how the service is partitioned.
      discriminator:
        propertyName: PartitionScheme
      properties:
        PartitionScheme:
          $ref: '#/components/schemas/PartitionScheme'
      required:
      - PartitionScheme
      title: PartitionSchemeDescription
      type: object
    ProxyResource:
      description: The resource model definition for proxy-only resource.
      properties:
        id:
          description: Azure resource ID.
          readOnly: true
          title: id
          type: string
        location:
          description: Resource location.
          title: location
          type: string
        name:
          description: Azure resource name.
          readOnly: true
          title: name
          type: string
        type:
          description: Azure resource type.
          readOnly: true
          title: type
          type: string
      required:
      - location
      title: ProxyResource
      type: object
      x-ms-azure-resource: true
    ReliabilityLevel:
      description: |
        The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

          - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.
          - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.
          - Silver - Run the System services with a target replica set count of 5.
          - Gold - Run the System services with a target replica set count of 7.
          - Platinum - Run the System services with a target replica set count of 9.
      enum:
      - None
      - Bronze
      - Silver
      - Gold
      - Platinum
      title: ReliabilityLevel
      type: string
    Resource:
      description: The resource model definition.
      properties:
        id:
          description: Azure resource ID.
          readOnly: true
          title: id
          type: string
        location:
          description: Resource location.
          title: location
          type: string
        name:
          description: Azure resource name.
          readOnly: true
          title: name
          type: string
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          title: tags
          type: object
        type:
          description: Azure resource type.
          readOnly: true
          title: type
          type: string
      required:
      - location
      title: Resource
      type: object
      x-ms-azure-resource: true
    RollingUpgradeMonitoringPolicy:
      description: The policy used for monitoring the application upgrade
      properties:
        healthCheckRetryTimeout:
          default: PT0H10M0S
          description: "The amount of time to retry health evaluation when the application\
            \ or cluster is unhealthy before FailureAction is executed. It is first\
            \ interpreted as a string representing an ISO 8601 duration. If that fails,\
            \ then it is interpreted as a number representing the total number of\
            \ milliseconds."
          title: HealthCheckRetryTimeout
          type: string
        healthCheckStableDuration:
          default: PT0H2M0S
          description: "The amount of time that the application or cluster must remain\
            \ healthy before the upgrade proceeds to the next upgrade domain. It is\
            \ first interpreted as a string representing an ISO 8601 duration. If\
            \ that fails, then it is interpreted as a number representing the total\
            \ number of milliseconds."
          title: HealthCheckStableDuration
          type: string
        healthCheckWaitDuration:
          default: "0"
          description: "The amount of time to wait after completing an upgrade domain\
            \ before applying health policies. It is first interpreted as a string\
            \ representing an ISO 8601 duration. If that fails, then it is interpreted\
            \ as a number representing the total number of milliseconds."
          title: HealthCheckWaitDuration
          type: string
        upgradeDomainTimeout:
          default: P10675199DT02H48M05.4775807S
          description: "The amount of time each upgrade domain has to complete before\
            \ FailureAction is executed. It is first interpreted as a string representing\
            \ an ISO 8601 duration. If that fails, then it is interpreted as a number\
            \ representing the total number of milliseconds."
          title: UpgradeDomainTimeout
          type: string
        upgradeTimeout:
          default: P10675199DT02H48M05.4775807S
          description: "The amount of time the overall upgrade has to complete before\
            \ FailureAction is executed. It is first interpreted as a string representing\
            \ an ISO 8601 duration. If that fails, then it is interpreted as a number\
            \ representing the total number of milliseconds."
          title: UpgradeTimeout
          type: string
      title: RollingUpgradeMonitoringPolicy
      type: object
    ServiceCorrelationDescription:
      description: Creates a particular correlation between services.
      properties:
        Scheme:
          $ref: '#/components/schemas/ServiceCorrelationScheme'
        ServiceName:
          description: The full name of the service with 'fabric:' URI scheme.
          title: ServiceName
          type: string
      required:
      - Scheme
      - ServiceName
      title: ServiceCorrelationDescription
      type: object
    ServiceCorrelationScheme:
      description: |
        The service correlation scheme. Possible values are following.

          - Invalid - An invalid correlation scheme. Cannot be used. The value is zero.
          - Affinity - Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.
          - AlignedAffinity - Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.
          - NonAlignedAffinity - Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.
      enum:
      - Invalid
      - Affinity
      - AlignedAffinity
      - NonAlignedAffinity
      title: ServiceCorrelationScheme
      type: string
    ServiceKind:
      description: |
        The kind of service (Stateless or Stateful). Following are the possible values.

        - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.
        - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
      enum:
      - Invalid
      - Stateless
      - Stateful
      title: ServiceKind
      type: string
    ServiceLoadMetricDescription:
      description: Specifies a metric to load balance a service during runtime.
      properties:
        DefaultLoad:
          description: "Used only for Stateless services. The default amount of load,\
            \ as a number, that this service creates for this metric."
          title: DefaultLoad
          type: integer
        Name:
          description: "The name of the metric. If the service chooses to report load\
            \ during runtime, the load metric name should match the name that is specified\
            \ in Name exactly. Note that metric names are case sensitive."
          title: Name
          type: string
        PrimaryDefaultLoad:
          description: "Used only for Stateful services. The default amount of load,\
            \ as a number, that this service creates for this metric when it is a\
            \ Primary replica."
          title: PrimaryDefaultLoad
          type: integer
        SecondaryDefaultLoad:
          description: "Used only for Stateful services. The default amount of load,\
            \ as a number, that this service creates for this metric when it is a\
            \ Secondary replica."
          title: SecondaryDefaultLoad
          type: integer
        Weight:
          $ref: '#/components/schemas/ServiceLoadMetricWeight'
      required:
      - Name
      title: ServiceLoadMetricDescription
      type: object
    ServiceLoadMetricWeight:
      description: |
        Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight. Possible values are following.

          - Zero - Disables resource balancing for this metric. This value is zero.
          - Low - Specifies the metric weight of the service load as Low. The value is 1.
          - Medium - Specifies the metric weight of the service load as Medium. The value is 2.
          - High - Specifies the metric weight of the service load as High. The value is 3.
      enum:
      - Zero
      - Low
      - Medium
      - High
      title: ServiceLoadMetricWeight
      type: string
    ServiceLoadMetricsList:
      description: The service load metrics is given as an array of ServiceLoadMetricDescription
        objects.
      items:
        $ref: '#/components/schemas/ServiceLoadMetricDescription'
      title: ServiceLoadMetricsList
      type: array
    ServiceName:
      description: The full name of the service with 'fabric:' URI scheme.
      title: ServiceName
      type: string
    ServicePlacementPoliciesList:
      description: A list that describes the correlation of the service with other
        services.
      items:
        $ref: '#/components/schemas/ServicePlacementPolicyDescription'
      title: ServicePlacementPoliciesList
      type: array
    ServicePlacementPolicyDescription:
      description: Describes the policy to be used for placement of a Service Fabric
        service.
      discriminator:
        propertyName: Type
      properties:
        Type:
          $ref: '#/components/schemas/ServicePlacementPolicyType'
      required:
      - Type
      title: ServicePlacementPolicyDescription
      type: object
    ServicePlacementPolicyType:
      description: |
        The type of placement policy for a service fabric service. Following are the possible values.

          - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
          - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
          - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
          - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
          - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
      enum:
      - Invalid
      - InvalidDomain
      - RequiredDomain
      - PreferredPrimaryDomain
      - RequiredDomainDistribution
      - NonPartiallyPlaceService
      title: ServicePlacementPolicyType
      type: string
    ServiceProperties:
      allOf:
      - $ref: '#/components/schemas/ServicePropertiesBase'
      description: The service resource properties.
      properties:
        partitionDescription:
          $ref: '#/components/schemas/PartitionSchemeDescription'
        provisioningState:
          description: "The current deployment or provisioning state, which only appears\
            \ in the response"
          readOnly: true
          title: provisioningState
          type: string
        serviceKind:
          $ref: '#/components/schemas/ServiceKind'
        serviceTypeName:
          description: The name of the service type
          title: serviceTypeName
          type: string
      required:
      - serviceKind
      title: ServiceProperties
    ServicePropertiesBase:
      description: The common service resource properties.
      properties:
        correlationScheme:
          description: A list that describes the correlation of the service with other
            services.
          items:
            $ref: '#/components/schemas/ServiceCorrelationDescription'
          title: CorrelationSchemeList
          type: array
        defaultMoveCost:
          $ref: '#/components/schemas/MoveCost'
        placementConstraints:
          description: "The placement constraints as a string. Placement constraints\
            \ are boolean expressions on node properties and allow for restricting\
            \ a service to particular nodes based on the service requirements. For\
            \ example, to place a service on nodes where NodeType is blue specify\
            \ the following: \"NodeColor == blue)\"."
          title: placementConstraints
          type: string
        serviceLoadMetrics:
          description: The service load metrics is given as an array of ServiceLoadMetricDescription
            objects.
          items:
            $ref: '#/components/schemas/ServiceLoadMetricDescription'
          title: ServiceLoadMetricsList
          type: array
        servicePlacementPolicies:
          description: A list that describes the correlation of the service with other
            services.
          items:
            $ref: '#/components/schemas/ServicePlacementPolicyDescription'
          title: ServicePlacementPoliciesList
          type: array
      title: ServicePropertiesBase
      type: object
    ServiceResource:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: The service resource.
      properties:
        properties:
          $ref: '#/components/schemas/ServiceProperties'
      title: ServiceResource
    ServiceResourceList:
      description: The list of service resources.
      properties:
        value:
          items:
            $ref: '#/components/schemas/ServiceResource'
          type: array
      type: object
    ServiceResourceUpdate:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: The service resource for patch operations.
      properties:
        properties:
          $ref: '#/components/schemas/ServiceUpdateProperties'
    ServiceTypeDeltaHealthPolicy:
      description: |
        Service health policy
      properties:
        maxPercentDeltaUnhealthyServices:
          description: Maximum percentage of unhealthy services in cluster
          maximum: 100
          minimum: 0
          type: integer
      type: object
    ServiceTypeHealthPolicy:
      description: |
        Represents the health policy used to evaluate the health of services belonging to a service type.
      properties:
        MaxPercentUnhealthyPartitionsPerService:
          description: |
            The maximum allowed percentage of unhealthy partitions per service. Allowed values are Byte values from zero to 100

            The percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.
            If the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.
            The percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.
            The computation rounds up to tolerate one failure on small numbers of partitions. Default percentage is zero.
          title: MaxPercentUnhealthyPartitionsPerService
          type: integer
        MaxPercentUnhealthyReplicasPerPartition:
          description: |
            The maximum allowed percentage of unhealthy replicas per partition. Allowed values are Byte values from zero to 100.

            The percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.
            If the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.
            The percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.
            The computation rounds up to tolerate one failure on small numbers of replicas. Default percentage is zero.
          title: MaxPercentUnhealthyReplicasPerPartition
          type: integer
        MaxPercentUnhealthyServices:
          description: |
            The maximum allowed percentage of unhealthy services. Allowed values are Byte values from zero to 100.

            The percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.
            If the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.
            This is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.
            The computation rounds up to tolerate one failure on small numbers of services. Default percentage is zero.
          title: MaxPercentUnhealthyServices
          type: integer
      title: ServiceTypeHealthPolicy
      type: object
    ServiceTypeHealthPolicyMap:
      description: |
        Defines a ServiceTypeHealthPolicy per service type name.

        The entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.

        If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
      items:
        $ref: '#/components/schemas/ServiceTypeHealthPolicyMapItem'
      title: ServiceTypeHealthPolicyMap
      type: array
    ServiceTypeHealthPolicyMapItem:
      description: |
        Defines an item in ServiceTypeHealthPolicyMap.
      properties:
        Key:
          description: The key of the service type health policy map item. This is
            the name of the service type.
          title: Key
          type: string
        Value:
          $ref: '#/components/schemas/ServiceTypeHealthPolicy'
      required:
      - Key
      - Value
      title: ServiceTypeHealthPolicyMapItem
      type: object
    ServiceUpdateProperties:
      allOf:
      - $ref: '#/components/schemas/ServicePropertiesBase'
      description: The service resource properties for patch operations.
      properties:
        serviceKind:
          $ref: '#/components/schemas/ServiceKind'
      required:
      - serviceKind
      title: ServiceUpdateProperties
    SettingsParameterDescription:
      description: Describes a parameter in fabric settings of the cluster.
      example:
        name: name
        value: value
      properties:
        name:
          description: The parameter name of fabric setting.
          title: name
          type: string
        value:
          description: The parameter value of fabric setting.
          title: value
          type: string
      required:
      - name
      - value
      title: SettingsParameterDescription
      type: object
    SettingsSectionDescription:
      description: Describes a section in the fabric settings of the cluster.
      example:
        name: name
        parameters:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        name:
          description: The section name of the fabric settings.
          title: name
          type: string
        parameters:
          description: The collection of parameters in the section.
          items:
            $ref: '#/components/schemas/SettingsParameterDescription'
          title: parameters
          type: array
      required:
      - name
      - parameters
      title: SettingsSectionDescription
      type: object
    SingletonPartitionSchemeDescription:
      allOf:
      - $ref: '#/components/schemas/PartitionSchemeDescription'
      - description: SingletonPartitionSchemeDescription
        type: object
      description: "Describes the partition scheme of a singleton-partitioned, or\
        \ non-partitioned service."
      x-ms-discriminator-value: Singleton
    StatefulServiceProperties:
      allOf:
      - $ref: '#/components/schemas/ServiceProperties'
      description: The properties of a stateful service resource.
      properties:
        hasPersistedState:
          description: "A flag indicating whether this is a persistent service which\
            \ stores states on the local disk. If it is then the value of this property\
            \ is true, if not it is false."
          type: boolean
        minReplicaSetSize:
          description: The minimum replica set size as a number.
          minimum: 1
          type: integer
        quorumLossWaitDuration:
          description: "The maximum duration for which a partition is allowed to be\
            \ in a state of quorum loss, represented in ISO 8601 format (hh:mm:ss.s)."
          format: date-time
          type: string
        replicaRestartWaitDuration:
          description: "The duration between when a replica goes down and when a new\
            \ replica is created, represented in ISO 8601 format (hh:mm:ss.s)."
          format: date-time
          type: string
        standByReplicaKeepDuration:
          description: "The definition on how long StandBy replicas should be maintained\
            \ before being removed, represented in ISO 8601 format (hh:mm:ss.s)."
          format: date-time
          type: string
        targetReplicaSetSize:
          description: The target replica set size as a number.
          minimum: 1
          type: integer
      x-ms-discriminator-value: Stateful
    StatefulServiceUpdateProperties:
      allOf:
      - $ref: '#/components/schemas/ServiceUpdateProperties'
      description: The properties of a stateful service resource for patch operations.
      properties:
        minReplicaSetSize:
          description: The minimum replica set size as a number.
          minimum: 1
          type: integer
        quorumLossWaitDuration:
          description: "The maximum duration for which a partition is allowed to be\
            \ in a state of quorum loss, represented in ISO 8601 format (hh:mm:ss.s)."
          format: date-time
          type: string
        replicaRestartWaitDuration:
          description: "The duration between when a replica goes down and when a new\
            \ replica is created, represented in ISO 8601 format (hh:mm:ss.s)."
          format: date-time
          type: string
        standByReplicaKeepDuration:
          description: "The definition on how long StandBy replicas should be maintained\
            \ before being removed, represented in ISO 8601 format (hh:mm:ss.s)."
          format: date-time
          type: string
        targetReplicaSetSize:
          description: The target replica set size as a number.
          minimum: 1
          type: integer
      x-ms-discriminator-value: Stateful
    StatelessServiceProperties:
      allOf:
      - $ref: '#/components/schemas/ServiceProperties'
      description: The properties of a stateless service resource.
      properties:
        instanceCount:
          description: The instance count.
          minimum: -1
          type: integer
      x-ms-discriminator-value: Stateless
    StatelessServiceUpdateProperties:
      allOf:
      - $ref: '#/components/schemas/ServiceUpdateProperties'
      description: The properties of a stateless service resource for patch operations.
      properties:
        instanceCount:
          description: The instance count.
          minimum: -1
          type: integer
      x-ms-discriminator-value: Stateless
    UniformInt64RangePartitionSchemeDescription:
      allOf:
      - $ref: '#/components/schemas/PartitionSchemeDescription'
      - description: UniformInt64RangePartitionSchemeDescription
        type: object
      description: Describes a partitioning scheme where an integer range is allocated
        evenly across a number of partitions.
      properties:
        Count:
          description: The number of partitions.
          type: integer
        HighKey:
          description: |
            String indicating the upper bound of the partition key range that
            should be split between the partition ‘Count’
          type: string
        LowKey:
          description: |
            String indicating the lower bound of the partition key range that
            should be split between the partition ‘Count’
          type: string
      required:
      - Count
      - HighKey
      - LowKey
      x-ms-discriminator-value: UniformInt64Range
    UpgradeDomainTimeout:
      default: P10675199DT02H48M05.4775807S
      description: "The amount of time each upgrade domain has to complete before\
        \ FailureAction is executed. It is first interpreted as a string representing\
        \ an ISO 8601 duration. If that fails, then it is interpreted as a number\
        \ representing the total number of milliseconds."
      title: UpgradeDomainTimeout
      type: string
    UpgradeMode:
      description: |
        The upgrade mode of the cluster when new Service Fabric runtime version is available.

          - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.
          - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.
      enum:
      - Automatic
      - Manual
      title: UpgradeMode
      type: string
    UpgradeReplicaSetCheckTimeout:
      description: "The maximum amount of time to block processing of an upgrade domain\
        \ and prevent loss of availability when there are unexpected issues. When\
        \ this timeout expires, processing of the upgrade domain will proceed regardless\
        \ of availability loss issues. The timeout is reset at the start of each upgrade\
        \ domain. Valid values are between 0 and 42949672925 inclusive. (unsigned\
        \ 32-bit integer)."
      format: int64
      title: UpgradeReplicaSetCheckTimeout
      type: integer
    UpgradeTimeout:
      default: P10675199DT02H48M05.4775807S
      description: "The amount of time the overall upgrade has to complete before\
        \ FailureAction is executed. It is first interpreted as a string representing\
        \ an ISO 8601 duration. If that fails, then it is interpreted as a number\
        \ representing the total number of milliseconds."
      title: UpgradeTimeout
      type: string
    VersionProperties:
      description: The properties of the version resource.
      properties:
        appPackageUrl:
          description: The URL to the application package
          title: appPackageUrl
          type: string
        defaultParameterList:
          description: List of application type parameters that can be overridden
            when creating or updating the application.
          items:
            $ref: '#/components/schemas/ApplicationParameter'
          title: defaultParameterList
          type: array
        provisioningState:
          description: "The current deployment or provisioning state, which only appears\
            \ in the response"
          readOnly: true
          title: provisioningState
          type: string
      required:
      - appPackageUrl
      title: VersionProperties
      type: object
    VersionResource:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: A version resource for the specified application type name.
      properties:
        properties:
          $ref: '#/components/schemas/VersionProperties'
      title: VersionResource
    VersionResourceList:
      description: The list of version resources for the specified application type
        name.
      properties:
        value:
          items:
            $ref: '#/components/schemas/VersionResource'
          type: array
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_azure_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_azure_auth
x-original-swagger-version: "2.0"
