# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_on_features import AddOnFeatures
from openapi_server.models.certificate_description import CertificateDescription
from openapi_server.models.client_certificate_common_name import ClientCertificateCommonName
from openapi_server.models.client_certificate_thumbprint import ClientCertificateThumbprint
from openapi_server.models.cluster_upgrade_policy import ClusterUpgradePolicy
from openapi_server.models.node_type_description import NodeTypeDescription
from openapi_server.models.settings_section_description import SettingsSectionDescription
from openapi_server import util


class ClusterPropertiesUpdateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add_on_features: List[AddOnFeatures]=None, certificate: CertificateDescription=None, client_certificate_common_names: List[ClientCertificateCommonName]=None, client_certificate_thumbprints: List[ClientCertificateThumbprint]=None, cluster_code_version: str=None, fabric_settings: List[SettingsSectionDescription]=None, node_types: List[NodeTypeDescription]=None, reliability_level: str=None, reverse_proxy_certificate: CertificateDescription=None, upgrade_description: ClusterUpgradePolicy=None, upgrade_mode: str=None):
        """ClusterPropertiesUpdateParameters - a model defined in OpenAPI

        :param add_on_features: The add_on_features of this ClusterPropertiesUpdateParameters.
        :param certificate: The certificate of this ClusterPropertiesUpdateParameters.
        :param client_certificate_common_names: The client_certificate_common_names of this ClusterPropertiesUpdateParameters.
        :param client_certificate_thumbprints: The client_certificate_thumbprints of this ClusterPropertiesUpdateParameters.
        :param cluster_code_version: The cluster_code_version of this ClusterPropertiesUpdateParameters.
        :param fabric_settings: The fabric_settings of this ClusterPropertiesUpdateParameters.
        :param node_types: The node_types of this ClusterPropertiesUpdateParameters.
        :param reliability_level: The reliability_level of this ClusterPropertiesUpdateParameters.
        :param reverse_proxy_certificate: The reverse_proxy_certificate of this ClusterPropertiesUpdateParameters.
        :param upgrade_description: The upgrade_description of this ClusterPropertiesUpdateParameters.
        :param upgrade_mode: The upgrade_mode of this ClusterPropertiesUpdateParameters.
        """
        self.openapi_types = {
            'add_on_features': List[AddOnFeatures],
            'certificate': CertificateDescription,
            'client_certificate_common_names': List[ClientCertificateCommonName],
            'client_certificate_thumbprints': List[ClientCertificateThumbprint],
            'cluster_code_version': str,
            'fabric_settings': List[SettingsSectionDescription],
            'node_types': List[NodeTypeDescription],
            'reliability_level': str,
            'reverse_proxy_certificate': CertificateDescription,
            'upgrade_description': ClusterUpgradePolicy,
            'upgrade_mode': str
        }

        self.attribute_map = {
            'add_on_features': 'addOnFeatures',
            'certificate': 'certificate',
            'client_certificate_common_names': 'clientCertificateCommonNames',
            'client_certificate_thumbprints': 'clientCertificateThumbprints',
            'cluster_code_version': 'clusterCodeVersion',
            'fabric_settings': 'fabricSettings',
            'node_types': 'nodeTypes',
            'reliability_level': 'reliabilityLevel',
            'reverse_proxy_certificate': 'reverseProxyCertificate',
            'upgrade_description': 'upgradeDescription',
            'upgrade_mode': 'upgradeMode'
        }

        self._add_on_features = add_on_features
        self._certificate = certificate
        self._client_certificate_common_names = client_certificate_common_names
        self._client_certificate_thumbprints = client_certificate_thumbprints
        self._cluster_code_version = cluster_code_version
        self._fabric_settings = fabric_settings
        self._node_types = node_types
        self._reliability_level = reliability_level
        self._reverse_proxy_certificate = reverse_proxy_certificate
        self._upgrade_description = upgrade_description
        self._upgrade_mode = upgrade_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterPropertiesUpdateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterPropertiesUpdateParameters of this ClusterPropertiesUpdateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add_on_features(self):
        """Gets the add_on_features of this ClusterPropertiesUpdateParameters.

        The list of add-on features to enable in the cluster.

        :return: The add_on_features of this ClusterPropertiesUpdateParameters.
        :rtype: List[AddOnFeatures]
        """
        return self._add_on_features

    @add_on_features.setter
    def add_on_features(self, add_on_features):
        """Sets the add_on_features of this ClusterPropertiesUpdateParameters.

        The list of add-on features to enable in the cluster.

        :param add_on_features: The add_on_features of this ClusterPropertiesUpdateParameters.
        :type add_on_features: List[AddOnFeatures]
        """

        self._add_on_features = add_on_features

    @property
    def certificate(self):
        """Gets the certificate of this ClusterPropertiesUpdateParameters.


        :return: The certificate of this ClusterPropertiesUpdateParameters.
        :rtype: CertificateDescription
        """
        return self._certificate

    @certificate.setter
    def certificate(self, certificate):
        """Sets the certificate of this ClusterPropertiesUpdateParameters.


        :param certificate: The certificate of this ClusterPropertiesUpdateParameters.
        :type certificate: CertificateDescription
        """

        self._certificate = certificate

    @property
    def client_certificate_common_names(self):
        """Gets the client_certificate_common_names of this ClusterPropertiesUpdateParameters.

        The list of client certificates referenced by common name that are allowed to manage the cluster. This will overwrite the existing list.

        :return: The client_certificate_common_names of this ClusterPropertiesUpdateParameters.
        :rtype: List[ClientCertificateCommonName]
        """
        return self._client_certificate_common_names

    @client_certificate_common_names.setter
    def client_certificate_common_names(self, client_certificate_common_names):
        """Sets the client_certificate_common_names of this ClusterPropertiesUpdateParameters.

        The list of client certificates referenced by common name that are allowed to manage the cluster. This will overwrite the existing list.

        :param client_certificate_common_names: The client_certificate_common_names of this ClusterPropertiesUpdateParameters.
        :type client_certificate_common_names: List[ClientCertificateCommonName]
        """

        self._client_certificate_common_names = client_certificate_common_names

    @property
    def client_certificate_thumbprints(self):
        """Gets the client_certificate_thumbprints of this ClusterPropertiesUpdateParameters.

        The list of client certificates referenced by thumbprint that are allowed to manage the cluster. This will overwrite the existing list.

        :return: The client_certificate_thumbprints of this ClusterPropertiesUpdateParameters.
        :rtype: List[ClientCertificateThumbprint]
        """
        return self._client_certificate_thumbprints

    @client_certificate_thumbprints.setter
    def client_certificate_thumbprints(self, client_certificate_thumbprints):
        """Sets the client_certificate_thumbprints of this ClusterPropertiesUpdateParameters.

        The list of client certificates referenced by thumbprint that are allowed to manage the cluster. This will overwrite the existing list.

        :param client_certificate_thumbprints: The client_certificate_thumbprints of this ClusterPropertiesUpdateParameters.
        :type client_certificate_thumbprints: List[ClientCertificateThumbprint]
        """

        self._client_certificate_thumbprints = client_certificate_thumbprints

    @property
    def cluster_code_version(self):
        """Gets the cluster_code_version of this ClusterPropertiesUpdateParameters.

        The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.

        :return: The cluster_code_version of this ClusterPropertiesUpdateParameters.
        :rtype: str
        """
        return self._cluster_code_version

    @cluster_code_version.setter
    def cluster_code_version(self, cluster_code_version):
        """Sets the cluster_code_version of this ClusterPropertiesUpdateParameters.

        The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.

        :param cluster_code_version: The cluster_code_version of this ClusterPropertiesUpdateParameters.
        :type cluster_code_version: str
        """

        self._cluster_code_version = cluster_code_version

    @property
    def fabric_settings(self):
        """Gets the fabric_settings of this ClusterPropertiesUpdateParameters.

        The list of custom fabric settings to configure the cluster. This will overwrite the existing list.

        :return: The fabric_settings of this ClusterPropertiesUpdateParameters.
        :rtype: List[SettingsSectionDescription]
        """
        return self._fabric_settings

    @fabric_settings.setter
    def fabric_settings(self, fabric_settings):
        """Sets the fabric_settings of this ClusterPropertiesUpdateParameters.

        The list of custom fabric settings to configure the cluster. This will overwrite the existing list.

        :param fabric_settings: The fabric_settings of this ClusterPropertiesUpdateParameters.
        :type fabric_settings: List[SettingsSectionDescription]
        """

        self._fabric_settings = fabric_settings

    @property
    def node_types(self):
        """Gets the node_types of this ClusterPropertiesUpdateParameters.

        The list of node types in the cluster. This will overwrite the existing list.

        :return: The node_types of this ClusterPropertiesUpdateParameters.
        :rtype: List[NodeTypeDescription]
        """
        return self._node_types

    @node_types.setter
    def node_types(self, node_types):
        """Sets the node_types of this ClusterPropertiesUpdateParameters.

        The list of node types in the cluster. This will overwrite the existing list.

        :param node_types: The node_types of this ClusterPropertiesUpdateParameters.
        :type node_types: List[NodeTypeDescription]
        """

        self._node_types = node_types

    @property
    def reliability_level(self):
        """Gets the reliability_level of this ClusterPropertiesUpdateParameters.

        The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

        :return: The reliability_level of this ClusterPropertiesUpdateParameters.
        :rtype: str
        """
        return self._reliability_level

    @reliability_level.setter
    def reliability_level(self, reliability_level):
        """Sets the reliability_level of this ClusterPropertiesUpdateParameters.

        The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

        :param reliability_level: The reliability_level of this ClusterPropertiesUpdateParameters.
        :type reliability_level: str
        """
        allowed_values = ["Bronze", "Silver", "Gold"]  # noqa: E501
        if reliability_level not in allowed_values:
            raise ValueError(
                "Invalid value for `reliability_level` ({0}), must be one of {1}"
                .format(reliability_level, allowed_values)
            )

        self._reliability_level = reliability_level

    @property
    def reverse_proxy_certificate(self):
        """Gets the reverse_proxy_certificate of this ClusterPropertiesUpdateParameters.


        :return: The reverse_proxy_certificate of this ClusterPropertiesUpdateParameters.
        :rtype: CertificateDescription
        """
        return self._reverse_proxy_certificate

    @reverse_proxy_certificate.setter
    def reverse_proxy_certificate(self, reverse_proxy_certificate):
        """Sets the reverse_proxy_certificate of this ClusterPropertiesUpdateParameters.


        :param reverse_proxy_certificate: The reverse_proxy_certificate of this ClusterPropertiesUpdateParameters.
        :type reverse_proxy_certificate: CertificateDescription
        """

        self._reverse_proxy_certificate = reverse_proxy_certificate

    @property
    def upgrade_description(self):
        """Gets the upgrade_description of this ClusterPropertiesUpdateParameters.


        :return: The upgrade_description of this ClusterPropertiesUpdateParameters.
        :rtype: ClusterUpgradePolicy
        """
        return self._upgrade_description

    @upgrade_description.setter
    def upgrade_description(self, upgrade_description):
        """Sets the upgrade_description of this ClusterPropertiesUpdateParameters.


        :param upgrade_description: The upgrade_description of this ClusterPropertiesUpdateParameters.
        :type upgrade_description: ClusterUpgradePolicy
        """

        self._upgrade_description = upgrade_description

    @property
    def upgrade_mode(self):
        """Gets the upgrade_mode of this ClusterPropertiesUpdateParameters.

        The upgrade mode of the cluster. This indicates if the cluster should be automatically upgraded when new Service Fabric runtime version is available.

        :return: The upgrade_mode of this ClusterPropertiesUpdateParameters.
        :rtype: str
        """
        return self._upgrade_mode

    @upgrade_mode.setter
    def upgrade_mode(self, upgrade_mode):
        """Sets the upgrade_mode of this ClusterPropertiesUpdateParameters.

        The upgrade mode of the cluster. This indicates if the cluster should be automatically upgraded when new Service Fabric runtime version is available.

        :param upgrade_mode: The upgrade_mode of this ClusterPropertiesUpdateParameters.
        :type upgrade_mode: str
        """
        allowed_values = ["Automatic", "Manual"]  # noqa: E501
        if upgrade_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `upgrade_mode` ({0}), must be one of {1}"
                .format(upgrade_mode, allowed_values)
            )

        self._upgrade_mode = upgrade_mode
