/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2017-07-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationParameter from './ApplicationParameter';

/**
 * The VersionProperties model module.
 * @module model/VersionProperties
 * @version 2017-07-01-preview
 */
class VersionProperties {
    /**
     * Constructs a new <code>VersionProperties</code>.
     * The properties of the version resource.
     * @alias module:model/VersionProperties
     * @param appPackageUrl {String} The URL to the application package
     */
    constructor(appPackageUrl) { 
        
        VersionProperties.initialize(this, appPackageUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appPackageUrl) { 
        obj['appPackageUrl'] = appPackageUrl;
    }

    /**
     * Constructs a <code>VersionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VersionProperties} obj Optional instance to populate.
     * @return {module:model/VersionProperties} The populated <code>VersionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VersionProperties();

            if (data.hasOwnProperty('appPackageUrl')) {
                obj['appPackageUrl'] = ApiClient.convertToType(data['appPackageUrl'], 'String');
            }
            if (data.hasOwnProperty('defaultParameterList')) {
                obj['defaultParameterList'] = ApiClient.convertToType(data['defaultParameterList'], [ApplicationParameter]);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VersionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VersionProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VersionProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['appPackageUrl'] && !(typeof data['appPackageUrl'] === 'string' || data['appPackageUrl'] instanceof String)) {
            throw new Error("Expected the field `appPackageUrl` to be a primitive type in the JSON string but got " + data['appPackageUrl']);
        }
        if (data['defaultParameterList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['defaultParameterList'])) {
                throw new Error("Expected the field `defaultParameterList` to be an array in the JSON data but got " + data['defaultParameterList']);
            }
            // validate the optional field `defaultParameterList` (array)
            for (const item of data['defaultParameterList']) {
                ApplicationParameter.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}

VersionProperties.RequiredProperties = ["appPackageUrl"];

/**
 * The URL to the application package
 * @member {String} appPackageUrl
 */
VersionProperties.prototype['appPackageUrl'] = undefined;

/**
 * List of application type parameters that can be overridden when creating or updating the application.
 * @member {Array.<module:model/ApplicationParameter>} defaultParameterList
 */
VersionProperties.prototype['defaultParameterList'] = undefined;

/**
 * The current deployment or provisioning state, which only appears in the response
 * @member {String} provisioningState
 */
VersionProperties.prototype['provisioningState'] = undefined;






export default VersionProperties;

