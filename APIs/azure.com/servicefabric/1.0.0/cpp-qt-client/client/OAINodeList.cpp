/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINodeList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINodeList::OAINodeList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINodeList::OAINodeList() {
    this->initializeModel();
}

OAINodeList::~OAINodeList() {}

void OAINodeList::initializeModel() {

    m_continuation_token_isSet = false;
    m_continuation_token_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;
}

void OAINodeList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINodeList::fromJsonObject(QJsonObject json) {

    m_continuation_token_isValid = ::OpenAPI::fromJsonValue(m_continuation_token, json[QString("ContinuationToken")]);
    m_continuation_token_isSet = !json[QString("ContinuationToken")].isNull() && m_continuation_token_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("Items")]);
    m_items_isSet = !json[QString("Items")].isNull() && m_items_isValid;
}

QString OAINodeList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINodeList::asJsonObject() const {
    QJsonObject obj;
    if (m_continuation_token_isSet) {
        obj.insert(QString("ContinuationToken"), ::OpenAPI::toJsonValue(m_continuation_token));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("Items"), ::OpenAPI::toJsonValue(m_items));
    }
    return obj;
}

QString OAINodeList::getContinuationToken() const {
    return m_continuation_token;
}
void OAINodeList::setContinuationToken(const QString &continuation_token) {
    m_continuation_token = continuation_token;
    m_continuation_token_isSet = true;
}

bool OAINodeList::is_continuation_token_Set() const{
    return m_continuation_token_isSet;
}

bool OAINodeList::is_continuation_token_Valid() const{
    return m_continuation_token_isValid;
}

QList<OAINode> OAINodeList::getItems() const {
    return m_items;
}
void OAINodeList::setItems(const QList<OAINode> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAINodeList::is_items_Set() const{
    return m_items_isSet;
}

bool OAINodeList::is_items_Valid() const{
    return m_items_isValid;
}

bool OAINodeList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_continuation_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINodeList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
