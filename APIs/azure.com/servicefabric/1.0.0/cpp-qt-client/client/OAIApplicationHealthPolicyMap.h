/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationHealthPolicyMap.h
 *
 * The application health policy of the cluster
 */

#ifndef OAIApplicationHealthPolicyMap_H
#define OAIApplicationHealthPolicyMap_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplicationHealthPolicyMap : public OAIObject {
public:
    OAIApplicationHealthPolicyMap();
    OAIApplicationHealthPolicyMap(QString json);
    ~OAIApplicationHealthPolicyMap() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isConsiderWarningAsError() const;
    void setConsiderWarningAsError(const bool &consider_warning_as_error);
    bool is_consider_warning_as_error_Set() const;
    bool is_consider_warning_as_error_Valid() const;

    qint32 getDefaultServiceTypeHealthPolicy() const;
    void setDefaultServiceTypeHealthPolicy(const qint32 &default_service_type_health_policy);
    bool is_default_service_type_health_policy_Set() const;
    bool is_default_service_type_health_policy_Valid() const;

    qint32 getMaxPercentUnhealthyDeployedApplications() const;
    void setMaxPercentUnhealthyDeployedApplications(const qint32 &max_percent_unhealthy_deployed_applications);
    bool is_max_percent_unhealthy_deployed_applications_Set() const;
    bool is_max_percent_unhealthy_deployed_applications_Valid() const;

    qint32 getMaxPercentUnhealthyPartitionsPerService() const;
    void setMaxPercentUnhealthyPartitionsPerService(const qint32 &max_percent_unhealthy_partitions_per_service);
    bool is_max_percent_unhealthy_partitions_per_service_Set() const;
    bool is_max_percent_unhealthy_partitions_per_service_Valid() const;

    qint32 getMaxPercentUnhealthyReplicasPerPartition() const;
    void setMaxPercentUnhealthyReplicasPerPartition(const qint32 &max_percent_unhealthy_replicas_per_partition);
    bool is_max_percent_unhealthy_replicas_per_partition_Set() const;
    bool is_max_percent_unhealthy_replicas_per_partition_Valid() const;

    qint32 getMaxPercentUnhealthyServices() const;
    void setMaxPercentUnhealthyServices(const qint32 &max_percent_unhealthy_services);
    bool is_max_percent_unhealthy_services_Set() const;
    bool is_max_percent_unhealthy_services_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_consider_warning_as_error;
    bool m_consider_warning_as_error_isSet;
    bool m_consider_warning_as_error_isValid;

    qint32 m_default_service_type_health_policy;
    bool m_default_service_type_health_policy_isSet;
    bool m_default_service_type_health_policy_isValid;

    qint32 m_max_percent_unhealthy_deployed_applications;
    bool m_max_percent_unhealthy_deployed_applications_isSet;
    bool m_max_percent_unhealthy_deployed_applications_isValid;

    qint32 m_max_percent_unhealthy_partitions_per_service;
    bool m_max_percent_unhealthy_partitions_per_service_isSet;
    bool m_max_percent_unhealthy_partitions_per_service_isValid;

    qint32 m_max_percent_unhealthy_replicas_per_partition;
    bool m_max_percent_unhealthy_replicas_per_partition_isSet;
    bool m_max_percent_unhealthy_replicas_per_partition_isValid;

    qint32 m_max_percent_unhealthy_services;
    bool m_max_percent_unhealthy_services_isSet;
    bool m_max_percent_unhealthy_services_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationHealthPolicyMap)

#endif // OAIApplicationHealthPolicyMap_H
