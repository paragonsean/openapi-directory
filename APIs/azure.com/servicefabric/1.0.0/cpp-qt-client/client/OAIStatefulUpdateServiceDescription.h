/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStatefulUpdateServiceDescription.h
 *
 * The description of the stateful update service
 */

#ifndef OAIStatefulUpdateServiceDescription_H
#define OAIStatefulUpdateServiceDescription_H

#include <QJsonObject>

#include "OAIServiceKind.h"
#include "OAIUpdateServiceDescription.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStatefulUpdateServiceDescription : public OAIObject {
public:
    OAIStatefulUpdateServiceDescription();
    OAIStatefulUpdateServiceDescription(QString json);
    ~OAIStatefulUpdateServiceDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMinReplicaSetSize() const;
    void setMinReplicaSetSize(const qint32 &min_replica_set_size);
    bool is_min_replica_set_size_Set() const;
    bool is_min_replica_set_size_Valid() const;

    qint32 getQuorumLossWaitDurationInMilliseconds() const;
    void setQuorumLossWaitDurationInMilliseconds(const qint32 &quorum_loss_wait_duration_in_milliseconds);
    bool is_quorum_loss_wait_duration_in_milliseconds_Set() const;
    bool is_quorum_loss_wait_duration_in_milliseconds_Valid() const;

    qint32 getReplicaRestartWaitDurationInMilliseconds() const;
    void setReplicaRestartWaitDurationInMilliseconds(const qint32 &replica_restart_wait_duration_in_milliseconds);
    bool is_replica_restart_wait_duration_in_milliseconds_Set() const;
    bool is_replica_restart_wait_duration_in_milliseconds_Valid() const;

    qint32 getStandByReplicaKeepDurationInMilliseconds() const;
    void setStandByReplicaKeepDurationInMilliseconds(const qint32 &stand_by_replica_keep_duration_in_milliseconds);
    bool is_stand_by_replica_keep_duration_in_milliseconds_Set() const;
    bool is_stand_by_replica_keep_duration_in_milliseconds_Valid() const;

    qint32 getTargetReplicaSetSize() const;
    void setTargetReplicaSetSize(const qint32 &target_replica_set_size);
    bool is_target_replica_set_size_Set() const;
    bool is_target_replica_set_size_Valid() const;

    qint32 getFlags() const;
    void setFlags(const qint32 &flags);
    bool is_flags_Set() const;
    bool is_flags_Valid() const;

    OAIServiceKind getServiceKind() const;
    void setServiceKind(const OAIServiceKind &service_kind);
    bool is_service_kind_Set() const;
    bool is_service_kind_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_min_replica_set_size;
    bool m_min_replica_set_size_isSet;
    bool m_min_replica_set_size_isValid;

    qint32 m_quorum_loss_wait_duration_in_milliseconds;
    bool m_quorum_loss_wait_duration_in_milliseconds_isSet;
    bool m_quorum_loss_wait_duration_in_milliseconds_isValid;

    qint32 m_replica_restart_wait_duration_in_milliseconds;
    bool m_replica_restart_wait_duration_in_milliseconds_isSet;
    bool m_replica_restart_wait_duration_in_milliseconds_isValid;

    qint32 m_stand_by_replica_keep_duration_in_milliseconds;
    bool m_stand_by_replica_keep_duration_in_milliseconds_isSet;
    bool m_stand_by_replica_keep_duration_in_milliseconds_isValid;

    qint32 m_target_replica_set_size;
    bool m_target_replica_set_size_isSet;
    bool m_target_replica_set_size_isValid;

    qint32 m_flags;
    bool m_flags_isSet;
    bool m_flags_isValid;

    OAIServiceKind m_service_kind;
    bool m_service_kind_isSet;
    bool m_service_kind_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStatefulUpdateServiceDescription)

#endif // OAIStatefulUpdateServiceDescription_H
