/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartClusterUpgrade.h
 *
 * The description of the start cluster upgrade
 */

#ifndef OAIStartClusterUpgrade_H
#define OAIStartClusterUpgrade_H

#include <QJsonObject>

#include "OAIApplicationHealthPolicyMap.h"
#include "OAIClusterUpgradeHealthPolicy.h"
#include "OAIObject.h"
#include "OAIRollingUpgradeMode.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationHealthPolicyMap;
class OAIClusterUpgradeHealthPolicy;

class OAIStartClusterUpgrade : public OAIObject {
public:
    OAIStartClusterUpgrade();
    OAIStartClusterUpgrade(QString json);
    ~OAIStartClusterUpgrade() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApplicationHealthPolicyMap getApplicationHealthPolicyMap() const;
    void setApplicationHealthPolicyMap(const OAIApplicationHealthPolicyMap &application_health_policy_map);
    bool is_application_health_policy_map_Set() const;
    bool is_application_health_policy_map_Valid() const;

    OAIClusterUpgradeHealthPolicy getClusterUpgradeHealthPolicy() const;
    void setClusterUpgradeHealthPolicy(const OAIClusterUpgradeHealthPolicy &cluster_upgrade_health_policy);
    bool is_cluster_upgrade_health_policy_Set() const;
    bool is_cluster_upgrade_health_policy_Valid() const;

    QString getCodeVersion() const;
    void setCodeVersion(const QString &code_version);
    bool is_code_version_Set() const;
    bool is_code_version_Valid() const;

    QString getConfigVersion() const;
    void setConfigVersion(const QString &config_version);
    bool is_config_version_Set() const;
    bool is_config_version_Valid() const;

    bool isEnableDeltaHealthEvaluation() const;
    void setEnableDeltaHealthEvaluation(const bool &enable_delta_health_evaluation);
    bool is_enable_delta_health_evaluation_Set() const;
    bool is_enable_delta_health_evaluation_Valid() const;

    bool isForceRestart() const;
    void setForceRestart(const bool &force_restart);
    bool is_force_restart_Set() const;
    bool is_force_restart_Valid() const;

    OAIObject getMonitoringPolicy() const;
    void setMonitoringPolicy(const OAIObject &monitoring_policy);
    bool is_monitoring_policy_Set() const;
    bool is_monitoring_policy_Valid() const;

    OAIRollingUpgradeMode getRollingUpgradeMode() const;
    void setRollingUpgradeMode(const OAIRollingUpgradeMode &rolling_upgrade_mode);
    bool is_rolling_upgrade_mode_Set() const;
    bool is_rolling_upgrade_mode_Valid() const;

    QString getUpgradeKind() const;
    void setUpgradeKind(const QString &upgrade_kind);
    bool is_upgrade_kind_Set() const;
    bool is_upgrade_kind_Valid() const;

    qint32 getUpgradeReplicaSetCheckTimeoutInSeconds() const;
    void setUpgradeReplicaSetCheckTimeoutInSeconds(const qint32 &upgrade_replica_set_check_timeout_in_seconds);
    bool is_upgrade_replica_set_check_timeout_in_seconds_Set() const;
    bool is_upgrade_replica_set_check_timeout_in_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApplicationHealthPolicyMap m_application_health_policy_map;
    bool m_application_health_policy_map_isSet;
    bool m_application_health_policy_map_isValid;

    OAIClusterUpgradeHealthPolicy m_cluster_upgrade_health_policy;
    bool m_cluster_upgrade_health_policy_isSet;
    bool m_cluster_upgrade_health_policy_isValid;

    QString m_code_version;
    bool m_code_version_isSet;
    bool m_code_version_isValid;

    QString m_config_version;
    bool m_config_version_isSet;
    bool m_config_version_isValid;

    bool m_enable_delta_health_evaluation;
    bool m_enable_delta_health_evaluation_isSet;
    bool m_enable_delta_health_evaluation_isValid;

    bool m_force_restart;
    bool m_force_restart_isSet;
    bool m_force_restart_isValid;

    OAIObject m_monitoring_policy;
    bool m_monitoring_policy_isSet;
    bool m_monitoring_policy_isValid;

    OAIRollingUpgradeMode m_rolling_upgrade_mode;
    bool m_rolling_upgrade_mode_isSet;
    bool m_rolling_upgrade_mode_isValid;

    QString m_upgrade_kind;
    bool m_upgrade_kind_isSet;
    bool m_upgrade_kind_isValid;

    qint32 m_upgrade_replica_set_check_timeout_in_seconds;
    bool m_upgrade_replica_set_check_timeout_in_seconds_isSet;
    bool m_upgrade_replica_set_check_timeout_in_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartClusterUpgrade)

#endif // OAIStartClusterUpgrade_H
