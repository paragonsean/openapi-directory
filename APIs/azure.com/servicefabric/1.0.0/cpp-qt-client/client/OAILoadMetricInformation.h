/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoadMetricInformation.h
 *
 * The information of the load metric
 */

#ifndef OAILoadMetricInformation_H
#define OAILoadMetricInformation_H

#include <QJsonObject>

#include "OAILoadMetricInformation_MaxNodeLoadId.h"
#include "OAILoadMetricInformation_MinNodeLoadId.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILoadMetricInformation_MaxNodeLoadId;
class OAILoadMetricInformation_MinNodeLoadId;

class OAILoadMetricInformation : public OAIObject {
public:
    OAILoadMetricInformation();
    OAILoadMetricInformation(QString json);
    ~OAILoadMetricInformation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    qint32 getActivityThreshold() const;
    void setActivityThreshold(const qint32 &activity_threshold);
    bool is_activity_threshold_Set() const;
    bool is_activity_threshold_Valid() const;

    qint32 getBalancingThreshold() const;
    void setBalancingThreshold(const qint32 &balancing_threshold);
    bool is_balancing_threshold_Set() const;
    bool is_balancing_threshold_Valid() const;

    QString getBufferedCapacity() const;
    void setBufferedCapacity(const QString &buffered_capacity);
    bool is_buffered_capacity_Set() const;
    bool is_buffered_capacity_Valid() const;

    QString getClusterCapacity() const;
    void setClusterCapacity(const QString &cluster_capacity);
    bool is_cluster_capacity_Set() const;
    bool is_cluster_capacity_Valid() const;

    QString getClusterLoad() const;
    void setClusterLoad(const QString &cluster_load);
    bool is_cluster_load_Set() const;
    bool is_cluster_load_Valid() const;

    qint32 getDeviationAfter() const;
    void setDeviationAfter(const qint32 &deviation_after);
    bool is_deviation_after_Set() const;
    bool is_deviation_after_Valid() const;

    qint32 getDeviationBefore() const;
    void setDeviationBefore(const qint32 &deviation_before);
    bool is_deviation_before_Set() const;
    bool is_deviation_before_Valid() const;

    bool isIsBalancedAfter() const;
    void setIsBalancedAfter(const bool &is_balanced_after);
    bool is_is_balanced_after_Set() const;
    bool is_is_balanced_after_Valid() const;

    bool isIsBalancedBefore() const;
    void setIsBalancedBefore(const bool &is_balanced_before);
    bool is_is_balanced_before_Set() const;
    bool is_is_balanced_before_Valid() const;

    bool isIsClusterCapacityViolation() const;
    void setIsClusterCapacityViolation(const bool &is_cluster_capacity_violation);
    bool is_is_cluster_capacity_violation_Set() const;
    bool is_is_cluster_capacity_violation_Valid() const;

    OAILoadMetricInformation_MaxNodeLoadId getMaxNodeLoadId() const;
    void setMaxNodeLoadId(const OAILoadMetricInformation_MaxNodeLoadId &max_node_load_id);
    bool is_max_node_load_id_Set() const;
    bool is_max_node_load_id_Valid() const;

    QString getMaxNodeLoadValue() const;
    void setMaxNodeLoadValue(const QString &max_node_load_value);
    bool is_max_node_load_value_Set() const;
    bool is_max_node_load_value_Valid() const;

    OAILoadMetricInformation_MinNodeLoadId getMinNodeLoadId() const;
    void setMinNodeLoadId(const OAILoadMetricInformation_MinNodeLoadId &min_node_load_id);
    bool is_min_node_load_id_Set() const;
    bool is_min_node_load_id_Valid() const;

    QString getMinNodeLoadValue() const;
    void setMinNodeLoadValue(const QString &min_node_load_value);
    bool is_min_node_load_value_Set() const;
    bool is_min_node_load_value_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNodeBufferPercentage() const;
    void setNodeBufferPercentage(const qint32 &node_buffer_percentage);
    bool is_node_buffer_percentage_Set() const;
    bool is_node_buffer_percentage_Valid() const;

    QString getRemainingBufferedCapacity() const;
    void setRemainingBufferedCapacity(const QString &remaining_buffered_capacity);
    bool is_remaining_buffered_capacity_Set() const;
    bool is_remaining_buffered_capacity_Valid() const;

    QString getRemainingUnbufferedCapacity() const;
    void setRemainingUnbufferedCapacity(const QString &remaining_unbuffered_capacity);
    bool is_remaining_unbuffered_capacity_Set() const;
    bool is_remaining_unbuffered_capacity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    qint32 m_activity_threshold;
    bool m_activity_threshold_isSet;
    bool m_activity_threshold_isValid;

    qint32 m_balancing_threshold;
    bool m_balancing_threshold_isSet;
    bool m_balancing_threshold_isValid;

    QString m_buffered_capacity;
    bool m_buffered_capacity_isSet;
    bool m_buffered_capacity_isValid;

    QString m_cluster_capacity;
    bool m_cluster_capacity_isSet;
    bool m_cluster_capacity_isValid;

    QString m_cluster_load;
    bool m_cluster_load_isSet;
    bool m_cluster_load_isValid;

    qint32 m_deviation_after;
    bool m_deviation_after_isSet;
    bool m_deviation_after_isValid;

    qint32 m_deviation_before;
    bool m_deviation_before_isSet;
    bool m_deviation_before_isValid;

    bool m_is_balanced_after;
    bool m_is_balanced_after_isSet;
    bool m_is_balanced_after_isValid;

    bool m_is_balanced_before;
    bool m_is_balanced_before_isSet;
    bool m_is_balanced_before_isValid;

    bool m_is_cluster_capacity_violation;
    bool m_is_cluster_capacity_violation_isSet;
    bool m_is_cluster_capacity_violation_isValid;

    OAILoadMetricInformation_MaxNodeLoadId m_max_node_load_id;
    bool m_max_node_load_id_isSet;
    bool m_max_node_load_id_isValid;

    QString m_max_node_load_value;
    bool m_max_node_load_value_isSet;
    bool m_max_node_load_value_isValid;

    OAILoadMetricInformation_MinNodeLoadId m_min_node_load_id;
    bool m_min_node_load_id_isSet;
    bool m_min_node_load_id_isValid;

    QString m_min_node_load_value;
    bool m_min_node_load_value_isSet;
    bool m_min_node_load_value_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_node_buffer_percentage;
    bool m_node_buffer_percentage_isSet;
    bool m_node_buffer_percentage_isValid;

    QString m_remaining_buffered_capacity;
    bool m_remaining_buffered_capacity_isSet;
    bool m_remaining_buffered_capacity_isValid;

    QString m_remaining_unbuffered_capacity;
    bool m_remaining_unbuffered_capacity_isSet;
    bool m_remaining_unbuffered_capacity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoadMetricInformation)

#endif // OAILoadMetricInformation_H
