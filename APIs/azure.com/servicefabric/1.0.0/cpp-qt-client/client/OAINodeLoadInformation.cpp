/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINodeLoadInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINodeLoadInformation::OAINodeLoadInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINodeLoadInformation::OAINodeLoadInformation() {
    this->initializeModel();
}

OAINodeLoadInformation::~OAINodeLoadInformation() {}

void OAINodeLoadInformation::initializeModel() {

    m_node_load_metric_information_isSet = false;
    m_node_load_metric_information_isValid = false;

    m_node_name_isSet = false;
    m_node_name_isValid = false;
}

void OAINodeLoadInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINodeLoadInformation::fromJsonObject(QJsonObject json) {

    m_node_load_metric_information_isValid = ::OpenAPI::fromJsonValue(m_node_load_metric_information, json[QString("NodeLoadMetricInformation")]);
    m_node_load_metric_information_isSet = !json[QString("NodeLoadMetricInformation")].isNull() && m_node_load_metric_information_isValid;

    m_node_name_isValid = ::OpenAPI::fromJsonValue(m_node_name, json[QString("NodeName")]);
    m_node_name_isSet = !json[QString("NodeName")].isNull() && m_node_name_isValid;
}

QString OAINodeLoadInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINodeLoadInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_node_load_metric_information.isSet()) {
        obj.insert(QString("NodeLoadMetricInformation"), ::OpenAPI::toJsonValue(m_node_load_metric_information));
    }
    if (m_node_name_isSet) {
        obj.insert(QString("NodeName"), ::OpenAPI::toJsonValue(m_node_name));
    }
    return obj;
}

OAINodeLoadMetricInformation OAINodeLoadInformation::getNodeLoadMetricInformation() const {
    return m_node_load_metric_information;
}
void OAINodeLoadInformation::setNodeLoadMetricInformation(const OAINodeLoadMetricInformation &node_load_metric_information) {
    m_node_load_metric_information = node_load_metric_information;
    m_node_load_metric_information_isSet = true;
}

bool OAINodeLoadInformation::is_node_load_metric_information_Set() const{
    return m_node_load_metric_information_isSet;
}

bool OAINodeLoadInformation::is_node_load_metric_information_Valid() const{
    return m_node_load_metric_information_isValid;
}

QString OAINodeLoadInformation::getNodeName() const {
    return m_node_name;
}
void OAINodeLoadInformation::setNodeName(const QString &node_name) {
    m_node_name = node_name;
    m_node_name_isSet = true;
}

bool OAINodeLoadInformation::is_node_name_Set() const{
    return m_node_name_isSet;
}

bool OAINodeLoadInformation::is_node_name_Valid() const{
    return m_node_name_isValid;
}

bool OAINodeLoadInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_node_load_metric_information.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINodeLoadInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
