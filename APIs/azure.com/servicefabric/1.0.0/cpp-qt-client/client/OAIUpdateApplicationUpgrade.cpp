/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateApplicationUpgrade.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateApplicationUpgrade::OAIUpdateApplicationUpgrade(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateApplicationUpgrade::OAIUpdateApplicationUpgrade() {
    this->initializeModel();
}

OAIUpdateApplicationUpgrade::~OAIUpdateApplicationUpgrade() {}

void OAIUpdateApplicationUpgrade::initializeModel() {

    m_application_health_policy_isSet = false;
    m_application_health_policy_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_update_description_isSet = false;
    m_update_description_isValid = false;

    m_upgrade_kind_isSet = false;
    m_upgrade_kind_isValid = false;
}

void OAIUpdateApplicationUpgrade::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateApplicationUpgrade::fromJsonObject(QJsonObject json) {

    m_application_health_policy_isValid = ::OpenAPI::fromJsonValue(m_application_health_policy, json[QString("ApplicationHealthPolicy")]);
    m_application_health_policy_isSet = !json[QString("ApplicationHealthPolicy")].isNull() && m_application_health_policy_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_update_description_isValid = ::OpenAPI::fromJsonValue(m_update_description, json[QString("UpdateDescription")]);
    m_update_description_isSet = !json[QString("UpdateDescription")].isNull() && m_update_description_isValid;

    m_upgrade_kind_isValid = ::OpenAPI::fromJsonValue(m_upgrade_kind, json[QString("UpgradeKind")]);
    m_upgrade_kind_isSet = !json[QString("UpgradeKind")].isNull() && m_upgrade_kind_isValid;
}

QString OAIUpdateApplicationUpgrade::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateApplicationUpgrade::asJsonObject() const {
    QJsonObject obj;
    if (m_application_health_policy.isSet()) {
        obj.insert(QString("ApplicationHealthPolicy"), ::OpenAPI::toJsonValue(m_application_health_policy));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_update_description.isSet()) {
        obj.insert(QString("UpdateDescription"), ::OpenAPI::toJsonValue(m_update_description));
    }
    if (m_upgrade_kind_isSet) {
        obj.insert(QString("UpgradeKind"), ::OpenAPI::toJsonValue(m_upgrade_kind));
    }
    return obj;
}

OAIApplicationHealthPolicy OAIUpdateApplicationUpgrade::getApplicationHealthPolicy() const {
    return m_application_health_policy;
}
void OAIUpdateApplicationUpgrade::setApplicationHealthPolicy(const OAIApplicationHealthPolicy &application_health_policy) {
    m_application_health_policy = application_health_policy;
    m_application_health_policy_isSet = true;
}

bool OAIUpdateApplicationUpgrade::is_application_health_policy_Set() const{
    return m_application_health_policy_isSet;
}

bool OAIUpdateApplicationUpgrade::is_application_health_policy_Valid() const{
    return m_application_health_policy_isValid;
}

QString OAIUpdateApplicationUpgrade::getName() const {
    return m_name;
}
void OAIUpdateApplicationUpgrade::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateApplicationUpgrade::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateApplicationUpgrade::is_name_Valid() const{
    return m_name_isValid;
}

OAIUpdateDescription OAIUpdateApplicationUpgrade::getUpdateDescription() const {
    return m_update_description;
}
void OAIUpdateApplicationUpgrade::setUpdateDescription(const OAIUpdateDescription &update_description) {
    m_update_description = update_description;
    m_update_description_isSet = true;
}

bool OAIUpdateApplicationUpgrade::is_update_description_Set() const{
    return m_update_description_isSet;
}

bool OAIUpdateApplicationUpgrade::is_update_description_Valid() const{
    return m_update_description_isValid;
}

QString OAIUpdateApplicationUpgrade::getUpgradeKind() const {
    return m_upgrade_kind;
}
void OAIUpdateApplicationUpgrade::setUpgradeKind(const QString &upgrade_kind) {
    m_upgrade_kind = upgrade_kind;
    m_upgrade_kind_isSet = true;
}

bool OAIUpdateApplicationUpgrade::is_upgrade_kind_Set() const{
    return m_upgrade_kind_isSet;
}

bool OAIUpdateApplicationUpgrade::is_upgrade_kind_Valid() const{
    return m_upgrade_kind_isValid;
}

bool OAIUpdateApplicationUpgrade::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_health_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_upgrade_kind_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateApplicationUpgrade::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
