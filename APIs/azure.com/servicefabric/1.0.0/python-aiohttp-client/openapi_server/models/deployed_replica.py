# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.replica_role import ReplicaRole
from openapi_server.models.replica_status import ReplicaStatus
from openapi_server.models.service_kind import ServiceKind
from openapi_server import util


class DeployedReplica(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, code_package_name: str=None, instance_id: str=None, partition_id: str=None, replica_id: str=None, replica_role: ReplicaRole=None, replica_status: ReplicaStatus=None, service_kind: ServiceKind=None, service_manifest_name: str=None, service_manifest_version: str=None, service_name: str=None, service_type_name: str=None):
        """DeployedReplica - a model defined in OpenAPI

        :param address: The address of this DeployedReplica.
        :param code_package_name: The code_package_name of this DeployedReplica.
        :param instance_id: The instance_id of this DeployedReplica.
        :param partition_id: The partition_id of this DeployedReplica.
        :param replica_id: The replica_id of this DeployedReplica.
        :param replica_role: The replica_role of this DeployedReplica.
        :param replica_status: The replica_status of this DeployedReplica.
        :param service_kind: The service_kind of this DeployedReplica.
        :param service_manifest_name: The service_manifest_name of this DeployedReplica.
        :param service_manifest_version: The service_manifest_version of this DeployedReplica.
        :param service_name: The service_name of this DeployedReplica.
        :param service_type_name: The service_type_name of this DeployedReplica.
        """
        self.openapi_types = {
            'address': str,
            'code_package_name': str,
            'instance_id': str,
            'partition_id': str,
            'replica_id': str,
            'replica_role': ReplicaRole,
            'replica_status': ReplicaStatus,
            'service_kind': ServiceKind,
            'service_manifest_name': str,
            'service_manifest_version': str,
            'service_name': str,
            'service_type_name': str
        }

        self.attribute_map = {
            'address': 'Address',
            'code_package_name': 'CodePackageName',
            'instance_id': 'InstanceId',
            'partition_id': 'PartitionId',
            'replica_id': 'ReplicaId',
            'replica_role': 'ReplicaRole',
            'replica_status': 'ReplicaStatus',
            'service_kind': 'ServiceKind',
            'service_manifest_name': 'ServiceManifestName',
            'service_manifest_version': 'ServiceManifestVersion',
            'service_name': 'ServiceName',
            'service_type_name': 'ServiceTypeName'
        }

        self._address = address
        self._code_package_name = code_package_name
        self._instance_id = instance_id
        self._partition_id = partition_id
        self._replica_id = replica_id
        self._replica_role = replica_role
        self._replica_status = replica_status
        self._service_kind = service_kind
        self._service_manifest_name = service_manifest_name
        self._service_manifest_version = service_manifest_version
        self._service_name = service_name
        self._service_type_name = service_type_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeployedReplica':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeployedReplica of this DeployedReplica.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this DeployedReplica.


        :return: The address of this DeployedReplica.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this DeployedReplica.


        :param address: The address of this DeployedReplica.
        :type address: str
        """

        self._address = address

    @property
    def code_package_name(self):
        """Gets the code_package_name of this DeployedReplica.


        :return: The code_package_name of this DeployedReplica.
        :rtype: str
        """
        return self._code_package_name

    @code_package_name.setter
    def code_package_name(self, code_package_name):
        """Sets the code_package_name of this DeployedReplica.


        :param code_package_name: The code_package_name of this DeployedReplica.
        :type code_package_name: str
        """

        self._code_package_name = code_package_name

    @property
    def instance_id(self):
        """Gets the instance_id of this DeployedReplica.


        :return: The instance_id of this DeployedReplica.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this DeployedReplica.


        :param instance_id: The instance_id of this DeployedReplica.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def partition_id(self):
        """Gets the partition_id of this DeployedReplica.


        :return: The partition_id of this DeployedReplica.
        :rtype: str
        """
        return self._partition_id

    @partition_id.setter
    def partition_id(self, partition_id):
        """Sets the partition_id of this DeployedReplica.


        :param partition_id: The partition_id of this DeployedReplica.
        :type partition_id: str
        """

        self._partition_id = partition_id

    @property
    def replica_id(self):
        """Gets the replica_id of this DeployedReplica.


        :return: The replica_id of this DeployedReplica.
        :rtype: str
        """
        return self._replica_id

    @replica_id.setter
    def replica_id(self, replica_id):
        """Sets the replica_id of this DeployedReplica.


        :param replica_id: The replica_id of this DeployedReplica.
        :type replica_id: str
        """

        self._replica_id = replica_id

    @property
    def replica_role(self):
        """Gets the replica_role of this DeployedReplica.


        :return: The replica_role of this DeployedReplica.
        :rtype: ReplicaRole
        """
        return self._replica_role

    @replica_role.setter
    def replica_role(self, replica_role):
        """Sets the replica_role of this DeployedReplica.


        :param replica_role: The replica_role of this DeployedReplica.
        :type replica_role: ReplicaRole
        """

        self._replica_role = replica_role

    @property
    def replica_status(self):
        """Gets the replica_status of this DeployedReplica.


        :return: The replica_status of this DeployedReplica.
        :rtype: ReplicaStatus
        """
        return self._replica_status

    @replica_status.setter
    def replica_status(self, replica_status):
        """Sets the replica_status of this DeployedReplica.


        :param replica_status: The replica_status of this DeployedReplica.
        :type replica_status: ReplicaStatus
        """

        self._replica_status = replica_status

    @property
    def service_kind(self):
        """Gets the service_kind of this DeployedReplica.


        :return: The service_kind of this DeployedReplica.
        :rtype: ServiceKind
        """
        return self._service_kind

    @service_kind.setter
    def service_kind(self, service_kind):
        """Sets the service_kind of this DeployedReplica.


        :param service_kind: The service_kind of this DeployedReplica.
        :type service_kind: ServiceKind
        """

        self._service_kind = service_kind

    @property
    def service_manifest_name(self):
        """Gets the service_manifest_name of this DeployedReplica.


        :return: The service_manifest_name of this DeployedReplica.
        :rtype: str
        """
        return self._service_manifest_name

    @service_manifest_name.setter
    def service_manifest_name(self, service_manifest_name):
        """Sets the service_manifest_name of this DeployedReplica.


        :param service_manifest_name: The service_manifest_name of this DeployedReplica.
        :type service_manifest_name: str
        """

        self._service_manifest_name = service_manifest_name

    @property
    def service_manifest_version(self):
        """Gets the service_manifest_version of this DeployedReplica.


        :return: The service_manifest_version of this DeployedReplica.
        :rtype: str
        """
        return self._service_manifest_version

    @service_manifest_version.setter
    def service_manifest_version(self, service_manifest_version):
        """Sets the service_manifest_version of this DeployedReplica.


        :param service_manifest_version: The service_manifest_version of this DeployedReplica.
        :type service_manifest_version: str
        """

        self._service_manifest_version = service_manifest_version

    @property
    def service_name(self):
        """Gets the service_name of this DeployedReplica.


        :return: The service_name of this DeployedReplica.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this DeployedReplica.


        :param service_name: The service_name of this DeployedReplica.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def service_type_name(self):
        """Gets the service_type_name of this DeployedReplica.


        :return: The service_type_name of this DeployedReplica.
        :rtype: str
        """
        return self._service_type_name

    @service_type_name.setter
    def service_type_name(self, service_type_name):
        """Sets the service_type_name of this DeployedReplica.


        :param service_type_name: The service_type_name of this DeployedReplica.
        :type service_type_name: str
        """

        self._service_type_name = service_type_name
