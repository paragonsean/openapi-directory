# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_type_service_type_description import ServiceTypeServiceTypeDescription
from openapi_server import util


class ServiceType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_service_group: bool=None, service_manifest_name: str=None, service_manifest_version: str=None, service_type_description: ServiceTypeServiceTypeDescription=None):
        """ServiceType - a model defined in OpenAPI

        :param is_service_group: The is_service_group of this ServiceType.
        :param service_manifest_name: The service_manifest_name of this ServiceType.
        :param service_manifest_version: The service_manifest_version of this ServiceType.
        :param service_type_description: The service_type_description of this ServiceType.
        """
        self.openapi_types = {
            'is_service_group': bool,
            'service_manifest_name': str,
            'service_manifest_version': str,
            'service_type_description': ServiceTypeServiceTypeDescription
        }

        self.attribute_map = {
            'is_service_group': 'IsServiceGroup',
            'service_manifest_name': 'ServiceManifestName',
            'service_manifest_version': 'ServiceManifestVersion',
            'service_type_description': 'ServiceTypeDescription'
        }

        self._is_service_group = is_service_group
        self._service_manifest_name = service_manifest_name
        self._service_manifest_version = service_manifest_version
        self._service_type_description = service_type_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceType of this ServiceType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_service_group(self):
        """Gets the is_service_group of this ServiceType.


        :return: The is_service_group of this ServiceType.
        :rtype: bool
        """
        return self._is_service_group

    @is_service_group.setter
    def is_service_group(self, is_service_group):
        """Sets the is_service_group of this ServiceType.


        :param is_service_group: The is_service_group of this ServiceType.
        :type is_service_group: bool
        """

        self._is_service_group = is_service_group

    @property
    def service_manifest_name(self):
        """Gets the service_manifest_name of this ServiceType.


        :return: The service_manifest_name of this ServiceType.
        :rtype: str
        """
        return self._service_manifest_name

    @service_manifest_name.setter
    def service_manifest_name(self, service_manifest_name):
        """Sets the service_manifest_name of this ServiceType.


        :param service_manifest_name: The service_manifest_name of this ServiceType.
        :type service_manifest_name: str
        """

        self._service_manifest_name = service_manifest_name

    @property
    def service_manifest_version(self):
        """Gets the service_manifest_version of this ServiceType.


        :return: The service_manifest_version of this ServiceType.
        :rtype: str
        """
        return self._service_manifest_version

    @service_manifest_version.setter
    def service_manifest_version(self, service_manifest_version):
        """Sets the service_manifest_version of this ServiceType.


        :param service_manifest_version: The service_manifest_version of this ServiceType.
        :type service_manifest_version: str
        """

        self._service_manifest_version = service_manifest_version

    @property
    def service_type_description(self):
        """Gets the service_type_description of this ServiceType.


        :return: The service_type_description of this ServiceType.
        :rtype: ServiceTypeServiceTypeDescription
        """
        return self._service_type_description

    @service_type_description.setter
    def service_type_description(self, service_type_description):
        """Sets the service_type_description of this ServiceType.


        :param service_type_description: The service_type_description of this ServiceType.
        :type service_type_description: ServiceTypeServiceTypeDescription
        """

        self._service_type_description = service_type_description
