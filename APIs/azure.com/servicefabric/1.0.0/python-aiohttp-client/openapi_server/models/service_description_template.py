# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceDescriptionTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_name: str=None, service_type_name: str=None):
        """ServiceDescriptionTemplate - a model defined in OpenAPI

        :param service_name: The service_name of this ServiceDescriptionTemplate.
        :param service_type_name: The service_type_name of this ServiceDescriptionTemplate.
        """
        self.openapi_types = {
            'service_name': str,
            'service_type_name': str
        }

        self.attribute_map = {
            'service_name': 'ServiceName',
            'service_type_name': 'ServiceTypeName'
        }

        self._service_name = service_name
        self._service_type_name = service_type_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceDescriptionTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceDescriptionTemplate of this ServiceDescriptionTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_name(self):
        """Gets the service_name of this ServiceDescriptionTemplate.


        :return: The service_name of this ServiceDescriptionTemplate.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ServiceDescriptionTemplate.


        :param service_name: The service_name of this ServiceDescriptionTemplate.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def service_type_name(self):
        """Gets the service_type_name of this ServiceDescriptionTemplate.


        :return: The service_type_name of this ServiceDescriptionTemplate.
        :rtype: str
        """
        return self._service_type_name

    @service_type_name.setter
    def service_type_name(self, service_type_name):
        """Sets the service_type_name of this ServiceDescriptionTemplate.


        :param service_type_name: The service_type_name of this ServiceDescriptionTemplate.
        :type service_type_name: str
        """

        self._service_type_name = service_type_name
