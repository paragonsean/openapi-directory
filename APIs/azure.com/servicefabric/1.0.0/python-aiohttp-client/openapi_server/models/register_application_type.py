# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RegisterApplicationType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_type_build_path: str=None):
        """RegisterApplicationType - a model defined in OpenAPI

        :param application_type_build_path: The application_type_build_path of this RegisterApplicationType.
        """
        self.openapi_types = {
            'application_type_build_path': str
        }

        self.attribute_map = {
            'application_type_build_path': 'ApplicationTypeBuildPath'
        }

        self._application_type_build_path = application_type_build_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegisterApplicationType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegisterApplicationType of this RegisterApplicationType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_type_build_path(self):
        """Gets the application_type_build_path of this RegisterApplicationType.


        :return: The application_type_build_path of this RegisterApplicationType.
        :rtype: str
        """
        return self._application_type_build_path

    @application_type_build_path.setter
    def application_type_build_path(self, application_type_build_path):
        """Sets the application_type_build_path of this RegisterApplicationType.


        :param application_type_build_path: The application_type_build_path of this RegisterApplicationType.
        :type application_type_build_path: str
        """

        self._application_type_build_path = application_type_build_path
