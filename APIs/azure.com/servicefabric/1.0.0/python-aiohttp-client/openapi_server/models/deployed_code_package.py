# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entry_point import EntryPoint
from openapi_server import util


class DeployedCodePackage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, has_setup_entry_point: bool=None, main_entry_point: EntryPoint=None, name: str=None, run_frequency_interval: str=None, service_manifest_name: str=None, setup_entry_point: EntryPoint=None, status: str=None, version: str=None):
        """DeployedCodePackage - a model defined in OpenAPI

        :param has_setup_entry_point: The has_setup_entry_point of this DeployedCodePackage.
        :param main_entry_point: The main_entry_point of this DeployedCodePackage.
        :param name: The name of this DeployedCodePackage.
        :param run_frequency_interval: The run_frequency_interval of this DeployedCodePackage.
        :param service_manifest_name: The service_manifest_name of this DeployedCodePackage.
        :param setup_entry_point: The setup_entry_point of this DeployedCodePackage.
        :param status: The status of this DeployedCodePackage.
        :param version: The version of this DeployedCodePackage.
        """
        self.openapi_types = {
            'has_setup_entry_point': bool,
            'main_entry_point': EntryPoint,
            'name': str,
            'run_frequency_interval': str,
            'service_manifest_name': str,
            'setup_entry_point': EntryPoint,
            'status': str,
            'version': str
        }

        self.attribute_map = {
            'has_setup_entry_point': 'HasSetupEntryPoint',
            'main_entry_point': 'MainEntryPoint',
            'name': 'Name',
            'run_frequency_interval': 'RunFrequencyInterval',
            'service_manifest_name': 'ServiceManifestName',
            'setup_entry_point': 'SetupEntryPoint',
            'status': 'Status',
            'version': 'Version'
        }

        self._has_setup_entry_point = has_setup_entry_point
        self._main_entry_point = main_entry_point
        self._name = name
        self._run_frequency_interval = run_frequency_interval
        self._service_manifest_name = service_manifest_name
        self._setup_entry_point = setup_entry_point
        self._status = status
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeployedCodePackage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeployedCodePackage of this DeployedCodePackage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_setup_entry_point(self):
        """Gets the has_setup_entry_point of this DeployedCodePackage.


        :return: The has_setup_entry_point of this DeployedCodePackage.
        :rtype: bool
        """
        return self._has_setup_entry_point

    @has_setup_entry_point.setter
    def has_setup_entry_point(self, has_setup_entry_point):
        """Sets the has_setup_entry_point of this DeployedCodePackage.


        :param has_setup_entry_point: The has_setup_entry_point of this DeployedCodePackage.
        :type has_setup_entry_point: bool
        """

        self._has_setup_entry_point = has_setup_entry_point

    @property
    def main_entry_point(self):
        """Gets the main_entry_point of this DeployedCodePackage.


        :return: The main_entry_point of this DeployedCodePackage.
        :rtype: EntryPoint
        """
        return self._main_entry_point

    @main_entry_point.setter
    def main_entry_point(self, main_entry_point):
        """Sets the main_entry_point of this DeployedCodePackage.


        :param main_entry_point: The main_entry_point of this DeployedCodePackage.
        :type main_entry_point: EntryPoint
        """

        self._main_entry_point = main_entry_point

    @property
    def name(self):
        """Gets the name of this DeployedCodePackage.


        :return: The name of this DeployedCodePackage.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeployedCodePackage.


        :param name: The name of this DeployedCodePackage.
        :type name: str
        """

        self._name = name

    @property
    def run_frequency_interval(self):
        """Gets the run_frequency_interval of this DeployedCodePackage.


        :return: The run_frequency_interval of this DeployedCodePackage.
        :rtype: str
        """
        return self._run_frequency_interval

    @run_frequency_interval.setter
    def run_frequency_interval(self, run_frequency_interval):
        """Sets the run_frequency_interval of this DeployedCodePackage.


        :param run_frequency_interval: The run_frequency_interval of this DeployedCodePackage.
        :type run_frequency_interval: str
        """

        self._run_frequency_interval = run_frequency_interval

    @property
    def service_manifest_name(self):
        """Gets the service_manifest_name of this DeployedCodePackage.


        :return: The service_manifest_name of this DeployedCodePackage.
        :rtype: str
        """
        return self._service_manifest_name

    @service_manifest_name.setter
    def service_manifest_name(self, service_manifest_name):
        """Sets the service_manifest_name of this DeployedCodePackage.


        :param service_manifest_name: The service_manifest_name of this DeployedCodePackage.
        :type service_manifest_name: str
        """

        self._service_manifest_name = service_manifest_name

    @property
    def setup_entry_point(self):
        """Gets the setup_entry_point of this DeployedCodePackage.


        :return: The setup_entry_point of this DeployedCodePackage.
        :rtype: EntryPoint
        """
        return self._setup_entry_point

    @setup_entry_point.setter
    def setup_entry_point(self, setup_entry_point):
        """Sets the setup_entry_point of this DeployedCodePackage.


        :param setup_entry_point: The setup_entry_point of this DeployedCodePackage.
        :type setup_entry_point: EntryPoint
        """

        self._setup_entry_point = setup_entry_point

    @property
    def status(self):
        """Gets the status of this DeployedCodePackage.


        :return: The status of this DeployedCodePackage.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeployedCodePackage.


        :param status: The status of this DeployedCodePackage.
        :type status: str
        """

        self._status = status

    @property
    def version(self):
        """Gets the version of this DeployedCodePackage.


        :return: The version of this DeployedCodePackage.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this DeployedCodePackage.


        :param version: The version of this DeployedCodePackage.
        :type version: str
        """

        self._version = version
