# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeployedServiceType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code_package_name: str=None, service_manifest_name: str=None, service_type_name: str=None, status: str=None):
        """DeployedServiceType - a model defined in OpenAPI

        :param code_package_name: The code_package_name of this DeployedServiceType.
        :param service_manifest_name: The service_manifest_name of this DeployedServiceType.
        :param service_type_name: The service_type_name of this DeployedServiceType.
        :param status: The status of this DeployedServiceType.
        """
        self.openapi_types = {
            'code_package_name': str,
            'service_manifest_name': str,
            'service_type_name': str,
            'status': str
        }

        self.attribute_map = {
            'code_package_name': 'CodePackageName',
            'service_manifest_name': 'ServiceManifestName',
            'service_type_name': 'ServiceTypeName',
            'status': 'Status'
        }

        self._code_package_name = code_package_name
        self._service_manifest_name = service_manifest_name
        self._service_type_name = service_type_name
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeployedServiceType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeployedServiceType of this DeployedServiceType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_package_name(self):
        """Gets the code_package_name of this DeployedServiceType.


        :return: The code_package_name of this DeployedServiceType.
        :rtype: str
        """
        return self._code_package_name

    @code_package_name.setter
    def code_package_name(self, code_package_name):
        """Sets the code_package_name of this DeployedServiceType.


        :param code_package_name: The code_package_name of this DeployedServiceType.
        :type code_package_name: str
        """

        self._code_package_name = code_package_name

    @property
    def service_manifest_name(self):
        """Gets the service_manifest_name of this DeployedServiceType.


        :return: The service_manifest_name of this DeployedServiceType.
        :rtype: str
        """
        return self._service_manifest_name

    @service_manifest_name.setter
    def service_manifest_name(self, service_manifest_name):
        """Sets the service_manifest_name of this DeployedServiceType.


        :param service_manifest_name: The service_manifest_name of this DeployedServiceType.
        :type service_manifest_name: str
        """

        self._service_manifest_name = service_manifest_name

    @property
    def service_type_name(self):
        """Gets the service_type_name of this DeployedServiceType.


        :return: The service_type_name of this DeployedServiceType.
        :rtype: str
        """
        return self._service_type_name

    @service_type_name.setter
    def service_type_name(self, service_type_name):
        """Sets the service_type_name of this DeployedServiceType.


        :param service_type_name: The service_type_name of this DeployedServiceType.
        :type service_type_name: str
        """

        self._service_type_name = service_type_name

    @property
    def status(self):
        """Gets the status of this DeployedServiceType.


        :return: The status of this DeployedServiceType.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeployedServiceType.


        :param status: The status of this DeployedServiceType.
        :type status: str
        """

        self._status = status
