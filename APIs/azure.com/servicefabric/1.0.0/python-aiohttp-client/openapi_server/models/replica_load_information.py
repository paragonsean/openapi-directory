# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReplicaLoadInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, partition_id: str=None, replica_or_instance_id: str=None, reported_load: List[str]=None):
        """ReplicaLoadInformation - a model defined in OpenAPI

        :param partition_id: The partition_id of this ReplicaLoadInformation.
        :param replica_or_instance_id: The replica_or_instance_id of this ReplicaLoadInformation.
        :param reported_load: The reported_load of this ReplicaLoadInformation.
        """
        self.openapi_types = {
            'partition_id': str,
            'replica_or_instance_id': str,
            'reported_load': List[str]
        }

        self.attribute_map = {
            'partition_id': 'PartitionId',
            'replica_or_instance_id': 'ReplicaOrInstanceId',
            'reported_load': 'ReportedLoad'
        }

        self._partition_id = partition_id
        self._replica_or_instance_id = replica_or_instance_id
        self._reported_load = reported_load

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplicaLoadInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplicaLoadInformation of this ReplicaLoadInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def partition_id(self):
        """Gets the partition_id of this ReplicaLoadInformation.


        :return: The partition_id of this ReplicaLoadInformation.
        :rtype: str
        """
        return self._partition_id

    @partition_id.setter
    def partition_id(self, partition_id):
        """Sets the partition_id of this ReplicaLoadInformation.


        :param partition_id: The partition_id of this ReplicaLoadInformation.
        :type partition_id: str
        """

        self._partition_id = partition_id

    @property
    def replica_or_instance_id(self):
        """Gets the replica_or_instance_id of this ReplicaLoadInformation.


        :return: The replica_or_instance_id of this ReplicaLoadInformation.
        :rtype: str
        """
        return self._replica_or_instance_id

    @replica_or_instance_id.setter
    def replica_or_instance_id(self, replica_or_instance_id):
        """Sets the replica_or_instance_id of this ReplicaLoadInformation.


        :param replica_or_instance_id: The replica_or_instance_id of this ReplicaLoadInformation.
        :type replica_or_instance_id: str
        """

        self._replica_or_instance_id = replica_or_instance_id

    @property
    def reported_load(self):
        """Gets the reported_load of this ReplicaLoadInformation.


        :return: The reported_load of this ReplicaLoadInformation.
        :rtype: List[str]
        """
        return self._reported_load

    @reported_load.setter
    def reported_load(self, reported_load):
        """Sets the reported_load of this ReplicaLoadInformation.


        :param reported_load: The reported_load of this ReplicaLoadInformation.
        :type reported_load: List[str]
        """

        self._reported_load = reported_load
