# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_kind import ServiceKind
from openapi_server.models.update_service_group_description import UpdateServiceGroupDescription
from openapi_server import util


class StatelessUpdateServiceGroupDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_count: int=None, flags: int=None, service_kind: ServiceKind=None):
        """StatelessUpdateServiceGroupDescription - a model defined in OpenAPI

        :param instance_count: The instance_count of this StatelessUpdateServiceGroupDescription.
        :param flags: The flags of this StatelessUpdateServiceGroupDescription.
        :param service_kind: The service_kind of this StatelessUpdateServiceGroupDescription.
        """
        self.openapi_types = {
            'instance_count': int,
            'flags': int,
            'service_kind': ServiceKind
        }

        self.attribute_map = {
            'instance_count': 'InstanceCount',
            'flags': 'Flags',
            'service_kind': 'ServiceKind'
        }

        self._instance_count = instance_count
        self._flags = flags
        self._service_kind = service_kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatelessUpdateServiceGroupDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StatelessUpdateServiceGroupDescription of this StatelessUpdateServiceGroupDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_count(self):
        """Gets the instance_count of this StatelessUpdateServiceGroupDescription.


        :return: The instance_count of this StatelessUpdateServiceGroupDescription.
        :rtype: int
        """
        return self._instance_count

    @instance_count.setter
    def instance_count(self, instance_count):
        """Sets the instance_count of this StatelessUpdateServiceGroupDescription.


        :param instance_count: The instance_count of this StatelessUpdateServiceGroupDescription.
        :type instance_count: int
        """

        self._instance_count = instance_count

    @property
    def flags(self):
        """Gets the flags of this StatelessUpdateServiceGroupDescription.


        :return: The flags of this StatelessUpdateServiceGroupDescription.
        :rtype: int
        """
        return self._flags

    @flags.setter
    def flags(self, flags):
        """Sets the flags of this StatelessUpdateServiceGroupDescription.


        :param flags: The flags of this StatelessUpdateServiceGroupDescription.
        :type flags: int
        """

        self._flags = flags

    @property
    def service_kind(self):
        """Gets the service_kind of this StatelessUpdateServiceGroupDescription.


        :return: The service_kind of this StatelessUpdateServiceGroupDescription.
        :rtype: ServiceKind
        """
        return self._service_kind

    @service_kind.setter
    def service_kind(self, service_kind):
        """Sets the service_kind of this StatelessUpdateServiceGroupDescription.


        :param service_kind: The service_kind of this StatelessUpdateServiceGroupDescription.
        :type service_kind: ServiceKind
        """
        if service_kind is None:
            raise ValueError("Invalid value for `service_kind`, must not be `None`")

        self._service_kind = service_kind
