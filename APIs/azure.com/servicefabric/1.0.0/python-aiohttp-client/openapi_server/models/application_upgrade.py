# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_upgrade_current_upgrade_domain_progress import ApplicationUpgradeCurrentUpgradeDomainProgress
from openapi_server.models.application_upgrade_deployed_application_health_states import ApplicationUpgradeDeployedApplicationHealthStates
from openapi_server.models.failure_reason import FailureReason
from openapi_server.models.rolling_upgrade_mode import RollingUpgradeMode
from openapi_server.models.upgrade_state import UpgradeState
from openapi_server import util


class ApplicationUpgrade(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_upgrade_domain_progress: ApplicationUpgradeCurrentUpgradeDomainProgress=None, deployed_application_health_states: ApplicationUpgradeDeployedApplicationHealthStates=None, failure_reason: FailureReason=None, failure_timestamp_utc: str=None, name: str=None, next_upgrade_domain: str=None, rolling_upgrade_mode: RollingUpgradeMode=None, start_timestamp_utc: str=None, target_application_type_version: str=None, type_name: str=None, unhealthy_evaluations: str=None, upgrade_domain_duration_in_milliseconds: str=None, upgrade_domains: str=None, upgrade_duration_in_milliseconds: str=None, upgrade_state: UpgradeState=None):
        """ApplicationUpgrade - a model defined in OpenAPI

        :param current_upgrade_domain_progress: The current_upgrade_domain_progress of this ApplicationUpgrade.
        :param deployed_application_health_states: The deployed_application_health_states of this ApplicationUpgrade.
        :param failure_reason: The failure_reason of this ApplicationUpgrade.
        :param failure_timestamp_utc: The failure_timestamp_utc of this ApplicationUpgrade.
        :param name: The name of this ApplicationUpgrade.
        :param next_upgrade_domain: The next_upgrade_domain of this ApplicationUpgrade.
        :param rolling_upgrade_mode: The rolling_upgrade_mode of this ApplicationUpgrade.
        :param start_timestamp_utc: The start_timestamp_utc of this ApplicationUpgrade.
        :param target_application_type_version: The target_application_type_version of this ApplicationUpgrade.
        :param type_name: The type_name of this ApplicationUpgrade.
        :param unhealthy_evaluations: The unhealthy_evaluations of this ApplicationUpgrade.
        :param upgrade_domain_duration_in_milliseconds: The upgrade_domain_duration_in_milliseconds of this ApplicationUpgrade.
        :param upgrade_domains: The upgrade_domains of this ApplicationUpgrade.
        :param upgrade_duration_in_milliseconds: The upgrade_duration_in_milliseconds of this ApplicationUpgrade.
        :param upgrade_state: The upgrade_state of this ApplicationUpgrade.
        """
        self.openapi_types = {
            'current_upgrade_domain_progress': ApplicationUpgradeCurrentUpgradeDomainProgress,
            'deployed_application_health_states': ApplicationUpgradeDeployedApplicationHealthStates,
            'failure_reason': FailureReason,
            'failure_timestamp_utc': str,
            'name': str,
            'next_upgrade_domain': str,
            'rolling_upgrade_mode': RollingUpgradeMode,
            'start_timestamp_utc': str,
            'target_application_type_version': str,
            'type_name': str,
            'unhealthy_evaluations': str,
            'upgrade_domain_duration_in_milliseconds': str,
            'upgrade_domains': str,
            'upgrade_duration_in_milliseconds': str,
            'upgrade_state': UpgradeState
        }

        self.attribute_map = {
            'current_upgrade_domain_progress': 'CurrentUpgradeDomainProgress',
            'deployed_application_health_states': 'DeployedApplicationHealthStates',
            'failure_reason': 'FailureReason',
            'failure_timestamp_utc': 'FailureTimestampUtc',
            'name': 'Name',
            'next_upgrade_domain': 'NextUpgradeDomain',
            'rolling_upgrade_mode': 'RollingUpgradeMode',
            'start_timestamp_utc': 'StartTimestampUtc',
            'target_application_type_version': 'TargetApplicationTypeVersion',
            'type_name': 'TypeName',
            'unhealthy_evaluations': 'UnhealthyEvaluations',
            'upgrade_domain_duration_in_milliseconds': 'UpgradeDomainDurationInMilliseconds',
            'upgrade_domains': 'UpgradeDomains',
            'upgrade_duration_in_milliseconds': 'UpgradeDurationInMilliseconds',
            'upgrade_state': 'UpgradeState'
        }

        self._current_upgrade_domain_progress = current_upgrade_domain_progress
        self._deployed_application_health_states = deployed_application_health_states
        self._failure_reason = failure_reason
        self._failure_timestamp_utc = failure_timestamp_utc
        self._name = name
        self._next_upgrade_domain = next_upgrade_domain
        self._rolling_upgrade_mode = rolling_upgrade_mode
        self._start_timestamp_utc = start_timestamp_utc
        self._target_application_type_version = target_application_type_version
        self._type_name = type_name
        self._unhealthy_evaluations = unhealthy_evaluations
        self._upgrade_domain_duration_in_milliseconds = upgrade_domain_duration_in_milliseconds
        self._upgrade_domains = upgrade_domains
        self._upgrade_duration_in_milliseconds = upgrade_duration_in_milliseconds
        self._upgrade_state = upgrade_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationUpgrade':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationUpgrade of this ApplicationUpgrade.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_upgrade_domain_progress(self):
        """Gets the current_upgrade_domain_progress of this ApplicationUpgrade.


        :return: The current_upgrade_domain_progress of this ApplicationUpgrade.
        :rtype: ApplicationUpgradeCurrentUpgradeDomainProgress
        """
        return self._current_upgrade_domain_progress

    @current_upgrade_domain_progress.setter
    def current_upgrade_domain_progress(self, current_upgrade_domain_progress):
        """Sets the current_upgrade_domain_progress of this ApplicationUpgrade.


        :param current_upgrade_domain_progress: The current_upgrade_domain_progress of this ApplicationUpgrade.
        :type current_upgrade_domain_progress: ApplicationUpgradeCurrentUpgradeDomainProgress
        """

        self._current_upgrade_domain_progress = current_upgrade_domain_progress

    @property
    def deployed_application_health_states(self):
        """Gets the deployed_application_health_states of this ApplicationUpgrade.


        :return: The deployed_application_health_states of this ApplicationUpgrade.
        :rtype: ApplicationUpgradeDeployedApplicationHealthStates
        """
        return self._deployed_application_health_states

    @deployed_application_health_states.setter
    def deployed_application_health_states(self, deployed_application_health_states):
        """Sets the deployed_application_health_states of this ApplicationUpgrade.


        :param deployed_application_health_states: The deployed_application_health_states of this ApplicationUpgrade.
        :type deployed_application_health_states: ApplicationUpgradeDeployedApplicationHealthStates
        """

        self._deployed_application_health_states = deployed_application_health_states

    @property
    def failure_reason(self):
        """Gets the failure_reason of this ApplicationUpgrade.


        :return: The failure_reason of this ApplicationUpgrade.
        :rtype: FailureReason
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this ApplicationUpgrade.


        :param failure_reason: The failure_reason of this ApplicationUpgrade.
        :type failure_reason: FailureReason
        """

        self._failure_reason = failure_reason

    @property
    def failure_timestamp_utc(self):
        """Gets the failure_timestamp_utc of this ApplicationUpgrade.


        :return: The failure_timestamp_utc of this ApplicationUpgrade.
        :rtype: str
        """
        return self._failure_timestamp_utc

    @failure_timestamp_utc.setter
    def failure_timestamp_utc(self, failure_timestamp_utc):
        """Sets the failure_timestamp_utc of this ApplicationUpgrade.


        :param failure_timestamp_utc: The failure_timestamp_utc of this ApplicationUpgrade.
        :type failure_timestamp_utc: str
        """

        self._failure_timestamp_utc = failure_timestamp_utc

    @property
    def name(self):
        """Gets the name of this ApplicationUpgrade.


        :return: The name of this ApplicationUpgrade.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApplicationUpgrade.


        :param name: The name of this ApplicationUpgrade.
        :type name: str
        """

        self._name = name

    @property
    def next_upgrade_domain(self):
        """Gets the next_upgrade_domain of this ApplicationUpgrade.


        :return: The next_upgrade_domain of this ApplicationUpgrade.
        :rtype: str
        """
        return self._next_upgrade_domain

    @next_upgrade_domain.setter
    def next_upgrade_domain(self, next_upgrade_domain):
        """Sets the next_upgrade_domain of this ApplicationUpgrade.


        :param next_upgrade_domain: The next_upgrade_domain of this ApplicationUpgrade.
        :type next_upgrade_domain: str
        """

        self._next_upgrade_domain = next_upgrade_domain

    @property
    def rolling_upgrade_mode(self):
        """Gets the rolling_upgrade_mode of this ApplicationUpgrade.


        :return: The rolling_upgrade_mode of this ApplicationUpgrade.
        :rtype: RollingUpgradeMode
        """
        return self._rolling_upgrade_mode

    @rolling_upgrade_mode.setter
    def rolling_upgrade_mode(self, rolling_upgrade_mode):
        """Sets the rolling_upgrade_mode of this ApplicationUpgrade.


        :param rolling_upgrade_mode: The rolling_upgrade_mode of this ApplicationUpgrade.
        :type rolling_upgrade_mode: RollingUpgradeMode
        """

        self._rolling_upgrade_mode = rolling_upgrade_mode

    @property
    def start_timestamp_utc(self):
        """Gets the start_timestamp_utc of this ApplicationUpgrade.


        :return: The start_timestamp_utc of this ApplicationUpgrade.
        :rtype: str
        """
        return self._start_timestamp_utc

    @start_timestamp_utc.setter
    def start_timestamp_utc(self, start_timestamp_utc):
        """Sets the start_timestamp_utc of this ApplicationUpgrade.


        :param start_timestamp_utc: The start_timestamp_utc of this ApplicationUpgrade.
        :type start_timestamp_utc: str
        """

        self._start_timestamp_utc = start_timestamp_utc

    @property
    def target_application_type_version(self):
        """Gets the target_application_type_version of this ApplicationUpgrade.


        :return: The target_application_type_version of this ApplicationUpgrade.
        :rtype: str
        """
        return self._target_application_type_version

    @target_application_type_version.setter
    def target_application_type_version(self, target_application_type_version):
        """Sets the target_application_type_version of this ApplicationUpgrade.


        :param target_application_type_version: The target_application_type_version of this ApplicationUpgrade.
        :type target_application_type_version: str
        """

        self._target_application_type_version = target_application_type_version

    @property
    def type_name(self):
        """Gets the type_name of this ApplicationUpgrade.


        :return: The type_name of this ApplicationUpgrade.
        :rtype: str
        """
        return self._type_name

    @type_name.setter
    def type_name(self, type_name):
        """Sets the type_name of this ApplicationUpgrade.


        :param type_name: The type_name of this ApplicationUpgrade.
        :type type_name: str
        """

        self._type_name = type_name

    @property
    def unhealthy_evaluations(self):
        """Gets the unhealthy_evaluations of this ApplicationUpgrade.


        :return: The unhealthy_evaluations of this ApplicationUpgrade.
        :rtype: str
        """
        return self._unhealthy_evaluations

    @unhealthy_evaluations.setter
    def unhealthy_evaluations(self, unhealthy_evaluations):
        """Sets the unhealthy_evaluations of this ApplicationUpgrade.


        :param unhealthy_evaluations: The unhealthy_evaluations of this ApplicationUpgrade.
        :type unhealthy_evaluations: str
        """

        self._unhealthy_evaluations = unhealthy_evaluations

    @property
    def upgrade_domain_duration_in_milliseconds(self):
        """Gets the upgrade_domain_duration_in_milliseconds of this ApplicationUpgrade.


        :return: The upgrade_domain_duration_in_milliseconds of this ApplicationUpgrade.
        :rtype: str
        """
        return self._upgrade_domain_duration_in_milliseconds

    @upgrade_domain_duration_in_milliseconds.setter
    def upgrade_domain_duration_in_milliseconds(self, upgrade_domain_duration_in_milliseconds):
        """Sets the upgrade_domain_duration_in_milliseconds of this ApplicationUpgrade.


        :param upgrade_domain_duration_in_milliseconds: The upgrade_domain_duration_in_milliseconds of this ApplicationUpgrade.
        :type upgrade_domain_duration_in_milliseconds: str
        """

        self._upgrade_domain_duration_in_milliseconds = upgrade_domain_duration_in_milliseconds

    @property
    def upgrade_domains(self):
        """Gets the upgrade_domains of this ApplicationUpgrade.


        :return: The upgrade_domains of this ApplicationUpgrade.
        :rtype: str
        """
        return self._upgrade_domains

    @upgrade_domains.setter
    def upgrade_domains(self, upgrade_domains):
        """Sets the upgrade_domains of this ApplicationUpgrade.


        :param upgrade_domains: The upgrade_domains of this ApplicationUpgrade.
        :type upgrade_domains: str
        """

        self._upgrade_domains = upgrade_domains

    @property
    def upgrade_duration_in_milliseconds(self):
        """Gets the upgrade_duration_in_milliseconds of this ApplicationUpgrade.


        :return: The upgrade_duration_in_milliseconds of this ApplicationUpgrade.
        :rtype: str
        """
        return self._upgrade_duration_in_milliseconds

    @upgrade_duration_in_milliseconds.setter
    def upgrade_duration_in_milliseconds(self, upgrade_duration_in_milliseconds):
        """Sets the upgrade_duration_in_milliseconds of this ApplicationUpgrade.


        :param upgrade_duration_in_milliseconds: The upgrade_duration_in_milliseconds of this ApplicationUpgrade.
        :type upgrade_duration_in_milliseconds: str
        """

        self._upgrade_duration_in_milliseconds = upgrade_duration_in_milliseconds

    @property
    def upgrade_state(self):
        """Gets the upgrade_state of this ApplicationUpgrade.


        :return: The upgrade_state of this ApplicationUpgrade.
        :rtype: UpgradeState
        """
        return self._upgrade_state

    @upgrade_state.setter
    def upgrade_state(self, upgrade_state):
        """Sets the upgrade_state of this ApplicationUpgrade.


        :param upgrade_state: The upgrade_state of this ApplicationUpgrade.
        :type upgrade_state: UpgradeState
        """

        self._upgrade_state = upgrade_state
