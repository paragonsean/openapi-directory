# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.replica import Replica
from openapi_server import util


class ReplicaList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, continuation_token: str=None, items: List[Replica]=None):
        """ReplicaList - a model defined in OpenAPI

        :param continuation_token: The continuation_token of this ReplicaList.
        :param items: The items of this ReplicaList.
        """
        self.openapi_types = {
            'continuation_token': str,
            'items': List[Replica]
        }

        self.attribute_map = {
            'continuation_token': 'ContinuationToken',
            'items': 'Items'
        }

        self._continuation_token = continuation_token
        self._items = items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplicaList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplicaList of this ReplicaList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def continuation_token(self):
        """Gets the continuation_token of this ReplicaList.


        :return: The continuation_token of this ReplicaList.
        :rtype: str
        """
        return self._continuation_token

    @continuation_token.setter
    def continuation_token(self, continuation_token):
        """Sets the continuation_token of this ReplicaList.


        :param continuation_token: The continuation_token of this ReplicaList.
        :type continuation_token: str
        """

        self._continuation_token = continuation_token

    @property
    def items(self):
        """Gets the items of this ReplicaList.


        :return: The items of this ReplicaList.
        :rtype: List[Replica]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this ReplicaList.


        :param items: The items of this ReplicaList.
        :type items: List[Replica]
        """

        self._items = items
