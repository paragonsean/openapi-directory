# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UnregisterClusterPackage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code_version: str=None, config_version: str=None):
        """UnregisterClusterPackage - a model defined in OpenAPI

        :param code_version: The code_version of this UnregisterClusterPackage.
        :param config_version: The config_version of this UnregisterClusterPackage.
        """
        self.openapi_types = {
            'code_version': str,
            'config_version': str
        }

        self.attribute_map = {
            'code_version': 'CodeVersion',
            'config_version': 'ConfigVersion'
        }

        self._code_version = code_version
        self._config_version = config_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnregisterClusterPackage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnregisterClusterPackage of this UnregisterClusterPackage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_version(self):
        """Gets the code_version of this UnregisterClusterPackage.

        The version of the code

        :return: The code_version of this UnregisterClusterPackage.
        :rtype: str
        """
        return self._code_version

    @code_version.setter
    def code_version(self, code_version):
        """Sets the code_version of this UnregisterClusterPackage.

        The version of the code

        :param code_version: The code_version of this UnregisterClusterPackage.
        :type code_version: str
        """

        self._code_version = code_version

    @property
    def config_version(self):
        """Gets the config_version of this UnregisterClusterPackage.

        The version of the config

        :return: The config_version of this UnregisterClusterPackage.
        :rtype: str
        """
        return self._config_version

    @config_version.setter
    def config_version(self, config_version):
        """Sets the config_version of this UnregisterClusterPackage.

        The version of the config

        :param config_version: The config_version of this UnregisterClusterPackage.
        :type config_version: str
        """

        self._config_version = config_version
