/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Application from './model/Application';
import ApplicationDescription from './model/ApplicationDescription';
import ApplicationDescriptionParameterListInner from './model/ApplicationDescriptionParameterListInner';
import ApplicationHealth from './model/ApplicationHealth';
import ApplicationHealthDeployedApplicationHealthStatesInner from './model/ApplicationHealthDeployedApplicationHealthStatesInner';
import ApplicationHealthEvaluation from './model/ApplicationHealthEvaluation';
import ApplicationHealthPolicy from './model/ApplicationHealthPolicy';
import ApplicationHealthPolicyDefaultServiceTypeHealthPolicy from './model/ApplicationHealthPolicyDefaultServiceTypeHealthPolicy';
import ApplicationHealthPolicyMap from './model/ApplicationHealthPolicyMap';
import ApplicationHealthReport from './model/ApplicationHealthReport';
import ApplicationHealthServiceHealthStatesInner from './model/ApplicationHealthServiceHealthStatesInner';
import ApplicationList from './model/ApplicationList';
import ApplicationManifest from './model/ApplicationManifest';
import ApplicationParametersInner from './model/ApplicationParametersInner';
import ApplicationType from './model/ApplicationType';
import ApplicationTypeDefaultParameterListInner from './model/ApplicationTypeDefaultParameterListInner';
import ApplicationTypeHealthEvaluation from './model/ApplicationTypeHealthEvaluation';
import ApplicationUpgrade from './model/ApplicationUpgrade';
import ApplicationUpgradeCurrentUpgradeDomainProgress from './model/ApplicationUpgradeCurrentUpgradeDomainProgress';
import ApplicationUpgradeDeployedApplicationHealthStates from './model/ApplicationUpgradeDeployedApplicationHealthStates';
import ApplicationsHealthEvaluation from './model/ApplicationsHealthEvaluation';
import ClusterHealth from './model/ClusterHealth';
import ClusterHealthApplicationHealthStateInner from './model/ClusterHealthApplicationHealthStateInner';
import ClusterHealthNodeHealthStatesInner from './model/ClusterHealthNodeHealthStatesInner';
import ClusterHealthNodeHealthStatesInnerId from './model/ClusterHealthNodeHealthStatesInnerId';
import ClusterHealthPolicy from './model/ClusterHealthPolicy';
import ClusterHealthReport from './model/ClusterHealthReport';
import ClusterLoadInformation from './model/ClusterLoadInformation';
import ClusterUpgradeHealthPolicy from './model/ClusterUpgradeHealthPolicy';
import ClusterUpgradeProgress from './model/ClusterUpgradeProgress';
import ClusterUpgradeProgressUpgradeDomainProgressAtFailure from './model/ClusterUpgradeProgressUpgradeDomainProgressAtFailure';
import CodePackageEntryPointStatistics from './model/CodePackageEntryPointStatistics';
import CreateServiceDescription from './model/CreateServiceDescription';
import CreateServiceGroupDescription from './model/CreateServiceGroupDescription';
import DefaultMoveCost from './model/DefaultMoveCost';
import DeltaNodesCheckHealthEvaluation from './model/DeltaNodesCheckHealthEvaluation';
import DeployedApplication from './model/DeployedApplication';
import DeployedApplicationHealth from './model/DeployedApplicationHealth';
import DeployedApplicationHealthEvaluation from './model/DeployedApplicationHealthEvaluation';
import DeployedApplicationHealthReport from './model/DeployedApplicationHealthReport';
import DeployedApplicationsHealthEvaluation from './model/DeployedApplicationsHealthEvaluation';
import DeployedCodePackage from './model/DeployedCodePackage';
import DeployedReplica from './model/DeployedReplica';
import DeployedReplicaDetail from './model/DeployedReplicaDetail';
import DeployedReplicaDetailReplicatorStatus from './model/DeployedReplicaDetailReplicatorStatus';
import DeployedReplicaDetailReplicatorStatusReplicationQueueStatus from './model/DeployedReplicaDetailReplicatorStatusReplicationQueueStatus';
import DeployedServiceHealthReport from './model/DeployedServiceHealthReport';
import DeployedServicePackage from './model/DeployedServicePackage';
import DeployedServicePackageHealth from './model/DeployedServicePackageHealth';
import DeployedServicePackageHealthEvaluation from './model/DeployedServicePackageHealthEvaluation';
import DeployedServicePackageHealthState from './model/DeployedServicePackageHealthState';
import DeployedServicePackagesHealthEvaluation from './model/DeployedServicePackagesHealthEvaluation';
import DeployedServiceType from './model/DeployedServiceType';
import DisableNode from './model/DisableNode';
import EntryPoint from './model/EntryPoint';
import ErrorModel from './model/ErrorModel';
import ErrorModelError from './model/ErrorModelError';
import EventHealthEvaluation from './model/EventHealthEvaluation';
import FailureAction from './model/FailureAction';
import FailureReason from './model/FailureReason';
import HealthEvaluation from './model/HealthEvaluation';
import HealthEvent from './model/HealthEvent';
import HealthReport from './model/HealthReport';
import HealthState from './model/HealthState';
import LoadMetricInformation from './model/LoadMetricInformation';
import LoadMetricInformationMaxNodeLoadId from './model/LoadMetricInformationMaxNodeLoadId';
import LoadMetricInformationMinNodeLoadId from './model/LoadMetricInformationMinNodeLoadId';
import MonitoringPolicy from './model/MonitoringPolicy';
import Node from './model/Node';
import NodeHealth from './model/NodeHealth';
import NodeHealthEvaluation from './model/NodeHealthEvaluation';
import NodeHealthReport from './model/NodeHealthReport';
import NodeList from './model/NodeList';
import NodeLoadInformation from './model/NodeLoadInformation';
import NodeLoadMetricInformation from './model/NodeLoadMetricInformation';
import NodeNodeDeactivationInfo from './model/NodeNodeDeactivationInfo';
import NodesHealthEvaluation from './model/NodesHealthEvaluation';
import Partition from './model/Partition';
import PartitionCurrentConfigurationEpoch from './model/PartitionCurrentConfigurationEpoch';
import PartitionDescription from './model/PartitionDescription';
import PartitionHealth from './model/PartitionHealth';
import PartitionHealthEvaluation from './model/PartitionHealthEvaluation';
import PartitionHealthReplicaHealthStatesInner from './model/PartitionHealthReplicaHealthStatesInner';
import PartitionHealthReport from './model/PartitionHealthReport';
import PartitionInformation from './model/PartitionInformation';
import PartitionList from './model/PartitionList';
import PartitionLoadInformation from './model/PartitionLoadInformation';
import PartitionScheme from './model/PartitionScheme';
import PartitionsHealthEvaluation from './model/PartitionsHealthEvaluation';
import RegisterApplicationType from './model/RegisterApplicationType';
import RegisterClusterPackage from './model/RegisterClusterPackage';
import Replica from './model/Replica';
import ReplicaHealth from './model/ReplicaHealth';
import ReplicaHealthEvaluation from './model/ReplicaHealthEvaluation';
import ReplicaHealthReport from './model/ReplicaHealthReport';
import ReplicaList from './model/ReplicaList';
import ReplicaLoadInformation from './model/ReplicaLoadInformation';
import ReplicaRole from './model/ReplicaRole';
import ReplicaStatus from './model/ReplicaStatus';
import ReplicasHealthEvaluation from './model/ReplicasHealthEvaluation';
import ResolvedServicePartition from './model/ResolvedServicePartition';
import ResolvedServicePartitionEndpointsInner from './model/ResolvedServicePartitionEndpointsInner';
import ResumeApplicationUpgrade from './model/ResumeApplicationUpgrade';
import ResumeClusterUpgrade from './model/ResumeClusterUpgrade';
import RollingUpgradeMode from './model/RollingUpgradeMode';
import Service from './model/Service';
import ServiceCorrelationDescription from './model/ServiceCorrelationDescription';
import ServiceDescription from './model/ServiceDescription';
import ServiceDescriptionTemplate from './model/ServiceDescriptionTemplate';
import ServiceGroupDescription from './model/ServiceGroupDescription';
import ServiceGroupMember from './model/ServiceGroupMember';
import ServiceGroupMemberDescription from './model/ServiceGroupMemberDescription';
import ServiceHealth from './model/ServiceHealth';
import ServiceHealthEvaluation from './model/ServiceHealthEvaluation';
import ServiceHealthPartitionHealthStatesInner from './model/ServiceHealthPartitionHealthStatesInner';
import ServiceHealthReport from './model/ServiceHealthReport';
import ServiceKind from './model/ServiceKind';
import ServiceList from './model/ServiceList';
import ServiceLoadMetricDescription from './model/ServiceLoadMetricDescription';
import ServiceManifest from './model/ServiceManifest';
import ServicePlacementPolicyDescription from './model/ServicePlacementPolicyDescription';
import ServiceType from './model/ServiceType';
import ServiceTypeServiceTypeDescription from './model/ServiceTypeServiceTypeDescription';
import ServicesHealthEvaluation from './model/ServicesHealthEvaluation';
import StartApplicationUpgrade from './model/StartApplicationUpgrade';
import StartClusterUpgrade from './model/StartClusterUpgrade';
import StatefulCreateServiceDescription from './model/StatefulCreateServiceDescription';
import StatefulCreateServiceGroupDescription from './model/StatefulCreateServiceGroupDescription';
import StatefulServiceDescription from './model/StatefulServiceDescription';
import StatefulServiceGroupDescription from './model/StatefulServiceGroupDescription';
import StatefulUpdateServiceDescription from './model/StatefulUpdateServiceDescription';
import StatefulUpdateServiceGroupDescription from './model/StatefulUpdateServiceGroupDescription';
import StatelessCreateServiceDescription from './model/StatelessCreateServiceDescription';
import StatelessCreateServiceGroupDescription from './model/StatelessCreateServiceGroupDescription';
import StatelessServiceDescription from './model/StatelessServiceDescription';
import StatelessServiceGroupDescription from './model/StatelessServiceGroupDescription';
import StatelessUpdateServiceDescription from './model/StatelessUpdateServiceDescription';
import StatelessUpdateServiceGroupDescription from './model/StatelessUpdateServiceGroupDescription';
import SystemApplicationHealthEvaluation from './model/SystemApplicationHealthEvaluation';
import UnhealthyEvaluation from './model/UnhealthyEvaluation';
import UnregisterApplicationType from './model/UnregisterApplicationType';
import UnregisterClusterPackage from './model/UnregisterClusterPackage';
import UpdateApplicationUpgrade from './model/UpdateApplicationUpgrade';
import UpdateClusterUpgrade from './model/UpdateClusterUpgrade';
import UpdateDescription from './model/UpdateDescription';
import UpdateServiceDescription from './model/UpdateServiceDescription';
import UpdateServiceGroupDescription from './model/UpdateServiceGroupDescription';
import UpgradeDomainDeltaNodesCheckHealthEvaluation from './model/UpgradeDomainDeltaNodesCheckHealthEvaluation';
import UpgradeDomainDeployedApplicationsHealthEvaluation from './model/UpgradeDomainDeployedApplicationsHealthEvaluation';
import UpgradeDomainNodesHealthEvaluation from './model/UpgradeDomainNodesHealthEvaluation';
import UpgradeState from './model/UpgradeState';
import DefaultApi from './api/DefaultApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ServiceFabricClient = require('index'); // See note below*.
* var xxxSvc = new ServiceFabricClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ServiceFabricClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ServiceFabricClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ServiceFabricClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Application model constructor.
     * @property {module:model/Application}
     */
    Application,

    /**
     * The ApplicationDescription model constructor.
     * @property {module:model/ApplicationDescription}
     */
    ApplicationDescription,

    /**
     * The ApplicationDescriptionParameterListInner model constructor.
     * @property {module:model/ApplicationDescriptionParameterListInner}
     */
    ApplicationDescriptionParameterListInner,

    /**
     * The ApplicationHealth model constructor.
     * @property {module:model/ApplicationHealth}
     */
    ApplicationHealth,

    /**
     * The ApplicationHealthDeployedApplicationHealthStatesInner model constructor.
     * @property {module:model/ApplicationHealthDeployedApplicationHealthStatesInner}
     */
    ApplicationHealthDeployedApplicationHealthStatesInner,

    /**
     * The ApplicationHealthEvaluation model constructor.
     * @property {module:model/ApplicationHealthEvaluation}
     */
    ApplicationHealthEvaluation,

    /**
     * The ApplicationHealthPolicy model constructor.
     * @property {module:model/ApplicationHealthPolicy}
     */
    ApplicationHealthPolicy,

    /**
     * The ApplicationHealthPolicyDefaultServiceTypeHealthPolicy model constructor.
     * @property {module:model/ApplicationHealthPolicyDefaultServiceTypeHealthPolicy}
     */
    ApplicationHealthPolicyDefaultServiceTypeHealthPolicy,

    /**
     * The ApplicationHealthPolicyMap model constructor.
     * @property {module:model/ApplicationHealthPolicyMap}
     */
    ApplicationHealthPolicyMap,

    /**
     * The ApplicationHealthReport model constructor.
     * @property {module:model/ApplicationHealthReport}
     */
    ApplicationHealthReport,

    /**
     * The ApplicationHealthServiceHealthStatesInner model constructor.
     * @property {module:model/ApplicationHealthServiceHealthStatesInner}
     */
    ApplicationHealthServiceHealthStatesInner,

    /**
     * The ApplicationList model constructor.
     * @property {module:model/ApplicationList}
     */
    ApplicationList,

    /**
     * The ApplicationManifest model constructor.
     * @property {module:model/ApplicationManifest}
     */
    ApplicationManifest,

    /**
     * The ApplicationParametersInner model constructor.
     * @property {module:model/ApplicationParametersInner}
     */
    ApplicationParametersInner,

    /**
     * The ApplicationType model constructor.
     * @property {module:model/ApplicationType}
     */
    ApplicationType,

    /**
     * The ApplicationTypeDefaultParameterListInner model constructor.
     * @property {module:model/ApplicationTypeDefaultParameterListInner}
     */
    ApplicationTypeDefaultParameterListInner,

    /**
     * The ApplicationTypeHealthEvaluation model constructor.
     * @property {module:model/ApplicationTypeHealthEvaluation}
     */
    ApplicationTypeHealthEvaluation,

    /**
     * The ApplicationUpgrade model constructor.
     * @property {module:model/ApplicationUpgrade}
     */
    ApplicationUpgrade,

    /**
     * The ApplicationUpgradeCurrentUpgradeDomainProgress model constructor.
     * @property {module:model/ApplicationUpgradeCurrentUpgradeDomainProgress}
     */
    ApplicationUpgradeCurrentUpgradeDomainProgress,

    /**
     * The ApplicationUpgradeDeployedApplicationHealthStates model constructor.
     * @property {module:model/ApplicationUpgradeDeployedApplicationHealthStates}
     */
    ApplicationUpgradeDeployedApplicationHealthStates,

    /**
     * The ApplicationsHealthEvaluation model constructor.
     * @property {module:model/ApplicationsHealthEvaluation}
     */
    ApplicationsHealthEvaluation,

    /**
     * The ClusterHealth model constructor.
     * @property {module:model/ClusterHealth}
     */
    ClusterHealth,

    /**
     * The ClusterHealthApplicationHealthStateInner model constructor.
     * @property {module:model/ClusterHealthApplicationHealthStateInner}
     */
    ClusterHealthApplicationHealthStateInner,

    /**
     * The ClusterHealthNodeHealthStatesInner model constructor.
     * @property {module:model/ClusterHealthNodeHealthStatesInner}
     */
    ClusterHealthNodeHealthStatesInner,

    /**
     * The ClusterHealthNodeHealthStatesInnerId model constructor.
     * @property {module:model/ClusterHealthNodeHealthStatesInnerId}
     */
    ClusterHealthNodeHealthStatesInnerId,

    /**
     * The ClusterHealthPolicy model constructor.
     * @property {module:model/ClusterHealthPolicy}
     */
    ClusterHealthPolicy,

    /**
     * The ClusterHealthReport model constructor.
     * @property {module:model/ClusterHealthReport}
     */
    ClusterHealthReport,

    /**
     * The ClusterLoadInformation model constructor.
     * @property {module:model/ClusterLoadInformation}
     */
    ClusterLoadInformation,

    /**
     * The ClusterUpgradeHealthPolicy model constructor.
     * @property {module:model/ClusterUpgradeHealthPolicy}
     */
    ClusterUpgradeHealthPolicy,

    /**
     * The ClusterUpgradeProgress model constructor.
     * @property {module:model/ClusterUpgradeProgress}
     */
    ClusterUpgradeProgress,

    /**
     * The ClusterUpgradeProgressUpgradeDomainProgressAtFailure model constructor.
     * @property {module:model/ClusterUpgradeProgressUpgradeDomainProgressAtFailure}
     */
    ClusterUpgradeProgressUpgradeDomainProgressAtFailure,

    /**
     * The CodePackageEntryPointStatistics model constructor.
     * @property {module:model/CodePackageEntryPointStatistics}
     */
    CodePackageEntryPointStatistics,

    /**
     * The CreateServiceDescription model constructor.
     * @property {module:model/CreateServiceDescription}
     */
    CreateServiceDescription,

    /**
     * The CreateServiceGroupDescription model constructor.
     * @property {module:model/CreateServiceGroupDescription}
     */
    CreateServiceGroupDescription,

    /**
     * The DefaultMoveCost model constructor.
     * @property {module:model/DefaultMoveCost}
     */
    DefaultMoveCost,

    /**
     * The DeltaNodesCheckHealthEvaluation model constructor.
     * @property {module:model/DeltaNodesCheckHealthEvaluation}
     */
    DeltaNodesCheckHealthEvaluation,

    /**
     * The DeployedApplication model constructor.
     * @property {module:model/DeployedApplication}
     */
    DeployedApplication,

    /**
     * The DeployedApplicationHealth model constructor.
     * @property {module:model/DeployedApplicationHealth}
     */
    DeployedApplicationHealth,

    /**
     * The DeployedApplicationHealthEvaluation model constructor.
     * @property {module:model/DeployedApplicationHealthEvaluation}
     */
    DeployedApplicationHealthEvaluation,

    /**
     * The DeployedApplicationHealthReport model constructor.
     * @property {module:model/DeployedApplicationHealthReport}
     */
    DeployedApplicationHealthReport,

    /**
     * The DeployedApplicationsHealthEvaluation model constructor.
     * @property {module:model/DeployedApplicationsHealthEvaluation}
     */
    DeployedApplicationsHealthEvaluation,

    /**
     * The DeployedCodePackage model constructor.
     * @property {module:model/DeployedCodePackage}
     */
    DeployedCodePackage,

    /**
     * The DeployedReplica model constructor.
     * @property {module:model/DeployedReplica}
     */
    DeployedReplica,

    /**
     * The DeployedReplicaDetail model constructor.
     * @property {module:model/DeployedReplicaDetail}
     */
    DeployedReplicaDetail,

    /**
     * The DeployedReplicaDetailReplicatorStatus model constructor.
     * @property {module:model/DeployedReplicaDetailReplicatorStatus}
     */
    DeployedReplicaDetailReplicatorStatus,

    /**
     * The DeployedReplicaDetailReplicatorStatusReplicationQueueStatus model constructor.
     * @property {module:model/DeployedReplicaDetailReplicatorStatusReplicationQueueStatus}
     */
    DeployedReplicaDetailReplicatorStatusReplicationQueueStatus,

    /**
     * The DeployedServiceHealthReport model constructor.
     * @property {module:model/DeployedServiceHealthReport}
     */
    DeployedServiceHealthReport,

    /**
     * The DeployedServicePackage model constructor.
     * @property {module:model/DeployedServicePackage}
     */
    DeployedServicePackage,

    /**
     * The DeployedServicePackageHealth model constructor.
     * @property {module:model/DeployedServicePackageHealth}
     */
    DeployedServicePackageHealth,

    /**
     * The DeployedServicePackageHealthEvaluation model constructor.
     * @property {module:model/DeployedServicePackageHealthEvaluation}
     */
    DeployedServicePackageHealthEvaluation,

    /**
     * The DeployedServicePackageHealthState model constructor.
     * @property {module:model/DeployedServicePackageHealthState}
     */
    DeployedServicePackageHealthState,

    /**
     * The DeployedServicePackagesHealthEvaluation model constructor.
     * @property {module:model/DeployedServicePackagesHealthEvaluation}
     */
    DeployedServicePackagesHealthEvaluation,

    /**
     * The DeployedServiceType model constructor.
     * @property {module:model/DeployedServiceType}
     */
    DeployedServiceType,

    /**
     * The DisableNode model constructor.
     * @property {module:model/DisableNode}
     */
    DisableNode,

    /**
     * The EntryPoint model constructor.
     * @property {module:model/EntryPoint}
     */
    EntryPoint,

    /**
     * The ErrorModel model constructor.
     * @property {module:model/ErrorModel}
     */
    ErrorModel,

    /**
     * The ErrorModelError model constructor.
     * @property {module:model/ErrorModelError}
     */
    ErrorModelError,

    /**
     * The EventHealthEvaluation model constructor.
     * @property {module:model/EventHealthEvaluation}
     */
    EventHealthEvaluation,

    /**
     * The FailureAction model constructor.
     * @property {module:model/FailureAction}
     */
    FailureAction,

    /**
     * The FailureReason model constructor.
     * @property {module:model/FailureReason}
     */
    FailureReason,

    /**
     * The HealthEvaluation model constructor.
     * @property {module:model/HealthEvaluation}
     */
    HealthEvaluation,

    /**
     * The HealthEvent model constructor.
     * @property {module:model/HealthEvent}
     */
    HealthEvent,

    /**
     * The HealthReport model constructor.
     * @property {module:model/HealthReport}
     */
    HealthReport,

    /**
     * The HealthState model constructor.
     * @property {module:model/HealthState}
     */
    HealthState,

    /**
     * The LoadMetricInformation model constructor.
     * @property {module:model/LoadMetricInformation}
     */
    LoadMetricInformation,

    /**
     * The LoadMetricInformationMaxNodeLoadId model constructor.
     * @property {module:model/LoadMetricInformationMaxNodeLoadId}
     */
    LoadMetricInformationMaxNodeLoadId,

    /**
     * The LoadMetricInformationMinNodeLoadId model constructor.
     * @property {module:model/LoadMetricInformationMinNodeLoadId}
     */
    LoadMetricInformationMinNodeLoadId,

    /**
     * The MonitoringPolicy model constructor.
     * @property {module:model/MonitoringPolicy}
     */
    MonitoringPolicy,

    /**
     * The Node model constructor.
     * @property {module:model/Node}
     */
    Node,

    /**
     * The NodeHealth model constructor.
     * @property {module:model/NodeHealth}
     */
    NodeHealth,

    /**
     * The NodeHealthEvaluation model constructor.
     * @property {module:model/NodeHealthEvaluation}
     */
    NodeHealthEvaluation,

    /**
     * The NodeHealthReport model constructor.
     * @property {module:model/NodeHealthReport}
     */
    NodeHealthReport,

    /**
     * The NodeList model constructor.
     * @property {module:model/NodeList}
     */
    NodeList,

    /**
     * The NodeLoadInformation model constructor.
     * @property {module:model/NodeLoadInformation}
     */
    NodeLoadInformation,

    /**
     * The NodeLoadMetricInformation model constructor.
     * @property {module:model/NodeLoadMetricInformation}
     */
    NodeLoadMetricInformation,

    /**
     * The NodeNodeDeactivationInfo model constructor.
     * @property {module:model/NodeNodeDeactivationInfo}
     */
    NodeNodeDeactivationInfo,

    /**
     * The NodesHealthEvaluation model constructor.
     * @property {module:model/NodesHealthEvaluation}
     */
    NodesHealthEvaluation,

    /**
     * The Partition model constructor.
     * @property {module:model/Partition}
     */
    Partition,

    /**
     * The PartitionCurrentConfigurationEpoch model constructor.
     * @property {module:model/PartitionCurrentConfigurationEpoch}
     */
    PartitionCurrentConfigurationEpoch,

    /**
     * The PartitionDescription model constructor.
     * @property {module:model/PartitionDescription}
     */
    PartitionDescription,

    /**
     * The PartitionHealth model constructor.
     * @property {module:model/PartitionHealth}
     */
    PartitionHealth,

    /**
     * The PartitionHealthEvaluation model constructor.
     * @property {module:model/PartitionHealthEvaluation}
     */
    PartitionHealthEvaluation,

    /**
     * The PartitionHealthReplicaHealthStatesInner model constructor.
     * @property {module:model/PartitionHealthReplicaHealthStatesInner}
     */
    PartitionHealthReplicaHealthStatesInner,

    /**
     * The PartitionHealthReport model constructor.
     * @property {module:model/PartitionHealthReport}
     */
    PartitionHealthReport,

    /**
     * The PartitionInformation model constructor.
     * @property {module:model/PartitionInformation}
     */
    PartitionInformation,

    /**
     * The PartitionList model constructor.
     * @property {module:model/PartitionList}
     */
    PartitionList,

    /**
     * The PartitionLoadInformation model constructor.
     * @property {module:model/PartitionLoadInformation}
     */
    PartitionLoadInformation,

    /**
     * The PartitionScheme model constructor.
     * @property {module:model/PartitionScheme}
     */
    PartitionScheme,

    /**
     * The PartitionsHealthEvaluation model constructor.
     * @property {module:model/PartitionsHealthEvaluation}
     */
    PartitionsHealthEvaluation,

    /**
     * The RegisterApplicationType model constructor.
     * @property {module:model/RegisterApplicationType}
     */
    RegisterApplicationType,

    /**
     * The RegisterClusterPackage model constructor.
     * @property {module:model/RegisterClusterPackage}
     */
    RegisterClusterPackage,

    /**
     * The Replica model constructor.
     * @property {module:model/Replica}
     */
    Replica,

    /**
     * The ReplicaHealth model constructor.
     * @property {module:model/ReplicaHealth}
     */
    ReplicaHealth,

    /**
     * The ReplicaHealthEvaluation model constructor.
     * @property {module:model/ReplicaHealthEvaluation}
     */
    ReplicaHealthEvaluation,

    /**
     * The ReplicaHealthReport model constructor.
     * @property {module:model/ReplicaHealthReport}
     */
    ReplicaHealthReport,

    /**
     * The ReplicaList model constructor.
     * @property {module:model/ReplicaList}
     */
    ReplicaList,

    /**
     * The ReplicaLoadInformation model constructor.
     * @property {module:model/ReplicaLoadInformation}
     */
    ReplicaLoadInformation,

    /**
     * The ReplicaRole model constructor.
     * @property {module:model/ReplicaRole}
     */
    ReplicaRole,

    /**
     * The ReplicaStatus model constructor.
     * @property {module:model/ReplicaStatus}
     */
    ReplicaStatus,

    /**
     * The ReplicasHealthEvaluation model constructor.
     * @property {module:model/ReplicasHealthEvaluation}
     */
    ReplicasHealthEvaluation,

    /**
     * The ResolvedServicePartition model constructor.
     * @property {module:model/ResolvedServicePartition}
     */
    ResolvedServicePartition,

    /**
     * The ResolvedServicePartitionEndpointsInner model constructor.
     * @property {module:model/ResolvedServicePartitionEndpointsInner}
     */
    ResolvedServicePartitionEndpointsInner,

    /**
     * The ResumeApplicationUpgrade model constructor.
     * @property {module:model/ResumeApplicationUpgrade}
     */
    ResumeApplicationUpgrade,

    /**
     * The ResumeClusterUpgrade model constructor.
     * @property {module:model/ResumeClusterUpgrade}
     */
    ResumeClusterUpgrade,

    /**
     * The RollingUpgradeMode model constructor.
     * @property {module:model/RollingUpgradeMode}
     */
    RollingUpgradeMode,

    /**
     * The Service model constructor.
     * @property {module:model/Service}
     */
    Service,

    /**
     * The ServiceCorrelationDescription model constructor.
     * @property {module:model/ServiceCorrelationDescription}
     */
    ServiceCorrelationDescription,

    /**
     * The ServiceDescription model constructor.
     * @property {module:model/ServiceDescription}
     */
    ServiceDescription,

    /**
     * The ServiceDescriptionTemplate model constructor.
     * @property {module:model/ServiceDescriptionTemplate}
     */
    ServiceDescriptionTemplate,

    /**
     * The ServiceGroupDescription model constructor.
     * @property {module:model/ServiceGroupDescription}
     */
    ServiceGroupDescription,

    /**
     * The ServiceGroupMember model constructor.
     * @property {module:model/ServiceGroupMember}
     */
    ServiceGroupMember,

    /**
     * The ServiceGroupMemberDescription model constructor.
     * @property {module:model/ServiceGroupMemberDescription}
     */
    ServiceGroupMemberDescription,

    /**
     * The ServiceHealth model constructor.
     * @property {module:model/ServiceHealth}
     */
    ServiceHealth,

    /**
     * The ServiceHealthEvaluation model constructor.
     * @property {module:model/ServiceHealthEvaluation}
     */
    ServiceHealthEvaluation,

    /**
     * The ServiceHealthPartitionHealthStatesInner model constructor.
     * @property {module:model/ServiceHealthPartitionHealthStatesInner}
     */
    ServiceHealthPartitionHealthStatesInner,

    /**
     * The ServiceHealthReport model constructor.
     * @property {module:model/ServiceHealthReport}
     */
    ServiceHealthReport,

    /**
     * The ServiceKind model constructor.
     * @property {module:model/ServiceKind}
     */
    ServiceKind,

    /**
     * The ServiceList model constructor.
     * @property {module:model/ServiceList}
     */
    ServiceList,

    /**
     * The ServiceLoadMetricDescription model constructor.
     * @property {module:model/ServiceLoadMetricDescription}
     */
    ServiceLoadMetricDescription,

    /**
     * The ServiceManifest model constructor.
     * @property {module:model/ServiceManifest}
     */
    ServiceManifest,

    /**
     * The ServicePlacementPolicyDescription model constructor.
     * @property {module:model/ServicePlacementPolicyDescription}
     */
    ServicePlacementPolicyDescription,

    /**
     * The ServiceType model constructor.
     * @property {module:model/ServiceType}
     */
    ServiceType,

    /**
     * The ServiceTypeServiceTypeDescription model constructor.
     * @property {module:model/ServiceTypeServiceTypeDescription}
     */
    ServiceTypeServiceTypeDescription,

    /**
     * The ServicesHealthEvaluation model constructor.
     * @property {module:model/ServicesHealthEvaluation}
     */
    ServicesHealthEvaluation,

    /**
     * The StartApplicationUpgrade model constructor.
     * @property {module:model/StartApplicationUpgrade}
     */
    StartApplicationUpgrade,

    /**
     * The StartClusterUpgrade model constructor.
     * @property {module:model/StartClusterUpgrade}
     */
    StartClusterUpgrade,

    /**
     * The StatefulCreateServiceDescription model constructor.
     * @property {module:model/StatefulCreateServiceDescription}
     */
    StatefulCreateServiceDescription,

    /**
     * The StatefulCreateServiceGroupDescription model constructor.
     * @property {module:model/StatefulCreateServiceGroupDescription}
     */
    StatefulCreateServiceGroupDescription,

    /**
     * The StatefulServiceDescription model constructor.
     * @property {module:model/StatefulServiceDescription}
     */
    StatefulServiceDescription,

    /**
     * The StatefulServiceGroupDescription model constructor.
     * @property {module:model/StatefulServiceGroupDescription}
     */
    StatefulServiceGroupDescription,

    /**
     * The StatefulUpdateServiceDescription model constructor.
     * @property {module:model/StatefulUpdateServiceDescription}
     */
    StatefulUpdateServiceDescription,

    /**
     * The StatefulUpdateServiceGroupDescription model constructor.
     * @property {module:model/StatefulUpdateServiceGroupDescription}
     */
    StatefulUpdateServiceGroupDescription,

    /**
     * The StatelessCreateServiceDescription model constructor.
     * @property {module:model/StatelessCreateServiceDescription}
     */
    StatelessCreateServiceDescription,

    /**
     * The StatelessCreateServiceGroupDescription model constructor.
     * @property {module:model/StatelessCreateServiceGroupDescription}
     */
    StatelessCreateServiceGroupDescription,

    /**
     * The StatelessServiceDescription model constructor.
     * @property {module:model/StatelessServiceDescription}
     */
    StatelessServiceDescription,

    /**
     * The StatelessServiceGroupDescription model constructor.
     * @property {module:model/StatelessServiceGroupDescription}
     */
    StatelessServiceGroupDescription,

    /**
     * The StatelessUpdateServiceDescription model constructor.
     * @property {module:model/StatelessUpdateServiceDescription}
     */
    StatelessUpdateServiceDescription,

    /**
     * The StatelessUpdateServiceGroupDescription model constructor.
     * @property {module:model/StatelessUpdateServiceGroupDescription}
     */
    StatelessUpdateServiceGroupDescription,

    /**
     * The SystemApplicationHealthEvaluation model constructor.
     * @property {module:model/SystemApplicationHealthEvaluation}
     */
    SystemApplicationHealthEvaluation,

    /**
     * The UnhealthyEvaluation model constructor.
     * @property {module:model/UnhealthyEvaluation}
     */
    UnhealthyEvaluation,

    /**
     * The UnregisterApplicationType model constructor.
     * @property {module:model/UnregisterApplicationType}
     */
    UnregisterApplicationType,

    /**
     * The UnregisterClusterPackage model constructor.
     * @property {module:model/UnregisterClusterPackage}
     */
    UnregisterClusterPackage,

    /**
     * The UpdateApplicationUpgrade model constructor.
     * @property {module:model/UpdateApplicationUpgrade}
     */
    UpdateApplicationUpgrade,

    /**
     * The UpdateClusterUpgrade model constructor.
     * @property {module:model/UpdateClusterUpgrade}
     */
    UpdateClusterUpgrade,

    /**
     * The UpdateDescription model constructor.
     * @property {module:model/UpdateDescription}
     */
    UpdateDescription,

    /**
     * The UpdateServiceDescription model constructor.
     * @property {module:model/UpdateServiceDescription}
     */
    UpdateServiceDescription,

    /**
     * The UpdateServiceGroupDescription model constructor.
     * @property {module:model/UpdateServiceGroupDescription}
     */
    UpdateServiceGroupDescription,

    /**
     * The UpgradeDomainDeltaNodesCheckHealthEvaluation model constructor.
     * @property {module:model/UpgradeDomainDeltaNodesCheckHealthEvaluation}
     */
    UpgradeDomainDeltaNodesCheckHealthEvaluation,

    /**
     * The UpgradeDomainDeployedApplicationsHealthEvaluation model constructor.
     * @property {module:model/UpgradeDomainDeployedApplicationsHealthEvaluation}
     */
    UpgradeDomainDeployedApplicationsHealthEvaluation,

    /**
     * The UpgradeDomainNodesHealthEvaluation model constructor.
     * @property {module:model/UpgradeDomainNodesHealthEvaluation}
     */
    UpgradeDomainNodesHealthEvaluation,

    /**
     * The UpgradeState model constructor.
     * @property {module:model/UpgradeState}
     */
    UpgradeState,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
