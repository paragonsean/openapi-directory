/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PartitionScheme from './PartitionScheme';

/**
 * The PartitionDescription model module.
 * @module model/PartitionDescription
 * @version 1.0.0
 */
class PartitionDescription {
    /**
     * Constructs a new <code>PartitionDescription</code>.
     * The description of the partition
     * @alias module:model/PartitionDescription
     */
    constructor() { 
        
        PartitionDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PartitionDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PartitionDescription} obj Optional instance to populate.
     * @return {module:model/PartitionDescription} The populated <code>PartitionDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PartitionDescription();

            if (data.hasOwnProperty('Count')) {
                obj['Count'] = ApiClient.convertToType(data['Count'], 'Number');
            }
            if (data.hasOwnProperty('HighKey')) {
                obj['HighKey'] = ApiClient.convertToType(data['HighKey'], 'String');
            }
            if (data.hasOwnProperty('LowKey')) {
                obj['LowKey'] = ApiClient.convertToType(data['LowKey'], 'String');
            }
            if (data.hasOwnProperty('Names')) {
                obj['Names'] = ApiClient.convertToType(data['Names'], ['String']);
            }
            if (data.hasOwnProperty('PartitionScheme')) {
                obj['PartitionScheme'] = PartitionScheme.constructFromObject(data['PartitionScheme']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PartitionDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PartitionDescription</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['HighKey'] && !(typeof data['HighKey'] === 'string' || data['HighKey'] instanceof String)) {
            throw new Error("Expected the field `HighKey` to be a primitive type in the JSON string but got " + data['HighKey']);
        }
        // ensure the json data is a string
        if (data['LowKey'] && !(typeof data['LowKey'] === 'string' || data['LowKey'] instanceof String)) {
            throw new Error("Expected the field `LowKey` to be a primitive type in the JSON string but got " + data['LowKey']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Names'])) {
            throw new Error("Expected the field `Names` to be an array in the JSON data but got " + data['Names']);
        }

        return true;
    }


}



/**
 * @member {Number} Count
 */
PartitionDescription.prototype['Count'] = undefined;

/**
 * @member {String} HighKey
 */
PartitionDescription.prototype['HighKey'] = undefined;

/**
 * @member {String} LowKey
 */
PartitionDescription.prototype['LowKey'] = undefined;

/**
 * @member {Array.<String>} Names
 */
PartitionDescription.prototype['Names'] = undefined;

/**
 * @member {module:model/PartitionScheme} PartitionScheme
 */
PartitionDescription.prototype['PartitionScheme'] = undefined;






export default PartitionDescription;

