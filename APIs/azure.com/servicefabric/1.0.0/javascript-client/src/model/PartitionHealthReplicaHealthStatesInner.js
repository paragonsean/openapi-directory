/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthState from './HealthState';

/**
 * The PartitionHealthReplicaHealthStatesInner model module.
 * @module model/PartitionHealthReplicaHealthStatesInner
 * @version 1.0.0
 */
class PartitionHealthReplicaHealthStatesInner {
    /**
     * Constructs a new <code>PartitionHealthReplicaHealthStatesInner</code>.
     * The states of the replica health
     * @alias module:model/PartitionHealthReplicaHealthStatesInner
     */
    constructor() { 
        
        PartitionHealthReplicaHealthStatesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PartitionHealthReplicaHealthStatesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PartitionHealthReplicaHealthStatesInner} obj Optional instance to populate.
     * @return {module:model/PartitionHealthReplicaHealthStatesInner} The populated <code>PartitionHealthReplicaHealthStatesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PartitionHealthReplicaHealthStatesInner();

            if (data.hasOwnProperty('AggregatedHealthState')) {
                obj['AggregatedHealthState'] = HealthState.constructFromObject(data['AggregatedHealthState']);
            }
            if (data.hasOwnProperty('HealthEvents')) {
                obj['HealthEvents'] = ApiClient.convertToType(data['HealthEvents'], 'Number');
            }
            if (data.hasOwnProperty('PartitionId')) {
                obj['PartitionId'] = ApiClient.convertToType(data['PartitionId'], 'String');
            }
            if (data.hasOwnProperty('ReplicaId')) {
                obj['ReplicaId'] = ApiClient.convertToType(data['ReplicaId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PartitionHealthReplicaHealthStatesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PartitionHealthReplicaHealthStatesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['PartitionId'] && !(typeof data['PartitionId'] === 'string' || data['PartitionId'] instanceof String)) {
            throw new Error("Expected the field `PartitionId` to be a primitive type in the JSON string but got " + data['PartitionId']);
        }
        // ensure the json data is a string
        if (data['ReplicaId'] && !(typeof data['ReplicaId'] === 'string' || data['ReplicaId'] instanceof String)) {
            throw new Error("Expected the field `ReplicaId` to be a primitive type in the JSON string but got " + data['ReplicaId']);
        }

        return true;
    }


}



/**
 * @member {module:model/HealthState} AggregatedHealthState
 */
PartitionHealthReplicaHealthStatesInner.prototype['AggregatedHealthState'] = undefined;

/**
 * @member {Number} HealthEvents
 */
PartitionHealthReplicaHealthStatesInner.prototype['HealthEvents'] = undefined;

/**
 * @member {String} PartitionId
 */
PartitionHealthReplicaHealthStatesInner.prototype['PartitionId'] = undefined;

/**
 * @member {String} ReplicaId
 */
PartitionHealthReplicaHealthStatesInner.prototype['ReplicaId'] = undefined;






export default PartitionHealthReplicaHealthStatesInner;

