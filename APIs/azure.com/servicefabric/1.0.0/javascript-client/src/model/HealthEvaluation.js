/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthState from './HealthState';

/**
 * The HealthEvaluation model module.
 * @module model/HealthEvaluation
 * @version 1.0.0
 */
class HealthEvaluation {
    /**
     * Constructs a new <code>HealthEvaluation</code>.
     * The evauation of the health
     * @alias module:model/HealthEvaluation
     * @param kind {module:model/HealthEvaluation.KindEnum} 
     */
    constructor(kind) { 
        
        HealthEvaluation.initialize(this, kind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind) { 
        obj['Kind'] = kind;
    }

    /**
     * Constructs a <code>HealthEvaluation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HealthEvaluation} obj Optional instance to populate.
     * @return {module:model/HealthEvaluation} The populated <code>HealthEvaluation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HealthEvaluation();

            if (data.hasOwnProperty('AggregatedHealthState')) {
                obj['AggregatedHealthState'] = HealthState.constructFromObject(data['AggregatedHealthState']);
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Kind')) {
                obj['Kind'] = ApiClient.convertToType(data['Kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HealthEvaluation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HealthEvaluation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HealthEvaluation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Kind'] && !(typeof data['Kind'] === 'string' || data['Kind'] instanceof String)) {
            throw new Error("Expected the field `Kind` to be a primitive type in the JSON string but got " + data['Kind']);
        }

        return true;
    }


}

HealthEvaluation.RequiredProperties = ["Kind"];

/**
 * @member {module:model/HealthState} AggregatedHealthState
 */
HealthEvaluation.prototype['AggregatedHealthState'] = undefined;

/**
 * @member {String} Description
 */
HealthEvaluation.prototype['Description'] = undefined;

/**
 * @member {module:model/HealthEvaluation.KindEnum} Kind
 */
HealthEvaluation.prototype['Kind'] = undefined;





/**
 * Allowed values for the <code>Kind</code> property.
 * @enum {String}
 * @readonly
 */
HealthEvaluation['KindEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Event"
     * @const
     */
    "Event": "Event",

    /**
     * value: "Replicas"
     * @const
     */
    "Replicas": "Replicas",

    /**
     * value: "Partitions"
     * @const
     */
    "Partitions": "Partitions",

    /**
     * value: "DeployedServicePackages"
     * @const
     */
    "DeployedServicePackages": "DeployedServicePackages",

    /**
     * value: "DeployedApplications"
     * @const
     */
    "DeployedApplications": "DeployedApplications",

    /**
     * value: "Services"
     * @const
     */
    "Services": "Services",

    /**
     * value: "Nodes"
     * @const
     */
    "Nodes": "Nodes",

    /**
     * value: "Applications"
     * @const
     */
    "Applications": "Applications",

    /**
     * value: "SystemApplication"
     * @const
     */
    "SystemApplication": "SystemApplication",

    /**
     * value: "UpgradeDomainDeployedApplications"
     * @const
     */
    "UpgradeDomainDeployedApplications": "UpgradeDomainDeployedApplications",

    /**
     * value: "UpgradeDomainNodes"
     * @const
     */
    "UpgradeDomainNodes": "UpgradeDomainNodes",

    /**
     * value: "Node"
     * @const
     */
    "Node": "Node",

    /**
     * value: "Replica"
     * @const
     */
    "Replica": "Replica",

    /**
     * value: "Partition"
     * @const
     */
    "Partition": "Partition",

    /**
     * value: "Service"
     * @const
     */
    "Service": "Service",

    /**
     * value: "DeployedServicePackage"
     * @const
     */
    "DeployedServicePackage": "DeployedServicePackage",

    /**
     * value: "DeployedApplication"
     * @const
     */
    "DeployedApplication": "DeployedApplication",

    /**
     * value: "Application"
     * @const
     */
    "Application": "Application",

    /**
     * value: "DeltaNodesCheck"
     * @const
     */
    "DeltaNodesCheck": "DeltaNodesCheck",

    /**
     * value: "UpgradeDomainDeltaNodesCheck"
     * @const
     */
    "UpgradeDomainDeltaNodesCheck": "UpgradeDomainDeltaNodesCheck",

    /**
     * value: "ApplicationTypeApplications"
     * @const
     */
    "ApplicationTypeApplications": "ApplicationTypeApplications"
};



export default HealthEvaluation;

