/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthEvaluation from './HealthEvaluation';
import HealthState from './HealthState';
import UnhealthyEvaluation from './UnhealthyEvaluation';

/**
 * The ReplicaHealthEvaluation model module.
 * @module model/ReplicaHealthEvaluation
 * @version 1.0.0
 */
class ReplicaHealthEvaluation {
    /**
     * Constructs a new <code>ReplicaHealthEvaluation</code>.
     * The evaluation of the replica health
     * @alias module:model/ReplicaHealthEvaluation
     * @extends module:model/HealthEvaluation
     * @implements module:model/HealthEvaluation
     * @param kind {module:model/ReplicaHealthEvaluation.KindEnum} 
     */
    constructor(kind) { 
        HealthEvaluation.initialize(this, kind);
        ReplicaHealthEvaluation.initialize(this, kind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind) { 
    }

    /**
     * Constructs a <code>ReplicaHealthEvaluation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplicaHealthEvaluation} obj Optional instance to populate.
     * @return {module:model/ReplicaHealthEvaluation} The populated <code>ReplicaHealthEvaluation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplicaHealthEvaluation();
            HealthEvaluation.constructFromObject(data, obj);
            HealthEvaluation.constructFromObject(data, obj);

            if (data.hasOwnProperty('PartitionId')) {
                obj['PartitionId'] = ApiClient.convertToType(data['PartitionId'], 'String');
            }
            if (data.hasOwnProperty('ReplicaOrInstanceId')) {
                obj['ReplicaOrInstanceId'] = ApiClient.convertToType(data['ReplicaOrInstanceId'], 'String');
            }
            if (data.hasOwnProperty('UnhealthyEvaluations')) {
                obj['UnhealthyEvaluations'] = ApiClient.convertToType(data['UnhealthyEvaluations'], [UnhealthyEvaluation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplicaHealthEvaluation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplicaHealthEvaluation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReplicaHealthEvaluation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['PartitionId'] && !(typeof data['PartitionId'] === 'string' || data['PartitionId'] instanceof String)) {
            throw new Error("Expected the field `PartitionId` to be a primitive type in the JSON string but got " + data['PartitionId']);
        }
        // ensure the json data is a string
        if (data['ReplicaOrInstanceId'] && !(typeof data['ReplicaOrInstanceId'] === 'string' || data['ReplicaOrInstanceId'] instanceof String)) {
            throw new Error("Expected the field `ReplicaOrInstanceId` to be a primitive type in the JSON string but got " + data['ReplicaOrInstanceId']);
        }
        if (data['UnhealthyEvaluations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['UnhealthyEvaluations'])) {
                throw new Error("Expected the field `UnhealthyEvaluations` to be an array in the JSON data but got " + data['UnhealthyEvaluations']);
            }
            // validate the optional field `UnhealthyEvaluations` (array)
            for (const item of data['UnhealthyEvaluations']) {
                UnhealthyEvaluation.validateJSON(item);
            };
        }

        return true;
    }


}

ReplicaHealthEvaluation.RequiredProperties = ["Kind"];

/**
 * @member {String} PartitionId
 */
ReplicaHealthEvaluation.prototype['PartitionId'] = undefined;

/**
 * @member {String} ReplicaOrInstanceId
 */
ReplicaHealthEvaluation.prototype['ReplicaOrInstanceId'] = undefined;

/**
 * @member {Array.<module:model/UnhealthyEvaluation>} UnhealthyEvaluations
 */
ReplicaHealthEvaluation.prototype['UnhealthyEvaluations'] = undefined;


// Implement HealthEvaluation interface:
/**
 * @member {module:model/HealthState} AggregatedHealthState
 */
HealthEvaluation.prototype['AggregatedHealthState'] = undefined;
/**
 * @member {String} Description
 */
HealthEvaluation.prototype['Description'] = undefined;
/**
 * @member {module:model/HealthEvaluation.KindEnum} Kind
 */
HealthEvaluation.prototype['Kind'] = undefined;




export default ReplicaHealthEvaluation;

