/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceTypeServiceTypeDescription model module.
 * @module model/ServiceTypeServiceTypeDescription
 * @version 1.0.0
 */
class ServiceTypeServiceTypeDescription {
    /**
     * Constructs a new <code>ServiceTypeServiceTypeDescription</code>.
     * The description of the service type
     * @alias module:model/ServiceTypeServiceTypeDescription
     */
    constructor() { 
        
        ServiceTypeServiceTypeDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceTypeServiceTypeDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceTypeServiceTypeDescription} obj Optional instance to populate.
     * @return {module:model/ServiceTypeServiceTypeDescription} The populated <code>ServiceTypeServiceTypeDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceTypeServiceTypeDescription();

            if (data.hasOwnProperty('HasPersistedState')) {
                obj['HasPersistedState'] = ApiClient.convertToType(data['HasPersistedState'], 'Boolean');
            }
            if (data.hasOwnProperty('IsStateful')) {
                obj['IsStateful'] = ApiClient.convertToType(data['IsStateful'], 'Boolean');
            }
            if (data.hasOwnProperty('PlacementConstraints')) {
                obj['PlacementConstraints'] = ApiClient.convertToType(data['PlacementConstraints'], 'String');
            }
            if (data.hasOwnProperty('ServiceTypeName')) {
                obj['ServiceTypeName'] = ApiClient.convertToType(data['ServiceTypeName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceTypeServiceTypeDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceTypeServiceTypeDescription</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['PlacementConstraints'] && !(typeof data['PlacementConstraints'] === 'string' || data['PlacementConstraints'] instanceof String)) {
            throw new Error("Expected the field `PlacementConstraints` to be a primitive type in the JSON string but got " + data['PlacementConstraints']);
        }
        // ensure the json data is a string
        if (data['ServiceTypeName'] && !(typeof data['ServiceTypeName'] === 'string' || data['ServiceTypeName'] instanceof String)) {
            throw new Error("Expected the field `ServiceTypeName` to be a primitive type in the JSON string but got " + data['ServiceTypeName']);
        }

        return true;
    }


}



/**
 * @member {Boolean} HasPersistedState
 */
ServiceTypeServiceTypeDescription.prototype['HasPersistedState'] = undefined;

/**
 * @member {Boolean} IsStateful
 */
ServiceTypeServiceTypeDescription.prototype['IsStateful'] = undefined;

/**
 * @member {String} PlacementConstraints
 */
ServiceTypeServiceTypeDescription.prototype['PlacementConstraints'] = undefined;

/**
 * @member {String} ServiceTypeName
 */
ServiceTypeServiceTypeDescription.prototype['ServiceTypeName'] = undefined;






export default ServiceTypeServiceTypeDescription;

