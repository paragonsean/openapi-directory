/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationUpgradeCurrentUpgradeDomainProgress from './ApplicationUpgradeCurrentUpgradeDomainProgress';
import ApplicationUpgradeDeployedApplicationHealthStates from './ApplicationUpgradeDeployedApplicationHealthStates';
import FailureReason from './FailureReason';
import RollingUpgradeMode from './RollingUpgradeMode';
import UpgradeState from './UpgradeState';

/**
 * The ApplicationUpgrade model module.
 * @module model/ApplicationUpgrade
 * @version 1.0.0
 */
class ApplicationUpgrade {
    /**
     * Constructs a new <code>ApplicationUpgrade</code>.
     * The upgrade of the application
     * @alias module:model/ApplicationUpgrade
     */
    constructor() { 
        
        ApplicationUpgrade.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationUpgrade</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationUpgrade} obj Optional instance to populate.
     * @return {module:model/ApplicationUpgrade} The populated <code>ApplicationUpgrade</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationUpgrade();

            if (data.hasOwnProperty('CurrentUpgradeDomainProgress')) {
                obj['CurrentUpgradeDomainProgress'] = ApplicationUpgradeCurrentUpgradeDomainProgress.constructFromObject(data['CurrentUpgradeDomainProgress']);
            }
            if (data.hasOwnProperty('DeployedApplicationHealthStates')) {
                obj['DeployedApplicationHealthStates'] = ApplicationUpgradeDeployedApplicationHealthStates.constructFromObject(data['DeployedApplicationHealthStates']);
            }
            if (data.hasOwnProperty('FailureReason')) {
                obj['FailureReason'] = FailureReason.constructFromObject(data['FailureReason']);
            }
            if (data.hasOwnProperty('FailureTimestampUtc')) {
                obj['FailureTimestampUtc'] = ApiClient.convertToType(data['FailureTimestampUtc'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('NextUpgradeDomain')) {
                obj['NextUpgradeDomain'] = ApiClient.convertToType(data['NextUpgradeDomain'], 'String');
            }
            if (data.hasOwnProperty('RollingUpgradeMode')) {
                obj['RollingUpgradeMode'] = RollingUpgradeMode.constructFromObject(data['RollingUpgradeMode']);
            }
            if (data.hasOwnProperty('StartTimestampUtc')) {
                obj['StartTimestampUtc'] = ApiClient.convertToType(data['StartTimestampUtc'], 'String');
            }
            if (data.hasOwnProperty('TargetApplicationTypeVersion')) {
                obj['TargetApplicationTypeVersion'] = ApiClient.convertToType(data['TargetApplicationTypeVersion'], 'String');
            }
            if (data.hasOwnProperty('TypeName')) {
                obj['TypeName'] = ApiClient.convertToType(data['TypeName'], 'String');
            }
            if (data.hasOwnProperty('UnhealthyEvaluations')) {
                obj['UnhealthyEvaluations'] = ApiClient.convertToType(data['UnhealthyEvaluations'], 'String');
            }
            if (data.hasOwnProperty('UpgradeDomainDurationInMilliseconds')) {
                obj['UpgradeDomainDurationInMilliseconds'] = ApiClient.convertToType(data['UpgradeDomainDurationInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('UpgradeDomains')) {
                obj['UpgradeDomains'] = ApiClient.convertToType(data['UpgradeDomains'], 'String');
            }
            if (data.hasOwnProperty('UpgradeDurationInMilliseconds')) {
                obj['UpgradeDurationInMilliseconds'] = ApiClient.convertToType(data['UpgradeDurationInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('UpgradeState')) {
                obj['UpgradeState'] = UpgradeState.constructFromObject(data['UpgradeState']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationUpgrade</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationUpgrade</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CurrentUpgradeDomainProgress`
        if (data['CurrentUpgradeDomainProgress']) { // data not null
          ApplicationUpgradeCurrentUpgradeDomainProgress.validateJSON(data['CurrentUpgradeDomainProgress']);
        }
        // validate the optional field `DeployedApplicationHealthStates`
        if (data['DeployedApplicationHealthStates']) { // data not null
          ApplicationUpgradeDeployedApplicationHealthStates.validateJSON(data['DeployedApplicationHealthStates']);
        }
        // ensure the json data is a string
        if (data['FailureTimestampUtc'] && !(typeof data['FailureTimestampUtc'] === 'string' || data['FailureTimestampUtc'] instanceof String)) {
            throw new Error("Expected the field `FailureTimestampUtc` to be a primitive type in the JSON string but got " + data['FailureTimestampUtc']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['NextUpgradeDomain'] && !(typeof data['NextUpgradeDomain'] === 'string' || data['NextUpgradeDomain'] instanceof String)) {
            throw new Error("Expected the field `NextUpgradeDomain` to be a primitive type in the JSON string but got " + data['NextUpgradeDomain']);
        }
        // ensure the json data is a string
        if (data['StartTimestampUtc'] && !(typeof data['StartTimestampUtc'] === 'string' || data['StartTimestampUtc'] instanceof String)) {
            throw new Error("Expected the field `StartTimestampUtc` to be a primitive type in the JSON string but got " + data['StartTimestampUtc']);
        }
        // ensure the json data is a string
        if (data['TargetApplicationTypeVersion'] && !(typeof data['TargetApplicationTypeVersion'] === 'string' || data['TargetApplicationTypeVersion'] instanceof String)) {
            throw new Error("Expected the field `TargetApplicationTypeVersion` to be a primitive type in the JSON string but got " + data['TargetApplicationTypeVersion']);
        }
        // ensure the json data is a string
        if (data['TypeName'] && !(typeof data['TypeName'] === 'string' || data['TypeName'] instanceof String)) {
            throw new Error("Expected the field `TypeName` to be a primitive type in the JSON string but got " + data['TypeName']);
        }
        // ensure the json data is a string
        if (data['UnhealthyEvaluations'] && !(typeof data['UnhealthyEvaluations'] === 'string' || data['UnhealthyEvaluations'] instanceof String)) {
            throw new Error("Expected the field `UnhealthyEvaluations` to be a primitive type in the JSON string but got " + data['UnhealthyEvaluations']);
        }
        // ensure the json data is a string
        if (data['UpgradeDomainDurationInMilliseconds'] && !(typeof data['UpgradeDomainDurationInMilliseconds'] === 'string' || data['UpgradeDomainDurationInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `UpgradeDomainDurationInMilliseconds` to be a primitive type in the JSON string but got " + data['UpgradeDomainDurationInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['UpgradeDomains'] && !(typeof data['UpgradeDomains'] === 'string' || data['UpgradeDomains'] instanceof String)) {
            throw new Error("Expected the field `UpgradeDomains` to be a primitive type in the JSON string but got " + data['UpgradeDomains']);
        }
        // ensure the json data is a string
        if (data['UpgradeDurationInMilliseconds'] && !(typeof data['UpgradeDurationInMilliseconds'] === 'string' || data['UpgradeDurationInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `UpgradeDurationInMilliseconds` to be a primitive type in the JSON string but got " + data['UpgradeDurationInMilliseconds']);
        }

        return true;
    }


}



/**
 * @member {module:model/ApplicationUpgradeCurrentUpgradeDomainProgress} CurrentUpgradeDomainProgress
 */
ApplicationUpgrade.prototype['CurrentUpgradeDomainProgress'] = undefined;

/**
 * @member {module:model/ApplicationUpgradeDeployedApplicationHealthStates} DeployedApplicationHealthStates
 */
ApplicationUpgrade.prototype['DeployedApplicationHealthStates'] = undefined;

/**
 * @member {module:model/FailureReason} FailureReason
 */
ApplicationUpgrade.prototype['FailureReason'] = undefined;

/**
 * @member {String} FailureTimestampUtc
 */
ApplicationUpgrade.prototype['FailureTimestampUtc'] = undefined;

/**
 * @member {String} Name
 */
ApplicationUpgrade.prototype['Name'] = undefined;

/**
 * @member {String} NextUpgradeDomain
 */
ApplicationUpgrade.prototype['NextUpgradeDomain'] = undefined;

/**
 * @member {module:model/RollingUpgradeMode} RollingUpgradeMode
 */
ApplicationUpgrade.prototype['RollingUpgradeMode'] = undefined;

/**
 * @member {String} StartTimestampUtc
 */
ApplicationUpgrade.prototype['StartTimestampUtc'] = undefined;

/**
 * @member {String} TargetApplicationTypeVersion
 */
ApplicationUpgrade.prototype['TargetApplicationTypeVersion'] = undefined;

/**
 * @member {String} TypeName
 */
ApplicationUpgrade.prototype['TypeName'] = undefined;

/**
 * @member {String} UnhealthyEvaluations
 */
ApplicationUpgrade.prototype['UnhealthyEvaluations'] = undefined;

/**
 * @member {String} UpgradeDomainDurationInMilliseconds
 */
ApplicationUpgrade.prototype['UpgradeDomainDurationInMilliseconds'] = undefined;

/**
 * @member {String} UpgradeDomains
 */
ApplicationUpgrade.prototype['UpgradeDomains'] = undefined;

/**
 * @member {String} UpgradeDurationInMilliseconds
 */
ApplicationUpgrade.prototype['UpgradeDurationInMilliseconds'] = undefined;

/**
 * @member {module:model/UpgradeState} UpgradeState
 */
ApplicationUpgrade.prototype['UpgradeState'] = undefined;






export default ApplicationUpgrade;

