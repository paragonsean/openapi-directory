/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeployedServicePackageHealthState from './DeployedServicePackageHealthState';
import HealthEvent from './HealthEvent';
import HealthState from './HealthState';

/**
 * The DeployedApplicationHealth model module.
 * @module model/DeployedApplicationHealth
 * @version 1.0.0
 */
class DeployedApplicationHealth {
    /**
     * Constructs a new <code>DeployedApplicationHealth</code>.
     * The health of the deployed application
     * @alias module:model/DeployedApplicationHealth
     */
    constructor() { 
        
        DeployedApplicationHealth.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeployedApplicationHealth</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeployedApplicationHealth} obj Optional instance to populate.
     * @return {module:model/DeployedApplicationHealth} The populated <code>DeployedApplicationHealth</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeployedApplicationHealth();

            if (data.hasOwnProperty('AggregatedHealthState')) {
                obj['AggregatedHealthState'] = HealthState.constructFromObject(data['AggregatedHealthState']);
            }
            if (data.hasOwnProperty('DeployedServicePackageHealthStates')) {
                obj['DeployedServicePackageHealthStates'] = DeployedServicePackageHealthState.constructFromObject(data['DeployedServicePackageHealthStates']);
            }
            if (data.hasOwnProperty('HealthEvents')) {
                obj['HealthEvents'] = ApiClient.convertToType(data['HealthEvents'], [HealthEvent]);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('NodeName')) {
                obj['NodeName'] = ApiClient.convertToType(data['NodeName'], 'String');
            }
            if (data.hasOwnProperty('UnhealthyEvaluations')) {
                obj['UnhealthyEvaluations'] = ApiClient.convertToType(data['UnhealthyEvaluations'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeployedApplicationHealth</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeployedApplicationHealth</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DeployedServicePackageHealthStates`
        if (data['DeployedServicePackageHealthStates']) { // data not null
          DeployedServicePackageHealthState.validateJSON(data['DeployedServicePackageHealthStates']);
        }
        if (data['HealthEvents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['HealthEvents'])) {
                throw new Error("Expected the field `HealthEvents` to be an array in the JSON data but got " + data['HealthEvents']);
            }
            // validate the optional field `HealthEvents` (array)
            for (const item of data['HealthEvents']) {
                HealthEvent.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['NodeName'] && !(typeof data['NodeName'] === 'string' || data['NodeName'] instanceof String)) {
            throw new Error("Expected the field `NodeName` to be a primitive type in the JSON string but got " + data['NodeName']);
        }
        // ensure the json data is a string
        if (data['UnhealthyEvaluations'] && !(typeof data['UnhealthyEvaluations'] === 'string' || data['UnhealthyEvaluations'] instanceof String)) {
            throw new Error("Expected the field `UnhealthyEvaluations` to be a primitive type in the JSON string but got " + data['UnhealthyEvaluations']);
        }

        return true;
    }


}



/**
 * @member {module:model/HealthState} AggregatedHealthState
 */
DeployedApplicationHealth.prototype['AggregatedHealthState'] = undefined;

/**
 * @member {module:model/DeployedServicePackageHealthState} DeployedServicePackageHealthStates
 */
DeployedApplicationHealth.prototype['DeployedServicePackageHealthStates'] = undefined;

/**
 * @member {Array.<module:model/HealthEvent>} HealthEvents
 */
DeployedApplicationHealth.prototype['HealthEvents'] = undefined;

/**
 * @member {String} Name
 */
DeployedApplicationHealth.prototype['Name'] = undefined;

/**
 * @member {String} NodeName
 */
DeployedApplicationHealth.prototype['NodeName'] = undefined;

/**
 * @member {String} UnhealthyEvaluations
 */
DeployedApplicationHealth.prototype['UnhealthyEvaluations'] = undefined;






export default DeployedApplicationHealth;

