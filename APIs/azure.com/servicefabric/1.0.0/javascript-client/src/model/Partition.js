/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthState from './HealthState';
import PartitionCurrentConfigurationEpoch from './PartitionCurrentConfigurationEpoch';
import PartitionInformation from './PartitionInformation';
import ServiceKind from './ServiceKind';

/**
 * The Partition model module.
 * @module model/Partition
 * @version 1.0.0
 */
class Partition {
    /**
     * Constructs a new <code>Partition</code>.
     * The partition
     * @alias module:model/Partition
     */
    constructor() { 
        
        Partition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Partition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Partition} obj Optional instance to populate.
     * @return {module:model/Partition} The populated <code>Partition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Partition();

            if (data.hasOwnProperty('CurrentConfigurationEpoch')) {
                obj['CurrentConfigurationEpoch'] = PartitionCurrentConfigurationEpoch.constructFromObject(data['CurrentConfigurationEpoch']);
            }
            if (data.hasOwnProperty('HealthState')) {
                obj['HealthState'] = HealthState.constructFromObject(data['HealthState']);
            }
            if (data.hasOwnProperty('InstanceCount')) {
                obj['InstanceCount'] = ApiClient.convertToType(data['InstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('MinReplicaSetSize')) {
                obj['MinReplicaSetSize'] = ApiClient.convertToType(data['MinReplicaSetSize'], 'Number');
            }
            if (data.hasOwnProperty('PartitionInformation')) {
                obj['PartitionInformation'] = PartitionInformation.constructFromObject(data['PartitionInformation']);
            }
            if (data.hasOwnProperty('PartitionStatus')) {
                obj['PartitionStatus'] = ApiClient.convertToType(data['PartitionStatus'], 'String');
            }
            if (data.hasOwnProperty('ServiceKind')) {
                obj['ServiceKind'] = ServiceKind.constructFromObject(data['ServiceKind']);
            }
            if (data.hasOwnProperty('TargetReplicaSetSize')) {
                obj['TargetReplicaSetSize'] = ApiClient.convertToType(data['TargetReplicaSetSize'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Partition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Partition</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CurrentConfigurationEpoch`
        if (data['CurrentConfigurationEpoch']) { // data not null
          PartitionCurrentConfigurationEpoch.validateJSON(data['CurrentConfigurationEpoch']);
        }
        // validate the optional field `PartitionInformation`
        if (data['PartitionInformation']) { // data not null
          PartitionInformation.validateJSON(data['PartitionInformation']);
        }
        // ensure the json data is a string
        if (data['PartitionStatus'] && !(typeof data['PartitionStatus'] === 'string' || data['PartitionStatus'] instanceof String)) {
            throw new Error("Expected the field `PartitionStatus` to be a primitive type in the JSON string but got " + data['PartitionStatus']);
        }

        return true;
    }


}



/**
 * @member {module:model/PartitionCurrentConfigurationEpoch} CurrentConfigurationEpoch
 */
Partition.prototype['CurrentConfigurationEpoch'] = undefined;

/**
 * @member {module:model/HealthState} HealthState
 */
Partition.prototype['HealthState'] = undefined;

/**
 * @member {Number} InstanceCount
 */
Partition.prototype['InstanceCount'] = undefined;

/**
 * @member {Number} MinReplicaSetSize
 */
Partition.prototype['MinReplicaSetSize'] = undefined;

/**
 * @member {module:model/PartitionInformation} PartitionInformation
 */
Partition.prototype['PartitionInformation'] = undefined;

/**
 * @member {module:model/Partition.PartitionStatusEnum} PartitionStatus
 */
Partition.prototype['PartitionStatus'] = undefined;

/**
 * @member {module:model/ServiceKind} ServiceKind
 */
Partition.prototype['ServiceKind'] = undefined;

/**
 * @member {Number} TargetReplicaSetSize
 */
Partition.prototype['TargetReplicaSetSize'] = undefined;





/**
 * Allowed values for the <code>PartitionStatus</code> property.
 * @enum {String}
 * @readonly
 */
Partition['PartitionStatusEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Ready"
     * @const
     */
    "Ready": "Ready",

    /**
     * value: "NotReady"
     * @const
     */
    "NotReady": "NotReady",

    /**
     * value: "InQuorumLoss"
     * @const
     */
    "InQuorumLoss": "InQuorumLoss",

    /**
     * value: "Reconfiguring"
     * @const
     */
    "Reconfiguring": "Reconfiguring",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting"
};



export default Partition;

