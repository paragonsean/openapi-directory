/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthReport from './HealthReport';
import HealthState from './HealthState';

/**
 * The ReplicaHealthReport model module.
 * @module model/ReplicaHealthReport
 * @version 1.0.0
 */
class ReplicaHealthReport {
    /**
     * Constructs a new <code>ReplicaHealthReport</code>.
     * The report of the replica health
     * @alias module:model/ReplicaHealthReport
     * @implements module:model/HealthReport
     */
    constructor() { 
        HealthReport.initialize(this);
        ReplicaHealthReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReplicaHealthReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplicaHealthReport} obj Optional instance to populate.
     * @return {module:model/ReplicaHealthReport} The populated <code>ReplicaHealthReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplicaHealthReport();
            HealthReport.constructFromObject(data, obj);

            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('HealthState')) {
                obj['HealthState'] = HealthState.constructFromObject(data['HealthState']);
            }
            if (data.hasOwnProperty('Property')) {
                obj['Property'] = ApiClient.convertToType(data['Property'], 'String');
            }
            if (data.hasOwnProperty('RemoveWhenExpired')) {
                obj['RemoveWhenExpired'] = ApiClient.convertToType(data['RemoveWhenExpired'], 'Boolean');
            }
            if (data.hasOwnProperty('SequenceNumber')) {
                obj['SequenceNumber'] = ApiClient.convertToType(data['SequenceNumber'], 'String');
            }
            if (data.hasOwnProperty('SourceId')) {
                obj['SourceId'] = ApiClient.convertToType(data['SourceId'], 'String');
            }
            if (data.hasOwnProperty('TimeToLiveInMilliSeconds')) {
                obj['TimeToLiveInMilliSeconds'] = ApiClient.convertToType(data['TimeToLiveInMilliSeconds'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplicaHealthReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplicaHealthReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Property'] && !(typeof data['Property'] === 'string' || data['Property'] instanceof String)) {
            throw new Error("Expected the field `Property` to be a primitive type in the JSON string but got " + data['Property']);
        }
        // ensure the json data is a string
        if (data['SequenceNumber'] && !(typeof data['SequenceNumber'] === 'string' || data['SequenceNumber'] instanceof String)) {
            throw new Error("Expected the field `SequenceNumber` to be a primitive type in the JSON string but got " + data['SequenceNumber']);
        }
        // ensure the json data is a string
        if (data['SourceId'] && !(typeof data['SourceId'] === 'string' || data['SourceId'] instanceof String)) {
            throw new Error("Expected the field `SourceId` to be a primitive type in the JSON string but got " + data['SourceId']);
        }
        // ensure the json data is a string
        if (data['TimeToLiveInMilliSeconds'] && !(typeof data['TimeToLiveInMilliSeconds'] === 'string' || data['TimeToLiveInMilliSeconds'] instanceof String)) {
            throw new Error("Expected the field `TimeToLiveInMilliSeconds` to be a primitive type in the JSON string but got " + data['TimeToLiveInMilliSeconds']);
        }

        return true;
    }


}



/**
 * @member {String} Description
 */
ReplicaHealthReport.prototype['Description'] = undefined;

/**
 * @member {module:model/HealthState} HealthState
 */
ReplicaHealthReport.prototype['HealthState'] = undefined;

/**
 * @member {String} Property
 */
ReplicaHealthReport.prototype['Property'] = undefined;

/**
 * @member {Boolean} RemoveWhenExpired
 */
ReplicaHealthReport.prototype['RemoveWhenExpired'] = undefined;

/**
 * @member {String} SequenceNumber
 */
ReplicaHealthReport.prototype['SequenceNumber'] = undefined;

/**
 * @member {String} SourceId
 */
ReplicaHealthReport.prototype['SourceId'] = undefined;

/**
 * @member {String} TimeToLiveInMilliSeconds
 */
ReplicaHealthReport.prototype['TimeToLiveInMilliSeconds'] = undefined;


// Implement HealthReport interface:
/**
 * @member {String} Description
 */
HealthReport.prototype['Description'] = undefined;
/**
 * @member {module:model/HealthState} HealthState
 */
HealthReport.prototype['HealthState'] = undefined;
/**
 * @member {String} Property
 */
HealthReport.prototype['Property'] = undefined;
/**
 * @member {Boolean} RemoveWhenExpired
 */
HealthReport.prototype['RemoveWhenExpired'] = undefined;
/**
 * @member {String} SequenceNumber
 */
HealthReport.prototype['SequenceNumber'] = undefined;
/**
 * @member {String} SourceId
 */
HealthReport.prototype['SourceId'] = undefined;
/**
 * @member {String} TimeToLiveInMilliSeconds
 */
HealthReport.prototype['TimeToLiveInMilliSeconds'] = undefined;




export default ReplicaHealthReport;

