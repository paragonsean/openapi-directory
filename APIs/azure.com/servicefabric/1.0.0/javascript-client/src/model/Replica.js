/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthState from './HealthState';
import ReplicaRole from './ReplicaRole';
import ReplicaStatus from './ReplicaStatus';
import ServiceKind from './ServiceKind';

/**
 * The Replica model module.
 * @module model/Replica
 * @version 1.0.0
 */
class Replica {
    /**
     * Constructs a new <code>Replica</code>.
     * The replica
     * @alias module:model/Replica
     */
    constructor() { 
        
        Replica.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Replica</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Replica} obj Optional instance to populate.
     * @return {module:model/Replica} The populated <code>Replica</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Replica();

            if (data.hasOwnProperty('Address')) {
                obj['Address'] = ApiClient.convertToType(data['Address'], 'String');
            }
            if (data.hasOwnProperty('HealthState')) {
                obj['HealthState'] = HealthState.constructFromObject(data['HealthState']);
            }
            if (data.hasOwnProperty('InstanceId')) {
                obj['InstanceId'] = ApiClient.convertToType(data['InstanceId'], 'String');
            }
            if (data.hasOwnProperty('LastInBuildDurationInSeconds')) {
                obj['LastInBuildDurationInSeconds'] = ApiClient.convertToType(data['LastInBuildDurationInSeconds'], 'String');
            }
            if (data.hasOwnProperty('NodeName')) {
                obj['NodeName'] = ApiClient.convertToType(data['NodeName'], 'String');
            }
            if (data.hasOwnProperty('ReplicaId')) {
                obj['ReplicaId'] = ApiClient.convertToType(data['ReplicaId'], 'String');
            }
            if (data.hasOwnProperty('ReplicaRole')) {
                obj['ReplicaRole'] = ReplicaRole.constructFromObject(data['ReplicaRole']);
            }
            if (data.hasOwnProperty('ReplicaStatus')) {
                obj['ReplicaStatus'] = ReplicaStatus.constructFromObject(data['ReplicaStatus']);
            }
            if (data.hasOwnProperty('ServiceKind')) {
                obj['ServiceKind'] = ServiceKind.constructFromObject(data['ServiceKind']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Replica</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Replica</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Address'] && !(typeof data['Address'] === 'string' || data['Address'] instanceof String)) {
            throw new Error("Expected the field `Address` to be a primitive type in the JSON string but got " + data['Address']);
        }
        // ensure the json data is a string
        if (data['InstanceId'] && !(typeof data['InstanceId'] === 'string' || data['InstanceId'] instanceof String)) {
            throw new Error("Expected the field `InstanceId` to be a primitive type in the JSON string but got " + data['InstanceId']);
        }
        // ensure the json data is a string
        if (data['LastInBuildDurationInSeconds'] && !(typeof data['LastInBuildDurationInSeconds'] === 'string' || data['LastInBuildDurationInSeconds'] instanceof String)) {
            throw new Error("Expected the field `LastInBuildDurationInSeconds` to be a primitive type in the JSON string but got " + data['LastInBuildDurationInSeconds']);
        }
        // ensure the json data is a string
        if (data['NodeName'] && !(typeof data['NodeName'] === 'string' || data['NodeName'] instanceof String)) {
            throw new Error("Expected the field `NodeName` to be a primitive type in the JSON string but got " + data['NodeName']);
        }
        // ensure the json data is a string
        if (data['ReplicaId'] && !(typeof data['ReplicaId'] === 'string' || data['ReplicaId'] instanceof String)) {
            throw new Error("Expected the field `ReplicaId` to be a primitive type in the JSON string but got " + data['ReplicaId']);
        }

        return true;
    }


}



/**
 * @member {String} Address
 */
Replica.prototype['Address'] = undefined;

/**
 * @member {module:model/HealthState} HealthState
 */
Replica.prototype['HealthState'] = undefined;

/**
 * @member {String} InstanceId
 */
Replica.prototype['InstanceId'] = undefined;

/**
 * @member {String} LastInBuildDurationInSeconds
 */
Replica.prototype['LastInBuildDurationInSeconds'] = undefined;

/**
 * @member {String} NodeName
 */
Replica.prototype['NodeName'] = undefined;

/**
 * @member {String} ReplicaId
 */
Replica.prototype['ReplicaId'] = undefined;

/**
 * @member {module:model/ReplicaRole} ReplicaRole
 */
Replica.prototype['ReplicaRole'] = undefined;

/**
 * @member {module:model/ReplicaStatus} ReplicaStatus
 */
Replica.prototype['ReplicaStatus'] = undefined;

/**
 * @member {module:model/ServiceKind} ServiceKind
 */
Replica.prototype['ServiceKind'] = undefined;






export default Replica;

