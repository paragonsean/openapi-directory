/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RollingUpgradeMode from './RollingUpgradeMode';

/**
 * The ClusterHealthPolicy model module.
 * @module model/ClusterHealthPolicy
 * @version 1.0.0
 */
class ClusterHealthPolicy {
    /**
     * Constructs a new <code>ClusterHealthPolicy</code>.
     * The policy of the cluster health
     * @alias module:model/ClusterHealthPolicy
     */
    constructor() { 
        
        ClusterHealthPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterHealthPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterHealthPolicy} obj Optional instance to populate.
     * @return {module:model/ClusterHealthPolicy} The populated <code>ClusterHealthPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterHealthPolicy();

            if (data.hasOwnProperty('FailureAction')) {
                obj['FailureAction'] = ApiClient.convertToType(data['FailureAction'], 'String');
            }
            if (data.hasOwnProperty('ForceRestart')) {
                obj['ForceRestart'] = ApiClient.convertToType(data['ForceRestart'], 'Boolean');
            }
            if (data.hasOwnProperty('HealthCheckRetryTimeoutInMilliseconds')) {
                obj['HealthCheckRetryTimeoutInMilliseconds'] = ApiClient.convertToType(data['HealthCheckRetryTimeoutInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('HealthCheckStableDurationInMilliseconds')) {
                obj['HealthCheckStableDurationInMilliseconds'] = ApiClient.convertToType(data['HealthCheckStableDurationInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('HealthCheckWaitDurationInMilliseconds')) {
                obj['HealthCheckWaitDurationInMilliseconds'] = ApiClient.convertToType(data['HealthCheckWaitDurationInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('RollingUpgradeMode')) {
                obj['RollingUpgradeMode'] = RollingUpgradeMode.constructFromObject(data['RollingUpgradeMode']);
            }
            if (data.hasOwnProperty('UpgradeDomainTimeoutInMilliseconds')) {
                obj['UpgradeDomainTimeoutInMilliseconds'] = ApiClient.convertToType(data['UpgradeDomainTimeoutInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('UpgradeReplicaSetCheckTimeoutInSeconds')) {
                obj['UpgradeReplicaSetCheckTimeoutInSeconds'] = ApiClient.convertToType(data['UpgradeReplicaSetCheckTimeoutInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('UpgradeTimeoutInMilliseconds')) {
                obj['UpgradeTimeoutInMilliseconds'] = ApiClient.convertToType(data['UpgradeTimeoutInMilliseconds'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterHealthPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterHealthPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['FailureAction'] && !(typeof data['FailureAction'] === 'string' || data['FailureAction'] instanceof String)) {
            throw new Error("Expected the field `FailureAction` to be a primitive type in the JSON string but got " + data['FailureAction']);
        }
        // ensure the json data is a string
        if (data['HealthCheckRetryTimeoutInMilliseconds'] && !(typeof data['HealthCheckRetryTimeoutInMilliseconds'] === 'string' || data['HealthCheckRetryTimeoutInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `HealthCheckRetryTimeoutInMilliseconds` to be a primitive type in the JSON string but got " + data['HealthCheckRetryTimeoutInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['HealthCheckStableDurationInMilliseconds'] && !(typeof data['HealthCheckStableDurationInMilliseconds'] === 'string' || data['HealthCheckStableDurationInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `HealthCheckStableDurationInMilliseconds` to be a primitive type in the JSON string but got " + data['HealthCheckStableDurationInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['HealthCheckWaitDurationInMilliseconds'] && !(typeof data['HealthCheckWaitDurationInMilliseconds'] === 'string' || data['HealthCheckWaitDurationInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `HealthCheckWaitDurationInMilliseconds` to be a primitive type in the JSON string but got " + data['HealthCheckWaitDurationInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['UpgradeDomainTimeoutInMilliseconds'] && !(typeof data['UpgradeDomainTimeoutInMilliseconds'] === 'string' || data['UpgradeDomainTimeoutInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `UpgradeDomainTimeoutInMilliseconds` to be a primitive type in the JSON string but got " + data['UpgradeDomainTimeoutInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['UpgradeTimeoutInMilliseconds'] && !(typeof data['UpgradeTimeoutInMilliseconds'] === 'string' || data['UpgradeTimeoutInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `UpgradeTimeoutInMilliseconds` to be a primitive type in the JSON string but got " + data['UpgradeTimeoutInMilliseconds']);
        }

        return true;
    }


}



/**
 * The action of the failure
 * @member {String} FailureAction
 */
ClusterHealthPolicy.prototype['FailureAction'] = undefined;

/**
 * The flag of the force restart
 * @member {Boolean} ForceRestart
 */
ClusterHealthPolicy.prototype['ForceRestart'] = undefined;

/**
 * The milliseconds of the health check retry timeout
 * @member {String} HealthCheckRetryTimeoutInMilliseconds
 */
ClusterHealthPolicy.prototype['HealthCheckRetryTimeoutInMilliseconds'] = undefined;

/**
 * The milliseconds of the health check stable duration
 * @member {String} HealthCheckStableDurationInMilliseconds
 */
ClusterHealthPolicy.prototype['HealthCheckStableDurationInMilliseconds'] = undefined;

/**
 * The milliseconds of the health check wait duration
 * @member {String} HealthCheckWaitDurationInMilliseconds
 */
ClusterHealthPolicy.prototype['HealthCheckWaitDurationInMilliseconds'] = undefined;

/**
 * @member {module:model/RollingUpgradeMode} RollingUpgradeMode
 */
ClusterHealthPolicy.prototype['RollingUpgradeMode'] = undefined;

/**
 * The milliseconds of the upgrade domain timeout
 * @member {String} UpgradeDomainTimeoutInMilliseconds
 */
ClusterHealthPolicy.prototype['UpgradeDomainTimeoutInMilliseconds'] = undefined;

/**
 * The seconds of the upgrade replica set check timeout
 * @member {Number} UpgradeReplicaSetCheckTimeoutInSeconds
 */
ClusterHealthPolicy.prototype['UpgradeReplicaSetCheckTimeoutInSeconds'] = undefined;

/**
 * The milliseconds of the upgrade timeout
 * @member {String} UpgradeTimeoutInMilliseconds
 */
ClusterHealthPolicy.prototype['UpgradeTimeoutInMilliseconds'] = undefined;






export default ClusterHealthPolicy;

