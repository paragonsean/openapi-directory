/**
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServiceFabricClient);
  }
}(this, function(expect, ServiceFabricClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServiceFabricClient.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('applicationHealthsGet', function() {
      it('should call applicationHealthsGet successfully', function(done) {
        //uncomment below and update the code to test applicationHealthsGet
        //instance.applicationHealthsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationHealthsSend', function() {
      it('should call applicationHealthsSend successfully', function(done) {
        //uncomment below and update the code to test applicationHealthsSend
        //instance.applicationHealthsSend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationManifestsGet', function() {
      it('should call applicationManifestsGet successfully', function(done) {
        //uncomment below and update the code to test applicationManifestsGet
        //instance.applicationManifestsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationTypesGet', function() {
      it('should call applicationTypesGet successfully', function(done) {
        //uncomment below and update the code to test applicationTypesGet
        //instance.applicationTypesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationTypesList', function() {
      it('should call applicationTypesList successfully', function(done) {
        //uncomment below and update the code to test applicationTypesList
        //instance.applicationTypesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationTypesRegister', function() {
      it('should call applicationTypesRegister successfully', function(done) {
        //uncomment below and update the code to test applicationTypesRegister
        //instance.applicationTypesRegister(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationTypesUnregister', function() {
      it('should call applicationTypesUnregister successfully', function(done) {
        //uncomment below and update the code to test applicationTypesUnregister
        //instance.applicationTypesUnregister(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationUpgradeRollbacksStart', function() {
      it('should call applicationUpgradeRollbacksStart successfully', function(done) {
        //uncomment below and update the code to test applicationUpgradeRollbacksStart
        //instance.applicationUpgradeRollbacksStart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationUpgradesGet', function() {
      it('should call applicationUpgradesGet successfully', function(done) {
        //uncomment below and update the code to test applicationUpgradesGet
        //instance.applicationUpgradesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationUpgradesResume', function() {
      it('should call applicationUpgradesResume successfully', function(done) {
        //uncomment below and update the code to test applicationUpgradesResume
        //instance.applicationUpgradesResume(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationUpgradesStart', function() {
      it('should call applicationUpgradesStart successfully', function(done) {
        //uncomment below and update the code to test applicationUpgradesStart
        //instance.applicationUpgradesStart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationUpgradesUpdate', function() {
      it('should call applicationUpgradesUpdate successfully', function(done) {
        //uncomment below and update the code to test applicationUpgradesUpdate
        //instance.applicationUpgradesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationsCreate', function() {
      it('should call applicationsCreate successfully', function(done) {
        //uncomment below and update the code to test applicationsCreate
        //instance.applicationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationsGet', function() {
      it('should call applicationsGet successfully', function(done) {
        //uncomment below and update the code to test applicationsGet
        //instance.applicationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationsList', function() {
      it('should call applicationsList successfully', function(done) {
        //uncomment below and update the code to test applicationsList
        //instance.applicationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationsRemove', function() {
      it('should call applicationsRemove successfully', function(done) {
        //uncomment below and update the code to test applicationsRemove
        //instance.applicationsRemove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterHealthsGet', function() {
      it('should call clusterHealthsGet successfully', function(done) {
        //uncomment below and update the code to test clusterHealthsGet
        //instance.clusterHealthsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterHealthsSend', function() {
      it('should call clusterHealthsSend successfully', function(done) {
        //uncomment below and update the code to test clusterHealthsSend
        //instance.clusterHealthsSend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterLoadInformationsGet', function() {
      it('should call clusterLoadInformationsGet successfully', function(done) {
        //uncomment below and update the code to test clusterLoadInformationsGet
        //instance.clusterLoadInformationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterManifestsGet', function() {
      it('should call clusterManifestsGet successfully', function(done) {
        //uncomment below and update the code to test clusterManifestsGet
        //instance.clusterManifestsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterPackagesRegister', function() {
      it('should call clusterPackagesRegister successfully', function(done) {
        //uncomment below and update the code to test clusterPackagesRegister
        //instance.clusterPackagesRegister(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterPackagesUnregister', function() {
      it('should call clusterPackagesUnregister successfully', function(done) {
        //uncomment below and update the code to test clusterPackagesUnregister
        //instance.clusterPackagesUnregister(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterUpgradesResume', function() {
      it('should call clusterUpgradesResume successfully', function(done) {
        //uncomment below and update the code to test clusterUpgradesResume
        //instance.clusterUpgradesResume(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterUpgradesRollback', function() {
      it('should call clusterUpgradesRollback successfully', function(done) {
        //uncomment below and update the code to test clusterUpgradesRollback
        //instance.clusterUpgradesRollback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterUpgradesStart', function() {
      it('should call clusterUpgradesStart successfully', function(done) {
        //uncomment below and update the code to test clusterUpgradesStart
        //instance.clusterUpgradesStart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterUpgradesUpdate', function() {
      it('should call clusterUpgradesUpdate successfully', function(done) {
        //uncomment below and update the code to test clusterUpgradesUpdate
        //instance.clusterUpgradesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployedApplicationHealthsGet', function() {
      it('should call deployedApplicationHealthsGet successfully', function(done) {
        //uncomment below and update the code to test deployedApplicationHealthsGet
        //instance.deployedApplicationHealthsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployedApplicationHealthsSend', function() {
      it('should call deployedApplicationHealthsSend successfully', function(done) {
        //uncomment below and update the code to test deployedApplicationHealthsSend
        //instance.deployedApplicationHealthsSend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployedApplicationsGet', function() {
      it('should call deployedApplicationsGet successfully', function(done) {
        //uncomment below and update the code to test deployedApplicationsGet
        //instance.deployedApplicationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployedApplicationsList', function() {
      it('should call deployedApplicationsList successfully', function(done) {
        //uncomment below and update the code to test deployedApplicationsList
        //instance.deployedApplicationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployedCodePackagesGet', function() {
      it('should call deployedCodePackagesGet successfully', function(done) {
        //uncomment below and update the code to test deployedCodePackagesGet
        //instance.deployedCodePackagesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployedReplicaDetailsGet', function() {
      it('should call deployedReplicaDetailsGet successfully', function(done) {
        //uncomment below and update the code to test deployedReplicaDetailsGet
        //instance.deployedReplicaDetailsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployedReplicasGet', function() {
      it('should call deployedReplicasGet successfully', function(done) {
        //uncomment below and update the code to test deployedReplicasGet
        //instance.deployedReplicasGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployedServicePackageHealthsGet', function() {
      it('should call deployedServicePackageHealthsGet successfully', function(done) {
        //uncomment below and update the code to test deployedServicePackageHealthsGet
        //instance.deployedServicePackageHealthsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployedServicePackageHealthsSend', function() {
      it('should call deployedServicePackageHealthsSend successfully', function(done) {
        //uncomment below and update the code to test deployedServicePackageHealthsSend
        //instance.deployedServicePackageHealthsSend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployedServicePackagesGet', function() {
      it('should call deployedServicePackagesGet successfully', function(done) {
        //uncomment below and update the code to test deployedServicePackagesGet
        //instance.deployedServicePackagesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployedServiceTypesGet', function() {
      it('should call deployedServiceTypesGet successfully', function(done) {
        //uncomment below and update the code to test deployedServiceTypesGet
        //instance.deployedServiceTypesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodeHealthsGet', function() {
      it('should call nodeHealthsGet successfully', function(done) {
        //uncomment below and update the code to test nodeHealthsGet
        //instance.nodeHealthsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodeHealthsSend', function() {
      it('should call nodeHealthsSend successfully', function(done) {
        //uncomment below and update the code to test nodeHealthsSend
        //instance.nodeHealthsSend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodeLoadInformationsGet', function() {
      it('should call nodeLoadInformationsGet successfully', function(done) {
        //uncomment below and update the code to test nodeLoadInformationsGet
        //instance.nodeLoadInformationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodeStatesRemove', function() {
      it('should call nodeStatesRemove successfully', function(done) {
        //uncomment below and update the code to test nodeStatesRemove
        //instance.nodeStatesRemove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesDisable', function() {
      it('should call nodesDisable successfully', function(done) {
        //uncomment below and update the code to test nodesDisable
        //instance.nodesDisable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesEnable', function() {
      it('should call nodesEnable successfully', function(done) {
        //uncomment below and update the code to test nodesEnable
        //instance.nodesEnable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesGet', function() {
      it('should call nodesGet successfully', function(done) {
        //uncomment below and update the code to test nodesGet
        //instance.nodesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesList', function() {
      it('should call nodesList successfully', function(done) {
        //uncomment below and update the code to test nodesList
        //instance.nodesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partitionHealthsGet', function() {
      it('should call partitionHealthsGet successfully', function(done) {
        //uncomment below and update the code to test partitionHealthsGet
        //instance.partitionHealthsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partitionHealthsSend', function() {
      it('should call partitionHealthsSend successfully', function(done) {
        //uncomment below and update the code to test partitionHealthsSend
        //instance.partitionHealthsSend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partitionListsRepair', function() {
      it('should call partitionListsRepair successfully', function(done) {
        //uncomment below and update the code to test partitionListsRepair
        //instance.partitionListsRepair(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partitionLoadInformationsGet', function() {
      it('should call partitionLoadInformationsGet successfully', function(done) {
        //uncomment below and update the code to test partitionLoadInformationsGet
        //instance.partitionLoadInformationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partitionLoadsReset', function() {
      it('should call partitionLoadsReset successfully', function(done) {
        //uncomment below and update the code to test partitionLoadsReset
        //instance.partitionLoadsReset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partitionsGet', function() {
      it('should call partitionsGet successfully', function(done) {
        //uncomment below and update the code to test partitionsGet
        //instance.partitionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partitionsList', function() {
      it('should call partitionsList successfully', function(done) {
        //uncomment below and update the code to test partitionsList
        //instance.partitionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partitionsRepair', function() {
      it('should call partitionsRepair successfully', function(done) {
        //uncomment below and update the code to test partitionsRepair
        //instance.partitionsRepair(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicaHealthsGet', function() {
      it('should call replicaHealthsGet successfully', function(done) {
        //uncomment below and update the code to test replicaHealthsGet
        //instance.replicaHealthsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicaHealthsSend', function() {
      it('should call replicaHealthsSend successfully', function(done) {
        //uncomment below and update the code to test replicaHealthsSend
        //instance.replicaHealthsSend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicaLoadInformationsGet', function() {
      it('should call replicaLoadInformationsGet successfully', function(done) {
        //uncomment below and update the code to test replicaLoadInformationsGet
        //instance.replicaLoadInformationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicasGet', function() {
      it('should call replicasGet successfully', function(done) {
        //uncomment below and update the code to test replicasGet
        //instance.replicasGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicasList', function() {
      it('should call replicasList successfully', function(done) {
        //uncomment below and update the code to test replicasList
        //instance.replicasList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceDescriptionsGet', function() {
      it('should call serviceDescriptionsGet successfully', function(done) {
        //uncomment below and update the code to test serviceDescriptionsGet
        //instance.serviceDescriptionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceFromTemplatesCreate', function() {
      it('should call serviceFromTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test serviceFromTemplatesCreate
        //instance.serviceFromTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceGroupDescriptionsGet', function() {
      it('should call serviceGroupDescriptionsGet successfully', function(done) {
        //uncomment below and update the code to test serviceGroupDescriptionsGet
        //instance.serviceGroupDescriptionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceGroupFromTemplatesCreate', function() {
      it('should call serviceGroupFromTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test serviceGroupFromTemplatesCreate
        //instance.serviceGroupFromTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceGroupMembersGet', function() {
      it('should call serviceGroupMembersGet successfully', function(done) {
        //uncomment below and update the code to test serviceGroupMembersGet
        //instance.serviceGroupMembersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceGroupsCreate', function() {
      it('should call serviceGroupsCreate successfully', function(done) {
        //uncomment below and update the code to test serviceGroupsCreate
        //instance.serviceGroupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceGroupsRemove', function() {
      it('should call serviceGroupsRemove successfully', function(done) {
        //uncomment below and update the code to test serviceGroupsRemove
        //instance.serviceGroupsRemove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceGroupsUpdate', function() {
      it('should call serviceGroupsUpdate successfully', function(done) {
        //uncomment below and update the code to test serviceGroupsUpdate
        //instance.serviceGroupsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceHealthsGet', function() {
      it('should call serviceHealthsGet successfully', function(done) {
        //uncomment below and update the code to test serviceHealthsGet
        //instance.serviceHealthsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceHealthsSend', function() {
      it('should call serviceHealthsSend successfully', function(done) {
        //uncomment below and update the code to test serviceHealthsSend
        //instance.serviceHealthsSend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceManifestsGet', function() {
      it('should call serviceManifestsGet successfully', function(done) {
        //uncomment below and update the code to test serviceManifestsGet
        //instance.serviceManifestsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceTypesGet', function() {
      it('should call serviceTypesGet successfully', function(done) {
        //uncomment below and update the code to test serviceTypesGet
        //instance.serviceTypesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesCreate', function() {
      it('should call servicesCreate successfully', function(done) {
        //uncomment below and update the code to test servicesCreate
        //instance.servicesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesGet', function() {
      it('should call servicesGet successfully', function(done) {
        //uncomment below and update the code to test servicesGet
        //instance.servicesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesList', function() {
      it('should call servicesList successfully', function(done) {
        //uncomment below and update the code to test servicesList
        //instance.servicesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesRemove', function() {
      it('should call servicesRemove successfully', function(done) {
        //uncomment below and update the code to test servicesRemove
        //instance.servicesRemove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesResolve', function() {
      it('should call servicesResolve successfully', function(done) {
        //uncomment below and update the code to test servicesResolve
        //instance.servicesResolve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesUpdate', function() {
      it('should call servicesUpdate successfully', function(done) {
        //uncomment below and update the code to test servicesUpdate
        //instance.servicesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('upgradeProgressesGet', function() {
      it('should call upgradeProgressesGet successfully', function(done) {
        //uncomment below and update the code to test upgradeProgressesGet
        //instance.upgradeProgressesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
