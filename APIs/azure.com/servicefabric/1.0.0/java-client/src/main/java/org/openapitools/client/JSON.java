/*
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
                .registerTypeSelector(org.openapitools.client.model.ApplicationHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ApplicationHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ApplicationHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ApplicationHealthEvaluation", org.openapitools.client.model.ApplicationHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ApplicationTypeHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ApplicationTypeHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ApplicationTypeHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ApplicationTypeHealthEvaluation", org.openapitools.client.model.ApplicationTypeHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ApplicationsHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ApplicationsHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ApplicationsHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ApplicationsHealthEvaluation", org.openapitools.client.model.ApplicationsHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.CreateServiceDescription.class, new TypeSelector<org.openapitools.client.model.CreateServiceDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.CreateServiceDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulCreateServiceDescription", org.openapitools.client.model.StatefulCreateServiceDescription.class);
                        classByDiscriminatorValue.put("StatelessCreateServiceDescription", org.openapitools.client.model.StatelessCreateServiceDescription.class);
                        classByDiscriminatorValue.put("CreateServiceDescription", org.openapitools.client.model.CreateServiceDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.CreateServiceGroupDescription.class, new TypeSelector<org.openapitools.client.model.CreateServiceGroupDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.CreateServiceGroupDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulCreateServiceGroupDescription", org.openapitools.client.model.StatefulCreateServiceGroupDescription.class);
                        classByDiscriminatorValue.put("StatelessCreateServiceGroupDescription", org.openapitools.client.model.StatelessCreateServiceGroupDescription.class);
                        classByDiscriminatorValue.put("CreateServiceGroupDescription", org.openapitools.client.model.CreateServiceGroupDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeltaNodesCheckHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.DeltaNodesCheckHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeltaNodesCheckHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeltaNodesCheckHealthEvaluation", org.openapitools.client.model.DeltaNodesCheckHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedApplicationHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.DeployedApplicationHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedApplicationHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedApplicationHealthEvaluation", org.openapitools.client.model.DeployedApplicationHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedApplicationsHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.DeployedApplicationsHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedApplicationsHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedApplicationsHealthEvaluation", org.openapitools.client.model.DeployedApplicationsHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedServicePackageHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.DeployedServicePackageHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedServicePackageHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedServicePackageHealthEvaluation", org.openapitools.client.model.DeployedServicePackageHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedServicePackagesHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.DeployedServicePackagesHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedServicePackagesHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedServicePackagesHealthEvaluation", org.openapitools.client.model.DeployedServicePackagesHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.EventHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.EventHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.EventHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EventHealthEvaluation", org.openapitools.client.model.EventHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.HealthEvaluation.class, new TypeSelector<org.openapitools.client.model.HealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.HealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ApplicationHealthEvaluation", org.openapitools.client.model.ApplicationHealthEvaluation.class);
                        classByDiscriminatorValue.put("ApplicationTypeHealthEvaluation", org.openapitools.client.model.ApplicationTypeHealthEvaluation.class);
                        classByDiscriminatorValue.put("ApplicationsHealthEvaluation", org.openapitools.client.model.ApplicationsHealthEvaluation.class);
                        classByDiscriminatorValue.put("DeltaNodesCheckHealthEvaluation", org.openapitools.client.model.DeltaNodesCheckHealthEvaluation.class);
                        classByDiscriminatorValue.put("DeployedApplicationHealthEvaluation", org.openapitools.client.model.DeployedApplicationHealthEvaluation.class);
                        classByDiscriminatorValue.put("DeployedApplicationsHealthEvaluation", org.openapitools.client.model.DeployedApplicationsHealthEvaluation.class);
                        classByDiscriminatorValue.put("DeployedServicePackageHealthEvaluation", org.openapitools.client.model.DeployedServicePackageHealthEvaluation.class);
                        classByDiscriminatorValue.put("DeployedServicePackagesHealthEvaluation", org.openapitools.client.model.DeployedServicePackagesHealthEvaluation.class);
                        classByDiscriminatorValue.put("EventHealthEvaluation", org.openapitools.client.model.EventHealthEvaluation.class);
                        classByDiscriminatorValue.put("NodeHealthEvaluation", org.openapitools.client.model.NodeHealthEvaluation.class);
                        classByDiscriminatorValue.put("NodesHealthEvaluation", org.openapitools.client.model.NodesHealthEvaluation.class);
                        classByDiscriminatorValue.put("PartitionHealthEvaluation", org.openapitools.client.model.PartitionHealthEvaluation.class);
                        classByDiscriminatorValue.put("PartitionsHealthEvaluation", org.openapitools.client.model.PartitionsHealthEvaluation.class);
                        classByDiscriminatorValue.put("ReplicaHealthEvaluation", org.openapitools.client.model.ReplicaHealthEvaluation.class);
                        classByDiscriminatorValue.put("ReplicasHealthEvaluation", org.openapitools.client.model.ReplicasHealthEvaluation.class);
                        classByDiscriminatorValue.put("ServiceHealthEvaluation", org.openapitools.client.model.ServiceHealthEvaluation.class);
                        classByDiscriminatorValue.put("ServicesHealthEvaluation", org.openapitools.client.model.ServicesHealthEvaluation.class);
                        classByDiscriminatorValue.put("SystemApplicationHealthEvaluation", org.openapitools.client.model.SystemApplicationHealthEvaluation.class);
                        classByDiscriminatorValue.put("UpgradeDomainDeltaNodesCheckHealthEvaluation", org.openapitools.client.model.UpgradeDomainDeltaNodesCheckHealthEvaluation.class);
                        classByDiscriminatorValue.put("UpgradeDomainDeployedApplicationsHealthEvaluation", org.openapitools.client.model.UpgradeDomainDeployedApplicationsHealthEvaluation.class);
                        classByDiscriminatorValue.put("UpgradeDomainNodesHealthEvaluation", org.openapitools.client.model.UpgradeDomainNodesHealthEvaluation.class);
                        classByDiscriminatorValue.put("HealthEvaluation", org.openapitools.client.model.HealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NodeHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.NodeHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NodeHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("NodeHealthEvaluation", org.openapitools.client.model.NodeHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NodesHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.NodesHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NodesHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("NodesHealthEvaluation", org.openapitools.client.model.NodesHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PartitionHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.PartitionHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PartitionHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PartitionHealthEvaluation", org.openapitools.client.model.PartitionHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PartitionsHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.PartitionsHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PartitionsHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PartitionsHealthEvaluation", org.openapitools.client.model.PartitionsHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ReplicaHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ReplicaHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ReplicaHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReplicaHealthEvaluation", org.openapitools.client.model.ReplicaHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ReplicasHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ReplicasHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ReplicasHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReplicasHealthEvaluation", org.openapitools.client.model.ReplicasHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServiceDescription.class, new TypeSelector<org.openapitools.client.model.ServiceDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServiceDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceDescription", org.openapitools.client.model.StatefulServiceDescription.class);
                        classByDiscriminatorValue.put("StatelessServiceDescription", org.openapitools.client.model.StatelessServiceDescription.class);
                        classByDiscriminatorValue.put("ServiceDescription", org.openapitools.client.model.ServiceDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServiceGroupDescription.class, new TypeSelector<org.openapitools.client.model.ServiceGroupDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServiceGroupDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceGroupDescription", org.openapitools.client.model.StatefulServiceGroupDescription.class);
                        classByDiscriminatorValue.put("StatelessServiceGroupDescription", org.openapitools.client.model.StatelessServiceGroupDescription.class);
                        classByDiscriminatorValue.put("ServiceGroupDescription", org.openapitools.client.model.ServiceGroupDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServiceHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ServiceHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServiceHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ServiceHealthEvaluation", org.openapitools.client.model.ServiceHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServicesHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ServicesHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServicesHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ServicesHealthEvaluation", org.openapitools.client.model.ServicesHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatefulCreateServiceDescription.class, new TypeSelector<org.openapitools.client.model.StatefulCreateServiceDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatefulCreateServiceDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulCreateServiceDescription", org.openapitools.client.model.StatefulCreateServiceDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatefulCreateServiceGroupDescription.class, new TypeSelector<org.openapitools.client.model.StatefulCreateServiceGroupDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatefulCreateServiceGroupDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulCreateServiceGroupDescription", org.openapitools.client.model.StatefulCreateServiceGroupDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatefulServiceDescription.class, new TypeSelector<org.openapitools.client.model.StatefulServiceDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatefulServiceDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceDescription", org.openapitools.client.model.StatefulServiceDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatefulServiceGroupDescription.class, new TypeSelector<org.openapitools.client.model.StatefulServiceGroupDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatefulServiceGroupDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceGroupDescription", org.openapitools.client.model.StatefulServiceGroupDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatefulUpdateServiceDescription.class, new TypeSelector<org.openapitools.client.model.StatefulUpdateServiceDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatefulUpdateServiceDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulUpdateServiceDescription", org.openapitools.client.model.StatefulUpdateServiceDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatefulUpdateServiceGroupDescription.class, new TypeSelector<org.openapitools.client.model.StatefulUpdateServiceGroupDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatefulUpdateServiceGroupDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulUpdateServiceGroupDescription", org.openapitools.client.model.StatefulUpdateServiceGroupDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatelessCreateServiceDescription.class, new TypeSelector<org.openapitools.client.model.StatelessCreateServiceDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatelessCreateServiceDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatelessCreateServiceDescription", org.openapitools.client.model.StatelessCreateServiceDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatelessCreateServiceGroupDescription.class, new TypeSelector<org.openapitools.client.model.StatelessCreateServiceGroupDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatelessCreateServiceGroupDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatelessCreateServiceGroupDescription", org.openapitools.client.model.StatelessCreateServiceGroupDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatelessServiceDescription.class, new TypeSelector<org.openapitools.client.model.StatelessServiceDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatelessServiceDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatelessServiceDescription", org.openapitools.client.model.StatelessServiceDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatelessServiceGroupDescription.class, new TypeSelector<org.openapitools.client.model.StatelessServiceGroupDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatelessServiceGroupDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatelessServiceGroupDescription", org.openapitools.client.model.StatelessServiceGroupDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatelessUpdateServiceDescription.class, new TypeSelector<org.openapitools.client.model.StatelessUpdateServiceDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatelessUpdateServiceDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatelessUpdateServiceDescription", org.openapitools.client.model.StatelessUpdateServiceDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatelessUpdateServiceGroupDescription.class, new TypeSelector<org.openapitools.client.model.StatelessUpdateServiceGroupDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatelessUpdateServiceGroupDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatelessUpdateServiceGroupDescription", org.openapitools.client.model.StatelessUpdateServiceGroupDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.SystemApplicationHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.SystemApplicationHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.SystemApplicationHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SystemApplicationHealthEvaluation", org.openapitools.client.model.SystemApplicationHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpdateServiceDescription.class, new TypeSelector<org.openapitools.client.model.UpdateServiceDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpdateServiceDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulUpdateServiceDescription", org.openapitools.client.model.StatefulUpdateServiceDescription.class);
                        classByDiscriminatorValue.put("StatelessUpdateServiceDescription", org.openapitools.client.model.StatelessUpdateServiceDescription.class);
                        classByDiscriminatorValue.put("UpdateServiceDescription", org.openapitools.client.model.UpdateServiceDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpdateServiceGroupDescription.class, new TypeSelector<org.openapitools.client.model.UpdateServiceGroupDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpdateServiceGroupDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulUpdateServiceGroupDescription", org.openapitools.client.model.StatefulUpdateServiceGroupDescription.class);
                        classByDiscriminatorValue.put("StatelessUpdateServiceGroupDescription", org.openapitools.client.model.StatelessUpdateServiceGroupDescription.class);
                        classByDiscriminatorValue.put("UpdateServiceGroupDescription", org.openapitools.client.model.UpdateServiceGroupDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpgradeDomainDeltaNodesCheckHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.UpgradeDomainDeltaNodesCheckHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpgradeDomainDeltaNodesCheckHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpgradeDomainDeltaNodesCheckHealthEvaluation", org.openapitools.client.model.UpgradeDomainDeltaNodesCheckHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpgradeDomainDeployedApplicationsHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.UpgradeDomainDeployedApplicationsHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpgradeDomainDeployedApplicationsHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpgradeDomainDeployedApplicationsHealthEvaluation", org.openapitools.client.model.UpgradeDomainDeployedApplicationsHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpgradeDomainNodesHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.UpgradeDomainNodesHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpgradeDomainNodesHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpgradeDomainNodesHealthEvaluation", org.openapitools.client.model.UpgradeDomainNodesHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    static {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Application.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationDescriptionParameterListInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthDeployedApplicationHealthStatesInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthPolicyDefaultServiceTypeHealthPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthPolicyMap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthServiceHealthStatesInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationManifest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationParametersInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationTypeDefaultParameterListInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationTypeHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationUpgrade.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationUpgradeCurrentUpgradeDomainProgress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationUpgradeDeployedApplicationHealthStates.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationsHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterHealthApplicationHealthStateInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterHealthNodeHealthStatesInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterHealthNodeHealthStatesInnerId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterHealthPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterHealthReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterLoadInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterUpgradeHealthPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterUpgradeProgress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterUpgradeProgressUpgradeDomainProgressAtFailure.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CodePackageEntryPointStatistics.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeltaNodesCheckHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplicationHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplicationHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplicationHealthReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplicationsHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedCodePackage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedReplica.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedReplicaDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedReplicaDetailReplicatorStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedReplicaDetailReplicatorStatusReplicationQueueStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServiceHealthReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackageHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackageHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackageHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackagesHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServiceType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DisableNode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.EntryPoint.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ErrorModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ErrorModelError.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.EventHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.HealthEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.HealthReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.LoadMetricInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.LoadMetricInformationMaxNodeLoadId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.LoadMetricInformationMinNodeLoadId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MonitoringPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Node.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeHealthReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeLoadInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeLoadMetricInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeNodeDeactivationInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodesHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Partition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionCurrentConfigurationEpoch.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionHealthReplicaHealthStatesInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionHealthReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionLoadInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionsHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RegisterApplicationType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RegisterClusterPackage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Replica.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicaHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicaHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicaHealthReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicaList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicaLoadInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicasHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ResolvedServicePartition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ResolvedServicePartitionEndpointsInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ResumeApplicationUpgrade.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ResumeClusterUpgrade.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Service.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceCorrelationDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceDescriptionTemplate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceGroupMember.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceGroupMemberDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceHealthPartitionHealthStatesInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceHealthReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceLoadMetricDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceManifest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServicePlacementPolicyDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceTypeServiceTypeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServicesHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StartApplicationUpgrade.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StartClusterUpgrade.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulCreateServiceDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulCreateServiceGroupDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulServiceDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulServiceGroupDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulUpdateServiceDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulUpdateServiceGroupDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessCreateServiceDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessCreateServiceGroupDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessServiceDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessServiceGroupDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessUpdateServiceDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessUpdateServiceGroupDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.SystemApplicationHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UnhealthyEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UnregisterApplicationType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UnregisterClusterPackage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateApplicationUpgrade.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateClusterUpgrade.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpgradeDomainDeltaNodesCheckHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpgradeDomainDeployedApplicationsHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpgradeDomainNodesHealthEvaluation.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
