/*
 * ServiceFabricClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.LoadMetricInformationMaxNodeLoadId;
import org.openapitools.client.model.LoadMetricInformationMinNodeLoadId;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The information of the load metric
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:57:25.463736-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LoadMetricInformation {
  public static final String SERIALIZED_NAME_ACTION = "Action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_ACTIVITY_THRESHOLD = "ActivityThreshold";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_THRESHOLD)
  private Integer activityThreshold;

  public static final String SERIALIZED_NAME_BALANCING_THRESHOLD = "BalancingThreshold";
  @SerializedName(SERIALIZED_NAME_BALANCING_THRESHOLD)
  private Integer balancingThreshold;

  public static final String SERIALIZED_NAME_BUFFERED_CAPACITY = "BufferedCapacity";
  @SerializedName(SERIALIZED_NAME_BUFFERED_CAPACITY)
  private String bufferedCapacity;

  public static final String SERIALIZED_NAME_CLUSTER_CAPACITY = "ClusterCapacity";
  @SerializedName(SERIALIZED_NAME_CLUSTER_CAPACITY)
  private String clusterCapacity;

  public static final String SERIALIZED_NAME_CLUSTER_LOAD = "ClusterLoad";
  @SerializedName(SERIALIZED_NAME_CLUSTER_LOAD)
  private String clusterLoad;

  public static final String SERIALIZED_NAME_DEVIATION_AFTER = "DeviationAfter";
  @SerializedName(SERIALIZED_NAME_DEVIATION_AFTER)
  private Integer deviationAfter;

  public static final String SERIALIZED_NAME_DEVIATION_BEFORE = "DeviationBefore";
  @SerializedName(SERIALIZED_NAME_DEVIATION_BEFORE)
  private Integer deviationBefore;

  public static final String SERIALIZED_NAME_IS_BALANCED_AFTER = "IsBalancedAfter";
  @SerializedName(SERIALIZED_NAME_IS_BALANCED_AFTER)
  private Boolean isBalancedAfter;

  public static final String SERIALIZED_NAME_IS_BALANCED_BEFORE = "IsBalancedBefore";
  @SerializedName(SERIALIZED_NAME_IS_BALANCED_BEFORE)
  private Boolean isBalancedBefore;

  public static final String SERIALIZED_NAME_IS_CLUSTER_CAPACITY_VIOLATION = "IsClusterCapacityViolation";
  @SerializedName(SERIALIZED_NAME_IS_CLUSTER_CAPACITY_VIOLATION)
  private Boolean isClusterCapacityViolation;

  public static final String SERIALIZED_NAME_MAX_NODE_LOAD_ID = "MaxNodeLoadId";
  @SerializedName(SERIALIZED_NAME_MAX_NODE_LOAD_ID)
  private LoadMetricInformationMaxNodeLoadId maxNodeLoadId;

  public static final String SERIALIZED_NAME_MAX_NODE_LOAD_VALUE = "MaxNodeLoadValue";
  @SerializedName(SERIALIZED_NAME_MAX_NODE_LOAD_VALUE)
  private String maxNodeLoadValue;

  public static final String SERIALIZED_NAME_MIN_NODE_LOAD_ID = "MinNodeLoadId";
  @SerializedName(SERIALIZED_NAME_MIN_NODE_LOAD_ID)
  private LoadMetricInformationMinNodeLoadId minNodeLoadId;

  public static final String SERIALIZED_NAME_MIN_NODE_LOAD_VALUE = "MinNodeLoadValue";
  @SerializedName(SERIALIZED_NAME_MIN_NODE_LOAD_VALUE)
  private String minNodeLoadValue;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NODE_BUFFER_PERCENTAGE = "NodeBufferPercentage";
  @SerializedName(SERIALIZED_NAME_NODE_BUFFER_PERCENTAGE)
  private Integer nodeBufferPercentage;

  public static final String SERIALIZED_NAME_REMAINING_BUFFERED_CAPACITY = "RemainingBufferedCapacity";
  @SerializedName(SERIALIZED_NAME_REMAINING_BUFFERED_CAPACITY)
  private String remainingBufferedCapacity;

  public static final String SERIALIZED_NAME_REMAINING_UNBUFFERED_CAPACITY = "RemainingUnbufferedCapacity";
  @SerializedName(SERIALIZED_NAME_REMAINING_UNBUFFERED_CAPACITY)
  private String remainingUnbufferedCapacity;

  public LoadMetricInformation() {
  }

  public LoadMetricInformation action(String action) {
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  public LoadMetricInformation activityThreshold(Integer activityThreshold) {
    this.activityThreshold = activityThreshold;
    return this;
  }

  /**
   * Get activityThreshold
   * @return activityThreshold
   */
  @javax.annotation.Nullable
  public Integer getActivityThreshold() {
    return activityThreshold;
  }

  public void setActivityThreshold(Integer activityThreshold) {
    this.activityThreshold = activityThreshold;
  }


  public LoadMetricInformation balancingThreshold(Integer balancingThreshold) {
    this.balancingThreshold = balancingThreshold;
    return this;
  }

  /**
   * Get balancingThreshold
   * @return balancingThreshold
   */
  @javax.annotation.Nullable
  public Integer getBalancingThreshold() {
    return balancingThreshold;
  }

  public void setBalancingThreshold(Integer balancingThreshold) {
    this.balancingThreshold = balancingThreshold;
  }


  public LoadMetricInformation bufferedCapacity(String bufferedCapacity) {
    this.bufferedCapacity = bufferedCapacity;
    return this;
  }

  /**
   * Get bufferedCapacity
   * @return bufferedCapacity
   */
  @javax.annotation.Nullable
  public String getBufferedCapacity() {
    return bufferedCapacity;
  }

  public void setBufferedCapacity(String bufferedCapacity) {
    this.bufferedCapacity = bufferedCapacity;
  }


  public LoadMetricInformation clusterCapacity(String clusterCapacity) {
    this.clusterCapacity = clusterCapacity;
    return this;
  }

  /**
   * Get clusterCapacity
   * @return clusterCapacity
   */
  @javax.annotation.Nullable
  public String getClusterCapacity() {
    return clusterCapacity;
  }

  public void setClusterCapacity(String clusterCapacity) {
    this.clusterCapacity = clusterCapacity;
  }


  public LoadMetricInformation clusterLoad(String clusterLoad) {
    this.clusterLoad = clusterLoad;
    return this;
  }

  /**
   * Get clusterLoad
   * @return clusterLoad
   */
  @javax.annotation.Nullable
  public String getClusterLoad() {
    return clusterLoad;
  }

  public void setClusterLoad(String clusterLoad) {
    this.clusterLoad = clusterLoad;
  }


  public LoadMetricInformation deviationAfter(Integer deviationAfter) {
    this.deviationAfter = deviationAfter;
    return this;
  }

  /**
   * Get deviationAfter
   * @return deviationAfter
   */
  @javax.annotation.Nullable
  public Integer getDeviationAfter() {
    return deviationAfter;
  }

  public void setDeviationAfter(Integer deviationAfter) {
    this.deviationAfter = deviationAfter;
  }


  public LoadMetricInformation deviationBefore(Integer deviationBefore) {
    this.deviationBefore = deviationBefore;
    return this;
  }

  /**
   * Get deviationBefore
   * @return deviationBefore
   */
  @javax.annotation.Nullable
  public Integer getDeviationBefore() {
    return deviationBefore;
  }

  public void setDeviationBefore(Integer deviationBefore) {
    this.deviationBefore = deviationBefore;
  }


  public LoadMetricInformation isBalancedAfter(Boolean isBalancedAfter) {
    this.isBalancedAfter = isBalancedAfter;
    return this;
  }

  /**
   * Get isBalancedAfter
   * @return isBalancedAfter
   */
  @javax.annotation.Nullable
  public Boolean getIsBalancedAfter() {
    return isBalancedAfter;
  }

  public void setIsBalancedAfter(Boolean isBalancedAfter) {
    this.isBalancedAfter = isBalancedAfter;
  }


  public LoadMetricInformation isBalancedBefore(Boolean isBalancedBefore) {
    this.isBalancedBefore = isBalancedBefore;
    return this;
  }

  /**
   * Get isBalancedBefore
   * @return isBalancedBefore
   */
  @javax.annotation.Nullable
  public Boolean getIsBalancedBefore() {
    return isBalancedBefore;
  }

  public void setIsBalancedBefore(Boolean isBalancedBefore) {
    this.isBalancedBefore = isBalancedBefore;
  }


  public LoadMetricInformation isClusterCapacityViolation(Boolean isClusterCapacityViolation) {
    this.isClusterCapacityViolation = isClusterCapacityViolation;
    return this;
  }

  /**
   * Get isClusterCapacityViolation
   * @return isClusterCapacityViolation
   */
  @javax.annotation.Nullable
  public Boolean getIsClusterCapacityViolation() {
    return isClusterCapacityViolation;
  }

  public void setIsClusterCapacityViolation(Boolean isClusterCapacityViolation) {
    this.isClusterCapacityViolation = isClusterCapacityViolation;
  }


  public LoadMetricInformation maxNodeLoadId(LoadMetricInformationMaxNodeLoadId maxNodeLoadId) {
    this.maxNodeLoadId = maxNodeLoadId;
    return this;
  }

  /**
   * Get maxNodeLoadId
   * @return maxNodeLoadId
   */
  @javax.annotation.Nullable
  public LoadMetricInformationMaxNodeLoadId getMaxNodeLoadId() {
    return maxNodeLoadId;
  }

  public void setMaxNodeLoadId(LoadMetricInformationMaxNodeLoadId maxNodeLoadId) {
    this.maxNodeLoadId = maxNodeLoadId;
  }


  public LoadMetricInformation maxNodeLoadValue(String maxNodeLoadValue) {
    this.maxNodeLoadValue = maxNodeLoadValue;
    return this;
  }

  /**
   * Get maxNodeLoadValue
   * @return maxNodeLoadValue
   */
  @javax.annotation.Nullable
  public String getMaxNodeLoadValue() {
    return maxNodeLoadValue;
  }

  public void setMaxNodeLoadValue(String maxNodeLoadValue) {
    this.maxNodeLoadValue = maxNodeLoadValue;
  }


  public LoadMetricInformation minNodeLoadId(LoadMetricInformationMinNodeLoadId minNodeLoadId) {
    this.minNodeLoadId = minNodeLoadId;
    return this;
  }

  /**
   * Get minNodeLoadId
   * @return minNodeLoadId
   */
  @javax.annotation.Nullable
  public LoadMetricInformationMinNodeLoadId getMinNodeLoadId() {
    return minNodeLoadId;
  }

  public void setMinNodeLoadId(LoadMetricInformationMinNodeLoadId minNodeLoadId) {
    this.minNodeLoadId = minNodeLoadId;
  }


  public LoadMetricInformation minNodeLoadValue(String minNodeLoadValue) {
    this.minNodeLoadValue = minNodeLoadValue;
    return this;
  }

  /**
   * Get minNodeLoadValue
   * @return minNodeLoadValue
   */
  @javax.annotation.Nullable
  public String getMinNodeLoadValue() {
    return minNodeLoadValue;
  }

  public void setMinNodeLoadValue(String minNodeLoadValue) {
    this.minNodeLoadValue = minNodeLoadValue;
  }


  public LoadMetricInformation name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public LoadMetricInformation nodeBufferPercentage(Integer nodeBufferPercentage) {
    this.nodeBufferPercentage = nodeBufferPercentage;
    return this;
  }

  /**
   * Get nodeBufferPercentage
   * @return nodeBufferPercentage
   */
  @javax.annotation.Nullable
  public Integer getNodeBufferPercentage() {
    return nodeBufferPercentage;
  }

  public void setNodeBufferPercentage(Integer nodeBufferPercentage) {
    this.nodeBufferPercentage = nodeBufferPercentage;
  }


  public LoadMetricInformation remainingBufferedCapacity(String remainingBufferedCapacity) {
    this.remainingBufferedCapacity = remainingBufferedCapacity;
    return this;
  }

  /**
   * Get remainingBufferedCapacity
   * @return remainingBufferedCapacity
   */
  @javax.annotation.Nullable
  public String getRemainingBufferedCapacity() {
    return remainingBufferedCapacity;
  }

  public void setRemainingBufferedCapacity(String remainingBufferedCapacity) {
    this.remainingBufferedCapacity = remainingBufferedCapacity;
  }


  public LoadMetricInformation remainingUnbufferedCapacity(String remainingUnbufferedCapacity) {
    this.remainingUnbufferedCapacity = remainingUnbufferedCapacity;
    return this;
  }

  /**
   * Get remainingUnbufferedCapacity
   * @return remainingUnbufferedCapacity
   */
  @javax.annotation.Nullable
  public String getRemainingUnbufferedCapacity() {
    return remainingUnbufferedCapacity;
  }

  public void setRemainingUnbufferedCapacity(String remainingUnbufferedCapacity) {
    this.remainingUnbufferedCapacity = remainingUnbufferedCapacity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoadMetricInformation loadMetricInformation = (LoadMetricInformation) o;
    return Objects.equals(this.action, loadMetricInformation.action) &&
        Objects.equals(this.activityThreshold, loadMetricInformation.activityThreshold) &&
        Objects.equals(this.balancingThreshold, loadMetricInformation.balancingThreshold) &&
        Objects.equals(this.bufferedCapacity, loadMetricInformation.bufferedCapacity) &&
        Objects.equals(this.clusterCapacity, loadMetricInformation.clusterCapacity) &&
        Objects.equals(this.clusterLoad, loadMetricInformation.clusterLoad) &&
        Objects.equals(this.deviationAfter, loadMetricInformation.deviationAfter) &&
        Objects.equals(this.deviationBefore, loadMetricInformation.deviationBefore) &&
        Objects.equals(this.isBalancedAfter, loadMetricInformation.isBalancedAfter) &&
        Objects.equals(this.isBalancedBefore, loadMetricInformation.isBalancedBefore) &&
        Objects.equals(this.isClusterCapacityViolation, loadMetricInformation.isClusterCapacityViolation) &&
        Objects.equals(this.maxNodeLoadId, loadMetricInformation.maxNodeLoadId) &&
        Objects.equals(this.maxNodeLoadValue, loadMetricInformation.maxNodeLoadValue) &&
        Objects.equals(this.minNodeLoadId, loadMetricInformation.minNodeLoadId) &&
        Objects.equals(this.minNodeLoadValue, loadMetricInformation.minNodeLoadValue) &&
        Objects.equals(this.name, loadMetricInformation.name) &&
        Objects.equals(this.nodeBufferPercentage, loadMetricInformation.nodeBufferPercentage) &&
        Objects.equals(this.remainingBufferedCapacity, loadMetricInformation.remainingBufferedCapacity) &&
        Objects.equals(this.remainingUnbufferedCapacity, loadMetricInformation.remainingUnbufferedCapacity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, activityThreshold, balancingThreshold, bufferedCapacity, clusterCapacity, clusterLoad, deviationAfter, deviationBefore, isBalancedAfter, isBalancedBefore, isClusterCapacityViolation, maxNodeLoadId, maxNodeLoadValue, minNodeLoadId, minNodeLoadValue, name, nodeBufferPercentage, remainingBufferedCapacity, remainingUnbufferedCapacity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoadMetricInformation {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    activityThreshold: ").append(toIndentedString(activityThreshold)).append("\n");
    sb.append("    balancingThreshold: ").append(toIndentedString(balancingThreshold)).append("\n");
    sb.append("    bufferedCapacity: ").append(toIndentedString(bufferedCapacity)).append("\n");
    sb.append("    clusterCapacity: ").append(toIndentedString(clusterCapacity)).append("\n");
    sb.append("    clusterLoad: ").append(toIndentedString(clusterLoad)).append("\n");
    sb.append("    deviationAfter: ").append(toIndentedString(deviationAfter)).append("\n");
    sb.append("    deviationBefore: ").append(toIndentedString(deviationBefore)).append("\n");
    sb.append("    isBalancedAfter: ").append(toIndentedString(isBalancedAfter)).append("\n");
    sb.append("    isBalancedBefore: ").append(toIndentedString(isBalancedBefore)).append("\n");
    sb.append("    isClusterCapacityViolation: ").append(toIndentedString(isClusterCapacityViolation)).append("\n");
    sb.append("    maxNodeLoadId: ").append(toIndentedString(maxNodeLoadId)).append("\n");
    sb.append("    maxNodeLoadValue: ").append(toIndentedString(maxNodeLoadValue)).append("\n");
    sb.append("    minNodeLoadId: ").append(toIndentedString(minNodeLoadId)).append("\n");
    sb.append("    minNodeLoadValue: ").append(toIndentedString(minNodeLoadValue)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeBufferPercentage: ").append(toIndentedString(nodeBufferPercentage)).append("\n");
    sb.append("    remainingBufferedCapacity: ").append(toIndentedString(remainingBufferedCapacity)).append("\n");
    sb.append("    remainingUnbufferedCapacity: ").append(toIndentedString(remainingUnbufferedCapacity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Action");
    openapiFields.add("ActivityThreshold");
    openapiFields.add("BalancingThreshold");
    openapiFields.add("BufferedCapacity");
    openapiFields.add("ClusterCapacity");
    openapiFields.add("ClusterLoad");
    openapiFields.add("DeviationAfter");
    openapiFields.add("DeviationBefore");
    openapiFields.add("IsBalancedAfter");
    openapiFields.add("IsBalancedBefore");
    openapiFields.add("IsClusterCapacityViolation");
    openapiFields.add("MaxNodeLoadId");
    openapiFields.add("MaxNodeLoadValue");
    openapiFields.add("MinNodeLoadId");
    openapiFields.add("MinNodeLoadValue");
    openapiFields.add("Name");
    openapiFields.add("NodeBufferPercentage");
    openapiFields.add("RemainingBufferedCapacity");
    openapiFields.add("RemainingUnbufferedCapacity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LoadMetricInformation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LoadMetricInformation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LoadMetricInformation is not found in the empty JSON string", LoadMetricInformation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LoadMetricInformation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LoadMetricInformation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Action") != null && !jsonObj.get("Action").isJsonNull()) && !jsonObj.get("Action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Action").toString()));
      }
      if ((jsonObj.get("BufferedCapacity") != null && !jsonObj.get("BufferedCapacity").isJsonNull()) && !jsonObj.get("BufferedCapacity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BufferedCapacity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BufferedCapacity").toString()));
      }
      if ((jsonObj.get("ClusterCapacity") != null && !jsonObj.get("ClusterCapacity").isJsonNull()) && !jsonObj.get("ClusterCapacity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClusterCapacity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClusterCapacity").toString()));
      }
      if ((jsonObj.get("ClusterLoad") != null && !jsonObj.get("ClusterLoad").isJsonNull()) && !jsonObj.get("ClusterLoad").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClusterLoad` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClusterLoad").toString()));
      }
      // validate the optional field `MaxNodeLoadId`
      if (jsonObj.get("MaxNodeLoadId") != null && !jsonObj.get("MaxNodeLoadId").isJsonNull()) {
        LoadMetricInformationMaxNodeLoadId.validateJsonElement(jsonObj.get("MaxNodeLoadId"));
      }
      if ((jsonObj.get("MaxNodeLoadValue") != null && !jsonObj.get("MaxNodeLoadValue").isJsonNull()) && !jsonObj.get("MaxNodeLoadValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MaxNodeLoadValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MaxNodeLoadValue").toString()));
      }
      // validate the optional field `MinNodeLoadId`
      if (jsonObj.get("MinNodeLoadId") != null && !jsonObj.get("MinNodeLoadId").isJsonNull()) {
        LoadMetricInformationMinNodeLoadId.validateJsonElement(jsonObj.get("MinNodeLoadId"));
      }
      if ((jsonObj.get("MinNodeLoadValue") != null && !jsonObj.get("MinNodeLoadValue").isJsonNull()) && !jsonObj.get("MinNodeLoadValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MinNodeLoadValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MinNodeLoadValue").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("RemainingBufferedCapacity") != null && !jsonObj.get("RemainingBufferedCapacity").isJsonNull()) && !jsonObj.get("RemainingBufferedCapacity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `RemainingBufferedCapacity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RemainingBufferedCapacity").toString()));
      }
      if ((jsonObj.get("RemainingUnbufferedCapacity") != null && !jsonObj.get("RemainingUnbufferedCapacity").isJsonNull()) && !jsonObj.get("RemainingUnbufferedCapacity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `RemainingUnbufferedCapacity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RemainingUnbufferedCapacity").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LoadMetricInformation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LoadMetricInformation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LoadMetricInformation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LoadMetricInformation.class));

       return (TypeAdapter<T>) new TypeAdapter<LoadMetricInformation>() {
           @Override
           public void write(JsonWriter out, LoadMetricInformation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LoadMetricInformation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LoadMetricInformation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoadMetricInformation
   * @throws IOException if the JSON string is invalid with respect to LoadMetricInformation
   */
  public static LoadMetricInformation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LoadMetricInformation.class);
  }

  /**
   * Convert an instance of LoadMetricInformation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

