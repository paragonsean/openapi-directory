openapi: 3.0.1
info:
  title: ServiceFabricClient
  version: 1.0.0
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/servicefabric/data-plane/Microsoft.ServiceFabric/stable/1.0.0/servicefabric.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: servicefabric
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://azure.local:19080/
paths:
  /$/GetClusterHealth:
    get:
      description: Get cluster healths
      operationId: ClusterHealths_Get
      parameters:
      - description: The filter of the events health state
        in: query
        name: EventsHealthStateFilter
        schema:
          type: string
      - description: The filter of the nodes health state
        in: query
        name: NodesHealthStateFilter
        schema:
          type: string
      - description: The filter of the applications health state
        in: query
        name: ApplicationsHealthStateFilter
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHealth'
          description: The cluster health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /$/GetClusterManifest:
    get:
      description: Get cluster manifests
      operationId: ClusterManifests_Get
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The cluster manifest
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /$/GetLoadInformation:
    get:
      description: Get cluster load informations
      operationId: ClusterLoadInformations_Get
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterLoadInformation'
          description: The load information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /$/GetUpgradeProgress:
    get:
      description: Get upgrade progresses
      operationId: UpgradeProgresses_Get
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterUpgradeProgress'
          description: The upgrade progress
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /$/MoveToNextUpgradeDomain:
    post:
      description: Resume cluster upgrades
      operationId: ClusterUpgrades_Resume
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResumeClusterUpgrade'
        description: The upgrade of the cluster
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The cluster upgrade
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: resumeClusterUpgrade
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /$/Provision:
    post:
      description: Register cluster packages
      operationId: ClusterPackages_Register
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RegisterClusterPackage'
        description: The package of the register cluster
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The cluster upgrade
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: registerClusterPackage
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /$/ReportClusterHealth:
    post:
      description: Report cluster healths
      operationId: ClusterHealths_Send
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ClusterHealthReport'
        description: The report of the cluster health
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The cluster health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: clusterHealthReport
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /$/RollbackUpgrade:
    post:
      description: Rollback cluster upgrades
      operationId: ClusterUpgrades_Rollback
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The cluster upgrade
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /$/Unprovision:
    post:
      description: Unregister cluster packages
      operationId: ClusterPackages_Unregister
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UnregisterClusterPackage'
        description: The package of the unregister cluster
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The cluster upgrade
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: unregisterClusterPackage
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /$/UpdateUpgrade:
    post:
      description: Update cluster upgrades
      operationId: ClusterUpgrades_Update
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateClusterUpgrade'
        description: The description of the update cluster upgrade
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The cluster upgrade
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: updateClusterUpgrade
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /$/Upgrade:
    post:
      description: Start cluster upgrades
      operationId: ClusterUpgrades_Start
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/StartClusterUpgrade'
        description: The description of the start cluster upgrade
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The cluster upgrade
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: startClusterUpgrade
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /ApplicationTypes:
    get:
      description: List application types
      operationId: ApplicationTypes_List
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationType'
                type: array
          description: The application type
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /ApplicationTypes/$/Provision:
    post:
      description: Register application types
      operationId: ApplicationTypes_Register
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RegisterApplicationType'
        description: The type of the register application
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The application type
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: registerApplicationType
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /ApplicationTypes/{applicationTypeName}:
    get:
      description: Get application types
      operationId: ApplicationTypes_Get
      parameters:
      - description: The name of the application type
        in: path
        name: applicationTypeName
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationType'
                type: array
          description: The application type
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /ApplicationTypes/{applicationTypeName}/$/GetApplicationManifest:
    get:
      description: Get application manifests
      operationId: ApplicationManifests_Get
      parameters:
      - description: The name of the application type
        in: path
        name: applicationTypeName
        required: true
        schema:
          type: string
      - description: The version of the application type
        in: query
        name: ApplicationTypeVersion
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationManifest'
          description: The application manifest
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /ApplicationTypes/{applicationTypeName}/$/GetServiceManifest:
    get:
      description: Get service manifests
      operationId: ServiceManifests_Get
      parameters:
      - description: The name of the application type
        in: path
        name: applicationTypeName
        required: true
        schema:
          type: string
      - description: The version of the application type
        in: query
        name: ApplicationTypeVersion
        required: true
        schema:
          type: string
      - description: The name of the service manifest
        in: query
        name: ServiceManifestName
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceManifest'
          description: The service manifest
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /ApplicationTypes/{applicationTypeName}/$/GetServiceTypes:
    get:
      description: Get service types
      operationId: ServiceTypes_Get
      parameters:
      - description: The name of the application type
        in: path
        name: applicationTypeName
        required: true
        schema:
          type: string
      - description: The version of the application type
        in: query
        name: ApplicationTypeVersion
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceType'
                type: array
          description: The service type
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /ApplicationTypes/{applicationTypeName}/$/Unprovision:
    post:
      description: Unregister application types
      operationId: ApplicationTypes_Unregister
      parameters:
      - description: The name of the application type
        in: path
        name: applicationTypeName
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UnregisterApplicationType'
        description: The type of the unregister application
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The application type
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: unregisterApplicationType
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Applications:
    get:
      description: List applications
      operationId: Applications_List
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The token of the continuation
        in: query
        name: continuation-token
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: The application list
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Applications/$/Create:
    post:
      description: Create applications
      operationId: Applications_Create
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationDescription'
        description: The description of the application
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The application description
        "201":
          content:
            application/json:
              schema:
                type: string
          description: The application description
        "202":
          content:
            application/json:
              schema:
                type: string
          description: The application description
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: applicationDescription
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Applications/{applicationName}:
    get:
      description: Get applications
      operationId: Applications_Get
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: The application
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/Delete:
    post:
      description: Remove applications
      operationId: Applications_Remove
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The force remove flag to skip services check
        in: query
        name: ForceRemove
        schema:
          type: boolean
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The service
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/GetHealth:
    get:
      description: Get application healths
      operationId: ApplicationHealths_Get
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The filter of the events health state
        in: query
        name: EventsHealthStateFilter
        schema:
          type: string
      - description: The filter of the deployed application health state
        in: query
        name: DeployedApplicationsHealthStateFilter
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationHealth'
          description: The application health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/GetServiceGroups/$/CreateServiceGroupFromTemplate:
    post:
      description: Create service group from templates
      operationId: ServiceGroupFromTemplates_Create
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ServiceDescriptionTemplate'
        description: The template of the service description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The service group description template
        "201":
          content:
            application/json:
              schema:
                type: string
          description: The service group description template
        "202":
          content:
            application/json:
              schema:
                type: string
          description: The service group description template
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: serviceDescriptionTemplate
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/GetServiceGroups/{serviceName}/$/Delete:
    post:
      description: Remove service groups
      operationId: ServiceGroups_Remove
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The service
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/GetServices:
    get:
      description: List services
      operationId: Services_List
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceList'
          description: The service list
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/GetServices/$/Create:
    post:
      description: Create services
      operationId: Services_Create
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateServiceDescription'
        description: The description of the service
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The service description
        "201":
          content:
            application/json:
              schema:
                type: string
          description: The service description
        "202":
          content:
            application/json:
              schema:
                type: string
          description: The service description
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: createServiceDescription
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/GetServices/$/CreateFromTemplate:
    post:
      description: Create service from templates
      operationId: ServiceFromTemplates_Create
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ServiceDescriptionTemplate'
        description: The template of the service description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The service description template
        "201":
          content:
            application/json:
              schema:
                type: string
          description: The service description template
        "202":
          content:
            application/json:
              schema:
                type: string
          description: The service description template
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: serviceDescriptionTemplate
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/GetServices/$/CreateServiceGroup:
    post:
      description: Create service groups
      operationId: ServiceGroups_Create
      parameters:
      - description: The name of the service group
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateServiceGroupDescription'
        description: The description of the service group
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The service description
        "201":
          content:
            application/json:
              schema:
                type: string
          description: The service description
        "202":
          content:
            application/json:
              schema:
                type: string
          description: The service description
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: createServiceGroupDescription
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/GetServices/{serviceName}:
    get:
      description: Get services
      operationId: Services_Get
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: The service
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/GetServices/{serviceName}/$/GetServiceGroupDescription:
    get:
      description: Get service group descriptions
      operationId: ServiceGroupDescriptions_Get
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGroupDescription'
          description: The service group description
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/GetServices/{serviceName}/$/GetServiceGroupMembers:
    get:
      description: Get service group members
      operationId: ServiceGroupMembers_Get
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGroupMember'
          description: The service group description
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/GetServices/{serviceName}/$/UpdateServiceGroup:
    post:
      description: Update service groups
      operationId: ServiceGroups_Update
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateServiceGroupDescription'
        description: The description of the service group update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The service group update description
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: updateServiceGroupDescription
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/GetUpgradeProgress:
    get:
      description: Get application upgrades
      operationId: ApplicationUpgrades_Get
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationUpgrade'
          description: The application upgrade
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/MoveNextUpgradeDomain:
    post:
      description: Resume application upgrades
      operationId: ApplicationUpgrades_Resume
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResumeApplicationUpgrade'
        description: The upgrade of the resume application
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The resume application upgrade
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: resumeApplicationUpgrade
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/ReportHealth:
    post:
      description: Send application health
      operationId: ApplicationHealths_Send
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationHealthReport'
        description: The report of the application health
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The application health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: applicationHealthReport
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/RollbackUpgrade:
    post:
      description: Start application upgrade rollbacks
      operationId: ApplicationUpgradeRollbacks_Start
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The application upgrade rollback
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/UpdateUpgrade:
    post:
      description: Update application upgrades
      operationId: ApplicationUpgrades_Update
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateApplicationUpgrade'
        description: The description of the update application upgrade
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The update application upgrade
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: updateApplicationUpgrade
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Applications/{applicationName}/$/Upgrade:
    post:
      description: Start application upgrades
      operationId: ApplicationUpgrades_Start
      parameters:
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/StartApplicationUpgrade'
        description: The description of the start application upgrade
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The start application upgrade
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: startApplicationUpgrade
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Nodes:
    get:
      description: List nodes
      operationId: Nodes_List
      parameters:
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The token of the continuation
        in: query
        name: continuation-token
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeList'
          description: The node list
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}:
    get:
      description: Get nodes
      operationId: Nodes_Get
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
          description: The node
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/Activate:
    post:
      description: Enable nodes
      operationId: Nodes_Enable
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The node
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/Deactivate:
    post:
      description: Disable nodes
      operationId: Nodes_Disable
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DisableNode'
        description: The node
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The node
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: disableNode
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetApplications:
    get:
      description: List deployed applications
      operationId: DeployedApplications_List
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeployedApplication'
                type: array
          description: The deployed application list
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetApplications/{applicationName}:
    get:
      description: Get deployed applications
      operationId: DeployedApplications_Get
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedApplication'
          description: The deployed application
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetApplications/{applicationName}/$/GetCodePackages:
    get:
      description: Get deployed code packages
      operationId: DeployedCodePackages_Get
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeployedCodePackage'
                type: array
          description: The deployed code package
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetApplications/{applicationName}/$/GetHealth:
    get:
      description: Get deployed application healths
      operationId: DeployedApplicationHealths_Get
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The filter of the events health state
        in: query
        name: EventsHealthStateFilter
        schema:
          type: string
      - description: The filter of the deployed service packages health state
        in: query
        name: DeployedServicePackagesHealthStateFilter
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedApplicationHealth'
          description: The deployed application health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetApplications/{applicationName}/$/GetReplicas:
    get:
      description: Get deployed replicas
      operationId: DeployedReplicas_Get
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeployedReplica'
                type: array
          description: The deployed replica
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetApplications/{applicationName}/$/GetServicePackages:
    get:
      description: Get deployed service packages
      operationId: DeployedServicePackages_Get
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeployedServicePackage'
                type: array
          description: The deployed service package
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetApplications/{applicationName}/$/GetServicePackages/{serviceManifestName}/$/ReportHealth:
    post:
      description: Send deployed service package health
      operationId: DeployedServicePackageHealths_Send
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the service manifest
        in: path
        name: serviceManifestName
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeployedServiceHealthReport'
        description: The report of the deployed service package health
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The deployed service package health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: deployedServicePackageHealthReport
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetApplications/{applicationName}/$/GetServicePackages/{servicePackageName}/$/GetHealth:
    get:
      description: Get deployed service package healths
      operationId: DeployedServicePackageHealths_Get
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the service package
        in: path
        name: servicePackageName
        required: true
        schema:
          type: string
      - description: The filter of the events health state
        in: query
        name: EventsHealthStateFilter
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedServicePackageHealth'
          description: The deployed service package health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetApplications/{applicationName}/$/GetServiceTypes:
    get:
      description: Get deployed service types
      operationId: DeployedServiceTypes_Get
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeployedServiceType'
                type: array
          description: The deployed service type
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetApplications/{applicationName}/$/ReportHealth:
    post:
      description: Send deployed application health
      operationId: DeployedApplicationHealths_Send
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeployedApplicationHealthReport'
        description: The report of the deployed application health
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The deployed application health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: deployedApplicationHealthReport
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetHealth:
    get:
      description: Get node healths
      operationId: NodeHealths_Get
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The filter of the events health state
        in: query
        name: EventsHealthStateFilter
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeHealth'
          description: The node health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetLoadInformation:
    get:
      description: Get node load informations
      operationId: NodeLoadInformations_Get
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeLoadInformation'
          description: The node load information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/GetPartitions/{partitionName}/$/GetReplicas/{replicaId}/$/GetDetail:
    get:
      description: Get deployed replica details
      operationId: DeployedReplicaDetails_Get
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The name of the partition
        in: path
        name: partitionName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The id of the replica
        in: path
        name: replicaId
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedReplicaDetail'
          description: The deployed replica detail
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/RemoveNodeState:
    post:
      description: Remove node states
      operationId: NodeStates_Remove
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The node state
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Nodes/{nodeName}/$/ReportHealth:
    post:
      description: Send node health
      operationId: NodeHealths_Send
      parameters:
      - description: The name of the node
        in: path
        name: nodeName
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NodeHealthReport'
        description: The report of the node health
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The node health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: nodeHealthReport
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Partitions/{partitionId}/$/GetHealth:
    get:
      description: Get partition healths
      operationId: PartitionHealths_Get
      parameters:
      - description: The id of the partition
        in: path
        name: partitionId
        required: true
        schema:
          type: string
      - description: The filter of the events health state
        in: query
        name: EventsHealthStateFilter
        schema:
          type: string
      - description: The filter of the replicas health state
        in: query
        name: ReplicasHealthStateFilter
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionHealth'
          description: The partition health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Partitions/{partitionId}/$/GetLoadInformation:
    get:
      description: Get partition load informations
      operationId: PartitionLoadInformations_Get
      parameters:
      - description: The id of the partition
        in: path
        name: partitionId
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionLoadInformation'
          description: The partition load information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Partitions/{partitionId}/$/GetReplicas:
    get:
      description: List replicas
      operationId: Replicas_List
      parameters:
      - description: The id of the partition
        in: path
        name: partitionId
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicaList'
          description: The replica list
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Partitions/{partitionId}/$/GetReplicas/{replicaId}:
    get:
      description: Get replicas
      operationId: Replicas_Get
      parameters:
      - description: The id of the partition
        in: path
        name: partitionId
        required: true
        schema:
          type: string
      - description: The id of the replica
        in: path
        name: replicaId
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replica'
          description: The replica
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Partitions/{partitionId}/$/GetReplicas/{replicaId}/$/GetHealth:
    get:
      description: Get replica healths
      operationId: ReplicaHealths_Get
      parameters:
      - description: The id of the partition
        in: path
        name: partitionId
        required: true
        schema:
          type: string
      - description: The id of the replica
        in: path
        name: replicaId
        required: true
        schema:
          type: string
      - description: The filter of the events health state
        in: query
        name: EventsHealthStateFilter
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicaHealth'
          description: The replica health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Partitions/{partitionId}/$/GetReplicas/{replicaId}/$/GetLoadInformation:
    get:
      description: Get replica load informations
      operationId: ReplicaLoadInformations_Get
      parameters:
      - description: The id of the partition
        in: path
        name: partitionId
        required: true
        schema:
          type: string
      - description: The id of the replica
        in: path
        name: replicaId
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicaLoadInformation'
          description: The replica load information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Partitions/{partitionId}/$/GetReplicas/{replicaId}/$/ReportHealth:
    post:
      description: Send replica healths
      operationId: ReplicaHealths_Send
      parameters:
      - description: The id of the partition
        in: path
        name: partitionId
        required: true
        schema:
          type: string
      - description: The id of the replica
        in: path
        name: replicaId
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReplicaHealthReport'
        description: The report of the replica health
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The replica health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: replicaHealthReport
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Partitions/{partitionId}/$/Recover:
    post:
      description: Repair partitions
      operationId: Partitions_Repair
      parameters:
      - description: The id of the partition
        in: path
        name: partitionId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The repair partition
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Partitions/{partitionId}/$/ReportHealth:
    post:
      description: Send partition health
      operationId: PartitionHealths_Send
      parameters:
      - description: The id of the partition
        in: path
        name: partitionId
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PartitionHealthReport'
        description: The report of the partition health
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The partition health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: partitionHealthReport
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Partitions/{partitionId}/$/ResetLoad:
    post:
      description: Reset partition loads
      operationId: PartitionLoads_Reset
      parameters:
      - description: The id of the partition
        in: path
        name: partitionId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The reset partition load
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Services/{serviceName}/$/Delete:
    post:
      description: Remove services
      operationId: Services_Remove
      parameters:
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The service
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Services/{serviceName}/$/GetDescription:
    get:
      description: Get service descriptions
      operationId: ServiceDescriptions_Get
      parameters:
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDescription'
          description: The service description
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Services/{serviceName}/$/GetHealth:
    get:
      description: Get service healths
      operationId: ServiceHealths_Get
      parameters:
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceHealth'
          description: The service health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Services/{serviceName}/$/GetPartitions:
    get:
      description: List partitions
      operationId: Partitions_List
      parameters:
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionList'
          description: The partitions
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Services/{serviceName}/$/GetPartitions/$/Recover:
    post:
      description: Repair partition lists
      operationId: PartitionLists_Repair
      parameters:
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The repair partition
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Services/{serviceName}/$/GetPartitions/{partitionId}:
    get:
      description: Get partitions
      operationId: Partitions_Get
      parameters:
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The id of the partition
        in: path
        name: partitionId
        required: true
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partition'
          description: The partitions
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Services/{serviceName}/$/ReportHealth:
    post:
      description: Send service healths
      operationId: ServiceHealths_Send
      parameters:
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ServiceHealthReport'
        description: The report of the service health
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The service health
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: serviceHealthReport
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /Services/{serviceName}/$/ResolvePartition:
    get:
      description: Resolve services
      operationId: Services_Resolve
      parameters:
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The type of the partition key
        in: query
        name: PartitionKeyType
        schema:
          type: integer
      - description: The value of the partition key
        in: query
        name: PartitionKeyValue
        schema:
          type: string
      - description: The version of the previous rsp
        in: query
        name: PreviousRspVersion
        schema:
          type: string
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolvedServicePartition'
          description: The partition
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-accepts:
      - application/json
  /Services/{serviceName}/$/Update:
    post:
      description: Update services
      operationId: Services_Update
      parameters:
      - description: The name of the service
        in: path
        name: serviceName
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The timeout in seconds
        in: query
        name: timeout
        schema:
          type: integer
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The version of the api
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateServiceDescription'
        description: The description of the service update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The service update description
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      x-codegen-request-body-name: updateServiceDescription
      x-content-type: '*/*'
      x-accepts:
      - application/json
components:
  parameters:
    api-version:
      description: The version of the api
      in: query
      name: api-version
      required: true
      schema:
        type: string
    timeout:
      description: The timeout in seconds
      in: query
      name: timeout
      schema:
        type: integer
        x-ms-parameter-location: client
      x-ms-parameter-location: client
  schemas:
    Application:
      description: The application
      example:
        Status: Status
        TypeName: TypeName
        Parameters:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        TypeVersion: TypeVersion
        Id: Id
        HealthState: Invalid
        Name: Name
      properties:
        HealthState:
          $ref: '#/components/schemas/HealthState'
        Id:
          type: string
        Name:
          type: string
        Parameters:
          items:
            $ref: '#/components/schemas/Application_Parameters_inner'
          type: array
        Status:
          type: string
        TypeName:
          type: string
        TypeVersion:
          type: string
      type: object
    ApplicationDescription:
      description: The description of the application
      example:
        TypeName: TypeName
        TypeVersion: TypeVersion
        ParameterList:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        Name: Name
      properties:
        Name:
          type: string
        ParameterList:
          items:
            $ref: '#/components/schemas/ApplicationDescription_ParameterList_inner'
          type: array
        TypeName:
          type: string
        TypeVersion:
          type: string
      type: object
    ApplicationHealth:
      description: The health of the application
      example:
        AggregatedHealthState: Invalid
        DeployedApplicationHealthStates:
        - AggregatedHealthState: null
          ApplicationName: ApplicationName
          NodeName: NodeName
        - AggregatedHealthState: null
          ApplicationName: ApplicationName
          NodeName: NodeName
        UnhealthyEvaluations: UnhealthyEvaluations
        HealthEvents:
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        ServiceHealthStates:
        - AggregatedHealthState: null
          ServiceName: ServiceName
        - AggregatedHealthState: null
          ServiceName: ServiceName
        Name: Name
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        DeployedApplicationHealthStates:
          items:
            $ref: '#/components/schemas/ApplicationHealth_DeployedApplicationHealthStates_inner'
          type: array
        HealthEvents:
          items:
            $ref: '#/components/schemas/HealthEvent'
          type: array
        Name:
          type: string
        ServiceHealthStates:
          items:
            $ref: '#/components/schemas/ApplicationHealth_ServiceHealthStates_inner'
          type: array
        UnhealthyEvaluations:
          type: string
      type: object
    ApplicationHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the application health
      properties:
        ServiceName:
          type: string
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: Application
    ApplicationHealthPolicy:
      description: The policy of the application health
      example:
        DefaultServiceTypeHealthPolicy:
          MaxPercentUnhealthyReplicasPerPartition: 6
          MaxPercentUnhealthyServices: 1
          MaxPercentUnhealthyPartitionsPerService: 0
        ConsiderWarningAsError: true
        MaxPercentUnhealthyDeployedApplications: 5
      properties:
        ConsiderWarningAsError:
          type: boolean
        DefaultServiceTypeHealthPolicy:
          $ref: '#/components/schemas/ApplicationHealthPolicy_DefaultServiceTypeHealthPolicy'
        MaxPercentUnhealthyDeployedApplications:
          type: integer
      type: object
    ApplicationHealthPolicyMap:
      description: The application health policy of the cluster
      example:
        DefaultServiceTypeHealthPolicy: 0
        ConsiderWarningAsError: true
        MaxPercentUnhealthyReplicasPerPartition: 5
        MaxPercentUnhealthyDeployedApplications: 6
        MaxPercentUnhealthyServices: 5
        MaxPercentUnhealthyPartitionsPerService: 1
      properties:
        ConsiderWarningAsError:
          description: The boolean of the consider warning as error
          type: boolean
        DefaultServiceTypeHealthPolicy:
          description: The policy of the default service type health
          type: integer
        MaxPercentUnhealthyDeployedApplications:
          description: The max percent of the unhealthy deployed applications
          type: integer
        MaxPercentUnhealthyPartitionsPerService:
          description: The max percent unhealthy partitions per service
          type: integer
        MaxPercentUnhealthyReplicasPerPartition:
          description: The max percent unhealthy replicas per partition
          type: integer
        MaxPercentUnhealthyServices:
          description: The policy of the default service type health
          type: integer
      type: object
    ApplicationHealthReport:
      allOf:
      - $ref: '#/components/schemas/HealthReport'
      description: The report of the application health
      example:
        RemoveWhenExpired: true
        TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
        Description: Description
        SourceId: SourceId
        SequenceNumber: SequenceNumber
        Property: Property
        HealthState: Invalid
    ApplicationList:
      description: The list of the application
      example:
        ContinuationToken: ContinuationToken
        Items:
        - Status: Status
          TypeName: TypeName
          Parameters:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          TypeVersion: TypeVersion
          Id: Id
          HealthState: Invalid
          Name: Name
        - Status: Status
          TypeName: TypeName
          Parameters:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          TypeVersion: TypeVersion
          Id: Id
          HealthState: Invalid
          Name: Name
      properties:
        ContinuationToken:
          type: string
        Items:
          items:
            $ref: '#/components/schemas/Application'
          type: array
      type: object
    ApplicationManifest:
      description: The manifest of the application
      example:
        Manifest: Manifest
      properties:
        Manifest:
          type: string
      type: object
    ApplicationType:
      description: The type of the application
      example:
        Version: Version
        DefaultParameterList:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        Name: Name
      properties:
        DefaultParameterList:
          items:
            $ref: '#/components/schemas/ApplicationType_DefaultParameterList_inner'
          type: array
        Name:
          type: string
        Version:
          type: string
      type: object
    ApplicationTypeHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the application type health
      properties:
        ApplicationTypeName:
          type: string
        MaxPercentUnhealthyApplications:
          type: integer
        TotalCount:
          type: integer
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: ApplicationType
    ApplicationUpgrade:
      description: The upgrade of the application
      example:
        DeployedApplicationHealthStates:
          DomainName: DomainName
          NodeUpgradeProgressList: NodeUpgradeProgressList
        TypeName: TypeName
        UpgradeDomainDurationInMilliseconds: UpgradeDomainDurationInMilliseconds
        NextUpgradeDomain: NextUpgradeDomain
        UpgradeState: Invalid
        TargetApplicationTypeVersion: TargetApplicationTypeVersion
        Name: Name
        StartTimestampUtc: StartTimestampUtc
        UnhealthyEvaluations: UnhealthyEvaluations
        RollingUpgradeMode: Invalid
        FailureReason: Invalid
        FailureTimestampUtc: FailureTimestampUtc
        UpgradeDurationInMilliseconds: UpgradeDurationInMilliseconds
        CurrentUpgradeDomainProgress:
          DomainName: DomainName
          NodeUpgradeProgressList: NodeUpgradeProgressList
        UpgradeDomains: UpgradeDomains
      properties:
        CurrentUpgradeDomainProgress:
          $ref: '#/components/schemas/ApplicationUpgrade_CurrentUpgradeDomainProgress'
        DeployedApplicationHealthStates:
          $ref: '#/components/schemas/ApplicationUpgrade_DeployedApplicationHealthStates'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
        FailureTimestampUtc:
          type: string
        Name:
          type: string
        NextUpgradeDomain:
          type: string
        RollingUpgradeMode:
          $ref: '#/components/schemas/RollingUpgradeMode'
        StartTimestampUtc:
          type: string
        TargetApplicationTypeVersion:
          type: string
        TypeName:
          type: string
        UnhealthyEvaluations:
          type: string
        UpgradeDomainDurationInMilliseconds:
          type: string
        UpgradeDomains:
          type: string
        UpgradeDurationInMilliseconds:
          type: string
        UpgradeState:
          $ref: '#/components/schemas/UpgradeState'
      type: object
    ApplicationsHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the applications health
      properties:
        MaxPercentUnhealthyApplications:
          type: integer
        TotalCount:
          type: integer
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: Applications
    ClusterHealth:
      description: The health of the cluster
      example:
        AggregatedHealthState: Invalid
        UnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        HealthEvents:
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        ApplicationHealthState:
        - AggregatedHealthState: null
          Name: Name
        - AggregatedHealthState: null
          Name: Name
        NodeHealthStates:
        - AggregatedHealthState: null
          Id:
            Id: Id
          Name: Name
        - AggregatedHealthState: null
          Id:
            Id: Id
          Name: Name
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        ApplicationHealthState:
          items:
            $ref: '#/components/schemas/ClusterHealth_ApplicationHealthState_inner'
          type: array
        HealthEvents:
          items:
            $ref: '#/components/schemas/HealthEvent'
          type: array
        NodeHealthStates:
          items:
            $ref: '#/components/schemas/ClusterHealth_NodeHealthStates_inner'
          type: array
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      type: object
    ClusterHealthPolicy:
      description: The policy of the cluster health
      example:
        UpgradeDomainTimeoutInMilliseconds: UpgradeDomainTimeoutInMilliseconds
        FailureAction: FailureAction
        UpgradeTimeoutInMilliseconds: UpgradeTimeoutInMilliseconds
        RollingUpgradeMode: Invalid
        ForceRestart: true
        HealthCheckStableDurationInMilliseconds: HealthCheckStableDurationInMilliseconds
        HealthCheckRetryTimeoutInMilliseconds: HealthCheckRetryTimeoutInMilliseconds
        UpgradeReplicaSetCheckTimeoutInSeconds: 0
        HealthCheckWaitDurationInMilliseconds: HealthCheckWaitDurationInMilliseconds
      properties:
        FailureAction:
          description: The action of the failure
          type: string
        ForceRestart:
          description: The flag of the force restart
          type: boolean
        HealthCheckRetryTimeoutInMilliseconds:
          description: The milliseconds of the health check retry timeout
          type: string
        HealthCheckStableDurationInMilliseconds:
          description: The milliseconds of the health check stable duration
          type: string
        HealthCheckWaitDurationInMilliseconds:
          description: The milliseconds of the health check wait duration
          type: string
        RollingUpgradeMode:
          $ref: '#/components/schemas/RollingUpgradeMode'
        UpgradeDomainTimeoutInMilliseconds:
          description: The milliseconds of the upgrade domain timeout
          type: string
        UpgradeReplicaSetCheckTimeoutInSeconds:
          description: The seconds of the upgrade replica set check timeout
          type: integer
        UpgradeTimeoutInMilliseconds:
          description: The milliseconds of the upgrade timeout
          type: string
      type: object
    ClusterHealthReport:
      allOf:
      - $ref: '#/components/schemas/HealthReport'
      description: The report of the cluster health
      example:
        RemoveWhenExpired: true
        TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
        Description: Description
        SourceId: SourceId
        SequenceNumber: SequenceNumber
        Property: Property
        HealthState: Invalid
    ClusterLoadInformation:
      description: The information of the cluster load
      example:
        LoadMetricInformation:
        - Action: Action
          ClusterCapacity: ClusterCapacity
          ActivityThreshold: 0
          MinNodeLoadId:
            Id: Id
          Name: Name
          NodeBufferPercentage: 5
          IsBalancedBefore: true
          BalancingThreshold: 6
          DeviationAfter: 1
          RemainingBufferedCapacity: RemainingBufferedCapacity
          RemainingUnbufferedCapacity: RemainingUnbufferedCapacity
          IsBalancedAfter: true
          MaxNodeLoadId:
            Id: Id
          DeviationBefore: 5
          ClusterLoad: ClusterLoad
          IsClusterCapacityViolation: true
          MaxNodeLoadValue: MaxNodeLoadValue
          MinNodeLoadValue: MinNodeLoadValue
          BufferedCapacity: BufferedCapacity
        - Action: Action
          ClusterCapacity: ClusterCapacity
          ActivityThreshold: 0
          MinNodeLoadId:
            Id: Id
          Name: Name
          NodeBufferPercentage: 5
          IsBalancedBefore: true
          BalancingThreshold: 6
          DeviationAfter: 1
          RemainingBufferedCapacity: RemainingBufferedCapacity
          RemainingUnbufferedCapacity: RemainingUnbufferedCapacity
          IsBalancedAfter: true
          MaxNodeLoadId:
            Id: Id
          DeviationBefore: 5
          ClusterLoad: ClusterLoad
          IsClusterCapacityViolation: true
          MaxNodeLoadValue: MaxNodeLoadValue
          MinNodeLoadValue: MinNodeLoadValue
          BufferedCapacity: BufferedCapacity
        LastBalancingEndTimeUtc: LastBalancingEndTimeUtc
        LastBalancingStartTimeUtc: LastBalancingStartTimeUtc
      properties:
        LastBalancingEndTimeUtc:
          type: string
        LastBalancingStartTimeUtc:
          type: string
        LoadMetricInformation:
          items:
            $ref: '#/components/schemas/LoadMetricInformation'
          type: array
      type: object
    ClusterUpgradeHealthPolicy:
      description: The upgrade health policy of the cluster
      example:
        MaxPercentDeltaUnhealthyNodes: 2
        MaxPercentUpgradeDomainDeltaUnhealthyNodes: 7
      properties:
        MaxPercentDeltaUnhealthyNodes:
          description: "The max percent of the delta unhealthy nodes, values are [0-100]"
          type: integer
        MaxPercentUpgradeDomainDeltaUnhealthyNodes:
          description: "The max percent of the upgrade domain delta unhealthy nodes,\
            \ values are [0-100]"
          type: integer
      type: object
    ClusterUpgradeProgress:
      description: The progress of the cluster upgrade
      example:
        UpgradeDomainDurationInMilliseconds: UpgradeDomainDurationInMilliseconds
        UpgradeDomainProgressAtFailure:
          DomainName: DomainName
          NodeUpgradeProgressList: NodeUpgradeProgressList
        ConfigVersion: ConfigVersion
        NextUpgradeDomain: NextUpgradeDomain
        UpgradeState: Invalid
        StartTimestampUtc: StartTimestampUtc
        UnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        RollingUpgradeMode: Invalid
        FailureReason: Invalid
        FailureTimestampUtc: FailureTimestampUtc
        UpgradeDurationInMilliseconds: UpgradeDurationInMilliseconds
        CodeVersion: CodeVersion
        CurrentUpgradeDomainProgress:
          DomainName: DomainName
          NodeUpgradeProgressList: NodeUpgradeProgressList
        UpgradeDomains:
        - UpgradeDomains
        - UpgradeDomains
      properties:
        CodeVersion:
          type: string
        ConfigVersion:
          type: string
        CurrentUpgradeDomainProgress:
          $ref: '#/components/schemas/ApplicationUpgrade_CurrentUpgradeDomainProgress'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
        FailureTimestampUtc:
          type: string
        NextUpgradeDomain:
          type: string
        RollingUpgradeMode:
          $ref: '#/components/schemas/RollingUpgradeMode'
        StartTimestampUtc:
          type: string
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
        UpgradeDomainDurationInMilliseconds:
          type: string
        UpgradeDomainProgressAtFailure:
          $ref: '#/components/schemas/ClusterUpgradeProgress_UpgradeDomainProgressAtFailure'
        UpgradeDomains:
          items:
            type: string
          type: array
        UpgradeDurationInMilliseconds:
          type: string
        UpgradeState:
          $ref: '#/components/schemas/UpgradeState'
      type: object
    CodePackageEntryPointStatistics:
      description: The statistics of the code package entry point
      example:
        LastExitCode: 7
        ContinuousActivationFailureCount: 1
        ExitCount: 5
        LastSuccessfulExitTime: LastSuccessfulExitTime
        ActivationCount: 0
        ContinuousExitFailureCount: 5
        ActivationFailureCount: 6
        LastExitTime: LastExitTime
        ExitFailureCount: 2
        LastActivationTime: LastActivationTime
        LastSuccessfulActivationTime: LastSuccessfulActivationTime
      properties:
        ActivationCount:
          type: integer
        ActivationFailureCount:
          type: integer
        ContinuousActivationFailureCount:
          type: integer
        ContinuousExitFailureCount:
          type: integer
        ExitCount:
          type: integer
        ExitFailureCount:
          type: integer
        LastActivationTime:
          type: string
        LastExitCode:
          type: integer
        LastExitTime:
          type: string
        LastSuccessfulActivationTime:
          type: string
        LastSuccessfulExitTime:
          type: string
      type: object
    CreateServiceDescription:
      description: The description of the create service
      discriminator:
        propertyName: ServiceKind
      example:
        CorrelationScheme:
          ServiceName: ServiceName
          ServiceCorrelationScheme: Invalid
        ServiceTypeName: ServiceTypeName
        ApplicationName: ApplicationName
        ServiceName: ServiceName
        PlacementConstraints: PlacementConstraints
        Flags: 0
        ServiceLoadMetrics:
          ServiceName: ServiceName
          ServiceCorrelationScheme: Invalid
        ServiceKind: Invalid
        ServicePlacementPolicies:
          ServiceName: ServiceName
          ServiceCorrelationScheme: Invalid
        PartitionDescription:
          Names:
          - Names
          - Names
          PartitionScheme: Invalid
          HighKey: HighKey
          LowKey: LowKey
          Count: 6
      properties:
        ApplicationName:
          type: string
        CorrelationScheme:
          $ref: '#/components/schemas/ServiceCorrelationDescription'
        Flags:
          type: integer
        PartitionDescription:
          $ref: '#/components/schemas/PartitionDescription'
        PlacementConstraints:
          type: string
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServiceLoadMetrics:
          $ref: '#/components/schemas/ServiceCorrelationDescription'
        ServiceName:
          type: string
        ServicePlacementPolicies:
          $ref: '#/components/schemas/ServiceCorrelationDescription'
        ServiceTypeName:
          type: string
      required:
      - ServiceKind
      type: object
    CreateServiceGroupDescription:
      description: The description of the create service group
      discriminator:
        propertyName: ServiceKind
      example:
        CorrelationScheme:
          ServiceName: ServiceName
          ServiceCorrelationScheme: Invalid
        ServiceTypeName: ServiceTypeName
        ApplicationName: ApplicationName
        ServiceName: ServiceName
        PlacementConstraints: PlacementConstraints
        Flags: 0
        ServiceLoadMetrics:
          ServiceName: ServiceName
          ServiceCorrelationScheme: Invalid
        ServiceGroupMemberDescription:
        - ServiceTypeName: ServiceTypeName
          ServiceName: ServiceName
          ServiceKind: Invalid
        - ServiceTypeName: ServiceTypeName
          ServiceName: ServiceName
          ServiceKind: Invalid
        ServiceKind: null
        ServicePlacementPolicies:
          ServiceName: ServiceName
          ServiceCorrelationScheme: Invalid
        PartitionDescription:
          Names:
          - Names
          - Names
          PartitionScheme: Invalid
          HighKey: HighKey
          LowKey: LowKey
          Count: 6
      properties:
        ApplicationName:
          type: string
        CorrelationScheme:
          $ref: '#/components/schemas/ServiceCorrelationDescription'
        Flags:
          type: integer
        PartitionDescription:
          $ref: '#/components/schemas/PartitionDescription'
        PlacementConstraints:
          type: string
        ServiceGroupMemberDescription:
          items:
            $ref: '#/components/schemas/ServiceGroupMemberDescription'
          type: array
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServiceLoadMetrics:
          $ref: '#/components/schemas/ServiceCorrelationDescription'
        ServiceName:
          type: string
        ServicePlacementPolicies:
          $ref: '#/components/schemas/ServiceCorrelationDescription'
        ServiceTypeName:
          type: string
      required:
      - ServiceKind
      type: object
    DefaultMoveCost:
      enum:
      - Zero
      - Low
      - Medium
      - High
      type: string
    DeltaNodesCheckHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the delta nodes check health
      properties:
        BaselineErrorCount:
          type: integer
        BaselineTotalCount:
          type: integer
        MaxPercentDeltaUnhealthyNodes:
          type: integer
        TotalCount:
          type: integer
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: DeltaNodesCheck
    DeployedApplication:
      description: The application of the deployed
      example:
        Status: Status
        TempDirectory: TempDirectory
        TypeName: TypeName
        WorkDirectory: WorkDirectory
        Id: Id
        LogDirectory: LogDirectory
        Name: Name
      properties:
        Id:
          type: string
        LogDirectory:
          type: string
        Name:
          type: string
        Status:
          type: string
        TempDirectory:
          type: string
        TypeName:
          type: string
        WorkDirectory:
          type: string
      type: object
    DeployedApplicationHealth:
      description: The health of the deployed application
      example:
        AggregatedHealthState: Invalid
        UnhealthyEvaluations: UnhealthyEvaluations
        HealthEvents:
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        NodeName: NodeName
        DeployedServicePackageHealthStates:
          AggregatedHealthState: null
          ApplicationName: ApplicationName
          NodeName: NodeName
          ServiceManifestName: ServiceManifestName
        Name: Name
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        DeployedServicePackageHealthStates:
          $ref: '#/components/schemas/DeployedServicePackageHealthState'
        HealthEvents:
          items:
            $ref: '#/components/schemas/HealthEvent'
          type: array
        Name:
          type: string
        NodeName:
          type: string
        UnhealthyEvaluations:
          type: string
      type: object
    DeployedApplicationHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the deployed application health
      properties:
        ApplicationName:
          type: string
        NodeName:
          type: string
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: DeployedApplication
    DeployedApplicationHealthReport:
      allOf:
      - $ref: '#/components/schemas/HealthReport'
      description: The report of the deployed application health
      example:
        RemoveWhenExpired: true
        TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
        Description: Description
        SourceId: SourceId
        SequenceNumber: SequenceNumber
        Property: Property
        HealthState: Invalid
    DeployedApplicationsHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the deployed applications health
      properties:
        MaxPercentUnhealthyDeployedApplications:
          type: integer
        TotalCount:
          type: integer
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: DeployedApplications
    DeployedCodePackage:
      description: The package of the deployed code
      example:
        Status: Status
        SetupEntryPoint:
          Status: Status
          EntryPointLocation: 9
          RunAsUserName: 4
          CodePackageEntryPointStatistics:
            LastExitCode: 7
            ContinuousActivationFailureCount: 1
            ExitCount: 5
            LastSuccessfulExitTime: LastSuccessfulExitTime
            ActivationCount: 0
            ContinuousExitFailureCount: 5
            ActivationFailureCount: 6
            LastExitTime: LastExitTime
            ExitFailureCount: 2
            LastActivationTime: LastActivationTime
            LastSuccessfulActivationTime: LastSuccessfulActivationTime
          ProcessId: 2
          NextActivationTime: 3
        MainEntryPoint:
          Status: Status
          EntryPointLocation: 9
          RunAsUserName: 4
          CodePackageEntryPointStatistics:
            LastExitCode: 7
            ContinuousActivationFailureCount: 1
            ExitCount: 5
            LastSuccessfulExitTime: LastSuccessfulExitTime
            ActivationCount: 0
            ContinuousExitFailureCount: 5
            ActivationFailureCount: 6
            LastExitTime: LastExitTime
            ExitFailureCount: 2
            LastActivationTime: LastActivationTime
            LastSuccessfulActivationTime: LastSuccessfulActivationTime
          ProcessId: 2
          NextActivationTime: 3
        HasSetupEntryPoint: true
        ServiceManifestName: ServiceManifestName
        Version: Version
        Name: Name
        RunFrequencyInterval: RunFrequencyInterval
      properties:
        HasSetupEntryPoint:
          type: boolean
        MainEntryPoint:
          $ref: '#/components/schemas/EntryPoint'
        Name:
          type: string
        RunFrequencyInterval:
          type: string
        ServiceManifestName:
          type: string
        SetupEntryPoint:
          $ref: '#/components/schemas/EntryPoint'
        Status:
          type: string
        Version:
          type: string
      type: object
    DeployedReplica:
      description: The replica of the deployed
      example:
        ServiceTypeName: ServiceTypeName
        Address: Address
        CodePackageName: CodePackageName
        ServiceManifestVersion: ServiceManifestVersion
        InstanceId: InstanceId
        ServiceManifestName: ServiceManifestName
        ServiceName: ServiceName
        ReplicaStatus: Invalid
        ReplicaRole: Invalid
        PartitionId: PartitionId
        ServiceKind: Invalid
        ReplicaId: ReplicaId
      properties:
        Address:
          type: string
        CodePackageName:
          type: string
        InstanceId:
          type: string
        PartitionId:
          type: string
        ReplicaId:
          type: string
        ReplicaRole:
          $ref: '#/components/schemas/ReplicaRole'
        ReplicaStatus:
          $ref: '#/components/schemas/ReplicaStatus'
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServiceManifestName:
          type: string
        ServiceManifestVersion:
          type: string
        ServiceName:
          type: string
        ServiceTypeName:
          type: string
      type: object
    DeployedReplicaDetail:
      description: The detail of the deployed replica
      example:
        ReadStatus: 1
        CurrentReplicatorOperation: 0
        InstanceId: InstanceId
        ServiceName: ServiceName
        ReplicatorStatus:
          Kind: 5
          ReplicationQueueStatus:
            LastSequenceNumber: LastSequenceNumber
            QueueUtilizationPercentage: QueueUtilizationPercentage
            CompletedSequenceNumber: CompletedSequenceNumber
            QueueMemorySize: QueueMemorySize
            FirstSequenceNumber: FirstSequenceNumber
            CommittedSequenceNumber: CommittedSequenceNumber
        CurrentServiceOperation: 6
        CurrentServiceOperationStartTimeUtc: CurrentServiceOperationStartTimeUtc
        PartitionId: PartitionId
        ServiceKind: Invalid
        ReplicaId: ReplicaId
        WriteStatus: 5
      properties:
        CurrentReplicatorOperation:
          type: integer
        CurrentServiceOperation:
          type: integer
        CurrentServiceOperationStartTimeUtc:
          type: string
        InstanceId:
          type: string
        PartitionId:
          type: string
        ReadStatus:
          type: integer
        ReplicaId:
          type: string
        ReplicatorStatus:
          $ref: '#/components/schemas/DeployedReplicaDetail_ReplicatorStatus'
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServiceName:
          type: string
        WriteStatus:
          type: integer
      type: object
    DeployedServiceHealthReport:
      allOf:
      - $ref: '#/components/schemas/HealthReport'
      description: The report of the deployed service package health
      example:
        RemoveWhenExpired: true
        TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
        Description: Description
        SourceId: SourceId
        SequenceNumber: SequenceNumber
        Property: Property
        HealthState: Invalid
    DeployedServicePackage:
      description: The package of the deployed service
      example:
        Status: Status
        Version: Version
        Name: Name
      properties:
        Name:
          type: string
        Status:
          type: string
        Version:
          type: string
      type: object
    DeployedServicePackageHealth:
      description: The health of the deployed service package
      example:
        AggregatedHealthState: Invalid
        ApplicationName: ApplicationName
        HealthEvents:
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        NodeName: NodeName
        ServiceManifestName: ServiceManifestName
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        ApplicationName:
          type: string
        HealthEvents:
          items:
            $ref: '#/components/schemas/HealthEvent'
          type: array
        NodeName:
          type: string
        ServiceManifestName:
          type: string
      type: object
    DeployedServicePackageHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the deployed service package health
      properties:
        ApplicationName:
          type: string
        NodeName:
          type: string
        ServiceManifestName:
          type: string
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: DeployedServicePackage
    DeployedServicePackageHealthState:
      description: The state of the deployed service package health
      example:
        AggregatedHealthState: null
        ApplicationName: ApplicationName
        NodeName: NodeName
        ServiceManifestName: ServiceManifestName
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        ApplicationName:
          type: string
        NodeName:
          type: string
        ServiceManifestName:
          type: string
      type: object
    DeployedServicePackagesHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the deployed service packages health
      properties:
        TotalCount:
          type: integer
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: DeployedServicePackages
    DeployedServiceType:
      description: The type of the deploye service
      example:
        ServiceTypeName: ServiceTypeName
        Status: Status
        CodePackageName: CodePackageName
        ServiceManifestName: ServiceManifestName
      properties:
        CodePackageName:
          type: string
        ServiceManifestName:
          type: string
        ServiceTypeName:
          type: string
        Status:
          type: string
      type: object
    DisableNode:
      description: The node
      example:
        DeactivationIntent: Pause
      properties:
        DeactivationIntent:
          enum:
          - Pause
          - Restart
          - RemoveData
          - RemoveNode
          type: string
      type: object
    EntryPoint:
      description: The point of the entry
      example:
        Status: Status
        EntryPointLocation: 9
        RunAsUserName: 4
        CodePackageEntryPointStatistics:
          LastExitCode: 7
          ContinuousActivationFailureCount: 1
          ExitCount: 5
          LastSuccessfulExitTime: LastSuccessfulExitTime
          ActivationCount: 0
          ContinuousExitFailureCount: 5
          ActivationFailureCount: 6
          LastExitTime: LastExitTime
          ExitFailureCount: 2
          LastActivationTime: LastActivationTime
          LastSuccessfulActivationTime: LastSuccessfulActivationTime
        ProcessId: 2
        NextActivationTime: 3
      properties:
        CodePackageEntryPointStatistics:
          $ref: '#/components/schemas/CodePackageEntryPointStatistics'
        EntryPointLocation:
          type: integer
        NextActivationTime:
          type: integer
        ProcessId:
          type: integer
        RunAsUserName:
          type: integer
        Status:
          type: string
      type: object
    ErrorModel:
      description: The model of the error
      example:
        Error:
          Message: Message
          Code: Code
      properties:
        Error:
          $ref: '#/components/schemas/ErrorModel_Error'
      type: object
    EventHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the event health
      properties:
        ConsiderWarningAsError:
          type: boolean
        UnhealthyEvent:
          $ref: '#/components/schemas/HealthEvent'
      x-ms-discriminator-value: Event
    FailureAction:
      enum:
      - Invalid
      - Rollback
      - Manual
      type: string
    FailureReason:
      enum:
      - Invalid
      - Interrupted
      - HealthCheck
      - UpgradeDomainTimeout
      - OverallUpgradeTimeout
      type: string
    HealthEvaluation:
      description: The evauation of the health
      discriminator:
        propertyName: Kind
      example:
        AggregatedHealthState: null
        Description: Description
        Kind: Invalid
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        Description:
          type: string
        Kind:
          enum:
          - Invalid
          - Event
          - Replicas
          - Partitions
          - DeployedServicePackages
          - DeployedApplications
          - Services
          - Nodes
          - Applications
          - SystemApplication
          - UpgradeDomainDeployedApplications
          - UpgradeDomainNodes
          - Node
          - Replica
          - Partition
          - Service
          - DeployedServicePackage
          - DeployedApplication
          - Application
          - DeltaNodesCheck
          - UpgradeDomainDeltaNodesCheck
          - ApplicationTypeApplications
          type: string
      required:
      - Kind
      type: object
    HealthEvent:
      description: The event of the health
      example:
        IsExpired: true
        RemoveWhenExpired: true
        TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
        Description: Description
        SourceUtcTimestamp: SourceUtcTimestamp
        SourceId: SourceId
        LastErrorTransitionAt: LastErrorTransitionAt
        LastOkTransitionAt: LastOkTransitionAt
        LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
        SequenceNumber: SequenceNumber
        LastWarningTransitionAt: LastWarningTransitionAt
        Property: Property
        HealthState: null
      properties:
        Description:
          type: string
        HealthState:
          $ref: '#/components/schemas/HealthState'
        IsExpired:
          type: boolean
        LastErrorTransitionAt:
          type: string
        LastModifiedUtcTimestamp:
          type: string
        LastOkTransitionAt:
          type: string
        LastWarningTransitionAt:
          type: string
        Property:
          type: string
        RemoveWhenExpired:
          type: boolean
        SequenceNumber:
          type: string
        SourceId:
          type: string
        SourceUtcTimestamp:
          type: string
        TimeToLiveInMilliSeconds:
          type: string
      type: object
    HealthReport:
      description: The report of the health
      properties:
        Description:
          type: string
        HealthState:
          $ref: '#/components/schemas/HealthState'
        Property:
          type: string
        RemoveWhenExpired:
          type: boolean
        SequenceNumber:
          type: string
        SourceId:
          type: string
        TimeToLiveInMilliSeconds:
          type: string
      type: object
    HealthState:
      enum:
      - Invalid
      - Ok
      - Warning
      - Error
      - Unknown
      type: string
    LoadMetricInformation:
      description: The information of the load metric
      example:
        Action: Action
        ClusterCapacity: ClusterCapacity
        ActivityThreshold: 0
        MinNodeLoadId:
          Id: Id
        Name: Name
        NodeBufferPercentage: 5
        IsBalancedBefore: true
        BalancingThreshold: 6
        DeviationAfter: 1
        RemainingBufferedCapacity: RemainingBufferedCapacity
        RemainingUnbufferedCapacity: RemainingUnbufferedCapacity
        IsBalancedAfter: true
        MaxNodeLoadId:
          Id: Id
        DeviationBefore: 5
        ClusterLoad: ClusterLoad
        IsClusterCapacityViolation: true
        MaxNodeLoadValue: MaxNodeLoadValue
        MinNodeLoadValue: MinNodeLoadValue
        BufferedCapacity: BufferedCapacity
      properties:
        Action:
          type: string
        ActivityThreshold:
          type: integer
        BalancingThreshold:
          type: integer
        BufferedCapacity:
          type: string
        ClusterCapacity:
          type: string
        ClusterLoad:
          type: string
        DeviationAfter:
          type: integer
        DeviationBefore:
          type: integer
        IsBalancedAfter:
          type: boolean
        IsBalancedBefore:
          type: boolean
        IsClusterCapacityViolation:
          type: boolean
        MaxNodeLoadId:
          $ref: '#/components/schemas/LoadMetricInformation_MaxNodeLoadId'
        MaxNodeLoadValue:
          type: string
        MinNodeLoadId:
          $ref: '#/components/schemas/LoadMetricInformation_MinNodeLoadId'
        MinNodeLoadValue:
          type: string
        Name:
          type: string
        NodeBufferPercentage:
          type: integer
        RemainingBufferedCapacity:
          type: string
        RemainingUnbufferedCapacity:
          type: string
      type: object
    MonitoringPolicy:
      description: The policy of the monitoring
      example:
        UpgradeDomainTimeoutInMilliseconds: UpgradeDomainTimeoutInMilliseconds
        FailureAction: FailureAction
        UpgradeTimeoutInMilliseconds: UpgradeTimeoutInMilliseconds
        HealthCheckStableDurationInMilliseconds: HealthCheckStableDurationInMilliseconds
        HealthCheckRetryTimeoutInMilliseconds: HealthCheckRetryTimeoutInMilliseconds
        HealthCheckWaitDurationInMilliseconds: HealthCheckWaitDurationInMilliseconds
      properties:
        FailureAction:
          type: string
        HealthCheckRetryTimeoutInMilliseconds:
          type: string
        HealthCheckStableDurationInMilliseconds:
          type: string
        HealthCheckWaitDurationInMilliseconds:
          type: string
        UpgradeDomainTimeoutInMilliseconds:
          type: string
        UpgradeTimeoutInMilliseconds:
          type: string
      type: object
    Node:
      description: The node
      example:
        UpgradeDomain: UpgradeDomain
        NodeUpTimeInSeconds: NodeUpTimeInSeconds
        InstanceId: InstanceId
        ConfigVersion: ConfigVersion
        FaultDomain: FaultDomain
        Name: Name
        Type: Type
        IpAddressOrFQDN: IpAddressOrFQDN
        IsSeedNode: true
        CodeVersion: CodeVersion
        Id:
          Id: Id
        NodeDeactivationInfo:
          NodeDeactivationStatus: Invalid
          NodeDeactivationIntent: Invalid
        HealthState: Invalid
        NodeStatus: Invalid
      properties:
        CodeVersion:
          type: string
        ConfigVersion:
          type: string
        FaultDomain:
          type: string
        HealthState:
          $ref: '#/components/schemas/HealthState'
        Id:
          $ref: '#/components/schemas/ClusterHealth_NodeHealthStates_inner_Id'
        InstanceId:
          type: string
        IpAddressOrFQDN:
          type: string
        IsSeedNode:
          type: boolean
        Name:
          type: string
        NodeDeactivationInfo:
          $ref: '#/components/schemas/Node_NodeDeactivationInfo'
        NodeStatus:
          enum:
          - Invalid
          - Up
          - Down
          - Enabling
          - Disabling
          - Disabled
          - Unknown
          - Removed
          type: string
        NodeUpTimeInSeconds:
          type: string
        Type:
          type: string
        UpgradeDomain:
          type: string
      type: object
    NodeHealth:
      description: The health of the node
      example:
        AggregatedHealthState: Invalid
        HealthEvents:
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        Name: Name
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        HealthEvents:
          items:
            $ref: '#/components/schemas/HealthEvent'
          type: array
        Name:
          type: string
      type: object
    NodeHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the node health
      properties:
        NodeName:
          type: string
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: Node
    NodeHealthReport:
      allOf:
      - $ref: '#/components/schemas/HealthReport'
      description: The report of the node health
      example:
        RemoveWhenExpired: true
        TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
        Description: Description
        SourceId: SourceId
        SequenceNumber: SequenceNumber
        Property: Property
        HealthState: Invalid
    NodeList:
      description: The list of the node
      example:
        ContinuationToken: ContinuationToken
        Items:
        - UpgradeDomain: UpgradeDomain
          NodeUpTimeInSeconds: NodeUpTimeInSeconds
          InstanceId: InstanceId
          ConfigVersion: ConfigVersion
          FaultDomain: FaultDomain
          Name: Name
          Type: Type
          IpAddressOrFQDN: IpAddressOrFQDN
          IsSeedNode: true
          CodeVersion: CodeVersion
          Id:
            Id: Id
          NodeDeactivationInfo:
            NodeDeactivationStatus: Invalid
            NodeDeactivationIntent: Invalid
          HealthState: Invalid
          NodeStatus: Invalid
        - UpgradeDomain: UpgradeDomain
          NodeUpTimeInSeconds: NodeUpTimeInSeconds
          InstanceId: InstanceId
          ConfigVersion: ConfigVersion
          FaultDomain: FaultDomain
          Name: Name
          Type: Type
          IpAddressOrFQDN: IpAddressOrFQDN
          IsSeedNode: true
          CodeVersion: CodeVersion
          Id:
            Id: Id
          NodeDeactivationInfo:
            NodeDeactivationStatus: Invalid
            NodeDeactivationIntent: Invalid
          HealthState: Invalid
          NodeStatus: Invalid
      properties:
        ContinuationToken:
          type: string
        Items:
          items:
            $ref: '#/components/schemas/Node'
          type: array
      type: object
    NodeLoadInformation:
      description: The information of the node load
      example:
        NodeName: NodeName
        NodeLoadMetricInformation:
          NodeBufferedCapacity: NodeBufferedCapacity
          IsCapacityViolation: true
          NodeCapacity: NodeCapacity
          NodeRemainingBufferedCapacity: NodeRemainingBufferedCapacity
          NodeRemainingCapacity: NodeRemainingCapacity
          Name: Name
          NodeLoad: NodeLoad
      properties:
        NodeLoadMetricInformation:
          $ref: '#/components/schemas/NodeLoadMetricInformation'
        NodeName:
          type: string
      type: object
    NodeLoadMetricInformation:
      description: The information of the node load metric
      example:
        NodeBufferedCapacity: NodeBufferedCapacity
        IsCapacityViolation: true
        NodeCapacity: NodeCapacity
        NodeRemainingBufferedCapacity: NodeRemainingBufferedCapacity
        NodeRemainingCapacity: NodeRemainingCapacity
        Name: Name
        NodeLoad: NodeLoad
      properties:
        IsCapacityViolation:
          type: boolean
        Name:
          type: string
        NodeBufferedCapacity:
          type: string
        NodeCapacity:
          type: string
        NodeLoad:
          type: string
        NodeRemainingBufferedCapacity:
          type: string
        NodeRemainingCapacity:
          type: string
      type: object
    NodesHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the nodes health
      properties:
        MaxPercentUnhealthyNodes:
          type: integer
        TotalCount:
          type: integer
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: Nodes
    Partition:
      description: The partition
      example:
        InstanceCount: 0
        PartitionStatus: Invalid
        MinReplicaSetSize: 6
        CurrentConfigurationEpoch:
          ConfigurationVersion: ConfigurationVersion
          DataLossVersion: DataLossVersion
        PartitionInformation:
          HighKey: HighKey
          LowKey: LowKey
          Id: Id
          ServicePartitionKind: Invalid
          Name:
          - Name
          - Name
        ServiceKind: Invalid
        TargetReplicaSetSize: 1
        HealthState: Invalid
      properties:
        CurrentConfigurationEpoch:
          $ref: '#/components/schemas/Partition_CurrentConfigurationEpoch'
        HealthState:
          $ref: '#/components/schemas/HealthState'
        InstanceCount:
          type: integer
        MinReplicaSetSize:
          type: integer
        PartitionInformation:
          $ref: '#/components/schemas/PartitionInformation'
        PartitionStatus:
          enum:
          - Invalid
          - Ready
          - NotReady
          - InQuorumLoss
          - Reconfiguring
          - Deleting
          type: string
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        TargetReplicaSetSize:
          type: integer
      type: object
    PartitionDescription:
      description: The description of the partition
      example:
        Names:
        - Names
        - Names
        PartitionScheme: Invalid
        HighKey: HighKey
        LowKey: LowKey
        Count: 6
      properties:
        Count:
          type: integer
        HighKey:
          type: string
        LowKey:
          type: string
        Names:
          items:
            type: string
          type: array
        PartitionScheme:
          $ref: '#/components/schemas/PartitionScheme'
      type: object
    PartitionHealth:
      description: The health of the partition
      example:
        AggregatedHealthState: Invalid
        HealthEvents:
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        ReplicaHealthStates:
        - AggregatedHealthState: null
          HealthEvents: 0
          PartitionId: PartitionId
          ReplicaId: ReplicaId
        - AggregatedHealthState: null
          HealthEvents: 0
          PartitionId: PartitionId
          ReplicaId: ReplicaId
        PartitionId: PartitionId
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        HealthEvents:
          items:
            $ref: '#/components/schemas/HealthEvent'
          type: array
        PartitionId:
          type: string
        ReplicaHealthStates:
          items:
            $ref: '#/components/schemas/PartitionHealth_ReplicaHealthStates_inner'
          type: array
      type: object
    PartitionHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the partition health
      properties:
        PartitionId:
          type: string
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: Partition
    PartitionHealthReport:
      allOf:
      - $ref: '#/components/schemas/HealthReport'
      description: The report of the partition health
      example:
        RemoveWhenExpired: true
        TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
        Description: Description
        SourceId: SourceId
        SequenceNumber: SequenceNumber
        Property: Property
        HealthState: Invalid
    PartitionInformation:
      description: The information of the partition
      example:
        HighKey: HighKey
        LowKey: LowKey
        Id: Id
        ServicePartitionKind: Invalid
        Name:
        - Name
        - Name
      properties:
        HighKey:
          type: string
        Id:
          type: string
        LowKey:
          type: string
        Name:
          items:
            type: string
          type: array
        ServicePartitionKind:
          enum:
          - Invalid
          - Singleton
          - Int64Range
          - Named
          type: string
      type: object
    PartitionList:
      description: The list of the partition
      example:
        ContinuationToken: ContinuationToken
        Items:
        - InstanceCount: 0
          PartitionStatus: Invalid
          MinReplicaSetSize: 6
          CurrentConfigurationEpoch:
            ConfigurationVersion: ConfigurationVersion
            DataLossVersion: DataLossVersion
          PartitionInformation:
            HighKey: HighKey
            LowKey: LowKey
            Id: Id
            ServicePartitionKind: Invalid
            Name:
            - Name
            - Name
          ServiceKind: Invalid
          TargetReplicaSetSize: 1
          HealthState: Invalid
        - InstanceCount: 0
          PartitionStatus: Invalid
          MinReplicaSetSize: 6
          CurrentConfigurationEpoch:
            ConfigurationVersion: ConfigurationVersion
            DataLossVersion: DataLossVersion
          PartitionInformation:
            HighKey: HighKey
            LowKey: LowKey
            Id: Id
            ServicePartitionKind: Invalid
            Name:
            - Name
            - Name
          ServiceKind: Invalid
          TargetReplicaSetSize: 1
          HealthState: Invalid
      properties:
        ContinuationToken:
          type: string
        Items:
          items:
            $ref: '#/components/schemas/Partition'
          type: array
      type: object
    PartitionLoadInformation:
      description: The information of the partition load
      example:
        PrimaryLoadMetricReports:
        - PrimaryLoadMetricReports
        - PrimaryLoadMetricReports
        SecondaryLoadMetricReports:
        - SecondaryLoadMetricReports
        - SecondaryLoadMetricReports
        PartitionId: PartitionId
      properties:
        PartitionId:
          type: string
        PrimaryLoadMetricReports:
          items:
            type: string
          type: array
        SecondaryLoadMetricReports:
          items:
            type: string
          type: array
      type: object
    PartitionScheme:
      enum:
      - Invalid
      - Singleton
      - UniformInt64
      - Named
      type: string
    PartitionsHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the partitions health
      properties:
        MaxPercentUnhealthyPartitionsPerService:
          type: integer
        TotalCount:
          type: integer
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: Partitions
    RegisterApplicationType:
      description: The type of the register application
      example:
        ApplicationTypeBuildPath: ApplicationTypeBuildPath
      properties:
        ApplicationTypeBuildPath:
          type: string
      type: object
    RegisterClusterPackage:
      description: The package of the register cluster
      example:
        ClusterManifestFilePath: ClusterManifestFilePath
        CodeFilePath: CodeFilePath
      properties:
        ClusterManifestFilePath:
          description: The relative path of the cluster manifest file
          type: string
        CodeFilePath:
          description: The path of the code file
          type: string
      type: object
    Replica:
      description: The replica
      example:
        LastInBuildDurationInSeconds: LastInBuildDurationInSeconds
        Address: Address
        InstanceId: InstanceId
        NodeName: NodeName
        ReplicaStatus: Invalid
        ReplicaRole: Invalid
        ServiceKind: Invalid
        HealthState: Invalid
        ReplicaId: ReplicaId
      properties:
        Address:
          type: string
        HealthState:
          $ref: '#/components/schemas/HealthState'
        InstanceId:
          type: string
        LastInBuildDurationInSeconds:
          type: string
        NodeName:
          type: string
        ReplicaId:
          type: string
        ReplicaRole:
          $ref: '#/components/schemas/ReplicaRole'
        ReplicaStatus:
          $ref: '#/components/schemas/ReplicaStatus'
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
      type: object
    ReplicaHealth:
      description: The health of the replica
      example:
        AggregatedHealthState: Invalid
        HealthEvents:
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        PartitionId: PartitionId
        ServiceKind: Invalid
        ReplicaId: ReplicaId
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        HealthEvents:
          items:
            $ref: '#/components/schemas/HealthEvent'
          type: array
        PartitionId:
          type: string
        ReplicaId:
          type: string
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
      type: object
    ReplicaHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the replica health
      properties:
        PartitionId:
          type: string
        ReplicaOrInstanceId:
          type: string
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: Replica
    ReplicaHealthReport:
      allOf:
      - $ref: '#/components/schemas/HealthReport'
      description: The report of the replica health
      example:
        RemoveWhenExpired: true
        TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
        Description: Description
        SourceId: SourceId
        SequenceNumber: SequenceNumber
        Property: Property
        HealthState: Invalid
    ReplicaList:
      description: The list of the replica
      example:
        ContinuationToken: ContinuationToken
        Items:
        - LastInBuildDurationInSeconds: LastInBuildDurationInSeconds
          Address: Address
          InstanceId: InstanceId
          NodeName: NodeName
          ReplicaStatus: Invalid
          ReplicaRole: Invalid
          ServiceKind: Invalid
          HealthState: Invalid
          ReplicaId: ReplicaId
        - LastInBuildDurationInSeconds: LastInBuildDurationInSeconds
          Address: Address
          InstanceId: InstanceId
          NodeName: NodeName
          ReplicaStatus: Invalid
          ReplicaRole: Invalid
          ServiceKind: Invalid
          HealthState: Invalid
          ReplicaId: ReplicaId
      properties:
        ContinuationToken:
          type: string
        Items:
          items:
            $ref: '#/components/schemas/Replica'
          type: array
      type: object
    ReplicaLoadInformation:
      description: The information of the replica load
      example:
        PartitionId: PartitionId
        ReplicaOrInstanceId: ReplicaOrInstanceId
        ReportedLoad:
        - ReportedLoad
        - ReportedLoad
      properties:
        PartitionId:
          type: string
        ReplicaOrInstanceId:
          type: string
        ReportedLoad:
          items:
            type: string
          type: array
      type: object
    ReplicaRole:
      enum:
      - Invalid
      - None
      - Primary
      - IdleSecondary
      - ActiveSecondary
      type: string
    ReplicaStatus:
      enum:
      - Invalid
      - InBuild
      - Standby
      - Ready
      - Down
      - Dropped
      type: string
    ReplicasHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the replicas health
      properties:
        MaxPercentUnhealthyPartitionsPerService:
          type: integer
        TotalCount:
          type: integer
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: Replicas
    ResolvedServicePartition:
      description: The partition of the resolved service
      example:
        Endpoints:
        - Address: Address
          Kind: 0
        - Address: Address
          Kind: 0
        Version: Version
        PartitionInformation:
          HighKey: HighKey
          LowKey: LowKey
          Id: Id
          ServicePartitionKind: Invalid
          Name:
          - Name
          - Name
        Name: Name
      properties:
        Endpoints:
          items:
            $ref: '#/components/schemas/ResolvedServicePartition_Endpoints_inner'
          type: array
        Name:
          type: string
        PartitionInformation:
          $ref: '#/components/schemas/PartitionInformation'
        Version:
          type: string
      type: object
    ResumeApplicationUpgrade:
      description: The upgrade of the resume application
      example:
        UpgradeDomainName: UpgradeDomainName
      properties:
        UpgradeDomainName:
          type: string
      type: object
    ResumeClusterUpgrade:
      description: The upgrade of the resume cluster
      example:
        UpgradeDomain: UpgradeDomain
      properties:
        UpgradeDomain:
          type: string
      type: object
    RollingUpgradeMode:
      enum:
      - Invalid
      - UnmonitoredAuto
      - UnmonitoredManual
      - Monitored
      type: string
    Service:
      description: The service
      example:
        TypeName: TypeName
        HasPersistedState: true
        ServiceStatus: Invalid
        ManifestVersion: ManifestVersion
        Id: Id
        IsServiceGroup: true
        ServiceKind: Invalid
        HealthState: Invalid
        Name: Name
      properties:
        HasPersistedState:
          type: boolean
        HealthState:
          $ref: '#/components/schemas/HealthState'
        Id:
          type: string
        IsServiceGroup:
          type: boolean
        ManifestVersion:
          type: string
        Name:
          type: string
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServiceStatus:
          enum:
          - Invalid
          - Active
          - Upgrading
          - Deleting
          - Creating
          - Faile
          type: string
        TypeName:
          type: string
      type: object
    ServiceCorrelationDescription:
      description: The description of the service correlation
      example:
        ServiceName: ServiceName
        ServiceCorrelationScheme: Invalid
      properties:
        ServiceCorrelationScheme:
          enum:
          - Invalid
          - Affinity
          - AlignedAffinity
          - NonAlignedAffinity
          type: string
        ServiceName:
          type: string
      type: object
    ServiceDescription:
      description: The description of the service
      discriminator:
        propertyName: ServiceKind
      example:
        CorrelationScheme:
          ServiceName: ServiceName
          ServiceCorrelationScheme: Invalid
        ServiceTypeName: ServiceTypeName
        ApplicationName: ApplicationName
        ServiceName: ServiceName
        PlacementConstraints: PlacementConstraints
        Flags: 0
        ServiceLoadMetrics:
          ServiceName: ServiceName
          ServiceCorrelationScheme: Invalid
        ServiceKind: Invalid
        ServicePlacementPolicies:
          ServiceName: ServiceName
          ServiceCorrelationScheme: Invalid
        PartitionDescription:
          Names:
          - Names
          - Names
          PartitionScheme: Invalid
          HighKey: HighKey
          LowKey: LowKey
          Count: 6
      properties:
        ApplicationName:
          type: string
        CorrelationScheme:
          $ref: '#/components/schemas/ServiceCorrelationDescription'
        Flags:
          type: integer
        PartitionDescription:
          $ref: '#/components/schemas/PartitionDescription'
        PlacementConstraints:
          type: string
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServiceLoadMetrics:
          $ref: '#/components/schemas/ServiceCorrelationDescription'
        ServiceName:
          type: string
        ServicePlacementPolicies:
          $ref: '#/components/schemas/ServiceCorrelationDescription'
        ServiceTypeName:
          type: string
      required:
      - ServiceKind
      type: object
    ServiceDescriptionTemplate:
      description: The template of the service description
      example:
        ServiceTypeName: ServiceTypeName
        ServiceName: ServiceName
      properties:
        ServiceName:
          type: string
        ServiceTypeName:
          type: string
      type: object
    ServiceGroupDescription:
      description: The description of the service group
      discriminator:
        propertyName: ServiceKind
      example:
        CorrelationScheme:
          ServiceName: ServiceName
          ServiceCorrelationScheme: Invalid
        ServiceTypeName: ServiceTypeName
        ApplicationName: ApplicationName
        ServiceName: ServiceName
        PlacementConstraints: PlacementConstraints
        Flags: 0
        ServiceLoadMetrics:
          ServiceName: ServiceName
          ServiceCorrelationScheme: Invalid
        ServiceGroupMemberDescription:
        - ServiceTypeName: ServiceTypeName
          ServiceName: ServiceName
          ServiceKind: Invalid
        - ServiceTypeName: ServiceTypeName
          ServiceName: ServiceName
          ServiceKind: Invalid
        ServiceKind: Invalid
        ServicePlacementPolicies:
          ServiceName: ServiceName
          ServiceCorrelationScheme: Invalid
        PartitionDescription:
          Names:
          - Names
          - Names
          PartitionScheme: Invalid
          HighKey: HighKey
          LowKey: LowKey
          Count: 6
      properties:
        ApplicationName:
          type: string
        CorrelationScheme:
          $ref: '#/components/schemas/ServiceCorrelationDescription'
        Flags:
          type: integer
        PartitionDescription:
          $ref: '#/components/schemas/PartitionDescription'
        PlacementConstraints:
          type: string
        ServiceGroupMemberDescription:
          items:
            $ref: '#/components/schemas/ServiceGroupMemberDescription'
          type: array
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServiceLoadMetrics:
          $ref: '#/components/schemas/ServiceCorrelationDescription'
        ServiceName:
          type: string
        ServicePlacementPolicies:
          $ref: '#/components/schemas/ServiceCorrelationDescription'
        ServiceTypeName:
          type: string
      required:
      - ServiceKind
      type: object
    ServiceGroupMember:
      description: The member of the service group
      example:
        ServiceGroupMemberDescription:
        - ServiceTypeName: ServiceTypeName
          ServiceName: ServiceName
          ServiceKind: Invalid
        - ServiceTypeName: ServiceTypeName
          ServiceName: ServiceName
          ServiceKind: Invalid
        Name: Name
      properties:
        Name:
          type: string
        ServiceGroupMemberDescription:
          items:
            $ref: '#/components/schemas/ServiceGroupMemberDescription'
          type: array
      type: object
    ServiceGroupMemberDescription:
      description: The description of the service group member
      example:
        ServiceTypeName: ServiceTypeName
        ServiceName: ServiceName
        ServiceKind: Invalid
      properties:
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServiceName:
          type: string
        ServiceTypeName:
          type: string
      type: object
    ServiceHealth:
      description: The health of the service
      example:
        AggregatedHealthState: Invalid
        PartitionHealthStates:
        - AggregatedHealthState: null
          PartitionId: PartitionId
        - AggregatedHealthState: null
          PartitionId: PartitionId
        HealthEvents:
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        - IsExpired: true
          RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          Description: Description
          SourceUtcTimestamp: SourceUtcTimestamp
          SourceId: SourceId
          LastErrorTransitionAt: LastErrorTransitionAt
          LastOkTransitionAt: LastOkTransitionAt
          LastModifiedUtcTimestamp: LastModifiedUtcTimestamp
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: LastWarningTransitionAt
          Property: Property
          HealthState: null
        Name: Name
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        HealthEvents:
          items:
            $ref: '#/components/schemas/HealthEvent'
          type: array
        Name:
          type: string
        PartitionHealthStates:
          items:
            $ref: '#/components/schemas/ServiceHealth_PartitionHealthStates_inner'
          type: array
      type: object
    ServiceHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the service health
      properties:
        ServiceName:
          type: string
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: Service
    ServiceHealthReport:
      allOf:
      - $ref: '#/components/schemas/HealthReport'
      description: The report of the service health
      example:
        RemoveWhenExpired: true
        TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
        Description: Description
        SourceId: SourceId
        SequenceNumber: SequenceNumber
        Property: Property
        HealthState: Invalid
    ServiceKind:
      enum:
      - Invalid
      - Stateless
      - Stateful
      type: string
    ServiceList:
      description: The list of the service
      example:
        ContinuationToken: ContinuationToken
        Items:
        - TypeName: TypeName
          HasPersistedState: true
          ServiceStatus: Invalid
          ManifestVersion: ManifestVersion
          Id: Id
          IsServiceGroup: true
          ServiceKind: Invalid
          HealthState: Invalid
          Name: Name
        - TypeName: TypeName
          HasPersistedState: true
          ServiceStatus: Invalid
          ManifestVersion: ManifestVersion
          Id: Id
          IsServiceGroup: true
          ServiceKind: Invalid
          HealthState: Invalid
          Name: Name
      properties:
        ContinuationToken:
          type: string
        Items:
          items:
            $ref: '#/components/schemas/Service'
          type: array
      type: object
    ServiceLoadMetricDescription:
      description: The description of the service load metric
      properties:
        Name:
          type: string
        PrimaryDefaultLoad:
          type: integer
        SecondaryDefaultLoad:
          type: integer
        ServiceLoadMetricWeight:
          enum:
          - Zero
          - Low
          - Medium
          - High
          type: string
      type: object
    ServiceManifest:
      description: The manifest of the service
      example:
        Manifest: Manifest
      properties:
        Manifest:
          type: string
      type: object
    ServicePlacementPolicyDescription:
      description: The description of the service placement policy
      properties:
        Type:
          type: string
      type: object
    ServiceType:
      description: The type of the service
      example:
        ServiceTypeDescription:
          ServiceTypeName: ServiceTypeName
          HasPersistedState: true
          PlacementConstraints: PlacementConstraints
          IsStateful: true
        ServiceManifestVersion: ServiceManifestVersion
        ServiceManifestName: ServiceManifestName
        IsServiceGroup: true
      properties:
        IsServiceGroup:
          type: boolean
        ServiceManifestName:
          type: string
        ServiceManifestVersion:
          type: string
        ServiceTypeDescription:
          $ref: '#/components/schemas/ServiceType_ServiceTypeDescription'
      type: object
    ServicesHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the services health
      properties:
        MaxPercentUnhealthyServices:
          type: integer
        ServiceTypeName:
          type: string
        TotalCount:
          type: integer
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: Services
    StartApplicationUpgrade:
      description: The description of the start application upgrade
      example:
        Parameters:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        UpgradeKind: Invalid
        ApplicationHealthPolicy:
          DefaultServiceTypeHealthPolicy:
            MaxPercentUnhealthyReplicasPerPartition: 6
            MaxPercentUnhealthyServices: 1
            MaxPercentUnhealthyPartitionsPerService: 0
          ConsiderWarningAsError: true
          MaxPercentUnhealthyDeployedApplications: 5
        RollingUpgradeMode: Invalid
        ForceRestart: true
        UpgradeReplicaSetCheckTimeoutInSeconds: 0
        MonitoringPolicy:
          UpgradeDomainTimeoutInMilliseconds: UpgradeDomainTimeoutInMilliseconds
          FailureAction: FailureAction
          UpgradeTimeoutInMilliseconds: UpgradeTimeoutInMilliseconds
          HealthCheckStableDurationInMilliseconds: HealthCheckStableDurationInMilliseconds
          HealthCheckRetryTimeoutInMilliseconds: HealthCheckRetryTimeoutInMilliseconds
          HealthCheckWaitDurationInMilliseconds: HealthCheckWaitDurationInMilliseconds
        TargetApplicationTypeVersion: TargetApplicationTypeVersion
        Name: Name
      properties:
        ApplicationHealthPolicy:
          $ref: '#/components/schemas/ApplicationHealthPolicy'
        ForceRestart:
          type: boolean
        MonitoringPolicy:
          $ref: '#/components/schemas/MonitoringPolicy'
        Name:
          type: string
        Parameters:
          items:
            $ref: '#/components/schemas/Application_Parameters_inner'
          type: array
        RollingUpgradeMode:
          $ref: '#/components/schemas/RollingUpgradeMode'
        TargetApplicationTypeVersion:
          type: string
        UpgradeKind:
          enum:
          - Invalid
          - Rolling
          type: string
        UpgradeReplicaSetCheckTimeoutInSeconds:
          type: integer
      type: object
    StartClusterUpgrade:
      description: The description of the start cluster upgrade
      example:
        ApplicationHealthPolicyMap:
          DefaultServiceTypeHealthPolicy: 0
          ConsiderWarningAsError: true
          MaxPercentUnhealthyReplicasPerPartition: 5
          MaxPercentUnhealthyDeployedApplications: 6
          MaxPercentUnhealthyServices: 5
          MaxPercentUnhealthyPartitionsPerService: 1
        ClusterUpgradeHealthPolicy:
          MaxPercentDeltaUnhealthyNodes: 2
          MaxPercentUpgradeDomainDeltaUnhealthyNodes: 7
        UpgradeKind: UpgradeKind
        RollingUpgradeMode: Invalid
        ForceRestart: true
        ConfigVersion: ConfigVersion
        CodeVersion: CodeVersion
        UpgradeReplicaSetCheckTimeoutInSeconds: 9
        MonitoringPolicy: "{}"
        EnableDeltaHealthEvaluation: true
      properties:
        ApplicationHealthPolicyMap:
          $ref: '#/components/schemas/ApplicationHealthPolicyMap'
        ClusterUpgradeHealthPolicy:
          $ref: '#/components/schemas/ClusterUpgradeHealthPolicy'
        CodeVersion:
          description: The version of the code
          type: string
        ConfigVersion:
          description: The version of the config
          type: string
        EnableDeltaHealthEvaluation:
          description: The evaluation of the enable delta health
          type: boolean
        ForceRestart:
          description: The flag of the force restart
          type: boolean
        MonitoringPolicy:
          description: The policy of the monitoring
          properties: {}
          type: object
        RollingUpgradeMode:
          $ref: '#/components/schemas/RollingUpgradeMode'
        UpgradeKind:
          description: The kind of the upgrade
          type: string
        UpgradeReplicaSetCheckTimeoutInSeconds:
          description: The seconds of the upgrade replica set check timeout
          type: integer
      type: object
    StatefulCreateServiceDescription:
      allOf:
      - $ref: '#/components/schemas/CreateServiceDescription'
      description: The description of the stateful create service
      properties:
        DefaultMoveCost:
          $ref: '#/components/schemas/DefaultMoveCost'
        HasPersistedState:
          type: boolean
        IsDefaultMoveCostSpecified:
          type: boolean
        MinReplicaSetSize:
          type: integer
        QuorumLossWaitDurationSeconds:
          type: integer
        ReplicaRestartWaitDurationSeconds:
          type: integer
        StandByReplicaKeepDurationSeconds:
          type: integer
        TargetReplicaSetSize:
          type: integer
      x-ms-discriminator-value: Stateful
    StatefulCreateServiceGroupDescription:
      allOf:
      - $ref: '#/components/schemas/CreateServiceGroupDescription'
      description: The description of the stateful create service group
      properties:
        DefaultMoveCost:
          $ref: '#/components/schemas/DefaultMoveCost'
        HasPersistedState:
          type: boolean
        IsDefaultMoveCostSpecified:
          type: boolean
        MinReplicaSetSize:
          type: integer
        QuorumLossWaitDurationSeconds:
          type: integer
        ReplicaRestartWaitDurationSeconds:
          type: integer
        StandByReplicaKeepDurationSeconds:
          type: integer
        TargetReplicaSetSize:
          type: integer
      x-ms-discriminator-value: Stateful
    StatefulServiceDescription:
      allOf:
      - $ref: '#/components/schemas/ServiceDescription'
      description: The description of the stateful service
      properties:
        DefaultMoveCost:
          $ref: '#/components/schemas/DefaultMoveCost'
        HasPersistedState:
          type: boolean
        IsDefaultMoveCostSpecified:
          type: boolean
        MinReplicaSetSize:
          type: integer
        QuorumLossWaitDurationSeconds:
          type: integer
        ReplicaRestartWaitDurationSeconds:
          type: integer
        StandByReplicaKeepDurationSeconds:
          type: integer
        TargetReplicaSetSize:
          type: integer
      x-ms-discriminator-value: Stateful
    StatefulServiceGroupDescription:
      allOf:
      - $ref: '#/components/schemas/ServiceGroupDescription'
      description: The description of the stateful service group
      properties:
        DefaultMoveCost:
          $ref: '#/components/schemas/DefaultMoveCost'
        HasPersistedState:
          type: boolean
        IsDefaultMoveCostSpecified:
          type: boolean
        MinReplicaSetSize:
          type: integer
        QuorumLossWaitDurationSeconds:
          type: integer
        ReplicaRestartWaitDurationSeconds:
          type: integer
        StandByReplicaKeepDurationSeconds:
          type: integer
        TargetReplicaSetSize:
          type: integer
      x-ms-discriminator-value: Stateful
    StatefulUpdateServiceDescription:
      allOf:
      - $ref: '#/components/schemas/UpdateServiceDescription'
      description: The description of the stateful update service
      properties:
        MinReplicaSetSize:
          type: integer
        QuorumLossWaitDurationInMilliseconds:
          type: integer
        ReplicaRestartWaitDurationInMilliseconds:
          type: integer
        StandByReplicaKeepDurationInMilliseconds:
          type: integer
        TargetReplicaSetSize:
          type: integer
      x-ms-discriminator-value: Stateful
    StatefulUpdateServiceGroupDescription:
      allOf:
      - $ref: '#/components/schemas/UpdateServiceGroupDescription'
      description: The description of the stateful update service group
      properties:
        MinReplicaSetSize:
          type: integer
        QuorumLossWaitDurationInMilliseconds:
          type: integer
        ReplicaRestartWaitDurationInMilliseconds:
          type: integer
        StandByReplicaKeepDurationInMilliseconds:
          type: integer
        TargetReplicaSetSize:
          type: integer
      x-ms-discriminator-value: Stateful
    StatelessCreateServiceDescription:
      allOf:
      - $ref: '#/components/schemas/CreateServiceDescription'
      description: The description of the stateless create service
      properties:
        InstanceCount:
          type: integer
      x-ms-discriminator-value: Stateless
    StatelessCreateServiceGroupDescription:
      allOf:
      - $ref: '#/components/schemas/CreateServiceGroupDescription'
      description: The description of the stateless create service group
      properties:
        InstanceCount:
          type: integer
      x-ms-discriminator-value: Stateless
    StatelessServiceDescription:
      allOf:
      - $ref: '#/components/schemas/ServiceDescription'
      description: The description of the stateless service
      properties:
        InstanceCount:
          type: integer
      x-ms-discriminator-value: Stateless
    StatelessServiceGroupDescription:
      allOf:
      - $ref: '#/components/schemas/ServiceGroupDescription'
      description: The description of the stateless service group
      properties:
        InstanceCount:
          type: integer
      x-ms-discriminator-value: Stateless
    StatelessUpdateServiceDescription:
      allOf:
      - $ref: '#/components/schemas/UpdateServiceDescription'
      description: The description of the stateless update service
      properties:
        InstanceCount:
          type: integer
      x-ms-discriminator-value: Stateless
    StatelessUpdateServiceGroupDescription:
      allOf:
      - $ref: '#/components/schemas/UpdateServiceGroupDescription'
      description: The description of the stateless update service group
      properties:
        InstanceCount:
          type: integer
      x-ms-discriminator-value: Stateless
    SystemApplicationHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the system application health
      properties:
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
      x-ms-discriminator-value: SystemApplication
    UnhealthyEvaluation:
      description: The evaluation of the unhealthy
      example:
        HealthEvaluation:
          AggregatedHealthState: null
          Description: Description
          Kind: Invalid
      properties:
        HealthEvaluation:
          $ref: '#/components/schemas/HealthEvaluation'
      type: object
    UnregisterApplicationType:
      description: The type of the unregister application
      example:
        ApplicationTypeVersion: ApplicationTypeVersion
      properties:
        ApplicationTypeVersion:
          type: string
      type: object
    UnregisterClusterPackage:
      description: The package of the unregister cluster
      example:
        ConfigVersion: ConfigVersion
        CodeVersion: CodeVersion
      properties:
        CodeVersion:
          description: The version of the code
          type: string
        ConfigVersion:
          description: The version of the config
          type: string
      type: object
    UpdateApplicationUpgrade:
      description: The description of the update application upgrade
      example:
        UpgradeKind: UpgradeKind
        ApplicationHealthPolicy:
          DefaultServiceTypeHealthPolicy:
            MaxPercentUnhealthyReplicasPerPartition: 6
            MaxPercentUnhealthyServices: 1
            MaxPercentUnhealthyPartitionsPerService: 0
          ConsiderWarningAsError: true
          MaxPercentUnhealthyDeployedApplications: 5
        UpdateDescription:
          UpgradeDomainTimeoutInMilliseconds: UpgradeDomainTimeoutInMilliseconds
          FailureAction: FailureAction
          UpgradeTimeoutInMilliseconds: UpgradeTimeoutInMilliseconds
          RollingUpgradeMode: null
          ForceRestart: true
          HealthCheckStableDurationInMilliseconds: HealthCheckStableDurationInMilliseconds
          HealthCheckRetryTimeoutInMilliseconds: HealthCheckRetryTimeoutInMilliseconds
          UpgradeReplicaSetCheckTimeoutInSeconds: 6
          HealthCheckWaitDurationInMilliseconds: HealthCheckWaitDurationInMilliseconds
        Name: Name
      properties:
        ApplicationHealthPolicy:
          $ref: '#/components/schemas/ApplicationHealthPolicy'
        Name:
          type: string
        UpdateDescription:
          $ref: '#/components/schemas/UpdateDescription'
        UpgradeKind:
          type: string
      type: object
    UpdateClusterUpgrade:
      description: The description of the update cluster upgrade
      example:
        ClusterHealthPolicy:
          UpgradeDomainTimeoutInMilliseconds: UpgradeDomainTimeoutInMilliseconds
          FailureAction: FailureAction
          UpgradeTimeoutInMilliseconds: UpgradeTimeoutInMilliseconds
          RollingUpgradeMode: Invalid
          ForceRestart: true
          HealthCheckStableDurationInMilliseconds: HealthCheckStableDurationInMilliseconds
          HealthCheckRetryTimeoutInMilliseconds: HealthCheckRetryTimeoutInMilliseconds
          UpgradeReplicaSetCheckTimeoutInSeconds: 0
          HealthCheckWaitDurationInMilliseconds: HealthCheckWaitDurationInMilliseconds
        UpgradeKind: UpgradeKind
        UpdateDescription:
          UpgradeDomainTimeoutInMilliseconds: UpgradeDomainTimeoutInMilliseconds
          FailureAction: FailureAction
          UpgradeTimeoutInMilliseconds: UpgradeTimeoutInMilliseconds
          RollingUpgradeMode: null
          ForceRestart: true
          HealthCheckStableDurationInMilliseconds: HealthCheckStableDurationInMilliseconds
          HealthCheckRetryTimeoutInMilliseconds: HealthCheckRetryTimeoutInMilliseconds
          UpgradeReplicaSetCheckTimeoutInSeconds: 6
          HealthCheckWaitDurationInMilliseconds: HealthCheckWaitDurationInMilliseconds
        EnableDeltaHealthEvaluations: true
      properties:
        ClusterHealthPolicy:
          $ref: '#/components/schemas/ClusterHealthPolicy'
        EnableDeltaHealthEvaluations:
          description: The evaluations of the enable delta health
          type: boolean
        UpdateDescription:
          $ref: '#/components/schemas/UpdateDescription'
        UpgradeKind:
          description: The kind of the upgrade
          type: string
      type: object
    UpdateDescription:
      description: The description of the update
      example:
        UpgradeDomainTimeoutInMilliseconds: UpgradeDomainTimeoutInMilliseconds
        FailureAction: FailureAction
        UpgradeTimeoutInMilliseconds: UpgradeTimeoutInMilliseconds
        RollingUpgradeMode: null
        ForceRestart: true
        HealthCheckStableDurationInMilliseconds: HealthCheckStableDurationInMilliseconds
        HealthCheckRetryTimeoutInMilliseconds: HealthCheckRetryTimeoutInMilliseconds
        UpgradeReplicaSetCheckTimeoutInSeconds: 6
        HealthCheckWaitDurationInMilliseconds: HealthCheckWaitDurationInMilliseconds
      properties:
        FailureAction:
          description: The action of the failure
          type: string
        ForceRestart:
          description: The flag of the force restart
          type: boolean
        HealthCheckRetryTimeoutInMilliseconds:
          description: The milliseconds of the health check retry timeout
          type: string
        HealthCheckStableDurationInMilliseconds:
          description: The seconds of the health check stable duration
          type: string
        HealthCheckWaitDurationInMilliseconds:
          description: The seconds of the health check wait duration
          type: string
        RollingUpgradeMode:
          $ref: '#/components/schemas/RollingUpgradeMode'
        UpgradeDomainTimeoutInMilliseconds:
          description: The milliseconds of the upgrade domain timeout
          type: string
        UpgradeReplicaSetCheckTimeoutInSeconds:
          description: The seconds of the upgrade replica set check timeout
          type: integer
        UpgradeTimeoutInMilliseconds:
          description: The milliseconds of the upgrade timeout
          type: string
      type: object
    UpdateServiceDescription:
      description: The description of the update service
      discriminator:
        propertyName: ServiceKind
      example:
        Flags: 0
        ServiceKind: Invalid
      properties:
        Flags:
          type: integer
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
      required:
      - ServiceKind
      type: object
    UpdateServiceGroupDescription:
      description: The description of the update service group
      discriminator:
        propertyName: ServiceKind
      example:
        Flags: 0
        ServiceKind: Invalid
      properties:
        Flags:
          type: integer
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
      required:
      - ServiceKind
      type: object
    UpgradeDomainDeltaNodesCheckHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the upgrade domain delta nodes check health
      properties:
        BaselineErrorCount:
          type: integer
        BaselineTotalCount:
          type: integer
        MaxPercentUpgradeDomainDeltaUnhealthyNodes:
          type: integer
        TotalCount:
          type: integer
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
        UpgradeDomainName:
          type: string
      x-ms-discriminator-value: UpgradeDomainDeltaNodesCheck
    UpgradeDomainDeployedApplicationsHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the upgrade domain deployed applications health
      properties:
        MaxPercentUnhealthyDeployedApplications:
          type: integer
        TotalCount:
          type: integer
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
        UpgradeDomainName:
          type: string
      x-ms-discriminator-value: UpgradeDomainDeployedApplications
    UpgradeDomainNodesHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      description: The evaluation of the upgrade domain nodes health
      properties:
        MaxPercentUnhealthyNodes:
          type: integer
        TotalCount:
          type: integer
        UnhealthyEvaluations:
          items:
            $ref: '#/components/schemas/UnhealthyEvaluation'
          type: array
        UpgradeDomainName:
          type: string
      x-ms-discriminator-value: UpgradeDomainNodes
    UpgradeState:
      enum:
      - Invalid
      - RollingBackInProgress
      - RollingBackCompleted
      - RollingForwardPending
      - RollingForwardInProgress
      - RollingForwardCompleted
      type: string
    Application_Parameters_inner:
      description: The parameters
      example:
        Value: Value
        Key: Key
      properties:
        Key:
          type: string
        Value:
          type: string
      type: object
    ApplicationDescription_ParameterList_inner:
      description: The list of the parameter
      example:
        Value: Value
        Key: Key
      properties:
        Key:
          type: string
        Value:
          type: string
      type: object
    ApplicationHealth_DeployedApplicationHealthStates_inner:
      description: The states of the deployed application health
      example:
        AggregatedHealthState: null
        ApplicationName: ApplicationName
        NodeName: NodeName
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        ApplicationName:
          type: string
        NodeName:
          type: string
      type: object
    ApplicationHealth_ServiceHealthStates_inner:
      description: The states of the service health
      example:
        AggregatedHealthState: null
        ServiceName: ServiceName
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        ServiceName:
          type: string
      type: object
    ApplicationHealthPolicy_DefaultServiceTypeHealthPolicy:
      description: The policy of the default service type health
      example:
        MaxPercentUnhealthyReplicasPerPartition: 6
        MaxPercentUnhealthyServices: 1
        MaxPercentUnhealthyPartitionsPerService: 0
      properties:
        MaxPercentUnhealthyPartitionsPerService:
          type: integer
        MaxPercentUnhealthyReplicasPerPartition:
          type: integer
        MaxPercentUnhealthyServices:
          type: integer
      type: object
    ApplicationType_DefaultParameterList_inner:
      description: The list of the default parameter
      example:
        Value: Value
        Key: Key
      properties:
        Key:
          type: string
        Value:
          type: string
      type: object
    ApplicationUpgrade_CurrentUpgradeDomainProgress:
      description: The progress of the current upgrade domain
      example:
        DomainName: DomainName
        NodeUpgradeProgressList: NodeUpgradeProgressList
      properties:
        DomainName:
          type: string
        NodeUpgradeProgressList:
          type: string
      type: object
    ApplicationUpgrade_DeployedApplicationHealthStates:
      description: The states of the deployed application health
      example:
        DomainName: DomainName
        NodeUpgradeProgressList: NodeUpgradeProgressList
      properties:
        DomainName:
          type: string
        NodeUpgradeProgressList:
          type: string
      type: object
    ClusterHealth_ApplicationHealthState_inner:
      description: The state of the application health
      example:
        AggregatedHealthState: null
        Name: Name
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        Name:
          type: string
      type: object
    ClusterHealth_NodeHealthStates_inner_Id:
      description: The id
      example:
        Id: Id
      properties:
        Id:
          type: string
      type: object
    ClusterHealth_NodeHealthStates_inner:
      description: The states of tehe node health
      example:
        AggregatedHealthState: null
        Id:
          Id: Id
        Name: Name
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        Id:
          $ref: '#/components/schemas/ClusterHealth_NodeHealthStates_inner_Id'
        Name:
          type: string
      type: object
    ClusterUpgradeProgress_UpgradeDomainProgressAtFailure:
      description: The failure of the upgrade domain progress at
      example:
        DomainName: DomainName
        NodeUpgradeProgressList: NodeUpgradeProgressList
      properties:
        DomainName:
          type: string
        NodeUpgradeProgressList:
          type: string
      type: object
    DeployedReplicaDetail_ReplicatorStatus_ReplicationQueueStatus:
      description: The status of the replication queue
      example:
        LastSequenceNumber: LastSequenceNumber
        QueueUtilizationPercentage: QueueUtilizationPercentage
        CompletedSequenceNumber: CompletedSequenceNumber
        QueueMemorySize: QueueMemorySize
        FirstSequenceNumber: FirstSequenceNumber
        CommittedSequenceNumber: CommittedSequenceNumber
      properties:
        CommittedSequenceNumber:
          type: string
        CompletedSequenceNumber:
          type: string
        FirstSequenceNumber:
          type: string
        LastSequenceNumber:
          type: string
        QueueMemorySize:
          type: string
        QueueUtilizationPercentage:
          type: string
      type: object
    DeployedReplicaDetail_ReplicatorStatus:
      description: The status of the replicator
      example:
        Kind: 5
        ReplicationQueueStatus:
          LastSequenceNumber: LastSequenceNumber
          QueueUtilizationPercentage: QueueUtilizationPercentage
          CompletedSequenceNumber: CompletedSequenceNumber
          QueueMemorySize: QueueMemorySize
          FirstSequenceNumber: FirstSequenceNumber
          CommittedSequenceNumber: CommittedSequenceNumber
      properties:
        Kind:
          type: integer
        ReplicationQueueStatus:
          $ref: '#/components/schemas/DeployedReplicaDetail_ReplicatorStatus_ReplicationQueueStatus'
      type: object
    ErrorModel_Error:
      description: The error
      example:
        Message: Message
        Code: Code
      properties:
        Code:
          type: string
        Message:
          type: string
      type: object
    LoadMetricInformation_MaxNodeLoadId:
      description: The id of the max node load
      example:
        Id: Id
      properties:
        Id:
          type: string
      type: object
    LoadMetricInformation_MinNodeLoadId:
      description: The id of the min node
      example:
        Id: Id
      properties:
        Id:
          type: string
      type: object
    Node_NodeDeactivationInfo:
      description: The info of the deactivation info
      example:
        NodeDeactivationStatus: Invalid
        NodeDeactivationIntent: Invalid
      properties:
        NodeDeactivationIntent:
          enum:
          - Invalid
          - Pause
          - Restart
          - RemoveData
          type: string
        NodeDeactivationStatus:
          enum:
          - Invalid
          - SafetyCheckInProgress
          - SafetyCheckComplete
          - Completed
          type: string
      type: object
    Partition_CurrentConfigurationEpoch:
      description: The epoch of the current configuration
      example:
        ConfigurationVersion: ConfigurationVersion
        DataLossVersion: DataLossVersion
      properties:
        ConfigurationVersion:
          type: string
        DataLossVersion:
          type: string
      type: object
    PartitionHealth_ReplicaHealthStates_inner:
      description: The states of the replica health
      example:
        AggregatedHealthState: null
        HealthEvents: 0
        PartitionId: PartitionId
        ReplicaId: ReplicaId
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        HealthEvents:
          type: integer
        PartitionId:
          type: string
        ReplicaId:
          type: string
      type: object
    ResolvedServicePartition_Endpoints_inner:
      description: The endpoints
      example:
        Address: Address
        Kind: 0
      properties:
        Address:
          type: string
        Kind:
          type: integer
      type: object
    ServiceHealth_PartitionHealthStates_inner:
      description: The states of the partition health
      example:
        AggregatedHealthState: null
        PartitionId: PartitionId
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        PartitionId:
          type: string
      type: object
    ServiceType_ServiceTypeDescription:
      description: The description of the service type
      example:
        ServiceTypeName: ServiceTypeName
        HasPersistedState: true
        PlacementConstraints: PlacementConstraints
        IsStateful: true
      properties:
        HasPersistedState:
          type: boolean
        IsStateful:
          type: boolean
        PlacementConstraints:
          type: string
        ServiceTypeName:
          type: string
      type: object
x-original-swagger-version: "2.0"

