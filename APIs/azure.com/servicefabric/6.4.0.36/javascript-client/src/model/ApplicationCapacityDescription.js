/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.4.0.36
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationMetricDescription from './ApplicationMetricDescription';

/**
 * The ApplicationCapacityDescription model module.
 * @module model/ApplicationCapacityDescription
 * @version 6.4.0.36
 */
class ApplicationCapacityDescription {
    /**
     * Constructs a new <code>ApplicationCapacityDescription</code>.
     * Describes capacity information for services of this application. This description can be used for describing the following. - Reserving the capacity for the services on the nodes - Limiting the total number of nodes that services of this application can run on - Limiting the custom capacity metrics to limit the total consumption of this metric by the services of this application
     * @alias module:model/ApplicationCapacityDescription
     */
    constructor() { 
        
        ApplicationCapacityDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['MaximumNodes'] = 0;
    }

    /**
     * Constructs a <code>ApplicationCapacityDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationCapacityDescription} obj Optional instance to populate.
     * @return {module:model/ApplicationCapacityDescription} The populated <code>ApplicationCapacityDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationCapacityDescription();

            if (data.hasOwnProperty('ApplicationMetrics')) {
                obj['ApplicationMetrics'] = ApiClient.convertToType(data['ApplicationMetrics'], [ApplicationMetricDescription]);
            }
            if (data.hasOwnProperty('MaximumNodes')) {
                obj['MaximumNodes'] = ApiClient.convertToType(data['MaximumNodes'], 'Number');
            }
            if (data.hasOwnProperty('MinimumNodes')) {
                obj['MinimumNodes'] = ApiClient.convertToType(data['MinimumNodes'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationCapacityDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationCapacityDescription</code>.
     */
    static validateJSON(data) {
        if (data['ApplicationMetrics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ApplicationMetrics'])) {
                throw new Error("Expected the field `ApplicationMetrics` to be an array in the JSON data but got " + data['ApplicationMetrics']);
            }
            // validate the optional field `ApplicationMetrics` (array)
            for (const item of data['ApplicationMetrics']) {
                ApplicationMetricDescription.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of application capacity metric description.
 * @member {Array.<module:model/ApplicationMetricDescription>} ApplicationMetrics
 */
ApplicationCapacityDescription.prototype['ApplicationMetrics'] = undefined;

/**
 * The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
 * @member {Number} MaximumNodes
 * @default 0
 */
ApplicationCapacityDescription.prototype['MaximumNodes'] = 0;

/**
 * The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
 * @member {Number} MinimumNodes
 */
ApplicationCapacityDescription.prototype['MinimumNodes'] = undefined;






export default ApplicationCapacityDescription;

