/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.4.0.36
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChaosEvent from './ChaosEvent';
import ChaosEventKind from './ChaosEventKind';

/**
 * The ExecutingFaultsChaosEvent model module.
 * @module model/ExecutingFaultsChaosEvent
 * @version 6.4.0.36
 */
class ExecutingFaultsChaosEvent {
    /**
     * Constructs a new <code>ExecutingFaultsChaosEvent</code>.
     * Describes a Chaos event that gets generated when Chaos has decided on the faults for an iteration. This Chaos event contains the details of the faults as a list of strings.
     * @alias module:model/ExecutingFaultsChaosEvent
     * @extends module:model/ChaosEvent
     * @implements module:model/ChaosEvent
     * @param kind {module:model/ChaosEventKind} 
     * @param timeStampUtc {Date} The UTC timestamp when this Chaos event was generated.
     */
    constructor(kind, timeStampUtc) { 
        ChaosEvent.initialize(this, kind, timeStampUtc);
        ExecutingFaultsChaosEvent.initialize(this, kind, timeStampUtc);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind, timeStampUtc) { 
    }

    /**
     * Constructs a <code>ExecutingFaultsChaosEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExecutingFaultsChaosEvent} obj Optional instance to populate.
     * @return {module:model/ExecutingFaultsChaosEvent} The populated <code>ExecutingFaultsChaosEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExecutingFaultsChaosEvent();
            ChaosEvent.constructFromObject(data, obj);
            ChaosEvent.constructFromObject(data, obj);

            if (data.hasOwnProperty('Faults')) {
                obj['Faults'] = ApiClient.convertToType(data['Faults'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExecutingFaultsChaosEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExecutingFaultsChaosEvent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExecutingFaultsChaosEvent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Faults'])) {
            throw new Error("Expected the field `Faults` to be an array in the JSON data but got " + data['Faults']);
        }

        return true;
    }


}

ExecutingFaultsChaosEvent.RequiredProperties = ["Kind", "TimeStampUtc"];

/**
 * List of string description of the faults that Chaos decided to execute in an iteration.
 * @member {Array.<String>} Faults
 */
ExecutingFaultsChaosEvent.prototype['Faults'] = undefined;


// Implement ChaosEvent interface:
/**
 * @member {module:model/ChaosEventKind} Kind
 */
ChaosEvent.prototype['Kind'] = undefined;
/**
 * The UTC timestamp when this Chaos event was generated.
 * @member {Date} TimeStampUtc
 */
ChaosEvent.prototype['TimeStampUtc'] = undefined;




export default ExecutingFaultsChaosEvent;

