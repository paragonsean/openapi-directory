/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.4.0.36
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class FabricEventKind.
* @enum {}
* @readonly
*/
export default class FabricEventKind {
    
        /**
         * value: "ClusterEvent"
         * @const
         */
        "ClusterEvent" = "ClusterEvent";

    
        /**
         * value: "ContainerInstanceEvent"
         * @const
         */
        "ContainerInstanceEvent" = "ContainerInstanceEvent";

    
        /**
         * value: "NodeEvent"
         * @const
         */
        "NodeEvent" = "NodeEvent";

    
        /**
         * value: "ApplicationEvent"
         * @const
         */
        "ApplicationEvent" = "ApplicationEvent";

    
        /**
         * value: "ServiceEvent"
         * @const
         */
        "ServiceEvent" = "ServiceEvent";

    
        /**
         * value: "PartitionEvent"
         * @const
         */
        "PartitionEvent" = "PartitionEvent";

    
        /**
         * value: "ReplicaEvent"
         * @const
         */
        "ReplicaEvent" = "ReplicaEvent";

    
        /**
         * value: "PartitionAnalysisEvent"
         * @const
         */
        "PartitionAnalysisEvent" = "PartitionAnalysisEvent";

    
        /**
         * value: "ApplicationCreated"
         * @const
         */
        "ApplicationCreated" = "ApplicationCreated";

    
        /**
         * value: "ApplicationDeleted"
         * @const
         */
        "ApplicationDeleted" = "ApplicationDeleted";

    
        /**
         * value: "ApplicationNewHealthReport"
         * @const
         */
        "ApplicationNewHealthReport" = "ApplicationNewHealthReport";

    
        /**
         * value: "ApplicationHealthReportExpired"
         * @const
         */
        "ApplicationHealthReportExpired" = "ApplicationHealthReportExpired";

    
        /**
         * value: "ApplicationUpgradeCompleted"
         * @const
         */
        "ApplicationUpgradeCompleted" = "ApplicationUpgradeCompleted";

    
        /**
         * value: "ApplicationUpgradeDomainCompleted"
         * @const
         */
        "ApplicationUpgradeDomainCompleted" = "ApplicationUpgradeDomainCompleted";

    
        /**
         * value: "ApplicationUpgradeRollbackCompleted"
         * @const
         */
        "ApplicationUpgradeRollbackCompleted" = "ApplicationUpgradeRollbackCompleted";

    
        /**
         * value: "ApplicationUpgradeRollbackStarted"
         * @const
         */
        "ApplicationUpgradeRollbackStarted" = "ApplicationUpgradeRollbackStarted";

    
        /**
         * value: "ApplicationUpgradeStarted"
         * @const
         */
        "ApplicationUpgradeStarted" = "ApplicationUpgradeStarted";

    
        /**
         * value: "DeployedApplicationNewHealthReport"
         * @const
         */
        "DeployedApplicationNewHealthReport" = "DeployedApplicationNewHealthReport";

    
        /**
         * value: "DeployedApplicationHealthReportExpired"
         * @const
         */
        "DeployedApplicationHealthReportExpired" = "DeployedApplicationHealthReportExpired";

    
        /**
         * value: "ApplicationProcessExited"
         * @const
         */
        "ApplicationProcessExited" = "ApplicationProcessExited";

    
        /**
         * value: "ApplicationContainerInstanceExited"
         * @const
         */
        "ApplicationContainerInstanceExited" = "ApplicationContainerInstanceExited";

    
        /**
         * value: "NodeAborted"
         * @const
         */
        "NodeAborted" = "NodeAborted";

    
        /**
         * value: "NodeAddedToCluster"
         * @const
         */
        "NodeAddedToCluster" = "NodeAddedToCluster";

    
        /**
         * value: "NodeClosed"
         * @const
         */
        "NodeClosed" = "NodeClosed";

    
        /**
         * value: "NodeDeactivateCompleted"
         * @const
         */
        "NodeDeactivateCompleted" = "NodeDeactivateCompleted";

    
        /**
         * value: "NodeDeactivateStarted"
         * @const
         */
        "NodeDeactivateStarted" = "NodeDeactivateStarted";

    
        /**
         * value: "NodeDown"
         * @const
         */
        "NodeDown" = "NodeDown";

    
        /**
         * value: "NodeNewHealthReport"
         * @const
         */
        "NodeNewHealthReport" = "NodeNewHealthReport";

    
        /**
         * value: "NodeHealthReportExpired"
         * @const
         */
        "NodeHealthReportExpired" = "NodeHealthReportExpired";

    
        /**
         * value: "NodeOpenSucceeded"
         * @const
         */
        "NodeOpenSucceeded" = "NodeOpenSucceeded";

    
        /**
         * value: "NodeOpenFailed"
         * @const
         */
        "NodeOpenFailed" = "NodeOpenFailed";

    
        /**
         * value: "NodeRemovedFromCluster"
         * @const
         */
        "NodeRemovedFromCluster" = "NodeRemovedFromCluster";

    
        /**
         * value: "NodeUp"
         * @const
         */
        "NodeUp" = "NodeUp";

    
        /**
         * value: "PartitionNewHealthReport"
         * @const
         */
        "PartitionNewHealthReport" = "PartitionNewHealthReport";

    
        /**
         * value: "PartitionHealthReportExpired"
         * @const
         */
        "PartitionHealthReportExpired" = "PartitionHealthReportExpired";

    
        /**
         * value: "PartitionReconfigured"
         * @const
         */
        "PartitionReconfigured" = "PartitionReconfigured";

    
        /**
         * value: "PartitionPrimaryMoveAnalysis"
         * @const
         */
        "PartitionPrimaryMoveAnalysis" = "PartitionPrimaryMoveAnalysis";

    
        /**
         * value: "ServiceCreated"
         * @const
         */
        "ServiceCreated" = "ServiceCreated";

    
        /**
         * value: "ServiceDeleted"
         * @const
         */
        "ServiceDeleted" = "ServiceDeleted";

    
        /**
         * value: "ServiceNewHealthReport"
         * @const
         */
        "ServiceNewHealthReport" = "ServiceNewHealthReport";

    
        /**
         * value: "ServiceHealthReportExpired"
         * @const
         */
        "ServiceHealthReportExpired" = "ServiceHealthReportExpired";

    
        /**
         * value: "DeployedServicePackageNewHealthReport"
         * @const
         */
        "DeployedServicePackageNewHealthReport" = "DeployedServicePackageNewHealthReport";

    
        /**
         * value: "DeployedServicePackageHealthReportExpired"
         * @const
         */
        "DeployedServicePackageHealthReportExpired" = "DeployedServicePackageHealthReportExpired";

    
        /**
         * value: "StatefulReplicaNewHealthReport"
         * @const
         */
        "StatefulReplicaNewHealthReport" = "StatefulReplicaNewHealthReport";

    
        /**
         * value: "StatefulReplicaHealthReportExpired"
         * @const
         */
        "StatefulReplicaHealthReportExpired" = "StatefulReplicaHealthReportExpired";

    
        /**
         * value: "StatelessReplicaNewHealthReport"
         * @const
         */
        "StatelessReplicaNewHealthReport" = "StatelessReplicaNewHealthReport";

    
        /**
         * value: "StatelessReplicaHealthReportExpired"
         * @const
         */
        "StatelessReplicaHealthReportExpired" = "StatelessReplicaHealthReportExpired";

    
        /**
         * value: "ClusterNewHealthReport"
         * @const
         */
        "ClusterNewHealthReport" = "ClusterNewHealthReport";

    
        /**
         * value: "ClusterHealthReportExpired"
         * @const
         */
        "ClusterHealthReportExpired" = "ClusterHealthReportExpired";

    
        /**
         * value: "ClusterUpgradeCompleted"
         * @const
         */
        "ClusterUpgradeCompleted" = "ClusterUpgradeCompleted";

    
        /**
         * value: "ClusterUpgradeDomainCompleted"
         * @const
         */
        "ClusterUpgradeDomainCompleted" = "ClusterUpgradeDomainCompleted";

    
        /**
         * value: "ClusterUpgradeRollbackCompleted"
         * @const
         */
        "ClusterUpgradeRollbackCompleted" = "ClusterUpgradeRollbackCompleted";

    
        /**
         * value: "ClusterUpgradeRollbackStarted"
         * @const
         */
        "ClusterUpgradeRollbackStarted" = "ClusterUpgradeRollbackStarted";

    
        /**
         * value: "ClusterUpgradeStarted"
         * @const
         */
        "ClusterUpgradeStarted" = "ClusterUpgradeStarted";

    
        /**
         * value: "ChaosStopped"
         * @const
         */
        "ChaosStopped" = "ChaosStopped";

    
        /**
         * value: "ChaosStarted"
         * @const
         */
        "ChaosStarted" = "ChaosStarted";

    
        /**
         * value: "ChaosCodePackageRestartScheduled"
         * @const
         */
        "ChaosCodePackageRestartScheduled" = "ChaosCodePackageRestartScheduled";

    
        /**
         * value: "ChaosReplicaRemovalScheduled"
         * @const
         */
        "ChaosReplicaRemovalScheduled" = "ChaosReplicaRemovalScheduled";

    
        /**
         * value: "ChaosPartitionSecondaryMoveScheduled"
         * @const
         */
        "ChaosPartitionSecondaryMoveScheduled" = "ChaosPartitionSecondaryMoveScheduled";

    
        /**
         * value: "ChaosPartitionPrimaryMoveScheduled"
         * @const
         */
        "ChaosPartitionPrimaryMoveScheduled" = "ChaosPartitionPrimaryMoveScheduled";

    
        /**
         * value: "ChaosReplicaRestartScheduled"
         * @const
         */
        "ChaosReplicaRestartScheduled" = "ChaosReplicaRestartScheduled";

    
        /**
         * value: "ChaosNodeRestartScheduled"
         * @const
         */
        "ChaosNodeRestartScheduled" = "ChaosNodeRestartScheduled";

    

    /**
    * Returns a <code>FabricEventKind</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/FabricEventKind} The enum <code>FabricEventKind</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

