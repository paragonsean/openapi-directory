/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.4.0.36
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationMetricDescription from './ApplicationMetricDescription';

/**
 * The ApplicationLoadInfo model module.
 * @module model/ApplicationLoadInfo
 * @version 6.4.0.36
 */
class ApplicationLoadInfo {
    /**
     * Constructs a new <code>ApplicationLoadInfo</code>.
     * Load Information about a Service Fabric application.
     * @alias module:model/ApplicationLoadInfo
     */
    constructor() { 
        
        ApplicationLoadInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationLoadInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationLoadInfo} obj Optional instance to populate.
     * @return {module:model/ApplicationLoadInfo} The populated <code>ApplicationLoadInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationLoadInfo();

            if (data.hasOwnProperty('ApplicationLoadMetricInformation')) {
                obj['ApplicationLoadMetricInformation'] = ApiClient.convertToType(data['ApplicationLoadMetricInformation'], [ApplicationMetricDescription]);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('MaximumNodes')) {
                obj['MaximumNodes'] = ApiClient.convertToType(data['MaximumNodes'], 'Number');
            }
            if (data.hasOwnProperty('MinimumNodes')) {
                obj['MinimumNodes'] = ApiClient.convertToType(data['MinimumNodes'], 'Number');
            }
            if (data.hasOwnProperty('NodeCount')) {
                obj['NodeCount'] = ApiClient.convertToType(data['NodeCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationLoadInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationLoadInfo</code>.
     */
    static validateJSON(data) {
        if (data['ApplicationLoadMetricInformation']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ApplicationLoadMetricInformation'])) {
                throw new Error("Expected the field `ApplicationLoadMetricInformation` to be an array in the JSON data but got " + data['ApplicationLoadMetricInformation']);
            }
            // validate the optional field `ApplicationLoadMetricInformation` (array)
            for (const item of data['ApplicationLoadMetricInformation']) {
                ApplicationMetricDescription.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }

        return true;
    }


}



/**
 * List of application capacity metric description.
 * @member {Array.<module:model/ApplicationMetricDescription>} ApplicationLoadMetricInformation
 */
ApplicationLoadInfo.prototype['ApplicationLoadMetricInformation'] = undefined;

/**
 * The identity of the application. This is an encoded representation of the application name. This is used in the REST APIs to identify the application resource. Starting in version 6.0, hierarchical names are delimited with the \"\\~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp\\~app1\" in 6.0+ and \"myapp/app1\" in previous versions.
 * @member {String} Id
 */
ApplicationLoadInfo.prototype['Id'] = undefined;

/**
 * The maximum number of nodes where this application can be instantiated. It is the number of nodes this application is allowed to span. For applications that do not have application capacity defined this value will be zero.
 * @member {Number} MaximumNodes
 */
ApplicationLoadInfo.prototype['MaximumNodes'] = undefined;

/**
 * The minimum number of nodes for this application. It is the number of nodes where Service Fabric will reserve Capacity in the cluster which equals to ReservedLoad * MinimumNodes for this Application instance. For applications that do not have application capacity defined this value will be zero.
 * @member {Number} MinimumNodes
 */
ApplicationLoadInfo.prototype['MinimumNodes'] = undefined;

/**
 * The number of nodes on which this application is instantiated. For applications that do not have application capacity defined this value will be zero.
 * @member {Number} NodeCount
 */
ApplicationLoadInfo.prototype['NodeCount'] = undefined;






export default ApplicationLoadInfo;

