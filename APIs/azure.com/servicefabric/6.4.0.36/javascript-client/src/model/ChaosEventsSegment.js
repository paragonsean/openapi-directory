/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.4.0.36
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChaosEventWrapper from './ChaosEventWrapper';

/**
 * The ChaosEventsSegment model module.
 * @module model/ChaosEventsSegment
 * @version 6.4.0.36
 */
class ChaosEventsSegment {
    /**
     * Constructs a new <code>ChaosEventsSegment</code>.
     * Contains the list of Chaos events and the continuation token to get the next segment.
     * @alias module:model/ChaosEventsSegment
     */
    constructor() { 
        
        ChaosEventsSegment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChaosEventsSegment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChaosEventsSegment} obj Optional instance to populate.
     * @return {module:model/ChaosEventsSegment} The populated <code>ChaosEventsSegment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChaosEventsSegment();

            if (data.hasOwnProperty('ContinuationToken')) {
                obj['ContinuationToken'] = ApiClient.convertToType(data['ContinuationToken'], 'String');
            }
            if (data.hasOwnProperty('History')) {
                obj['History'] = ApiClient.convertToType(data['History'], [ChaosEventWrapper]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChaosEventsSegment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChaosEventsSegment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ContinuationToken'] && !(typeof data['ContinuationToken'] === 'string' || data['ContinuationToken'] instanceof String)) {
            throw new Error("Expected the field `ContinuationToken` to be a primitive type in the JSON string but got " + data['ContinuationToken']);
        }
        if (data['History']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['History'])) {
                throw new Error("Expected the field `History` to be an array in the JSON data but got " + data['History']);
            }
            // validate the optional field `History` (array)
            for (const item of data['History']) {
                ChaosEventWrapper.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.
 * @member {String} ContinuationToken
 */
ChaosEventsSegment.prototype['ContinuationToken'] = undefined;

/**
 * An list of Chaos events that were generated during the time range passed into the GetChaosReport API call.
 * @member {Array.<module:model/ChaosEventWrapper>} History
 */
ChaosEventsSegment.prototype['History'] = undefined;






export default ChaosEventsSegment;

