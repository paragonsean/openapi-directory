/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.4.0.36
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BackupEntity from './BackupEntity';
import BackupEntityKind from './BackupEntityKind';

/**
 * The ApplicationBackupEntity model module.
 * @module model/ApplicationBackupEntity
 * @version 6.4.0.36
 */
class ApplicationBackupEntity {
    /**
     * Constructs a new <code>ApplicationBackupEntity</code>.
     * Identifies the Service Fabric application which is being backed up.
     * @alias module:model/ApplicationBackupEntity
     * @extends module:model/BackupEntity
     * @implements module:model/BackupEntity
     * @param entityKind {module:model/BackupEntityKind} 
     */
    constructor(entityKind) { 
        BackupEntity.initialize(this, entityKind);
        ApplicationBackupEntity.initialize(this, entityKind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, entityKind) { 
    }

    /**
     * Constructs a <code>ApplicationBackupEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationBackupEntity} obj Optional instance to populate.
     * @return {module:model/ApplicationBackupEntity} The populated <code>ApplicationBackupEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationBackupEntity();
            BackupEntity.constructFromObject(data, obj);
            BackupEntity.constructFromObject(data, obj);

            if (data.hasOwnProperty('ApplicationName')) {
                obj['ApplicationName'] = ApiClient.convertToType(data['ApplicationName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationBackupEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationBackupEntity</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApplicationBackupEntity.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ApplicationName'] && !(typeof data['ApplicationName'] === 'string' || data['ApplicationName'] instanceof String)) {
            throw new Error("Expected the field `ApplicationName` to be a primitive type in the JSON string but got " + data['ApplicationName']);
        }

        return true;
    }


}

ApplicationBackupEntity.RequiredProperties = ["EntityKind"];

/**
 * The name of the application, including the 'fabric:' URI scheme.
 * @member {String} ApplicationName
 */
ApplicationBackupEntity.prototype['ApplicationName'] = undefined;


// Implement BackupEntity interface:
/**
 * @member {module:model/BackupEntityKind} EntityKind
 */
BackupEntity.prototype['EntityKind'] = undefined;




export default ApplicationBackupEntity;

