/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.4.0.36
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthState from './HealthState';
import ReplicaStatus from './ReplicaStatus';
import ServiceKind from './ServiceKind';

/**
 * The ReplicaInfo model module.
 * @module model/ReplicaInfo
 * @version 6.4.0.36
 */
class ReplicaInfo {
    /**
     * Constructs a new <code>ReplicaInfo</code>.
     * Information about the identity, status, health, node name, uptime, and other details about the replica.
     * @alias module:model/ReplicaInfo
     * @param serviceKind {module:model/ServiceKind} 
     */
    constructor(serviceKind) { 
        
        ReplicaInfo.initialize(this, serviceKind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serviceKind) { 
        obj['ServiceKind'] = serviceKind;
    }

    /**
     * Constructs a <code>ReplicaInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplicaInfo} obj Optional instance to populate.
     * @return {module:model/ReplicaInfo} The populated <code>ReplicaInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplicaInfo();

            if (data.hasOwnProperty('Address')) {
                obj['Address'] = ApiClient.convertToType(data['Address'], 'String');
            }
            if (data.hasOwnProperty('HealthState')) {
                obj['HealthState'] = HealthState.constructFromObject(data['HealthState']);
            }
            if (data.hasOwnProperty('LastInBuildDurationInSeconds')) {
                obj['LastInBuildDurationInSeconds'] = ApiClient.convertToType(data['LastInBuildDurationInSeconds'], 'String');
            }
            if (data.hasOwnProperty('NodeName')) {
                obj['NodeName'] = ApiClient.convertToType(data['NodeName'], 'String');
            }
            if (data.hasOwnProperty('ReplicaStatus')) {
                obj['ReplicaStatus'] = ReplicaStatus.constructFromObject(data['ReplicaStatus']);
            }
            if (data.hasOwnProperty('ServiceKind')) {
                obj['ServiceKind'] = ServiceKind.constructFromObject(data['ServiceKind']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplicaInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplicaInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReplicaInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Address'] && !(typeof data['Address'] === 'string' || data['Address'] instanceof String)) {
            throw new Error("Expected the field `Address` to be a primitive type in the JSON string but got " + data['Address']);
        }
        // ensure the json data is a string
        if (data['LastInBuildDurationInSeconds'] && !(typeof data['LastInBuildDurationInSeconds'] === 'string' || data['LastInBuildDurationInSeconds'] instanceof String)) {
            throw new Error("Expected the field `LastInBuildDurationInSeconds` to be a primitive type in the JSON string but got " + data['LastInBuildDurationInSeconds']);
        }
        // ensure the json data is a string
        if (data['NodeName'] && !(typeof data['NodeName'] === 'string' || data['NodeName'] instanceof String)) {
            throw new Error("Expected the field `NodeName` to be a primitive type in the JSON string but got " + data['NodeName']);
        }

        return true;
    }


}

ReplicaInfo.RequiredProperties = ["ServiceKind"];

/**
 * The address the replica is listening on.
 * @member {String} Address
 */
ReplicaInfo.prototype['Address'] = undefined;

/**
 * @member {module:model/HealthState} HealthState
 */
ReplicaInfo.prototype['HealthState'] = undefined;

/**
 * The last in build duration of the replica in seconds.
 * @member {String} LastInBuildDurationInSeconds
 */
ReplicaInfo.prototype['LastInBuildDurationInSeconds'] = undefined;

/**
 * The name of a Service Fabric node.
 * @member {String} NodeName
 */
ReplicaInfo.prototype['NodeName'] = undefined;

/**
 * @member {module:model/ReplicaStatus} ReplicaStatus
 */
ReplicaInfo.prototype['ReplicaStatus'] = undefined;

/**
 * @member {module:model/ServiceKind} ServiceKind
 */
ReplicaInfo.prototype['ServiceKind'] = undefined;






export default ReplicaInfo;

