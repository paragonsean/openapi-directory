/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.4.0.36
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FailureAction from './FailureAction';
import UpgradeMode from './UpgradeMode';

/**
 * The RollingUpgradeUpdateDescription model module.
 * @module model/RollingUpgradeUpdateDescription
 * @version 6.4.0.36
 */
class RollingUpgradeUpdateDescription {
    /**
     * Constructs a new <code>RollingUpgradeUpdateDescription</code>.
     * Describes the parameters for updating a rolling upgrade of application or cluster.
     * @alias module:model/RollingUpgradeUpdateDescription
     * @param rollingUpgradeMode {module:model/UpgradeMode} 
     */
    constructor(rollingUpgradeMode) { 
        
        RollingUpgradeUpdateDescription.initialize(this, rollingUpgradeMode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, rollingUpgradeMode) { 
        obj['ForceRestart'] = false;
        obj['HealthCheckRetryTimeoutInMilliseconds'] = 'PT0H10M0S';
        obj['HealthCheckStableDurationInMilliseconds'] = 'PT0H2M0S';
        obj['HealthCheckWaitDurationInMilliseconds'] = '0';
        obj['RollingUpgradeMode'] = rollingUpgradeMode;
        obj['UpgradeDomainTimeoutInMilliseconds'] = 'P10675199DT02H48M05.4775807S';
        obj['UpgradeTimeoutInMilliseconds'] = 'P10675199DT02H48M05.4775807S';
    }

    /**
     * Constructs a <code>RollingUpgradeUpdateDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RollingUpgradeUpdateDescription} obj Optional instance to populate.
     * @return {module:model/RollingUpgradeUpdateDescription} The populated <code>RollingUpgradeUpdateDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RollingUpgradeUpdateDescription();

            if (data.hasOwnProperty('FailureAction')) {
                obj['FailureAction'] = FailureAction.constructFromObject(data['FailureAction']);
            }
            if (data.hasOwnProperty('ForceRestart')) {
                obj['ForceRestart'] = ApiClient.convertToType(data['ForceRestart'], 'Boolean');
            }
            if (data.hasOwnProperty('HealthCheckRetryTimeoutInMilliseconds')) {
                obj['HealthCheckRetryTimeoutInMilliseconds'] = ApiClient.convertToType(data['HealthCheckRetryTimeoutInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('HealthCheckStableDurationInMilliseconds')) {
                obj['HealthCheckStableDurationInMilliseconds'] = ApiClient.convertToType(data['HealthCheckStableDurationInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('HealthCheckWaitDurationInMilliseconds')) {
                obj['HealthCheckWaitDurationInMilliseconds'] = ApiClient.convertToType(data['HealthCheckWaitDurationInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('ReplicaSetCheckTimeoutInMilliseconds')) {
                obj['ReplicaSetCheckTimeoutInMilliseconds'] = ApiClient.convertToType(data['ReplicaSetCheckTimeoutInMilliseconds'], 'Number');
            }
            if (data.hasOwnProperty('RollingUpgradeMode')) {
                obj['RollingUpgradeMode'] = UpgradeMode.constructFromObject(data['RollingUpgradeMode']);
            }
            if (data.hasOwnProperty('UpgradeDomainTimeoutInMilliseconds')) {
                obj['UpgradeDomainTimeoutInMilliseconds'] = ApiClient.convertToType(data['UpgradeDomainTimeoutInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('UpgradeTimeoutInMilliseconds')) {
                obj['UpgradeTimeoutInMilliseconds'] = ApiClient.convertToType(data['UpgradeTimeoutInMilliseconds'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RollingUpgradeUpdateDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RollingUpgradeUpdateDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RollingUpgradeUpdateDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['HealthCheckRetryTimeoutInMilliseconds'] && !(typeof data['HealthCheckRetryTimeoutInMilliseconds'] === 'string' || data['HealthCheckRetryTimeoutInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `HealthCheckRetryTimeoutInMilliseconds` to be a primitive type in the JSON string but got " + data['HealthCheckRetryTimeoutInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['HealthCheckStableDurationInMilliseconds'] && !(typeof data['HealthCheckStableDurationInMilliseconds'] === 'string' || data['HealthCheckStableDurationInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `HealthCheckStableDurationInMilliseconds` to be a primitive type in the JSON string but got " + data['HealthCheckStableDurationInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['HealthCheckWaitDurationInMilliseconds'] && !(typeof data['HealthCheckWaitDurationInMilliseconds'] === 'string' || data['HealthCheckWaitDurationInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `HealthCheckWaitDurationInMilliseconds` to be a primitive type in the JSON string but got " + data['HealthCheckWaitDurationInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['UpgradeDomainTimeoutInMilliseconds'] && !(typeof data['UpgradeDomainTimeoutInMilliseconds'] === 'string' || data['UpgradeDomainTimeoutInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `UpgradeDomainTimeoutInMilliseconds` to be a primitive type in the JSON string but got " + data['UpgradeDomainTimeoutInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['UpgradeTimeoutInMilliseconds'] && !(typeof data['UpgradeTimeoutInMilliseconds'] === 'string' || data['UpgradeTimeoutInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `UpgradeTimeoutInMilliseconds` to be a primitive type in the JSON string but got " + data['UpgradeTimeoutInMilliseconds']);
        }

        return true;
    }


}

RollingUpgradeUpdateDescription.RequiredProperties = ["RollingUpgradeMode"];

/**
 * @member {module:model/FailureAction} FailureAction
 */
RollingUpgradeUpdateDescription.prototype['FailureAction'] = undefined;

/**
 * If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
 * @member {Boolean} ForceRestart
 * @default false
 */
RollingUpgradeUpdateDescription.prototype['ForceRestart'] = false;

/**
 * The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
 * @member {String} HealthCheckRetryTimeoutInMilliseconds
 * @default 'PT0H10M0S'
 */
RollingUpgradeUpdateDescription.prototype['HealthCheckRetryTimeoutInMilliseconds'] = 'PT0H10M0S';

/**
 * The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
 * @member {String} HealthCheckStableDurationInMilliseconds
 * @default 'PT0H2M0S'
 */
RollingUpgradeUpdateDescription.prototype['HealthCheckStableDurationInMilliseconds'] = 'PT0H2M0S';

/**
 * The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
 * @member {String} HealthCheckWaitDurationInMilliseconds
 * @default '0'
 */
RollingUpgradeUpdateDescription.prototype['HealthCheckWaitDurationInMilliseconds'] = '0';

/**
 * The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).
 * @member {Number} ReplicaSetCheckTimeoutInMilliseconds
 */
RollingUpgradeUpdateDescription.prototype['ReplicaSetCheckTimeoutInMilliseconds'] = undefined;

/**
 * @member {module:model/UpgradeMode} RollingUpgradeMode
 */
RollingUpgradeUpdateDescription.prototype['RollingUpgradeMode'] = undefined;

/**
 * The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
 * @member {String} UpgradeDomainTimeoutInMilliseconds
 * @default 'P10675199DT02H48M05.4775807S'
 */
RollingUpgradeUpdateDescription.prototype['UpgradeDomainTimeoutInMilliseconds'] = 'P10675199DT02H48M05.4775807S';

/**
 * The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
 * @member {String} UpgradeTimeoutInMilliseconds
 * @default 'P10675199DT02H48M05.4775807S'
 */
RollingUpgradeUpdateDescription.prototype['UpgradeTimeoutInMilliseconds'] = 'P10675199DT02H48M05.4775807S';






export default RollingUpgradeUpdateDescription;

