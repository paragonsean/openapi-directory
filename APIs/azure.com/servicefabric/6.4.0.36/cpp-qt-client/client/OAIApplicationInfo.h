/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.4.0.36
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationInfo.h
 *
 * Information about a Service Fabric application.
 */

#ifndef OAIApplicationInfo_H
#define OAIApplicationInfo_H

#include <QJsonObject>

#include "OAIApplicationDefinitionKind.h"
#include "OAIApplicationParameter.h"
#include "OAIApplicationStatus.h"
#include "OAIHealthState.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationParameter;

class OAIApplicationInfo : public OAIObject {
public:
    OAIApplicationInfo();
    OAIApplicationInfo(QString json);
    ~OAIApplicationInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApplicationDefinitionKind getApplicationDefinitionKind() const;
    void setApplicationDefinitionKind(const OAIApplicationDefinitionKind &application_definition_kind);
    bool is_application_definition_kind_Set() const;
    bool is_application_definition_kind_Valid() const;

    OAIHealthState getHealthState() const;
    void setHealthState(const OAIHealthState &health_state);
    bool is_health_state_Set() const;
    bool is_health_state_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIApplicationParameter> getParameters() const;
    void setParameters(const QList<OAIApplicationParameter> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    OAIApplicationStatus getStatus() const;
    void setStatus(const OAIApplicationStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTypeName() const;
    void setTypeName(const QString &type_name);
    bool is_type_name_Set() const;
    bool is_type_name_Valid() const;

    QString getTypeVersion() const;
    void setTypeVersion(const QString &type_version);
    bool is_type_version_Set() const;
    bool is_type_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApplicationDefinitionKind m_application_definition_kind;
    bool m_application_definition_kind_isSet;
    bool m_application_definition_kind_isValid;

    OAIHealthState m_health_state;
    bool m_health_state_isSet;
    bool m_health_state_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIApplicationParameter> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    OAIApplicationStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_type_name;
    bool m_type_name_isSet;
    bool m_type_name_isValid;

    QString m_type_version;
    bool m_type_version_isSet;
    bool m_type_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationInfo)

#endif // OAIApplicationInfo_H
