# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.backup_type import BackupType
from openapi_server.models.epoch import Epoch
from openapi_server.models.fabric_error_error import FabricErrorError
from openapi_server.models.partition_information import PartitionInformation
from openapi_server import util


class BackupInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, backup_chain_id: str=None, backup_id: str=None, backup_location: str=None, backup_type: BackupType=None, creation_time_utc: datetime=None, epoch_of_last_backup_record: Epoch=None, failure_error: FabricErrorError=None, lsn_of_last_backup_record: str=None, partition_information: PartitionInformation=None, service_manifest_version: str=None, service_name: str=None):
        """BackupInfo - a model defined in OpenAPI

        :param application_name: The application_name of this BackupInfo.
        :param backup_chain_id: The backup_chain_id of this BackupInfo.
        :param backup_id: The backup_id of this BackupInfo.
        :param backup_location: The backup_location of this BackupInfo.
        :param backup_type: The backup_type of this BackupInfo.
        :param creation_time_utc: The creation_time_utc of this BackupInfo.
        :param epoch_of_last_backup_record: The epoch_of_last_backup_record of this BackupInfo.
        :param failure_error: The failure_error of this BackupInfo.
        :param lsn_of_last_backup_record: The lsn_of_last_backup_record of this BackupInfo.
        :param partition_information: The partition_information of this BackupInfo.
        :param service_manifest_version: The service_manifest_version of this BackupInfo.
        :param service_name: The service_name of this BackupInfo.
        """
        self.openapi_types = {
            'application_name': str,
            'backup_chain_id': str,
            'backup_id': str,
            'backup_location': str,
            'backup_type': BackupType,
            'creation_time_utc': datetime,
            'epoch_of_last_backup_record': Epoch,
            'failure_error': FabricErrorError,
            'lsn_of_last_backup_record': str,
            'partition_information': PartitionInformation,
            'service_manifest_version': str,
            'service_name': str
        }

        self.attribute_map = {
            'application_name': 'ApplicationName',
            'backup_chain_id': 'BackupChainId',
            'backup_id': 'BackupId',
            'backup_location': 'BackupLocation',
            'backup_type': 'BackupType',
            'creation_time_utc': 'CreationTimeUtc',
            'epoch_of_last_backup_record': 'EpochOfLastBackupRecord',
            'failure_error': 'FailureError',
            'lsn_of_last_backup_record': 'LsnOfLastBackupRecord',
            'partition_information': 'PartitionInformation',
            'service_manifest_version': 'ServiceManifestVersion',
            'service_name': 'ServiceName'
        }

        self._application_name = application_name
        self._backup_chain_id = backup_chain_id
        self._backup_id = backup_id
        self._backup_location = backup_location
        self._backup_type = backup_type
        self._creation_time_utc = creation_time_utc
        self._epoch_of_last_backup_record = epoch_of_last_backup_record
        self._failure_error = failure_error
        self._lsn_of_last_backup_record = lsn_of_last_backup_record
        self._partition_information = partition_information
        self._service_manifest_version = service_manifest_version
        self._service_name = service_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackupInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackupInfo of this BackupInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this BackupInfo.

        Name of the Service Fabric application this partition backup belongs to.

        :return: The application_name of this BackupInfo.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this BackupInfo.

        Name of the Service Fabric application this partition backup belongs to.

        :param application_name: The application_name of this BackupInfo.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def backup_chain_id(self):
        """Gets the backup_chain_id of this BackupInfo.

        Unique backup chain ID. All backups part of the same chain has the same backup chain id. A backup chain is comprised of 1 full backup and multiple incremental backups.

        :return: The backup_chain_id of this BackupInfo.
        :rtype: str
        """
        return self._backup_chain_id

    @backup_chain_id.setter
    def backup_chain_id(self, backup_chain_id):
        """Sets the backup_chain_id of this BackupInfo.

        Unique backup chain ID. All backups part of the same chain has the same backup chain id. A backup chain is comprised of 1 full backup and multiple incremental backups.

        :param backup_chain_id: The backup_chain_id of this BackupInfo.
        :type backup_chain_id: str
        """

        self._backup_chain_id = backup_chain_id

    @property
    def backup_id(self):
        """Gets the backup_id of this BackupInfo.

        Unique backup ID .

        :return: The backup_id of this BackupInfo.
        :rtype: str
        """
        return self._backup_id

    @backup_id.setter
    def backup_id(self, backup_id):
        """Sets the backup_id of this BackupInfo.

        Unique backup ID .

        :param backup_id: The backup_id of this BackupInfo.
        :type backup_id: str
        """

        self._backup_id = backup_id

    @property
    def backup_location(self):
        """Gets the backup_location of this BackupInfo.

        Location of the backup, relative to the backup store.

        :return: The backup_location of this BackupInfo.
        :rtype: str
        """
        return self._backup_location

    @backup_location.setter
    def backup_location(self, backup_location):
        """Sets the backup_location of this BackupInfo.

        Location of the backup, relative to the backup store.

        :param backup_location: The backup_location of this BackupInfo.
        :type backup_location: str
        """

        self._backup_location = backup_location

    @property
    def backup_type(self):
        """Gets the backup_type of this BackupInfo.


        :return: The backup_type of this BackupInfo.
        :rtype: BackupType
        """
        return self._backup_type

    @backup_type.setter
    def backup_type(self, backup_type):
        """Sets the backup_type of this BackupInfo.


        :param backup_type: The backup_type of this BackupInfo.
        :type backup_type: BackupType
        """

        self._backup_type = backup_type

    @property
    def creation_time_utc(self):
        """Gets the creation_time_utc of this BackupInfo.

        The date time when this backup was taken.

        :return: The creation_time_utc of this BackupInfo.
        :rtype: datetime
        """
        return self._creation_time_utc

    @creation_time_utc.setter
    def creation_time_utc(self, creation_time_utc):
        """Sets the creation_time_utc of this BackupInfo.

        The date time when this backup was taken.

        :param creation_time_utc: The creation_time_utc of this BackupInfo.
        :type creation_time_utc: datetime
        """

        self._creation_time_utc = creation_time_utc

    @property
    def epoch_of_last_backup_record(self):
        """Gets the epoch_of_last_backup_record of this BackupInfo.


        :return: The epoch_of_last_backup_record of this BackupInfo.
        :rtype: Epoch
        """
        return self._epoch_of_last_backup_record

    @epoch_of_last_backup_record.setter
    def epoch_of_last_backup_record(self, epoch_of_last_backup_record):
        """Sets the epoch_of_last_backup_record of this BackupInfo.


        :param epoch_of_last_backup_record: The epoch_of_last_backup_record of this BackupInfo.
        :type epoch_of_last_backup_record: Epoch
        """

        self._epoch_of_last_backup_record = epoch_of_last_backup_record

    @property
    def failure_error(self):
        """Gets the failure_error of this BackupInfo.


        :return: The failure_error of this BackupInfo.
        :rtype: FabricErrorError
        """
        return self._failure_error

    @failure_error.setter
    def failure_error(self, failure_error):
        """Sets the failure_error of this BackupInfo.


        :param failure_error: The failure_error of this BackupInfo.
        :type failure_error: FabricErrorError
        """

        self._failure_error = failure_error

    @property
    def lsn_of_last_backup_record(self):
        """Gets the lsn_of_last_backup_record of this BackupInfo.

        LSN of the last record in this backup.

        :return: The lsn_of_last_backup_record of this BackupInfo.
        :rtype: str
        """
        return self._lsn_of_last_backup_record

    @lsn_of_last_backup_record.setter
    def lsn_of_last_backup_record(self, lsn_of_last_backup_record):
        """Sets the lsn_of_last_backup_record of this BackupInfo.

        LSN of the last record in this backup.

        :param lsn_of_last_backup_record: The lsn_of_last_backup_record of this BackupInfo.
        :type lsn_of_last_backup_record: str
        """

        self._lsn_of_last_backup_record = lsn_of_last_backup_record

    @property
    def partition_information(self):
        """Gets the partition_information of this BackupInfo.


        :return: The partition_information of this BackupInfo.
        :rtype: PartitionInformation
        """
        return self._partition_information

    @partition_information.setter
    def partition_information(self, partition_information):
        """Sets the partition_information of this BackupInfo.


        :param partition_information: The partition_information of this BackupInfo.
        :type partition_information: PartitionInformation
        """

        self._partition_information = partition_information

    @property
    def service_manifest_version(self):
        """Gets the service_manifest_version of this BackupInfo.

        Manifest Version of the service this partition backup belongs to.

        :return: The service_manifest_version of this BackupInfo.
        :rtype: str
        """
        return self._service_manifest_version

    @service_manifest_version.setter
    def service_manifest_version(self, service_manifest_version):
        """Sets the service_manifest_version of this BackupInfo.

        Manifest Version of the service this partition backup belongs to.

        :param service_manifest_version: The service_manifest_version of this BackupInfo.
        :type service_manifest_version: str
        """

        self._service_manifest_version = service_manifest_version

    @property
    def service_name(self):
        """Gets the service_name of this BackupInfo.

        Name of the Service Fabric service this partition backup belongs to.

        :return: The service_name of this BackupInfo.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this BackupInfo.

        Name of the Service Fabric service this partition backup belongs to.

        :param service_name: The service_name of this BackupInfo.
        :type service_name: str
        """

        self._service_name = service_name
