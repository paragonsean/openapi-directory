# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_parameter import ApplicationParameter
from openapi_server.models.application_type_definition_kind import ApplicationTypeDefinitionKind
from openapi_server.models.application_type_status import ApplicationTypeStatus
from openapi_server import util


class ApplicationTypeInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_type_definition_kind: ApplicationTypeDefinitionKind=None, default_parameter_list: List[ApplicationParameter]=None, name: str=None, status: ApplicationTypeStatus=None, status_details: str=None, version: str=None):
        """ApplicationTypeInfo - a model defined in OpenAPI

        :param application_type_definition_kind: The application_type_definition_kind of this ApplicationTypeInfo.
        :param default_parameter_list: The default_parameter_list of this ApplicationTypeInfo.
        :param name: The name of this ApplicationTypeInfo.
        :param status: The status of this ApplicationTypeInfo.
        :param status_details: The status_details of this ApplicationTypeInfo.
        :param version: The version of this ApplicationTypeInfo.
        """
        self.openapi_types = {
            'application_type_definition_kind': ApplicationTypeDefinitionKind,
            'default_parameter_list': List[ApplicationParameter],
            'name': str,
            'status': ApplicationTypeStatus,
            'status_details': str,
            'version': str
        }

        self.attribute_map = {
            'application_type_definition_kind': 'ApplicationTypeDefinitionKind',
            'default_parameter_list': 'DefaultParameterList',
            'name': 'Name',
            'status': 'Status',
            'status_details': 'StatusDetails',
            'version': 'Version'
        }

        self._application_type_definition_kind = application_type_definition_kind
        self._default_parameter_list = default_parameter_list
        self._name = name
        self._status = status
        self._status_details = status_details
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationTypeInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationTypeInfo of this ApplicationTypeInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_type_definition_kind(self):
        """Gets the application_type_definition_kind of this ApplicationTypeInfo.


        :return: The application_type_definition_kind of this ApplicationTypeInfo.
        :rtype: ApplicationTypeDefinitionKind
        """
        return self._application_type_definition_kind

    @application_type_definition_kind.setter
    def application_type_definition_kind(self, application_type_definition_kind):
        """Sets the application_type_definition_kind of this ApplicationTypeInfo.


        :param application_type_definition_kind: The application_type_definition_kind of this ApplicationTypeInfo.
        :type application_type_definition_kind: ApplicationTypeDefinitionKind
        """

        self._application_type_definition_kind = application_type_definition_kind

    @property
    def default_parameter_list(self):
        """Gets the default_parameter_list of this ApplicationTypeInfo.

        List of application type parameters that can be overridden when creating or updating the application.

        :return: The default_parameter_list of this ApplicationTypeInfo.
        :rtype: List[ApplicationParameter]
        """
        return self._default_parameter_list

    @default_parameter_list.setter
    def default_parameter_list(self, default_parameter_list):
        """Sets the default_parameter_list of this ApplicationTypeInfo.

        List of application type parameters that can be overridden when creating or updating the application.

        :param default_parameter_list: The default_parameter_list of this ApplicationTypeInfo.
        :type default_parameter_list: List[ApplicationParameter]
        """

        self._default_parameter_list = default_parameter_list

    @property
    def name(self):
        """Gets the name of this ApplicationTypeInfo.

        The application type name as defined in the application manifest.

        :return: The name of this ApplicationTypeInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApplicationTypeInfo.

        The application type name as defined in the application manifest.

        :param name: The name of this ApplicationTypeInfo.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this ApplicationTypeInfo.


        :return: The status of this ApplicationTypeInfo.
        :rtype: ApplicationTypeStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApplicationTypeInfo.


        :param status: The status of this ApplicationTypeInfo.
        :type status: ApplicationTypeStatus
        """

        self._status = status

    @property
    def status_details(self):
        """Gets the status_details of this ApplicationTypeInfo.

        Additional detailed information about the status of the application type.

        :return: The status_details of this ApplicationTypeInfo.
        :rtype: str
        """
        return self._status_details

    @status_details.setter
    def status_details(self, status_details):
        """Sets the status_details of this ApplicationTypeInfo.

        Additional detailed information about the status of the application type.

        :param status_details: The status_details of this ApplicationTypeInfo.
        :type status_details: str
        """

        self._status_details = status_details

    @property
    def version(self):
        """Gets the version of this ApplicationTypeInfo.

        The version of the application type as defined in the application manifest.

        :return: The version of this ApplicationTypeInfo.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ApplicationTypeInfo.

        The version of the application type as defined in the application manifest.

        :param version: The version of this ApplicationTypeInfo.
        :type version: str
        """

        self._version = version
