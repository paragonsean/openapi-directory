# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.property_batch_info import PropertyBatchInfo
from openapi_server.models.property_batch_info_kind import PropertyBatchInfoKind
from openapi_server import util


class FailedPropertyBatchInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_message: str=None, operation_index: int=None, kind: PropertyBatchInfoKind=None):
        """FailedPropertyBatchInfo - a model defined in OpenAPI

        :param error_message: The error_message of this FailedPropertyBatchInfo.
        :param operation_index: The operation_index of this FailedPropertyBatchInfo.
        :param kind: The kind of this FailedPropertyBatchInfo.
        """
        self.openapi_types = {
            'error_message': str,
            'operation_index': int,
            'kind': PropertyBatchInfoKind
        }

        self.attribute_map = {
            'error_message': 'ErrorMessage',
            'operation_index': 'OperationIndex',
            'kind': 'Kind'
        }

        self._error_message = error_message
        self._operation_index = operation_index
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailedPropertyBatchInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailedPropertyBatchInfo of this FailedPropertyBatchInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_message(self):
        """Gets the error_message of this FailedPropertyBatchInfo.

        The error message of the failed operation. Describes the exception thrown due to the first unsuccessful operation in the property batch.

        :return: The error_message of this FailedPropertyBatchInfo.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this FailedPropertyBatchInfo.

        The error message of the failed operation. Describes the exception thrown due to the first unsuccessful operation in the property batch.

        :param error_message: The error_message of this FailedPropertyBatchInfo.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def operation_index(self):
        """Gets the operation_index of this FailedPropertyBatchInfo.

        The index of the unsuccessful operation in the property batch.

        :return: The operation_index of this FailedPropertyBatchInfo.
        :rtype: int
        """
        return self._operation_index

    @operation_index.setter
    def operation_index(self, operation_index):
        """Sets the operation_index of this FailedPropertyBatchInfo.

        The index of the unsuccessful operation in the property batch.

        :param operation_index: The operation_index of this FailedPropertyBatchInfo.
        :type operation_index: int
        """

        self._operation_index = operation_index

    @property
    def kind(self):
        """Gets the kind of this FailedPropertyBatchInfo.


        :return: The kind of this FailedPropertyBatchInfo.
        :rtype: PropertyBatchInfoKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this FailedPropertyBatchInfo.


        :param kind: The kind of this FailedPropertyBatchInfo.
        :type kind: PropertyBatchInfoKind
        """
        if kind is None:
            raise ValueError("Invalid value for `kind`, must not be `None`")

        self._kind = kind
