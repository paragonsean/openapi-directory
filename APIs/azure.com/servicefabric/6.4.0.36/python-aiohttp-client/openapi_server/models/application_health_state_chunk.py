# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployed_application_health_state_chunk_list import DeployedApplicationHealthStateChunkList
from openapi_server.models.health_state import HealthState
from openapi_server.models.service_health_state_chunk_list import ServiceHealthStateChunkList
from openapi_server import util


class ApplicationHealthStateChunk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, application_type_name: str=None, deployed_application_health_state_chunks: DeployedApplicationHealthStateChunkList=None, service_health_state_chunks: ServiceHealthStateChunkList=None, health_state: HealthState=None):
        """ApplicationHealthStateChunk - a model defined in OpenAPI

        :param application_name: The application_name of this ApplicationHealthStateChunk.
        :param application_type_name: The application_type_name of this ApplicationHealthStateChunk.
        :param deployed_application_health_state_chunks: The deployed_application_health_state_chunks of this ApplicationHealthStateChunk.
        :param service_health_state_chunks: The service_health_state_chunks of this ApplicationHealthStateChunk.
        :param health_state: The health_state of this ApplicationHealthStateChunk.
        """
        self.openapi_types = {
            'application_name': str,
            'application_type_name': str,
            'deployed_application_health_state_chunks': DeployedApplicationHealthStateChunkList,
            'service_health_state_chunks': ServiceHealthStateChunkList,
            'health_state': HealthState
        }

        self.attribute_map = {
            'application_name': 'ApplicationName',
            'application_type_name': 'ApplicationTypeName',
            'deployed_application_health_state_chunks': 'DeployedApplicationHealthStateChunks',
            'service_health_state_chunks': 'ServiceHealthStateChunks',
            'health_state': 'HealthState'
        }

        self._application_name = application_name
        self._application_type_name = application_type_name
        self._deployed_application_health_state_chunks = deployed_application_health_state_chunks
        self._service_health_state_chunks = service_health_state_chunks
        self._health_state = health_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationHealthStateChunk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationHealthStateChunk of this ApplicationHealthStateChunk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this ApplicationHealthStateChunk.

        The name of the application, including the 'fabric:' URI scheme.

        :return: The application_name of this ApplicationHealthStateChunk.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this ApplicationHealthStateChunk.

        The name of the application, including the 'fabric:' URI scheme.

        :param application_name: The application_name of this ApplicationHealthStateChunk.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def application_type_name(self):
        """Gets the application_type_name of this ApplicationHealthStateChunk.

        The application type name as defined in the application manifest.

        :return: The application_type_name of this ApplicationHealthStateChunk.
        :rtype: str
        """
        return self._application_type_name

    @application_type_name.setter
    def application_type_name(self, application_type_name):
        """Sets the application_type_name of this ApplicationHealthStateChunk.

        The application type name as defined in the application manifest.

        :param application_type_name: The application_type_name of this ApplicationHealthStateChunk.
        :type application_type_name: str
        """

        self._application_type_name = application_type_name

    @property
    def deployed_application_health_state_chunks(self):
        """Gets the deployed_application_health_state_chunks of this ApplicationHealthStateChunk.


        :return: The deployed_application_health_state_chunks of this ApplicationHealthStateChunk.
        :rtype: DeployedApplicationHealthStateChunkList
        """
        return self._deployed_application_health_state_chunks

    @deployed_application_health_state_chunks.setter
    def deployed_application_health_state_chunks(self, deployed_application_health_state_chunks):
        """Sets the deployed_application_health_state_chunks of this ApplicationHealthStateChunk.


        :param deployed_application_health_state_chunks: The deployed_application_health_state_chunks of this ApplicationHealthStateChunk.
        :type deployed_application_health_state_chunks: DeployedApplicationHealthStateChunkList
        """

        self._deployed_application_health_state_chunks = deployed_application_health_state_chunks

    @property
    def service_health_state_chunks(self):
        """Gets the service_health_state_chunks of this ApplicationHealthStateChunk.


        :return: The service_health_state_chunks of this ApplicationHealthStateChunk.
        :rtype: ServiceHealthStateChunkList
        """
        return self._service_health_state_chunks

    @service_health_state_chunks.setter
    def service_health_state_chunks(self, service_health_state_chunks):
        """Sets the service_health_state_chunks of this ApplicationHealthStateChunk.


        :param service_health_state_chunks: The service_health_state_chunks of this ApplicationHealthStateChunk.
        :type service_health_state_chunks: ServiceHealthStateChunkList
        """

        self._service_health_state_chunks = service_health_state_chunks

    @property
    def health_state(self):
        """Gets the health_state of this ApplicationHealthStateChunk.


        :return: The health_state of this ApplicationHealthStateChunk.
        :rtype: HealthState
        """
        return self._health_state

    @health_state.setter
    def health_state(self, health_state):
        """Sets the health_state of this ApplicationHealthStateChunk.


        :param health_state: The health_state of this ApplicationHealthStateChunk.
        :type health_state: HealthState
        """

        self._health_state = health_state
