# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operation_state import OperationState
from openapi_server.models.operation_type import OperationType
from openapi_server import util


class OperationStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operation_id: str=None, state: OperationState=None, type: OperationType=None):
        """OperationStatus - a model defined in OpenAPI

        :param operation_id: The operation_id of this OperationStatus.
        :param state: The state of this OperationStatus.
        :param type: The type of this OperationStatus.
        """
        self.openapi_types = {
            'operation_id': str,
            'state': OperationState,
            'type': OperationType
        }

        self.attribute_map = {
            'operation_id': 'OperationId',
            'state': 'State',
            'type': 'Type'
        }

        self._operation_id = operation_id
        self._state = state
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OperationStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OperationStatus of this OperationStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operation_id(self):
        """Gets the operation_id of this OperationStatus.

        A GUID that identifies a call to this API.  This is also passed into the corresponding GetProgress API.

        :return: The operation_id of this OperationStatus.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this OperationStatus.

        A GUID that identifies a call to this API.  This is also passed into the corresponding GetProgress API.

        :param operation_id: The operation_id of this OperationStatus.
        :type operation_id: str
        """

        self._operation_id = operation_id

    @property
    def state(self):
        """Gets the state of this OperationStatus.


        :return: The state of this OperationStatus.
        :rtype: OperationState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this OperationStatus.


        :param state: The state of this OperationStatus.
        :type state: OperationState
        """

        self._state = state

    @property
    def type(self):
        """Gets the type of this OperationStatus.


        :return: The type of this OperationStatus.
        :rtype: OperationType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OperationStatus.


        :param type: The type of this OperationStatus.
        :type type: OperationType
        """

        self._type = type
