# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.node_deactivation_task_type import NodeDeactivationTaskType
from openapi_server import util


class NodeDeactivationTaskId(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, node_deactivation_task_type: NodeDeactivationTaskType=None):
        """NodeDeactivationTaskId - a model defined in OpenAPI

        :param id: The id of this NodeDeactivationTaskId.
        :param node_deactivation_task_type: The node_deactivation_task_type of this NodeDeactivationTaskId.
        """
        self.openapi_types = {
            'id': str,
            'node_deactivation_task_type': NodeDeactivationTaskType
        }

        self.attribute_map = {
            'id': 'Id',
            'node_deactivation_task_type': 'NodeDeactivationTaskType'
        }

        self._id = id
        self._node_deactivation_task_type = node_deactivation_task_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeDeactivationTaskId':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NodeDeactivationTaskId of this NodeDeactivationTaskId.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this NodeDeactivationTaskId.

        Value of the task id.

        :return: The id of this NodeDeactivationTaskId.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NodeDeactivationTaskId.

        Value of the task id.

        :param id: The id of this NodeDeactivationTaskId.
        :type id: str
        """

        self._id = id

    @property
    def node_deactivation_task_type(self):
        """Gets the node_deactivation_task_type of this NodeDeactivationTaskId.


        :return: The node_deactivation_task_type of this NodeDeactivationTaskId.
        :rtype: NodeDeactivationTaskType
        """
        return self._node_deactivation_task_type

    @node_deactivation_task_type.setter
    def node_deactivation_task_type(self, node_deactivation_task_type):
        """Sets the node_deactivation_task_type of this NodeDeactivationTaskId.


        :param node_deactivation_task_type: The node_deactivation_task_type of this NodeDeactivationTaskId.
        :type node_deactivation_task_type: NodeDeactivationTaskType
        """

        self._node_deactivation_task_type = node_deactivation_task_type
