# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployed_service_replica_detail_info import DeployedServiceReplicaDetailInfo
from openapi_server.models.deployed_stateful_service_replica_info import DeployedStatefulServiceReplicaInfo
from openapi_server.models.key_value_store_replica_status import KeyValueStoreReplicaStatus
from openapi_server.models.load_metric_report_info import LoadMetricReportInfo
from openapi_server.models.partition_access_status import PartitionAccessStatus
from openapi_server.models.replicator_operation_name import ReplicatorOperationName
from openapi_server.models.replicator_status import ReplicatorStatus
from openapi_server.models.service_kind import ServiceKind
from openapi_server.models.service_operation_name import ServiceOperationName
from openapi_server import util


class DeployedStatefulServiceReplicaDetailInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_replicator_operation: ReplicatorOperationName=None, deployed_service_replica_query_result: DeployedStatefulServiceReplicaInfo=None, read_status: PartitionAccessStatus=None, replica_id: str=None, replica_status: KeyValueStoreReplicaStatus=None, replicator_status: ReplicatorStatus=None, write_status: PartitionAccessStatus=None, current_service_operation: ServiceOperationName=None, current_service_operation_start_time_utc: datetime=None, partition_id: str=None, reported_load: List[LoadMetricReportInfo]=None, service_kind: ServiceKind=None, service_name: str=None):
        """DeployedStatefulServiceReplicaDetailInfo - a model defined in OpenAPI

        :param current_replicator_operation: The current_replicator_operation of this DeployedStatefulServiceReplicaDetailInfo.
        :param deployed_service_replica_query_result: The deployed_service_replica_query_result of this DeployedStatefulServiceReplicaDetailInfo.
        :param read_status: The read_status of this DeployedStatefulServiceReplicaDetailInfo.
        :param replica_id: The replica_id of this DeployedStatefulServiceReplicaDetailInfo.
        :param replica_status: The replica_status of this DeployedStatefulServiceReplicaDetailInfo.
        :param replicator_status: The replicator_status of this DeployedStatefulServiceReplicaDetailInfo.
        :param write_status: The write_status of this DeployedStatefulServiceReplicaDetailInfo.
        :param current_service_operation: The current_service_operation of this DeployedStatefulServiceReplicaDetailInfo.
        :param current_service_operation_start_time_utc: The current_service_operation_start_time_utc of this DeployedStatefulServiceReplicaDetailInfo.
        :param partition_id: The partition_id of this DeployedStatefulServiceReplicaDetailInfo.
        :param reported_load: The reported_load of this DeployedStatefulServiceReplicaDetailInfo.
        :param service_kind: The service_kind of this DeployedStatefulServiceReplicaDetailInfo.
        :param service_name: The service_name of this DeployedStatefulServiceReplicaDetailInfo.
        """
        self.openapi_types = {
            'current_replicator_operation': ReplicatorOperationName,
            'deployed_service_replica_query_result': DeployedStatefulServiceReplicaInfo,
            'read_status': PartitionAccessStatus,
            'replica_id': str,
            'replica_status': KeyValueStoreReplicaStatus,
            'replicator_status': ReplicatorStatus,
            'write_status': PartitionAccessStatus,
            'current_service_operation': ServiceOperationName,
            'current_service_operation_start_time_utc': datetime,
            'partition_id': str,
            'reported_load': List[LoadMetricReportInfo],
            'service_kind': ServiceKind,
            'service_name': str
        }

        self.attribute_map = {
            'current_replicator_operation': 'CurrentReplicatorOperation',
            'deployed_service_replica_query_result': 'DeployedServiceReplicaQueryResult',
            'read_status': 'ReadStatus',
            'replica_id': 'ReplicaId',
            'replica_status': 'ReplicaStatus',
            'replicator_status': 'ReplicatorStatus',
            'write_status': 'WriteStatus',
            'current_service_operation': 'CurrentServiceOperation',
            'current_service_operation_start_time_utc': 'CurrentServiceOperationStartTimeUtc',
            'partition_id': 'PartitionId',
            'reported_load': 'ReportedLoad',
            'service_kind': 'ServiceKind',
            'service_name': 'ServiceName'
        }

        self._current_replicator_operation = current_replicator_operation
        self._deployed_service_replica_query_result = deployed_service_replica_query_result
        self._read_status = read_status
        self._replica_id = replica_id
        self._replica_status = replica_status
        self._replicator_status = replicator_status
        self._write_status = write_status
        self._current_service_operation = current_service_operation
        self._current_service_operation_start_time_utc = current_service_operation_start_time_utc
        self._partition_id = partition_id
        self._reported_load = reported_load
        self._service_kind = service_kind
        self._service_name = service_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeployedStatefulServiceReplicaDetailInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeployedStatefulServiceReplicaDetailInfo of this DeployedStatefulServiceReplicaDetailInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_replicator_operation(self):
        """Gets the current_replicator_operation of this DeployedStatefulServiceReplicaDetailInfo.


        :return: The current_replicator_operation of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: ReplicatorOperationName
        """
        return self._current_replicator_operation

    @current_replicator_operation.setter
    def current_replicator_operation(self, current_replicator_operation):
        """Sets the current_replicator_operation of this DeployedStatefulServiceReplicaDetailInfo.


        :param current_replicator_operation: The current_replicator_operation of this DeployedStatefulServiceReplicaDetailInfo.
        :type current_replicator_operation: ReplicatorOperationName
        """

        self._current_replicator_operation = current_replicator_operation

    @property
    def deployed_service_replica_query_result(self):
        """Gets the deployed_service_replica_query_result of this DeployedStatefulServiceReplicaDetailInfo.


        :return: The deployed_service_replica_query_result of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: DeployedStatefulServiceReplicaInfo
        """
        return self._deployed_service_replica_query_result

    @deployed_service_replica_query_result.setter
    def deployed_service_replica_query_result(self, deployed_service_replica_query_result):
        """Sets the deployed_service_replica_query_result of this DeployedStatefulServiceReplicaDetailInfo.


        :param deployed_service_replica_query_result: The deployed_service_replica_query_result of this DeployedStatefulServiceReplicaDetailInfo.
        :type deployed_service_replica_query_result: DeployedStatefulServiceReplicaInfo
        """

        self._deployed_service_replica_query_result = deployed_service_replica_query_result

    @property
    def read_status(self):
        """Gets the read_status of this DeployedStatefulServiceReplicaDetailInfo.


        :return: The read_status of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: PartitionAccessStatus
        """
        return self._read_status

    @read_status.setter
    def read_status(self, read_status):
        """Sets the read_status of this DeployedStatefulServiceReplicaDetailInfo.


        :param read_status: The read_status of this DeployedStatefulServiceReplicaDetailInfo.
        :type read_status: PartitionAccessStatus
        """

        self._read_status = read_status

    @property
    def replica_id(self):
        """Gets the replica_id of this DeployedStatefulServiceReplicaDetailInfo.

        Id of a stateful service replica. ReplicaId is used by Service Fabric to uniquely identify a replica of a partition. It is unique within a partition and does not change for the lifetime of the replica. If a replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. Sometimes the id of a stateless service instance is also referred as a replica id.

        :return: The replica_id of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: str
        """
        return self._replica_id

    @replica_id.setter
    def replica_id(self, replica_id):
        """Sets the replica_id of this DeployedStatefulServiceReplicaDetailInfo.

        Id of a stateful service replica. ReplicaId is used by Service Fabric to uniquely identify a replica of a partition. It is unique within a partition and does not change for the lifetime of the replica. If a replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. Sometimes the id of a stateless service instance is also referred as a replica id.

        :param replica_id: The replica_id of this DeployedStatefulServiceReplicaDetailInfo.
        :type replica_id: str
        """

        self._replica_id = replica_id

    @property
    def replica_status(self):
        """Gets the replica_status of this DeployedStatefulServiceReplicaDetailInfo.


        :return: The replica_status of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: KeyValueStoreReplicaStatus
        """
        return self._replica_status

    @replica_status.setter
    def replica_status(self, replica_status):
        """Sets the replica_status of this DeployedStatefulServiceReplicaDetailInfo.


        :param replica_status: The replica_status of this DeployedStatefulServiceReplicaDetailInfo.
        :type replica_status: KeyValueStoreReplicaStatus
        """

        self._replica_status = replica_status

    @property
    def replicator_status(self):
        """Gets the replicator_status of this DeployedStatefulServiceReplicaDetailInfo.


        :return: The replicator_status of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: ReplicatorStatus
        """
        return self._replicator_status

    @replicator_status.setter
    def replicator_status(self, replicator_status):
        """Sets the replicator_status of this DeployedStatefulServiceReplicaDetailInfo.


        :param replicator_status: The replicator_status of this DeployedStatefulServiceReplicaDetailInfo.
        :type replicator_status: ReplicatorStatus
        """

        self._replicator_status = replicator_status

    @property
    def write_status(self):
        """Gets the write_status of this DeployedStatefulServiceReplicaDetailInfo.


        :return: The write_status of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: PartitionAccessStatus
        """
        return self._write_status

    @write_status.setter
    def write_status(self, write_status):
        """Sets the write_status of this DeployedStatefulServiceReplicaDetailInfo.


        :param write_status: The write_status of this DeployedStatefulServiceReplicaDetailInfo.
        :type write_status: PartitionAccessStatus
        """

        self._write_status = write_status

    @property
    def current_service_operation(self):
        """Gets the current_service_operation of this DeployedStatefulServiceReplicaDetailInfo.


        :return: The current_service_operation of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: ServiceOperationName
        """
        return self._current_service_operation

    @current_service_operation.setter
    def current_service_operation(self, current_service_operation):
        """Sets the current_service_operation of this DeployedStatefulServiceReplicaDetailInfo.


        :param current_service_operation: The current_service_operation of this DeployedStatefulServiceReplicaDetailInfo.
        :type current_service_operation: ServiceOperationName
        """

        self._current_service_operation = current_service_operation

    @property
    def current_service_operation_start_time_utc(self):
        """Gets the current_service_operation_start_time_utc of this DeployedStatefulServiceReplicaDetailInfo.

        The start time of the current service operation in UTC format.

        :return: The current_service_operation_start_time_utc of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: datetime
        """
        return self._current_service_operation_start_time_utc

    @current_service_operation_start_time_utc.setter
    def current_service_operation_start_time_utc(self, current_service_operation_start_time_utc):
        """Sets the current_service_operation_start_time_utc of this DeployedStatefulServiceReplicaDetailInfo.

        The start time of the current service operation in UTC format.

        :param current_service_operation_start_time_utc: The current_service_operation_start_time_utc of this DeployedStatefulServiceReplicaDetailInfo.
        :type current_service_operation_start_time_utc: datetime
        """

        self._current_service_operation_start_time_utc = current_service_operation_start_time_utc

    @property
    def partition_id(self):
        """Gets the partition_id of this DeployedStatefulServiceReplicaDetailInfo.

        An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.

        :return: The partition_id of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: str
        """
        return self._partition_id

    @partition_id.setter
    def partition_id(self, partition_id):
        """Sets the partition_id of this DeployedStatefulServiceReplicaDetailInfo.

        An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.

        :param partition_id: The partition_id of this DeployedStatefulServiceReplicaDetailInfo.
        :type partition_id: str
        """

        self._partition_id = partition_id

    @property
    def reported_load(self):
        """Gets the reported_load of this DeployedStatefulServiceReplicaDetailInfo.

        List of load reported by replica.

        :return: The reported_load of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: List[LoadMetricReportInfo]
        """
        return self._reported_load

    @reported_load.setter
    def reported_load(self, reported_load):
        """Sets the reported_load of this DeployedStatefulServiceReplicaDetailInfo.

        List of load reported by replica.

        :param reported_load: The reported_load of this DeployedStatefulServiceReplicaDetailInfo.
        :type reported_load: List[LoadMetricReportInfo]
        """

        self._reported_load = reported_load

    @property
    def service_kind(self):
        """Gets the service_kind of this DeployedStatefulServiceReplicaDetailInfo.


        :return: The service_kind of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: ServiceKind
        """
        return self._service_kind

    @service_kind.setter
    def service_kind(self, service_kind):
        """Sets the service_kind of this DeployedStatefulServiceReplicaDetailInfo.


        :param service_kind: The service_kind of this DeployedStatefulServiceReplicaDetailInfo.
        :type service_kind: ServiceKind
        """
        if service_kind is None:
            raise ValueError("Invalid value for `service_kind`, must not be `None`")

        self._service_kind = service_kind

    @property
    def service_name(self):
        """Gets the service_name of this DeployedStatefulServiceReplicaDetailInfo.

        The full name of the service with 'fabric:' URI scheme.

        :return: The service_name of this DeployedStatefulServiceReplicaDetailInfo.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this DeployedStatefulServiceReplicaDetailInfo.

        The full name of the service with 'fabric:' URI scheme.

        :param service_name: The service_name of this DeployedStatefulServiceReplicaDetailInfo.
        :type service_name: str
        """

        self._service_name = service_name
