# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RepairTaskUpdateHealthPolicyDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, perform_preparing_health_check: bool=None, perform_restoring_health_check: bool=None, task_id: str=None, version: str=None):
        """RepairTaskUpdateHealthPolicyDescription - a model defined in OpenAPI

        :param perform_preparing_health_check: The perform_preparing_health_check of this RepairTaskUpdateHealthPolicyDescription.
        :param perform_restoring_health_check: The perform_restoring_health_check of this RepairTaskUpdateHealthPolicyDescription.
        :param task_id: The task_id of this RepairTaskUpdateHealthPolicyDescription.
        :param version: The version of this RepairTaskUpdateHealthPolicyDescription.
        """
        self.openapi_types = {
            'perform_preparing_health_check': bool,
            'perform_restoring_health_check': bool,
            'task_id': str,
            'version': str
        }

        self.attribute_map = {
            'perform_preparing_health_check': 'PerformPreparingHealthCheck',
            'perform_restoring_health_check': 'PerformRestoringHealthCheck',
            'task_id': 'TaskId',
            'version': 'Version'
        }

        self._perform_preparing_health_check = perform_preparing_health_check
        self._perform_restoring_health_check = perform_restoring_health_check
        self._task_id = task_id
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepairTaskUpdateHealthPolicyDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepairTaskUpdateHealthPolicyDescription of this RepairTaskUpdateHealthPolicyDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def perform_preparing_health_check(self):
        """Gets the perform_preparing_health_check of this RepairTaskUpdateHealthPolicyDescription.

        A boolean indicating if health check is to be performed in the Preparing stage of the repair task. If not specified the existing value should not be altered. Otherwise, specify the desired new value.

        :return: The perform_preparing_health_check of this RepairTaskUpdateHealthPolicyDescription.
        :rtype: bool
        """
        return self._perform_preparing_health_check

    @perform_preparing_health_check.setter
    def perform_preparing_health_check(self, perform_preparing_health_check):
        """Sets the perform_preparing_health_check of this RepairTaskUpdateHealthPolicyDescription.

        A boolean indicating if health check is to be performed in the Preparing stage of the repair task. If not specified the existing value should not be altered. Otherwise, specify the desired new value.

        :param perform_preparing_health_check: The perform_preparing_health_check of this RepairTaskUpdateHealthPolicyDescription.
        :type perform_preparing_health_check: bool
        """

        self._perform_preparing_health_check = perform_preparing_health_check

    @property
    def perform_restoring_health_check(self):
        """Gets the perform_restoring_health_check of this RepairTaskUpdateHealthPolicyDescription.

        A boolean indicating if health check is to be performed in the Restoring stage of the repair task. If not specified the existing value should not be altered. Otherwise, specify the desired new value.

        :return: The perform_restoring_health_check of this RepairTaskUpdateHealthPolicyDescription.
        :rtype: bool
        """
        return self._perform_restoring_health_check

    @perform_restoring_health_check.setter
    def perform_restoring_health_check(self, perform_restoring_health_check):
        """Sets the perform_restoring_health_check of this RepairTaskUpdateHealthPolicyDescription.

        A boolean indicating if health check is to be performed in the Restoring stage of the repair task. If not specified the existing value should not be altered. Otherwise, specify the desired new value.

        :param perform_restoring_health_check: The perform_restoring_health_check of this RepairTaskUpdateHealthPolicyDescription.
        :type perform_restoring_health_check: bool
        """

        self._perform_restoring_health_check = perform_restoring_health_check

    @property
    def task_id(self):
        """Gets the task_id of this RepairTaskUpdateHealthPolicyDescription.

        The ID of the repair task to be updated.

        :return: The task_id of this RepairTaskUpdateHealthPolicyDescription.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this RepairTaskUpdateHealthPolicyDescription.

        The ID of the repair task to be updated.

        :param task_id: The task_id of this RepairTaskUpdateHealthPolicyDescription.
        :type task_id: str
        """
        if task_id is None:
            raise ValueError("Invalid value for `task_id`, must not be `None`")

        self._task_id = task_id

    @property
    def version(self):
        """Gets the version of this RepairTaskUpdateHealthPolicyDescription.

        The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current value of the repair task. If zero, then no version check is performed.

        :return: The version of this RepairTaskUpdateHealthPolicyDescription.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this RepairTaskUpdateHealthPolicyDescription.

        The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current value of the repair task. If zero, then no version check is performed.

        :param version: The version of this RepairTaskUpdateHealthPolicyDescription.
        :type version: str
        """

        self._version = version
