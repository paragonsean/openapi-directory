# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClusterUpgradeHealthPolicyObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_percent_delta_unhealthy_nodes: int=None, max_percent_upgrade_domain_delta_unhealthy_nodes: int=None):
        """ClusterUpgradeHealthPolicyObject - a model defined in OpenAPI

        :param max_percent_delta_unhealthy_nodes: The max_percent_delta_unhealthy_nodes of this ClusterUpgradeHealthPolicyObject.
        :param max_percent_upgrade_domain_delta_unhealthy_nodes: The max_percent_upgrade_domain_delta_unhealthy_nodes of this ClusterUpgradeHealthPolicyObject.
        """
        self.openapi_types = {
            'max_percent_delta_unhealthy_nodes': int,
            'max_percent_upgrade_domain_delta_unhealthy_nodes': int
        }

        self.attribute_map = {
            'max_percent_delta_unhealthy_nodes': 'MaxPercentDeltaUnhealthyNodes',
            'max_percent_upgrade_domain_delta_unhealthy_nodes': 'MaxPercentUpgradeDomainDeltaUnhealthyNodes'
        }

        self._max_percent_delta_unhealthy_nodes = max_percent_delta_unhealthy_nodes
        self._max_percent_upgrade_domain_delta_unhealthy_nodes = max_percent_upgrade_domain_delta_unhealthy_nodes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterUpgradeHealthPolicyObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterUpgradeHealthPolicyObject of this ClusterUpgradeHealthPolicyObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_percent_delta_unhealthy_nodes(self):
        """Gets the max_percent_delta_unhealthy_nodes of this ClusterUpgradeHealthPolicyObject.

        The maximum allowed percentage of nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. The default value is 10%.

        :return: The max_percent_delta_unhealthy_nodes of this ClusterUpgradeHealthPolicyObject.
        :rtype: int
        """
        return self._max_percent_delta_unhealthy_nodes

    @max_percent_delta_unhealthy_nodes.setter
    def max_percent_delta_unhealthy_nodes(self, max_percent_delta_unhealthy_nodes):
        """Sets the max_percent_delta_unhealthy_nodes of this ClusterUpgradeHealthPolicyObject.

        The maximum allowed percentage of nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. The default value is 10%.

        :param max_percent_delta_unhealthy_nodes: The max_percent_delta_unhealthy_nodes of this ClusterUpgradeHealthPolicyObject.
        :type max_percent_delta_unhealthy_nodes: int
        """
        if max_percent_delta_unhealthy_nodes is not None and max_percent_delta_unhealthy_nodes > 100:
            raise ValueError("Invalid value for `max_percent_delta_unhealthy_nodes`, must be a value less than or equal to `100`")
        if max_percent_delta_unhealthy_nodes is not None and max_percent_delta_unhealthy_nodes < 0:
            raise ValueError("Invalid value for `max_percent_delta_unhealthy_nodes`, must be a value greater than or equal to `0`")

        self._max_percent_delta_unhealthy_nodes = max_percent_delta_unhealthy_nodes

    @property
    def max_percent_upgrade_domain_delta_unhealthy_nodes(self):
        """Gets the max_percent_upgrade_domain_delta_unhealthy_nodes of this ClusterUpgradeHealthPolicyObject.

        The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits. The default value is 15%.

        :return: The max_percent_upgrade_domain_delta_unhealthy_nodes of this ClusterUpgradeHealthPolicyObject.
        :rtype: int
        """
        return self._max_percent_upgrade_domain_delta_unhealthy_nodes

    @max_percent_upgrade_domain_delta_unhealthy_nodes.setter
    def max_percent_upgrade_domain_delta_unhealthy_nodes(self, max_percent_upgrade_domain_delta_unhealthy_nodes):
        """Sets the max_percent_upgrade_domain_delta_unhealthy_nodes of this ClusterUpgradeHealthPolicyObject.

        The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits. The default value is 15%.

        :param max_percent_upgrade_domain_delta_unhealthy_nodes: The max_percent_upgrade_domain_delta_unhealthy_nodes of this ClusterUpgradeHealthPolicyObject.
        :type max_percent_upgrade_domain_delta_unhealthy_nodes: int
        """
        if max_percent_upgrade_domain_delta_unhealthy_nodes is not None and max_percent_upgrade_domain_delta_unhealthy_nodes > 100:
            raise ValueError("Invalid value for `max_percent_upgrade_domain_delta_unhealthy_nodes`, must be a value less than or equal to `100`")
        if max_percent_upgrade_domain_delta_unhealthy_nodes is not None and max_percent_upgrade_domain_delta_unhealthy_nodes < 0:
            raise ValueError("Invalid value for `max_percent_upgrade_domain_delta_unhealthy_nodes`, must be a value greater than or equal to `0`")

        self._max_percent_upgrade_domain_delta_unhealthy_nodes = max_percent_upgrade_domain_delta_unhealthy_nodes
