# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.backup_schedule_description import BackupScheduleDescription
from openapi_server.models.backup_schedule_kind import BackupScheduleKind
from openapi_server import util


class FrequencyBasedBackupScheduleDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interval: str=None, schedule_kind: BackupScheduleKind=None):
        """FrequencyBasedBackupScheduleDescription - a model defined in OpenAPI

        :param interval: The interval of this FrequencyBasedBackupScheduleDescription.
        :param schedule_kind: The schedule_kind of this FrequencyBasedBackupScheduleDescription.
        """
        self.openapi_types = {
            'interval': str,
            'schedule_kind': BackupScheduleKind
        }

        self.attribute_map = {
            'interval': 'Interval',
            'schedule_kind': 'ScheduleKind'
        }

        self._interval = interval
        self._schedule_kind = schedule_kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FrequencyBasedBackupScheduleDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FrequencyBasedBackupScheduleDescription of this FrequencyBasedBackupScheduleDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interval(self):
        """Gets the interval of this FrequencyBasedBackupScheduleDescription.

        Defines the interval with which backups are periodically taken. It should be specified in ISO8601 format. Timespan in seconds is not supported and will be ignored while creating the policy.

        :return: The interval of this FrequencyBasedBackupScheduleDescription.
        :rtype: str
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this FrequencyBasedBackupScheduleDescription.

        Defines the interval with which backups are periodically taken. It should be specified in ISO8601 format. Timespan in seconds is not supported and will be ignored while creating the policy.

        :param interval: The interval of this FrequencyBasedBackupScheduleDescription.
        :type interval: str
        """
        if interval is None:
            raise ValueError("Invalid value for `interval`, must not be `None`")

        self._interval = interval

    @property
    def schedule_kind(self):
        """Gets the schedule_kind of this FrequencyBasedBackupScheduleDescription.


        :return: The schedule_kind of this FrequencyBasedBackupScheduleDescription.
        :rtype: BackupScheduleKind
        """
        return self._schedule_kind

    @schedule_kind.setter
    def schedule_kind(self, schedule_kind):
        """Sets the schedule_kind of this FrequencyBasedBackupScheduleDescription.


        :param schedule_kind: The schedule_kind of this FrequencyBasedBackupScheduleDescription.
        :type schedule_kind: BackupScheduleKind
        """
        if schedule_kind is None:
            raise ValueError("Invalid value for `schedule_kind`, must not be `None`")

        self._schedule_kind = schedule_kind
