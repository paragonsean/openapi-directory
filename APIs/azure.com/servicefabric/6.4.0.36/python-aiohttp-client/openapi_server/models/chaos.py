# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chaos_parameters import ChaosParameters
from openapi_server.models.chaos_schedule_status import ChaosScheduleStatus
from openapi_server.models.chaos_status import ChaosStatus
from openapi_server import util


class Chaos(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chaos_parameters: ChaosParameters=None, schedule_status: ChaosScheduleStatus=None, status: ChaosStatus=None):
        """Chaos - a model defined in OpenAPI

        :param chaos_parameters: The chaos_parameters of this Chaos.
        :param schedule_status: The schedule_status of this Chaos.
        :param status: The status of this Chaos.
        """
        self.openapi_types = {
            'chaos_parameters': ChaosParameters,
            'schedule_status': ChaosScheduleStatus,
            'status': ChaosStatus
        }

        self.attribute_map = {
            'chaos_parameters': 'ChaosParameters',
            'schedule_status': 'ScheduleStatus',
            'status': 'Status'
        }

        self._chaos_parameters = chaos_parameters
        self._schedule_status = schedule_status
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Chaos':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Chaos of this Chaos.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chaos_parameters(self):
        """Gets the chaos_parameters of this Chaos.


        :return: The chaos_parameters of this Chaos.
        :rtype: ChaosParameters
        """
        return self._chaos_parameters

    @chaos_parameters.setter
    def chaos_parameters(self, chaos_parameters):
        """Sets the chaos_parameters of this Chaos.


        :param chaos_parameters: The chaos_parameters of this Chaos.
        :type chaos_parameters: ChaosParameters
        """

        self._chaos_parameters = chaos_parameters

    @property
    def schedule_status(self):
        """Gets the schedule_status of this Chaos.


        :return: The schedule_status of this Chaos.
        :rtype: ChaosScheduleStatus
        """
        return self._schedule_status

    @schedule_status.setter
    def schedule_status(self, schedule_status):
        """Sets the schedule_status of this Chaos.


        :param schedule_status: The schedule_status of this Chaos.
        :type schedule_status: ChaosScheduleStatus
        """

        self._schedule_status = schedule_status

    @property
    def status(self):
        """Gets the status of this Chaos.


        :return: The status of this Chaos.
        :rtype: ChaosStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Chaos.


        :param status: The status of this Chaos.
        :type status: ChaosStatus
        """

        self._status = status
