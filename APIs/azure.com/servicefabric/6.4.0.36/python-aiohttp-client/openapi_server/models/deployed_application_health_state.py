# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_state import HealthState
from openapi_server import util


class DeployedApplicationHealthState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, node_name: str=None, aggregated_health_state: HealthState=None):
        """DeployedApplicationHealthState - a model defined in OpenAPI

        :param application_name: The application_name of this DeployedApplicationHealthState.
        :param node_name: The node_name of this DeployedApplicationHealthState.
        :param aggregated_health_state: The aggregated_health_state of this DeployedApplicationHealthState.
        """
        self.openapi_types = {
            'application_name': str,
            'node_name': str,
            'aggregated_health_state': HealthState
        }

        self.attribute_map = {
            'application_name': 'ApplicationName',
            'node_name': 'NodeName',
            'aggregated_health_state': 'AggregatedHealthState'
        }

        self._application_name = application_name
        self._node_name = node_name
        self._aggregated_health_state = aggregated_health_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeployedApplicationHealthState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeployedApplicationHealthState of this DeployedApplicationHealthState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this DeployedApplicationHealthState.

        The name of the application, including the 'fabric:' URI scheme.

        :return: The application_name of this DeployedApplicationHealthState.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this DeployedApplicationHealthState.

        The name of the application, including the 'fabric:' URI scheme.

        :param application_name: The application_name of this DeployedApplicationHealthState.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def node_name(self):
        """Gets the node_name of this DeployedApplicationHealthState.

        The name of a Service Fabric node.

        :return: The node_name of this DeployedApplicationHealthState.
        :rtype: str
        """
        return self._node_name

    @node_name.setter
    def node_name(self, node_name):
        """Sets the node_name of this DeployedApplicationHealthState.

        The name of a Service Fabric node.

        :param node_name: The node_name of this DeployedApplicationHealthState.
        :type node_name: str
        """

        self._node_name = node_name

    @property
    def aggregated_health_state(self):
        """Gets the aggregated_health_state of this DeployedApplicationHealthState.


        :return: The aggregated_health_state of this DeployedApplicationHealthState.
        :rtype: HealthState
        """
        return self._aggregated_health_state

    @aggregated_health_state.setter
    def aggregated_health_state(self, aggregated_health_state):
        """Sets the aggregated_health_state of this DeployedApplicationHealthState.


        :param aggregated_health_state: The aggregated_health_state of this DeployedApplicationHealthState.
        :type aggregated_health_state: HealthState
        """

        self._aggregated_health_state = aggregated_health_state
