# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_health_policy import ApplicationHealthPolicy
from openapi_server.models.compose_deployment_upgrade_state import ComposeDeploymentUpgradeState
from openapi_server.models.current_upgrade_domain_progress_info import CurrentUpgradeDomainProgressInfo
from openapi_server.models.failure_reason import FailureReason
from openapi_server.models.failure_upgrade_domain_progress_info import FailureUpgradeDomainProgressInfo
from openapi_server.models.health_evaluation_wrapper import HealthEvaluationWrapper
from openapi_server.models.monitoring_policy_description import MonitoringPolicyDescription
from openapi_server.models.upgrade_kind import UpgradeKind
from openapi_server.models.upgrade_mode import UpgradeMode
from openapi_server import util


class ComposeDeploymentUpgradeProgressInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_health_policy: ApplicationHealthPolicy=None, application_name: str=None, application_unhealthy_evaluations: List[HealthEvaluationWrapper]=None, application_upgrade_status_details: str=None, current_upgrade_domain_duration: str='PT0H2M0S', current_upgrade_domain_progress: CurrentUpgradeDomainProgressInfo=None, deployment_name: str=None, failure_reason: FailureReason=None, failure_timestamp_utc: str=None, force_restart: bool=False, monitoring_policy: MonitoringPolicyDescription=None, rolling_upgrade_mode: UpgradeMode=UpgradeMode.UNMONITOREDAUTO, start_timestamp_utc: str=None, target_application_type_version: str=None, upgrade_domain_progress_at_failure: FailureUpgradeDomainProgressInfo=None, upgrade_duration: str='PT0H2M0S', upgrade_kind: UpgradeKind=UpgradeKind.ROLLING, upgrade_replica_set_check_timeout_in_seconds: int=None, upgrade_state: ComposeDeploymentUpgradeState=None, upgrade_status_details: str=None):
        """ComposeDeploymentUpgradeProgressInfo - a model defined in OpenAPI

        :param application_health_policy: The application_health_policy of this ComposeDeploymentUpgradeProgressInfo.
        :param application_name: The application_name of this ComposeDeploymentUpgradeProgressInfo.
        :param application_unhealthy_evaluations: The application_unhealthy_evaluations of this ComposeDeploymentUpgradeProgressInfo.
        :param application_upgrade_status_details: The application_upgrade_status_details of this ComposeDeploymentUpgradeProgressInfo.
        :param current_upgrade_domain_duration: The current_upgrade_domain_duration of this ComposeDeploymentUpgradeProgressInfo.
        :param current_upgrade_domain_progress: The current_upgrade_domain_progress of this ComposeDeploymentUpgradeProgressInfo.
        :param deployment_name: The deployment_name of this ComposeDeploymentUpgradeProgressInfo.
        :param failure_reason: The failure_reason of this ComposeDeploymentUpgradeProgressInfo.
        :param failure_timestamp_utc: The failure_timestamp_utc of this ComposeDeploymentUpgradeProgressInfo.
        :param force_restart: The force_restart of this ComposeDeploymentUpgradeProgressInfo.
        :param monitoring_policy: The monitoring_policy of this ComposeDeploymentUpgradeProgressInfo.
        :param rolling_upgrade_mode: The rolling_upgrade_mode of this ComposeDeploymentUpgradeProgressInfo.
        :param start_timestamp_utc: The start_timestamp_utc of this ComposeDeploymentUpgradeProgressInfo.
        :param target_application_type_version: The target_application_type_version of this ComposeDeploymentUpgradeProgressInfo.
        :param upgrade_domain_progress_at_failure: The upgrade_domain_progress_at_failure of this ComposeDeploymentUpgradeProgressInfo.
        :param upgrade_duration: The upgrade_duration of this ComposeDeploymentUpgradeProgressInfo.
        :param upgrade_kind: The upgrade_kind of this ComposeDeploymentUpgradeProgressInfo.
        :param upgrade_replica_set_check_timeout_in_seconds: The upgrade_replica_set_check_timeout_in_seconds of this ComposeDeploymentUpgradeProgressInfo.
        :param upgrade_state: The upgrade_state of this ComposeDeploymentUpgradeProgressInfo.
        :param upgrade_status_details: The upgrade_status_details of this ComposeDeploymentUpgradeProgressInfo.
        """
        self.openapi_types = {
            'application_health_policy': ApplicationHealthPolicy,
            'application_name': str,
            'application_unhealthy_evaluations': List[HealthEvaluationWrapper],
            'application_upgrade_status_details': str,
            'current_upgrade_domain_duration': str,
            'current_upgrade_domain_progress': CurrentUpgradeDomainProgressInfo,
            'deployment_name': str,
            'failure_reason': FailureReason,
            'failure_timestamp_utc': str,
            'force_restart': bool,
            'monitoring_policy': MonitoringPolicyDescription,
            'rolling_upgrade_mode': UpgradeMode,
            'start_timestamp_utc': str,
            'target_application_type_version': str,
            'upgrade_domain_progress_at_failure': FailureUpgradeDomainProgressInfo,
            'upgrade_duration': str,
            'upgrade_kind': UpgradeKind,
            'upgrade_replica_set_check_timeout_in_seconds': int,
            'upgrade_state': ComposeDeploymentUpgradeState,
            'upgrade_status_details': str
        }

        self.attribute_map = {
            'application_health_policy': 'ApplicationHealthPolicy',
            'application_name': 'ApplicationName',
            'application_unhealthy_evaluations': 'ApplicationUnhealthyEvaluations',
            'application_upgrade_status_details': 'ApplicationUpgradeStatusDetails',
            'current_upgrade_domain_duration': 'CurrentUpgradeDomainDuration',
            'current_upgrade_domain_progress': 'CurrentUpgradeDomainProgress',
            'deployment_name': 'DeploymentName',
            'failure_reason': 'FailureReason',
            'failure_timestamp_utc': 'FailureTimestampUtc',
            'force_restart': 'ForceRestart',
            'monitoring_policy': 'MonitoringPolicy',
            'rolling_upgrade_mode': 'RollingUpgradeMode',
            'start_timestamp_utc': 'StartTimestampUtc',
            'target_application_type_version': 'TargetApplicationTypeVersion',
            'upgrade_domain_progress_at_failure': 'UpgradeDomainProgressAtFailure',
            'upgrade_duration': 'UpgradeDuration',
            'upgrade_kind': 'UpgradeKind',
            'upgrade_replica_set_check_timeout_in_seconds': 'UpgradeReplicaSetCheckTimeoutInSeconds',
            'upgrade_state': 'UpgradeState',
            'upgrade_status_details': 'UpgradeStatusDetails'
        }

        self._application_health_policy = application_health_policy
        self._application_name = application_name
        self._application_unhealthy_evaluations = application_unhealthy_evaluations
        self._application_upgrade_status_details = application_upgrade_status_details
        self._current_upgrade_domain_duration = current_upgrade_domain_duration
        self._current_upgrade_domain_progress = current_upgrade_domain_progress
        self._deployment_name = deployment_name
        self._failure_reason = failure_reason
        self._failure_timestamp_utc = failure_timestamp_utc
        self._force_restart = force_restart
        self._monitoring_policy = monitoring_policy
        self._rolling_upgrade_mode = rolling_upgrade_mode
        self._start_timestamp_utc = start_timestamp_utc
        self._target_application_type_version = target_application_type_version
        self._upgrade_domain_progress_at_failure = upgrade_domain_progress_at_failure
        self._upgrade_duration = upgrade_duration
        self._upgrade_kind = upgrade_kind
        self._upgrade_replica_set_check_timeout_in_seconds = upgrade_replica_set_check_timeout_in_seconds
        self._upgrade_state = upgrade_state
        self._upgrade_status_details = upgrade_status_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComposeDeploymentUpgradeProgressInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComposeDeploymentUpgradeProgressInfo of this ComposeDeploymentUpgradeProgressInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_health_policy(self):
        """Gets the application_health_policy of this ComposeDeploymentUpgradeProgressInfo.


        :return: The application_health_policy of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: ApplicationHealthPolicy
        """
        return self._application_health_policy

    @application_health_policy.setter
    def application_health_policy(self, application_health_policy):
        """Sets the application_health_policy of this ComposeDeploymentUpgradeProgressInfo.


        :param application_health_policy: The application_health_policy of this ComposeDeploymentUpgradeProgressInfo.
        :type application_health_policy: ApplicationHealthPolicy
        """

        self._application_health_policy = application_health_policy

    @property
    def application_name(self):
        """Gets the application_name of this ComposeDeploymentUpgradeProgressInfo.

        The name of the target application, including the 'fabric:' URI scheme.

        :return: The application_name of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this ComposeDeploymentUpgradeProgressInfo.

        The name of the target application, including the 'fabric:' URI scheme.

        :param application_name: The application_name of this ComposeDeploymentUpgradeProgressInfo.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def application_unhealthy_evaluations(self):
        """Gets the application_unhealthy_evaluations of this ComposeDeploymentUpgradeProgressInfo.

        List of health evaluations that resulted in the current aggregated health state.

        :return: The application_unhealthy_evaluations of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: List[HealthEvaluationWrapper]
        """
        return self._application_unhealthy_evaluations

    @application_unhealthy_evaluations.setter
    def application_unhealthy_evaluations(self, application_unhealthy_evaluations):
        """Sets the application_unhealthy_evaluations of this ComposeDeploymentUpgradeProgressInfo.

        List of health evaluations that resulted in the current aggregated health state.

        :param application_unhealthy_evaluations: The application_unhealthy_evaluations of this ComposeDeploymentUpgradeProgressInfo.
        :type application_unhealthy_evaluations: List[HealthEvaluationWrapper]
        """

        self._application_unhealthy_evaluations = application_unhealthy_evaluations

    @property
    def application_upgrade_status_details(self):
        """Gets the application_upgrade_status_details of this ComposeDeploymentUpgradeProgressInfo.

        Additional details of application upgrade including failure message.

        :return: The application_upgrade_status_details of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: str
        """
        return self._application_upgrade_status_details

    @application_upgrade_status_details.setter
    def application_upgrade_status_details(self, application_upgrade_status_details):
        """Sets the application_upgrade_status_details of this ComposeDeploymentUpgradeProgressInfo.

        Additional details of application upgrade including failure message.

        :param application_upgrade_status_details: The application_upgrade_status_details of this ComposeDeploymentUpgradeProgressInfo.
        :type application_upgrade_status_details: str
        """

        self._application_upgrade_status_details = application_upgrade_status_details

    @property
    def current_upgrade_domain_duration(self):
        """Gets the current_upgrade_domain_duration of this ComposeDeploymentUpgradeProgressInfo.

        The estimated amount of time spent processing current Upgrade Domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.

        :return: The current_upgrade_domain_duration of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: str
        """
        return self._current_upgrade_domain_duration

    @current_upgrade_domain_duration.setter
    def current_upgrade_domain_duration(self, current_upgrade_domain_duration):
        """Sets the current_upgrade_domain_duration of this ComposeDeploymentUpgradeProgressInfo.

        The estimated amount of time spent processing current Upgrade Domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.

        :param current_upgrade_domain_duration: The current_upgrade_domain_duration of this ComposeDeploymentUpgradeProgressInfo.
        :type current_upgrade_domain_duration: str
        """

        self._current_upgrade_domain_duration = current_upgrade_domain_duration

    @property
    def current_upgrade_domain_progress(self):
        """Gets the current_upgrade_domain_progress of this ComposeDeploymentUpgradeProgressInfo.


        :return: The current_upgrade_domain_progress of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: CurrentUpgradeDomainProgressInfo
        """
        return self._current_upgrade_domain_progress

    @current_upgrade_domain_progress.setter
    def current_upgrade_domain_progress(self, current_upgrade_domain_progress):
        """Sets the current_upgrade_domain_progress of this ComposeDeploymentUpgradeProgressInfo.


        :param current_upgrade_domain_progress: The current_upgrade_domain_progress of this ComposeDeploymentUpgradeProgressInfo.
        :type current_upgrade_domain_progress: CurrentUpgradeDomainProgressInfo
        """

        self._current_upgrade_domain_progress = current_upgrade_domain_progress

    @property
    def deployment_name(self):
        """Gets the deployment_name of this ComposeDeploymentUpgradeProgressInfo.

        The name of the target deployment.

        :return: The deployment_name of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: str
        """
        return self._deployment_name

    @deployment_name.setter
    def deployment_name(self, deployment_name):
        """Sets the deployment_name of this ComposeDeploymentUpgradeProgressInfo.

        The name of the target deployment.

        :param deployment_name: The deployment_name of this ComposeDeploymentUpgradeProgressInfo.
        :type deployment_name: str
        """

        self._deployment_name = deployment_name

    @property
    def failure_reason(self):
        """Gets the failure_reason of this ComposeDeploymentUpgradeProgressInfo.


        :return: The failure_reason of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: FailureReason
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this ComposeDeploymentUpgradeProgressInfo.


        :param failure_reason: The failure_reason of this ComposeDeploymentUpgradeProgressInfo.
        :type failure_reason: FailureReason
        """

        self._failure_reason = failure_reason

    @property
    def failure_timestamp_utc(self):
        """Gets the failure_timestamp_utc of this ComposeDeploymentUpgradeProgressInfo.

        The estimated UTC datetime when the upgrade failed and FailureAction was executed.

        :return: The failure_timestamp_utc of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: str
        """
        return self._failure_timestamp_utc

    @failure_timestamp_utc.setter
    def failure_timestamp_utc(self, failure_timestamp_utc):
        """Sets the failure_timestamp_utc of this ComposeDeploymentUpgradeProgressInfo.

        The estimated UTC datetime when the upgrade failed and FailureAction was executed.

        :param failure_timestamp_utc: The failure_timestamp_utc of this ComposeDeploymentUpgradeProgressInfo.
        :type failure_timestamp_utc: str
        """

        self._failure_timestamp_utc = failure_timestamp_utc

    @property
    def force_restart(self):
        """Gets the force_restart of this ComposeDeploymentUpgradeProgressInfo.

        If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).

        :return: The force_restart of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: bool
        """
        return self._force_restart

    @force_restart.setter
    def force_restart(self, force_restart):
        """Sets the force_restart of this ComposeDeploymentUpgradeProgressInfo.

        If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).

        :param force_restart: The force_restart of this ComposeDeploymentUpgradeProgressInfo.
        :type force_restart: bool
        """

        self._force_restart = force_restart

    @property
    def monitoring_policy(self):
        """Gets the monitoring_policy of this ComposeDeploymentUpgradeProgressInfo.


        :return: The monitoring_policy of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: MonitoringPolicyDescription
        """
        return self._monitoring_policy

    @monitoring_policy.setter
    def monitoring_policy(self, monitoring_policy):
        """Sets the monitoring_policy of this ComposeDeploymentUpgradeProgressInfo.


        :param monitoring_policy: The monitoring_policy of this ComposeDeploymentUpgradeProgressInfo.
        :type monitoring_policy: MonitoringPolicyDescription
        """

        self._monitoring_policy = monitoring_policy

    @property
    def rolling_upgrade_mode(self):
        """Gets the rolling_upgrade_mode of this ComposeDeploymentUpgradeProgressInfo.


        :return: The rolling_upgrade_mode of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: UpgradeMode
        """
        return self._rolling_upgrade_mode

    @rolling_upgrade_mode.setter
    def rolling_upgrade_mode(self, rolling_upgrade_mode):
        """Sets the rolling_upgrade_mode of this ComposeDeploymentUpgradeProgressInfo.


        :param rolling_upgrade_mode: The rolling_upgrade_mode of this ComposeDeploymentUpgradeProgressInfo.
        :type rolling_upgrade_mode: UpgradeMode
        """

        self._rolling_upgrade_mode = rolling_upgrade_mode

    @property
    def start_timestamp_utc(self):
        """Gets the start_timestamp_utc of this ComposeDeploymentUpgradeProgressInfo.

        The estimated UTC datetime when the upgrade started.

        :return: The start_timestamp_utc of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: str
        """
        return self._start_timestamp_utc

    @start_timestamp_utc.setter
    def start_timestamp_utc(self, start_timestamp_utc):
        """Sets the start_timestamp_utc of this ComposeDeploymentUpgradeProgressInfo.

        The estimated UTC datetime when the upgrade started.

        :param start_timestamp_utc: The start_timestamp_utc of this ComposeDeploymentUpgradeProgressInfo.
        :type start_timestamp_utc: str
        """

        self._start_timestamp_utc = start_timestamp_utc

    @property
    def target_application_type_version(self):
        """Gets the target_application_type_version of this ComposeDeploymentUpgradeProgressInfo.

        The target application type version (found in the application manifest) for the application upgrade.

        :return: The target_application_type_version of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: str
        """
        return self._target_application_type_version

    @target_application_type_version.setter
    def target_application_type_version(self, target_application_type_version):
        """Sets the target_application_type_version of this ComposeDeploymentUpgradeProgressInfo.

        The target application type version (found in the application manifest) for the application upgrade.

        :param target_application_type_version: The target_application_type_version of this ComposeDeploymentUpgradeProgressInfo.
        :type target_application_type_version: str
        """

        self._target_application_type_version = target_application_type_version

    @property
    def upgrade_domain_progress_at_failure(self):
        """Gets the upgrade_domain_progress_at_failure of this ComposeDeploymentUpgradeProgressInfo.


        :return: The upgrade_domain_progress_at_failure of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: FailureUpgradeDomainProgressInfo
        """
        return self._upgrade_domain_progress_at_failure

    @upgrade_domain_progress_at_failure.setter
    def upgrade_domain_progress_at_failure(self, upgrade_domain_progress_at_failure):
        """Sets the upgrade_domain_progress_at_failure of this ComposeDeploymentUpgradeProgressInfo.


        :param upgrade_domain_progress_at_failure: The upgrade_domain_progress_at_failure of this ComposeDeploymentUpgradeProgressInfo.
        :type upgrade_domain_progress_at_failure: FailureUpgradeDomainProgressInfo
        """

        self._upgrade_domain_progress_at_failure = upgrade_domain_progress_at_failure

    @property
    def upgrade_duration(self):
        """Gets the upgrade_duration of this ComposeDeploymentUpgradeProgressInfo.

        The estimated amount of time that the overall upgrade elapsed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.

        :return: The upgrade_duration of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: str
        """
        return self._upgrade_duration

    @upgrade_duration.setter
    def upgrade_duration(self, upgrade_duration):
        """Sets the upgrade_duration of this ComposeDeploymentUpgradeProgressInfo.

        The estimated amount of time that the overall upgrade elapsed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.

        :param upgrade_duration: The upgrade_duration of this ComposeDeploymentUpgradeProgressInfo.
        :type upgrade_duration: str
        """

        self._upgrade_duration = upgrade_duration

    @property
    def upgrade_kind(self):
        """Gets the upgrade_kind of this ComposeDeploymentUpgradeProgressInfo.


        :return: The upgrade_kind of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: UpgradeKind
        """
        return self._upgrade_kind

    @upgrade_kind.setter
    def upgrade_kind(self, upgrade_kind):
        """Sets the upgrade_kind of this ComposeDeploymentUpgradeProgressInfo.


        :param upgrade_kind: The upgrade_kind of this ComposeDeploymentUpgradeProgressInfo.
        :type upgrade_kind: UpgradeKind
        """

        self._upgrade_kind = upgrade_kind

    @property
    def upgrade_replica_set_check_timeout_in_seconds(self):
        """Gets the upgrade_replica_set_check_timeout_in_seconds of this ComposeDeploymentUpgradeProgressInfo.

        The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).

        :return: The upgrade_replica_set_check_timeout_in_seconds of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: int
        """
        return self._upgrade_replica_set_check_timeout_in_seconds

    @upgrade_replica_set_check_timeout_in_seconds.setter
    def upgrade_replica_set_check_timeout_in_seconds(self, upgrade_replica_set_check_timeout_in_seconds):
        """Sets the upgrade_replica_set_check_timeout_in_seconds of this ComposeDeploymentUpgradeProgressInfo.

        The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).

        :param upgrade_replica_set_check_timeout_in_seconds: The upgrade_replica_set_check_timeout_in_seconds of this ComposeDeploymentUpgradeProgressInfo.
        :type upgrade_replica_set_check_timeout_in_seconds: int
        """

        self._upgrade_replica_set_check_timeout_in_seconds = upgrade_replica_set_check_timeout_in_seconds

    @property
    def upgrade_state(self):
        """Gets the upgrade_state of this ComposeDeploymentUpgradeProgressInfo.


        :return: The upgrade_state of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: ComposeDeploymentUpgradeState
        """
        return self._upgrade_state

    @upgrade_state.setter
    def upgrade_state(self, upgrade_state):
        """Sets the upgrade_state of this ComposeDeploymentUpgradeProgressInfo.


        :param upgrade_state: The upgrade_state of this ComposeDeploymentUpgradeProgressInfo.
        :type upgrade_state: ComposeDeploymentUpgradeState
        """

        self._upgrade_state = upgrade_state

    @property
    def upgrade_status_details(self):
        """Gets the upgrade_status_details of this ComposeDeploymentUpgradeProgressInfo.

        Additional detailed information about the status of the pending upgrade.

        :return: The upgrade_status_details of this ComposeDeploymentUpgradeProgressInfo.
        :rtype: str
        """
        return self._upgrade_status_details

    @upgrade_status_details.setter
    def upgrade_status_details(self, upgrade_status_details):
        """Sets the upgrade_status_details of this ComposeDeploymentUpgradeProgressInfo.

        Additional detailed information about the status of the pending upgrade.

        :param upgrade_status_details: The upgrade_status_details of this ComposeDeploymentUpgradeProgressInfo.
        :type upgrade_status_details: str
        """

        self._upgrade_status_details = upgrade_status_details
