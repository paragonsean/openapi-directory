# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContainerApiRequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, content_type: str=None, http_verb: str=None, uri_path: str=None):
        """ContainerApiRequestBody - a model defined in OpenAPI

        :param body: The body of this ContainerApiRequestBody.
        :param content_type: The content_type of this ContainerApiRequestBody.
        :param http_verb: The http_verb of this ContainerApiRequestBody.
        :param uri_path: The uri_path of this ContainerApiRequestBody.
        """
        self.openapi_types = {
            'body': str,
            'content_type': str,
            'http_verb': str,
            'uri_path': str
        }

        self.attribute_map = {
            'body': 'Body',
            'content_type': 'Content-Type',
            'http_verb': 'HttpVerb',
            'uri_path': 'UriPath'
        }

        self._body = body
        self._content_type = content_type
        self._http_verb = http_verb
        self._uri_path = uri_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerApiRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerApiRequestBody of this ContainerApiRequestBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this ContainerApiRequestBody.

        HTTP request body of container REST API

        :return: The body of this ContainerApiRequestBody.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this ContainerApiRequestBody.

        HTTP request body of container REST API

        :param body: The body of this ContainerApiRequestBody.
        :type body: str
        """

        self._body = body

    @property
    def content_type(self):
        """Gets the content_type of this ContainerApiRequestBody.

        Content type of container REST API request, defaults to \"application/json\"

        :return: The content_type of this ContainerApiRequestBody.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this ContainerApiRequestBody.

        Content type of container REST API request, defaults to \"application/json\"

        :param content_type: The content_type of this ContainerApiRequestBody.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def http_verb(self):
        """Gets the http_verb of this ContainerApiRequestBody.

        HTTP verb of container REST API, defaults to \"GET\"

        :return: The http_verb of this ContainerApiRequestBody.
        :rtype: str
        """
        return self._http_verb

    @http_verb.setter
    def http_verb(self, http_verb):
        """Sets the http_verb of this ContainerApiRequestBody.

        HTTP verb of container REST API, defaults to \"GET\"

        :param http_verb: The http_verb of this ContainerApiRequestBody.
        :type http_verb: str
        """

        self._http_verb = http_verb

    @property
    def uri_path(self):
        """Gets the uri_path of this ContainerApiRequestBody.

        URI path of container REST API

        :return: The uri_path of this ContainerApiRequestBody.
        :rtype: str
        """
        return self._uri_path

    @uri_path.setter
    def uri_path(self, uri_path):
        """Sets the uri_path of this ContainerApiRequestBody.

        URI path of container REST API

        :param uri_path: The uri_path of this ContainerApiRequestBody.
        :type uri_path: str
        """
        if uri_path is None:
            raise ValueError("Invalid value for `uri_path`, must not be `None`")

        self._uri_path = uri_path
