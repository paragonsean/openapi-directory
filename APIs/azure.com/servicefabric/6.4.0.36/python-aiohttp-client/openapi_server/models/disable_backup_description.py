# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DisableBackupDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clean_backup: bool=None):
        """DisableBackupDescription - a model defined in OpenAPI

        :param clean_backup: The clean_backup of this DisableBackupDescription.
        """
        self.openapi_types = {
            'clean_backup': bool
        }

        self.attribute_map = {
            'clean_backup': 'CleanBackup'
        }

        self._clean_backup = clean_backup

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DisableBackupDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DisableBackupDescription of this DisableBackupDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clean_backup(self):
        """Gets the clean_backup of this DisableBackupDescription.

        Boolean flag to delete backups. It can be set to true for deleting all the backups which were created for the backup entity that is getting disabled for backup.

        :return: The clean_backup of this DisableBackupDescription.
        :rtype: bool
        """
        return self._clean_backup

    @clean_backup.setter
    def clean_backup(self, clean_backup):
        """Sets the clean_backup of this DisableBackupDescription.

        Boolean flag to delete backups. It can be set to true for deleting all the backups which were created for the backup entity that is getting disabled for backup.

        :param clean_backup: The clean_backup of this DisableBackupDescription.
        :type clean_backup: bool
        """
        if clean_backup is None:
            raise ValueError("Invalid value for `clean_backup`, must not be `None`")

        self._clean_backup = clean_backup
