# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NodeResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_instance_id: str=None, node_name: str=None):
        """NodeResult - a model defined in OpenAPI

        :param node_instance_id: The node_instance_id of this NodeResult.
        :param node_name: The node_name of this NodeResult.
        """
        self.openapi_types = {
            'node_instance_id': str,
            'node_name': str
        }

        self.attribute_map = {
            'node_instance_id': 'NodeInstanceId',
            'node_name': 'NodeName'
        }

        self._node_instance_id = node_instance_id
        self._node_name = node_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NodeResult of this NodeResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_instance_id(self):
        """Gets the node_instance_id of this NodeResult.

        The node instance id.

        :return: The node_instance_id of this NodeResult.
        :rtype: str
        """
        return self._node_instance_id

    @node_instance_id.setter
    def node_instance_id(self, node_instance_id):
        """Sets the node_instance_id of this NodeResult.

        The node instance id.

        :param node_instance_id: The node_instance_id of this NodeResult.
        :type node_instance_id: str
        """

        self._node_instance_id = node_instance_id

    @property
    def node_name(self):
        """Gets the node_name of this NodeResult.

        The name of a Service Fabric node.

        :return: The node_name of this NodeResult.
        :rtype: str
        """
        return self._node_name

    @node_name.setter
    def node_name(self, node_name):
        """Sets the node_name of this NodeResult.

        The name of a Service Fabric node.

        :param node_name: The node_name of this NodeResult.
        :type node_name: str
        """

        self._node_name = node_name
