/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.4.0.36
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ComposeDeploymentStatusInfo;
import org.openapitools.client.model.ComposeDeploymentUpgradeDescription;
import org.openapitools.client.model.ComposeDeploymentUpgradeProgressInfo;
import org.openapitools.client.model.CreateComposeDeploymentDescription;
import org.openapitools.client.model.FabricError;
import org.openapitools.client.model.PagedComposeDeploymentStatusInfoList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ComposeDeploymentApi
 */
@Disabled
public class ComposeDeploymentApiTest {

    private final ComposeDeploymentApi api = new ComposeDeploymentApi();

    /**
     * Creates a Service Fabric compose deployment.
     *
     * Compose is a file format that describes multi-container applications. This API allows deploying container based applications defined in compose format in a Service Fabric cluster. Once the deployment is created, its status can be tracked via the &#x60;GetComposeDeploymentStatus&#x60; API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createComposeDeploymentTest() throws ApiException {
        String apiVersion = null;
        CreateComposeDeploymentDescription createComposeDeploymentDescription = null;
        Long timeout = null;
        api.createComposeDeployment(apiVersion, createComposeDeploymentDescription, timeout);
        // TODO: test validations
    }

    /**
     * Gets information about a Service Fabric compose deployment.
     *
     * Returns the status of the compose deployment that was created or in the process of being created in the Service Fabric cluster and whose name matches the one specified as the parameter. The response includes the name, status, and other details about the deployment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getComposeDeploymentStatusTest() throws ApiException {
        String apiVersion = null;
        String deploymentName = null;
        Long timeout = null;
        ComposeDeploymentStatusInfo response = api.getComposeDeploymentStatus(apiVersion, deploymentName, timeout);
        // TODO: test validations
    }

    /**
     * Gets the list of compose deployments created in the Service Fabric cluster.
     *
     * Gets the status about the compose deployments that were created or in the process of being created in the Service Fabric cluster. The response includes the name, status, and other details about the compose deployments. If the list of deployments do not fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getComposeDeploymentStatusListTest() throws ApiException {
        String apiVersion = null;
        String continuationToken = null;
        Long maxResults = null;
        Long timeout = null;
        PagedComposeDeploymentStatusInfoList response = api.getComposeDeploymentStatusList(apiVersion, continuationToken, maxResults, timeout);
        // TODO: test validations
    }

    /**
     * Gets details for the latest upgrade performed on this Service Fabric compose deployment.
     *
     * Returns the information about the state of the compose deployment upgrade along with details to aid debugging application health issues.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getComposeDeploymentUpgradeProgressTest() throws ApiException {
        String apiVersion = null;
        String deploymentName = null;
        Long timeout = null;
        ComposeDeploymentUpgradeProgressInfo response = api.getComposeDeploymentUpgradeProgress(apiVersion, deploymentName, timeout);
        // TODO: test validations
    }

    /**
     * Deletes an existing Service Fabric compose deployment from cluster.
     *
     * Deletes an existing Service Fabric compose deployment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeComposeDeploymentTest() throws ApiException {
        String apiVersion = null;
        String deploymentName = null;
        Long timeout = null;
        api.removeComposeDeployment(apiVersion, deploymentName, timeout);
        // TODO: test validations
    }

    /**
     * Starts upgrading a compose deployment in the Service Fabric cluster.
     *
     * Validates the supplied upgrade parameters and starts upgrading the deployment if the parameters are valid.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startComposeDeploymentUpgradeTest() throws ApiException {
        String apiVersion = null;
        String deploymentName = null;
        ComposeDeploymentUpgradeDescription composeDeploymentUpgradeDescription = null;
        Long timeout = null;
        api.startComposeDeploymentUpgrade(apiVersion, deploymentName, composeDeploymentUpgradeDescription, timeout);
        // TODO: test validations
    }

    /**
     * Starts rolling back a compose deployment upgrade in the Service Fabric cluster.
     *
     * Rollback a service fabric compose deployment upgrade.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startRollbackComposeDeploymentUpgradeTest() throws ApiException {
        String apiVersion = null;
        String deploymentName = null;
        Long timeout = null;
        api.startRollbackComposeDeploymentUpgrade(apiVersion, deploymentName, timeout);
        // TODO: test validations
    }

}
