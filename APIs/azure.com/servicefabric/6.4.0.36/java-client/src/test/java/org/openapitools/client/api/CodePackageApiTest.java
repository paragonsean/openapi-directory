/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.4.0.36
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ContainerApiRequestBody;
import org.openapitools.client.model.ContainerApiResponse;
import org.openapitools.client.model.ContainerLogs;
import org.openapitools.client.model.DeployedCodePackageInfo;
import org.openapitools.client.model.FabricError;
import org.openapitools.client.model.RestartDeployedCodePackageDescription;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CodePackageApi
 */
@Disabled
public class CodePackageApiTest {

    private final CodePackageApi api = new CodePackageApi();

    /**
     * Gets the container logs for container deployed on a Service Fabric node.
     *
     * Gets the container logs for container deployed on a Service Fabric node for the given code package.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContainerLogsDeployedOnNodeTest() throws ApiException {
        String apiVersion = null;
        String nodeName = null;
        String applicationId = null;
        String serviceManifestName = null;
        String codePackageName = null;
        String tail = null;
        Boolean previous = null;
        Long timeout = null;
        ContainerLogs response = api.getContainerLogsDeployedOnNode(apiVersion, nodeName, applicationId, serviceManifestName, codePackageName, tail, previous, timeout);
        // TODO: test validations
    }

    /**
     * Gets the list of code packages deployed on a Service Fabric node.
     *
     * Gets the list of code packages deployed on a Service Fabric node for the given application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDeployedCodePackageInfoListTest() throws ApiException {
        String apiVersion = null;
        String nodeName = null;
        String applicationId = null;
        String serviceManifestName = null;
        String codePackageName = null;
        Long timeout = null;
        List<DeployedCodePackageInfo> response = api.getDeployedCodePackageInfoList(apiVersion, nodeName, applicationId, serviceManifestName, codePackageName, timeout);
        // TODO: test validations
    }

    /**
     * Invoke container API on a container deployed on a Service Fabric node.
     *
     * Invoke container API on a container deployed on a Service Fabric node for the given code package.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invokeContainerApiTest() throws ApiException {
        String apiVersion = null;
        String nodeName = null;
        String applicationId = null;
        String serviceManifestName = null;
        String codePackageName = null;
        String codePackageInstanceId = null;
        ContainerApiRequestBody containerApiRequestBody = null;
        Long timeout = null;
        ContainerApiResponse response = api.invokeContainerApi(apiVersion, nodeName, applicationId, serviceManifestName, codePackageName, codePackageInstanceId, containerApiRequestBody, timeout);
        // TODO: test validations
    }

    /**
     * Restarts a code package deployed on a Service Fabric node in a cluster.
     *
     * Restarts a code package deployed on a Service Fabric node in a cluster. This aborts the code package process, which will restart all the user service replicas hosted in that process.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void restartDeployedCodePackageTest() throws ApiException {
        String apiVersion = null;
        String nodeName = null;
        String applicationId = null;
        RestartDeployedCodePackageDescription restartDeployedCodePackageDescription = null;
        Long timeout = null;
        api.restartDeployedCodePackage(apiVersion, nodeName, applicationId, restartDeployedCodePackageDescription, timeout);
        // TODO: test validations
    }

}
