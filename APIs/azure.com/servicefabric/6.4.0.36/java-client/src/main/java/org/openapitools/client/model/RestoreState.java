/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.4.0.36
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Represents the current state of the partition restore operation.
 */
@JsonAdapter(RestoreState.Adapter.class)
public enum RestoreState {
  
  INVALID("Invalid"),
  
  ACCEPTED("Accepted"),
  
  RESTORE_IN_PROGRESS("RestoreInProgress"),
  
  SUCCESS("Success"),
  
  FAILURE("Failure"),
  
  TIMEOUT("Timeout");

  private String value;

  RestoreState(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static RestoreState fromValue(String value) {
    for (RestoreState b : RestoreState.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<RestoreState> {
    @Override
    public void write(final JsonWriter jsonWriter, final RestoreState enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public RestoreState read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return RestoreState.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    RestoreState.fromValue(value);
  }
}

