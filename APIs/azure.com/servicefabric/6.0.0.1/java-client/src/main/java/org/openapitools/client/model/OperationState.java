/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * - Invalid - The operation state is invalid. - Running - The operation is in progress. - RollingBack -  The operation is rolling back internal system state because it encountered a fatal error or was cancelled by the user.  \&quot;RollingBack\&quot;    does not refer to user state.  For example, if CancelOperation is called on a command of type PartitionDataLoss,    a state of \&quot;RollingBack\&quot; does not mean service data is being restored (assuming the command has progressed far enough to cause data loss).    It means the system is rolling back/cleaning up internal system state associated with the command. - Completed - The operation has completed successfully and is no longer running. - Faulted - The operation has failed and is no longer running. - Cancelled - The operation was cancelled by the user using CancelOperation, and is no longer running. - ForceCancelled - The operation was cancelled by the user using CancelOperation, with the force parameter set to true.  It is no longer running.  Refer to CancelOperation for more details. 
 */
@JsonAdapter(OperationState.Adapter.class)
public enum OperationState {
  
  INVALID("Invalid"),
  
  RUNNING("Running"),
  
  ROLLING_BACK("RollingBack"),
  
  COMPLETED("Completed"),
  
  FAULTED("Faulted"),
  
  CANCELLED("Cancelled"),
  
  FORCE_CANCELLED("ForceCancelled");

  private String value;

  OperationState(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static OperationState fromValue(String value) {
    for (OperationState b : OperationState.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<OperationState> {
    @Override
    public void write(final JsonWriter jsonWriter, final OperationState enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public OperationState read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return OperationState.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    OperationState.fromValue(value);
  }
}

