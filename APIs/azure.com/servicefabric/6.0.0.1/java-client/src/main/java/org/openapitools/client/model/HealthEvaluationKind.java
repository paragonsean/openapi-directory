/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.    - Invalid - Indicates that the health evaluation is invalid. The value is zero.   - Event - Indicates that the health evaluation is for a health event. The value is 1.   - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.   - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.   - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.   - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.   - Services - Indicates that the health evaluation is for services of an application. The value is 6.   - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.   - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.   - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.   - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.   - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.   - Node - Indicates that the health evaluation is for a node. The value is 12.   - Replica - Indicates that the health evaluation is for a replica. The value is 13.   - Partition - Indicates that the health evaluation is for a partition. The value is 14.   - Service - Indicates that the health evaluation is for a service. The value is 15.   - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.   - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.   - Application - Indicates that the health evaluation is for an application. The value is 18.   - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.   - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.   - ApplicationTypeApplications â€“ Indicates that the health evaluation is for applications of an application type. The value is 21. 
 */
@JsonAdapter(HealthEvaluationKind.Adapter.class)
public enum HealthEvaluationKind {
  
  INVALID("Invalid"),
  
  EVENT("Event"),
  
  REPLICAS("Replicas"),
  
  PARTITIONS("Partitions"),
  
  DEPLOYED_SERVICE_PACKAGES("DeployedServicePackages"),
  
  DEPLOYED_APPLICATIONS("DeployedApplications"),
  
  SERVICES("Services"),
  
  NODES("Nodes"),
  
  APPLICATIONS("Applications"),
  
  SYSTEM_APPLICATION("SystemApplication"),
  
  UPGRADE_DOMAIN_DEPLOYED_APPLICATIONS("UpgradeDomainDeployedApplications"),
  
  UPGRADE_DOMAIN_NODES("UpgradeDomainNodes"),
  
  REPLICA("Replica"),
  
  PARTITION("Partition"),
  
  DEPLOYED_SERVICE_PACKAGE("DeployedServicePackage"),
  
  DEPLOYED_APPLICATION("DeployedApplication"),
  
  SERVICE("Service"),
  
  NODE("Node"),
  
  APPLICATION("Application"),
  
  DELTA_NODES_CHECK("DeltaNodesCheck"),
  
  UPGRADE_DOMAIN_DELTA_NODES_CHECK("UpgradeDomainDeltaNodesCheck"),
  
  APPLICATION_TYPE_APPLICATIONS("ApplicationTypeApplications");

  private String value;

  HealthEvaluationKind(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static HealthEvaluationKind fromValue(String value) {
    for (HealthEvaluationKind b : HealthEvaluationKind.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<HealthEvaluationKind> {
    @Override
    public void write(final JsonWriter jsonWriter, final HealthEvaluationKind enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public HealthEvaluationKind read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return HealthEvaluationKind.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    HealthEvaluationKind.fromValue(value);
  }
}

