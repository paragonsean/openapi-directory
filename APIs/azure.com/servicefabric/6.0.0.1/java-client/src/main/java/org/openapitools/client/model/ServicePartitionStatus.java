/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The status of the service fabric service partition. Possible values are following.    - Invalid - Indicates the partition status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.   - Ready - Indicates that the partition is ready. This means that for a stateless service partition there is atleast one instance that is up and for a stateful service partition the number of ready replicas is greater than or equal to the MinReplicaSetSize. The value is 1.   - NotReady - Indicates that the partition is not ready. This status is returned when none of the other states apply. The value is 2.   - InQuorumLoss  - Indicates that the partition is in quorum loss. This means that number of replicas that are up and participating in a replica set is less than MinReplicaSetSize for this partition. The value is 3.   - Reconfiguring - Indicates that the partition is undergoing reconfiguration of its replica sets. This can happen due to failover, upgrade, load balancing or addition or removal of replicas from the replica set. The value is 4.   - Deleting - Indicates that the partition is being deleted. The value is 5. 
 */
@JsonAdapter(ServicePartitionStatus.Adapter.class)
public enum ServicePartitionStatus {
  
  INVALID("Invalid"),
  
  READY("Ready"),
  
  NOT_READY("NotReady"),
  
  IN_QUORUM_LOSS("InQuorumLoss"),
  
  RECONFIGURING("Reconfiguring"),
  
  DELETING("Deleting");

  private String value;

  ServicePartitionStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ServicePartitionStatus fromValue(String value) {
    for (ServicePartitionStatus b : ServicePartitionStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ServicePartitionStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final ServicePartitionStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ServicePartitionStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ServicePartitionStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ServicePartitionStatus.fromValue(value);
  }
}

