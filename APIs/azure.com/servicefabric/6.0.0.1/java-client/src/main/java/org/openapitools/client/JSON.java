/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
                .registerTypeSelector(org.openapitools.client.model.ApplicationHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ApplicationHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ApplicationHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ApplicationHealthEvaluation", org.openapitools.client.model.ApplicationHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ApplicationTypeApplicationsHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ApplicationTypeApplicationsHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ApplicationTypeApplicationsHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ApplicationTypeApplicationsHealthEvaluation", org.openapitools.client.model.ApplicationTypeApplicationsHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ApplicationsHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ApplicationsHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ApplicationsHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ApplicationsHealthEvaluation", org.openapitools.client.model.ApplicationsHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.BinaryPropertyValue.class, new TypeSelector<org.openapitools.client.model.BinaryPropertyValue>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.BinaryPropertyValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BinaryPropertyValue", org.openapitools.client.model.BinaryPropertyValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ChaosEvent.class, new TypeSelector<org.openapitools.client.model.ChaosEvent>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ChaosEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ExecutingFaultsChaosEvent", org.openapitools.client.model.ExecutingFaultsChaosEvent.class);
                        classByDiscriminatorValue.put("StartedChaosEvent", org.openapitools.client.model.StartedChaosEvent.class);
                        classByDiscriminatorValue.put("StoppedChaosEvent", org.openapitools.client.model.StoppedChaosEvent.class);
                        classByDiscriminatorValue.put("TestErrorChaosEvent", org.openapitools.client.model.TestErrorChaosEvent.class);
                        classByDiscriminatorValue.put("ValidationFailedChaosEvent", org.openapitools.client.model.ValidationFailedChaosEvent.class);
                        classByDiscriminatorValue.put("WaitingChaosEvent", org.openapitools.client.model.WaitingChaosEvent.class);
                        classByDiscriminatorValue.put("ChaosEvent", org.openapitools.client.model.ChaosEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.CheckExistsPropertyBatchOperation.class, new TypeSelector<org.openapitools.client.model.CheckExistsPropertyBatchOperation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.CheckExistsPropertyBatchOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CheckExistsPropertyBatchOperation", org.openapitools.client.model.CheckExistsPropertyBatchOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.CheckSequencePropertyBatchOperation.class, new TypeSelector<org.openapitools.client.model.CheckSequencePropertyBatchOperation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.CheckSequencePropertyBatchOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CheckSequencePropertyBatchOperation", org.openapitools.client.model.CheckSequencePropertyBatchOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.CheckValuePropertyBatchOperation.class, new TypeSelector<org.openapitools.client.model.CheckValuePropertyBatchOperation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.CheckValuePropertyBatchOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CheckValuePropertyBatchOperation", org.openapitools.client.model.CheckValuePropertyBatchOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeletePropertyBatchOperation.class, new TypeSelector<org.openapitools.client.model.DeletePropertyBatchOperation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeletePropertyBatchOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeletePropertyBatchOperation", org.openapitools.client.model.DeletePropertyBatchOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeltaNodesCheckHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.DeltaNodesCheckHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeltaNodesCheckHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeltaNodesCheckHealthEvaluation", org.openapitools.client.model.DeltaNodesCheckHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedApplicationHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.DeployedApplicationHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedApplicationHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedApplicationHealthEvaluation", org.openapitools.client.model.DeployedApplicationHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedApplicationsHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.DeployedApplicationsHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedApplicationsHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedApplicationsHealthEvaluation", org.openapitools.client.model.DeployedApplicationsHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedServicePackageHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.DeployedServicePackageHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedServicePackageHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedServicePackageHealthEvaluation", org.openapitools.client.model.DeployedServicePackageHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedServicePackagesHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.DeployedServicePackagesHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedServicePackagesHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedServicePackagesHealthEvaluation", org.openapitools.client.model.DeployedServicePackagesHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedServiceReplicaDetailInfo.class, new TypeSelector<org.openapitools.client.model.DeployedServiceReplicaDetailInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedServiceReplicaDetailInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedStatefulServiceReplicaDetailInfo", org.openapitools.client.model.DeployedStatefulServiceReplicaDetailInfo.class);
                        classByDiscriminatorValue.put("DeployedStatelessServiceInstanceDetailInfo", org.openapitools.client.model.DeployedStatelessServiceInstanceDetailInfo.class);
                        classByDiscriminatorValue.put("DeployedServiceReplicaDetailInfo", org.openapitools.client.model.DeployedServiceReplicaDetailInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedServiceReplicaInfo.class, new TypeSelector<org.openapitools.client.model.DeployedServiceReplicaInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedServiceReplicaInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedStatefulServiceReplicaInfo", org.openapitools.client.model.DeployedStatefulServiceReplicaInfo.class);
                        classByDiscriminatorValue.put("DeployedStatelessServiceInstanceInfo", org.openapitools.client.model.DeployedStatelessServiceInstanceInfo.class);
                        classByDiscriminatorValue.put("DeployedServiceReplicaInfo", org.openapitools.client.model.DeployedServiceReplicaInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedStatefulServiceReplicaDetailInfo.class, new TypeSelector<org.openapitools.client.model.DeployedStatefulServiceReplicaDetailInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedStatefulServiceReplicaDetailInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedStatefulServiceReplicaDetailInfo", org.openapitools.client.model.DeployedStatefulServiceReplicaDetailInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedStatefulServiceReplicaInfo.class, new TypeSelector<org.openapitools.client.model.DeployedStatefulServiceReplicaInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedStatefulServiceReplicaInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedStatefulServiceReplicaInfo", org.openapitools.client.model.DeployedStatefulServiceReplicaInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedStatelessServiceInstanceDetailInfo.class, new TypeSelector<org.openapitools.client.model.DeployedStatelessServiceInstanceDetailInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedStatelessServiceInstanceDetailInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedStatelessServiceInstanceDetailInfo", org.openapitools.client.model.DeployedStatelessServiceInstanceDetailInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DeployedStatelessServiceInstanceInfo.class, new TypeSelector<org.openapitools.client.model.DeployedStatelessServiceInstanceInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DeployedStatelessServiceInstanceInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DeployedStatelessServiceInstanceInfo", org.openapitools.client.model.DeployedStatelessServiceInstanceInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DoublePropertyValue.class, new TypeSelector<org.openapitools.client.model.DoublePropertyValue>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DoublePropertyValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DoublePropertyValue", org.openapitools.client.model.DoublePropertyValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.EnsureAvailabilitySafetyCheck.class, new TypeSelector<org.openapitools.client.model.EnsureAvailabilitySafetyCheck>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.EnsureAvailabilitySafetyCheck> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EnsureAvailabilitySafetyCheck", org.openapitools.client.model.EnsureAvailabilitySafetyCheck.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.EnsurePartitionQurumSafetyCheck.class, new TypeSelector<org.openapitools.client.model.EnsurePartitionQurumSafetyCheck>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.EnsurePartitionQurumSafetyCheck> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EnsurePartitionQurumSafetyCheck", org.openapitools.client.model.EnsurePartitionQurumSafetyCheck.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.EventHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.EventHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.EventHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EventHealthEvaluation", org.openapitools.client.model.EventHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ExecutingFaultsChaosEvent.class, new TypeSelector<org.openapitools.client.model.ExecutingFaultsChaosEvent>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ExecutingFaultsChaosEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ExecutingFaultsChaosEvent", org.openapitools.client.model.ExecutingFaultsChaosEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.FailedPropertyBatchInfo.class, new TypeSelector<org.openapitools.client.model.FailedPropertyBatchInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.FailedPropertyBatchInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FailedPropertyBatchInfo", org.openapitools.client.model.FailedPropertyBatchInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.GetPropertyBatchOperation.class, new TypeSelector<org.openapitools.client.model.GetPropertyBatchOperation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.GetPropertyBatchOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("GetPropertyBatchOperation", org.openapitools.client.model.GetPropertyBatchOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.GuidPropertyValue.class, new TypeSelector<org.openapitools.client.model.GuidPropertyValue>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.GuidPropertyValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("GuidPropertyValue", org.openapitools.client.model.GuidPropertyValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.HealthEvaluation.class, new TypeSelector<org.openapitools.client.model.HealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.HealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ApplicationHealthEvaluation", org.openapitools.client.model.ApplicationHealthEvaluation.class);
                        classByDiscriminatorValue.put("ApplicationTypeApplicationsHealthEvaluation", org.openapitools.client.model.ApplicationTypeApplicationsHealthEvaluation.class);
                        classByDiscriminatorValue.put("ApplicationsHealthEvaluation", org.openapitools.client.model.ApplicationsHealthEvaluation.class);
                        classByDiscriminatorValue.put("DeltaNodesCheckHealthEvaluation", org.openapitools.client.model.DeltaNodesCheckHealthEvaluation.class);
                        classByDiscriminatorValue.put("DeployedApplicationHealthEvaluation", org.openapitools.client.model.DeployedApplicationHealthEvaluation.class);
                        classByDiscriminatorValue.put("DeployedApplicationsHealthEvaluation", org.openapitools.client.model.DeployedApplicationsHealthEvaluation.class);
                        classByDiscriminatorValue.put("DeployedServicePackageHealthEvaluation", org.openapitools.client.model.DeployedServicePackageHealthEvaluation.class);
                        classByDiscriminatorValue.put("DeployedServicePackagesHealthEvaluation", org.openapitools.client.model.DeployedServicePackagesHealthEvaluation.class);
                        classByDiscriminatorValue.put("EventHealthEvaluation", org.openapitools.client.model.EventHealthEvaluation.class);
                        classByDiscriminatorValue.put("NodeHealthEvaluation", org.openapitools.client.model.NodeHealthEvaluation.class);
                        classByDiscriminatorValue.put("NodesHealthEvaluation", org.openapitools.client.model.NodesHealthEvaluation.class);
                        classByDiscriminatorValue.put("PartitionHealthEvaluation", org.openapitools.client.model.PartitionHealthEvaluation.class);
                        classByDiscriminatorValue.put("PartitionsHealthEvaluation", org.openapitools.client.model.PartitionsHealthEvaluation.class);
                        classByDiscriminatorValue.put("ReplicaHealthEvaluation", org.openapitools.client.model.ReplicaHealthEvaluation.class);
                        classByDiscriminatorValue.put("ReplicasHealthEvaluation", org.openapitools.client.model.ReplicasHealthEvaluation.class);
                        classByDiscriminatorValue.put("ServiceHealthEvaluation", org.openapitools.client.model.ServiceHealthEvaluation.class);
                        classByDiscriminatorValue.put("ServicesHealthEvaluation", org.openapitools.client.model.ServicesHealthEvaluation.class);
                        classByDiscriminatorValue.put("SystemApplicationHealthEvaluation", org.openapitools.client.model.SystemApplicationHealthEvaluation.class);
                        classByDiscriminatorValue.put("UpgradeDomainDeltaNodesCheckHealthEvaluation", org.openapitools.client.model.UpgradeDomainDeltaNodesCheckHealthEvaluation.class);
                        classByDiscriminatorValue.put("UpgradeDomainNodesHealthEvaluation", org.openapitools.client.model.UpgradeDomainNodesHealthEvaluation.class);
                        classByDiscriminatorValue.put("HealthEvaluation", org.openapitools.client.model.HealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.Int64PropertyValue.class, new TypeSelector<org.openapitools.client.model.Int64PropertyValue>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.Int64PropertyValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("Int64PropertyValue", org.openapitools.client.model.Int64PropertyValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.Int64RangePartitionInformation.class, new TypeSelector<org.openapitools.client.model.Int64RangePartitionInformation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.Int64RangePartitionInformation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("Int64RangePartitionInformation", org.openapitools.client.model.Int64RangePartitionInformation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServicePartitionKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.KeyValueStoreReplicaStatus.class, new TypeSelector<org.openapitools.client.model.KeyValueStoreReplicaStatus>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.KeyValueStoreReplicaStatus> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("KeyValueStoreReplicaStatus", org.openapitools.client.model.KeyValueStoreReplicaStatus.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NamedPartitionInformation.class, new TypeSelector<org.openapitools.client.model.NamedPartitionInformation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NamedPartitionInformation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("NamedPartitionInformation", org.openapitools.client.model.NamedPartitionInformation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServicePartitionKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NamedPartitionSchemeDescription.class, new TypeSelector<org.openapitools.client.model.NamedPartitionSchemeDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NamedPartitionSchemeDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("NamedPartitionSchemeDescription", org.openapitools.client.model.NamedPartitionSchemeDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "PartitionScheme"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NodeHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.NodeHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NodeHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("NodeHealthEvaluation", org.openapitools.client.model.NodeHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NodeRepairImpactDescription.class, new TypeSelector<org.openapitools.client.model.NodeRepairImpactDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NodeRepairImpactDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("NodeRepairImpactDescription", org.openapitools.client.model.NodeRepairImpactDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NodeRepairTargetDescription.class, new TypeSelector<org.openapitools.client.model.NodeRepairTargetDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NodeRepairTargetDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("NodeRepairTargetDescription", org.openapitools.client.model.NodeRepairTargetDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NodesHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.NodesHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NodesHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("NodesHealthEvaluation", org.openapitools.client.model.NodesHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PartitionHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.PartitionHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PartitionHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PartitionHealthEvaluation", org.openapitools.client.model.PartitionHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PartitionInformation.class, new TypeSelector<org.openapitools.client.model.PartitionInformation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PartitionInformation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("Int64RangePartitionInformation", org.openapitools.client.model.Int64RangePartitionInformation.class);
                        classByDiscriminatorValue.put("NamedPartitionInformation", org.openapitools.client.model.NamedPartitionInformation.class);
                        classByDiscriminatorValue.put("SingletonPartitionInformation", org.openapitools.client.model.SingletonPartitionInformation.class);
                        classByDiscriminatorValue.put("PartitionInformation", org.openapitools.client.model.PartitionInformation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServicePartitionKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PartitionSafetyCheck.class, new TypeSelector<org.openapitools.client.model.PartitionSafetyCheck>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PartitionSafetyCheck> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EnsureAvailabilitySafetyCheck", org.openapitools.client.model.EnsureAvailabilitySafetyCheck.class);
                        classByDiscriminatorValue.put("EnsurePartitionQurumSafetyCheck", org.openapitools.client.model.EnsurePartitionQurumSafetyCheck.class);
                        classByDiscriminatorValue.put("WaitForInbuildReplicaSafetyCheck", org.openapitools.client.model.WaitForInbuildReplicaSafetyCheck.class);
                        classByDiscriminatorValue.put("WaitForPrimaryPlacementSafetyCheck", org.openapitools.client.model.WaitForPrimaryPlacementSafetyCheck.class);
                        classByDiscriminatorValue.put("WaitForPrimarySwapSafetyCheck", org.openapitools.client.model.WaitForPrimarySwapSafetyCheck.class);
                        classByDiscriminatorValue.put("WaitForReconfigurationSafetyCheck", org.openapitools.client.model.WaitForReconfigurationSafetyCheck.class);
                        classByDiscriminatorValue.put("PartitionSafetyCheck", org.openapitools.client.model.PartitionSafetyCheck.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PartitionSchemeDescription.class, new TypeSelector<org.openapitools.client.model.PartitionSchemeDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PartitionSchemeDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("NamedPartitionSchemeDescription", org.openapitools.client.model.NamedPartitionSchemeDescription.class);
                        classByDiscriminatorValue.put("SingletonPartitionSchemeDescription", org.openapitools.client.model.SingletonPartitionSchemeDescription.class);
                        classByDiscriminatorValue.put("UniformInt64RangePartitionSchemeDescription", org.openapitools.client.model.UniformInt64RangePartitionSchemeDescription.class);
                        classByDiscriminatorValue.put("PartitionSchemeDescription", org.openapitools.client.model.PartitionSchemeDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "PartitionScheme"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PartitionsHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.PartitionsHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PartitionsHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PartitionsHealthEvaluation", org.openapitools.client.model.PartitionsHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PrimaryReplicatorStatus.class, new TypeSelector<org.openapitools.client.model.PrimaryReplicatorStatus>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PrimaryReplicatorStatus> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PrimaryReplicatorStatus", org.openapitools.client.model.PrimaryReplicatorStatus.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PropertyBatchInfo.class, new TypeSelector<org.openapitools.client.model.PropertyBatchInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PropertyBatchInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FailedPropertyBatchInfo", org.openapitools.client.model.FailedPropertyBatchInfo.class);
                        classByDiscriminatorValue.put("SuccessfulPropertyBatchInfo", org.openapitools.client.model.SuccessfulPropertyBatchInfo.class);
                        classByDiscriminatorValue.put("PropertyBatchInfo", org.openapitools.client.model.PropertyBatchInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PropertyBatchOperation.class, new TypeSelector<org.openapitools.client.model.PropertyBatchOperation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PropertyBatchOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CheckExistsPropertyBatchOperation", org.openapitools.client.model.CheckExistsPropertyBatchOperation.class);
                        classByDiscriminatorValue.put("CheckSequencePropertyBatchOperation", org.openapitools.client.model.CheckSequencePropertyBatchOperation.class);
                        classByDiscriminatorValue.put("CheckValuePropertyBatchOperation", org.openapitools.client.model.CheckValuePropertyBatchOperation.class);
                        classByDiscriminatorValue.put("DeletePropertyBatchOperation", org.openapitools.client.model.DeletePropertyBatchOperation.class);
                        classByDiscriminatorValue.put("GetPropertyBatchOperation", org.openapitools.client.model.GetPropertyBatchOperation.class);
                        classByDiscriminatorValue.put("PutPropertyBatchOperation", org.openapitools.client.model.PutPropertyBatchOperation.class);
                        classByDiscriminatorValue.put("PropertyBatchOperation", org.openapitools.client.model.PropertyBatchOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PropertyInfo.class, new TypeSelector<org.openapitools.client.model.PropertyInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PropertyInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PropertyInfo", org.openapitools.client.model.PropertyInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PropertyValue.class, new TypeSelector<org.openapitools.client.model.PropertyValue>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PropertyValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BinaryPropertyValue", org.openapitools.client.model.BinaryPropertyValue.class);
                        classByDiscriminatorValue.put("DoublePropertyValue", org.openapitools.client.model.DoublePropertyValue.class);
                        classByDiscriminatorValue.put("GuidPropertyValue", org.openapitools.client.model.GuidPropertyValue.class);
                        classByDiscriminatorValue.put("Int64PropertyValue", org.openapitools.client.model.Int64PropertyValue.class);
                        classByDiscriminatorValue.put("StringPropertyValue", org.openapitools.client.model.StringPropertyValue.class);
                        classByDiscriminatorValue.put("PropertyValue", org.openapitools.client.model.PropertyValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PutPropertyBatchOperation.class, new TypeSelector<org.openapitools.client.model.PutPropertyBatchOperation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PutPropertyBatchOperation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PutPropertyBatchOperation", org.openapitools.client.model.PutPropertyBatchOperation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.RepairImpactDescriptionBase.class, new TypeSelector<org.openapitools.client.model.RepairImpactDescriptionBase>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.RepairImpactDescriptionBase> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("NodeRepairImpactDescription", org.openapitools.client.model.NodeRepairImpactDescription.class);
                        classByDiscriminatorValue.put("RepairImpactDescriptionBase", org.openapitools.client.model.RepairImpactDescriptionBase.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.RepairTargetDescriptionBase.class, new TypeSelector<org.openapitools.client.model.RepairTargetDescriptionBase>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.RepairTargetDescriptionBase> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("NodeRepairTargetDescription", org.openapitools.client.model.NodeRepairTargetDescription.class);
                        classByDiscriminatorValue.put("RepairTargetDescriptionBase", org.openapitools.client.model.RepairTargetDescriptionBase.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ReplicaHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ReplicaHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ReplicaHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReplicaHealthEvaluation", org.openapitools.client.model.ReplicaHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ReplicaInfo.class, new TypeSelector<org.openapitools.client.model.ReplicaInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ReplicaInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceReplicaInfo", org.openapitools.client.model.StatefulServiceReplicaInfo.class);
                        classByDiscriminatorValue.put("StatelessServiceInstanceInfo", org.openapitools.client.model.StatelessServiceInstanceInfo.class);
                        classByDiscriminatorValue.put("ReplicaInfo", org.openapitools.client.model.ReplicaInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ReplicaStatusBase.class, new TypeSelector<org.openapitools.client.model.ReplicaStatusBase>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ReplicaStatusBase> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("KeyValueStoreReplicaStatus", org.openapitools.client.model.KeyValueStoreReplicaStatus.class);
                        classByDiscriminatorValue.put("ReplicaStatusBase", org.openapitools.client.model.ReplicaStatusBase.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ReplicasHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ReplicasHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ReplicasHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReplicasHealthEvaluation", org.openapitools.client.model.ReplicasHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ReplicatorStatus.class, new TypeSelector<org.openapitools.client.model.ReplicatorStatus>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ReplicatorStatus> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PrimaryReplicatorStatus", org.openapitools.client.model.PrimaryReplicatorStatus.class);
                        classByDiscriminatorValue.put("SecondaryActiveReplicatorStatus", org.openapitools.client.model.SecondaryActiveReplicatorStatus.class);
                        classByDiscriminatorValue.put("SecondaryIdleReplicatorStatus", org.openapitools.client.model.SecondaryIdleReplicatorStatus.class);
                        classByDiscriminatorValue.put("SecondaryReplicatorStatus", org.openapitools.client.model.SecondaryReplicatorStatus.class);
                        classByDiscriminatorValue.put("ReplicatorStatus", org.openapitools.client.model.ReplicatorStatus.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.SafetyCheck.class, new TypeSelector<org.openapitools.client.model.SafetyCheck>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.SafetyCheck> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EnsureAvailabilitySafetyCheck", org.openapitools.client.model.EnsureAvailabilitySafetyCheck.class);
                        classByDiscriminatorValue.put("EnsurePartitionQurumSafetyCheck", org.openapitools.client.model.EnsurePartitionQurumSafetyCheck.class);
                        classByDiscriminatorValue.put("PartitionSafetyCheck", org.openapitools.client.model.PartitionSafetyCheck.class);
                        classByDiscriminatorValue.put("SeedNodeSafetyCheck", org.openapitools.client.model.SeedNodeSafetyCheck.class);
                        classByDiscriminatorValue.put("WaitForInbuildReplicaSafetyCheck", org.openapitools.client.model.WaitForInbuildReplicaSafetyCheck.class);
                        classByDiscriminatorValue.put("WaitForPrimaryPlacementSafetyCheck", org.openapitools.client.model.WaitForPrimaryPlacementSafetyCheck.class);
                        classByDiscriminatorValue.put("WaitForPrimarySwapSafetyCheck", org.openapitools.client.model.WaitForPrimarySwapSafetyCheck.class);
                        classByDiscriminatorValue.put("WaitForReconfigurationSafetyCheck", org.openapitools.client.model.WaitForReconfigurationSafetyCheck.class);
                        classByDiscriminatorValue.put("SafetyCheck", org.openapitools.client.model.SafetyCheck.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.SecondaryActiveReplicatorStatus.class, new TypeSelector<org.openapitools.client.model.SecondaryActiveReplicatorStatus>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.SecondaryActiveReplicatorStatus> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SecondaryActiveReplicatorStatus", org.openapitools.client.model.SecondaryActiveReplicatorStatus.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.SecondaryIdleReplicatorStatus.class, new TypeSelector<org.openapitools.client.model.SecondaryIdleReplicatorStatus>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.SecondaryIdleReplicatorStatus> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SecondaryIdleReplicatorStatus", org.openapitools.client.model.SecondaryIdleReplicatorStatus.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.SecondaryReplicatorStatus.class, new TypeSelector<org.openapitools.client.model.SecondaryReplicatorStatus>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.SecondaryReplicatorStatus> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SecondaryActiveReplicatorStatus", org.openapitools.client.model.SecondaryActiveReplicatorStatus.class);
                        classByDiscriminatorValue.put("SecondaryIdleReplicatorStatus", org.openapitools.client.model.SecondaryIdleReplicatorStatus.class);
                        classByDiscriminatorValue.put("SecondaryReplicatorStatus", org.openapitools.client.model.SecondaryReplicatorStatus.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.SeedNodeSafetyCheck.class, new TypeSelector<org.openapitools.client.model.SeedNodeSafetyCheck>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.SeedNodeSafetyCheck> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SeedNodeSafetyCheck", org.openapitools.client.model.SeedNodeSafetyCheck.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServiceDescription.class, new TypeSelector<org.openapitools.client.model.ServiceDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServiceDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceDescription", org.openapitools.client.model.StatefulServiceDescription.class);
                        classByDiscriminatorValue.put("StatelessServiceDescription", org.openapitools.client.model.StatelessServiceDescription.class);
                        classByDiscriminatorValue.put("ServiceDescription", org.openapitools.client.model.ServiceDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServiceHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ServiceHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServiceHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ServiceHealthEvaluation", org.openapitools.client.model.ServiceHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServiceInfo.class, new TypeSelector<org.openapitools.client.model.ServiceInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServiceInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceInfo", org.openapitools.client.model.StatefulServiceInfo.class);
                        classByDiscriminatorValue.put("StatelessServiceInfo", org.openapitools.client.model.StatelessServiceInfo.class);
                        classByDiscriminatorValue.put("ServiceInfo", org.openapitools.client.model.ServiceInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServicePartitionInfo.class, new TypeSelector<org.openapitools.client.model.ServicePartitionInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServicePartitionInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServicePartitionInfo", org.openapitools.client.model.StatefulServicePartitionInfo.class);
                        classByDiscriminatorValue.put("StatelessServicePartitionInfo", org.openapitools.client.model.StatelessServicePartitionInfo.class);
                        classByDiscriminatorValue.put("ServicePartitionInfo", org.openapitools.client.model.ServicePartitionInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServicePlacementInvalidDomainPolicyDescription.class, new TypeSelector<org.openapitools.client.model.ServicePlacementInvalidDomainPolicyDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServicePlacementInvalidDomainPolicyDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ServicePlacementInvalidDomainPolicyDescription", org.openapitools.client.model.ServicePlacementInvalidDomainPolicyDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServicePlacementNonPartiallyPlaceServicePolicyDescription.class, new TypeSelector<org.openapitools.client.model.ServicePlacementNonPartiallyPlaceServicePolicyDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServicePlacementNonPartiallyPlaceServicePolicyDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ServicePlacementNonPartiallyPlaceServicePolicyDescription", org.openapitools.client.model.ServicePlacementNonPartiallyPlaceServicePolicyDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServicePlacementPolicyDescription.class, new TypeSelector<org.openapitools.client.model.ServicePlacementPolicyDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServicePlacementPolicyDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ServicePlacementInvalidDomainPolicyDescription", org.openapitools.client.model.ServicePlacementInvalidDomainPolicyDescription.class);
                        classByDiscriminatorValue.put("ServicePlacementNonPartiallyPlaceServicePolicyDescription", org.openapitools.client.model.ServicePlacementNonPartiallyPlaceServicePolicyDescription.class);
                        classByDiscriminatorValue.put("ServicePlacementPreferPrimaryDomainPolicyDescription", org.openapitools.client.model.ServicePlacementPreferPrimaryDomainPolicyDescription.class);
                        classByDiscriminatorValue.put("ServicePlacementRequireDomainDistributionPolicyDescription", org.openapitools.client.model.ServicePlacementRequireDomainDistributionPolicyDescription.class);
                        classByDiscriminatorValue.put("ServicePlacementRequiredDomainPolicyDescription", org.openapitools.client.model.ServicePlacementRequiredDomainPolicyDescription.class);
                        classByDiscriminatorValue.put("ServicePlacementPolicyDescription", org.openapitools.client.model.ServicePlacementPolicyDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServicePlacementPreferPrimaryDomainPolicyDescription.class, new TypeSelector<org.openapitools.client.model.ServicePlacementPreferPrimaryDomainPolicyDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServicePlacementPreferPrimaryDomainPolicyDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ServicePlacementPreferPrimaryDomainPolicyDescription", org.openapitools.client.model.ServicePlacementPreferPrimaryDomainPolicyDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServicePlacementRequireDomainDistributionPolicyDescription.class, new TypeSelector<org.openapitools.client.model.ServicePlacementRequireDomainDistributionPolicyDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServicePlacementRequireDomainDistributionPolicyDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ServicePlacementRequireDomainDistributionPolicyDescription", org.openapitools.client.model.ServicePlacementRequireDomainDistributionPolicyDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServicePlacementRequiredDomainPolicyDescription.class, new TypeSelector<org.openapitools.client.model.ServicePlacementRequiredDomainPolicyDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServicePlacementRequiredDomainPolicyDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ServicePlacementRequiredDomainPolicyDescription", org.openapitools.client.model.ServicePlacementRequiredDomainPolicyDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServiceTypeDescription.class, new TypeSelector<org.openapitools.client.model.ServiceTypeDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServiceTypeDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceTypeDescription", org.openapitools.client.model.StatefulServiceTypeDescription.class);
                        classByDiscriminatorValue.put("StatelessServiceTypeDescription", org.openapitools.client.model.StatelessServiceTypeDescription.class);
                        classByDiscriminatorValue.put("ServiceTypeDescription", org.openapitools.client.model.ServiceTypeDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServiceUpdateDescription.class, new TypeSelector<org.openapitools.client.model.ServiceUpdateDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServiceUpdateDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceUpdateDescription", org.openapitools.client.model.StatefulServiceUpdateDescription.class);
                        classByDiscriminatorValue.put("StatelessServiceUpdateDescription", org.openapitools.client.model.StatelessServiceUpdateDescription.class);
                        classByDiscriminatorValue.put("ServiceUpdateDescription", org.openapitools.client.model.ServiceUpdateDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ServicesHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.ServicesHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ServicesHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ServicesHealthEvaluation", org.openapitools.client.model.ServicesHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.SingletonPartitionInformation.class, new TypeSelector<org.openapitools.client.model.SingletonPartitionInformation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.SingletonPartitionInformation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SingletonPartitionInformation", org.openapitools.client.model.SingletonPartitionInformation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServicePartitionKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.SingletonPartitionSchemeDescription.class, new TypeSelector<org.openapitools.client.model.SingletonPartitionSchemeDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.SingletonPartitionSchemeDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SingletonPartitionSchemeDescription", org.openapitools.client.model.SingletonPartitionSchemeDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "PartitionScheme"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StartedChaosEvent.class, new TypeSelector<org.openapitools.client.model.StartedChaosEvent>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StartedChaosEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StartedChaosEvent", org.openapitools.client.model.StartedChaosEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatefulServiceDescription.class, new TypeSelector<org.openapitools.client.model.StatefulServiceDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatefulServiceDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceDescription", org.openapitools.client.model.StatefulServiceDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatefulServiceInfo.class, new TypeSelector<org.openapitools.client.model.StatefulServiceInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatefulServiceInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceInfo", org.openapitools.client.model.StatefulServiceInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatefulServicePartitionInfo.class, new TypeSelector<org.openapitools.client.model.StatefulServicePartitionInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatefulServicePartitionInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServicePartitionInfo", org.openapitools.client.model.StatefulServicePartitionInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatefulServiceReplicaInfo.class, new TypeSelector<org.openapitools.client.model.StatefulServiceReplicaInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatefulServiceReplicaInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceReplicaInfo", org.openapitools.client.model.StatefulServiceReplicaInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatefulServiceTypeDescription.class, new TypeSelector<org.openapitools.client.model.StatefulServiceTypeDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatefulServiceTypeDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceTypeDescription", org.openapitools.client.model.StatefulServiceTypeDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatefulServiceUpdateDescription.class, new TypeSelector<org.openapitools.client.model.StatefulServiceUpdateDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatefulServiceUpdateDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatefulServiceUpdateDescription", org.openapitools.client.model.StatefulServiceUpdateDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatelessServiceDescription.class, new TypeSelector<org.openapitools.client.model.StatelessServiceDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatelessServiceDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatelessServiceDescription", org.openapitools.client.model.StatelessServiceDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatelessServiceInfo.class, new TypeSelector<org.openapitools.client.model.StatelessServiceInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatelessServiceInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatelessServiceInfo", org.openapitools.client.model.StatelessServiceInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatelessServiceInstanceInfo.class, new TypeSelector<org.openapitools.client.model.StatelessServiceInstanceInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatelessServiceInstanceInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatelessServiceInstanceInfo", org.openapitools.client.model.StatelessServiceInstanceInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatelessServicePartitionInfo.class, new TypeSelector<org.openapitools.client.model.StatelessServicePartitionInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatelessServicePartitionInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatelessServicePartitionInfo", org.openapitools.client.model.StatelessServicePartitionInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatelessServiceTypeDescription.class, new TypeSelector<org.openapitools.client.model.StatelessServiceTypeDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatelessServiceTypeDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatelessServiceTypeDescription", org.openapitools.client.model.StatelessServiceTypeDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StatelessServiceUpdateDescription.class, new TypeSelector<org.openapitools.client.model.StatelessServiceUpdateDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StatelessServiceUpdateDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StatelessServiceUpdateDescription", org.openapitools.client.model.StatelessServiceUpdateDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ServiceKind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StoppedChaosEvent.class, new TypeSelector<org.openapitools.client.model.StoppedChaosEvent>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StoppedChaosEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StoppedChaosEvent", org.openapitools.client.model.StoppedChaosEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.StringPropertyValue.class, new TypeSelector<org.openapitools.client.model.StringPropertyValue>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.StringPropertyValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StringPropertyValue", org.openapitools.client.model.StringPropertyValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.SuccessfulPropertyBatchInfo.class, new TypeSelector<org.openapitools.client.model.SuccessfulPropertyBatchInfo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.SuccessfulPropertyBatchInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SuccessfulPropertyBatchInfo", org.openapitools.client.model.SuccessfulPropertyBatchInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.SystemApplicationHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.SystemApplicationHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.SystemApplicationHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SystemApplicationHealthEvaluation", org.openapitools.client.model.SystemApplicationHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.TestErrorChaosEvent.class, new TypeSelector<org.openapitools.client.model.TestErrorChaosEvent>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.TestErrorChaosEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TestErrorChaosEvent", org.openapitools.client.model.TestErrorChaosEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UniformInt64RangePartitionSchemeDescription.class, new TypeSelector<org.openapitools.client.model.UniformInt64RangePartitionSchemeDescription>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UniformInt64RangePartitionSchemeDescription> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UniformInt64RangePartitionSchemeDescription", org.openapitools.client.model.UniformInt64RangePartitionSchemeDescription.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "PartitionScheme"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpgradeDomainDeltaNodesCheckHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.UpgradeDomainDeltaNodesCheckHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpgradeDomainDeltaNodesCheckHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpgradeDomainDeltaNodesCheckHealthEvaluation", org.openapitools.client.model.UpgradeDomainDeltaNodesCheckHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpgradeDomainNodesHealthEvaluation.class, new TypeSelector<org.openapitools.client.model.UpgradeDomainNodesHealthEvaluation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpgradeDomainNodesHealthEvaluation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpgradeDomainNodesHealthEvaluation", org.openapitools.client.model.UpgradeDomainNodesHealthEvaluation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ValidationFailedChaosEvent.class, new TypeSelector<org.openapitools.client.model.ValidationFailedChaosEvent>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ValidationFailedChaosEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ValidationFailedChaosEvent", org.openapitools.client.model.ValidationFailedChaosEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.WaitForInbuildReplicaSafetyCheck.class, new TypeSelector<org.openapitools.client.model.WaitForInbuildReplicaSafetyCheck>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.WaitForInbuildReplicaSafetyCheck> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("WaitForInbuildReplicaSafetyCheck", org.openapitools.client.model.WaitForInbuildReplicaSafetyCheck.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.WaitForPrimaryPlacementSafetyCheck.class, new TypeSelector<org.openapitools.client.model.WaitForPrimaryPlacementSafetyCheck>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.WaitForPrimaryPlacementSafetyCheck> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("WaitForPrimaryPlacementSafetyCheck", org.openapitools.client.model.WaitForPrimaryPlacementSafetyCheck.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.WaitForPrimarySwapSafetyCheck.class, new TypeSelector<org.openapitools.client.model.WaitForPrimarySwapSafetyCheck>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.WaitForPrimarySwapSafetyCheck> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("WaitForPrimarySwapSafetyCheck", org.openapitools.client.model.WaitForPrimarySwapSafetyCheck.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.WaitForReconfigurationSafetyCheck.class, new TypeSelector<org.openapitools.client.model.WaitForReconfigurationSafetyCheck>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.WaitForReconfigurationSafetyCheck> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("WaitForReconfigurationSafetyCheck", org.openapitools.client.model.WaitForReconfigurationSafetyCheck.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.WaitingChaosEvent.class, new TypeSelector<org.openapitools.client.model.WaitingChaosEvent>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.WaitingChaosEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("WaitingChaosEvent", org.openapitools.client.model.WaitingChaosEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "Kind"));
                    }
          })
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    static {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AadMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AadMetadataObject.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationCapacityDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthPolicies.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthPolicyMapItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthStateChunk.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthStateChunkList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationHealthStateFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationLoadInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationMetricDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationNameInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationTypeApplicationsHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationTypeHealthPolicyMapItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationTypeImageStorePath.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationTypeImageStoreVersion.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationTypeInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationTypeManifest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationUpgradeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationUpgradeProgressInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationUpgradeUpdateDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ApplicationsHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.BinaryPropertyValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ChaosContext.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ChaosContextMapItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ChaosEventWrapper.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ChaosParameters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ChaosReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CheckExistsPropertyBatchOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CheckSequencePropertyBatchOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CheckValuePropertyBatchOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterConfigurationUpgradeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterConfigurationUpgradeStatusInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterHealthChunk.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterHealthChunkQueryDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterHealthPolicies.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterHealthPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterManifest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterUpgradeDescriptionObject.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterUpgradeHealthPolicyObject.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ClusterUpgradeProgressObject.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CodePackageEntryPoint.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CodePackageEntryPointStatistics.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ComposeDeploymentStatusInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ComposeDeploymentUpgradeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ComposeDeploymentUpgradeProgressInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CreateComposeDeploymentDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CurrentUpgradeDomainProgressInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeactivationIntentDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeletePropertyBatchOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeltaNodesCheckHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployServicePackageToNodeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplicationHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplicationHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplicationHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplicationHealthStateChunk.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplicationHealthStateChunkList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplicationHealthStateFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplicationInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedApplicationsHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedCodePackageInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackageHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackageHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackageHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackageHealthStateChunk.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackageHealthStateChunkList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackageHealthStateFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackageInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServicePackagesHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedServiceTypeInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedStatefulServiceReplicaDetailInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedStatefulServiceReplicaInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedStatelessServiceInstanceDetailInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeployedStatelessServiceInstanceInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DoublePropertyValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.EnsureAvailabilitySafetyCheck.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.EnsurePartitionQurumSafetyCheck.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.EntityHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.EntityHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.EntityHealthStateChunk.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.EntityHealthStateChunkList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.EntityKindHealthStateCount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Epoch.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.EventHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExecutingFaultsChaosEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.FabricCodeVersionInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.FabricConfigVersionInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.FabricError.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.FabricErrorError.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.FailedPropertyBatchInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.FailedUpgradeDomainProgressObject.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.FailureUpgradeDomainProgressInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.FileInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.FileVersion.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.FolderInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.GetPropertyBatchOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.GuidPropertyValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.HealthEvaluationWrapper.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.HealthEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.HealthInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.HealthStateCount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.HealthStatistics.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ImageStoreContent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ImageStoreCopyDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Int64PropertyValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Int64RangePartitionInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.InvokeDataLossResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.InvokeQuorumLossResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.KeyValueStoreReplicaStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.LoadMetricReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.LoadMetricReportInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MonitoringPolicyDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NameDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NamedPartitionInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NamedPartitionSchemeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeDeactivationInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeDeactivationTask.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeDeactivationTaskId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeHealthStateChunk.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeHealthStateChunkList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeHealthStateFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeImpact.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeLoadInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeLoadMetricInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeRepairImpactDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeRepairTargetDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeTransitionProgress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeTransitionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodeUpgradeProgressInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NodesHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.OperationStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PackageSharingPolicyInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PagedApplicationInfoList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PagedApplicationTypeInfoList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PagedComposeDeploymentStatusInfoList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PagedNodeInfoList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PagedPropertyInfoList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PagedReplicaInfoList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PagedServiceInfoList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PagedServicePartitionInfoList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PagedSubNameInfoList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionDataLossProgress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionHealthStateChunk.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionHealthStateChunkList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionHealthStateFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionLoadInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionQuorumLossProgress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionRestartProgress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PartitionsHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PrimaryReplicatorStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PropertyBatchDescriptionList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PropertyDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PropertyInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PropertyMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ProvisionFabricDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PutPropertyBatchOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReconfigurationInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RegistryCredential.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RemoteReplicatorAcknowledgementDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RemoteReplicatorAcknowledgementStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RemoteReplicatorStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RepairTask.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RepairTaskApproveDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RepairTaskCancelDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RepairTaskDeleteDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RepairTaskHistory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RepairTaskUpdateHealthPolicyDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RepairTaskUpdateInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicaHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicaHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicaHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicaHealthStateChunk.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicaHealthStateChunkList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicaHealthStateFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicasHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ReplicatorQueueStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ResolvedServiceEndpoint.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ResolvedServicePartition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RestartDeployedCodePackageDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RestartNodeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RestartPartitionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ResumeApplicationUpgradeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ResumeClusterUpgradeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RollingUpgradeUpdateDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.SafetyCheckWrapper.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.SecondaryActiveReplicatorStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.SecondaryIdleReplicatorStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.SeedNodeSafetyCheck.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.SelectedPartition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceCorrelationDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceFromTemplateDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceHealthStateChunk.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceHealthStateChunkList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceHealthStateFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceLoadMetricDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceNameInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServicePlacementInvalidDomainPolicyDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServicePlacementNonPartiallyPlaceServicePolicyDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServicePlacementPreferPrimaryDomainPolicyDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServicePlacementRequireDomainDistributionPolicyDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServicePlacementRequiredDomainPolicyDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceTypeExtensionDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceTypeHealthPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceTypeHealthPolicyMapItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceTypeInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServiceTypeManifest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ServicesHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.SingletonPartitionInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.SingletonPartitionSchemeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StartClusterUpgradeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StartedChaosEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulServiceDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulServiceInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulServicePartitionInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulServiceReplicaHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulServiceReplicaHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulServiceReplicaInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulServiceTypeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulServiceUpdateDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessServiceDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessServiceInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessServiceInstanceHealth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessServiceInstanceHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessServiceInstanceInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessServicePartitionInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessServiceTypeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatelessServiceUpdateDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StoppedChaosEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StringPropertyValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.SuccessfulPropertyBatchInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.SystemApplicationHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.TestErrorChaosEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UniformInt64RangePartitionSchemeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UnprovisionFabricDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateClusterUpgradeDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpgradeDomainDeltaNodesCheckHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpgradeDomainInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpgradeDomainNodesHealthEvaluation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ValidationFailedChaosEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.WaitForInbuildReplicaSafetyCheck.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.WaitForPrimaryPlacementSafetyCheck.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.WaitForPrimarySwapSafetyCheck.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.WaitForReconfigurationSafetyCheck.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.WaitingChaosEvent.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
