/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The state of the compose deployment upgrade.      - Invalid - Indicates the upgrade state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.     - ProvisioningTarget - The upgrade is in the progress of provisioning target application type version. The value is 1.     - RollingForwardInProgress - The upgrade is rolling forward to the target version but is not complete yet. The value is 2.     - RollingForwardPending - The current upgrade domain has finished upgrading. The overall upgrade is waiting for an explicit move next request in UnmonitoredManual mode or performing health checks in Monitored mode. The value is 3     - UnprovisioningCurrent - The upgrade is in the progress of unprovisioning current application type version and rolling forward to the target version is completed. The value is 4.     - RollingForwardCompleted - The upgrade has finished rolling forward. The value is 5.     - RollingBackInProgress - The upgrade is rolling back to the previous version but is not complete yet. The value is 6.     - UnprovisioningTarget - The upgrade is in the progress of unprovisioning target application type version and rolling back to the current version is completed. The value is 7.     - RollingBackCompleted - The upgrade has finished rolling back. The valud is 8.     - Failed - The upgrade has failed and is unable to execute FailureAction. The value is 9. 
 */
@JsonAdapter(ComposeDeploymentUpgradeState.Adapter.class)
public enum ComposeDeploymentUpgradeState {
  
  INVALID("Invalid"),
  
  PROVISIONING_TARGET("ProvisioningTarget"),
  
  ROLLING_FORWARD_IN_PROGRESS("RollingForwardInProgress"),
  
  ROLLING_FORWARD_PENDING("RollingForwardPending"),
  
  UNPROVISIONING_CURRENT("UnprovisioningCurrent"),
  
  ROLLING_FORWARD_COMPLETED("RollingForwardCompleted"),
  
  ROLLING_BACK_IN_PROGRESS("RollingBackInProgress"),
  
  UNPROVISIONING_TARGET("UnprovisioningTarget"),
  
  ROLLING_BACK_COMPLETED("RollingBackCompleted"),
  
  FAILED("Failed");

  private String value;

  ComposeDeploymentUpgradeState(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ComposeDeploymentUpgradeState fromValue(String value) {
    for (ComposeDeploymentUpgradeState b : ComposeDeploymentUpgradeState.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ComposeDeploymentUpgradeState> {
    @Override
    public void write(final JsonWriter jsonWriter, final ComposeDeploymentUpgradeState enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ComposeDeploymentUpgradeState read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ComposeDeploymentUpgradeState.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ComposeDeploymentUpgradeState.fromValue(value);
  }
}

