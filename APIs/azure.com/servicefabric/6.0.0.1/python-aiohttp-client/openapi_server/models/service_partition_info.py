# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_state import HealthState
from openapi_server.models.partition_information import PartitionInformation
from openapi_server.models.service_kind import ServiceKind
from openapi_server.models.service_partition_status import ServicePartitionStatus
from openapi_server import util


class ServicePartitionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, health_state: HealthState=None, partition_information: PartitionInformation=None, partition_status: ServicePartitionStatus=None, service_kind: ServiceKind=None):
        """ServicePartitionInfo - a model defined in OpenAPI

        :param health_state: The health_state of this ServicePartitionInfo.
        :param partition_information: The partition_information of this ServicePartitionInfo.
        :param partition_status: The partition_status of this ServicePartitionInfo.
        :param service_kind: The service_kind of this ServicePartitionInfo.
        """
        self.openapi_types = {
            'health_state': HealthState,
            'partition_information': PartitionInformation,
            'partition_status': ServicePartitionStatus,
            'service_kind': ServiceKind
        }

        self.attribute_map = {
            'health_state': 'HealthState',
            'partition_information': 'PartitionInformation',
            'partition_status': 'PartitionStatus',
            'service_kind': 'ServiceKind'
        }

        self._health_state = health_state
        self._partition_information = partition_information
        self._partition_status = partition_status
        self._service_kind = service_kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServicePartitionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServicePartitionInfo of this ServicePartitionInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def health_state(self):
        """Gets the health_state of this ServicePartitionInfo.


        :return: The health_state of this ServicePartitionInfo.
        :rtype: HealthState
        """
        return self._health_state

    @health_state.setter
    def health_state(self, health_state):
        """Sets the health_state of this ServicePartitionInfo.


        :param health_state: The health_state of this ServicePartitionInfo.
        :type health_state: HealthState
        """

        self._health_state = health_state

    @property
    def partition_information(self):
        """Gets the partition_information of this ServicePartitionInfo.


        :return: The partition_information of this ServicePartitionInfo.
        :rtype: PartitionInformation
        """
        return self._partition_information

    @partition_information.setter
    def partition_information(self, partition_information):
        """Sets the partition_information of this ServicePartitionInfo.


        :param partition_information: The partition_information of this ServicePartitionInfo.
        :type partition_information: PartitionInformation
        """

        self._partition_information = partition_information

    @property
    def partition_status(self):
        """Gets the partition_status of this ServicePartitionInfo.


        :return: The partition_status of this ServicePartitionInfo.
        :rtype: ServicePartitionStatus
        """
        return self._partition_status

    @partition_status.setter
    def partition_status(self, partition_status):
        """Sets the partition_status of this ServicePartitionInfo.


        :param partition_status: The partition_status of this ServicePartitionInfo.
        :type partition_status: ServicePartitionStatus
        """

        self._partition_status = partition_status

    @property
    def service_kind(self):
        """Gets the service_kind of this ServicePartitionInfo.


        :return: The service_kind of this ServicePartitionInfo.
        :rtype: ServiceKind
        """
        return self._service_kind

    @service_kind.setter
    def service_kind(self, service_kind):
        """Sets the service_kind of this ServicePartitionInfo.


        :param service_kind: The service_kind of this ServicePartitionInfo.
        :type service_kind: ServiceKind
        """
        if service_kind is None:
            raise ValueError("Invalid value for `service_kind`, must not be `None`")

        self._service_kind = service_kind
