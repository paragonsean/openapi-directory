# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.replica_role import ReplicaRole
from openapi_server.models.replicator_queue_status import ReplicatorQueueStatus
from openapi_server.models.replicator_status import ReplicatorStatus
from openapi_server import util


class SecondaryReplicatorStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: ReplicaRole=None, copy_queue_status: ReplicatorQueueStatus=None, is_in_build: bool=None, last_acknowledgement_sent_time_utc: datetime=None, last_copy_operation_received_time_utc: datetime=None, last_replication_operation_received_time_utc: datetime=None, replication_queue_status: ReplicatorQueueStatus=None):
        """SecondaryReplicatorStatus - a model defined in OpenAPI

        :param kind: The kind of this SecondaryReplicatorStatus.
        :param copy_queue_status: The copy_queue_status of this SecondaryReplicatorStatus.
        :param is_in_build: The is_in_build of this SecondaryReplicatorStatus.
        :param last_acknowledgement_sent_time_utc: The last_acknowledgement_sent_time_utc of this SecondaryReplicatorStatus.
        :param last_copy_operation_received_time_utc: The last_copy_operation_received_time_utc of this SecondaryReplicatorStatus.
        :param last_replication_operation_received_time_utc: The last_replication_operation_received_time_utc of this SecondaryReplicatorStatus.
        :param replication_queue_status: The replication_queue_status of this SecondaryReplicatorStatus.
        """
        self.openapi_types = {
            'kind': ReplicaRole,
            'copy_queue_status': ReplicatorQueueStatus,
            'is_in_build': bool,
            'last_acknowledgement_sent_time_utc': datetime,
            'last_copy_operation_received_time_utc': datetime,
            'last_replication_operation_received_time_utc': datetime,
            'replication_queue_status': ReplicatorQueueStatus
        }

        self.attribute_map = {
            'kind': 'Kind',
            'copy_queue_status': 'CopyQueueStatus',
            'is_in_build': 'IsInBuild',
            'last_acknowledgement_sent_time_utc': 'LastAcknowledgementSentTimeUtc',
            'last_copy_operation_received_time_utc': 'LastCopyOperationReceivedTimeUtc',
            'last_replication_operation_received_time_utc': 'LastReplicationOperationReceivedTimeUtc',
            'replication_queue_status': 'ReplicationQueueStatus'
        }

        self._kind = kind
        self._copy_queue_status = copy_queue_status
        self._is_in_build = is_in_build
        self._last_acknowledgement_sent_time_utc = last_acknowledgement_sent_time_utc
        self._last_copy_operation_received_time_utc = last_copy_operation_received_time_utc
        self._last_replication_operation_received_time_utc = last_replication_operation_received_time_utc
        self._replication_queue_status = replication_queue_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecondaryReplicatorStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecondaryReplicatorStatus of this SecondaryReplicatorStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this SecondaryReplicatorStatus.


        :return: The kind of this SecondaryReplicatorStatus.
        :rtype: ReplicaRole
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this SecondaryReplicatorStatus.


        :param kind: The kind of this SecondaryReplicatorStatus.
        :type kind: ReplicaRole
        """
        if kind is None:
            raise ValueError("Invalid value for `kind`, must not be `None`")

        self._kind = kind

    @property
    def copy_queue_status(self):
        """Gets the copy_queue_status of this SecondaryReplicatorStatus.


        :return: The copy_queue_status of this SecondaryReplicatorStatus.
        :rtype: ReplicatorQueueStatus
        """
        return self._copy_queue_status

    @copy_queue_status.setter
    def copy_queue_status(self, copy_queue_status):
        """Sets the copy_queue_status of this SecondaryReplicatorStatus.


        :param copy_queue_status: The copy_queue_status of this SecondaryReplicatorStatus.
        :type copy_queue_status: ReplicatorQueueStatus
        """

        self._copy_queue_status = copy_queue_status

    @property
    def is_in_build(self):
        """Gets the is_in_build of this SecondaryReplicatorStatus.

        Value that indicates whether the replica is currently being built.

        :return: The is_in_build of this SecondaryReplicatorStatus.
        :rtype: bool
        """
        return self._is_in_build

    @is_in_build.setter
    def is_in_build(self, is_in_build):
        """Sets the is_in_build of this SecondaryReplicatorStatus.

        Value that indicates whether the replica is currently being built.

        :param is_in_build: The is_in_build of this SecondaryReplicatorStatus.
        :type is_in_build: bool
        """

        self._is_in_build = is_in_build

    @property
    def last_acknowledgement_sent_time_utc(self):
        """Gets the last_acknowledgement_sent_time_utc of this SecondaryReplicatorStatus.

        The last time-stamp (UTC) at which an acknowledgment was sent to the primary replicator. UTC 0 represents an invalid value, indicating that an acknowledgment message was never sent. 

        :return: The last_acknowledgement_sent_time_utc of this SecondaryReplicatorStatus.
        :rtype: datetime
        """
        return self._last_acknowledgement_sent_time_utc

    @last_acknowledgement_sent_time_utc.setter
    def last_acknowledgement_sent_time_utc(self, last_acknowledgement_sent_time_utc):
        """Sets the last_acknowledgement_sent_time_utc of this SecondaryReplicatorStatus.

        The last time-stamp (UTC) at which an acknowledgment was sent to the primary replicator. UTC 0 represents an invalid value, indicating that an acknowledgment message was never sent. 

        :param last_acknowledgement_sent_time_utc: The last_acknowledgement_sent_time_utc of this SecondaryReplicatorStatus.
        :type last_acknowledgement_sent_time_utc: datetime
        """

        self._last_acknowledgement_sent_time_utc = last_acknowledgement_sent_time_utc

    @property
    def last_copy_operation_received_time_utc(self):
        """Gets the last_copy_operation_received_time_utc of this SecondaryReplicatorStatus.

        The last time-stamp (UTC) at which a copy operation was received from the primary. UTC 0 represents an invalid value, indicating that a copy operation message was never received. 

        :return: The last_copy_operation_received_time_utc of this SecondaryReplicatorStatus.
        :rtype: datetime
        """
        return self._last_copy_operation_received_time_utc

    @last_copy_operation_received_time_utc.setter
    def last_copy_operation_received_time_utc(self, last_copy_operation_received_time_utc):
        """Sets the last_copy_operation_received_time_utc of this SecondaryReplicatorStatus.

        The last time-stamp (UTC) at which a copy operation was received from the primary. UTC 0 represents an invalid value, indicating that a copy operation message was never received. 

        :param last_copy_operation_received_time_utc: The last_copy_operation_received_time_utc of this SecondaryReplicatorStatus.
        :type last_copy_operation_received_time_utc: datetime
        """

        self._last_copy_operation_received_time_utc = last_copy_operation_received_time_utc

    @property
    def last_replication_operation_received_time_utc(self):
        """Gets the last_replication_operation_received_time_utc of this SecondaryReplicatorStatus.

        The last time-stamp (UTC) at which a replication operation was received from the primary. UTC 0 represents an invalid value, indicating that a replication operation message was never received. 

        :return: The last_replication_operation_received_time_utc of this SecondaryReplicatorStatus.
        :rtype: datetime
        """
        return self._last_replication_operation_received_time_utc

    @last_replication_operation_received_time_utc.setter
    def last_replication_operation_received_time_utc(self, last_replication_operation_received_time_utc):
        """Sets the last_replication_operation_received_time_utc of this SecondaryReplicatorStatus.

        The last time-stamp (UTC) at which a replication operation was received from the primary. UTC 0 represents an invalid value, indicating that a replication operation message was never received. 

        :param last_replication_operation_received_time_utc: The last_replication_operation_received_time_utc of this SecondaryReplicatorStatus.
        :type last_replication_operation_received_time_utc: datetime
        """

        self._last_replication_operation_received_time_utc = last_replication_operation_received_time_utc

    @property
    def replication_queue_status(self):
        """Gets the replication_queue_status of this SecondaryReplicatorStatus.


        :return: The replication_queue_status of this SecondaryReplicatorStatus.
        :rtype: ReplicatorQueueStatus
        """
        return self._replication_queue_status

    @replication_queue_status.setter
    def replication_queue_status(self, replication_queue_status):
        """Sets the replication_queue_status of this SecondaryReplicatorStatus.


        :param replication_queue_status: The replication_queue_status of this SecondaryReplicatorStatus.
        :type replication_queue_status: ReplicatorQueueStatus
        """

        self._replication_queue_status = replication_queue_status
