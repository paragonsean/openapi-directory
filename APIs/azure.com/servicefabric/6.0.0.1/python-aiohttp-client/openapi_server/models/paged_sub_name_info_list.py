# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PagedSubNameInfoList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, continuation_token: str=None, is_consistent: bool=None, sub_names: List[str]=None):
        """PagedSubNameInfoList - a model defined in OpenAPI

        :param continuation_token: The continuation_token of this PagedSubNameInfoList.
        :param is_consistent: The is_consistent of this PagedSubNameInfoList.
        :param sub_names: The sub_names of this PagedSubNameInfoList.
        """
        self.openapi_types = {
            'continuation_token': str,
            'is_consistent': bool,
            'sub_names': List[str]
        }

        self.attribute_map = {
            'continuation_token': 'ContinuationToken',
            'is_consistent': 'IsConsistent',
            'sub_names': 'SubNames'
        }

        self._continuation_token = continuation_token
        self._is_consistent = is_consistent
        self._sub_names = sub_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PagedSubNameInfoList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PagedSubNameInfoList of this PagedSubNameInfoList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def continuation_token(self):
        """Gets the continuation_token of this PagedSubNameInfoList.

        The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results then the continuation token is not included in the response.

        :return: The continuation_token of this PagedSubNameInfoList.
        :rtype: str
        """
        return self._continuation_token

    @continuation_token.setter
    def continuation_token(self, continuation_token):
        """Sets the continuation_token of this PagedSubNameInfoList.

        The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results then the continuation token is not included in the response.

        :param continuation_token: The continuation_token of this PagedSubNameInfoList.
        :type continuation_token: str
        """

        self._continuation_token = continuation_token

    @property
    def is_consistent(self):
        """Gets the is_consistent of this PagedSubNameInfoList.

        Indicates whether any name under the given name has been modified during the enumeration. If there was a modification, this property value is false.

        :return: The is_consistent of this PagedSubNameInfoList.
        :rtype: bool
        """
        return self._is_consistent

    @is_consistent.setter
    def is_consistent(self, is_consistent):
        """Sets the is_consistent of this PagedSubNameInfoList.

        Indicates whether any name under the given name has been modified during the enumeration. If there was a modification, this property value is false.

        :param is_consistent: The is_consistent of this PagedSubNameInfoList.
        :type is_consistent: bool
        """

        self._is_consistent = is_consistent

    @property
    def sub_names(self):
        """Gets the sub_names of this PagedSubNameInfoList.


        :return: The sub_names of this PagedSubNameInfoList.
        :rtype: List[str]
        """
        return self._sub_names

    @sub_names.setter
    def sub_names(self, sub_names):
        """Sets the sub_names of this PagedSubNameInfoList.


        :param sub_names: The sub_names of this PagedSubNameInfoList.
        :type sub_names: List[str]
        """

        self._sub_names = sub_names
