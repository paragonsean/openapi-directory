# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chaos_event import ChaosEvent
from openapi_server.models.chaos_event_kind import ChaosEventKind
from openapi_server.models.chaos_parameters import ChaosParameters
from openapi_server import util


class StartedChaosEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: ChaosEventKind=None, time_stamp_utc: datetime=None, chaos_parameters: ChaosParameters=None):
        """StartedChaosEvent - a model defined in OpenAPI

        :param kind: The kind of this StartedChaosEvent.
        :param time_stamp_utc: The time_stamp_utc of this StartedChaosEvent.
        :param chaos_parameters: The chaos_parameters of this StartedChaosEvent.
        """
        self.openapi_types = {
            'kind': ChaosEventKind,
            'time_stamp_utc': datetime,
            'chaos_parameters': ChaosParameters
        }

        self.attribute_map = {
            'kind': 'Kind',
            'time_stamp_utc': 'TimeStampUtc',
            'chaos_parameters': 'ChaosParameters'
        }

        self._kind = kind
        self._time_stamp_utc = time_stamp_utc
        self._chaos_parameters = chaos_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartedChaosEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartedChaosEvent of this StartedChaosEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this StartedChaosEvent.


        :return: The kind of this StartedChaosEvent.
        :rtype: ChaosEventKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this StartedChaosEvent.


        :param kind: The kind of this StartedChaosEvent.
        :type kind: ChaosEventKind
        """
        if kind is None:
            raise ValueError("Invalid value for `kind`, must not be `None`")

        self._kind = kind

    @property
    def time_stamp_utc(self):
        """Gets the time_stamp_utc of this StartedChaosEvent.


        :return: The time_stamp_utc of this StartedChaosEvent.
        :rtype: datetime
        """
        return self._time_stamp_utc

    @time_stamp_utc.setter
    def time_stamp_utc(self, time_stamp_utc):
        """Sets the time_stamp_utc of this StartedChaosEvent.


        :param time_stamp_utc: The time_stamp_utc of this StartedChaosEvent.
        :type time_stamp_utc: datetime
        """
        if time_stamp_utc is None:
            raise ValueError("Invalid value for `time_stamp_utc`, must not be `None`")

        self._time_stamp_utc = time_stamp_utc

    @property
    def chaos_parameters(self):
        """Gets the chaos_parameters of this StartedChaosEvent.


        :return: The chaos_parameters of this StartedChaosEvent.
        :rtype: ChaosParameters
        """
        return self._chaos_parameters

    @chaos_parameters.setter
    def chaos_parameters(self, chaos_parameters):
        """Sets the chaos_parameters of this StartedChaosEvent.


        :param chaos_parameters: The chaos_parameters of this StartedChaosEvent.
        :type chaos_parameters: ChaosParameters
        """

        self._chaos_parameters = chaos_parameters
