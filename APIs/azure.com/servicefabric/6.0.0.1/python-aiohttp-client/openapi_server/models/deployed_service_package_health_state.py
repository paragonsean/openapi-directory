# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_state import HealthState
from openapi_server import util


class DeployedServicePackageHealthState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregated_health_state: HealthState=None, application_name: str=None, node_name: str=None, service_manifest_name: str=None, service_package_activation_id: str=None):
        """DeployedServicePackageHealthState - a model defined in OpenAPI

        :param aggregated_health_state: The aggregated_health_state of this DeployedServicePackageHealthState.
        :param application_name: The application_name of this DeployedServicePackageHealthState.
        :param node_name: The node_name of this DeployedServicePackageHealthState.
        :param service_manifest_name: The service_manifest_name of this DeployedServicePackageHealthState.
        :param service_package_activation_id: The service_package_activation_id of this DeployedServicePackageHealthState.
        """
        self.openapi_types = {
            'aggregated_health_state': HealthState,
            'application_name': str,
            'node_name': str,
            'service_manifest_name': str,
            'service_package_activation_id': str
        }

        self.attribute_map = {
            'aggregated_health_state': 'AggregatedHealthState',
            'application_name': 'ApplicationName',
            'node_name': 'NodeName',
            'service_manifest_name': 'ServiceManifestName',
            'service_package_activation_id': 'ServicePackageActivationId'
        }

        self._aggregated_health_state = aggregated_health_state
        self._application_name = application_name
        self._node_name = node_name
        self._service_manifest_name = service_manifest_name
        self._service_package_activation_id = service_package_activation_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeployedServicePackageHealthState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeployedServicePackageHealthState of this DeployedServicePackageHealthState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregated_health_state(self):
        """Gets the aggregated_health_state of this DeployedServicePackageHealthState.


        :return: The aggregated_health_state of this DeployedServicePackageHealthState.
        :rtype: HealthState
        """
        return self._aggregated_health_state

    @aggregated_health_state.setter
    def aggregated_health_state(self, aggregated_health_state):
        """Sets the aggregated_health_state of this DeployedServicePackageHealthState.


        :param aggregated_health_state: The aggregated_health_state of this DeployedServicePackageHealthState.
        :type aggregated_health_state: HealthState
        """

        self._aggregated_health_state = aggregated_health_state

    @property
    def application_name(self):
        """Gets the application_name of this DeployedServicePackageHealthState.

        The name of the application, including the 'fabric:' URI scheme.

        :return: The application_name of this DeployedServicePackageHealthState.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this DeployedServicePackageHealthState.

        The name of the application, including the 'fabric:' URI scheme.

        :param application_name: The application_name of this DeployedServicePackageHealthState.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def node_name(self):
        """Gets the node_name of this DeployedServicePackageHealthState.

        The name of a Service Fabric node.

        :return: The node_name of this DeployedServicePackageHealthState.
        :rtype: str
        """
        return self._node_name

    @node_name.setter
    def node_name(self, node_name):
        """Sets the node_name of this DeployedServicePackageHealthState.

        The name of a Service Fabric node.

        :param node_name: The node_name of this DeployedServicePackageHealthState.
        :type node_name: str
        """

        self._node_name = node_name

    @property
    def service_manifest_name(self):
        """Gets the service_manifest_name of this DeployedServicePackageHealthState.

        The name of the service manifest.

        :return: The service_manifest_name of this DeployedServicePackageHealthState.
        :rtype: str
        """
        return self._service_manifest_name

    @service_manifest_name.setter
    def service_manifest_name(self, service_manifest_name):
        """Sets the service_manifest_name of this DeployedServicePackageHealthState.

        The name of the service manifest.

        :param service_manifest_name: The service_manifest_name of this DeployedServicePackageHealthState.
        :type service_manifest_name: str
        """

        self._service_manifest_name = service_manifest_name

    @property
    def service_package_activation_id(self):
        """Gets the service_package_activation_id of this DeployedServicePackageHealthState.

        The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId is always an empty string. 

        :return: The service_package_activation_id of this DeployedServicePackageHealthState.
        :rtype: str
        """
        return self._service_package_activation_id

    @service_package_activation_id.setter
    def service_package_activation_id(self, service_package_activation_id):
        """Sets the service_package_activation_id of this DeployedServicePackageHealthState.

        The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId is always an empty string. 

        :param service_package_activation_id: The service_package_activation_id of this DeployedServicePackageHealthState.
        :type service_package_activation_id: str
        """

        self._service_package_activation_id = service_package_activation_id
