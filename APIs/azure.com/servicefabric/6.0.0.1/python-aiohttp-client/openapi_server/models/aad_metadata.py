# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AadMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authority: str=None, client: str=None, cluster: str=None, login: str=None, redirect: str=None, tenant: str=None):
        """AadMetadata - a model defined in OpenAPI

        :param authority: The authority of this AadMetadata.
        :param client: The client of this AadMetadata.
        :param cluster: The cluster of this AadMetadata.
        :param login: The login of this AadMetadata.
        :param redirect: The redirect of this AadMetadata.
        :param tenant: The tenant of this AadMetadata.
        """
        self.openapi_types = {
            'authority': str,
            'client': str,
            'cluster': str,
            'login': str,
            'redirect': str,
            'tenant': str
        }

        self.attribute_map = {
            'authority': 'authority',
            'client': 'client',
            'cluster': 'cluster',
            'login': 'login',
            'redirect': 'redirect',
            'tenant': 'tenant'
        }

        self._authority = authority
        self._client = client
        self._cluster = cluster
        self._login = login
        self._redirect = redirect
        self._tenant = tenant

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AadMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AadMetadata of this AadMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authority(self):
        """Gets the authority of this AadMetadata.

        The AAD authority url.

        :return: The authority of this AadMetadata.
        :rtype: str
        """
        return self._authority

    @authority.setter
    def authority(self, authority):
        """Sets the authority of this AadMetadata.

        The AAD authority url.

        :param authority: The authority of this AadMetadata.
        :type authority: str
        """

        self._authority = authority

    @property
    def client(self):
        """Gets the client of this AadMetadata.

        The AAD client application Id.

        :return: The client of this AadMetadata.
        :rtype: str
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this AadMetadata.

        The AAD client application Id.

        :param client: The client of this AadMetadata.
        :type client: str
        """

        self._client = client

    @property
    def cluster(self):
        """Gets the cluster of this AadMetadata.

        The AAD cluster application Id.

        :return: The cluster of this AadMetadata.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this AadMetadata.

        The AAD cluster application Id.

        :param cluster: The cluster of this AadMetadata.
        :type cluster: str
        """

        self._cluster = cluster

    @property
    def login(self):
        """Gets the login of this AadMetadata.

        The AAD login url.

        :return: The login of this AadMetadata.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login):
        """Sets the login of this AadMetadata.

        The AAD login url.

        :param login: The login of this AadMetadata.
        :type login: str
        """

        self._login = login

    @property
    def redirect(self):
        """Gets the redirect of this AadMetadata.

        The client application redirect address.

        :return: The redirect of this AadMetadata.
        :rtype: str
        """
        return self._redirect

    @redirect.setter
    def redirect(self, redirect):
        """Sets the redirect of this AadMetadata.

        The client application redirect address.

        :param redirect: The redirect of this AadMetadata.
        :type redirect: str
        """

        self._redirect = redirect

    @property
    def tenant(self):
        """Gets the tenant of this AadMetadata.

        The AAD tenant Id.

        :return: The tenant of this AadMetadata.
        :rtype: str
        """
        return self._tenant

    @tenant.setter
    def tenant(self, tenant):
        """Sets the tenant of this AadMetadata.

        The AAD tenant Id.

        :param tenant: The tenant of this AadMetadata.
        :type tenant: str
        """

        self._tenant = tenant
