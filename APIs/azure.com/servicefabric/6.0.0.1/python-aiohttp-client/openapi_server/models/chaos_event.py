# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chaos_event_kind import ChaosEventKind
from openapi_server import util


class ChaosEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: ChaosEventKind=None, time_stamp_utc: datetime=None):
        """ChaosEvent - a model defined in OpenAPI

        :param kind: The kind of this ChaosEvent.
        :param time_stamp_utc: The time_stamp_utc of this ChaosEvent.
        """
        self.openapi_types = {
            'kind': ChaosEventKind,
            'time_stamp_utc': datetime
        }

        self.attribute_map = {
            'kind': 'Kind',
            'time_stamp_utc': 'TimeStampUtc'
        }

        self._kind = kind
        self._time_stamp_utc = time_stamp_utc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChaosEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChaosEvent of this ChaosEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this ChaosEvent.


        :return: The kind of this ChaosEvent.
        :rtype: ChaosEventKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ChaosEvent.


        :param kind: The kind of this ChaosEvent.
        :type kind: ChaosEventKind
        """
        if kind is None:
            raise ValueError("Invalid value for `kind`, must not be `None`")

        self._kind = kind

    @property
    def time_stamp_utc(self):
        """Gets the time_stamp_utc of this ChaosEvent.


        :return: The time_stamp_utc of this ChaosEvent.
        :rtype: datetime
        """
        return self._time_stamp_utc

    @time_stamp_utc.setter
    def time_stamp_utc(self, time_stamp_utc):
        """Sets the time_stamp_utc of this ChaosEvent.


        :param time_stamp_utc: The time_stamp_utc of this ChaosEvent.
        :type time_stamp_utc: datetime
        """
        if time_stamp_utc is None:
            raise ValueError("Invalid value for `time_stamp_utc`, must not be `None`")

        self._time_stamp_utc = time_stamp_utc
