# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResumeClusterUpgradeDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, upgrade_domain: str=None):
        """ResumeClusterUpgradeDescription - a model defined in OpenAPI

        :param upgrade_domain: The upgrade_domain of this ResumeClusterUpgradeDescription.
        """
        self.openapi_types = {
            'upgrade_domain': str
        }

        self.attribute_map = {
            'upgrade_domain': 'UpgradeDomain'
        }

        self._upgrade_domain = upgrade_domain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResumeClusterUpgradeDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResumeClusterUpgradeDescription of this ResumeClusterUpgradeDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def upgrade_domain(self):
        """Gets the upgrade_domain of this ResumeClusterUpgradeDescription.

        The next upgrade domain for this cluster upgrade.

        :return: The upgrade_domain of this ResumeClusterUpgradeDescription.
        :rtype: str
        """
        return self._upgrade_domain

    @upgrade_domain.setter
    def upgrade_domain(self, upgrade_domain):
        """Sets the upgrade_domain of this ResumeClusterUpgradeDescription.

        The next upgrade domain for this cluster upgrade.

        :param upgrade_domain: The upgrade_domain of this ResumeClusterUpgradeDescription.
        :type upgrade_domain: str
        """
        if upgrade_domain is None:
            raise ValueError("Invalid value for `upgrade_domain`, must not be `None`")

        self._upgrade_domain = upgrade_domain
