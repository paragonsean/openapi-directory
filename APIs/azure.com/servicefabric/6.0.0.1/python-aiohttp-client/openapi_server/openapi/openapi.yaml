openapi: 3.0.1
info:
  description: "Service Fabric REST Client APIs allows management of Service Fabric\
    \ clusters, applications and services."
  title: Service Fabric Client APIs
  version: 6.0.0.1
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/servicefabric/data-plane/Microsoft.ServiceFabric/stable/6.0/servicefabric.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: servicefabric
  x-tags:
  - Azure
  - Microsoft
servers:
- url: http://azure.local:19080/
- url: https://azure.local:19080/
paths:
  /$/CancelRepairTask:
    post:
      description: |
        This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: cancel_repair_task
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api-version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RepairTaskCancelDescription'
        description: Describes the repair task to be cancelled.
        required: true
        x-ms-parameter-location: method
        x-body-name: RepairTaskCancelDescription
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairTaskUpdateInfo'
          description: |
            A successful operation will return 200 status code.
            The response body provides information about the updated repair task.
            Success indicates that the cancellation request was recorded, but does not guarantee that the repair task will be cancelled.
            Clients may use the State property of the repair task to determine the current state of the repair task.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Requests the cancellation of the given repair task.
      tags:
      - RepairManagement
      x-codegen-request-body-name: RepairTaskCancelDescription
      x-openapi-router-controller: openapi_server.controllers.repair_management_controller
  /$/CreateRepairTask:
    post:
      description: |
        For clusters that have the Repair Manager Service configured,
        this API provides a way to create repair tasks that run automatically or manually.
        For repair tasks that run automatically, an appropriate repair executor
        must be running for each repair action to run automatically.
        These are currently only available in specially-configured Azure Cloud Services.

        To create a manual repair task, provide the set of impacted node names and the
        expected impact. When the state of the created repair task changes to approved,
        you can safely perform repair actions on those nodes.

        This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: create_repair_task
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RepairTask'
        description: Describes the repair task to be created or updated.
        required: true
        x-ms-parameter-location: method
        x-body-name: RepairTask
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairTaskUpdateInfo'
          description: |
            A successful operation will return 200 status code.
            The response body provides information about the created repair task.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Creates a new repair task.
      tags:
      - RepairManagement
      x-codegen-request-body-name: RepairTask
      x-openapi-router-controller: openapi_server.controllers.repair_management_controller
  /$/DeleteRepairTask:
    post:
      description: |
        This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: delete_repair_task
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RepairTaskDeleteDescription'
        description: Describes the repair task to be deleted.
        required: true
        x-ms-parameter-location: method
        x-body-name: RepairTaskDeleteDescription
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Deletes a completed repair task.
      tags:
      - RepairManagement
      x-codegen-request-body-name: RepairTaskDeleteDescription
      x-openapi-router-controller: openapi_server.controllers.repair_management_controller
  /$/ForceApproveRepairTask:
    post:
      description: |
        This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: force_approve_repair_task
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RepairTaskApproveDescription'
        description: Describes the repair task to be approved.
        required: true
        x-ms-parameter-location: method
        x-body-name: RepairTaskApproveDescription
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairTaskUpdateInfo'
          description: |
            A successful operation will return 200 status code.
            The response body provides information about the updated repair task.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Forces the approval of the given repair task.
      tags:
      - RepairManagement
      x-codegen-request-body-name: RepairTaskApproveDescription
      x-openapi-router-controller: openapi_server.controllers.repair_management_controller
  /$/GetAadMetadata:
    get:
      description: |
        Gets the Azure Active Directory metadata used for secured connection to cluster.
        This API is not supposed to be called separately. It provides information needed to set up an Azure Active Directory secured connection with a Service Fabric cluster.
      operationId: get_aad_metadata
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AadMetadataObject'
          description: A successful operation will return 200 status code and the
            Azure Active Directory metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the Azure Active Directory metadata used for secured connection
        to cluster.
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/GetClusterConfiguration:
    get:
      description: |
        Get the Service Fabric standalone cluster configuration. The cluster configuration contains properties of the cluster that include different node types on the cluster,
        security configurations, fault and upgrade domain topologies etc.
      operationId: get_cluster_configuration
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version of the Standalone cluster json configuration.
        in: query
        name: ConfigurationApiVersion
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfiguration'
          description: A successful operation will return 200 status code and the
            requested cluster configuration information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Get the Service Fabric standalone cluster configuration.
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/GetClusterConfigurationUpgradeStatus:
    get:
      description: |
        Get the cluster configuration upgrade status of a Service Fabric standalone cluster.
      operationId: get_cluster_configuration_upgrade_status
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigurationUpgradeStatusInfo'
          description: A successful operation will return 200 status code and the
            requested cluster configuration upgrade status.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Get the cluster configuration upgrade status of a Service Fabric standalone
        cluster.
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/GetClusterHealth:
    get:
      description: |
        Gets the health of a Service Fabric cluster.
        Use EventsHealthStateFilter to filter the collection of health events reported on the cluster based on the health state.
        Similarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to filter the collection of nodes and applications returned based on their aggregated health state.
      operationId: get_cluster_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering of the node health state objects returned in the result of cluster health query
          based on their health state. The possible values for this parameter include integer value of one of the
          following health states. Only nodes that match the filter are returned. All nodes are used to evaluate the aggregated health state.
          If not specified, all entries are returned.
          The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
          For example, if the provided value is 6 then health state of nodes with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: NodesHealthStateFilter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering of the application health state objects returned in the result of cluster health
          query based on their health state.
          The possible values for this parameter include integer value obtained from members or bitwise operations
          on members of HealthStateFilter enumeration. Only applications that match the filter are returned.
          All applications are used to evaluate the aggregated health state. If not specified, all entries are returned.
          The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
          For example, if the provided value is 6 then health state of applications with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: ApplicationsHealthStateFilter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: EventsHealthStateFilter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates whether the health statistics should be returned as part of the query result. False by default.
          The statistics show the number of children entities in health state Ok, Warning, and Error.
        in: query
        name: ExcludeHealthStatistics
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates whether the health statistics should include the fabric:/System application health statistics. False by default.
          If IncludeSystemApplicationHealthStatistics is set to true, the health statistics include the entities that belong to the fabric:/System application.
          Otherwise, the query result includes health statistics only for user applications.
          The health statistics must be included in the query result for this parameter to be applied.
        in: query
        name: IncludeSystemApplicationHealthStatistics
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHealth'
          description: A successful operation will return 200 status code and the
            requested cluster health information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the health of a Service Fabric cluster.
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
    post:
      description: |
        Gets the health of a Service Fabric cluster.
        Use EventsHealthStateFilter to filter the collection of health events reported on the cluster based on the health state.
        Similarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to filter the collection of nodes and applications returned based on their aggregated health state.
        Use ClusterHealthPolicies to override the health policies used to evaluate the health.
      operationId: get_cluster_health_using_policy
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering of the node health state objects returned in the result of cluster health query
          based on their health state. The possible values for this parameter include integer value of one of the
          following health states. Only nodes that match the filter are returned. All nodes are used to evaluate the aggregated health state.
          If not specified, all entries are returned.
          The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
          For example, if the provided value is 6 then health state of nodes with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: nodes_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering of the application health state objects returned in the result of cluster health
          query based on their health state.
          The possible values for this parameter include integer value obtained from members or bitwise operations
          on members of HealthStateFilter enumeration. Only applications that match the filter are returned.
          All applications are used to evaluate the aggregated health state. If not specified, all entries are returned.
          The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
          For example, if the provided value is 6 then health state of applications with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: applications_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates whether the health statistics should be returned as part of the query result. False by default.
          The statistics show the number of children entities in health state Ok, Warning, and Error.
        in: query
        name: exclude_health_statistics
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates whether the health statistics should include the fabric:/System application health statistics. False by default.
          If IncludeSystemApplicationHealthStatistics is set to true, the health statistics include the entities that belong to the fabric:/System application.
          Otherwise, the query result includes health statistics only for user applications.
          The health statistics must be included in the query result for this parameter to be applied.
        in: query
        name: include_system_application_health_statistics
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ClusterHealthPolicies'
        description: |
          Describes the health policies used to evaluate the cluster health.
          If not present, the health evaluation uses the cluster health policy defined in the cluster manifest or the default cluster health policy.
          By default, each application is evaluated using its specific application health policy, defined in the application manifest, or the default health policy, if no policy is defined in manifest.
          If the application health policy map is specified, and it has an entry for an application, the specified application health policy
          is used to evaluate the application health.
        required: false
        x-ms-parameter-location: method
        x-body-name: ClusterHealthPolicies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHealth'
          description: A successful operation will return 200 status code and the
            requested cluster health information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the health of a Service Fabric cluster using the specified policy.
      tags:
      - Cluster
      x-codegen-request-body-name: ClusterHealthPolicies
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/GetClusterHealthChunk:
    get:
      description: |
        Gets the health of a Service Fabric cluster using health chunks. Includes the aggregated health state of the cluster, but none of the cluster entities.
        To expand the cluster health and get the health state of all or some of the entities, use the POST URI and specify the cluster health chunk query description.
      operationId: get_cluster_health_chunk
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHealthChunk'
          description: A successful operation will return 200 status code and the
            requested cluster health chunk information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the health of a Service Fabric cluster using health chunks.
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
    post:
      description: |
        Gets the health of a Service Fabric cluster using health chunks. The health evaluation is done based on the input cluster health chunk query description.
        The query description allows users to specify health policies for evaluating the cluster and its children.
        Users can specify very flexible filters to select which cluster entities to return. The selection can be done based on the entities health state and based on the hierarchy.
        The query can return multi-level children of the entities based on the specified filters. For example, it can return one application with a specified name, and for this application, return
        only services that are in Error or Warning, and all partitions and replicas for one of these services.
      operationId: get_cluster_health_chunk_using_policy_and_advanced_filters
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ClusterHealthChunkQueryDescription'
        description: |
          Describes the cluster and application health policies used to evaluate the cluster health and the filters to select which cluster entities to be returned.
          If the cluster health policy is present, it is used to evaluate the cluster events and the cluster nodes. If not present, the health evaluation uses the cluster health policy defined in the cluster manifest or the default cluster health policy.
          By default, each application is evaluated using its specific application health policy, defined in the application manifest, or the default health policy, if no policy is defined in manifest.
          If the application health policy map is specified, and it has an entry for an application, the specified application health policy
          is used to evaluate the application health.
          Users can specify very flexible filters to select which cluster entities to include in response. The selection can be done based on the entities health state and based on the hierarchy.
          The query can return multi-level children of the entities based on the specified filters. For example, it can return one application with a specified name, and for this application, return
          only services that are in Error or Warning, and all partitions and replicas for one of these services.
        required: false
        x-ms-parameter-location: method
        x-body-name: ClusterHealthChunkQueryDescription
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHealthChunk'
          description: A successful operation will return 200 status code and the
            requested cluster health chunk information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the health of a Service Fabric cluster using health chunks.
      tags:
      - Cluster
      x-codegen-request-body-name: ClusterHealthChunkQueryDescription
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/GetClusterManifest:
    get:
      description: |
        Get the Service Fabric cluster manifest. The cluster manifest contains properties of the cluster that include different node types on the cluster,
        security configurations, fault and upgrade domain topologies etc.

        These properties are specified as part of the ClusterConfig.JSON file while deploying a stand alone cluster. However, most of the information in the cluster manifest
        is generated internally by service fabric during cluster deployment in other deployment scenarios (for e.g when using azuer portal).

        The contents of the cluster manifest are for informational purposes only and users are not expected to take a dependency on the format of the file contents or its interpretation.
      operationId: get_cluster_manifest
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterManifest'
          description: A successful operation will return 200 status code and the
            requested cluster manifest information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Get the Service Fabric cluster manifest.
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/GetProvisionedCodeVersions:
    get:
      description: Gets a list of information about fabric code versions that are
        provisioned in the cluster. The parameter CodeVersion can be used to optionally
        filter the output to only that particular version.
      operationId: get_provisioned_fabric_code_version_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The product version of Service Fabric.
        in: query
        name: CodeVersion
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricCodeVersionInfoList'
          description: A successful operation will return 200 status code and the
            requested provisioned code versions information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets a list of fabric code versions that are provisioned in a Service
        Fabric cluster.
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/GetProvisionedConfigVersions:
    get:
      description: Gets a list of information about fabric config versions that are
        provisioned in the cluster. The parameter ConfigVersion can be used to optionally
        filter the output to only that particular version.
      operationId: get_provisioned_fabric_config_version_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The config version of Service Fabric.
        in: query
        name: ConfigVersion
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricConfigVersionInfoList'
          description: A successful operation will return 200 status code and the
            requested provisioned config versions information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets a list of fabric config versions that are provisioned in a Service
        Fabric cluster.
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/GetRepairTaskList:
    get:
      description: |
        This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: get_repair_task_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The repair task ID prefix to be matched.
        in: query
        name: TaskIdFilter
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          A bitwise-OR of the following values, specifying which task states should be included in the result list.
          - 1 - Created
          - 2 - Claimed
          - 4 - Preparing
          - 8 - Approved
          - 16 - Executing
          - 32 - Restoring
          - 64 - Completed
        in: query
        name: StateFilter
        schema:
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the repair executor whose claimed tasks should be
          included in the list.
        in: query
        name: ExecutorFilter
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairTaskList'
          description: |
            A successful operation will return 200 status code.
            The response body provides a list of repair tasks matching all of the given filters.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets a list of repair tasks matching the given filters.
      tags:
      - RepairManagement
      x-openapi-router-controller: openapi_server.controllers.repair_management_controller
  /$/GetUpgradeProgress:
    get:
      description: "Gets the current progress of the ongoing cluster upgrade. If no\
        \ upgrade is currently in progress, gets the last state of the previous cluster\
        \ upgrade."
      operationId: get_cluster_upgrade_progress
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterUpgradeProgressObject'
          description: A successful operation will return 200 status code and the
            requested cluster upgrade progress.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the progress of the current cluster upgrade.
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/InvokeInfrastructureCommand:
    post:
      description: |
        For clusters that have one or more instances of the Infrastructure Service configured,
        this API provides a way to send infrastructure-specific commands to a particular
        instance of the Infrastructure Service.

        Available commands and their corresponding response formats vary depending upon
        the infrastructure on which the cluster is running.

        This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: invoke_infrastructure_command
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The text of the command to be invoked. The content of the command
          is infrastructure-specific.
        in: query
        name: Command
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the infrastructure service. This is  the full
          name of the infrastructure service without the 'fabric:' URI scheme. This
          parameter required only for the cluster that have more than one instance
          of infrastructure service running.
        in: query
        name: ServiceId
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureServiceResponse'
          description: |
            The response from the infrastructure service. The response format is a JSON stream.
            The contents of the response depend on which command was issued.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Invokes an administrative command on the given Infrastructure Service
        instance.
      tags:
      - Infrastructure
      x-openapi-router-controller: openapi_server.controllers.infrastructure_controller
  /$/InvokeInfrastructureQuery:
    get:
      description: |
        For clusters that have one or more instances of the Infrastructure Service configured,
        this API provides a way to send infrastructure-specific queries to a particular
        instance of the Infrastructure Service.

        Available commands and their corresponding response formats vary depending upon
        the infrastructure on which the cluster is running.

        This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: invoke_infrastructure_query
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The text of the command to be invoked. The content of the command
          is infrastructure-specific.
        in: query
        name: command
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the infrastructure service. This is  the full
          name of the infrastructure service without the 'fabric:' URI scheme. This
          parameter required only for the cluster that have more than one instance
          of infrastructure service running.
        in: query
        name: service_id
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureServiceResponse'
          description: |
            The response from the infrastructure service. The response format is a JSON stream.
            The contents of the response depend on which command was issued.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Invokes a read-only query on the given infrastructure service instance.
      tags:
      - Infrastructure
      x-openapi-router-controller: openapi_server.controllers.infrastructure_controller
  /$/MoveToNextUpgradeDomain:
    post:
      description: Make the cluster upgrade move on to the next upgrade domain.
      operationId: resume_cluster_upgrade
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResumeClusterUpgradeDescription'
        description: Describes the parameters for resuming a cluster upgrade.
        required: true
        x-ms-parameter-location: method
        x-body-name: ResumeClusterUpgradeDescription
      responses:
        "200":
          content: {}
          description: A successful response means that the cluster upgrade has moved
            on to the next upgrade domain.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Make the cluster upgrade move on to the next upgrade domain.
      tags:
      - Cluster
      x-codegen-request-body-name: ResumeClusterUpgradeDescription
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/Provision:
    post:
      description: Validate and provision the code or configuration packages of a
        Service Fabric cluster.
      operationId: provision_cluster
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProvisionFabricDescription'
        description: Describes the parameters for provisioning a cluster.
        required: true
        x-ms-parameter-location: method
        x-body-name: ProvisionFabricDescription
      responses:
        "200":
          content: {}
          description: A successful response means that the code or configuration
            packages have been provisioned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Provision the code or configuration packages of a Service Fabric cluster.
      tags:
      - Cluster
      x-codegen-request-body-name: ProvisionFabricDescription
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/RecoverAllPartitions:
    post:
      description: Indicates to the Service Fabric cluster that it should attempt
        to recover any services (including system services) which are currently stuck
        in quorum loss. This operation should only be performed if it is known that
        the replicas that are down cannot be recovered. Incorrect use of this API
        can cause potential data loss.
      operationId: recover_all_partitions
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation request will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Indicates to the Service Fabric cluster that it should attempt to recover
        any services (including system services) which are currently stuck in quorum
        loss.
      tags:
      - Partition
      x-openapi-router-controller: openapi_server.controllers.partition_controller
  /$/RecoverSystemPartitions:
    post:
      description: Indicates to the Service Fabric cluster that it should attempt
        to recover the system services which are currently stuck in quorum loss. This
        operation should only be performed if it is known that the replicas that are
        down cannot be recovered. Incorrect use of this API can cause potential data
        loss.
      operationId: recover_system_partitions
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation request will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Indicates to the Service Fabric cluster that it should attempt to recover
        the system services which are currently stuck in quorum loss.
      tags:
      - Partition
      x-openapi-router-controller: openapi_server.controllers.partition_controller
  /$/ReportClusterHealth:
    post:
      description: |
        Sends a health report on a Service Fabric cluster. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway node, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, run GetClusterHealth and check that the report appears in the HealthEvents section.
      operationId: report_cluster_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          A flag which indicates whether the report should be sent immediately.
          A health report is sent to a Service Fabric gateway Application, which forwards to the health store.
          If Immediate is set to true, the report is sent immediately from Http Gateway to the health store, regardless of the fabric client settings that the Http Gateway Application is using.
          This is useful for critical reports that should be sent as soon as possible.
          Depending on timing and other conditions, sending the report may still fail, for example if the Http Gateway is closed or the message doesn't reach the Gateway.
          If Immediate is set to false, the report is sent based on the health client settings from the Http Gateway. Therefore, it will be batched according to the HealthReportSendInterval configuration.
          This is the recommended setting because it allows the health client to optimize health reporting messages to health store as well as health report processing.
          By default, reports are not sent immediately.
        in: query
        name: Immediate
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HealthInformation'
        description: Describes the health information for the health report. This
          information needs to be present in all of the health reports sent to the
          health manager.
        required: true
        x-ms-parameter-location: method
        x-body-name: HealthInformation
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code when the
            cluster health report is accepted for processing.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Sends a health report on the Service Fabric cluster.
      tags:
      - Cluster
      x-codegen-request-body-name: HealthInformation
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/RollbackUpgrade:
    post:
      description: Rollback the upgrade of a Service Fabric cluster.
      operationId: rollback_cluster_upgrade
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "202":
          content: {}
          description: A successful response means that the rollback of a cluster
            upgrade has been initiated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Rollback the upgrade of a Service Fabric cluster.
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/StartClusterConfigurationUpgrade:
    post:
      description: Validate the supplied configuration upgrade parameters and start
        upgrading the cluster configuration if the parameters are valid.
      operationId: start_cluster_configuration_upgrade
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ClusterConfigurationUpgradeDescription'
        description: Parameters for a standalone cluster configuration upgrade.
        required: true
        x-ms-parameter-location: method
        x-body-name: ClusterConfigurationUpgradeDescription
      responses:
        "202":
          content: {}
          description: A successful response means that the cluster configuration
            upgrade has started. Use GetClusterConfigurationUpgradeStatus operation
            to get the status of the upgrade.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Start upgrading the configuration of a Service Fabric standalone cluster.
      tags:
      - Cluster
      x-codegen-request-body-name: ClusterConfigurationUpgradeDescription
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/Unprovision:
    post:
      description: Unprovision the code or configuration packages of a Service Fabric
        cluster.
      operationId: unprovision_cluster
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UnprovisionFabricDescription'
        description: Describes the parameters for unprovisioning a cluster.
        required: true
        x-ms-parameter-location: method
        x-body-name: UnprovisionFabricDescription
      responses:
        "200":
          content: {}
          description: A successful response means that the code or configuration
            packages have been unprovisioned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Unprovision the code or configuration packages of a Service Fabric
        cluster.
      tags:
      - Cluster
      x-codegen-request-body-name: UnprovisionFabricDescription
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/UpdateRepairExecutionState:
    post:
      description: |
        This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: update_repair_execution_state
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RepairTask'
        description: Describes the repair task to be created or updated.
        required: true
        x-ms-parameter-location: method
        x-body-name: RepairTask
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairTaskUpdateInfo'
          description: |
            A successful operation will return 200 status code.
            The response body provides information about the updated repair task.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Updates the execution state of a repair task.
      tags:
      - RepairManagement
      x-codegen-request-body-name: RepairTask
      x-openapi-router-controller: openapi_server.controllers.repair_management_controller
  /$/UpdateRepairTaskHealthPolicy:
    post:
      description: |
        This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: update_repair_task_health_policy
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RepairTaskUpdateHealthPolicyDescription'
        description: Describes the repair task healthy policy to be updated.
        required: true
        x-ms-parameter-location: method
        x-body-name: RepairTaskUpdateHealthPolicyDescription
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairTaskUpdateInfo'
          description: |
            A successful operation will return 200 status code.
            The response body provides information about the updated repair task.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Updates the health policy of the given repair task.
      tags:
      - RepairManagement
      x-codegen-request-body-name: RepairTaskUpdateHealthPolicyDescription
      x-openapi-router-controller: openapi_server.controllers.repair_management_controller
  /$/UpdateUpgrade:
    post:
      description: Update the upgrade parameters of a Service Fabric cluster upgrade.
      operationId: update_cluster_upgrade
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateClusterUpgradeDescription'
        description: Parameters for updating a cluster upgrade.
        required: true
        x-ms-parameter-location: method
        x-body-name: UpdateClusterUpgradeDescription
      responses:
        "200":
          content: {}
          description: A successful operation returns 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Update the upgrade parameters of a Service Fabric cluster upgrade.
      tags:
      - Cluster
      x-codegen-request-body-name: UpdateClusterUpgradeDescription
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /$/Upgrade:
    post:
      description: Validate the supplied upgrade parameters and start upgrading the
        code or configuration version of a Service Fabric cluster if the parameters
        are valid.
      operationId: start_cluster_upgrade
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/StartClusterUpgradeDescription'
        description: Describes the parameters for starting a cluster upgrade.
        required: true
        x-ms-parameter-location: method
        x-body-name: StartClusterUpgradeDescription
      responses:
        "202":
          content: {}
          description: A successful response means that the cluster code or configuration
            upgrade has started. Use GetUpgradeProgress operation to get the status
            of the upgrade.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Start upgrading the code or configuration version of a Service Fabric
        cluster.
      tags:
      - Cluster
      x-codegen-request-body-name: StartClusterUpgradeDescription
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /ApplicationTypes:
    get:
      description: "Returns the information about the application types that are provisioned\
        \ or in the process of being provisioned in the Service Fabric cluster. Each\
        \ version of an application type is returned as one application type. The\
        \ response includes the name, version, status and other details about the\
        \ application type. This is a paged query, meaning that if not all of the\
        \ application types fit in a page, one page of results is returned as well\
        \ as a continuation token which can be used to get the next page. For example,\
        \ if there are 10 application types but a page only fits the first 3 application\
        \ types, or if max results is set to 3, then 3 is returned. To access the\
        \ rest of the results, retrieve subsequent pages by using the returned continuation\
        \ token in the next query. An empty continuation token is returned if there\
        \ are no subsequent pages."
      operationId: get_application_type_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Used to filter on ApplicationTypeDefinitionKind for application type query operations.
          - Default - Default value, which performs the same function as selecting "All". The value is 0.
          - All - Filter that matches input with any ApplicationTypeDefinitionKind value. The value is 65535.
          - ServiceFabricApplicationPackage - Filter that matches input with ApplicationTypeDefinitionKind value ServiceFabricApplicationPackage. The value is 1.
          - Compose - Filter that matches input with ApplicationTypeDefinitionKind value Compose. The value is 2.
        in: query
        name: ApplicationTypeDefinitionKindFilter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The flag that specifies whether application parameters will be
          excluded from the result.
        in: query
        name: ExcludeApplicationParameters
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The continuation token parameter is used to obtain next set\
          \ of results. A continuation token with a non empty value is included in\
          \ the response of the API when the results from the system do not fit in\
          \ a single response. When this value is passed to the next API call, the\
          \ API returns next set of results. If there are no further results then\
          \ the continuation token does not contain a value. The value of this parameter\
          \ should not be URL encoded."
        in: query
        name: ContinuationToken
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: "The maximum number of results to be returned as part of the\
          \ paged queries. This parameter defines the upper bound on the number of\
          \ results returned. The results returned can be less than the specified\
          \ maximum results if they do not fit in the message as per the max message\
          \ size restrictions defined in the configuration. If this parameter is zero\
          \ or not specified, the paged queries includes as much results as possible\
          \ that fit in the return message."
        in: query
        name: MaxResults
        schema:
          default: 0
          format: int64
          minimum: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedApplicationTypeInfoList'
          description: List of application types in the cluster.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list of application types in the Service Fabric cluster.
      tags:
      - ApplicationType
      x-ms-examples:
        Exclude application parameters from the result:
          description: This example shows how to exclude application parameter in
            the result when getting the information about application types that are
            provisioned or being provisioned in the cluster.
          operationId: GetApplicationTypeInfoList
          parameters:
            ExcludeApplicationParameters: "true"
            api-version: "6.0"
          responses:
            "200":
              body:
                ContinuationToken: ""
                Items:
                - DefaultParameterList: []
                  Name: CalculatorApp
                  Status: Available
                  Version: "1.0"
                - DefaultParameterList: []
                  Name: CalculatorApp
                  Status: Available
                  Version: "2.0"
                - DefaultParameterList: []
                  Name: GatewayApp
                  Status: Available
                  Version: "1.0"
                - DefaultParameterList: []
                  Name: PersistentQueueApp
                  Status: Available
                  Version: "1.0"
                - DefaultParameterList: []
                  Name: PersistentQueueApp
                  Status: Available
                  Version: "2.0"
                - DefaultParameterList: []
                  Name: VolatileQueueApp
                  Status: Available
                  Version: "1.0"
                - DefaultParameterList: []
                  Name: VolatileQueueApp
                  Status: Available
                  Version: "2.0"
              headers: {}
        Limit maximum results:
          description: This example shows how to get information about application
            types that are provisioned or being provisioned in the cluster. The number
            of results in a page are limited to maximum of five using MaxResult parameter.
          operationId: GetApplicationTypeInfoList
          parameters:
            MaxResults: 5
            api-version: "6.0"
          responses:
            "200":
              body:
                ContinuationToken: PersistentQueueApp+2.0
                Items:
                - DefaultParameterList:
                  - Key: ServiceInstanceCount
                    Value: "3"
                  Name: CalculatorApp
                  Status: Available
                  Version: "1.0"
                - DefaultParameterList:
                  - Key: ServiceInstanceCount
                    Value: "3"
                  Name: CalculatorApp
                  Status: Available
                  Version: "2.0"
                - DefaultParameterList:
                  - Key: GatewayPort
                    Value: "8505"
                  - Key: ServiceInstanceCount
                    Value: "1000"
                  Name: GatewayApp
                  Status: Available
                  Version: "1.0"
                - DefaultParameterList:
                  - Key: MinReplicaSetSize
                    Value: "2"
                  - Key: TargetReplicaSetSize
                    Value: "3"
                  Name: PersistentQueueApp
                  Status: Available
                  Version: "1.0"
                - DefaultParameterList:
                  - Key: MinReplicaSetSize
                    Value: "2"
                  - Key: TargetReplicaSetSize
                    Value: "3"
                  Name: PersistentQueueApp
                  Status: Available
                  Version: "2.0"
              headers: {}
        Page using continuation token:
          description: "This example shows how to page through the information about\
            \ application types that are provisioned or being provisioned in the cluster\
            \ using ContinuationToken parameter. The value of this parameter is provided\
            \ from the previous query, in this case the example shown above. The response\
            \ contains the remaining two results and an empty ContinuationToken. The\
            \ empty ContinuationToken indicates that additional results are not available."
          operationId: GetApplicationTypeInfoList
          parameters:
            ContinuationToken: PersistentQueueApp+2.0
            MaxResults: 5
            api-version: "6.0"
          responses:
            "200":
              body:
                ContinuationToken: ""
                Items:
                - DefaultParameterList:
                  - Key: MinReplicaSetSize
                    Value: "2"
                  - Key: TargetReplicaSetSize
                    Value: "3"
                  Name: VolatileQueueApp
                  Status: Available
                  Version: "1.0"
                - DefaultParameterList:
                  - Key: MinReplicaSetSize
                    Value: "2"
                  - Key: TargetReplicaSetSize
                    Value: "3"
                  Name: VolatileQueueApp
                  Status: Available
                  Version: "2.0"
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.application_type_controller
  /ApplicationTypes/$/Provision:
    post:
      description: Provisions or registers a Service Fabric application type with
        the cluster. This is required before any new applications can be instantiated.
      operationId: provision_application_type
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationTypeImageStorePath'
        description: The relative path for the application package in the image store
          specified during the prior copy operation.
        required: true
        x-ms-parameter-location: method
        x-body-name: ApplicationTypeImageStorePath
      responses:
        "200":
          content: {}
          description: A successful provision will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Provisions or registers a Service Fabric application type with the
        cluster.
      tags:
      - ApplicationType
      x-codegen-request-body-name: ApplicationTypeImageStorePath
      x-openapi-router-controller: openapi_server.controllers.application_type_controller
  /ApplicationTypes/{applicationTypeName}:
    get:
      description: "Returns the information about the application types that are provisioned\
        \ or in the process of being provisioned in the Service Fabric cluster. These\
        \ results are of application types whose name match exactly the one specified\
        \ as the parameter, and which comply with the given query parameters. All\
        \ versions of the application type matching the application type name are\
        \ returned, with each version returned as one application type. The response\
        \ includes the name, version, status and other details about the application\
        \ type. This is a paged query, meaning that if not all of the application\
        \ types fit in a page, one page of results is returned as well as a continuation\
        \ token which can be used to get the next page. For example, if there are\
        \ 10 application types but a page only fits the first 3 application types,\
        \ or if max results is set to 3, then 3 is returned. To access the rest of\
        \ the results, retrieve subsequent pages by using the returned continuation\
        \ token in the next query. An empty continuation token is returned if there\
        \ are no subsequent pages."
      operationId: get_application_type_info_list_by_name
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the application type.
        in: path
        name: applicationTypeName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the application type.
        in: query
        name: ApplicationTypeVersion
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The flag that specifies whether application parameters will be
          excluded from the result.
        in: query
        name: exclude_application_parameters
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The continuation token parameter is used to obtain next set\
          \ of results. A continuation token with a non empty value is included in\
          \ the response of the API when the results from the system do not fit in\
          \ a single response. When this value is passed to the next API call, the\
          \ API returns next set of results. If there are no further results then\
          \ the continuation token does not contain a value. The value of this parameter\
          \ should not be URL encoded."
        in: query
        name: continuation_token
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: "The maximum number of results to be returned as part of the\
          \ paged queries. This parameter defines the upper bound on the number of\
          \ results returned. The results returned can be less than the specified\
          \ maximum results if they do not fit in the message as per the max message\
          \ size restrictions defined in the configuration. If this parameter is zero\
          \ or not specified, the paged queries includes as much results as possible\
          \ that fit in the return message."
        in: query
        name: max_results
        schema:
          default: 0
          format: int64
          minimum: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedApplicationTypeInfoList'
          description: List of application types in the cluster.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list of application types in the Service Fabric cluster matching
        exactly the specified name.
      tags:
      - ApplicationType
      x-openapi-router-controller: openapi_server.controllers.application_type_controller
  /ApplicationTypes/{applicationTypeName}/$/GetApplicationManifest:
    get:
      description: Gets the manifest describing an application type. The response
        contains the application manifest XML as a string.
      operationId: get_application_manifest
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the application type.
        in: path
        name: application_type_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the application type.
        in: query
        name: ApplicationTypeVersion
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeManifest'
          description: Information about the node.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the manifest describing an application type.
      tags:
      - ApplicationType
      x-openapi-router-controller: openapi_server.controllers.application_type_controller
  /ApplicationTypes/{applicationTypeName}/$/GetServiceManifest:
    get:
      description: Gets the manifest describing a service type. The response contains
        the service manifest XML as a string.
      operationId: get_service_manifest
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the application type.
        in: path
        name: application_type_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the application type.
        in: query
        name: application_type_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of a service manifest registered as part of an application
          type in a Service Fabric cluster.
        in: query
        name: ServiceManifestName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTypeManifest'
          description: Information about the service type.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the manifest describing a service type.
      tags:
      - ServiceType
      x-openapi-router-controller: openapi_server.controllers.service_type_controller
  /ApplicationTypes/{applicationTypeName}/$/GetServiceTypes:
    get:
      description: "Gets the list containing the information about service types that\
        \ are supported by a provisioned application type in a Service Fabric cluster.\
        \ The response includes the name of the service type, the name and version\
        \ of the service manifest the type is defined in, kind (stateless or stateless)\
        \ of the service type and other information about it."
      operationId: get_service_type_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the application type.
        in: path
        name: application_type_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the application type.
        in: query
        name: application_type_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTypeInfoList'
          description: List of service types that are supported by a provisioned application
            type.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list containing the information about service types that are
        supported by a provisioned application type in a Service Fabric cluster.
      tags:
      - ServiceType
      x-openapi-router-controller: openapi_server.controllers.service_type_controller
  /ApplicationTypes/{applicationTypeName}/$/Unprovision:
    post:
      description: "Removes or unregisters a Service Fabric application type from\
        \ the cluster. This operation can only be performed if all application instance\
        \ of the application type has been deleted. Once the application type is unregistered,\
        \ no new application instance can be created for this particular application\
        \ type."
      operationId: unprovision_application_type
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the application type.
        in: path
        name: application_type_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationTypeImageStoreVersion'
        description: The version of the application type in the image store.
        required: true
        x-ms-parameter-location: method
        x-body-name: ApplicationTypeImageStoreVersion
      responses:
        "202":
          content: {}
          description: A 202 status code indicates the operation was accepted. A successful
            unprovision will return 202 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Removes or unregisters a Service Fabric application type from the cluster.
      tags:
      - ApplicationType
      x-codegen-request-body-name: ApplicationTypeImageStoreVersion
      x-openapi-router-controller: openapi_server.controllers.application_type_controller
  /Applications:
    get:
      description: "Gets the information about the applications that were created\
        \ or in the process of being created in the Service Fabric cluster and match\
        \ filters specified as the parameter. The response includes the name, type,\
        \ status, parameters and other details about the application. If the applications\
        \ do not fit in a page, one page of results is returned as well as a continuation\
        \ token which can be used to get the next page. Filters ApplicationTypeName\
        \ and ApplicationDefinitionKindFilter cannot be specified at the same time."
      operationId: get_application_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Used to filter on ApplicationDefinitionKind for application query operations.
          - Default - Default value, which performs the same function as selecting "All". The value is 0.
          - All - Filter that matches input with any ApplicationDefinitionKind value. The value is 65535.
          - ServiceFabricApplicationDescription - Filter that matches input with ApplicationDefinitionKind value ServiceFabricApplicationDescription. The value is 1.
          - Compose - Filter that matches input with ApplicationDefinitionKind value Compose. The value is 2.
        in: query
        name: ApplicationDefinitionKindFilter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The application type name used to filter the applications to
          query for. This value should not contain the application type version.
        in: query
        name: ApplicationTypeName
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The flag that specifies whether application parameters will be
          excluded from the result.
        in: query
        name: exclude_application_parameters
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The continuation token parameter is used to obtain next set\
          \ of results. A continuation token with a non empty value is included in\
          \ the response of the API when the results from the system do not fit in\
          \ a single response. When this value is passed to the next API call, the\
          \ API returns next set of results. If there are no further results then\
          \ the continuation token does not contain a value. The value of this parameter\
          \ should not be URL encoded."
        in: query
        name: continuation_token
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedApplicationInfoList'
          description: List of applications created in the cluster.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list of applications created in the Service Fabric cluster
        that match filters specified as the parameter.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Applications/$/Create:
    post:
      description: Creates a Service Fabric application using the specified description.
      operationId: create_application
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationDescription'
        description: Description for creating an application.
        required: true
        x-ms-parameter-location: method
        x-body-name: ApplicationDescription
      responses:
        "201":
          content: {}
          description: "A successful response means that the application creation\
            \ has been started. Use GetApplication operation to get the status of\
            \ the application. Once GetApplicationInfo successfully returns application\
            \ information, the application is created. If the application has default\
            \ services those may be in the process of being created. Use GetServiceInfo\
            \ operation to get the status of the service within the application."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Creates a Service Fabric application.
      tags:
      - Application
      x-ms-examples:
        Create application.:
          description: This example shows how to create a Service Fabric application
            without overriding any application parameter values.
          operationId: CreateApplication
          parameters:
            ApplicationDescription:
              Name: fabric:/samples/CalcApp
              TypeName: CalculatorApp
              TypeVersion: "1.0"
            api-version: "6.0"
          responses:
            "201": {}
      x-codegen-request-body-name: ApplicationDescription
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Applications/{applicationId}:
    get:
      description: "Returns the information about the application that was created\
        \ or in the process of being created in the Service Fabric cluster and whose\
        \ name matches the one specified as the parameter. The response includes the\
        \ name, type, status, parameters and other details about the application."
      operationId: get_application_info
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: applicationId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The flag that specifies whether application parameters will be
          excluded from the result.
        in: query
        name: exclude_application_parameters
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationInfo'
          description: Information about the application.
        "204":
          content: {}
          description: An empty response is returned if the specified applicationId
            is not found in the cluster.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets information about a Service Fabric application.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Applications/{applicationId}/$/Delete:
    post:
      description: "Deletes an existing Service Fabric application. An application\
        \ must be created before it can be deleted. Deleting an application will delete\
        \ all services that are part of that application. By default Service Fabric\
        \ will try to close service replicas in a graceful manner and then delete\
        \ the service. However if service is having issues closing the replica gracefully,\
        \ the delete operation may take a long time or get stuck. Use the optional\
        \ ForceRemove flag to skip the graceful close sequence and forcefully delete\
        \ the application and all of the its services."
      operationId: delete_application
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: Remove a Service Fabric application or service forcefully without
          going through the graceful shutdown sequence. This parameter can be used
          to forcefully delete an application or service for which delete is timing
          out due to issues in the service code that prevents graceful close of replicas.
        in: query
        name: ForceRemove
        schema:
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Deletes an existing Service Fabric application.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Applications/{applicationId}/$/GetHealth:
    get:
      description: "Returns the heath state of the service fabric application. The\
        \ response reports either Ok, Error or Warning health state. If the entity\
        \ is not found in the helath store, it will return Error."
      operationId: get_application_health
      parameters:
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering of the deployed applications health state objects returned in the result of application health query based on their health state.
          The possible values for this parameter include integer value of one of the following health states. Only deployed applications that match the filter will be returned.\
          All deployed applications are used to evaluate the aggregated health state. If not specified, all entries are returned.
          The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator.
          For example, if the provided value is 6 then health state of deployed applications with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: DeployedApplicationsHealthStateFilter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering of the services health state objects returned in the result of services health query based on their health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only services that match the filter are returned. All services are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value
          obtained using bitwise 'OR' operator. For example, if the provided value is 6 then health state of services with HealthState value of OK (2) and Warning (4) will be returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: ServicesHealthStateFilter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates whether the health statistics should be returned as part of the query result. False by default.
          The statistics show the number of children entities in health state Ok, Warning, and Error.
        in: query
        name: exclude_health_statistics
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationHealth'
          description: A successful operation will return 200 status code and the
            requested application health information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the health of the service fabric application.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
    post:
      description: Gets the health of a Service Fabric application. Use EventsHealthStateFilter
        to filter the collection of health events reported on the node based on the
        health state. Use ClusterHealthPolicies to override the health policies used
        to evaluate the health.
      operationId: get_application_health_using_policy
      parameters:
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering of the deployed applications health state objects returned in the result of application health query based on their health state.
          The possible values for this parameter include integer value of one of the following health states. Only deployed applications that match the filter will be returned.\
          All deployed applications are used to evaluate the aggregated health state. If not specified, all entries are returned.
          The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator.
          For example, if the provided value is 6 then health state of deployed applications with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: deployed_applications_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering of the services health state objects returned in the result of services health query based on their health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only services that match the filter are returned. All services are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value
          obtained using bitwise 'OR' operator. For example, if the provided value is 6 then health state of services with HealthState value of OK (2) and Warning (4) will be returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: services_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates whether the health statistics should be returned as part of the query result. False by default.
          The statistics show the number of children entities in health state Ok, Warning, and Error.
        in: query
        name: exclude_health_statistics
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationHealthPolicy'
        description: |
          Describes the health policies used to evaluate the health of an application or one of its children.
          If not present, the health evaluation uses the health policy from application manifest or the default health policy.
        required: false
        x-ms-parameter-location: method
        x-body-name: ApplicationHealthPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationHealth'
          description: A successful operation will return 200 status code and the
            requested node health information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the health of a Service Fabric application using the specified
        policy.
      tags:
      - Application
      x-codegen-request-body-name: ApplicationHealthPolicy
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Applications/{applicationId}/$/GetLoadInformation:
    get:
      description: "Returns the load information about the application that was created\
        \ or in the process of being created in the Service Fabric cluster and whose\
        \ name matches the one specified as the parameter. The response includes the\
        \ name, minimum nodes, maximum nodes, the number of nodes the app is occupying\
        \ currently, and application load metric information about the application."
      operationId: get_application_load_info
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationLoadInfo'
          description: Information about the application load.
        "204":
          content: {}
          description: An empty response is returned if the specified applicationId
            is not found in the cluster.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets load information about a Service Fabric application.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Applications/{applicationId}/$/GetServices:
    get:
      description: Returns the information about all services belonging to the application
        specified by the application id.
      operationId: get_service_info_list
      parameters:
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The service type name used to filter the services to query for.
        in: query
        name: ServiceTypeName
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The continuation token parameter is used to obtain next set\
          \ of results. A continuation token with a non empty value is included in\
          \ the response of the API when the results from the system do not fit in\
          \ a single response. When this value is passed to the next API call, the\
          \ API returns next set of results. If there are no further results then\
          \ the continuation token does not contain a value. The value of this parameter\
          \ should not be URL encoded."
        in: query
        name: continuation_token
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedServiceInfoList'
          description: List of services in the cluster for the specified application.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the information about all services belonging to the application
        specified by the application id.
      tags:
      - Service
      x-openapi-router-controller: openapi_server.controllers.service_controller
  /Applications/{applicationId}/$/GetServices/$/Create:
    post:
      description: Creates the specified service.
      operationId: create_service
      parameters:
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ServiceDescription'
        description: The information necessary to create a service.
        required: true
        x-ms-parameter-location: method
        x-body-name: ServiceDescription
      responses:
        "202":
          content: {}
          description: A successful operation will return 202 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Creates the specified service.
      tags:
      - Service
      x-codegen-request-body-name: ServiceDescription
      x-openapi-router-controller: openapi_server.controllers.service_controller
  /Applications/{applicationId}/$/GetServices/$/CreateFromTemplate:
    post:
      description: Creates a Service Fabric service from the service template defined
        in the application manifest.
      operationId: create_service_from_template
      parameters:
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ServiceFromTemplateDescription'
        description: Describes the service that needs to be created from the template
          defined in the application manifest.
        required: true
        x-ms-parameter-location: method
        x-body-name: ServiceFromTemplateDescription
      responses:
        "202":
          content: {}
          description: A successful operation will return 202 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Creates a Service Fabric service from the service template defined
        in the application manifest.
      tags:
      - Service
      x-codegen-request-body-name: ServiceFromTemplateDescription
      x-openapi-router-controller: openapi_server.controllers.service_controller
  /Applications/{applicationId}/$/GetServices/{serviceId}:
    get:
      description: Returns the information about specified service belonging to the
        specified Service Fabric application.
      operationId: get_service_info
      parameters:
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: serviceId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfo'
          description: Information about the specified service.
        "204":
          content: {}
          description: An empty response is returned if the specified service is not
            part of the specified application.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the information about the specific service belonging to a Service
        Fabric application.
      tags:
      - Service
      x-openapi-router-controller: openapi_server.controllers.service_controller
  /Applications/{applicationId}/$/GetUpgradeProgress:
    get:
      description: Returns information about the state of the latest application upgrade
        along with details to aid debugging application health issues.
      operationId: get_application_upgrade
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationUpgradeProgressInfo'
          description: The application upgrade details.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets details for the latest upgrade performed on this application.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Applications/{applicationId}/$/MoveToNextUpgradeDomain:
    post:
      description: "Resumes an unmonitored manual Service Fabric application upgrade.\
        \ Service Fabric upgrades one upgrade domain at a time. For unmonitored manual\
        \ upgrades, after Service Fabric finishes an upgrade domain, it waits for\
        \ you to call this API before proceeding to the next upgrade domain."
      operationId: resume_application_upgrade
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResumeApplicationUpgradeDescription'
        description: Describes the parameters for resuming an application upgrade.
        required: true
        x-ms-parameter-location: method
        x-body-name: ResumeApplicationUpgradeDescription
      responses:
        "200":
          content: {}
          description: A successful response means that the application upgrade has
            been resumed in the specified upgrade domain. Use GetApplicationUpgrade
            operation to get the status of the upgrade.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Resumes upgrading an application in the Service Fabric cluster.
      tags:
      - Application
      x-codegen-request-body-name: ResumeApplicationUpgradeDescription
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Applications/{applicationId}/$/ReportHealth:
    post:
      description: |
        Reports health state of the specified Service Fabric application. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway Application, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, get application health and check that the report appears in the HealthEvents section.
      operationId: report_application_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          A flag which indicates whether the report should be sent immediately.
          A health report is sent to a Service Fabric gateway Application, which forwards to the health store.
          If Immediate is set to true, the report is sent immediately from Http Gateway to the health store, regardless of the fabric client settings that the Http Gateway Application is using.
          This is useful for critical reports that should be sent as soon as possible.
          Depending on timing and other conditions, sending the report may still fail, for example if the Http Gateway is closed or the message doesn't reach the Gateway.
          If Immediate is set to false, the report is sent based on the health client settings from the Http Gateway. Therefore, it will be batched according to the HealthReportSendInterval configuration.
          This is the recommended setting because it allows the health client to optimize health reporting messages to health store as well as health report processing.
          By default, reports are not sent immediately.
        in: query
        name: immediate
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HealthInformation'
        description: Describes the health information for the health report. This
          information needs to be present in all of the health reports sent to the
          health manager.
        required: true
        x-ms-parameter-location: method
        x-body-name: HealthInformation
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Sends a health report on the Service Fabric application.
      tags:
      - Application
      x-codegen-request-body-name: HealthInformation
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Applications/{applicationId}/$/RollbackUpgrade:
    post:
      description: Starts rolling back the current application upgrade to the previous
        version. This API can only be used to rollback the current in-progress upgrade
        that is rolling forward to new version. If the application is not currently
        being upgraded use StartApplicationUpgrade API to upgrade it to desired version
        including rolling back to a previous version.
      operationId: rollback_application_upgrade
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful response means that the application has started
            to rollback. Use GetApplicationUpgrade operation to get the status of
            the upgrade.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Starts rolling back the currently on-going upgrade of an application
        in the Service Fabric cluster.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Applications/{applicationId}/$/UpdateUpgrade:
    post:
      description: Updates the parameters of an ongoing application upgrade from the
        ones specified at the time of starting the application upgrade. This may be
        required to mitigate stuck application upgrades due to incorrect parameters
        or issues in the application to make progress.
      operationId: update_application_upgrade
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationUpgradeUpdateDescription'
        description: Parameters for updating an existing application upgrade.
        required: true
        x-ms-parameter-location: method
        x-body-name: ApplicationUpgradeUpdateDescription
      responses:
        "200":
          content: {}
          description: A successful response means that the application upgrade has
            updated with the specified parameters. Use GetApplicationUpgrade operation
            to get the status of the upgrade.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Updates an ongoing application upgrade in the Service Fabric cluster.
      tags:
      - Application
      x-codegen-request-body-name: ApplicationUpgradeUpdateDescription
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Applications/{applicationId}/$/Upgrade:
    post:
      description: Validates the supplied application upgrade parameters and starts
        upgrading the application if the parameters are valid.
      operationId: start_application_upgrade
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationUpgradeDescription'
        description: Parameters for an application upgrade.
        required: true
        x-ms-parameter-location: method
        x-body-name: ApplicationUpgradeDescription
      responses:
        "200":
          content: {}
          description: A successful response means that the application upgrade has
            started. Use GetApplicationUpgrade operation to get the status of the
            upgrade.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Starts upgrading an application in the Service Fabric cluster.
      tags:
      - Application
      x-codegen-request-body-name: ApplicationUpgradeDescription
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /ComposeDeployments:
    get:
      description: "Gets the status about the compose deployments that were created\
        \ or in the process of being created in the Service Fabric cluster. The response\
        \ includes the name, status and other details about the compose deployments.\
        \ If the list of deployments do not fit in a page, one page of results is\
        \ returned as well as a continuation token which can be used to get the next\
        \ page."
      operationId: get_compose_deployment_status_list
      parameters:
      - description: The version of the API. This is a required parameter and its
          value must be "6.0-preview".
        in: query
        name: api-version
        required: true
        schema:
          default: 6.0-preview
          enum:
          - 6.0-preview
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The continuation token parameter is used to obtain next set\
          \ of results. A continuation token with a non empty value is included in\
          \ the response of the API when the results from the system do not fit in\
          \ a single response. When this value is passed to the next API call, the\
          \ API returns next set of results. If there are no further results then\
          \ the continuation token does not contain a value. The value of this parameter\
          \ should not be URL encoded."
        in: query
        name: continuation_token
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: "The maximum number of results to be returned as part of the\
          \ paged queries. This parameter defines the upper bound on the number of\
          \ results returned. The results returned can be less than the specified\
          \ maximum results if they do not fit in the message as per the max message\
          \ size restrictions defined in the configuration. If this parameter is zero\
          \ or not specified, the paged queries includes as much results as possible\
          \ that fit in the return message."
        in: query
        name: max_results
        schema:
          default: 0
          format: int64
          minimum: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedComposeDeploymentStatusInfoList'
          description: List of status of compose deployments in the cluster.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list of compose deployments created in the Service Fabric
        cluster.
      tags:
      - Compose Deployment
      x-openapi-router-controller: openapi_server.controllers.compose_deployment_controller
  /ComposeDeployments/$/Create:
    put:
      description: Creates a Service Fabric compose deployment.
      operationId: create_compose_deployment
      parameters:
      - description: The version of the API. This is a required parameter and its
          value must be "6.0-preview".
        in: query
        name: api_version
        required: true
        schema:
          default: 6.0-preview
          enum:
          - 6.0-preview
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateComposeDeploymentDescription'
        description: Describes the compose deployment that needs to be created.
        required: true
        x-ms-parameter-location: method
        x-body-name: CreateComposeDeploymentDescription
      responses:
        "202":
          content: {}
          description: A successful operation will return 202 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Creates a Service Fabric compose deployment.
      tags:
      - Compose Deployment
      x-codegen-request-body-name: CreateComposeDeploymentDescription
      x-openapi-router-controller: openapi_server.controllers.compose_deployment_controller
  /ComposeDeployments/{deploymentName}:
    get:
      description: "Returns the status of the compose deployment that was created\
        \ or in the process of being created in the Service Fabric cluster and whose\
        \ name matches the one specified as the parameter. The response includes the\
        \ name, status and other details about the deployment."
      operationId: get_compose_deployment_status
      parameters:
      - description: The version of the API. This is a required parameter and its
          value must be "6.0-preview".
        in: query
        name: api_version
        required: true
        schema:
          default: 6.0-preview
          enum:
          - 6.0-preview
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the deployment.
        in: path
        name: deploymentName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComposeDeploymentStatusInfo'
          description: Information about the compose deployment.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets information about a Service Fabric compose deployment.
      tags:
      - Compose Deployment
      x-openapi-router-controller: openapi_server.controllers.compose_deployment_controller
  /ComposeDeployments/{deploymentName}/$/Delete:
    post:
      description: Deletes an existing Service Fabric compose deployment.
      operationId: remove_compose_deployment
      parameters:
      - description: The version of the API. This is a required parameter and its
          value must be "6.0-preview".
        in: query
        name: api_version
        required: true
        schema:
          default: 6.0-preview
          enum:
          - 6.0-preview
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the deployment.
        in: path
        name: deployment_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "202":
          content: {}
          description: A successful operation will return 202 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Deletes an existing Service Fabric compose deployment from cluster.
      tags:
      - Compose Deployment
      x-openapi-router-controller: openapi_server.controllers.compose_deployment_controller
  /ComposeDeployments/{deploymentName}/$/GetUpgradeProgress:
    get:
      description: Returns the information about the state of the compose deployment
        upgrade along with details to aid debugging application health issues.
      operationId: get_compose_deployment_upgrade_progress
      parameters:
      - description: The version of the API. This is a required parameter and its
          value must be "6.0-preview".
        in: query
        name: api_version
        required: true
        schema:
          default: 6.0-preview
          enum:
          - 6.0-preview
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the deployment.
        in: path
        name: deployment_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComposeDeploymentUpgradeProgressInfo'
          description: Details about the compose deployment upgrade.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets details for the latest upgrade performed on this Service Fabric
        compose deployment.
      tags:
      - Compose Deployment
      x-openapi-router-controller: openapi_server.controllers.compose_deployment_controller
  /ComposeDeployments/{deploymentName}/$/Upgrade:
    post:
      description: Validates the supplied upgrade parameters and starts upgrading
        the deployment if the parameters are valid.
      operationId: start_compose_deployment_upgrade
      parameters:
      - description: The version of the API. This is a required parameter and its
          value must be "6.0-preview".
        in: query
        name: api_version
        required: true
        schema:
          default: 6.0-preview
          enum:
          - 6.0-preview
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the deployment.
        in: path
        name: deployment_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ComposeDeploymentUpgradeDescription'
        description: Parameters for upgrading compose deployment.
        required: true
        x-ms-parameter-location: method
        x-body-name: ComposeDeploymentUpgradeDescription
      responses:
        "202":
          content: {}
          description: A successful response means that the upgrade has started. Use
            GetComposeDeploymentUpgrade operation to get the status of the upgrade.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Starts upgrading a compose deployment in the Service Fabric cluster.
      tags:
      - Compose Deployment
      x-codegen-request-body-name: ComposeDeploymentUpgradeDescription
      x-openapi-router-controller: openapi_server.controllers.compose_deployment_controller
  /Faults/:
    get:
      description: Gets the a list of user-induced fault operations filtered by provided
        input.
      operationId: get_fault_operation_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Used to filter on OperationType for user-induced operations.
          65535 - select all
          1     - select PartitionDataLoss.
          2     - select PartitionQuorumLoss.
          4     - select PartitionRestart.
          8     - select NodeTransition.
        in: query
        name: TypeFilter
        required: true
        schema:
          default: 65535
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Used to filter on OperationState's for user-induced operations.
          65535 - select All
          1     - select Running
          2     - select RollingBack
          8     - select Completed
          16    - select Faulted
          32    - select Cancelled
          64    - select ForceCancelled
        in: query
        name: StateFilter
        required: true
        schema:
          default: 65535
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatusList'
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets a list of user-induced fault operations filtered by provided input.
      tags:
      - Faults
      x-ms-examples:
        Gets information on fault operations:
          description: This shows an example of possible output for GetFaultOperationList
          operationId: GetFaultOperationList
          parameters:
            StateFilter: 0xFF
            TypeFilter: 0xFF
            api-version: "6.0"
          responses:
            "200":
              body:
              - OperationId: 00000000-0000-0000-0000-000000000010
                State: Completed
                Type: PartitionDataLoss
              - OperationId: 00000000-0000-0000-0000-000000000020
                State: Completed
                Type: PartitionQuorumLoss
              - OperationId: 00000000-0000-0000-0000-000000000030
                State: Completed
                Type: PartitionRestart
              - OperationId: 00000000-0000-0000-0000-000000000500
                State: Faulted
                Type: NodeTransition
              - OperationId: 00000000-0000-0000-0000-000000000700
                State: Completed
                Type: NodeTransition
              - OperationId: 00000000-0000-0000-0000-000000000710
                State: Completed
                Type: NodeTransition
              - OperationId: 88ef90f9-0b94-46b0-b817-a6ea20c07f8a
                State: Completed
                Type: PartitionRestart
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.faults_controller
  /Faults/$/Cancel:
    post:
      description: |
        The following is a list of APIs that start fault operations that may be cancelled using CancelOperation -
        - StartDataLoss
        - StartQuorumLoss
        - StartPartitionRestart
        - StartNodeTransition

        If force is false, then the specified user-induced operation will be gracefully stopped and cleaned up.  If force is true, the command will be aborted, and some internal state
        may be left behind.  Specifying force as true should be used with care.  Calling this API with force set to true is not allowed until this API has already
        been called on the same test command with force set to false first, or unless the test command already has an OperationState of OperationState.RollingBack.
        Clarification: OperationState.RollingBack means that the system will/is be cleaning up internal system state caused by executing the command.  It will not restore data if the
        test command was to cause data loss.  For example, if you call StartDataLoss then call this API, the system will only clean up internal state from running the command.
        It will not restore the target partition's data, if the command progressed far enough to cause data loss.

        Important note:  if this API is invoked with force==true, internal state may be left behind.
      operationId: cancel_operation
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: A GUID that identifies a call of this API.  This is passed into
          the corresponding GetProgress API
        in: query
        name: OperationId
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Indicates whether to gracefully rollback and clean up internal
          system state modified by executing the user-induced operation.
        in: query
        name: Force
        required: true
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Cancels a user-induced fault operation.
      tags:
      - Faults
      x-openapi-router-controller: openapi_server.controllers.faults_controller
  /Faults/Nodes/{nodeName}/$/GetTransitionProgress:
    get:
      description: |
        Gets the progress of an operation started with StartNodeTransition using the provided OperationId.
      operationId: get_node_transition_progress
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: nodeName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: A GUID that identifies a call of this API.  This is passed into
          the corresponding GetProgress API
        in: query
        name: operation_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeTransitionProgress'
          description: Information about the progress of a node transition operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the progress of an operation started using StartNodeTransition.
      tags:
      - Faults
      x-ms-examples:
        Gets information about a completed NodeTransition operation:
          description: "This shows an example of possible output when GetTransitionProgress\
            \ has reached a State of Completed.  If the State has a value of Running,\
            \ only the State field will have a value."
          operationId: GetNodeTransitionProgress
          parameters:
            OperationId: a9c24269-88e9-4812-b4ad-a0bf2b724ad4
            api-version: "6.0"
            nodeName: N0060
          responses:
            "200":
              body:
                NodeTransitionResult:
                  ErrorCode: 0
                  NodeResult:
                    NodeInstanceId: "131366982707950527"
                    NodeName: N0060
                State: Completed
              headers: {}
        Gets information about a running NodeTransition operation:
          description: This shows an example of output when GetTransitionProgress
            has a State of Running.
          operationId: GetNodeTransitionProgress
          parameters:
            OperationId: ed903556-acf1-489c-9f33-b484c31f9087
            api-version: "6.0"
            nodeName: N0060
          responses:
            "200":
              body:
                State: Running
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.faults_controller
  /Faults/Nodes/{nodeName}/$/StartTransition/:
    post:
      description: |
        Starts or stops a cluster node.  A cluster node is a process, not the OS instance itself.  To start a node, pass in "Start" for the NodeTransitionType parameter.
        To stop a node, pass in "Stop" for the NodeTransitionType parameter.  This API starts the operation - when the API returns the node may not have finished transitioning yet.
        Call GetNodeTransitionProgress with the same OperationId to get the progress of the operation.
      operationId: start_node_transition
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: A GUID that identifies a call of this API.  This is passed into
          the corresponding GetProgress API
        in: query
        name: operation_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates the type of transition to perform.  NodeTransitionType.Start will start a stopped node.  NodeTransitionType.Stop will stop a node that is up.
            - Invalid - Reserved.  Do not pass into API.
            - Start - Transition a stopped node to up.
            - Stop - Transition an up node to stopped.
        in: query
        name: NodeTransitionType
        required: true
        schema:
          enum:
          - Invalid
          - Start
          - Stop
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The node instance ID of the target node.  This can be determined
          through GetNodeInfo API.
        in: query
        name: NodeInstanceId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The duration, in seconds, to keep the node stopped.  The minimum\
          \ value is 600, the maximum is 14400.  After this time expires, the node\
          \ will automatically come back up."
        in: query
        name: StopDurationInSeconds
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "202":
          content: {}
          description: A 202 status code indicates the operation was accepted.  Call
            the GetNodeTransitionProgress API to get the progress.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Starts or stops a cluster node.
      tags:
      - Faults
      x-openapi-router-controller: openapi_server.controllers.faults_controller
  /Faults/Services/{serviceId}/$/GetPartitions/{partitionId}/$/GetDataLossProgress:
    get:
      description: |
        Gets the progress of a data loss operation started with StartDataLoss, using the OperationId.
      operationId: get_data_loss_progress
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identity of the partition.
        in: path
        name: partitionId
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: A GUID that identifies a call of this API.  This is passed into
          the corresponding GetProgress API
        in: query
        name: operation_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionDataLossProgress'
          description: Information about the progress of the partition data loss operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the progress of a partition data loss operation started using
        the StartDataLoss API.
      tags:
      - Faults
      x-ms-examples:
        Get information about a partition data loss operation.  In this case the operation is a State of Running:
          description: "This shows an example of output when a data loss operation\
            \ is in a Running State.  If the State has a value of Running, only the\
            \ State field will have a value."
          operationId: GetDataLossProgress
          parameters:
            OperationId: 7216486c-1ee9-4b00-99b2-92b26fcb07f5
            api-version: "6.0"
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
            serviceId: fabric:/myapp/myservice
          responses:
            "200":
              body:
                State: Running
              headers: {}
        Gets information about a partition data loss operation.  In this case the operation has a State of Completed:
          description: "This shows an example of possible output when GetDataLossProgress\
            \ has reached a State of Completed.  If the State has a value of Running,\
            \ only the State field will have a value."
          operationId: GetDataLossProgress
          parameters:
            OperationId: 7216486c-1ee9-4b00-99b2-92b26fcb07f5
            api-version: "6.0"
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
            serviceId: fabric:/myapp/myservice
          responses:
            "200":
              body:
                InvokeDataLossResult:
                  ErrorCode: 0
                  SelectedPartition:
                    PartitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                    ServiceName: fabric:/myapp/myservice
                State: Completed
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.faults_controller
  /Faults/Services/{serviceId}/$/GetPartitions/{partitionId}/$/GetQuorumLossProgress:
    get:
      description: |
        Gets the progress of a quorum loss operation started with StartQuorumLoss, using the provided OperationId.
      operationId: get_quorum_loss_progress
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: A GUID that identifies a call of this API.  This is passed into
          the corresponding GetProgress API
        in: query
        name: operation_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionQuorumLossProgress'
          description: Information about the progress of a partition quorum loss operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the progress of a quorum loss operation on a partition started
        using the StartQuorumLoss API.
      tags:
      - Faults
      x-ms-examples:
        Gets information about a completed quorum loss operation:
          description: "This shows an example of possible output when GetQuorumLossProgress\
            \ has reached a State of Completed.  If the State has a value of Running,\
            \ only the State field will have a value."
          operationId: GetQuorumLossProgress
          parameters:
            OperationId: 81fbaee7-4f49-44bb-a350-4cb2b51dbf26
            api-version: "6.0"
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
            serviceId: fabric:/myapp/myservice
          responses:
            "200":
              body:
                InvokeQuorumLossResult:
                  ErrorCode: 0
                  SelectedPartition:
                    PartitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                    ServiceName: fabric:/myapp/myservice
                State: Completed
              headers: {}
        Gets information about a running quorum operation operation:
          description: "This shows an example of possible output when GetQuorumLossProgress\
            \ has a State of Running.  If the State has a value of Running, only the\
            \ State field will have a value."
          operationId: GetQuorumLossProgress
          parameters:
            OperationId: 81fbaee7-4f49-44bb-a350-4cb2b51dbf26
            api-version: "6.0"
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
            serviceId: fabric:/myapp/myservice
          responses:
            "200":
              body:
                State: Running
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.faults_controller
  /Faults/Services/{serviceId}/$/GetPartitions/{partitionId}/$/GetRestartProgress:
    get:
      description: |
        Gets the progress of a PartitionRestart started with StartPartitionRestart using the provided OperationId.
      operationId: get_partition_restart_progress
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: A GUID that identifies a call of this API.  This is passed into
          the corresponding GetProgress API
        in: query
        name: operation_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionRestartProgress'
          description: Information about the progress of a partition restart operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the progress of a PartitionRestart operation started using StartPartitionRestart.
      tags:
      - Faults
      x-ms-examples:
        Get information a completed PartitionRestart operation:
          description: "This shows an example of possible output when GetPartitionRestartProgress\
            \ has reached a State of Completed.  If the State has a value of Running,\
            \ only the State field will have a value."
          operationId: GetPartitionRestartProgress
          parameters:
            OperationId: 6eb7f0d3-49ca-4cb1-81b7-ac2d56b5c5d1
            api-version: "6.0"
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
            serviceId: fabric:/myapp/myservice
          responses:
            "200":
              body:
                RestartPartitionResult:
                  ErrorCode: 0
                  SelectedPartition:
                    PartitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                    ServiceName: fabric:/myapp/myservice
                State: Completed
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.faults_controller
  /Faults/Services/{serviceId}/$/GetPartitions/{partitionId}/$/StartDataLoss:
    post:
      description: |
        This API will induce data loss for the specified partition. It will trigger a call to the OnDataLoss API of the partition.
        Actual data loss will depend on the specified DataLossMode
        PartialDataLoss - Only a quorum of replicas are removed and OnDataLoss is triggered for the partition but actual data loss depends on the presence of in-flight replication.
        FullDataLoss - All replicas are removed hence all data is lost and OnDataLoss is triggered.

        This API should only be called with a stateful service as the target.

        Calling this API with a system service as the target is not advised.

        Note:  Once this API has been called, it cannot be reversed. Calling CancelOperation will only stop execution and clean up internal system state.
        It will not restore data if the command has progressed far enough to cause data loss.

        Call the GetDataLossProgress API with the same OperationId to return information on the operation started with this API.
      operationId: start_data_loss
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: A GUID that identifies a call of this API.  This is passed into
          the corresponding GetProgress API
        in: query
        name: operation_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          This enum is passed to the StartDataLoss API to indicate what type of data loss to induce.
          - Invalid - Reserved.  Do not pass into API.
          - PartialDataLoss - PartialDataLoss option will cause a quorum of replicas to go down, triggering an OnDataLoss event in the system for the given partition.
          - FullDataLoss - FullDataLoss option will drop all the replicas which means that all the data will be lost.
        in: query
        name: DataLossMode
        required: true
        schema:
          enum:
          - Invalid
          - PartialDataLoss
          - FullDataLoss
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "202":
          content: {}
          description: A 202 status code indicates the operation was accepted.  Call
            the GetDataLossProgress API to get the progress.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: This API will induce data loss for the specified partition. It will
        trigger a call to the OnDataLossAsync API of the partition.
      tags:
      - Faults
      x-openapi-router-controller: openapi_server.controllers.faults_controller
  /Faults/Services/{serviceId}/$/GetPartitions/{partitionId}/$/StartQuorumLoss:
    post:
      description: |
        Induces quorum loss for a given stateful service partition.  This API is useful for a temporary quorum loss situation on your service.

        Call the GetQuorumLossProgress API with the same OperationId to return information on the operation started with this API.

        This can only be called on stateful persisted (HasPersistedState==true) services.  Do not use this API on stateless services or stateful in-memory only services.
      operationId: start_quorum_loss
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: A GUID that identifies a call of this API.  This is passed into
          the corresponding GetProgress API
        in: query
        name: operation_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          This enum is passed to the StartQuorumLoss API to indicate what type of quorum loss to induce.
            - Invalid - Reserved.  Do not pass into API.
            - QuorumReplicas - Partial Quorum loss mode : Minimum number of replicas for a partition will be down that will cause a quorum loss.
            - AllReplicas- Full Quorum loss mode : All replicas for a partition will be down that will cause a quorum loss.
        in: query
        name: QuorumLossMode
        required: true
        schema:
          enum:
          - Invalid
          - QuorumReplicas
          - AllReplicas
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The amount of time for which the partition will be kept in quorum
          loss.  This must be specified in seconds.
        in: query
        name: QuorumLossDuration
        required: true
        schema:
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "202":
          content: {}
          description: A 202 status code indicates the operation was accepted.  Call
            the GetQuorumLossProgress API to get the progress.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Induces quorum loss for a given stateful service partition.
      tags:
      - Faults
      x-openapi-router-controller: openapi_server.controllers.faults_controller
  /Faults/Services/{serviceId}/$/GetPartitions/{partitionId}/$/StartRestart:
    post:
      description: |
        This API is useful for testing failover.

        If used to target a stateless service partition, RestartPartitionMode must be AllReplicasOrInstances.

        Call the GetPartitionRestartProgress API using the same OperationId to get the progress.
      operationId: start_partition_restart
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: A GUID that identifies a call of this API.  This is passed into
          the corresponding GetProgress API
        in: query
        name: operation_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          - Invalid - Reserved.  Do not pass into API.
          - AllReplicasOrInstances - All replicas or instances in the partition are restarted at once.
          - OnlyActiveSecondaries - Only the secondary replicas are restarted.
        in: query
        name: RestartPartitionMode
        required: true
        schema:
          enum:
          - Invalid
          - AllReplicasOrInstances
          - OnlyActiveSecondaries
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "202":
          content: {}
          description: A 202 status code indicates the operation was accepted.  Call
            the GetPartitionRestartProgress API to get the progress.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: This API will restart some or all replicas or instances of the specified
        partition.
      tags:
      - Faults
      x-openapi-router-controller: openapi_server.controllers.faults_controller
  /ImageStore:
    get:
      description: Returns the information about the image store content at the root
        of the image store.
      operationId: get_image_store_root_content
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageStoreContent'
          description: A successful operation will return 200 status code and the
            requested image store content information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the content information at the root of the image store.
      tags:
      - ImageStore
      x-openapi-router-controller: openapi_server.controllers.image_store_controller
  /ImageStore/$/Copy:
    post:
      description: Copies the image store content from the source image store relative
        path to the destination image store relative path.
      operationId: copy_image_store_content
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ImageStoreCopyDescription'
        description: Describes the copy description for the image store.
        required: true
        x-ms-parameter-location: method
        x-body-name: ImageStoreCopyDescription
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Copies image store content internally
      tags:
      - ImageStore
      x-codegen-request-body-name: ImageStoreCopyDescription
      x-openapi-router-controller: openapi_server.controllers.image_store_controller
  /ImageStore/{contentPath}:
    delete:
      description: Deletes existing image store content being found within the given
        image store relative path. This can be used to delete uploaded application
        packages once they are provisioned.
      operationId: delete_image_store_content
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Relative path to file or folder in the image store from its root.
        in: path
        name: content_path
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Deletes existing image store content.
      tags:
      - ImageStore
      x-openapi-router-controller: openapi_server.controllers.image_store_controller
    get:
      description: Returns the information about the image store content at the specified
        contentPath relative to the root of the image store.
      operationId: get_image_store_content
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Relative path to file or folder in the image store from its root.
        in: path
        name: contentPath
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageStoreContent'
          description: A successful operation will return 200 status code and the
            requested image store content information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the image store content information.
      tags:
      - ImageStore
      x-openapi-router-controller: openapi_server.controllers.image_store_controller
    put:
      description: |
        Uploads contents of the file to the image store. Use this API if the file is small enough to upload again if the connection fails. The file's data needs to be added to the request body. The contents will be uploaded to the specified path. Image store service uses a mark file to indicate the availability of the folder. The mark file is an empty file named "_.dir". The mark file is generated by the image store service when all files in a folder are uploaded. When using File-by-File approach to upload application package in REST, the image store service isn't aware of the file hierarchy of the application package; you need to create a mark file per folder and upload it last, to let the image store service know that the folder is complete.
      operationId: upload_file
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Relative path to file or folder in the image store from its root.
        in: path
        name: content_path
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: "If the upload request succeeds, the server returns the HTTP\
            \ 200 OK status code."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Uploads contents of the file to the image store.
      tags:
      - ImageStore
      x-openapi-router-controller: openapi_server.controllers.image_store_controller
  /Names/$/Create:
    post:
      description: Creates the specified Service Fabric name.
      operationId: create_name
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NameDescription'
        description: Describes the Service Fabric name to be created.
        required: true
        x-ms-parameter-location: method
        x-body-name: NameDescription
      responses:
        "201":
          content: {}
          description: A successful response means that the name has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Creates a Service Fabric name.
      tags:
      - Property Management
      x-ms-examples:
        Create new name:
          description: This example shows how to create a new Service Fabric name.
            The name can be created under an existing name that represents an appliction
            or a service or under a completely new name.
          operationId: CreateName
          parameters:
            NameDescription:
              Name: fabric:/samples/CalculatorApp/CalculatorService/Name-1
            api-version: "6.0"
          responses:
            "201": {}
      x-codegen-request-body-name: NameDescription
      x-openapi-router-controller: openapi_server.controllers.property_management_controller
  /Names/{nameId}:
    delete:
      description: Deletes the specified Service Fabric name. A name must be created
        before it can be deleted. Deleting a name with child properties will fail.
      operationId: delete_name
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The Service Fabric name, without the 'fabric:' URI scheme."
        in: path
        name: name_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful response means that the Service Fabric name has
            been deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Deletes a Service Fabric name.
      tags:
      - Property Management
      x-openapi-router-controller: openapi_server.controllers.property_management_controller
    get:
      description: Returns whether the specified Service Fabric name exists.
      operationId: get_name_exists_info
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The Service Fabric name, without the 'fabric:' URI scheme."
        in: path
        name: nameId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful response means that the Service Fabric name exists.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Returns whether the Service Fabric name exists.
      tags:
      - Property Management
      x-openapi-router-controller: openapi_server.controllers.property_management_controller
  /Names/{nameId}/$/GetProperties:
    get:
      description: Gets information on all Service Fabric properties under a given
        name.
      operationId: get_property_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The Service Fabric name, without the 'fabric:' URI scheme."
        in: path
        name: name_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: Allows specifying whether to include the values of the properties
          returned. True if values should be returned with the metadata; False to
          return only property metadata.
        in: query
        name: IncludeValues
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The continuation token parameter is used to obtain next set\
          \ of results. A continuation token with a non empty value is included in\
          \ the response of the API when the results from the system do not fit in\
          \ a single response. When this value is passed to the next API call, the\
          \ API returns next set of results. If there are no further results then\
          \ the continuation token does not contain a value. The value of this parameter\
          \ should not be URL encoded."
        in: query
        name: continuation_token
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedPropertyInfoList'
          description: A paged list of Service Fabric properties.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets information on all Service Fabric properties under a given name.
      tags:
      - Property Management
      x-ms-examples:
        Get property info list:
          description: This example shows how to get all Service Fabric properties
            under a given name.
          operationId: GetPropertyInfoList
          parameters:
            api-version: "6.0"
            nameId: samples/apps
          responses:
            "200":
              body:
                ContinuationToken: PersistentQueueAppData$131439231986491349
                IsConsistent: true
                Properties:
                - Metadata:
                    CustomTypeId: ""
                    LastModifiedUtcTimestamp: 2017-07-17T04:27:19.049Z
                    Parent: fabric:/samples/apps
                    SequenceNumber: "10"
                    SizeInBytes: 5
                    TypeId: Int64
                  Name: CalculatorAppData
                - Metadata:
                    CustomTypeId: InitializationDataType
                    LastModifiedUtcTimestamp: 2017-07-17T04:36:19.049Z
                    Parent: fabric:/samples/apps
                    SequenceNumber: "12"
                    SizeInBytes: 5
                    TypeId: Binary
                  Name: PersistentQueueAppData
              headers: {}
        Get property info list with values:
          description: This example shows how to get all Service Fabric properties
            and their values under a given name.
          operationId: GetPropertyInfoList
          parameters:
            IncludeValues: true
            api-version: "6.0"
            nameId: samples/apps
          responses:
            "200":
              body:
                ContinuationToken: PersistentQueueAppData$131439231986491349
                IsConsistent: true
                Properties:
                - Metadata:
                    CustomTypeId: ""
                    LastModifiedUtcTimestamp: 2017-07-17T04:27:19.049Z
                    Parent: fabric:/samples/apps
                    SequenceNumber: "10"
                    SizeInBytes: 8
                    TypeId: Int64
                  Name: CalculatorAppData
                  Value:
                    Data: "4534"
                    Kind: Int64
                - Metadata:
                    CustomTypeId: InitializationDataType
                    LastModifiedUtcTimestamp: 2017-07-17T04:36:19.049Z
                    Parent: fabric:/samples/apps
                    SequenceNumber: "12"
                    SizeInBytes: 5
                    TypeId: Binary
                  Name: PersistentQueueAppData
                  Value:
                    Data:
                    - 6
                    - 7
                    - 8
                    - 9
                    - 10
                    Kind: Binary
              headers: {}
        Page using continuation token:
          description: "This example shows how to page through the information about\
            \ properties under a given Service Fabric name using ContinuationToken\
            \ parameter. The value of this parameter is provided from the previous\
            \ query, in this case the example shown above. The response contains the\
            \ remaining two results and an empty ContinuationToken. The empty ContinuationToken\
            \ indicates that additional results are not available."
          operationId: GetPropertyInfoList
          parameters:
            ContinuationToken: PersistentQueueAppData$131439231986491349
            IncludeValues: true
            api-version: "6.0"
            nameId: samples/apps
          responses:
            "200":
              body:
                ContinuationToken: ""
                IsConsistent: true
                Properties:
                - Metadata:
                    CustomTypeId: ""
                    LastModifiedUtcTimestamp: 2017-07-17T04:01:19.049Z
                    Parent: fabric:/samples/apps
                    SequenceNumber: "8"
                    SizeInBytes: 8
                    TypeId: Double
                  Name: VolatileQueueAppData
                  Value:
                    Data: 67.89
                    Kind: Double
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.property_management_controller
  /Names/{nameId}/$/GetProperties/$/SubmitBatch:
    post:
      description: Submits a batch of property operations. Either all or none of the
        operations will be committed.
      operationId: submit_property_batch
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The Service Fabric name, without the 'fabric:' URI scheme."
        in: path
        name: name_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PropertyBatchDescriptionList'
        description: Describes the property batch operations to be submitted.
        required: true
        x-ms-parameter-location: method
        x-body-name: PropertyBatchDescriptionList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulPropertyBatchInfo'
          description: A successful response means that the property batch succeeded.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPropertyBatchInfo'
          description: "A 409 response means that one of the property batch operations\
            \ failed, and contains more information about the failure. None of the\
            \ operations were commited."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Submits a property batch.
      tags:
      - Property Management
      x-ms-examples:
        Failed property batch:
          description: "This example shows how to submit a property batch. This batch\
            \ ensures that a property exists, checks that the property has the expected\
            \ value, and deletes the property only if the previous conditions succeed.\
            \ The batch fails because the property does not have the expected value,\
            \ so the batch is not committed in a transactional manner."
          operationId: SubmitPropertyBatch
          parameters:
            PropertyBatchDescriptionList:
              Operations:
              - Exits: true
                Kind: CheckExists
                PropertyName: PersistentQueueAppData
              - Kind: CheckValue
                PropertyName: PersistentQueueAppData
                Value:
                  Data:
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  Kind: Binary
              - Kind: Delete
                PropertyName: PersistentQueueAppData
            api-version: "6.0"
            nameId: samples/apps
          responses:
            "200":
              body:
                ErrorMessage: FABRIC_E_PROPERTY_CHECK_FAILED
                Kind: Failed
                OperationIndex: 1
              headers: {}
        Successful property batch:
          description: "This example shows how to submit a property batch. This batch\
            \ ensures that a property exists, checks that the property has the expected\
            \ sequence number, and edits the property only if the previous conditions\
            \ succeed. It then performs a get operation to get the property's current\
            \ info. All the operations succeed, so the batch is committed in a transactional\
            \ manner."
          operationId: SubmitPropertyBatch
          parameters:
            PropertyBatchDescriptionList:
              Operations:
              - Exits: true
                Kind: CheckExists
                PropertyName: PersistentQueueAppData
              - Kind: CheckSequence
                PropertyName: PersistentQueueAppData
                SequenceNumber: "12"
              - CustomTypeId: InitializationData
                Kind: Put
                PropertyName: PersistentQueueAppData
                Value:
                  Data:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  Kind: Binary
              - IncludeValue: false
                Kind: Get
                PropertyName: PersistentQueueAppData
            api-version: "6.0"
            nameId: samples/apps
          responses:
            "200":
              body:
                Kind: Successful
                Properties:
                  "3":
                    Metadata:
                      CustomTypeId: InitializationData
                      LastModifiedUtcTimestamp: 2017-07-17T05:01:19.049Z
                      Parent: fabric:/samples/apps
                      SequenceNumber: "13"
                      SizeInBytes: 5
                      TypeId: Binary
                    Name: PersistentQueueAppData
              headers: {}
      x-codegen-request-body-name: PropertyBatchDescriptionList
      x-openapi-router-controller: openapi_server.controllers.property_management_controller
  /Names/{nameId}/$/GetProperty:
    delete:
      description: Deletes the specified Service Fabric property under a given name.
        A property must be created before it can be deleted.
      operationId: delete_property
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The Service Fabric name, without the 'fabric:' URI scheme."
        in: path
        name: name_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: Specifies the name of the property to get.
        in: query
        name: property_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful response means that the property has been deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Deletes the specified Service Fabric property.
      tags:
      - Property Management
      x-openapi-router-controller: openapi_server.controllers.property_management_controller
    get:
      description: Gets the specified Service Fabric property under a given name.
        This will always return both value and metadata.
      operationId: get_property_info
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The Service Fabric name, without the 'fabric:' URI scheme."
        in: path
        name: name_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: Specifies the name of the property to get.
        in: query
        name: PropertyName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyInfo'
          description: Details on the Service Fabric property.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the specified Service Fabric property.
      tags:
      - Property Management
      x-ms-examples:
        Get property info:
          description: This example shows how to get a Service Fabric property under
            a given name.
          operationId: GetPropertyInfo
          parameters:
            PropertyName: AppData
            api-version: "6.0"
            nameId: samples/apps
          responses:
            "200":
              body:
                Metadata:
                  CustomTypeId: EquationType
                  LastModifiedUtcTimestamp: 2017-07-17T04:27:19.049Z
                  Parent: fabric:/samples/apps
                  SequenceNumber: "12"
                  SizeInBytes: 12
                  TypeId: String
                Name: CalculatorAppData
                Value:
                  Data: 1+2=3
                  Kind: String
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.property_management_controller
    put:
      description: Creates or updates the specified Service Fabric property under
        a given name.
      operationId: put_property
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The Service Fabric name, without the 'fabric:' URI scheme."
        in: path
        name: name_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PropertyDescription'
        description: Describes the Service Fabric property to be created.
        required: true
        x-ms-parameter-location: method
        x-body-name: PropertyDescription
      responses:
        "200":
          content: {}
          description: A successful response means that the property has been created
            or updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Creates or updates a Service Fabric property.
      tags:
      - Property Management
      x-ms-examples:
        Put custom property:
          description: This example shows how to create or update a Service Fabric
            property under a given name with a custom type.
          operationId: PutProperty
          parameters:
            PropertyDescription:
              CustomTypeId: EquationType
              PropertyName: AppData
              Value:
                Data: 1+2=3
                Kind: String
            api-version: "6.0"
            nameId: samples/apps/CalculatorApp
          responses:
            "200": {}
        Put property:
          description: This example shows how to create or update a Service Fabric
            property under a given name.
          operationId: PutProperty
          parameters:
            PropertyDescription:
              PropertyName: AppData
              Value:
                Data:
                - 0
                - 1
                - 2
                - 3
                - 4
                - 5
                Kind: Binary
            api-version: "6.0"
            nameId: samples/apps/CalculatorApp
          responses:
            "200": {}
      x-codegen-request-body-name: PropertyDescription
      x-openapi-router-controller: openapi_server.controllers.property_management_controller
  /Names/{nameId}/$/GetSubNames:
    get:
      description: "Enumerates all the Service Fabric names under a given name. If\
        \ the subnames do not fit in a page, one page of results is returned as well\
        \ as a continuation token which can be used to get the next page. Querying\
        \ a name that doesn't exist will fail."
      operationId: get_sub_name_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The Service Fabric name, without the 'fabric:' URI scheme."
        in: path
        name: name_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: Allows specifying that the search performed should be recursive.
        in: query
        name: Recursive
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The continuation token parameter is used to obtain next set\
          \ of results. A continuation token with a non empty value is included in\
          \ the response of the API when the results from the system do not fit in\
          \ a single response. When this value is passed to the next API call, the\
          \ API returns next set of results. If there are no further results then\
          \ the continuation token does not contain a value. The value of this parameter\
          \ should not be URL encoded."
        in: query
        name: continuation_token
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedSubNameInfoList'
          description: A paged list of Service Fabric names.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Enumerates all the Service Fabric names under a given name.
      tags:
      - Property Management
      x-ms-examples:
        Get sub names:
          description: This example shows how to get information about all sub names
            of a given Service Fabric name.
          operationId: GetSubNameInfoList
          parameters:
            api-version: "6.0"
            nameId: samples
          responses:
            "200":
              body:
                ContinuationToken: ""
                IsConsistent: true
                SubNames:
                - fabric:/samples/CalculatorApp
                - fabric:/samples/mynames
              headers: {}
        Page using continuation token:
          description: "This example shows how to page through the information about\
            \ sub names under a given Service Fabric name using ContinuationToken\
            \ parameter. The value of this parameter is provided from the previous\
            \ query, in this case the example shown above. The response contains the\
            \ remaining two results and an empty ContinuationToken. The empty ContinuationToken\
            \ indicates that additional results are not available."
          operationId: GetSubNameInfoList
          parameters:
            ContinuationToken: fabric:/samples/apps/PersistentQueueApp$131439231986491349
            Recursive: true
            api-version: "6.0"
            nameId: samples
          responses:
            "200":
              body:
                ContinuationToken: ""
                IsConsistent: true
                SubNames:
                - fabric:/samples/apps/VolatileQueueApp
                - fabric:/samples/apps/NotepadApp
              headers: {}
        Recursively search sub names:
          description: This example shows how to recursively get information about
            all child sub names of a given Service Fabric name.
          operationId: GetSubNameInfoList
          parameters:
            Recursive: true
            api-version: "6.0"
            nameId: samples
          responses:
            "200":
              body:
                ContinuationToken: ""
                IsConsistent: true
                SubNames:
                - fabric:/samples/apps
                - fabric:/samples/data
                - fabric:/samples/CalculatorApp
                - fabric:/samples/CalculatorApp/CalculatorService
                - fabric:/samples/CalculatorApp/CalculatorService/Name-1
                - fabric:/samples/CalculatorApp/CalculatorService/Name-2
                - fabric:/samples/mynames/name-1
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.property_management_controller
  /Nodes:
    get:
      description: "The Nodes endpoint returns information about the nodes in the\
        \ Service Fabric Cluster. The respons include the name, status, id, health,\
        \ uptime and other details about the node."
      operationId: get_node_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The continuation token parameter is used to obtain next set\
          \ of results. A continuation token with a non empty value is included in\
          \ the response of the API when the results from the system do not fit in\
          \ a single response. When this value is passed to the next API call, the\
          \ API returns next set of results. If there are no further results then\
          \ the continuation token does not contain a value. The value of this parameter\
          \ should not be URL encoded."
        in: query
        name: continuation_token
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          Allows filtering the nodes based on the NodeStatus. Only the nodes that are matching the specified filter value will be returned. The filter value can be one of the following.

            - default - This filter value will match all of the nodes excepts the ones with with status as Unknown or Removed.
            - all - This filter value will match all of the nodes.
            - up - This filter value will match nodes that are Up.
            - down - This filter value will match nodes that are Down.
            - enabling - This filter value will match nodes that are in the process of being enabled with status as Enabling.
            - disabling - This filter value will match nodes that are in the process of being disabled with status as Disabling.
            - disabled - This filter value will match nodes that are Disabled.
            - unknown - This filter value will match nodes whose status is Unknown. A node would be in Unknown state if Service Fabric does not have authoritative information about that node. This can happen if the system learns about a node at runtime.
            - removed - This filter value will match nodes whose status is Removed. These are the nodes that are removed from the cluster using the RemoveNodeState API.
        in: query
        name: NodeStatusFilter
        schema:
          default: default
          enum:
          - default
          - all
          - up
          - down
          - enabling
          - disabling
          - disabled
          - unknown
          - removed
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedNodeInfoList'
          description: List of nodes in the cluster.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list of nodes in the Service Fabric cluster.
      tags:
      - Node
      x-ms-examples:
        Get information about all nodes.:
          description: This example shows how to get information about all the nodes
            in the cluster when the information fits in a single response message
            without the need for paging through ContinuationToken parameter.
          operationId: GetNodeInfoList
          parameters:
            api-version: "6.0"
          responses:
            "200":
              body:
                ContinuationToken: ""
                Items:
                - CodeVersion: 5.6.135.9494
                  ConfigVersion: "1.0"
                  FaultDomain: fd:/4
                  HealthState: Ok
                  Id:
                    Id: 4f4e3698a196896b5efe8156cc4e1351
                  InstanceId: "131353697443064929"
                  IpAddressOrFQDN: localhost
                  IsSeedNode: false
                  IsStopped: false
                  Name: _Node_4
                  NodeDeactivationInfo:
                    NodeDeactivationIntent: Invalid
                    NodeDeactivationStatus: None
                    NodeDeactivationTask: []
                    PendingSafetyChecks: []
                  NodeDownTimeInSeconds: "0"
                  NodeStatus: Up
                  NodeUpTimeInSeconds: "526996"
                  Type: NodeType4
                  UpgradeDomain: "4"
                - CodeVersion: 5.6.135.9494
                  ConfigVersion: "1.0"
                  FaultDomain: fd:/3
                  HealthState: Ok
                  Id:
                    Id: 6b5c3db003a0bd126f7b8a86fc3916a4
                  InstanceId: "131353697864903666"
                  IpAddressOrFQDN: localhost
                  IsSeedNode: false
                  IsStopped: false
                  Name: _Node_3
                  NodeDeactivationInfo:
                    NodeDeactivationIntent: Invalid
                    NodeDeactivationStatus: None
                    NodeDeactivationTask: []
                    PendingSafetyChecks: []
                  NodeDownTimeInSeconds: "0"
                  NodeStatus: Up
                  NodeUpTimeInSeconds: "526954"
                  Type: NodeType3
                  UpgradeDomain: "3"
                - CodeVersion: 5.6.135.9494
                  ConfigVersion: "1.0"
                  FaultDomain: fd:/2
                  HealthState: Ok
                  Id:
                    Id: 876a44d9185bf9416336b22e5d37cde8
                  InstanceId: "131341861291227632"
                  IpAddressOrFQDN: localhost
                  IsSeedNode: true
                  IsStopped: false
                  Name: _Node_2
                  NodeDeactivationInfo:
                    NodeDeactivationIntent: Pause
                    NodeDeactivationStatus: Completed
                    NodeDeactivationTask:
                    - NodeDeactivationIntent: Pause
                      NodeDeactivationTaskId:
                        Id: 876a44d9185bf9416336b22e5d37cde8
                        NodeDeactivationTaskType: Client
                    PendingSafetyChecks: []
                  NodeDownTimeInSeconds: "0"
                  NodeStatus: Disabled
                  NodeUpTimeInSeconds: "1710571"
                  Type: NodeType2
                  UpgradeDomain: "2"
                - CodeVersion: 5.6.135.9494
                  ConfigVersion: "1.0"
                  FaultDomain: fd:/1
                  HealthState: Ok
                  Id:
                    Id: a3784be1d81710242ed0a9632647b4f7
                  InstanceId: "131341861290236579"
                  IpAddressOrFQDN: localhost
                  IsSeedNode: true
                  IsStopped: false
                  Name: _Node_1
                  NodeDeactivationInfo:
                    NodeDeactivationIntent: Pause
                    NodeDeactivationStatus: SafetyCheckInProgress
                    NodeDeactivationTask:
                    - NodeDeactivationIntent: Pause
                      NodeDeactivationTaskId:
                        Id: a3784be1d81710242ed0a9632647b4f7
                        NodeDeactivationTaskType: Client
                    PendingSafetyChecks:
                    - SafetyCheck:
                        Kind: EnsureSeedNodeQuorum
                  NodeDownTimeInSeconds: "0"
                  NodeStatus: Disabling
                  NodeUpTimeInSeconds: "1710571"
                  Type: NodeType1
                  UpgradeDomain: "1"
                - CodeVersion: 5.6.135.9494
                  ConfigVersion: "1.0"
                  FaultDomain: fd:/0
                  HealthState: Ok
                  Id:
                    Id: bf865279ba277deb864a976fbf4c200e
                  InstanceId: "131341861289826291"
                  IpAddressOrFQDN: localhost
                  IsSeedNode: true
                  IsStopped: false
                  Name: _Node_0
                  NodeDeactivationInfo:
                    NodeDeactivationIntent: Invalid
                    NodeDeactivationStatus: None
                    NodeDeactivationTask: []
                    PendingSafetyChecks: []
                  NodeDownTimeInSeconds: "0"
                  NodeStatus: Up
                  NodeUpTimeInSeconds: "1710571"
                  Type: NodeType0
                  UpgradeDomain: "0"
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.node_controller
  /Nodes/{nodeName}:
    get:
      description: "Gets the information about a specific node in the Service Fabric\
        \ Cluster.The respons include the name, status, id, health, uptime and other\
        \ details about the node."
      operationId: get_node_info
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeInfo'
          description: A successful operation will return information about the node
            with the specified nodeName.
        "204":
          content: {}
          description: An empty response is returned if the specified nodeName is
            not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list of nodes in the Service Fabric cluster.
      tags:
      - Node
      x-openapi-router-controller: openapi_server.controllers.node_controller
  /Nodes/{nodeName}/$/Activate:
    post:
      description: "Activates a Service Fabric cluster node which is currently deactivated.\
        \ Once activated, the node will again become a viable target for placing new\
        \ replicas, and any deactivated replicas remaining on the node will be reactivated."
      operationId: enable_node
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Activate a Service Fabric cluster node which is currently deactivated.
      tags:
      - Node
      x-openapi-router-controller: openapi_server.controllers.node_controller
  /Nodes/{nodeName}/$/Deactivate:
    post:
      description: "Deactivate a Service Fabric cluster node with the specified deactivation\
        \ intent. Once the deactivation is in progress, the deactivation intent can\
        \ be increased, but not decreased (for example, a node which is was deactivated\
        \ with the Pause intent can be deactivated further with Restart, but not the\
        \ other way around. Nodes may be reactivated using the Activate a node operation\
        \ any time after they are deactivated. If the deactivation is not complete\
        \ this will cancel the deactivation. A node which goes down and comes back\
        \ up while deactivated will still need to be reactivated before services will\
        \ be placed on that node."
      operationId: disable_node
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeactivationIntentDescription'
        description: Describes the intent or reason for deactivating the node.
        required: true
        x-ms-parameter-location: method
        x-body-name: DeactivationIntentDescription
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Deactivate a Service Fabric cluster node with the specified deactivation
        intent.
      tags:
      - Node
      x-codegen-request-body-name: DeactivationIntentDescription
      x-openapi-router-controller: openapi_server.controllers.node_controller
  /Nodes/{nodeName}/$/DeployServicePackage:
    post:
      description: |
        Downloads packages associated with specified service manifest to image cache on specified node.
      operationId: deployed_service_package_to_node
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeployServicePackageToNodeDescription'
        description: Describes information for deploying a service package to a Service
          Fabric node.
        required: true
        x-ms-parameter-location: method
        x-body-name: DeployServicePackageToNodeDescription
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Downloads packages associated with specified service manifest to image
        cache on specified node.
      tags:
      - Service Package
      x-codegen-request-body-name: DeployServicePackageToNodeDescription
      x-openapi-router-controller: openapi_server.controllers.service_package_controller
  /Nodes/{nodeName}/$/GetApplications:
    get:
      description: Gets the list of applications deployed on a Service Fabric node.
      operationId: get_deployed_application_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedApplicationInfoList'
          description: A successful operation will return 200 status code and the
            list of deployed application information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list of applications deployed on a Service Fabric node.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Nodes/{nodeName}/$/GetApplications/{applicationId}:
    get:
      description: Gets the information about an application deployed on a Service
        Fabric node.
      operationId: get_deployed_application_info
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedApplicationInfo'
          description: A successful operation will return 200 status code and the
            information about the deployed application.
        "204":
          content: {}
          description: An empty response is returned if the specified application
            is not deployed on the node.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the information about an application deployed on a Service Fabric
        node.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetCodePackages:
    get:
      description: Gets the list of code packages deployed on a Service Fabric node
        for the given application.
      operationId: get_deployed_code_package_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The name of a service manifest registered as part of an application
          type in a Service Fabric cluster.
        in: query
        name: ServiceManifestName
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of code package specified in service manifest registered
          as part of an application type in a Service Fabric cluster.
        in: query
        name: CodePackageName
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedCodePackageInfoList'
          description: A successful operation will return 200 status code and the
            list of deployed code packages information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list of code packages deployed on a Service Fabric node.
      tags:
      - Code Package
      x-openapi-router-controller: openapi_server.controllers.code_package_controller
  /Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetCodePackages/$/Restart:
    post:
      description: "Restarts a code package deployed on a Service Fabric node in a\
        \ cluster. This aborts the code package process, which will restart all the\
        \ user service replicas hosted in that process."
      operationId: restart_deployed_code_package
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestartDeployedCodePackageDescription'
        description: Describes the deployed code package on Service Fabric node to
          restart.
        required: true
        x-ms-parameter-location: method
        x-body-name: RestartDeployedCodePackageDescription
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Restarts a code package deployed on a Service Fabric node in a cluster.
      tags:
      - Code Package
      x-codegen-request-body-name: RestartDeployedCodePackageDescription
      x-openapi-router-controller: openapi_server.controllers.code_package_controller
  /Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetHealth:
    get:
      description: Gets the information about health of an application deployed on
        a Service Fabric node. Use EventsHealthStateFilter to optionally filter for
        the collection of HealthEvent objects reported on the deployed application
        based on health state. Use DeployedServicePackagesHealthStateFilter to optionally
        filter for DeployedServicePackageHealth children based on health state.
      operationId: get_deployed_application_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering of the deployed service package health state objects returned in the result of deployed application health query based on their health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only deployed service packages that match the filter are returned. All deployed service packages are used to evaluate the aggregated health state of the deployed application.
          If not specified, all entries are returned.
          The state values are flag based enumeration, so the value can be a combination of these value obtained using bitwise 'OR' operator.
          For example, if the provided value is 6 then health state of service packages with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: DeployedServicePackagesHealthStateFilter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates whether the health statistics should be returned as part of the query result. False by default.
          The statistics show the number of children entities in health state Ok, Warning, and Error.
        in: query
        name: exclude_health_statistics
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedApplicationHealth'
          description: A successful operation will return 200 status code and the
            health information of the deployed application.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the information about health of an application deployed on a Service
        Fabric node.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
    post:
      description: |
        Gets the information about health of an application deployed on a Service Fabric node using the specified policy. Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed application based on health state. Use DeployedServicePackagesHealthStateFilter to optionally filter for DeployedServicePackageHealth children based on health state. Use ApplicationHealthPolicy to optionally override the health policies used to evaluate the health. This API only uses 'ConsiderWarningAsError' field of the ApplicationHealthPolicy. The rest of the fields are ignored while evaluating the health of the deployed application.
      operationId: get_deployed_application_health_using_policy
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering of the deployed service package health state objects returned in the result of deployed application health query based on their health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only deployed service packages that match the filter are returned. All deployed service packages are used to evaluate the aggregated health state of the deployed application.
          If not specified, all entries are returned.
          The state values are flag based enumeration, so the value can be a combination of these value obtained using bitwise 'OR' operator.
          For example, if the provided value is 6 then health state of service packages with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: deployed_service_packages_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates whether the health statistics should be returned as part of the query result. False by default.
          The statistics show the number of children entities in health state Ok, Warning, and Error.
        in: query
        name: exclude_health_statistics
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationHealthPolicy'
        description: |
          Describes the health policies used to evaluate the health of an application or one of its children.
          If not present, the health evaluation uses the health policy from application manifest or the default health policy.
        required: false
        x-ms-parameter-location: method
        x-body-name: ApplicationHealthPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedApplicationHealth'
          description: A successful operation will return 200 status code and the
            health information of the deployed application.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the information about health of an application deployed on a Service
        Fabric node. using the specified policy.
      tags:
      - Application
      x-codegen-request-body-name: ApplicationHealthPolicy
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetReplicas:
    get:
      description: "Gets the list containing the information about replicas deployed\
        \ on a Service Fabric node. The information include partition id, replica\
        \ id, status of the replica, name of the service, name of the service type\
        \ and other information. Use PartitionId or ServiceManifestName query parameters\
        \ to return information about the deployed replicas matching the specified\
        \ values for those parameters."
      operationId: get_deployed_service_replica_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identity of the partition.
        in: query
        name: PartitionId
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of a service manifest registered as part of an application
          type in a Service Fabric cluster.
        in: query
        name: service_manifest_name
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedServiceReplicaInfoList'
          description: A successful operation will return 200 status code and the
            list of deployed service replica information.
        "204":
          content: {}
          description: An empty response is returned if the specified applicationId
            is not found on the specified node. An empty respose is also returned
            if there are no replicas matching the specified filter values for PartitionId
            or ServiceManifestName query parameters.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list of replicas deployed on a Service Fabric node.
      tags:
      - Replica
      x-openapi-router-controller: openapi_server.controllers.replica_controller
  /Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetServicePackages:
    get:
      description: Returns the information about the service packages deployed on
        a Service Fabric node for the given application.
      operationId: get_deployed_service_package_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedServicePackageInfoList'
          description: A successful operation will return 200 status code and the
            list of deployed service packages information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list of service packages deployed on a Service Fabric node.
      tags:
      - Service Package
      x-openapi-router-controller: openapi_server.controllers.service_package_controller
  /Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetServicePackages/{servicePackageName}:
    get:
      description: Returns the information about the service packages deployed on
        a Service Fabric node for the given application. These results are of service
        packages whose name match exactly the service package name specified as the
        parameter.
      operationId: get_deployed_service_package_info_list_by_name
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The name of the service package.
        in: path
        name: servicePackageName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code and the
            list of deployed service packages information.
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedServicePackageInfoList'
          description: An empty response is returned if the specified service package
            from the application is not deployed on the node.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list of service packages deployed on a Service Fabric node
        matching exactly the specified name.
      tags:
      - Service Package
      x-openapi-router-controller: openapi_server.controllers.service_package_controller
  /Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetServicePackages/{servicePackageName}/$/GetHealth:
    get:
      description: Gets the information about health of service package for a specific
        application deployed on a Service Fabric node. Use EventsHealthStateFilter
        to optionally filter for the collection of HealthEvent objects reported on
        the deployed service package based on health state.
      operationId: get_deployed_service_package_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The name of the service package.
        in: path
        name: service_package_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedServicePackageHealth'
          description: A successful operation will return 200 status code and the
            health information of the deployed service package for a specific node
            and application.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the information about health of an service package for a specific
        application deployed for a Service Fabric node and application.
      tags:
      - Service Package
      x-openapi-router-controller: openapi_server.controllers.service_package_controller
    post:
      description: |
        Gets the information about health of an service package for a specific application deployed on a Service Fabric node. using the specified policy. Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed service package based on health state. Use ApplicationHealthPolicy to optionally override the health policies used to evaluate the health. This API only uses 'ConsiderWarningAsError' field of the ApplicationHealthPolicy. The rest of the fields are ignored while evaluating the health of the deployed service package.
      operationId: get_deployed_service_package_health_using_policy
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The name of the service package.
        in: path
        name: service_package_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationHealthPolicy'
        description: |
          Describes the health policies used to evaluate the health of an application or one of its children.
          If not present, the health evaluation uses the health policy from application manifest or the default health policy.
        required: false
        x-ms-parameter-location: method
        x-body-name: ApplicationHealthPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedServicePackageHealth'
          description: A successful operation will return 200 status code and the
            health information of the deployed service package for a specific node
            and application.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the information about health of service package for a specific
        application deployed on a Service Fabric node using the specified policy.
      tags:
      - Service Package
      x-codegen-request-body-name: ApplicationHealthPolicy
      x-openapi-router-controller: openapi_server.controllers.service_package_controller
  /Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetServicePackages/{servicePackageName}/$/ReportHealth:
    post:
      description: |
        Reports health state of the service package of the application deployed on a Service Fabric node. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway Service, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, get deployed service package health and check that the report appears in the HealthEvents section.
      operationId: report_deployed_service_package_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The name of the service package.
        in: path
        name: service_package_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          A flag which indicates whether the report should be sent immediately.
          A health report is sent to a Service Fabric gateway Application, which forwards to the health store.
          If Immediate is set to true, the report is sent immediately from Http Gateway to the health store, regardless of the fabric client settings that the Http Gateway Application is using.
          This is useful for critical reports that should be sent as soon as possible.
          Depending on timing and other conditions, sending the report may still fail, for example if the Http Gateway is closed or the message doesn't reach the Gateway.
          If Immediate is set to false, the report is sent based on the health client settings from the Http Gateway. Therefore, it will be batched according to the HealthReportSendInterval configuration.
          This is the recommended setting because it allows the health client to optimize health reporting messages to health store as well as health report processing.
          By default, reports are not sent immediately.
        in: query
        name: immediate
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HealthInformation'
        description: Describes the health information for the health report. This
          information needs to be present in all of the health reports sent to the
          health manager.
        required: true
        x-ms-parameter-location: method
        x-body-name: HealthInformation
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Sends a health report on the Service Fabric deployed service package.
      tags:
      - Service Package
      x-codegen-request-body-name: HealthInformation
      x-openapi-router-controller: openapi_server.controllers.service_package_controller
  /Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetServiceTypes:
    get:
      description: "Gets the list containing the information about service types from\
        \ the applications deployed on a node in a Service Fabric cluster. The response\
        \ includes the name of the service type, its registration status, the code\
        \ package that registered it and activation id of the service package."
      operationId: get_deployed_service_type_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: "The name of the service manifest to filter the list of deployed\
          \ service type information. If specified, the response will only contain\
          \ the information about service types that are defined in this service manifest."
        in: query
        name: ServiceManifestName
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedServiceTypeInfoList'
          description: List of information about service types of an application deployed
            on a node.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list containing the information about service types from the
        applications deployed on a node in a Service Fabric cluster.
      tags:
      - ServiceType
      x-openapi-router-controller: openapi_server.controllers.service_type_controller
  /Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetServiceTypes/{serviceTypeName}:
    get:
      description: "Gets the list containing the information about a specific service\
        \ type from the applications deployed on a node in a Service Fabric cluster.\
        \ The response includes the name of the service type, its registration status,\
        \ the code package that registered it and activation id of the service package.\
        \ Each entry represents one activation of a service type, differentiated by\
        \ the activation id."
      operationId: get_deployed_service_type_info_by_name
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: Specifies the name of a Service Fabric service type.
        in: path
        name: serviceTypeName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: "The name of the service manifest to filter the list of deployed\
          \ service type information. If specified, the response will only contain\
          \ the information about service types that are defined in this service manifest."
        in: query
        name: service_manifest_name
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedServiceTypeInfoList'
          description: Information about service types of an application deployed
            on a node.
        "204":
          content: {}
          description: An empty response is returned if the specified service type
            of the application is not deployed on the node.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the information about a specified service type of the application
        deployed on a node in a Service Fabric cluster.
      tags:
      - ServiceType
      x-openapi-router-controller: openapi_server.controllers.service_type_controller
  /Nodes/{nodeName}/$/GetApplications/{applicationId}/$/ReportHealth:
    post:
      description: |
        Reports health state of the application deployed on a Service Fabric node. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway Service, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, get deployed application health and check that the report appears in the HealthEvents section.
      operationId: report_deployed_application_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the application. This is typically the full\
          \ name of the application without the 'fabric:' URI scheme. Starting from\
          \ version 6.0, hierarchical names are delimited with the \"~\" character.\
          \ For example, if the application name is \"fabric://myapp/app1\", the application\
          \ identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous\
          \ versions."
        in: path
        name: application_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          A flag which indicates whether the report should be sent immediately.
          A health report is sent to a Service Fabric gateway Application, which forwards to the health store.
          If Immediate is set to true, the report is sent immediately from Http Gateway to the health store, regardless of the fabric client settings that the Http Gateway Application is using.
          This is useful for critical reports that should be sent as soon as possible.
          Depending on timing and other conditions, sending the report may still fail, for example if the Http Gateway is closed or the message doesn't reach the Gateway.
          If Immediate is set to false, the report is sent based on the health client settings from the Http Gateway. Therefore, it will be batched according to the HealthReportSendInterval configuration.
          This is the recommended setting because it allows the health client to optimize health reporting messages to health store as well as health report processing.
          By default, reports are not sent immediately.
        in: query
        name: immediate
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HealthInformation'
        description: Describes the health information for the health report. This
          information needs to be present in all of the health reports sent to the
          health manager.
        required: true
        x-ms-parameter-location: method
        x-body-name: HealthInformation
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Sends a health report on the Service Fabric application deployed on
        a Service Fabric node.
      tags:
      - Application
      x-codegen-request-body-name: HealthInformation
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /Nodes/{nodeName}/$/GetHealth:
    get:
      description: "Gets the health of a Service Fabric node. Use EventsHealthStateFilter\
        \ to filter the collection of health events reported on the node based on\
        \ the health state. If the node that you specify by name does not exist in\
        \ the health store, this returns an error."
      operationId: get_node_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeHealth'
          description: A successful operation will return 200 status code and the
            requested node health information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the health of a Service Fabric node.
      tags:
      - Node
      x-openapi-router-controller: openapi_server.controllers.node_controller
    post:
      description: "Gets the health of a Service Fabric node. Use EventsHealthStateFilter\
        \ to filter the collection of health events reported on the node based on\
        \ the health state. Use ClusterHealthPolicy in the POST body to override the\
        \ health policies used to evaluate the health. If the node that you specify\
        \ by name does not exist in the health store, this returns an error."
      operationId: get_node_health_using_policy
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ClusterHealthPolicy'
        description: "Describes the health policies used to evaluate the health of\
          \ a cluster or node. If not present, the health evaluation uses the health\
          \ policy from cluster manifest or the default health policy."
        required: false
        x-ms-parameter-location: method
        x-body-name: ClusterHealthPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeHealth'
          description: A successful operation will return 200 status code and the
            requested node health information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: "Gets the health of a Service Fabric node, by using the specified health\
        \ policy."
      tags:
      - Node
      x-codegen-request-body-name: ClusterHealthPolicy
      x-openapi-router-controller: openapi_server.controllers.node_controller
  /Nodes/{nodeName}/$/GetLoadInformation:
    get:
      description: Gets the load information of a Service Fabric node.
      operationId: get_node_load_info
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeLoadInfo'
          description: A successful operation will return 200 status code and the
            requested node load information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the load information of a Service Fabric node.
      tags:
      - Node
      x-openapi-router-controller: openapi_server.controllers.node_controller
  /Nodes/{nodeName}/$/GetPartitions/{partitionId}/$/GetReplicas:
    get:
      description: "Gets the details of the replica deployed on a Service Fabric node.\
        \ The information include service kind, service name, current service operation,\
        \ current service operation start date time, partition id, replica/instance\
        \ id, reported load and other information."
      operationId: get_deployed_service_replica_detail_info_by_partition_id
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedServiceReplicaDetailInfo'
          description: A successful operation will return 200 status code and the
            list of deployed service replica information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the details of replica deployed on a Service Fabric node.
      tags:
      - Replica
      x-openapi-router-controller: openapi_server.controllers.replica_controller
  /Nodes/{nodeName}/$/GetPartitions/{partitionId}/$/GetReplicas/{replicaId}/$/Delete:
    post:
      description: "This API simulates a Service Fabric replica failure by removing\
        \ a replica from a Service Fabric cluster. The removal closes the replica,\
        \ transitions the replica to the role None, and then removes all of the state\
        \ information of the replica from the cluster. This API tests the replica\
        \ state removal path, and simulates the report fault permanent path through\
        \ client APIs. Warning - There are no safety checks performed when this API\
        \ is used. Incorrect use of this API can lead to data loss for stateful services.In\
        \ addition, the forceRemove flag impacts all other replicas hosted in the\
        \ same process."
      operationId: remove_replica
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identifier of the replica.
        in: path
        name: replicaId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: Remove a Service Fabric application or service forcefully without
          going through the graceful shutdown sequence. This parameter can be used
          to forcefully delete an application or service for which delete is timing
          out due to issues in the service code that prevents graceful close of replicas.
        in: query
        name: ForceRemove
        schema:
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code. A successful
            operation means that the restart command was received by the replica on
            the node and it is in the process of restarting.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Removes a service replica running on a node.
      tags:
      - Replica
      x-openapi-router-controller: openapi_server.controllers.replica_controller
  /Nodes/{nodeName}/$/GetPartitions/{partitionId}/$/GetReplicas/{replicaId}/$/GetDetail:
    get:
      description: "Gets the details of the replica deployed on a Service Fabric node.\
        \ The information include service kind, service name, current service operation,\
        \ current service operation start date time, partition id, replica/instance\
        \ id, reported load and other information."
      operationId: get_deployed_service_replica_detail_info
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identifier of the replica.
        in: path
        name: replica_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedServiceReplicaDetailInfo'
          description: A successful operation will return 200 status code and the
            list of deployed service replica information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the details of replica deployed on a Service Fabric node.
      tags:
      - Replica
      x-openapi-router-controller: openapi_server.controllers.replica_controller
  /Nodes/{nodeName}/$/GetPartitions/{partitionId}/$/GetReplicas/{replicaId}/$/Restart:
    post:
      description: Restarts a service replica of a persisted service running on a
        node. Warning - There are no safety checks performed when this API is used.
        Incorrect use of this API can lead to availability loss for stateful services.
      operationId: restart_replica
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identifier of the replica.
        in: path
        name: replica_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code. A successful
            operation means that the restart command was received by the replica on
            the node and it is in the process of restarting.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Restarts a service replica of a persisted service running on a node.
      tags:
      - Replica
      x-openapi-router-controller: openapi_server.controllers.replica_controller
  /Nodes/{nodeName}/$/RemoveNodeState:
    post:
      description: "Notifies Service Fabric that the persisted state on a node has\
        \ been permanently removed or lost.  This implies that it is not possible\
        \ to recover the persisted state of that node. This generally happens if a\
        \ hard disk has been wiped clean, or if a hard disk crashes. The node has\
        \ to be down for this operation to be successful. This operation lets Service\
        \ Fabric know that the replicas on that node no longer exist, and that Service\
        \ Fabric should stop waiting for those replicas to come back up. Do not run\
        \ this cmdlet if the state on the node has not been removed and the node can\
        \ comes back up with its state intact."
      operationId: remove_node_state
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Notifies Service Fabric that the persisted state on a node has been
        permanently removed or lost.
      tags:
      - Node
      x-openapi-router-controller: openapi_server.controllers.node_controller
  /Nodes/{nodeName}/$/ReportHealth:
    post:
      description: |
        Reports health state of the specified Service Fabric node. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway node, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, run GetNodeHealth and check that the report appears in the HealthEvents section.
      operationId: report_node_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          A flag which indicates whether the report should be sent immediately.
          A health report is sent to a Service Fabric gateway Application, which forwards to the health store.
          If Immediate is set to true, the report is sent immediately from Http Gateway to the health store, regardless of the fabric client settings that the Http Gateway Application is using.
          This is useful for critical reports that should be sent as soon as possible.
          Depending on timing and other conditions, sending the report may still fail, for example if the Http Gateway is closed or the message doesn't reach the Gateway.
          If Immediate is set to false, the report is sent based on the health client settings from the Http Gateway. Therefore, it will be batched according to the HealthReportSendInterval configuration.
          This is the recommended setting because it allows the health client to optimize health reporting messages to health store as well as health report processing.
          By default, reports are not sent immediately.
        in: query
        name: immediate
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HealthInformation'
        description: Describes the health information for the health report. This
          information needs to be present in all of the health reports sent to the
          health manager.
        required: true
        x-ms-parameter-location: method
        x-body-name: HealthInformation
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Sends a health report on the Service Fabric node.
      tags:
      - Node
      x-codegen-request-body-name: HealthInformation
      x-openapi-router-controller: openapi_server.controllers.node_controller
  /Nodes/{nodeName}/$/Restart:
    post:
      description: Restarts a Service Fabric cluster node that is already started.
      operationId: restart_node
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the node.
        in: path
        name: node_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestartNodeDescription'
        description: The instance of the node to be restarted and a flag indicating
          the need to take dump of the fabric process.
        required: true
        x-ms-parameter-location: method
        x-body-name: RestartNodeDescription
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code. A successful
            operation means that the restart command was received by the node and
            it is in the process of restarting. Check the status of the node by calling
            GetNode operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Restarts a Service Fabric cluster node.
      tags:
      - Node
      x-codegen-request-body-name: RestartNodeDescription
      x-openapi-router-controller: openapi_server.controllers.node_controller
  /Partitions/{partitionId}:
    get:
      description: "The Partitions endpoint returns information about the specified\
        \ partition. The response include the partition id, partitioning scheme information,\
        \ keys supported by the partition, status, health and other details about\
        \ the partition."
      operationId: get_partition_info
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePartitionInfo'
          description: Information about the specified partition.
        "204":
          content: {}
          description: An empty response is returned if the specified partitionId
            is not found in the cluster.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the information about a Service Fabric partition.
      tags:
      - Partition
      x-openapi-router-controller: openapi_server.controllers.partition_controller
  /Partitions/{partitionId}/$/GetHealth:
    get:
      description: |
        Gets the health information of the specified partition.
        Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.
        Use ReplicasHealthStateFilter to filter the collection of ReplicaHealthState objects on the partition.
        If you specify a partition that does not exist in the health store, this cmdlet returns an error.
      operationId: get_partition_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering the collection of ReplicaHealthState objects on the partition. The value can be obtained from members or bitwise operations on members of HealthStateFilter. Only replicas that match the filter will be returned. All replicas will be used to evaluate the aggregated health state. If not specified, all entries will be returned.The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) will be returned. The possible values for this parameter include integer value of one of the following health states.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: ReplicasHealthStateFilter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates whether the health statistics should be returned as part of the query result. False by default.
          The statistics show the number of children entities in health state Ok, Warning, and Error.
        in: query
        name: exclude_health_statistics
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionHealth'
          description: A successful operation will return 200 status code and the
            health information about the specified partition.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the health of the specified Service Fabric partition.
      tags:
      - Partition
      x-openapi-router-controller: openapi_server.controllers.partition_controller
    post:
      description: |
        Gets the health information of the specified partition.
        If the application health policy is specified, the health evaluation uses it to get the aggregated health state.
        If the policy is not specified, the health evaluation uses the application health policy defined in the application manifest, or the default health policy, if no policy is defined in the manifest.
        Use EventsHealthStateFilter to filter the collection of health events reported on the partition based on the health state.
        Use ReplicasHealthStateFilter to filter the collection of ReplicaHealthState objects on the partition. Use ApplicationHealthPolicy in the POST body to override the health policies used to evaluate the health.
        If you specify a partition that does not exist in the health store, this cmdlet returns an error.
      operationId: get_partition_health_using_policy
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering the collection of ReplicaHealthState objects on the partition. The value can be obtained from members or bitwise operations on members of HealthStateFilter. Only replicas that match the filter will be returned. All replicas will be used to evaluate the aggregated health state. If not specified, all entries will be returned.The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) will be returned. The possible values for this parameter include integer value of one of the following health states.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: replicas_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates whether the health statistics should be returned as part of the query result. False by default.
          The statistics show the number of children entities in health state Ok, Warning, and Error.
        in: query
        name: exclude_health_statistics
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationHealthPolicy'
        description: |
          Describes the health policies used to evaluate the health of an application or one of its children.
          If not present, the health evaluation uses the health policy from application manifest or the default health policy.
        required: false
        x-ms-parameter-location: method
        x-body-name: ApplicationHealthPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionHealth'
          description: A successful operation will return 200 status code and the
            health information about the specified partition.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: "Gets the health of the specified Service Fabric partition, by using\
        \ the specified health policy."
      tags:
      - Partition
      x-codegen-request-body-name: ApplicationHealthPolicy
      x-openapi-router-controller: openapi_server.controllers.partition_controller
  /Partitions/{partitionId}/$/GetLoadInformation:
    get:
      description: |
        Returns information about the specified partition.
        The response includes a list of load information.
        Each information includes load metric name, value and last reported time in UTC.
      operationId: get_partition_load_information
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionLoadInformation'
          description: Information about the specified partition's last reported load
            metrics.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the load of the specified Service Fabric partition.
      tags:
      - Partition
      x-openapi-router-controller: openapi_server.controllers.partition_controller
  /Partitions/{partitionId}/$/GetReplicas:
    get:
      description: "The GetReplicas endpoint returns information about the replicas\
        \ of the specified partition. The respons include the id, role, status, health,\
        \ node name, uptime, and other details about the replica."
      operationId: get_replica_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: "The continuation token parameter is used to obtain next set\
          \ of results. A continuation token with a non empty value is included in\
          \ the response of the API when the results from the system do not fit in\
          \ a single response. When this value is passed to the next API call, the\
          \ API returns next set of results. If there are no further results then\
          \ the continuation token does not contain a value. The value of this parameter\
          \ should not be URL encoded."
        in: query
        name: continuation_token
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedReplicaInfoList'
          description: Information about the replicas of the specified partition.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the information about replicas of a Service Fabric service partition.
      tags:
      - Replica
      x-openapi-router-controller: openapi_server.controllers.replica_controller
  /Partitions/{partitionId}/$/GetReplicas/{replicaId}:
    get:
      description: "The respons include the id, role, status, health, node name, uptime,\
        \ and other details about the replica."
      operationId: get_replica_info
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identifier of the replica.
        in: path
        name: replica_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: "The continuation token parameter is used to obtain next set\
          \ of results. A continuation token with a non empty value is included in\
          \ the response of the API when the results from the system do not fit in\
          \ a single response. When this value is passed to the next API call, the\
          \ API returns next set of results. If there are no further results then\
          \ the continuation token does not contain a value. The value of this parameter\
          \ should not be URL encoded."
        in: query
        name: continuation_token
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicaInfo'
          description: Information about the specified replicas of the specified partition
            of a Service Fabric service.
        "204":
          content: {}
          description: An empty response is returned if the specified replicaId is
            not a replica of the specified partition.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the information about a replica of a Service Fabric partition.
      tags:
      - Replica
      x-openapi-router-controller: openapi_server.controllers.replica_controller
  /Partitions/{partitionId}/$/GetReplicas/{replicaId}/$/GetHealth:
    get:
      description: |
        Gets the health of a Service Fabric replica.
        Use EventsHealthStateFilter to filter the collection of health events reported on the replica based on the health state.
      operationId: get_replica_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identifier of the replica.
        in: path
        name: replica_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicaHealth'
          description: A successful operation will return 200 status code and the
            requested replica health.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the health of a Service Fabric stateful service replica or stateless
        service instance.
      tags:
      - Replica
      x-openapi-router-controller: openapi_server.controllers.replica_controller
    post:
      description: |
        Gets the health of a Service Fabric stateful service replica or stateless service instance.
        Use EventsHealthStateFilter to filter the collection of health events reported on the cluster based on the health state.
        Use ApplicationHealthPolicy to optionally override the health policies used to evaluate the health. This API only uses 'ConsiderWarningAsError' field of the ApplicationHealthPolicy. The rest of the fields are ignored while evaluating the health of the replica.
      operationId: get_replica_health_using_policy
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identifier of the replica.
        in: path
        name: replica_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationHealthPolicy'
        description: |
          Describes the health policies used to evaluate the health of an application or one of its children.
          If not present, the health evaluation uses the health policy from application manifest or the default health policy.
        required: false
        x-ms-parameter-location: method
        x-body-name: ApplicationHealthPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicaHealth'
          description: A successful operation will return 200 status code and the
            requested replica health information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the health of a Service Fabric stateful service replica or stateless
        service instance using the specified policy.
      tags:
      - Replica
      x-codegen-request-body-name: ApplicationHealthPolicy
      x-openapi-router-controller: openapi_server.controllers.replica_controller
  /Partitions/{partitionId}/$/GetReplicas/{replicaId}/$/ReportHealth:
    post:
      description: |
        Reports health state of the specified Service Fabric replica. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway Replica, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, run GetReplicaHealth and check that the report appears in the HealthEvents section.
      operationId: report_replica_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The identifier of the replica.
        in: path
        name: replica_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          The kind of service replica (Stateless or Stateful) for which the health is being reported. Following are the possible values.
          - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1
          - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
        in: query
        name: ServiceKind
        required: true
        schema:
          default: Stateful
          enum:
          - Stateless
          - Stateful
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          A flag which indicates whether the report should be sent immediately.
          A health report is sent to a Service Fabric gateway Application, which forwards to the health store.
          If Immediate is set to true, the report is sent immediately from Http Gateway to the health store, regardless of the fabric client settings that the Http Gateway Application is using.
          This is useful for critical reports that should be sent as soon as possible.
          Depending on timing and other conditions, sending the report may still fail, for example if the Http Gateway is closed or the message doesn't reach the Gateway.
          If Immediate is set to false, the report is sent based on the health client settings from the Http Gateway. Therefore, it will be batched according to the HealthReportSendInterval configuration.
          This is the recommended setting because it allows the health client to optimize health reporting messages to health store as well as health report processing.
          By default, reports are not sent immediately.
        in: query
        name: immediate
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HealthInformation'
        description: Describes the health information for the health report. This
          information needs to be present in all of the health reports sent to the
          health manager.
        required: true
        x-ms-parameter-location: method
        x-body-name: HealthInformation
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Sends a health report on the Service Fabric replica.
      tags:
      - Replica
      x-codegen-request-body-name: HealthInformation
      x-openapi-router-controller: openapi_server.controllers.replica_controller
  /Partitions/{partitionId}/$/GetServiceName:
    get:
      description: The GetServiceName endpoint returns the name of the service for
        the specified partition.
      operationId: get_service_name_info
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNameInfo'
          description: Information about the name of the service for the specified
            partition.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the name of the Service Fabric service for a partition.
      tags:
      - Partition
      x-openapi-router-controller: openapi_server.controllers.partition_controller
  /Partitions/{partitionId}/$/Recover:
    post:
      description: Indicates to the Service Fabric cluster that it should attempt
        to recover a specific partition which is currently stuck in quorum loss. This
        operation should only be performed if it is known that the replicas that are
        down cannot be recovered. Incorrect use of this API can cause potential data
        loss.
      operationId: recover_partition
      parameters:
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation request will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Indicates to the Service Fabric cluster that it should attempt to recover
        a specific partition which is currently stuck in quorum loss.
      tags:
      - Partition
      x-openapi-router-controller: openapi_server.controllers.partition_controller
  /Partitions/{partitionId}/$/ReportHealth:
    post:
      description: |
        Reports health state of the specified Service Fabric partition. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway Partition, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, run GetPartitionHealth and check that the report appears in the HealthEvents section.
      operationId: report_partition_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          A flag which indicates whether the report should be sent immediately.
          A health report is sent to a Service Fabric gateway Application, which forwards to the health store.
          If Immediate is set to true, the report is sent immediately from Http Gateway to the health store, regardless of the fabric client settings that the Http Gateway Application is using.
          This is useful for critical reports that should be sent as soon as possible.
          Depending on timing and other conditions, sending the report may still fail, for example if the Http Gateway is closed or the message doesn't reach the Gateway.
          If Immediate is set to false, the report is sent based on the health client settings from the Http Gateway. Therefore, it will be batched according to the HealthReportSendInterval configuration.
          This is the recommended setting because it allows the health client to optimize health reporting messages to health store as well as health report processing.
          By default, reports are not sent immediately.
        in: query
        name: immediate
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HealthInformation'
        description: Describes the health information for the health report. This
          information needs to be present in all of the health reports sent to the
          health manager.
        required: true
        x-ms-parameter-location: method
        x-body-name: HealthInformation
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Sends a health report on the Service Fabric partition.
      tags:
      - Partition
      x-codegen-request-body-name: HealthInformation
      x-openapi-router-controller: openapi_server.controllers.partition_controller
  /Partitions/{partitionId}/$/ResetLoad:
    post:
      description: Resets the current load of a Service Fabric partition to the default
        load for the service.
      operationId: reset_partition_load
      parameters:
      - description: The identity of the partition.
        in: path
        name: partition_id
        required: true
        schema:
          format: uuid
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation request will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Resets the current load of a Service Fabric partition.
      tags:
      - Partition
      x-openapi-router-controller: openapi_server.controllers.partition_controller
  /Services/$/{serviceId}/$/GetPartitions/$/Recover:
    post:
      description: Indicates to the Service Fabric cluster that it should attempt
        to recover the specified service which is currently stuck in quorum loss.
        This operation should only be performed if it is known that the replicas that
        are down cannot be recovered. Incorrect use of this API can cause potential
        data loss.
      operationId: recover_service_partitions
      parameters:
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation request will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Indicates to the Service Fabric cluster that it should attempt to recover
        the specified service which is currently stuck in quorum loss.
      tags:
      - Partition
      x-openapi-router-controller: openapi_server.controllers.partition_controller
  /Services/{serviceId}/$/Delete:
    post:
      description: "Deletes an existing Service Fabric service. A service must be\
        \ created before it can be deleted. By default Service Fabric will try to\
        \ close service replicas in a graceful manner and then delete the service.\
        \ However if service is having issues closing the replica gracefully, the\
        \ delete operation may take a long time or get stuck. Use the optional ForceRemove\
        \ flag to skip the graceful close sequence and forcefully delete the service."
      operationId: delete_service
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: Remove a Service Fabric application or service forcefully without
          going through the graceful shutdown sequence. This parameter can be used
          to forcefully delete an application or service for which delete is timing
          out due to issues in the service code that prevents graceful close of replicas.
        in: query
        name: force_remove
        schema:
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Deletes an existing Service Fabric service.
      tags:
      - Service
      x-openapi-router-controller: openapi_server.controllers.service_controller
  /Services/{serviceId}/$/GetApplicationName:
    get:
      description: The GetApplicationName endpoint returns the name of the application
        for the specified service.
      operationId: get_application_name_info
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationNameInfo'
          description: Information about the name of the application for the specified
            service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the name of the Service Fabric application for a service.
      tags:
      - Service
      x-openapi-router-controller: openapi_server.controllers.service_controller
  /Services/{serviceId}/$/GetDescription:
    get:
      description: Gets the description of an existing Service Fabric service. A service
        must be created before its description can be obtained.
      operationId: get_service_description
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDescription'
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the description of an existing Service Fabric service.
      tags:
      - Service
      x-openapi-router-controller: openapi_server.controllers.service_controller
  /Services/{serviceId}/$/GetHealth:
    get:
      description: |
        Gets the health information of the specified service.
        Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.
        Use PartitionsHealthStateFilter to filter the collection of partitions returned.
        If you specify a service that does not exist in the health store, this cmdlet returns an error.
      operationId: get_service_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering of the partitions health state objects returned in the result of service health query based on their health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only partitions that match the filter are returned. All partitions are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value
          obtained using bitwise 'OR' operator. For example, if the provided value is 6 then health state of partitions with HealthState value of OK (2) and Warning (4) will be returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: PartitionsHealthStateFilter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates whether the health statistics should be returned as part of the query result. False by default.
          The statistics show the number of children entities in health state Ok, Warning, and Error.
        in: query
        name: exclude_health_statistics
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceHealth'
          description: A successful operation will return 200 status code and the
            health information of the specified service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the health of the specified Service Fabric service.
      tags:
      - Service
      x-openapi-router-controller: openapi_server.controllers.service_controller
    post:
      description: |
        Gets the health information of the specified service.
        If the application health policy is specified, the health evaluation uses it to get the aggregated health state.
        If the policy is not specified, the health evaluation uses the application health policy defined in the application manifest, or the default health policy, if no policy is defined in the manifest.
        Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.
        Use PartitionsHealthStateFilter to filter the collection of partitions returned.
        If you specify a service that does not exist in the health store, this cmdlet returns an error.
      operationId: get_service_health_using_policy
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          Allows filtering the collection of HealthEvent objects returned based on health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: events_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Allows filtering of the partitions health state objects returned in the result of service health query based on their health state.
          The possible values for this parameter include integer value of one of the following health states.
          Only partitions that match the filter are returned. All partitions are used to evaluate the aggregated health state.
          If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value
          obtained using bitwise 'OR' operator. For example, if the provided value is 6 then health state of partitions with HealthState value of OK (2) and Warning (4) will be returned.

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        in: query
        name: partitions_health_state_filter
        schema:
          default: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |
          Indicates whether the health statistics should be returned as part of the query result. False by default.
          The statistics show the number of children entities in health state Ok, Warning, and Error.
        in: query
        name: exclude_health_statistics
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationHealthPolicy'
        description: |
          Describes the health policies used to evaluate the health of an application or one of its children.
          If not present, the health evaluation uses the health policy from application manifest or the default health policy.
        required: false
        x-ms-parameter-location: method
        x-body-name: ApplicationHealthPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceHealth'
          description: A successful operation will return 200 status code and the
            health information of the specified service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: "Gets the health of the specified Service Fabric service, by using\
        \ the specified health policy."
      tags:
      - Service
      x-codegen-request-body-name: ApplicationHealthPolicy
      x-openapi-router-controller: openapi_server.controllers.service_controller
  /Services/{serviceId}/$/GetPartitions:
    get:
      description: "Gets the list of partitions of a Service Fabric service. The response\
        \ include the partition id, partitioning scheme information, keys supported\
        \ by the partition, status, health and other details about the partition."
      operationId: get_partition_info_list
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: "The continuation token parameter is used to obtain next set\
          \ of results. A continuation token with a non empty value is included in\
          \ the response of the API when the results from the system do not fit in\
          \ a single response. When this value is passed to the next API call, the\
          \ API returns next set of results. If there are no further results then\
          \ the continuation token does not contain a value. The value of this parameter\
          \ should not be URL encoded."
        in: query
        name: continuation_token
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedServicePartitionInfoList'
          description: List of partitions of a Service Fabric service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the list of partitions of a Service Fabric service.
      tags:
      - Partition
      x-openapi-router-controller: openapi_server.controllers.partition_controller
  /Services/{serviceId}/$/ReportHealth:
    post:
      description: |
        Reports health state of the specified Service Fabric service. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway Service, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, run GetServiceHealth and check that the report appears in the HealthEvents section.
      operationId: report_service_health
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          A flag which indicates whether the report should be sent immediately.
          A health report is sent to a Service Fabric gateway Application, which forwards to the health store.
          If Immediate is set to true, the report is sent immediately from Http Gateway to the health store, regardless of the fabric client settings that the Http Gateway Application is using.
          This is useful for critical reports that should be sent as soon as possible.
          Depending on timing and other conditions, sending the report may still fail, for example if the Http Gateway is closed or the message doesn't reach the Gateway.
          If Immediate is set to false, the report is sent based on the health client settings from the Http Gateway. Therefore, it will be batched according to the HealthReportSendInterval configuration.
          This is the recommended setting because it allows the health client to optimize health reporting messages to health store as well as health report processing.
          By default, reports are not sent immediately.
        in: query
        name: immediate
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HealthInformation'
        description: Describes the health information for the health report. This
          information needs to be present in all of the health reports sent to the
          health manager.
        required: true
        x-ms-parameter-location: method
        x-body-name: HealthInformation
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Sends a health report on the Service Fabric service.
      tags:
      - Service
      x-codegen-request-body-name: HealthInformation
      x-openapi-router-controller: openapi_server.controllers.service_controller
  /Services/{serviceId}/$/ResolvePartition:
    get:
      description: "Resolve a Service Fabric service partition, to get the endpoints\
        \ of the service replicas."
      operationId: resolve_service
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: |
          Key type for the partition. This parameter is required if the partition scheme for the service is Int64Range or Named. The possible values are following.
          - None (1) - Indicates that the the PartitionKeyValue parameter is not specified. This is valid for the partitions with partitioning scheme as Singleton. This is the default value. The value is 1.
          - Int64Range (2) - Indicates that the the PartitionKeyValue parameter is an int64 partition key. This is valid for the partitions with partitioning scheme as Int64Range. The value is 2.
          - Named (3) - Indicates that the the PartitionKeyValue parameter is a name of the partition. This is valid for the partitions with partitioning scheme as Named. The value is 3.
        in: query
        name: PartitionKeyType
        schema:
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Partition key. This is required if the partition scheme for the
          service is Int64Range or Named.
        in: query
        name: PartitionKeyValue
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The value in the Version field of the response that was received
          previously. This is required if the user knows that the result that was
          got previously is stale.
        in: query
        name: PreviousRspVersion
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolvedServicePartition'
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Resolve a Service Fabric partition.
      tags:
      - Service
      x-openapi-router-controller: openapi_server.controllers.service_controller
  /Services/{serviceId}/$/Update:
    post:
      description: Updates the specified service using the given update description.
      operationId: update_service
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The identity of the service. This is typically the full name\
          \ of the service without the 'fabric:' URI scheme. Starting from version\
          \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
          \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
          \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
          \ versions."
        in: path
        name: service_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ServiceUpdateDescription'
        description: The information necessary to update a service.
        required: true
        x-ms-parameter-location: method
        x-body-name: ServiceUpdateDescription
      responses:
        "200":
          content: {}
          description: A successful operation will return 202 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Updates the specified service using the given update description.
      tags:
      - Service
      x-codegen-request-body-name: ServiceUpdateDescription
      x-openapi-router-controller: openapi_server.controllers.service_controller
  /Tools/Chaos/$/Report:
    get:
      description: |
        You can either specify the ContinuationToken to get the next segment of the Chaos report or you can specify the time-range
        through StartTimeUtc and EndTimeUtc, but you cannot specify both the ContinuationToken and the time-range in the same call.
        When there are more than 100 Chaos events, the Chaos report is returned in segments where a segment contains no more than 100 Chaos events.
      operationId: get_chaos_report
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The continuation token parameter is used to obtain next set\
          \ of results. A continuation token with a non empty value is included in\
          \ the response of the API when the results from the system do not fit in\
          \ a single response. When this value is passed to the next API call, the\
          \ API returns next set of results. If there are no further results then\
          \ the continuation token does not contain a value. The value of this parameter\
          \ should not be URL encoded."
        in: query
        name: continuation_token
        schema:
          type: string
          x-ms-parameter-location: method
          x-ms-skip-url-encoding: true
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      - description: "The count of ticks representing the start time of the time range\
          \ for which a Chaos report is to be generated. Please consult [DateTime.Ticks\
          \ Property](https://msdn.microsoft.com/en-us/library/system.datetime.ticks%28v=vs.110%29)\
          \ for details about tick."
        in: query
        name: StartTimeUtc
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "The count of ticks representing the end time of the time range\
          \ for which a Chaos report is to be generated. Please consult [DateTime.Ticks\
          \ Property](https://msdn.microsoft.com/en-us/library/system.datetime.ticks%28v=vs.110%29)\
          \ for details about tick."
        in: query
        name: EndTimeUtc
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChaosReport'
          description: Next segment of Chaos report.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Gets the next segment of the Chaos report based on the passed-in continuation
        token or the passed-in time-range.
      tags:
      - Chaos
      x-ms-examples:
        Get Chaos report given a time range:
          description: This example shows how to get Chaos report in a single response
            message without the need for paging through ContinuationToken parameter.
          operationId: GetChaosReport
          parameters:
            EndTimeUtc: "3155378975999999999"
            StartTimeUtc: "0"
            api-version: "6.0"
          responses:
            "200":
              body:
                ChaosParameters:
                  ClusterHealthPolicy:
                    ApplicationTypeHealthPolicyMap:
                    - Key: myapp
                      Value: 3
                    ConsiderWarningAsError: true
                    MaxPercentUnhealthyApplications: 10
                    MaxPercentUnhealthyNodes: 0
                  Context:
                    Map:
                      k1: v1
                      k2: v2
                      k3: v5
                  EnableMoveReplicaFaults: true
                  MaxClusterStabilizationTimeoutInSeconds: 30
                  MaxConcurrentFaults: 3
                  TimeToRunInSeconds: "3600"
                  WaitTimeBetweenFaultsInSeconds: 1
                  WaitTimeBetweenIterationsInSeconds: 10
                ContinuationToken: ""
                History:
                - ChaosEvent:
                    ChaosParameters:
                      ClusterHealthPolicy:
                        ApplicationTypeHealthPolicyMap:
                        - Key: myapp
                          Value: 3
                        ConsiderWarningAsError: true
                        MaxPercentUnhealthyApplications: 10
                        MaxPercentUnhealthyNodes: 0
                      Context:
                        Map:
                          k1: v1
                          k2: v2
                          k3: v5
                      EnableMoveReplicaFaults: true
                      MaxClusterStabilizationTimeoutInSeconds: 30
                      MaxConcurrentFaults: 3
                      TimeToRunInSeconds: "3600"
                      WaitTimeBetweenFaultsInSeconds: 1
                      WaitTimeBetweenIterationsInSeconds: 10
                    Kind: Started
                    TimeStampUtc: 2017-04-14T04:27:19.049Z
                - ChaosEvent:
                    Faults:
                    - "ActionType: RestartReplica, ServiceUri: fabric:/TestApp1/PersistServ_6R_1,\
                      \ PartitionId: 6a91b09a-bd76-45da-afaa-ed0fd9bfe7d2, ReplicaId:\
                      \ 131366172775684622"
                    - "ActionType: CodePackageRestart, NodeName: N0050, ApplicationName:\
                      \ fabric:/TestApp1, ServiceManifestName: SP1, ServiceManifestName:\
                      \ , CodePackageName: CP1."
                    - "ActionType: RestartReplica, ServiceUri: fabric:/TestApp1/PersistServ_6R_3,\
                      \ PartitionId: baa3a51e-5c42-435e-89d3-6e97b2164661, ReplicaId:\
                      \ 131366172988968762"
                    Kind: ExecutingFaults
                    TimeStampUtc: 2017-04-14T04:27:20.667Z
                Status: Running
              headers: {}
      x-openapi-router-controller: openapi_server.controllers.chaos_controller
  /Tools/Chaos/$/Start:
    post:
      description: |
        If Chaos is not already running in the cluster, it starts Chaos with the passed in Chaos parameters.
        If Chaos is already running when this call is made, the call fails with the error code FABRIC_E_CHAOS_ALREADY_RUNNING.
        Please refer to the article [Induce controlled Chaos in Service Fabric clusters](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-controlled-chaos) for more details.
      operationId: start_chaos
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ChaosParameters'
        description: Describes all the parameters to configure a Chaos run.
        required: true
        x-ms-parameter-location: method
        x-body-name: ChaosParameters
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: Starts Chaos in the cluster.
      tags:
      - Chaos
      x-codegen-request-body-name: ChaosParameters
      x-openapi-router-controller: openapi_server.controllers.chaos_controller
  /Tools/Chaos/$/Stop:
    post:
      description: "Stops Chaos from scheduling further faults; but, the in-flight\
        \ faults are not affected."
      operationId: stop_chaos
      parameters:
      - description: The version of the API. This is a required parameter and it's
          value must be "6.0".
        in: query
        name: api_version
        required: true
        schema:
          default: "6.0"
          enum:
          - "6.0"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The server timeout for performing the operation in seconds. This
          specifies the time duration that the client is willing to wait for the requested
          operation to complete. The default value for this parameter is 60 seconds.
        in: query
        name: timeout
        schema:
          default: 60
          format: int64
          maximum: 4294967295
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content: {}
          description: A successful operation will return 200 status code.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricError'
          description: The detailed error response.
      summary: "Stops Chaos in the cluster if it is already running, otherwise it\
        \ does nothing."
      tags:
      - Chaos
      x-openapi-router-controller: openapi_server.controllers.chaos_controller
components:
  parameters:
    ApiVersionRequiredQueryParam:
      description: The version of the API. This is a required parameter and it's value
        must be "6.0".
      in: query
      name: api-version
      required: true
      schema:
        default: "6.0"
        enum:
        - "6.0"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ApiVersion_6-0-Preview_RequiredQueryParam:
      description: The version of the API. This is a required parameter and its value
        must be "6.0-preview".
      in: query
      name: api-version
      required: true
      schema:
        default: 6.0-preview
        enum:
        - 6.0-preview
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ApplicationDefinitionKindFilterOptionalQueryParam:
      description: |
        Used to filter on ApplicationDefinitionKind for application query operations.
        - Default - Default value, which performs the same function as selecting "All". The value is 0.
        - All - Filter that matches input with any ApplicationDefinitionKind value. The value is 65535.
        - ServiceFabricApplicationDescription - Filter that matches input with ApplicationDefinitionKind value ServiceFabricApplicationDescription. The value is 1.
        - Compose - Filter that matches input with ApplicationDefinitionKind value Compose. The value is 2.
      in: query
      name: ApplicationDefinitionKindFilter
      schema:
        default: 0
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ApplicationIdRequiredPathParam:
      description: "The identity of the application. This is typically the full name\
        \ of the application without the 'fabric:' URI scheme. Starting from version\
        \ 6.0, hierarchical names are delimited with the \"~\" character. For example,\
        \ if the application name is \"fabric://myapp/app1\", the application identity\
        \ would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions."
      in: path
      name: applicationId
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    ApplicationNameRequiredQueryParam:
      description: The name of application to create from compose file. This is typically
        the full name of the application including 'fabric:' URI scheme.
      in: query
      name: ApplicationName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ApplicationTypeDefinitionKindFilterOptionalQueryParam:
      description: |
        Used to filter on ApplicationTypeDefinitionKind for application type query operations.
        - Default - Default value, which performs the same function as selecting "All". The value is 0.
        - All - Filter that matches input with any ApplicationTypeDefinitionKind value. The value is 65535.
        - ServiceFabricApplicationPackage - Filter that matches input with ApplicationTypeDefinitionKind value ServiceFabricApplicationPackage. The value is 1.
        - Compose - Filter that matches input with ApplicationTypeDefinitionKind value Compose. The value is 2.
      in: query
      name: ApplicationTypeDefinitionKindFilter
      schema:
        default: 0
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ApplicationTypeNameOptionalQueryParam:
      description: The application type name used to filter the applications to query
        for. This value should not contain the application type version.
      in: query
      name: ApplicationTypeName
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ApplicationTypeNameRequiredPathParam:
      description: The name of the application type.
      in: path
      name: applicationTypeName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ApplicationTypeVersionOptionalQueryParam:
      description: The version of the application type.
      in: query
      name: ApplicationTypeVersion
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ApplicationTypeVersionRequiredQueryParam:
      description: The version of the application type.
      in: query
      name: ApplicationTypeVersion
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ApplicationsHealthStateFilterOptionalQueryParam:
      description: |
        Allows filtering of the application health state objects returned in the result of cluster health
        query based on their health state.
        The possible values for this parameter include integer value obtained from members or bitwise operations
        on members of HealthStateFilter enumeration. Only applications that match the filter are returned.
        All applications are used to evaluate the aggregated health state. If not specified, all entries are returned.
        The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
        For example, if the provided value is 6 then health state of applications with HealthState value of OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.
        - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
        - Ok - Filter that matches input with HealthState value Ok. The value is 2.
        - Warning - Filter that matches input with HealthState value Warning. The value is 4.
        - Error - Filter that matches input with HealthState value Error. The value is 8.
        - All - Filter that matches input with any HealthState value. The value is 65535.
      in: query
      name: ApplicationsHealthStateFilter
      schema:
        default: 0
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    CodePackageNameOptionalQueryParam:
      description: The name of code package specified in service manifest registered
        as part of an application type in a Service Fabric cluster.
      in: query
      name: CodePackageName
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    CodeVersionOptionalQueryParam:
      description: The product version of Service Fabric.
      in: query
      name: CodeVersion
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ConfigVersionOptionalQueryParam:
      description: The config version of Service Fabric.
      in: query
      name: ConfigVersion
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ConfigurationApiVersionRequiredQueryParam:
      description: The API version of the Standalone cluster json configuration.
      in: query
      name: ConfigurationApiVersion
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ContinuationTokenOptionalQueryParam:
      description: "The continuation token parameter is used to obtain next set of\
        \ results. A continuation token with a non empty value is included in the\
        \ response of the API when the results from the system do not fit in a single\
        \ response. When this value is passed to the next API call, the API returns\
        \ next set of results. If there are no further results then the continuation\
        \ token does not contain a value. The value of this parameter should not be\
        \ URL encoded."
      in: query
      name: ContinuationToken
      schema:
        type: string
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    DataLossModeRequiredQueryParam:
      description: |
        This enum is passed to the StartDataLoss API to indicate what type of data loss to induce.
        - Invalid - Reserved.  Do not pass into API.
        - PartialDataLoss - PartialDataLoss option will cause a quorum of replicas to go down, triggering an OnDataLoss event in the system for the given partition.
        - FullDataLoss - FullDataLoss option will drop all the replicas which means that all the data will be lost.
      in: query
      name: DataLossMode
      required: true
      schema:
        enum:
        - Invalid
        - PartialDataLoss
        - FullDataLoss
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    DeployedApplicationsHealthStateFilterOptionalQueryParam:
      description: |
        Allows filtering of the deployed applications health state objects returned in the result of application health query based on their health state.
        The possible values for this parameter include integer value of one of the following health states. Only deployed applications that match the filter will be returned.\
        All deployed applications are used to evaluate the aggregated health state. If not specified, all entries are returned.
        The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator.
        For example, if the provided value is 6 then health state of deployed applications with HealthState value of OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.
        - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
        - Ok - Filter that matches input with HealthState value Ok. The value is 2.
        - Warning - Filter that matches input with HealthState value Warning. The value is 4.
        - Error - Filter that matches input with HealthState value Error. The value is 8.
        - All - Filter that matches input with any HealthState value. The value is 65535.
      in: query
      name: DeployedApplicationsHealthStateFilter
      schema:
        default: 0
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    DeployedServicePackagesHealthStateFilterOptionalQueryParam:
      description: |
        Allows filtering of the deployed service package health state objects returned in the result of deployed application health query based on their health state.
        The possible values for this parameter include integer value of one of the following health states.
        Only deployed service packages that match the filter are returned. All deployed service packages are used to evaluate the aggregated health state of the deployed application.
        If not specified, all entries are returned.
        The state values are flag based enumeration, so the value can be a combination of these value obtained using bitwise 'OR' operator.
        For example, if the provided value is 6 then health state of service packages with HealthState value of OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.
        - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
        - Ok - Filter that matches input with HealthState value Ok. The value is 2.
        - Warning - Filter that matches input with HealthState value Warning. The value is 4.
        - Error - Filter that matches input with HealthState value Error. The value is 8.
        - All - Filter that matches input with any HealthState value. The value is 65535.
      in: query
      name: DeployedServicePackagesHealthStateFilter
      schema:
        default: 0
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    DeployedServiceType_ServiceManifestNameOptionalQueryParam:
      description: "The name of the service manifest to filter the list of deployed\
        \ service type information. If specified, the response will only contain the\
        \ information about service types that are defined in this service manifest."
      in: query
      name: ServiceManifestName
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    DeploymentNameRequiredPathParam:
      description: The identity of the deployment.
      in: path
      name: deploymentName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    EndTimeUtcOptionalQueryParam:
      description: "The count of ticks representing the end time of the time range\
        \ for which a Chaos report is to be generated. Please consult [DateTime.Ticks\
        \ Property](https://msdn.microsoft.com/en-us/library/system.datetime.ticks%28v=vs.110%29)\
        \ for details about tick."
      in: query
      name: EndTimeUtc
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    EventsHealthStateFilterOptionalQueryParam:
      description: |
        Allows filtering the collection of HealthEvent objects returned based on health state.
        The possible values for this parameter include integer value of one of the following health states.
        Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
        If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.
        - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
        - Ok - Filter that matches input with HealthState value Ok. The value is 2.
        - Warning - Filter that matches input with HealthState value Warning. The value is 4.
        - Error - Filter that matches input with HealthState value Error. The value is 8.
        - All - Filter that matches input with any HealthState value. The value is 65535.
      in: query
      name: EventsHealthStateFilter
      schema:
        default: 0
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ExcludeApplicationParametersOptionalQueryParam:
      description: The flag that specifies whether application parameters will be
        excluded from the result.
      in: query
      name: ExcludeApplicationParameters
      schema:
        default: false
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ExcludeHealthStatisticsOptionalQueryParam:
      description: |
        Indicates whether the health statistics should be returned as part of the query result. False by default.
        The statistics show the number of children entities in health state Ok, Warning, and Error.
      in: query
      name: ExcludeHealthStatistics
      schema:
        default: false
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    FaultOperationIdRequiredQueryParam:
      description: A GUID that identifies a call of this API.  This is passed into
        the corresponding GetProgress API
      in: query
      name: OperationId
      required: true
      schema:
        format: uuid
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ForceRemoveOptionalQueryParam:
      description: Remove a Service Fabric application or service forcefully without
        going through the graceful shutdown sequence. This parameter can be used to
        forcefully delete an application or service for which delete is timing out
        due to issues in the service code that prevents graceful close of replicas.
      in: query
      name: ForceRemove
      schema:
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ForceRemoveReplicaOptionalQueryParam:
      description: Remove a Service Fabric application or service forcefully without
        going through the graceful shutdown sequence. This parameter can be used to
        forcefully delete an application or service for which delete is timing out
        due to issues in the service code that prevents graceful close of replicas.
      in: query
      name: ForceRemove
      schema:
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ForceRequiredQueryParam:
      description: Indicates whether to gracefully rollback and clean up internal
        system state modified by executing the user-induced operation.
      in: query
      name: Force
      required: true
      schema:
        default: false
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ImageStoreContentPathRequiredPathParam:
      description: Relative path to file or folder in the image store from its root.
      in: path
      name: contentPath
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ImmediateOptionalQueryParam:
      description: |
        A flag which indicates whether the report should be sent immediately.
        A health report is sent to a Service Fabric gateway Application, which forwards to the health store.
        If Immediate is set to true, the report is sent immediately from Http Gateway to the health store, regardless of the fabric client settings that the Http Gateway Application is using.
        This is useful for critical reports that should be sent as soon as possible.
        Depending on timing and other conditions, sending the report may still fail, for example if the Http Gateway is closed or the message doesn't reach the Gateway.
        If Immediate is set to false, the report is sent based on the health client settings from the Http Gateway. Therefore, it will be batched according to the HealthReportSendInterval configuration.
        This is the recommended setting because it allows the health client to optimize health reporting messages to health store as well as health report processing.
        By default, reports are not sent immediately.
      in: query
      name: Immediate
      schema:
        default: false
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    IncludeSystemApplicationHealthStatisticsOptionalQueryParam:
      description: |
        Indicates whether the health statistics should include the fabric:/System application health statistics. False by default.
        If IncludeSystemApplicationHealthStatistics is set to true, the health statistics include the entities that belong to the fabric:/System application.
        Otherwise, the query result includes health statistics only for user applications.
        The health statistics must be included in the query result for this parameter to be applied.
      in: query
      name: IncludeSystemApplicationHealthStatistics
      schema:
        default: false
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    IncludeValuesOptionalQueryParam:
      description: Allows specifying whether to include the values of the properties
        returned. True if values should be returned with the metadata; False to return
        only property metadata.
      in: query
      name: IncludeValues
      schema:
        default: false
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    InfrastructureCommandRequiredQueryParam:
      description: The text of the command to be invoked. The content of the command
        is infrastructure-specific.
      in: query
      name: Command
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    InfrastructureServiceIdOptionalQueryParam:
      description: The identity of the infrastructure service. This is  the full name
        of the infrastructure service without the 'fabric:' URI scheme. This parameter
        required only for the cluster that have more than one instance of infrastructure
        service running.
      in: query
      name: ServiceId
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    MaxResultsOptionalQueryParam:
      description: "The maximum number of results to be returned as part of the paged\
        \ queries. This parameter defines the upper bound on the number of results\
        \ returned. The results returned can be less than the specified maximum results\
        \ if they do not fit in the message as per the max message size restrictions\
        \ defined in the configuration. If this parameter is zero or not specified,\
        \ the paged queries includes as much results as possible that fit in the return\
        \ message."
      in: query
      name: MaxResults
      schema:
        default: 0
        format: int64
        minimum: 0
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    NameIdRequiredPathParam:
      description: "The Service Fabric name, without the 'fabric:' URI scheme."
      in: path
      name: nameId
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    NodeInstanceIdRequiredQueryParam:
      description: The node instance ID of the target node.  This can be determined
        through GetNodeInfo API.
      in: query
      name: NodeInstanceId
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    NodeNameRequiredPathParam:
      description: The name of the node.
      in: path
      name: nodeName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    NodeStatusFilterOptionalQueryParam:
      description: |
        Allows filtering the nodes based on the NodeStatus. Only the nodes that are matching the specified filter value will be returned. The filter value can be one of the following.

          - default - This filter value will match all of the nodes excepts the ones with with status as Unknown or Removed.
          - all - This filter value will match all of the nodes.
          - up - This filter value will match nodes that are Up.
          - down - This filter value will match nodes that are Down.
          - enabling - This filter value will match nodes that are in the process of being enabled with status as Enabling.
          - disabling - This filter value will match nodes that are in the process of being disabled with status as Disabling.
          - disabled - This filter value will match nodes that are Disabled.
          - unknown - This filter value will match nodes whose status is Unknown. A node would be in Unknown state if Service Fabric does not have authoritative information about that node. This can happen if the system learns about a node at runtime.
          - removed - This filter value will match nodes whose status is Removed. These are the nodes that are removed from the cluster using the RemoveNodeState API.
      in: query
      name: NodeStatusFilter
      schema:
        default: default
        enum:
        - default
        - all
        - up
        - down
        - enabling
        - disabling
        - disabled
        - unknown
        - removed
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    NodeTransitionTypeRequiredQueryParam:
      description: |
        Indicates the type of transition to perform.  NodeTransitionType.Start will start a stopped node.  NodeTransitionType.Stop will stop a node that is up.
          - Invalid - Reserved.  Do not pass into API.
          - Start - Transition a stopped node to up.
          - Stop - Transition an up node to stopped.
      in: query
      name: NodeTransitionType
      required: true
      schema:
        enum:
        - Invalid
        - Start
        - Stop
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    NodesHealthStateFilterOptionalQueryParam:
      description: |
        Allows filtering of the node health state objects returned in the result of cluster health query
        based on their health state. The possible values for this parameter include integer value of one of the
        following health states. Only nodes that match the filter are returned. All nodes are used to evaluate the aggregated health state.
        If not specified, all entries are returned.
        The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
        For example, if the provided value is 6 then health state of nodes with HealthState value of OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.
        - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
        - Ok - Filter that matches input with HealthState value Ok. The value is 2.
        - Warning - Filter that matches input with HealthState value Warning. The value is 4.
        - Error - Filter that matches input with HealthState value Error. The value is 8.
        - All - Filter that matches input with any HealthState value. The value is 65535.
      in: query
      name: NodesHealthStateFilter
      schema:
        default: 0
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    PartitionIdOptionalQueryParam:
      description: The identity of the partition.
      in: query
      name: PartitionId
      schema:
        format: uuid
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    PartitionIdRequiredPathParam:
      description: The identity of the partition.
      in: path
      name: partitionId
      required: true
      schema:
        format: uuid
        type: string
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    PartitionKeyTypeOptionalQueryParam:
      description: |
        Key type for the partition. This parameter is required if the partition scheme for the service is Int64Range or Named. The possible values are following.
        - None (1) - Indicates that the the PartitionKeyValue parameter is not specified. This is valid for the partitions with partitioning scheme as Singleton. This is the default value. The value is 1.
        - Int64Range (2) - Indicates that the the PartitionKeyValue parameter is an int64 partition key. This is valid for the partitions with partitioning scheme as Int64Range. The value is 2.
        - Named (3) - Indicates that the the PartitionKeyValue parameter is a name of the partition. This is valid for the partitions with partitioning scheme as Named. The value is 3.
      in: query
      name: PartitionKeyType
      schema:
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    PartitionKeyValueOptionalQueryParam:
      description: Partition key. This is required if the partition scheme for the
        service is Int64Range or Named.
      in: query
      name: PartitionKeyValue
      schema:
        type: string
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    PartitionsHealthStateFilterOptionalQueryParam:
      description: |
        Allows filtering of the partitions health state objects returned in the result of service health query based on their health state.
        The possible values for this parameter include integer value of one of the following health states.
        Only partitions that match the filter are returned. All partitions are used to evaluate the aggregated health state.
        If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value
        obtained using bitwise 'OR' operator. For example, if the provided value is 6 then health state of partitions with HealthState value of OK (2) and Warning (4) will be returned.

        - Default - Default value. Matches any HealthState. The value is zero.
        - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
        - Ok - Filter that matches input with HealthState value Ok. The value is 2.
        - Warning - Filter that matches input with HealthState value Warning. The value is 4.
        - Error - Filter that matches input with HealthState value Error. The value is 8.
        - All - Filter that matches input with any HealthState value. The value is 65535.
      in: query
      name: PartitionsHealthStateFilter
      schema:
        default: 0
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    PasswordEncryptedOptionalQueryParam:
      description: Indicates that supplied container repository password is encrypted.
      in: query
      name: PasswordEncrypted
      schema:
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    PreviousRspVersionOptionalQueryParam:
      description: The value in the Version field of the response that was received
        previously. This is required if the user knows that the result that was got
        previously is stale.
      in: query
      name: PreviousRspVersion
      schema:
        type: string
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    PropertyNameRequiredQueryParam:
      description: Specifies the name of the property to get.
      in: query
      name: PropertyName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    QuorumLossDurationRequiredQueryParam:
      description: The amount of time for which the partition will be kept in quorum
        loss.  This must be specified in seconds.
      in: query
      name: QuorumLossDuration
      required: true
      schema:
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    QuorumLossModeRequiredQueryParam:
      description: |
        This enum is passed to the StartQuorumLoss API to indicate what type of quorum loss to induce.
          - Invalid - Reserved.  Do not pass into API.
          - QuorumReplicas - Partial Quorum loss mode : Minimum number of replicas for a partition will be down that will cause a quorum loss.
          - AllReplicas- Full Quorum loss mode : All replicas for a partition will be down that will cause a quorum loss.
      in: query
      name: QuorumLossMode
      required: true
      schema:
        enum:
        - Invalid
        - QuorumReplicas
        - AllReplicas
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    RecursiveOptionalQueryParam:
      description: Allows specifying that the search performed should be recursive.
      in: query
      name: Recursive
      schema:
        default: false
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    RepairTaskExecutorFilterOptionalQueryParam:
      description: The name of the repair executor whose claimed tasks should be included
        in the list.
      in: query
      name: ExecutorFilter
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    RepairTaskIdFilterOptionalQueryParam:
      description: The repair task ID prefix to be matched.
      in: query
      name: TaskIdFilter
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    RepairTaskStateFilterOptionalQueryParam:
      description: |
        A bitwise-OR of the following values, specifying which task states should be included in the result list.
        - 1 - Created
        - 2 - Claimed
        - 4 - Preparing
        - 8 - Approved
        - 16 - Executing
        - 32 - Restoring
        - 64 - Completed
      in: query
      name: StateFilter
      schema:
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ReplicaHealthReportServiceKindRequiredQueryParam:
      description: |
        The kind of service replica (Stateless or Stateful) for which the health is being reported. Following are the possible values.
        - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1
        - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
      in: query
      name: ServiceKind
      required: true
      schema:
        default: Stateful
        enum:
        - Stateless
        - Stateful
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ReplicaIdRequiredPathParam:
      description: The identifier of the replica.
      in: path
      name: replicaId
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    ReplicasHealthStateFilerOptionalQueryParam:
      description: |
        Allows filtering the collection of ReplicaHealthState objects on the partition. The value can be obtained from members or bitwise operations on members of HealthStateFilter. Only replicas that match the filter will be returned. All replicas will be used to evaluate the aggregated health state. If not specified, all entries will be returned.The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) will be returned. The possible values for this parameter include integer value of one of the following health states.

        - Default - Default value. Matches any HealthState. The value is zero.
        - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
        - Ok - Filter that matches input with HealthState value Ok. The value is 2.
        - Warning - Filter that matches input with HealthState value Warning. The value is 4.
        - Error - Filter that matches input with HealthState value Error. The value is 8.
        - All - Filter that matches input with any HealthState value. The value is 65535.
      in: query
      name: ReplicasHealthStateFilter
      schema:
        default: 0
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    RepositoryPasswordOptionalQueryParam:
      description: The password for supplied username to connect to container repository.
      in: query
      name: RepositoryPassword
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    RepositoryUserNameOptionalQueryParam:
      description: The user name to connect to container repository.
      in: query
      name: RepositoryUserName
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    RestartPartitionModeRequiredQueryParam:
      description: |
        - Invalid - Reserved.  Do not pass into API.
        - AllReplicasOrInstances - All replicas or instances in the partition are restarted at once.
        - OnlyActiveSecondaries - Only the secondary replicas are restarted.
      in: query
      name: RestartPartitionMode
      required: true
      schema:
        enum:
        - Invalid
        - AllReplicasOrInstances
        - OnlyActiveSecondaries
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ServiceIdRequiredPathParam:
      description: "The identity of the service. This is typically the full name of\
        \ the service without the 'fabric:' URI scheme. Starting from version 6.0,\
        \ hierarchical names are delimited with the \"~\" character. For example,\
        \ if the service name is \"fabric://myapp/app1/svc1\", the service identity\
        \ would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous\
        \ versions."
      in: path
      name: serviceId
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    ServiceManifestNameOptionalQueryParam:
      description: The name of a service manifest registered as part of an application
        type in a Service Fabric cluster.
      in: query
      name: ServiceManifestName
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ServiceManifestNameRequiredQueryParam:
      description: The name of a service manifest registered as part of an application
        type in a Service Fabric cluster.
      in: query
      name: ServiceManifestName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ServicePackageNameRequiredPathParam:
      description: The name of the service package.
      in: path
      name: servicePackageName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    ServiceTypeNameOptionalQueryParam:
      description: The service type name used to filter the services to query for.
      in: query
      name: ServiceTypeName
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ServiceTypeNameRequiredPathParam:
      description: Specifies the name of a Service Fabric service type.
      in: path
      name: serviceTypeName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    ServicesHealthStateFilterOptionalQueryParam:
      description: |
        Allows filtering of the services health state objects returned in the result of services health query based on their health state.
        The possible values for this parameter include integer value of one of the following health states.
        Only services that match the filter are returned. All services are used to evaluate the aggregated health state.
        If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value
        obtained using bitwise 'OR' operator. For example, if the provided value is 6 then health state of services with HealthState value of OK (2) and Warning (4) will be returned.

        - Default - Default value. Matches any HealthState. The value is zero.
        - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
        - Ok - Filter that matches input with HealthState value Ok. The value is 2.
        - Warning - Filter that matches input with HealthState value Warning. The value is 4.
        - Error - Filter that matches input with HealthState value Error. The value is 8.
        - All - Filter that matches input with any HealthState value. The value is 65535.
      in: query
      name: ServicesHealthStateFilter
      schema:
        default: 0
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    StartTimeUtcOptionalQueryParam:
      description: "The count of ticks representing the start time of the time range\
        \ for which a Chaos report is to be generated. Please consult [DateTime.Ticks\
        \ Property](https://msdn.microsoft.com/en-us/library/system.datetime.ticks%28v=vs.110%29)\
        \ for details about tick."
      in: query
      name: StartTimeUtc
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    StateFilterRequiredQueryParam:
      description: |
        Used to filter on OperationState's for user-induced operations.
        65535 - select All
        1     - select Running
        2     - select RollingBack
        8     - select Completed
        16    - select Faulted
        32    - select Cancelled
        64    - select ForceCancelled
      in: query
      name: StateFilter
      required: true
      schema:
        default: 65535
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    StopDurationInSecondsRequiredQueryParam:
      description: "The duration, in seconds, to keep the node stopped.  The minimum\
        \ value is 600, the maximum is 14400.  After this time expires, the node will\
        \ automatically come back up."
      in: query
      name: StopDurationInSeconds
      required: true
      schema:
        format: int32
        minimum: 0
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    TimeoutOptionalQueryParam:
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      in: query
      name: timeout
      schema:
        default: 60
        format: int64
        maximum: 4294967295
        minimum: 1
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    TypeFilterRequiredQueryParam:
      description: |
        Used to filter on OperationType for user-induced operations.
        65535 - select all
        1     - select PartitionDataLoss.
        2     - select PartitionQuorumLoss.
        4     - select PartitionRestart.
        8     - select NodeTransition.
      in: query
      name: TypeFilter
      required: true
      schema:
        default: 65535
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  requestBodies:
    ApplicationDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ApplicationDescription'
      description: Description for creating an application.
      required: true
      x-ms-parameter-location: method
      x-body-name: ApplicationDescription
    ApplicationHealthPolicyOptionalBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ApplicationHealthPolicy'
      description: |
        Describes the health policies used to evaluate the health of an application or one of its children.
        If not present, the health evaluation uses the health policy from application manifest or the default health policy.
      required: false
      x-ms-parameter-location: method
      x-body-name: ApplicationHealthPolicy
    ApplicationTypeImageStorePathRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ApplicationTypeImageStorePath'
      description: The relative path for the application package in the image store
        specified during the prior copy operation.
      required: true
      x-ms-parameter-location: method
      x-body-name: ApplicationTypeImageStorePath
    ApplicationTypeVersionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ApplicationTypeImageStoreVersion'
      description: The version of the application type in the image store.
      required: true
      x-ms-parameter-location: method
      x-body-name: ApplicationTypeImageStoreVersion
    ApplicationUpgradeDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ApplicationUpgradeDescription'
      description: Parameters for an application upgrade.
      required: true
      x-ms-parameter-location: method
      x-body-name: ApplicationUpgradeDescription
    ApplicationUpgradeUpdateDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ApplicationUpgradeUpdateDescription'
      description: Parameters for updating an existing application upgrade.
      required: true
      x-ms-parameter-location: method
      x-body-name: ApplicationUpgradeUpdateDescription
    ChaosParametersRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ChaosParameters'
      description: Describes all the parameters to configure a Chaos run.
      required: true
      x-ms-parameter-location: method
      x-body-name: ChaosParameters
    ClusterConfigurationUpgradeDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ClusterConfigurationUpgradeDescription'
      description: Parameters for a standalone cluster configuration upgrade.
      required: true
      x-ms-parameter-location: method
      x-body-name: ClusterConfigurationUpgradeDescription
    ClusterHealthChunkQueryDescriptionOptionalBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ClusterHealthChunkQueryDescription'
      description: |
        Describes the cluster and application health policies used to evaluate the cluster health and the filters to select which cluster entities to be returned.
        If the cluster health policy is present, it is used to evaluate the cluster events and the cluster nodes. If not present, the health evaluation uses the cluster health policy defined in the cluster manifest or the default cluster health policy.
        By default, each application is evaluated using its specific application health policy, defined in the application manifest, or the default health policy, if no policy is defined in manifest.
        If the application health policy map is specified, and it has an entry for an application, the specified application health policy
        is used to evaluate the application health.
        Users can specify very flexible filters to select which cluster entities to include in response. The selection can be done based on the entities health state and based on the hierarchy.
        The query can return multi-level children of the entities based on the specified filters. For example, it can return one application with a specified name, and for this application, return
        only services that are in Error or Warning, and all partitions and replicas for one of these services.
      required: false
      x-ms-parameter-location: method
      x-body-name: ClusterHealthChunkQueryDescription
    ClusterHealthPoliciesOptionalBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ClusterHealthPolicies'
      description: |
        Describes the health policies used to evaluate the cluster health.
        If not present, the health evaluation uses the cluster health policy defined in the cluster manifest or the default cluster health policy.
        By default, each application is evaluated using its specific application health policy, defined in the application manifest, or the default health policy, if no policy is defined in manifest.
        If the application health policy map is specified, and it has an entry for an application, the specified application health policy
        is used to evaluate the application health.
      required: false
      x-ms-parameter-location: method
      x-body-name: ClusterHealthPolicies
    ClusterHealthPolicyOptionalBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ClusterHealthPolicy'
      description: "Describes the health policies used to evaluate the health of a\
        \ cluster or node. If not present, the health evaluation uses the health policy\
        \ from cluster manifest or the default health policy."
      required: false
      x-ms-parameter-location: method
      x-body-name: ClusterHealthPolicy
    ComposeDeploymentUpgradeDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ComposeDeploymentUpgradeDescription'
      description: Parameters for upgrading compose deployment.
      required: true
      x-ms-parameter-location: method
      x-body-name: ComposeDeploymentUpgradeDescription
    CreateComposeDeploymentRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/CreateComposeDeploymentDescription'
      description: Describes the compose deployment that needs to be created.
      required: true
      x-ms-parameter-location: method
      x-body-name: CreateComposeDeploymentDescription
    CreateServiceFromTemplateRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ServiceFromTemplateDescription'
      description: Describes the service that needs to be created from the template
        defined in the application manifest.
      required: true
      x-ms-parameter-location: method
      x-body-name: ServiceFromTemplateDescription
    DeactivationIntentDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/DeactivationIntentDescription'
      description: Describes the intent or reason for deactivating the node.
      required: true
      x-ms-parameter-location: method
      x-body-name: DeactivationIntentDescription
    DeployServicePackageToNodeRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/DeployServicePackageToNodeDescription'
      description: Describes information for deploying a service package to a Service
        Fabric node.
      required: true
      x-ms-parameter-location: method
      x-body-name: DeployServicePackageToNodeDescription
    HealthInformationRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/HealthInformation'
      description: Describes the health information for the health report. This information
        needs to be present in all of the health reports sent to the health manager.
      required: true
      x-ms-parameter-location: method
      x-body-name: HealthInformation
    ImageStoreCopyDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ImageStoreCopyDescription'
      description: Describes the copy description for the image store.
      required: true
      x-ms-parameter-location: method
      x-body-name: ImageStoreCopyDescription
    NameDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/NameDescription'
      description: Describes the Service Fabric name to be created.
      required: true
      x-ms-parameter-location: method
      x-body-name: NameDescription
    PropertyBatchDescriptionListRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/PropertyBatchDescriptionList'
      description: Describes the property batch operations to be submitted.
      required: true
      x-ms-parameter-location: method
      x-body-name: PropertyBatchDescriptionList
    PropertyDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/PropertyDescription'
      description: Describes the Service Fabric property to be created.
      required: true
      x-ms-parameter-location: method
      x-body-name: PropertyDescription
    ProvisionFabricDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ProvisionFabricDescription'
      description: Describes the parameters for provisioning a cluster.
      required: true
      x-ms-parameter-location: method
      x-body-name: ProvisionFabricDescription
    RepairTaskApproveDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/RepairTaskApproveDescription'
      description: Describes the repair task to be approved.
      required: true
      x-ms-parameter-location: method
      x-body-name: RepairTaskApproveDescription
    RepairTaskCancelDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/RepairTaskCancelDescription'
      description: Describes the repair task to be cancelled.
      required: true
      x-ms-parameter-location: method
      x-body-name: RepairTaskCancelDescription
    RepairTaskDeleteDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/RepairTaskDeleteDescription'
      description: Describes the repair task to be deleted.
      required: true
      x-ms-parameter-location: method
      x-body-name: RepairTaskDeleteDescription
    RepairTaskRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/RepairTask'
      description: Describes the repair task to be created or updated.
      required: true
      x-ms-parameter-location: method
      x-body-name: RepairTask
    RepairTaskUpdateHealthPolicyDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/RepairTaskUpdateHealthPolicyDescription'
      description: Describes the repair task healthy policy to be updated.
      required: true
      x-ms-parameter-location: method
      x-body-name: RepairTaskUpdateHealthPolicyDescription
    RestartDeployedCodePackageRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/RestartDeployedCodePackageDescription'
      description: Describes the deployed code package on Service Fabric node to restart.
      required: true
      x-ms-parameter-location: method
      x-body-name: RestartDeployedCodePackageDescription
    RestartNodeDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/RestartNodeDescription'
      description: The instance of the node to be restarted and a flag indicating
        the need to take dump of the fabric process.
      required: true
      x-ms-parameter-location: method
      x-body-name: RestartNodeDescription
    ResumeApplicationUpgradeDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ResumeApplicationUpgradeDescription'
      description: Describes the parameters for resuming an application upgrade.
      required: true
      x-ms-parameter-location: method
      x-body-name: ResumeApplicationUpgradeDescription
    ResumeClusterUpgradeDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ResumeClusterUpgradeDescription'
      description: Describes the parameters for resuming a cluster upgrade.
      required: true
      x-ms-parameter-location: method
      x-body-name: ResumeClusterUpgradeDescription
    ServiceDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ServiceDescription'
      description: The information necessary to create a service.
      required: true
      x-ms-parameter-location: method
      x-body-name: ServiceDescription
    ServiceUpdateDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ServiceUpdateDescription'
      description: The information necessary to update a service.
      required: true
      x-ms-parameter-location: method
      x-body-name: ServiceUpdateDescription
    StartClusterUpgradeDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/StartClusterUpgradeDescription'
      description: Describes the parameters for starting a cluster upgrade.
      required: true
      x-ms-parameter-location: method
      x-body-name: StartClusterUpgradeDescription
    UnprovisionFabricDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/UnprovisionFabricDescription'
      description: Describes the parameters for unprovisioning a cluster.
      required: true
      x-ms-parameter-location: method
      x-body-name: UnprovisionFabricDescription
    UpdateClusterUpgradeDescriptionRequiredBodyParam:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/UpdateClusterUpgradeDescription'
      description: Parameters for updating a cluster upgrade.
      required: true
      x-ms-parameter-location: method
      x-body-name: UpdateClusterUpgradeDescription
  schemas:
    AadMetadata:
      description: Azure Active Directory metadata used for secured connection to
        cluster.
      example:
        redirect: redirect
        cluster: cluster
        authority: authority
        client: client
        login: login
        tenant: tenant
      properties:
        authority:
          description: The AAD authority url.
          title: authority
          type: string
        client:
          description: The AAD client application Id.
          title: client
          type: string
        cluster:
          description: The AAD cluster application Id.
          title: cluster
          type: string
        login:
          description: The AAD login url.
          title: login
          type: string
        redirect:
          description: The client application redirect address.
          title: redirect
          type: string
        tenant:
          description: The AAD tenant Id.
          title: tenant
          type: string
      title: AadMetadata
      type: object
    AadMetadataObject:
      description: Azure Active Directory metadata object used for secured connection
        to cluster.
      example:
        metadata:
          redirect: redirect
          cluster: cluster
          authority: authority
          client: client
          login: login
          tenant: tenant
        type: type
      properties:
        metadata:
          $ref: '#/components/schemas/AadMetadata'
        type:
          description: The client authentication method.
          title: type
          type: string
      title: AadMetadataObject
      type: object
    ApplicationCapacityDescription:
      description: |
        Describes capacity information for services of this application. This description can be used for describing the following.
        - Reserving the capacity for the services on the nodes
        - Limiting the total number of nodes that services of this application can run on
        - Limiting the custom capacity metrics to limit the total consumption of this metric by the services of this application
      example:
        MinimumNodes: 0
        ApplicationMetrics:
        - MaximumCapacity: 0
          ReservationCapacity: 6
          TotalApplicationCapacity: 1
          Name: Name
        - MaximumCapacity: 0
          ReservationCapacity: 6
          TotalApplicationCapacity: 1
          Name: Name
        MaximumNodes: 0
      properties:
        ApplicationMetrics:
          description: List of application capacity metric description.
          items:
            $ref: '#/components/schemas/ApplicationMetricDescription'
          title: ApplicationMetrics
          type: array
        MaximumNodes:
          default: 0
          description: "The maximum number of nodes where Service Fabric will reserve\
            \ capacity for this application. Note that this does not mean that the\
            \ services of this application will be placed on all of those nodes. By\
            \ default, the value of this property is zero and it means that the services\
            \ can be placed on any node."
          format: int64
          minimum: 0
          title: MaximumNodes
          type: integer
        MinimumNodes:
          description: "The minimum number of nodes where Service Fabric will reserve\
            \ capacity for this application. Note that this does not mean that the\
            \ services of this application will be placed on all of those nodes. If\
            \ this property is set to zero, no capacity will be reserved. The value\
            \ of this property cannot be more than the value of the MaximumNodes property."
          format: int64
          minimum: 0
          title: MinimumNodes
          type: integer
      title: ApplicationCapacityDescription
      type: object
    ApplicationDefinitionKind:
      description: |
        The mechanism used to define a Service Fabric application. Possible values are.

          - Invalid - Indicates the application definition kind is invalid. All Service Fabric enumerations have the invalid type. The value is 65535.
          - ServiceFabricApplicationDescription - Indicates the application is defined by a Service Fabric application description. The value is 0.
          - Compose - Indicates the application is defined by compose file(s). The value is 1.
      enum:
      - Invalid
      - ServiceFabricApplicationDescription
      - Compose
      title: ApplicationDefinitionKind
      type: string
    ApplicationDescription:
      description: Describes a Service Fabric application.
      example:
        TypeName: TypeName
        TypeVersion: TypeVersion
        ParameterList:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        ApplicationCapacity:
          MinimumNodes: 0
          ApplicationMetrics:
          - MaximumCapacity: 0
            ReservationCapacity: 6
            TotalApplicationCapacity: 1
            Name: Name
          - MaximumCapacity: 0
            ReservationCapacity: 6
            TotalApplicationCapacity: 1
            Name: Name
          MaximumNodes: 0
        Name: Name
      properties:
        ApplicationCapacity:
          $ref: '#/components/schemas/ApplicationCapacityDescription'
        Name:
          description: "The name of the application, including the 'fabric:' URI scheme."
          title: ApplicationName
          type: string
        ParameterList:
          description: List of application parameters with overridden values from
            their default values specified in the application manifest.
          items:
            $ref: '#/components/schemas/ApplicationParameter'
          title: Parameters
          type: array
        TypeName:
          description: The application type name as defined in the application manifest.
          title: TypeName
          type: string
        TypeVersion:
          description: The version of the application type as defined in the application
            manifest.
          title: TypeVersion
          type: string
      required:
      - Name
      - TypeName
      - TypeVersion
      title: ApplicationDescription
      type: object
    ApplicationHealth:
      allOf:
      - $ref: '#/components/schemas/EntityHealth'
      - description: ApplicationHealth
        properties:
          DeployedApplicationHealthStates:
            description: Deployed application health states as found in the health
              store.
            items:
              $ref: '#/components/schemas/DeployedApplicationHealthState'
            type: array
          Name:
            $ref: '#/components/schemas/ApplicationName'
          ServiceHealthStates:
            description: Service health states as found in the health store.
            items:
              $ref: '#/components/schemas/ServiceHealthState'
            type: array
        type: object
      description: Represents the health of the application. Contains the application
        aggregated health state and the service and deployed application health states.
      example:
        AggregatedHealthState: Invalid
        HealthStatistics:
          HealthStateCountList:
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
        DeployedApplicationHealthStates:
        - AggregatedHealthState: null
          ApplicationName: null
          NodeName: null
        - AggregatedHealthState: null
          ApplicationName: null
          NodeName: null
        UnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        HealthEvents:
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        ServiceHealthStates:
        - AggregatedHealthState: null
          ServiceName: null
        - AggregatedHealthState: null
          ServiceName: null
        Name: null
      title: ApplicationHealth
    ApplicationHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: ApplicationHealthEvaluation
        properties:
          ApplicationName:
            $ref: '#/components/schemas/ApplicationName'
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for an application, containing information\
        \ about the data and the algorithm used by the health store to evaluate health."
      x-ms-discriminator-value: Application
    ApplicationHealthPolicies:
      description: |
        Defines the application health policy map used to evaluate the health of an application or one of its children entities.
      example:
        ApplicationHealthPolicyMap:
        - Value:
            DefaultServiceTypeHealthPolicy:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            ConsiderWarningAsError: false
            MaxPercentUnhealthyDeployedApplications: 5
            ServiceTypeHealthPolicyMap:
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
          Key: Key
        - Value:
            DefaultServiceTypeHealthPolicy:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            ConsiderWarningAsError: false
            MaxPercentUnhealthyDeployedApplications: 5
            ServiceTypeHealthPolicyMap:
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
          Key: Key
      properties:
        ApplicationHealthPolicyMap:
          description: |
            Defines a map that contains specific application health policies for different applications.
            Each entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.
            If an application is not specified in the map, the application health evaluation uses the ApplicationHealthPolicy found in its application manifest or the default application health policy (if no health policy is defined in the manifest).
            The map is empty by default.
          items:
            $ref: '#/components/schemas/ApplicationHealthPolicyMapItem'
          title: ApplicationHealthPolicyMap
          type: array
      title: ApplicationHealthPolicies
      type: object
    ApplicationHealthPolicy:
      description: |
        Defines a health policy used to evaluate the health of an application or one of its children entities.
      example:
        DefaultServiceTypeHealthPolicy:
          MaxPercentUnhealthyReplicasPerPartition: 6
          MaxPercentUnhealthyServices: 1
          MaxPercentUnhealthyPartitionsPerService: 0
        ConsiderWarningAsError: false
        MaxPercentUnhealthyDeployedApplications: 5
        ServiceTypeHealthPolicyMap:
        - Value:
            MaxPercentUnhealthyReplicasPerPartition: 6
            MaxPercentUnhealthyServices: 1
            MaxPercentUnhealthyPartitionsPerService: 0
          Key: Key
        - Value:
            MaxPercentUnhealthyReplicasPerPartition: 6
            MaxPercentUnhealthyServices: 1
            MaxPercentUnhealthyPartitionsPerService: 0
          Key: Key
      properties:
        ConsiderWarningAsError:
          default: false
          description: Indicates whether warnings are treated with the same severity
            as errors.
          title: ConsiderWarningAsError
          type: boolean
        DefaultServiceTypeHealthPolicy:
          $ref: '#/components/schemas/ServiceTypeHealthPolicy'
        MaxPercentUnhealthyDeployedApplications:
          description: |
            The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.
            The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.
            This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.
            The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
          title: MaxPercentUnhealthyDeployedApplications
          type: integer
        ServiceTypeHealthPolicyMap:
          description: |
            Defines a ServiceTypeHealthPolicy per service type name.

            The entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.

            If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
          items:
            $ref: '#/components/schemas/ServiceTypeHealthPolicyMapItem'
          title: ServiceTypeHealthPolicyMap
          type: array
      title: ApplicationHealthPolicy
      type: object
    ApplicationHealthPolicyMap:
      description: |
        Defines a map that contains specific application health policies for different applications.
        Each entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.
        If an application is not specified in the map, the application health evaluation uses the ApplicationHealthPolicy found in its application manifest or the default application health policy (if no health policy is defined in the manifest).
        The map is empty by default.
      items:
        $ref: '#/components/schemas/ApplicationHealthPolicyMapItem'
      title: ApplicationHealthPolicyMap
      type: array
    ApplicationHealthPolicyMapItem:
      description: |
        Defines an item in ApplicationHealthPolicyMap.
      example:
        Value:
          DefaultServiceTypeHealthPolicy:
            MaxPercentUnhealthyReplicasPerPartition: 6
            MaxPercentUnhealthyServices: 1
            MaxPercentUnhealthyPartitionsPerService: 0
          ConsiderWarningAsError: false
          MaxPercentUnhealthyDeployedApplications: 5
          ServiceTypeHealthPolicyMap:
          - Value:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            Key: Key
          - Value:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            Key: Key
        Key: Key
      properties:
        Key:
          description: "The name of the application, including the 'fabric:' URI scheme."
          title: ApplicationName
          type: string
        Value:
          $ref: '#/components/schemas/ApplicationHealthPolicy'
      required:
      - Key
      - Value
      title: ApplicationHealthPolicyMapItem
      type: object
    ApplicationHealthState:
      allOf:
      - $ref: '#/components/schemas/EntityHealthState'
      - description: ApplicationHealthState
        properties:
          Name:
            $ref: '#/components/schemas/ApplicationName'
        type: object
      description: |
        Represents the health state of an application, which contains the application identifier and the aggregated health state.
      example:
        AggregatedHealthState: null
        Name: null
      title: ApplicationHealthState
    ApplicationHealthStateChunk:
      allOf:
      - $ref: '#/components/schemas/EntityHealthStateChunk'
      - description: ApplicationHealthStateChunk
        properties:
          ApplicationName:
            $ref: '#/components/schemas/ApplicationName'
          ApplicationTypeName:
            $ref: '#/components/schemas/ApplicationTypeName'
          DeployedApplicationHealthStateChunks:
            $ref: '#/components/schemas/DeployedApplicationHealthStateChunkList'
          ServiceHealthStateChunks:
            $ref: '#/components/schemas/ServiceHealthStateChunkList'
        type: object
      description: |
        Represents the health state chunk of a application.
        The application health state chunk contains the application name, its aggregated health state and any children services and deployed applications that respect the filters in cluster health chunk query description.
      example:
        ApplicationName: null
        ServiceHealthStateChunks:
          Items:
          - ServiceName: null
            PartitionHealthStateChunks:
              Items:
              - ReplicaHealthStateChunks:
                  Items:
                  - HealthState: null
                    ReplicaOrInstanceId: null
                  - HealthState: null
                    ReplicaOrInstanceId: null
                PartitionId: null
                HealthState: null
              - ReplicaHealthStateChunks:
                  Items:
                  - HealthState: null
                    ReplicaOrInstanceId: null
                  - HealthState: null
                    ReplicaOrInstanceId: null
                PartitionId: null
                HealthState: null
            HealthState: null
          - ServiceName: null
            PartitionHealthStateChunks:
              Items:
              - ReplicaHealthStateChunks:
                  Items:
                  - HealthState: null
                    ReplicaOrInstanceId: null
                  - HealthState: null
                    ReplicaOrInstanceId: null
                PartitionId: null
                HealthState: null
              - ReplicaHealthStateChunks:
                  Items:
                  - HealthState: null
                    ReplicaOrInstanceId: null
                  - HealthState: null
                    ReplicaOrInstanceId: null
                PartitionId: null
                HealthState: null
            HealthState: null
        ApplicationTypeName: null
        DeployedApplicationHealthStateChunks:
          Items:
          - DeployedServicePackageHealthStateChunks:
              Items:
              - ServiceManifestName: null
                ServicePackageActivationId: null
                HealthState: null
              - ServiceManifestName: null
                ServicePackageActivationId: null
                HealthState: null
            NodeName: NodeName
            HealthState: null
          - DeployedServicePackageHealthStateChunks:
              Items:
              - ServiceManifestName: null
                ServicePackageActivationId: null
                HealthState: null
              - ServiceManifestName: null
                ServicePackageActivationId: null
                HealthState: null
            NodeName: NodeName
            HealthState: null
        HealthState: Invalid
      title: ApplicationHealthStateChunk
    ApplicationHealthStateChunkList:
      allOf:
      - $ref: '#/components/schemas/EntityHealthStateChunkList'
      - description: ApplicationHealthStateChunkList
        properties:
          Items:
            description: |
              The list of application health state chunks that respect the input filters in the chunk query.
            items:
              $ref: '#/components/schemas/ApplicationHealthStateChunk'
            type: array
        type: object
      description: |
        The list of application health state chunks in the cluster that respect the input filters in the chunk query. Returned by get cluster health state chunks query.
      example:
        TotalCount: 0
        Items:
        - ApplicationName: null
          ServiceHealthStateChunks:
            Items:
            - ServiceName: null
              PartitionHealthStateChunks:
                Items:
                - ReplicaHealthStateChunks:
                    Items:
                    - HealthState: null
                      ReplicaOrInstanceId: null
                    - HealthState: null
                      ReplicaOrInstanceId: null
                  PartitionId: null
                  HealthState: null
                - ReplicaHealthStateChunks:
                    Items:
                    - HealthState: null
                      ReplicaOrInstanceId: null
                    - HealthState: null
                      ReplicaOrInstanceId: null
                  PartitionId: null
                  HealthState: null
              HealthState: null
            - ServiceName: null
              PartitionHealthStateChunks:
                Items:
                - ReplicaHealthStateChunks:
                    Items:
                    - HealthState: null
                      ReplicaOrInstanceId: null
                    - HealthState: null
                      ReplicaOrInstanceId: null
                  PartitionId: null
                  HealthState: null
                - ReplicaHealthStateChunks:
                    Items:
                    - HealthState: null
                      ReplicaOrInstanceId: null
                    - HealthState: null
                      ReplicaOrInstanceId: null
                  PartitionId: null
                  HealthState: null
              HealthState: null
          ApplicationTypeName: null
          DeployedApplicationHealthStateChunks:
            Items:
            - DeployedServicePackageHealthStateChunks:
                Items:
                - ServiceManifestName: null
                  ServicePackageActivationId: null
                  HealthState: null
                - ServiceManifestName: null
                  ServicePackageActivationId: null
                  HealthState: null
              NodeName: NodeName
              HealthState: null
            - DeployedServicePackageHealthStateChunks:
                Items:
                - ServiceManifestName: null
                  ServicePackageActivationId: null
                  HealthState: null
                - ServiceManifestName: null
                  ServicePackageActivationId: null
                  HealthState: null
              NodeName: NodeName
              HealthState: null
          HealthState: Invalid
        - ApplicationName: null
          ServiceHealthStateChunks:
            Items:
            - ServiceName: null
              PartitionHealthStateChunks:
                Items:
                - ReplicaHealthStateChunks:
                    Items:
                    - HealthState: null
                      ReplicaOrInstanceId: null
                    - HealthState: null
                      ReplicaOrInstanceId: null
                  PartitionId: null
                  HealthState: null
                - ReplicaHealthStateChunks:
                    Items:
                    - HealthState: null
                      ReplicaOrInstanceId: null
                    - HealthState: null
                      ReplicaOrInstanceId: null
                  PartitionId: null
                  HealthState: null
              HealthState: null
            - ServiceName: null
              PartitionHealthStateChunks:
                Items:
                - ReplicaHealthStateChunks:
                    Items:
                    - HealthState: null
                      ReplicaOrInstanceId: null
                    - HealthState: null
                      ReplicaOrInstanceId: null
                  PartitionId: null
                  HealthState: null
                - ReplicaHealthStateChunks:
                    Items:
                    - HealthState: null
                      ReplicaOrInstanceId: null
                    - HealthState: null
                      ReplicaOrInstanceId: null
                  PartitionId: null
                  HealthState: null
              HealthState: null
          ApplicationTypeName: null
          DeployedApplicationHealthStateChunks:
            Items:
            - DeployedServicePackageHealthStateChunks:
                Items:
                - ServiceManifestName: null
                  ServicePackageActivationId: null
                  HealthState: null
                - ServiceManifestName: null
                  ServicePackageActivationId: null
                  HealthState: null
              NodeName: NodeName
              HealthState: null
            - DeployedServicePackageHealthStateChunks:
                Items:
                - ServiceManifestName: null
                  ServicePackageActivationId: null
                  HealthState: null
                - ServiceManifestName: null
                  ServicePackageActivationId: null
                  HealthState: null
              NodeName: NodeName
              HealthState: null
          HealthState: Invalid
      title: ApplicationHealthStateChunkList
    ApplicationHealthStateFilter:
      description: |
        Defines matching criteria to determine whether a application should be included in the cluster health chunk.
        One filter can match zero, one or multiple applications, depending on its properties.
      example:
        ServiceFilters:
        - ServiceNameFilter: ServiceNameFilter
          HealthStateFilter: 5
          PartitionFilters:
          - ReplicaFilters:
            - HealthStateFilter: 2
              ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
            - HealthStateFilter: 2
              ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
            HealthStateFilter: 5
            PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - ReplicaFilters:
            - HealthStateFilter: 2
              ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
            - HealthStateFilter: 2
              ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
            HealthStateFilter: 5
            PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - ServiceNameFilter: ServiceNameFilter
          HealthStateFilter: 5
          PartitionFilters:
          - ReplicaFilters:
            - HealthStateFilter: 2
              ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
            - HealthStateFilter: 2
              ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
            HealthStateFilter: 5
            PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - ReplicaFilters:
            - HealthStateFilter: 2
              ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
            - HealthStateFilter: 2
              ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
            HealthStateFilter: 5
            PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        HealthStateFilter: 1
        ApplicationTypeNameFilter: ApplicationTypeNameFilter
        DeployedApplicationFilters:
        - NodeNameFilter: NodeNameFilter
          HealthStateFilter: 6
          DeployedServicePackageFilters:
          - ServiceManifestNameFilter: ServiceManifestNameFilter
            HealthStateFilter: 0
            ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
          - ServiceManifestNameFilter: ServiceManifestNameFilter
            HealthStateFilter: 0
            ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
        - NodeNameFilter: NodeNameFilter
          HealthStateFilter: 6
          DeployedServicePackageFilters:
          - ServiceManifestNameFilter: ServiceManifestNameFilter
            HealthStateFilter: 0
            ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
          - ServiceManifestNameFilter: ServiceManifestNameFilter
            HealthStateFilter: 0
            ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
        ApplicationNameFilter: ApplicationNameFilter
      properties:
        ApplicationNameFilter:
          description: |
            The name of the application that matches the filter, as a fabric uri. The filter is applied only to the specified application, if it exists.
            If the application doesn't exist, no application is returned in the cluster health chunk based on this filter.
            If the application exists, it is included in the cluster health chunk if it respects the other filter properties.
            If not specified, all applications are matched against the other filter members, like health state filter.
          title: ApplicationNameFilter
          type: string
        ApplicationTypeNameFilter:
          description: |
            The name of the application type that matches the filter.
            If specified, the filter is applied only to applications of the selected application type, if any exists.
            If no applications of the specified application type exists, no application is returned in the cluster health chunk based on this filter.
            Each application of the specified application type is included in the cluster health chunk if it respects the other filter properties.
            If not specified, all applications are matched against the other filter members, like health state filter.
          title: ApplicationTypeNameFilter
          type: string
        DeployedApplicationFilters:
          description: |
            Defines a list of filters that specify which deployed applications to be included in the returned cluster health chunk as children of the application. The deployed applications are returned only if the parent application matches a filter.
            If the list is empty, no deployed applications are returned. All the deployed applications are used to evaluate the parent application aggregated health state, regardless of the input filters.
            The application filter may specify multiple deployed application filters.
            For example, it can specify a filter to return all deployed applications with health state Error and another filter to always include a deployed application on a specified node.
          items:
            $ref: '#/components/schemas/DeployedApplicationHealthStateFilter'
          title: DeployedApplicationFilters
          type: array
        HealthStateFilter:
          description: |
            The filter for the health state of the applications. It allows selecting applications if they match the desired health states.
            The possible values are integer value of one of the following health states. Only applications that match the filter are returned. All applications are used to evaluate the cluster aggregated health state.
            If not specified, default value is None, unless the application name or the application type name are specified. If the filter has default value and application name is specified, the matching application is returned.
            The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
            For example, if the provided value is 6, it matches applications with HealthState value of OK (2) and Warning (4).

            - Default - Default value. Matches any HealthState. The value is zero.
            - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
            - Ok - Filter that matches input with HealthState value Ok. The value is 2.
            - Warning - Filter that matches input with HealthState value Warning. The value is 4.
            - Error - Filter that matches input with HealthState value Error. The value is 8.
            - All - Filter that matches input with any HealthState value. The value is 65535.
          title: HealthStateFilter
          type: integer
        ServiceFilters:
          description: |
            Defines a list of filters that specify which services to be included in the returned cluster health chunk as children of the application. The services are returned only if the parent application matches a filter.
            If the list is empty, no services are returned. All the services are used to evaluate the parent application aggregated health state, regardless of the input filters.
            The application filter may specify multiple service filters.
            For example, it can specify a filter to return all services with health state Error and another filter to always include a service identified by its service name.
          items:
            $ref: '#/components/schemas/ServiceHealthStateFilter'
          title: ServiceFilters
          type: array
      title: ApplicationHealthStateFilter
      type: object
    ApplicationId:
      description: "The identity of the application. This is an encoded representation\
        \ of the application name. This is used in the REST APIs to identify the application\
        \ resource. \n\nStarting in version 6.0, hierarchical names are delimited\
        \ with the \"~\" character. For example, if the application name is \"fabric://myapp/app1\"\
        , the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\"\
        \ in previous versions.\n"
      title: Id
      type: string
    ApplicationInfo:
      description: Information about a Service Fabric application.
      example:
        Status: Invalid
        TypeName: TypeName
        Parameters:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        ApplicationDefinitionKind: Invalid
        TypeVersion: TypeVersion
        Id: Id
        HealthState: Invalid
        Name: Name
      properties:
        ApplicationDefinitionKind:
          $ref: '#/components/schemas/ApplicationDefinitionKind'
        HealthState:
          $ref: '#/components/schemas/HealthState'
        Id:
          description: "The identity of the application. This is an encoded representation\
            \ of the application name. This is used in the REST APIs to identify the\
            \ application resource. \n\nStarting in version 6.0, hierarchical names\
            \ are delimited with the \"~\" character. For example, if the application\
            \ name is \"fabric://myapp/app1\", the application identity would be \"\
            myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.\n"
          title: Id
          type: string
        Name:
          description: "The name of the application, including the 'fabric:' URI scheme."
          title: ApplicationName
          type: string
        Parameters:
          description: List of application parameters with overridden values from
            their default values specified in the application manifest.
          items:
            $ref: '#/components/schemas/ApplicationParameter'
          title: Parameters
          type: array
        Status:
          $ref: '#/components/schemas/ApplicationStatus'
        TypeName:
          description: The application type name as defined in the application manifest.
          title: TypeName
          type: string
        TypeVersion:
          description: The version of the application type as defined in the application
            manifest.
          title: TypeVersion
          type: string
      title: ApplicationInfo
      type: object
    ApplicationLoadInfo:
      description: Load Information about a Service Fabric application.
      example:
        NodeCount: 1
        MinimumNodes: 6
        Id: Id
        MaximumNodes: 0
        ApplicationLoadMetricInformation:
        - MaximumCapacity: 0
          ReservationCapacity: 6
          TotalApplicationCapacity: 1
          Name: Name
        - MaximumCapacity: 0
          ReservationCapacity: 6
          TotalApplicationCapacity: 1
          Name: Name
      properties:
        ApplicationLoadMetricInformation:
          description: List of application capacity metric description.
          items:
            $ref: '#/components/schemas/ApplicationMetricDescription'
          title: ApplicationMetrics
          type: array
        Id:
          description: "The identity of the application. This is an encoded representation\
            \ of the application name. This is used in the REST APIs to identify the\
            \ application resource. \n\nStarting in version 6.0, hierarchical names\
            \ are delimited with the \"~\" character. For example, if the application\
            \ name is \"fabric://myapp/app1\", the application identity would be \"\
            myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.\n"
          title: Id
          type: string
        MaximumNodes:
          description: |
            The maximum number of nodes where this application can be instantiated.
            It is the number of nodes this application is allowed to span.
            For applications that do not have application capacity defined this value will be zero.
          format: int64
          title: MaximumNodes
          type: integer
        MinimumNodes:
          description: |
            The minimum number of nodes for this application.
            It is the number of nodes where Service Fabric will reserve Capacity in the cluster which equals to ReservedLoad * MinimumNodes for this Application instance.
            For applications that do not have application capacity defined this value will be zero.
          format: int64
          title: MinimumNodes
          type: integer
        NodeCount:
          description: |
            The number of nodes on which this application is instantiated.
            For applications that do not have application capacity defined this value will be zero.
          format: int64
          title: NodeCount
          type: integer
      title: ApplicationLoadInfo
      type: object
    ApplicationMetricDescription:
      description: |
        Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.
      example:
        MaximumCapacity: 0
        ReservationCapacity: 6
        TotalApplicationCapacity: 1
        Name: Name
      properties:
        MaximumCapacity:
          description: |
            The maximum node capacity for Service Fabric application.
            This is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.
            If set to zero, capacity for this metric is unlimited on each node.
            When creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.
            When updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.
          format: int64
          title: MaximumCapacity
          type: integer
        Name:
          description: The name of the metric.
          title: Name
          type: string
        ReservationCapacity:
          description: |
            The node reservation capacity for Service Fabric application.
            This is the amount of load which is reserved on nodes which have instances of this application.
            If MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.
            If set to zero, no capacity is reserved for this metric.
            When setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.
          format: int64
          title: ReservationCapacity
          type: integer
        TotalApplicationCapacity:
          description: |
            The total metric capacity for Service Fabric application.
            This is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.
            When creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.
          format: int64
          title: TotalApplicationCapacity
          type: integer
      title: ApplicationMetricDescription
      type: object
    ApplicationMetricDescriptionList:
      description: List of application capacity metric description.
      items:
        $ref: '#/components/schemas/ApplicationMetricDescription'
      title: ApplicationMetrics
      type: array
    ApplicationName:
      description: "The name of the application, including the 'fabric:' URI scheme."
      title: ApplicationName
      type: string
    ApplicationNameInfo:
      description: Information about the application name.
      example:
        Id: Id
        Name: Name
      properties:
        Id:
          description: "The identity of the application. This is an encoded representation\
            \ of the application name. This is used in the REST APIs to identify the\
            \ application resource. \n\nStarting in version 6.0, hierarchical names\
            \ are delimited with the \"~\" character. For example, if the application\
            \ name is \"fabric://myapp/app1\", the application identity would be \"\
            myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.\n"
          title: Id
          type: string
        Name:
          description: "The name of the application, including the 'fabric:' URI scheme."
          title: ApplicationName
          type: string
      title: ApplicationNameInfo
      type: object
    ApplicationParameter:
      description: Describes an application parameter override to be applied when
        creating or upgrading an application.
      example:
        Value: Value
        Key: Key
      properties:
        Key:
          description: The name of the parameter.
          title: Key
          type: string
        Value:
          description: The value of the parameter.
          title: Value
          type: string
      required:
      - Key
      - Value
      title: ApplicationParameter
      type: object
    ApplicationParameterList:
      description: List of application parameters with overridden values from their
        default values specified in the application manifest.
      items:
        $ref: '#/components/schemas/ApplicationParameter'
      title: Parameters
      type: array
    ApplicationStatus:
      description: |
        The status of the application. Possible values are.

          - Invalid - Indicates the application status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - Ready - Indicates the application status is ready. The value is 1.
          - Upgrading - Indicates the application status is upgrading. The value is 2.
          - Creating - Indicates the application status is creating. The value is 3.
          - Deleting - Indicates the application status is deleting. The value is 4.
          - Failed - Indicates the creation or deletion of application was terminated due to persistent failures. Another create/delete request can be accepted to resume a failed application. The value is 5.
      enum:
      - Invalid
      - Ready
      - Upgrading
      - Creating
      - Deleting
      - Failed
      title: ApplicationStatus
      type: string
    ApplicationTypeApplicationsHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: ApplicationTypeApplicationsHealthEvaluation
        properties:
          ApplicationTypeName:
            $ref: '#/components/schemas/ApplicationTypeName'
          MaxPercentUnhealthyApplications:
            description: "Maximum allowed percentage of unhealthy applications for\
              \ the application type, specified as an entry in ApplicationTypeHealthPolicyMap."
            type: integer
          TotalCount:
            description: Total number of applications of the application type found
              in the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for applications of a particular\
        \ application type. The application type applications evaluation can be returned\
        \ when cluster health evaluation returns unhealthy aggregated health state,\
        \ either Error or Warning. It contains health evaluations for each unhealthy\
        \ application of the included application type that impacted current aggregated\
        \ health state."
      x-ms-discriminator-value: ApplicationTypeApplications
    ApplicationTypeDefinitionKind:
      description: |
        The mechanism used to define a Service Fabric application type. Possible values are.

          - Invalid - Indicates the application type definition kind is invalid. All Service Fabric enumerations have the invalid type. The value is 0.
          - ServiceFabricApplicationPackage - Indicates the application type is defined and created by a Service Fabric application package provided by the user. The value is 1.
          - Compose - Indicates the application type is defined and created implicitly as part of a compose deployment. The value is 2.
      enum:
      - Invalid
      - ServiceFabricApplicationPackage
      - Compose
      title: ApplicationTypeDefinitionKind
      type: string
    ApplicationTypeHealthPolicyMap:
      description: |
        Defines a map with max percentage unhealthy applications for specific application types.
        Each entry specifies as key the application type name and as value an integer that represents the MaxPercentUnhealthyApplications percentage used to evaluate the applications of the specified application type.

        The application type health policy map can be used during cluster health evaluation to describe special application types.
        The application types included in the map are evaluated against the percentage specified in the map, and not with the global MaxPercentUnhealthyApplications defined in the cluster health policy.
        The applications of application types specified in the map are not counted against the global pool of applications.
        For example, if some applications of a type are critical, the cluster administrator can add an entry to the map for that application type
        and assign it a value of 0% (that is, do not tolerate any failures).
        All other applications can be evaluated with MaxPercentUnhealthyApplications set to 20% to tolerate some failures out of the thousands of application instances.
        The application type health policy map is used only if the cluster manifest enables application type health evaluation using the configuration entry for HealthManager/EnableApplicationTypeHealthEvaluation.
      items:
        $ref: '#/components/schemas/ApplicationTypeHealthPolicyMapItem'
      title: ApplicationTypeHealthPolicyMap
      type: array
    ApplicationTypeHealthPolicyMapItem:
      description: |
        Defines an item in ApplicationTypeHealthPolicyMap.
      example:
        Value: 5
        Key: Key
      properties:
        Key:
          description: The key of the application type health policy map item. This
            is the name of the application type.
          title: Key
          type: string
        Value:
          description: |
            The value of the application type health policy map item.
            The max percent unhealthy applications allowed for the application type. Must be between zero and 100.
          title: Value
          type: integer
      required:
      - Key
      - Value
      title: ApplicationTypeHealthPolicyMapItem
      type: object
    ApplicationTypeImageStorePath:
      description: Path description for the application package in the image store
        specified during the prior copy operation.
      example:
        ApplicationTypeBuildPath: ApplicationTypeBuildPath
      properties:
        ApplicationTypeBuildPath:
          description: The relative image store path to the application package.
          title: ApplicationTypeBuildPath
          type: string
      required:
      - ApplicationTypeBuildPath
      title: ApplicationTypeImageStorePath
      type: object
    ApplicationTypeImageStoreVersion:
      description: A version description for the application type
      example:
        ApplicationTypeVersion: ApplicationTypeVersion
      properties:
        ApplicationTypeVersion:
          description: The version of the application type as defined in the application
            manifest.
          title: TypeVersion
          type: string
      required:
      - ApplicationTypeVersion
      title: ApplicationTypeImageStoreVersion
      type: object
    ApplicationTypeInfo:
      description: Information about an application type.
      example:
        Status: Invalid
        Version: Version
        StatusDetails: StatusDetails
        ApplicationTypeDefinitionKind: Invalid
        DefaultParameterList:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        Name: Name
      properties:
        ApplicationTypeDefinitionKind:
          $ref: '#/components/schemas/ApplicationTypeDefinitionKind'
        DefaultParameterList:
          description: List of application type parameters that can be overridden
            when creating or updating the application.
          items:
            $ref: '#/components/schemas/ApplicationParameter'
          title: DefaultParameterList
          type: array
        Name:
          description: The application type name as defined in the application manifest.
          title: TypeName
          type: string
        Status:
          $ref: '#/components/schemas/ApplicationTypeStatus'
        StatusDetails:
          title: StatusDetails
          type: string
        Version:
          description: The version of the application type as defined in the application
            manifest.
          title: TypeVersion
          type: string
      title: ApplicationTypeInfo
      type: object
    ApplicationTypeManifest:
      description: Contains the manifest describing an application type registered
        in a Service Fabric cluster.
      example:
        Manifest: Manifest
      properties:
        Manifest:
          description: The XML manifest as a string.
          title: Manifest
          type: string
      title: ApplicationTypeManifest
      type: object
    ApplicationTypeName:
      description: The application type name as defined in the application manifest.
      title: TypeName
      type: string
    ApplicationTypeParameterList:
      description: List of application type parameters that can be overridden when
        creating or updating the application.
      items:
        $ref: '#/components/schemas/ApplicationParameter'
      title: DefaultParameterList
      type: array
    ApplicationTypeStatus:
      description: |
        The status of the application type. Possible values are following.

          - Invalid - Indicates the application type status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - Provisioning - Indicates that the application type is being provisioned in the cluster. The value is 1.
          - Available - Indicates that the application type is fully provisioned and is available for use. An application of this type and version can be created. The value is 2.
          - Unprovisioning - Indicates that the application type is in process of being unprovisioned from the cluster. The value is 3.
          - Failed - Indicates that the application type provisioning failed and it is unavailable for use. The failure details can be obtained from the application type information query. The failed application type information remains in the cluster until it is unprovisioned or reprovisioned successfully. The value is 4.
      enum:
      - Invalid
      - Provisioning
      - Available
      - Unprovisioning
      - Failed
      title: ApplicationTypeStatus
      type: string
    ApplicationTypeVersion:
      description: The version of the application type as defined in the application
        manifest.
      title: TypeVersion
      type: string
    ApplicationUnhealthyEvaluations:
      description: List of health evaluations that resulted in the current aggregated
        health state.
      items:
        $ref: '#/components/schemas/HealthEvaluationWrapper'
      title: ApplicationUnhealthyEvaluations
      type: array
    ApplicationUpgradeDescription:
      description: "Describes the parameters for an application upgrade. Please note\
        \ that upgrade description replaces the existing application description.\
        \ This means that if the parameters are not specified, the existing parameters\
        \ on the applications will be overwritten with the empty parameters list.\
        \ This would results in application using the default value of the parameters\
        \ from the application manifest. If you do not want to change any existing\
        \ parameter values, please get the application parameters first using the\
        \ GetApplicationInfo query and then supply those values as Parameters in this\
        \ ApplicationUpgradeDescription."
      example:
        Parameters:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        UpgradeKind: Rolling
        ApplicationHealthPolicy:
          DefaultServiceTypeHealthPolicy:
            MaxPercentUnhealthyReplicasPerPartition: 6
            MaxPercentUnhealthyServices: 1
            MaxPercentUnhealthyPartitionsPerService: 0
          ConsiderWarningAsError: false
          MaxPercentUnhealthyDeployedApplications: 5
          ServiceTypeHealthPolicyMap:
          - Value:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            Key: Key
          - Value:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            Key: Key
        RollingUpgradeMode: null
        ForceRestart: false
        UpgradeReplicaSetCheckTimeoutInSeconds: 0
        MonitoringPolicy:
          UpgradeDomainTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          FailureAction: Invalid
          UpgradeTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          HealthCheckStableDurationInMilliseconds: PT0H2M0S
          HealthCheckRetryTimeoutInMilliseconds: PT0H10M0S
          HealthCheckWaitDurationInMilliseconds: "0"
        TargetApplicationTypeVersion: TargetApplicationTypeVersion
        Name: Name
      properties:
        ApplicationHealthPolicy:
          $ref: '#/components/schemas/ApplicationHealthPolicy'
        ForceRestart:
          default: false
          description: "If true, then processes are forcefully restarted during upgrade\
            \ even when the code version has not changed (the upgrade only changes\
            \ configuration or data)."
          title: ForceRestart
          type: boolean
        MonitoringPolicy:
          $ref: '#/components/schemas/MonitoringPolicyDescription'
        Name:
          description: "The name of the target application, including the 'fabric:'\
            \ URI scheme."
          title: Name
          type: string
        Parameters:
          description: List of application parameters with overridden values from
            their default values specified in the application manifest.
          items:
            $ref: '#/components/schemas/ApplicationParameter'
          title: Parameters
          type: array
        RollingUpgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
        TargetApplicationTypeVersion:
          description: The target application type version (found in the application
            manifest) for the application upgrade.
          title: TargetApplicationTypeVersion
          type: string
        UpgradeKind:
          $ref: '#/components/schemas/UpgradeKind'
        UpgradeReplicaSetCheckTimeoutInSeconds:
          description: "The maximum amount of time to block processing of an upgrade\
            \ domain and prevent loss of availability when there are unexpected issues.\
            \ When this timeout expires, processing of the upgrade domain will proceed\
            \ regardless of availability loss issues. The timeout is reset at the\
            \ start of each upgrade domain. Valid values are between 0 and 42949672925\
            \ inclusive. (unsigned 32-bit integer)."
          format: int64
          title: UpgradeReplicaSetCheckTimeoutInSeconds
          type: integer
      required:
      - Name
      - Parameters
      - TargetApplicationTypeVersion
      - UpgradeKind
      title: ApplicationUpgradeDescription
      type: object
    ApplicationUpgradeProgressInfo:
      description: Describes the parameters for an application upgrade.
      example:
        TypeName: TypeName
        UpgradeDomainDurationInMilliseconds: UpgradeDomainDurationInMilliseconds
        UpgradeDomainProgressAtFailure:
          DomainName: DomainName
          NodeUpgradeProgressList:
          - NodeName: NodeName
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            UpgradePhase: Invalid
          - NodeName: NodeName
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            UpgradePhase: Invalid
        NextUpgradeDomain: NextUpgradeDomain
        UpgradeState: Invalid
        TargetApplicationTypeVersion: TargetApplicationTypeVersion
        Name: Name
        StartTimestampUtc: StartTimestampUtc
        UnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        RollingUpgradeMode: UnmonitoredAuto
        UpgradeDescription:
          Parameters:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          UpgradeKind: Rolling
          ApplicationHealthPolicy:
            DefaultServiceTypeHealthPolicy:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            ConsiderWarningAsError: false
            MaxPercentUnhealthyDeployedApplications: 5
            ServiceTypeHealthPolicyMap:
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
          RollingUpgradeMode: null
          ForceRestart: false
          UpgradeReplicaSetCheckTimeoutInSeconds: 0
          MonitoringPolicy:
            UpgradeDomainTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
            FailureAction: Invalid
            UpgradeTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
            HealthCheckStableDurationInMilliseconds: PT0H2M0S
            HealthCheckRetryTimeoutInMilliseconds: PT0H10M0S
            HealthCheckWaitDurationInMilliseconds: "0"
          TargetApplicationTypeVersion: TargetApplicationTypeVersion
          Name: Name
        UpgradeStatusDetails: UpgradeStatusDetails
        FailureReason: None
        FailureTimestampUtc: FailureTimestampUtc
        UpgradeDurationInMilliseconds: UpgradeDurationInMilliseconds
        CurrentUpgradeDomainProgress:
          DomainName: DomainName
          NodeUpgradeProgressList:
          - NodeName: NodeName
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            UpgradePhase: Invalid
          - NodeName: NodeName
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            UpgradePhase: Invalid
        UpgradeDomains:
        - State: Invalid
          Name: Name
        - State: Invalid
          Name: Name
      properties:
        CurrentUpgradeDomainProgress:
          $ref: '#/components/schemas/CurrentUpgradeDomainProgressInfo'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
        FailureTimestampUtc:
          description: The estimated UTC datetime when the upgrade failed and FailureAction
            was executed.
          title: FailureTimestampUtc
          type: string
        Name:
          description: "The name of the target application, including the 'fabric:'\
            \ URI scheme."
          title: Name
          type: string
        NextUpgradeDomain:
          description: The name of the next upgrade domain to be processed.
          title: NextUpgradeDomain
          type: string
        RollingUpgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
        StartTimestampUtc:
          description: The estimated UTC datetime when the upgrade started.
          title: StartTimestampUtc
          type: string
        TargetApplicationTypeVersion:
          description: The target application type version (found in the application
            manifest) for the application upgrade.
          title: TargetApplicationTypeVersion
          type: string
        TypeName:
          description: The application type name as defined in the application manifest.
          title: TypeName
          type: string
        UnhealthyEvaluations:
          description: List of health evaluations that resulted in the current aggregated
            health state.
          items:
            $ref: '#/components/schemas/HealthEvaluationWrapper'
          title: UnhealthyEvaluations
          type: array
        UpgradeDescription:
          $ref: '#/components/schemas/ApplicationUpgradeDescription'
        UpgradeDomainDurationInMilliseconds:
          description: The estimated total amount of time spent processing the current
            upgrade domain.
          title: UpgradeDomainDurationInMilliseconds
          type: string
        UpgradeDomainProgressAtFailure:
          $ref: '#/components/schemas/FailureUpgradeDomainProgressInfo'
        UpgradeDomains:
          description: List of upgrade domains and their statuses.
          items:
            $ref: '#/components/schemas/UpgradeDomainInfo'
          title: UpgradeDomains
          type: array
        UpgradeDurationInMilliseconds:
          description: The estimated total amount of time spent processing the overall
            upgrade.
          title: UpgradeDurationInMilliseconds
          type: string
        UpgradeState:
          $ref: '#/components/schemas/UpgradeState'
        UpgradeStatusDetails:
          description: Additional detailed information about the status of the pending
            upgrade.
          title: UpgradeStatusDetails
          type: string
      title: ApplicationUpgradeProgressInfo
      type: object
    ApplicationUpgradeUpdateDescription:
      description: Describes the parameters for updating an ongoing application upgrade.
      example:
        UpgradeKind: Rolling
        ApplicationHealthPolicy:
          DefaultServiceTypeHealthPolicy:
            MaxPercentUnhealthyReplicasPerPartition: 6
            MaxPercentUnhealthyServices: 1
            MaxPercentUnhealthyPartitionsPerService: 0
          ConsiderWarningAsError: false
          MaxPercentUnhealthyDeployedApplications: 5
          ServiceTypeHealthPolicyMap:
          - Value:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            Key: Key
          - Value:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            Key: Key
        UpdateDescription:
          UpgradeDomainTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          FailureAction: Invalid
          ReplicaSetCheckTimeoutInMilliseconds: 0
          UpgradeTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          RollingUpgradeMode: UnmonitoredAuto
          ForceRestart: false
          HealthCheckStableDurationInMilliseconds: PT0H2M0S
          HealthCheckRetryTimeoutInMilliseconds: PT0H10M0S
          HealthCheckWaitDurationInMilliseconds: "0"
        Name: Name
      properties:
        ApplicationHealthPolicy:
          $ref: '#/components/schemas/ApplicationHealthPolicy'
        Name:
          description: "The name of the application, including the 'fabric:' URI scheme."
          title: ApplicationName
          type: string
        UpdateDescription:
          $ref: '#/components/schemas/RollingUpgradeUpdateDescription'
        UpgradeKind:
          $ref: '#/components/schemas/UpgradeKind'
      required:
      - Name
      - UpgradeKind
      title: ApplicationUpgradeUpdateDescription
      type: object
    ApplicationsHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: ApplicationsHealthEvaluation
        properties:
          MaxPercentUnhealthyApplications:
            description: Maximum allowed percentage of unhealthy applications from
              the ClusterHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of applications from the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for applications, containing health\
        \ evaluations for each unhealthy application that impacted current aggregated\
        \ health state."
      x-ms-discriminator-value: Applications
    BinaryPropertyValue:
      allOf:
      - $ref: '#/components/schemas/PropertyValue'
      - description: BinaryPropertyValue
        type: object
      description: Describes a Service Fabric property value of type Binary.
      properties:
        Data:
          description: Array of bytes to be sent as an integer array. Each element
            of array is a number between 0 and 255.
          items:
            type: integer
          title: InitializationData
          type: array
      required:
      - Data
      x-ms-discriminator-value: Binary
    ByteArray:
      description: Array of bytes to be sent as an integer array. Each element of
        array is a number between 0 and 255.
      items:
        type: integer
      title: InitializationData
      type: array
    ChaosContext:
      description: |
        Describes a map, which is a collection of (string, string) type key-value pairs. The map can be used to record information about
        the Chaos run. There cannot be more than 100 such pairs and each string (key or value) can be at most 4095 characters long.
        This map is set by the starter of the Chaos run to optionally store the context about the specific run.
      example:
        Map: "{}"
      properties:
        Map:
          description: |
            Describes a map that contains a collection of ChaosContextMapItem's.
          title: Map
          type: object
      title: ChaosContext
      type: object
    ChaosContextMap:
      description: |
        Describes a map that contains a collection of ChaosContextMapItem's.
      title: Map
      type: object
    ChaosContextMapItem:
      description: |
        Describes an item in the ChaosContextMap in ChaosParameters.
      properties:
        Key:
          description: The key for a ChaosContextMapItem.
          type: string
        Value:
          description: The value for a ChaosContextMapItem.
          type: string
      required:
      - Key
      - Value
      type: object
    ChaosEvent:
      description: Represents an event generated during a Chaos run.
      discriminator:
        propertyName: Kind
      example:
        TimeStampUtc: 2000-01-23T04:56:07.000+00:00
        Kind: Invalid
      properties:
        Kind:
          $ref: '#/components/schemas/ChaosEventKind'
        TimeStampUtc:
          format: date-time
          title: TimeStampUtc
          type: string
      required:
      - Kind
      - TimeStampUtc
      title: ChaosEvent
      type: object
    ChaosEventHistory:
      items:
        $ref: '#/components/schemas/ChaosEventWrapper'
      title: History
      type: array
    ChaosEventKind:
      description: |
        The kind of Chaos event.

        - Invalid - Indicates an invalid Chaos event kind. All Service Fabric enumerations have the invalid type.
        The valus is zero.
        - Started - Indicates a Chaos event that gets generated when Chaos is started.
        - ExecutingFaults - Indicates a Chaos event that gets generated when Chaos has decided on the faults for an iteration. This Chaos event contains the details of the faults as a list of strings.
        - Waiting - Indicatges a Chaos event that gets generated when Chaos is waiting for the cluster to become ready for faulting, for example, Chaos may be waiting for the on-going upgrade to finish.
        - ValidationFailed - Indicates a Chaos event that gets generated when the cluster entities do not become stable and healthy within ChaosParameters.MaxClusterStabilizationTimeoutInSeconds.
        - TestError - Indicates a Chaos event that gets generated when an unexpected event has occurred in the Chaos engine, for example, due to the cluster snapshot being inconsistent, while faulting a faultable entity Chaos found that the entity was alreay faulted.
        - Stopped - Indicates a Chaos event that gets generated when Chaos stops because either the user issued a stop or the time to run was up.
      enum:
      - Invalid
      - Started
      - ExecutingFaults
      - Waiting
      - ValidationFailed
      - TestError
      - Stopped
      title: ChaosEventKind
      type: string
    ChaosEventWrapper:
      description: Wrapper object for Chaos event.
      example:
        ChaosEvent:
          TimeStampUtc: 2000-01-23T04:56:07.000+00:00
          Kind: Invalid
      properties:
        ChaosEvent:
          $ref: '#/components/schemas/ChaosEvent'
      title: ChaosEventWrapper
      type: object
    ChaosParameters:
      description: |
        Defines all the parameters to configure a Chaos run.
      example:
        ClusterHealthPolicy:
          ApplicationTypeHealthPolicyMap:
          - Value: 5
            Key: Key
          - Value: 5
            Key: Key
          ConsiderWarningAsError: false
          MaxPercentUnhealthyNodes: 7
          MaxPercentUnhealthyApplications: 2
        Context:
          Map: "{}"
        MaxConcurrentFaults: 2588772717
        WaitTimeBetweenFaultsInSeconds: 629561881
        TimeToRunInSeconds: "4294967295"
        EnableMoveReplicaFaults: true
        WaitTimeBetweenIterationsInSeconds: 2560717018
        MaxClusterStabilizationTimeoutInSeconds: 343953088
      properties:
        ClusterHealthPolicy:
          $ref: '#/components/schemas/ClusterHealthPolicy'
        Context:
          $ref: '#/components/schemas/ChaosContext'
        EnableMoveReplicaFaults:
          default: true
          description: |
            Enables or disables the move primary and move secondary faults.
          title: EnableMoveReplicaFaults
          type: boolean
        MaxClusterStabilizationTimeoutInSeconds:
          default: 60
          description: |
            The maximum amount of time to wait for all cluster entities to become stable and healthy. Chaos executes in iterations and at the start of each iteration it validates the health of cluster entities.
            During validation if a cluster entity is not stable and healthy within MaxClusterStabilizationTimeoutInSeconds, Chaos generates a validation failed event.
          format: int64
          maximum: 4294967295
          minimum: 0
          title: MaxClusterStabilizationTimeoutInSeconds
          type: integer
        MaxConcurrentFaults:
          default: 1
          description: |
            MaxConcurrentFaults is the maximum number of concurrent faults induced per iteration.
            Chaos executes in iterations and two consecutive iterations are separated by a validation phase.
            The higher the concurrency, the more aggressive the injection of faults -- inducing more complex series of states to uncover bugs.
            The recommendation is to start with a value of 2 or 3 and to exercise caution while moving up.
          format: int64
          maximum: 4294967295
          minimum: 0
          title: MaxConcurrentFaults
          type: integer
        TimeToRunInSeconds:
          default: "4294967295"
          description: |
            Total time (in seconds) for which Chaos will run before automatically stopping. The maximum allowed value is 4,294,967,295 (System.UInt32.MaxValue).
          title: TimeToRunInSeconds
          type: string
        WaitTimeBetweenFaultsInSeconds:
          default: 20
          description: |
            Wait time (in seconds) between consecutive faults within a single iteration.
            The larger the value, the lower the overlapping between faults and the simpler the sequence of state transitions that the cluster goes through.
            The recommendation is to start with a value between 1 and 5 and exercise caution while moving up.
          format: int64
          maximum: 4294967295
          minimum: 0
          title: WaitTimeBetweenFaultsInSeconds
          type: integer
        WaitTimeBetweenIterationsInSeconds:
          default: 30
          description: |
            Time-separation (in seconds) between two consecutive iterations of Chaos.
            The larger the value, the lower the fault injection rate.
          format: int64
          maximum: 4294967295
          minimum: 0
          title: WaitTimeBetweenIterationsInSeconds
          type: integer
      title: ChaosParameters
      type: object
    ChaosReport:
      description: |
        Contains detailed Chaos report.
      example:
        Status: Invalid
        ChaosParameters:
          ClusterHealthPolicy:
            ApplicationTypeHealthPolicyMap:
            - Value: 5
              Key: Key
            - Value: 5
              Key: Key
            ConsiderWarningAsError: false
            MaxPercentUnhealthyNodes: 7
            MaxPercentUnhealthyApplications: 2
          Context:
            Map: "{}"
          MaxConcurrentFaults: 2588772717
          WaitTimeBetweenFaultsInSeconds: 629561881
          TimeToRunInSeconds: "4294967295"
          EnableMoveReplicaFaults: true
          WaitTimeBetweenIterationsInSeconds: 2560717018
          MaxClusterStabilizationTimeoutInSeconds: 343953088
        ContinuationToken: ContinuationToken
        History:
        - ChaosEvent:
            TimeStampUtc: 2000-01-23T04:56:07.000+00:00
            Kind: Invalid
        - ChaosEvent:
            TimeStampUtc: 2000-01-23T04:56:07.000+00:00
            Kind: Invalid
      properties:
        ChaosParameters:
          $ref: '#/components/schemas/ChaosParameters'
        ContinuationToken:
          description: "The continuation token parameter is used to obtain next set\
            \ of results. The continuation token is included in the response of the\
            \ API when the results from the system do not fit in a single response.\
            \ When this value is passed to the next API call, the API returns next\
            \ set of results. If there are no further results then the continuation\
            \ token is not included in the response."
          title: ContinuationToken
          type: string
        History:
          items:
            $ref: '#/components/schemas/ChaosEventWrapper'
          title: History
          type: array
        Status:
          description: |-
            Current status of the Chaos run.

            - Invalid - Indicates an invalid Chaos status. All Service Fabric enumerations have the invalid type.
              The valus is zero.
            - Running - Indicates that Chaos is not stopped.
            - Stopped - Indicates that Chaos is not scheduling futher faults.
          enum:
          - Invalid
          - Running
          - Stopped
          title: Status
          type: string
      title: ChaosReport
      type: object
    CheckExistsPropertyBatchOperation:
      allOf:
      - $ref: '#/components/schemas/PropertyBatchOperation'
      - description: CheckExistsPropertyBatchOperation
        type: object
      description: |
        Represents a PropertyBatchOperation that compares the Boolean existence of a property with the Exists argument.  The PropertyBatchOperation operation fails if the property's existence is not equal to the Exists argument.  The CheckExistsPropertyBatchOperation is generally used as a precondition for the write operations in the batch.  Note that if one PropertyBatchOperation in a PropertyBatch fails,  the entire batch fails and cannot be committed in a transactional manner.
      properties:
        Exists:
          description: Whether or not the property should exist for the operation
            to pass.
          type: boolean
      required:
      - Exists
      x-ms-discriminator-value: CheckExists
    CheckSequencePropertyBatchOperation:
      allOf:
      - $ref: '#/components/schemas/PropertyBatchOperation'
      - description: CheckSequencePropertyBatchOperation
        type: object
      description: |
        Compares the Sequence Number of a property with the SequenceNumber argument.  A property's sequence number can be thought of as that property's version.  Every time the property is modified, its sequence number is increased.  The sequence number can be found in a property's metadata.  The comparison fails if the sequence numbers are not equal.  CheckSequencePropertyBatchOperation is generally used as a precondition for the write operations in the batch.  Note that if one PropertyBatchOperation in a PropertyBatch fails,  the entire batch fails and cannot be committed in a transactional manner.
      properties:
        SequenceNumber:
          description: The expected sequence number.
          format: int64
          type: string
      required:
      - SequenceNumber
      x-ms-discriminator-value: CheckSequence
    CheckValuePropertyBatchOperation:
      allOf:
      - $ref: '#/components/schemas/PropertyBatchOperation'
      - description: CheckValuePropertyBatchOperation
        type: object
      description: |
        Represents a PropertyBatchOperation that compares the value of the property with the expected value.  The CheckValuePropertyBatchOperation is generally used as a precondition for the write operations in the batch.  Note that if one PropertyBatchOperation in a PropertyBatch fails,  the entire batch fails and cannot be committed in a transactional manner.
      properties:
        Value:
          $ref: '#/components/schemas/PropertyValue'
      required:
      - Value
      x-ms-discriminator-value: CheckValue
    ClusterConfiguration:
      description: Information about the standalone cluster configuration.
      example:
        ClusterConfiguration: ClusterConfiguration
      properties:
        ClusterConfiguration:
          description: The contents of the cluster configuration file.
          title: ClusterConfiguration
          type: string
      title: ClusterConfiguration
      type: object
    ClusterConfigurationUpgradeDescription:
      description: Describes the parameters for a standalone cluster configuration
        upgrade.
      example:
        HealthCheckStableDurationInSeconds: PT0H0M0S
        HealthCheckRetryTimeout: PT0H0M0S
        HealthCheckWaitDurationInSeconds: PT0H0M0S
        MaxPercentDeltaUnhealthyNodes: 0
        UpgradeTimeoutInSeconds: PT0H0M0S
        MaxPercentUnhealthyNodes: 1
        ClusterConfig: ClusterConfig
        MaxPercentUnhealthyApplications: 6
        MaxPercentUpgradeDomainDeltaUnhealthyNodes: 5
        UpgradeDomainTimeoutInSeconds: PT0H0M0S
      properties:
        ClusterConfig:
          description: The cluster configuration.
          title: ClusterConfig
          type: string
        HealthCheckRetryTimeout:
          default: PT0H0M0S
          description: The length of time between attempts to perform a health checks
            if the application or cluster is not healthy.
          format: duration
          title: HealthCheckRetryTimeout
          type: string
        HealthCheckStableDurationInSeconds:
          default: PT0H0M0S
          description: The length of time that the application or cluster must remain
            healthy.
          format: duration
          title: HealthCheckStableDurationInSeconds
          type: string
        HealthCheckWaitDurationInSeconds:
          default: PT0H0M0S
          description: The length of time to wait after completing an upgrade domain
            before starting the health checks process.
          format: duration
          title: HealthCheckWaitDurationInSeconds
          type: string
        MaxPercentDeltaUnhealthyNodes:
          description: The maximum allowed percentage of delta health degradation
            during the upgrade. Allowed values are integer values from zero to 100.
          title: MaxPercentDeltaUnhealthyNodes
          type: integer
        MaxPercentUnhealthyApplications:
          description: The maximum allowed percentage of unhealthy applications during
            the upgrade. Allowed values are integer values from zero to 100.
          title: MaxPercentUnhealthyApplications
          type: integer
        MaxPercentUnhealthyNodes:
          description: The maximum allowed percentage of unhealthy nodes during the
            upgrade. Allowed values are integer values from zero to 100.
          title: MaxPercentUnhealthyNodes
          type: integer
        MaxPercentUpgradeDomainDeltaUnhealthyNodes:
          description: The maximum allowed percentage of upgrade domain delta health
            degradation during the upgrade. Allowed values are integer values from
            zero to 100.
          title: MaxPercentUpgradeDomainDeltaUnhealthyNodes
          type: integer
        UpgradeDomainTimeoutInSeconds:
          default: PT0H0M0S
          description: The timeout for the upgrade domain.
          format: duration
          title: UpgradeDomainTimeoutInSeconds
          type: string
        UpgradeTimeoutInSeconds:
          default: PT0H0M0S
          description: The upgrade timeout.
          format: duration
          title: UpgradeTimeoutInSeconds
          type: string
      required:
      - ClusterConfig
      title: ClusterConfigurationUpgradeDescription
      type: object
    ClusterConfigurationUpgradeStatusInfo:
      description: Information about a standalone cluster configuration upgrade status.
      example:
        ProgressStatus: 0
        Details: Details
        ConfigVersion: ConfigVersion
        UpgradeState: Invalid
      properties:
        ConfigVersion:
          description: The cluster configuration version.
          title: ConfigVersion
          type: string
        Details:
          description: The cluster upgrade status details.
          title: Details
          type: string
        ProgressStatus:
          description: The cluster manifest version.
          title: ProgressStatus
          type: integer
        UpgradeState:
          $ref: '#/components/schemas/UpgradeState'
      title: ClusterConfigurationUpgradeStatusInfo
      type: object
    ClusterFabricCodeVersionString:
      description: The ServiceFabric code version of the cluster.
      title: CodeVersion
      type: string
    ClusterFabricConfigVersionString:
      description: The cluster configuration version (specified in the cluster manifest).
      title: ConfigVersion
      type: string
    ClusterHealth:
      allOf:
      - $ref: '#/components/schemas/EntityHealth'
      - description: ClusterHealth
        properties:
          ApplicationHealthStates:
            description: Cluster application health states as found in the health
              store.
            items:
              $ref: '#/components/schemas/ApplicationHealthState'
            type: array
          NodeHealthStates:
            description: Cluster node health states as found in the health store.
            items:
              $ref: '#/components/schemas/NodeHealthState'
            type: array
        type: object
      description: |
        Represents the health of the cluster.
        Contains the cluster aggregated health state, the cluster application and node health states as well as the health events and the unhealthy evaluations.
      example:
        AggregatedHealthState: Invalid
        HealthStatistics:
          HealthStateCountList:
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
        UnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        ApplicationHealthStates:
        - AggregatedHealthState: null
          Name: null
        - AggregatedHealthState: null
          Name: null
        HealthEvents:
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        NodeHealthStates:
        - AggregatedHealthState: null
          Id:
            Id: Id
          Name: null
        - AggregatedHealthState: null
          Id:
            Id: Id
          Name: null
      title: ClusterHealth
    ClusterHealthChunk:
      description: |
        Represents the health chunk of the cluster.
        Contains the cluster aggregated health state, and the cluster entities that respect the input filter.
      example:
        ApplicationHealthStateChunks:
          TotalCount: 0
          Items:
          - ApplicationName: null
            ServiceHealthStateChunks:
              Items:
              - ServiceName: null
                PartitionHealthStateChunks:
                  Items:
                  - ReplicaHealthStateChunks:
                      Items:
                      - HealthState: null
                        ReplicaOrInstanceId: null
                      - HealthState: null
                        ReplicaOrInstanceId: null
                    PartitionId: null
                    HealthState: null
                  - ReplicaHealthStateChunks:
                      Items:
                      - HealthState: null
                        ReplicaOrInstanceId: null
                      - HealthState: null
                        ReplicaOrInstanceId: null
                    PartitionId: null
                    HealthState: null
                HealthState: null
              - ServiceName: null
                PartitionHealthStateChunks:
                  Items:
                  - ReplicaHealthStateChunks:
                      Items:
                      - HealthState: null
                        ReplicaOrInstanceId: null
                      - HealthState: null
                        ReplicaOrInstanceId: null
                    PartitionId: null
                    HealthState: null
                  - ReplicaHealthStateChunks:
                      Items:
                      - HealthState: null
                        ReplicaOrInstanceId: null
                      - HealthState: null
                        ReplicaOrInstanceId: null
                    PartitionId: null
                    HealthState: null
                HealthState: null
            ApplicationTypeName: null
            DeployedApplicationHealthStateChunks:
              Items:
              - DeployedServicePackageHealthStateChunks:
                  Items:
                  - ServiceManifestName: null
                    ServicePackageActivationId: null
                    HealthState: null
                  - ServiceManifestName: null
                    ServicePackageActivationId: null
                    HealthState: null
                NodeName: NodeName
                HealthState: null
              - DeployedServicePackageHealthStateChunks:
                  Items:
                  - ServiceManifestName: null
                    ServicePackageActivationId: null
                    HealthState: null
                  - ServiceManifestName: null
                    ServicePackageActivationId: null
                    HealthState: null
                NodeName: NodeName
                HealthState: null
            HealthState: Invalid
          - ApplicationName: null
            ServiceHealthStateChunks:
              Items:
              - ServiceName: null
                PartitionHealthStateChunks:
                  Items:
                  - ReplicaHealthStateChunks:
                      Items:
                      - HealthState: null
                        ReplicaOrInstanceId: null
                      - HealthState: null
                        ReplicaOrInstanceId: null
                    PartitionId: null
                    HealthState: null
                  - ReplicaHealthStateChunks:
                      Items:
                      - HealthState: null
                        ReplicaOrInstanceId: null
                      - HealthState: null
                        ReplicaOrInstanceId: null
                    PartitionId: null
                    HealthState: null
                HealthState: null
              - ServiceName: null
                PartitionHealthStateChunks:
                  Items:
                  - ReplicaHealthStateChunks:
                      Items:
                      - HealthState: null
                        ReplicaOrInstanceId: null
                      - HealthState: null
                        ReplicaOrInstanceId: null
                    PartitionId: null
                    HealthState: null
                  - ReplicaHealthStateChunks:
                      Items:
                      - HealthState: null
                        ReplicaOrInstanceId: null
                      - HealthState: null
                        ReplicaOrInstanceId: null
                    PartitionId: null
                    HealthState: null
                HealthState: null
            ApplicationTypeName: null
            DeployedApplicationHealthStateChunks:
              Items:
              - DeployedServicePackageHealthStateChunks:
                  Items:
                  - ServiceManifestName: null
                    ServicePackageActivationId: null
                    HealthState: null
                  - ServiceManifestName: null
                    ServicePackageActivationId: null
                    HealthState: null
                NodeName: NodeName
                HealthState: null
              - DeployedServicePackageHealthStateChunks:
                  Items:
                  - ServiceManifestName: null
                    ServicePackageActivationId: null
                    HealthState: null
                  - ServiceManifestName: null
                    ServicePackageActivationId: null
                    HealthState: null
                NodeName: NodeName
                HealthState: null
            HealthState: Invalid
        NodeHealthStateChunks:
          TotalCount: 6
          Items:
          - NodeName: null
            HealthState: null
          - NodeName: null
            HealthState: null
        HealthState: null
      properties:
        ApplicationHealthStateChunks:
          $ref: '#/components/schemas/ApplicationHealthStateChunkList'
        HealthState:
          $ref: '#/components/schemas/HealthState'
        NodeHealthStateChunks:
          $ref: '#/components/schemas/NodeHealthStateChunkList'
      title: ClusterHealthChunk
      type: object
    ClusterHealthChunkQueryDescription:
      description: "The cluster health chunk query description, which can specify\
        \ the health policies to evaluate cluster health and very expressive filters\
        \ to select which cluster entities to include in response."
      example:
        ClusterHealthPolicy:
          ApplicationTypeHealthPolicyMap:
          - Value: 5
            Key: Key
          - Value: 5
            Key: Key
          ConsiderWarningAsError: false
          MaxPercentUnhealthyNodes: 7
          MaxPercentUnhealthyApplications: 2
        NodeFilters:
        - NodeNameFilter: NodeNameFilter
          HealthStateFilter: 7
        - NodeNameFilter: NodeNameFilter
          HealthStateFilter: 7
        ApplicationFilters:
        - ServiceFilters:
          - ServiceNameFilter: ServiceNameFilter
            HealthStateFilter: 5
            PartitionFilters:
            - ReplicaFilters:
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              HealthStateFilter: 5
              PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - ReplicaFilters:
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              HealthStateFilter: 5
              PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - ServiceNameFilter: ServiceNameFilter
            HealthStateFilter: 5
            PartitionFilters:
            - ReplicaFilters:
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              HealthStateFilter: 5
              PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - ReplicaFilters:
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              HealthStateFilter: 5
              PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          HealthStateFilter: 1
          ApplicationTypeNameFilter: ApplicationTypeNameFilter
          DeployedApplicationFilters:
          - NodeNameFilter: NodeNameFilter
            HealthStateFilter: 6
            DeployedServicePackageFilters:
            - ServiceManifestNameFilter: ServiceManifestNameFilter
              HealthStateFilter: 0
              ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
            - ServiceManifestNameFilter: ServiceManifestNameFilter
              HealthStateFilter: 0
              ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
          - NodeNameFilter: NodeNameFilter
            HealthStateFilter: 6
            DeployedServicePackageFilters:
            - ServiceManifestNameFilter: ServiceManifestNameFilter
              HealthStateFilter: 0
              ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
            - ServiceManifestNameFilter: ServiceManifestNameFilter
              HealthStateFilter: 0
              ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
          ApplicationNameFilter: ApplicationNameFilter
        - ServiceFilters:
          - ServiceNameFilter: ServiceNameFilter
            HealthStateFilter: 5
            PartitionFilters:
            - ReplicaFilters:
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              HealthStateFilter: 5
              PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - ReplicaFilters:
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              HealthStateFilter: 5
              PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - ServiceNameFilter: ServiceNameFilter
            HealthStateFilter: 5
            PartitionFilters:
            - ReplicaFilters:
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              HealthStateFilter: 5
              PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - ReplicaFilters:
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              - HealthStateFilter: 2
                ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
              HealthStateFilter: 5
              PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          HealthStateFilter: 1
          ApplicationTypeNameFilter: ApplicationTypeNameFilter
          DeployedApplicationFilters:
          - NodeNameFilter: NodeNameFilter
            HealthStateFilter: 6
            DeployedServicePackageFilters:
            - ServiceManifestNameFilter: ServiceManifestNameFilter
              HealthStateFilter: 0
              ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
            - ServiceManifestNameFilter: ServiceManifestNameFilter
              HealthStateFilter: 0
              ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
          - NodeNameFilter: NodeNameFilter
            HealthStateFilter: 6
            DeployedServicePackageFilters:
            - ServiceManifestNameFilter: ServiceManifestNameFilter
              HealthStateFilter: 0
              ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
            - ServiceManifestNameFilter: ServiceManifestNameFilter
              HealthStateFilter: 0
              ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
          ApplicationNameFilter: ApplicationNameFilter
        ApplicationHealthPolicies:
          ApplicationHealthPolicyMap:
          - Value:
              DefaultServiceTypeHealthPolicy:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              ConsiderWarningAsError: false
              MaxPercentUnhealthyDeployedApplications: 5
              ServiceTypeHealthPolicyMap:
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
            Key: Key
          - Value:
              DefaultServiceTypeHealthPolicy:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              ConsiderWarningAsError: false
              MaxPercentUnhealthyDeployedApplications: 5
              ServiceTypeHealthPolicyMap:
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
            Key: Key
      properties:
        ApplicationFilters:
          description: |
            Defines a list of filters that specify which applications to be included in the returned cluster health chunk.
            If no filters are specified, no applications are returned. All the applications are used to evaluate the cluster's aggregated health state, regardless of the input filters.
            The cluster health chunk query may specify multiple application filters.
            For example, it can specify a filter to return all applications with health state Error and another filter to always include applications of a specified application type.
          items:
            $ref: '#/components/schemas/ApplicationHealthStateFilter'
          title: ApplicationFilters
          type: array
        ApplicationHealthPolicies:
          $ref: '#/components/schemas/ApplicationHealthPolicies'
        ClusterHealthPolicy:
          $ref: '#/components/schemas/ClusterHealthPolicy'
        NodeFilters:
          description: |
            Defines a list of filters that specify which nodes to be included in the returned cluster health chunk.
            If no filters are specified, no nodes are returned. All the nodes are used to evaluate the cluster's aggregated health state, regardless of the input filters.
            The cluster health chunk query may specify multiple node filters.
            For example, it can specify a filter to return all nodes with health state Error and another filter to always include a node identified by its NodeName.
          items:
            $ref: '#/components/schemas/NodeHealthStateFilter'
          title: NodeFilters
          type: array
      title: ClusterHealthChunkQueryDescription
      type: object
    ClusterHealthPolicies:
      description: Health policies to evaluate cluster health.
      example:
        ClusterHealthPolicy:
          ApplicationTypeHealthPolicyMap:
          - Value: 5
            Key: Key
          - Value: 5
            Key: Key
          ConsiderWarningAsError: false
          MaxPercentUnhealthyNodes: 7
          MaxPercentUnhealthyApplications: 2
        ApplicationHealthPolicyMap:
        - Value:
            DefaultServiceTypeHealthPolicy:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            ConsiderWarningAsError: false
            MaxPercentUnhealthyDeployedApplications: 5
            ServiceTypeHealthPolicyMap:
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
          Key: Key
        - Value:
            DefaultServiceTypeHealthPolicy:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            ConsiderWarningAsError: false
            MaxPercentUnhealthyDeployedApplications: 5
            ServiceTypeHealthPolicyMap:
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
          Key: Key
      properties:
        ApplicationHealthPolicyMap:
          description: |
            Defines a map that contains specific application health policies for different applications.
            Each entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.
            If an application is not specified in the map, the application health evaluation uses the ApplicationHealthPolicy found in its application manifest or the default application health policy (if no health policy is defined in the manifest).
            The map is empty by default.
          items:
            $ref: '#/components/schemas/ApplicationHealthPolicyMapItem'
          title: ApplicationHealthPolicyMap
          type: array
        ClusterHealthPolicy:
          $ref: '#/components/schemas/ClusterHealthPolicy'
      title: ClusterHealthPolicies
      type: object
    ClusterHealthPolicy:
      description: |
        Defines a health policy used to evaluate the health of the cluster or of a cluster node.
      example:
        ApplicationTypeHealthPolicyMap:
        - Value: 5
          Key: Key
        - Value: 5
          Key: Key
        ConsiderWarningAsError: false
        MaxPercentUnhealthyNodes: 7
        MaxPercentUnhealthyApplications: 2
      properties:
        ApplicationTypeHealthPolicyMap:
          description: |
            Defines a map with max percentage unhealthy applications for specific application types.
            Each entry specifies as key the application type name and as value an integer that represents the MaxPercentUnhealthyApplications percentage used to evaluate the applications of the specified application type.

            The application type health policy map can be used during cluster health evaluation to describe special application types.
            The application types included in the map are evaluated against the percentage specified in the map, and not with the global MaxPercentUnhealthyApplications defined in the cluster health policy.
            The applications of application types specified in the map are not counted against the global pool of applications.
            For example, if some applications of a type are critical, the cluster administrator can add an entry to the map for that application type
            and assign it a value of 0% (that is, do not tolerate any failures).
            All other applications can be evaluated with MaxPercentUnhealthyApplications set to 20% to tolerate some failures out of the thousands of application instances.
            The application type health policy map is used only if the cluster manifest enables application type health evaluation using the configuration entry for HealthManager/EnableApplicationTypeHealthEvaluation.
          items:
            $ref: '#/components/schemas/ApplicationTypeHealthPolicyMapItem'
          title: ApplicationTypeHealthPolicyMap
          type: array
        ConsiderWarningAsError:
          default: false
          description: Indicates whether warnings are treated with the same severity
            as errors.
          title: ConsiderWarningAsError
          type: boolean
        MaxPercentUnhealthyApplications:
          description: |
            The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.

            The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.
            If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.
            This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.
            The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.
          title: MaxPercentUnhealthyApplications
          type: integer
        MaxPercentUnhealthyNodes:
          description: |
            The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.

            The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.
            If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.
            The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.
            The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.

            In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.
          title: MaxPercentUnhealthyNodes
          type: integer
      title: ClusterHealthPolicy
      type: object
    ClusterManifest:
      description: Information about the cluster manifest.
      example:
        Manifest: Manifest
      properties:
        Manifest:
          description: The contents of the cluster manifest file.
          title: Manifest
          type: string
      title: ClusterManifest
      type: object
    ClusterUpgradeDescriptionObject:
      description: Represents a ServiceFabric cluster upgrade
      example:
        ClusterHealthPolicy:
          ApplicationTypeHealthPolicyMap:
          - Value: 5
            Key: Key
          - Value: 5
            Key: Key
          ConsiderWarningAsError: false
          MaxPercentUnhealthyNodes: 7
          MaxPercentUnhealthyApplications: 2
        ApplicationHealthPolicyMap:
        - Value:
            DefaultServiceTypeHealthPolicy:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            ConsiderWarningAsError: false
            MaxPercentUnhealthyDeployedApplications: 5
            ServiceTypeHealthPolicyMap:
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
          Key: Key
        - Value:
            DefaultServiceTypeHealthPolicy:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            ConsiderWarningAsError: false
            MaxPercentUnhealthyDeployedApplications: 5
            ServiceTypeHealthPolicyMap:
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
            - Value:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              Key: Key
          Key: Key
        ClusterUpgradeHealthPolicy:
          MaxPercentDeltaUnhealthyNodes: 8
          MaxPercentUpgradeDomainDeltaUnhealthyNodes: 60
        UpgradeKind: Rolling
        RollingUpgradeMode: null
        ForceRestart: false
        ConfigVersion: ConfigVersion
        CodeVersion: CodeVersion
        UpgradeReplicaSetCheckTimeoutInSeconds: 1
        MonitoringPolicy:
          UpgradeDomainTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          FailureAction: Invalid
          UpgradeTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          HealthCheckStableDurationInMilliseconds: PT0H2M0S
          HealthCheckRetryTimeoutInMilliseconds: PT0H10M0S
          HealthCheckWaitDurationInMilliseconds: "0"
        EnableDeltaHealthEvaluation: true
      properties:
        ApplicationHealthPolicyMap:
          description: |
            Defines a map that contains specific application health policies for different applications.
            Each entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.
            If an application is not specified in the map, the application health evaluation uses the ApplicationHealthPolicy found in its application manifest or the default application health policy (if no health policy is defined in the manifest).
            The map is empty by default.
          items:
            $ref: '#/components/schemas/ApplicationHealthPolicyMapItem'
          title: ApplicationHealthPolicyMap
          type: array
        ClusterHealthPolicy:
          $ref: '#/components/schemas/ClusterHealthPolicy'
        ClusterUpgradeHealthPolicy:
          $ref: '#/components/schemas/ClusterUpgradeHealthPolicyObject'
        CodeVersion:
          description: The ServiceFabric code version of the cluster.
          title: CodeVersion
          type: string
        ConfigVersion:
          description: The cluster configuration version (specified in the cluster
            manifest).
          title: ConfigVersion
          type: string
        EnableDeltaHealthEvaluation:
          description: "When true, enables delta health evaluation rather than absolute\
            \ health evaluation after completion of each upgrade domain."
          title: EnableDeltaHealthEvaluation
          type: boolean
        ForceRestart:
          default: false
          description: "If true, then processes are forcefully restarted during upgrade\
            \ even when the code version has not changed (the upgrade only changes\
            \ configuration or data)."
          title: ForceRestart
          type: boolean
        MonitoringPolicy:
          $ref: '#/components/schemas/MonitoringPolicyDescription'
        RollingUpgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
        UpgradeKind:
          $ref: '#/components/schemas/UpgradeKind'
        UpgradeReplicaSetCheckTimeoutInSeconds:
          description: "The maximum amount of time to block processing of an upgrade\
            \ domain and prevent loss of availability when there are unexpected issues.\
            \ When this timeout expires, processing of the upgrade domain will proceed\
            \ regardless of availability loss issues. The timeout is reset at the\
            \ start of each upgrade domain. Valid values are between 0 and 42949672925\
            \ inclusive. (unsigned 32-bit integer)."
          format: int64
          title: UpgradeReplicaSetCheckTimeoutInSeconds
          type: integer
      title: ClusterUpgradeDescriptionObject
      type: object
    ClusterUpgradeHealthPolicyObject:
      description: Defines a health policy used to evaluate the health of the cluster
        during a cluster upgrade.
      example:
        MaxPercentDeltaUnhealthyNodes: 8
        MaxPercentUpgradeDomainDeltaUnhealthyNodes: 60
      properties:
        MaxPercentDeltaUnhealthyNodes:
          description: The maximum allowed percentage of nodes health degradation
            allowed during cluster upgrades. The delta is measured between the state
            of the nodes at the beginning of upgrade and the state of the nodes at
            the time of the health evaluation. The check is performed after every
            upgrade domain upgrade completion to make sure the global state of the
            cluster is within tolerated limits. The default value is 10%.
          maximum: 100
          minimum: 0
          title: MaxPercentDeltaUnhealthyNodes
          type: integer
        MaxPercentUpgradeDomainDeltaUnhealthyNodes:
          description: The maximum allowed percentage of upgrade domain nodes health
            degradation allowed during cluster upgrades. The delta is measured between
            the state of the upgrade domain nodes at the beginning of upgrade and
            the state of the upgrade domain nodes at the time of the health evaluation.
            The check is performed after every upgrade domain upgrade completion for
            all completed upgrade domains to make sure the state of the upgrade domains
            is within tolerated limits. The default value is 15%.
          maximum: 100
          minimum: 0
          title: MaxPercentUpgradeDomainDeltaUnhealthyNodes
          type: integer
      title: ClusterUpgradeHealthPolicyObject
      type: object
    ClusterUpgradeProgressObject:
      description: Information about a cluster upgrade.
      example:
        UpgradeDomainDurationInMilliseconds: UpgradeDomainDurationInMilliseconds
        UpgradeDomainProgressAtFailure:
          DomainName: DomainName
          NodeUpgradeProgressList:
          - NodeName: NodeName
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            UpgradePhase: Invalid
          - NodeName: NodeName
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            UpgradePhase: Invalid
        ConfigVersion: ConfigVersion
        NextUpgradeDomain: NextUpgradeDomain
        UpgradeState: Invalid
        StartTimestampUtc: StartTimestampUtc
        UnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        RollingUpgradeMode: UnmonitoredAuto
        UpgradeDescription:
          ClusterHealthPolicy:
            ApplicationTypeHealthPolicyMap:
            - Value: 5
              Key: Key
            - Value: 5
              Key: Key
            ConsiderWarningAsError: false
            MaxPercentUnhealthyNodes: 7
            MaxPercentUnhealthyApplications: 2
          ApplicationHealthPolicyMap:
          - Value:
              DefaultServiceTypeHealthPolicy:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              ConsiderWarningAsError: false
              MaxPercentUnhealthyDeployedApplications: 5
              ServiceTypeHealthPolicyMap:
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
            Key: Key
          - Value:
              DefaultServiceTypeHealthPolicy:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              ConsiderWarningAsError: false
              MaxPercentUnhealthyDeployedApplications: 5
              ServiceTypeHealthPolicyMap:
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
            Key: Key
          ClusterUpgradeHealthPolicy:
            MaxPercentDeltaUnhealthyNodes: 8
            MaxPercentUpgradeDomainDeltaUnhealthyNodes: 60
          UpgradeKind: Rolling
          RollingUpgradeMode: null
          ForceRestart: false
          ConfigVersion: ConfigVersion
          CodeVersion: CodeVersion
          UpgradeReplicaSetCheckTimeoutInSeconds: 1
          MonitoringPolicy:
            UpgradeDomainTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
            FailureAction: Invalid
            UpgradeTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
            HealthCheckStableDurationInMilliseconds: PT0H2M0S
            HealthCheckRetryTimeoutInMilliseconds: PT0H10M0S
            HealthCheckWaitDurationInMilliseconds: "0"
          EnableDeltaHealthEvaluation: true
        FailureReason: None
        FailureTimestampUtc: FailureTimestampUtc
        UpgradeDurationInMilliseconds: UpgradeDurationInMilliseconds
        CodeVersion: CodeVersion
        CurrentUpgradeDomainProgress:
          DomainName: DomainName
          NodeUpgradeProgressList:
          - NodeName: NodeName
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            UpgradePhase: Invalid
          - NodeName: NodeName
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            UpgradePhase: Invalid
        UpgradeDomains:
        - State: Invalid
          Name: Name
        - State: Invalid
          Name: Name
      properties:
        CodeVersion:
          description: The ServiceFabric code version of the cluster.
          title: CodeVersion
          type: string
        ConfigVersion:
          description: The cluster configuration version (specified in the cluster
            manifest).
          title: ConfigVersion
          type: string
        CurrentUpgradeDomainProgress:
          $ref: '#/components/schemas/CurrentUpgradeDomainProgressInfo'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
        FailureTimestampUtc:
          description: The failure time of the upgrade in UTC.
          title: FailureTimestampUtc
          type: string
        NextUpgradeDomain:
          description: The name of the next upgrade domain to be processed.
          title: NextUpgradeDomain
          type: string
        RollingUpgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
        StartTimestampUtc:
          description: The start time of the upgrade in UTC.
          title: StartTimestampUtc
          type: string
        UnhealthyEvaluations:
          description: List of health evaluations that resulted in the current aggregated
            health state.
          items:
            $ref: '#/components/schemas/HealthEvaluationWrapper'
          title: UnhealthyEvaluations
          type: array
        UpgradeDescription:
          $ref: '#/components/schemas/ClusterUpgradeDescriptionObject'
        UpgradeDomainDurationInMilliseconds:
          description: The estimated elapsed time spent processing the current upgrade
            domain.
          title: UpgradeDomainDurationInMilliseconds
          type: string
        UpgradeDomainProgressAtFailure:
          $ref: '#/components/schemas/FailedUpgradeDomainProgressObject'
        UpgradeDomains:
          description: List of upgrade domains and their statuses.
          items:
            $ref: '#/components/schemas/UpgradeDomainInfo'
          title: UpgradeDomains
          type: array
        UpgradeDurationInMilliseconds:
          description: The estimated elapsed time spent processing the current overall
            upgrade.
          title: UpgradeDurationInMilliseconds
          type: string
        UpgradeState:
          $ref: '#/components/schemas/UpgradeState'
      title: ClusterUpgradeProgressObject
      type: object
    CodePackageEntryPoint:
      description: Information about setup or main entry point of a code package deployed
        on a Service Fabric node.
      example:
        Status: Invalid
        EntryPointLocation: EntryPointLocation
        InstanceId: InstanceId
        RunAsUserName: RunAsUserName
        CodePackageEntryPointStatistics:
          LastExitCode: LastExitCode
          ContinuousActivationFailureCount: ContinuousActivationFailureCount
          ExitCount: ExitCount
          LastSuccessfulExitTime: 2000-01-23T04:56:07.000+00:00
          ActivationCount: ActivationCount
          ContinuousExitFailureCount: ContinuousExitFailureCount
          ActivationFailureCount: ActivationFailureCount
          LastExitTime: 2000-01-23T04:56:07.000+00:00
          ExitFailureCount: ExitFailureCount
          LastActivationTime: 2000-01-23T04:56:07.000+00:00
          LastSuccessfulActivationTime: 2000-01-23T04:56:07.000+00:00
        ProcessId: ProcessId
        NextActivationTime: 2000-01-23T04:56:07.000+00:00
      properties:
        CodePackageEntryPointStatistics:
          $ref: '#/components/schemas/CodePackageEntryPointStatistics'
        EntryPointLocation:
          description: The location of entry point executable on the node.
          title: EntryPointLocation
          type: string
        InstanceId:
          description: "The instance id for current running entry point. For a code\
            \ package setup entry point (if specified) runs first and after it finishes\
            \ main entry point is started. Each time entry point executable is run,\
            \ its instance id will change."
          title: InstanceId
          type: string
        NextActivationTime:
          description: The time (in UTC) when the entry point executable will be run
            next.
          format: date-time
          title: NextActivationTime
          type: string
        ProcessId:
          description: The process id of the entry point.
          title: ProcessId
          type: string
        RunAsUserName:
          description: The user name under which entry point executable is run on
            the node.
          title: RunAsUserName
          type: string
        Status:
          $ref: '#/components/schemas/EntryPointStatus'
      title: CodePackageEntryPoint
      type: object
    CodePackageEntryPointStatistics:
      description: Statistics about setup or main entry point  of a code package deployed
        on a Service Fabric node.
      example:
        LastExitCode: LastExitCode
        ContinuousActivationFailureCount: ContinuousActivationFailureCount
        ExitCount: ExitCount
        LastSuccessfulExitTime: 2000-01-23T04:56:07.000+00:00
        ActivationCount: ActivationCount
        ContinuousExitFailureCount: ContinuousExitFailureCount
        ActivationFailureCount: ActivationFailureCount
        LastExitTime: 2000-01-23T04:56:07.000+00:00
        ExitFailureCount: ExitFailureCount
        LastActivationTime: 2000-01-23T04:56:07.000+00:00
        LastSuccessfulActivationTime: 2000-01-23T04:56:07.000+00:00
      properties:
        ActivationCount:
          description: Number of times the entry point has run.
          title: ActivationCount
          type: string
        ActivationFailureCount:
          description: Number of times the entry point failed to run.
          title: ActivationFailureCount
          type: string
        ContinuousActivationFailureCount:
          description: Number of times the entry point continuously failed to run.
          title: ContinuousActivationFailureCount
          type: string
        ContinuousExitFailureCount:
          description: Number of times the entry point continuously failed to exit
            gracefully.
          title: ContinuousExitFailureCount
          type: string
        ExitCount:
          description: Number of times the entry point finished running.
          title: ExitCount
          type: string
        ExitFailureCount:
          description: Number of times the entry point failed to exit gracefully.
          title: ExitFailureCount
          type: string
        LastActivationTime:
          description: The last time (in UTC) when Service Fabric attempted to run
            the entry point.
          format: date-time
          title: LastActivationTime
          type: string
        LastExitCode:
          description: The last exit code of the entry point.
          title: LastExitCode
          type: string
        LastExitTime:
          description: The last time (in UTC) when the entry point finished running.
          format: date-time
          title: LastExitTime
          type: string
        LastSuccessfulActivationTime:
          description: The last time (in UTC) when the entry point ran successfully.
          format: date-time
          title: LastSuccessfulActivationTime
          type: string
        LastSuccessfulExitTime:
          description: The last time (in UTC) when the entry point finished running
            gracefully.
          format: date-time
          title: LastSuccessfulExitTime
          type: string
      title: CodePackageEntryPointStatistics
      type: object
    CodePackageInstanceId:
      description: "The instance id for current running entry point. For a code package\
        \ setup entry point (if specified) runs first and after it finishes main entry\
        \ point is started. Each time entry point executable is run, its instance\
        \ id will change."
      title: InstanceId
      type: string
    CodePackageName:
      description: The name of the code package defined in the service manifest.
      title: CodePackageName
      type: string
    ComposeDeploymentStatus:
      description: |
        The status of the compose deployment. Possible values are.

        - Invalid - Indicates that the compose deployment status is invalid. The value is zero.
        - Provisioning - Indicates that the compose deployment is being provisioned in background. The value is 1.
        - Creating - Indicates that the compose deployment is being created in background. The value is 2.
        - Ready - Indicates that the compose deployment has been successfully created or upgraded. The value is 3.
        - Unprovisioning - Indicates that the compose deployment is being unprovisioned in background. The value is 4.
        - Deleting - Indicates that the compose deployment is being deleted in background. The value is 5.
        - Failed - Indicates that the compose deployment was terminated due to persistent failures. The value is 6.
        - Upgrading - Indicates that the compose deployment is being upgraded in the background. The value is 7.
      enum:
      - Invalid
      - Provisioning
      - Creating
      - Ready
      - Unprovisioning
      - Deleting
      - Failed
      - Upgrading
      title: ComposeDeploymentStatus
      type: string
    ComposeDeploymentStatusInfo:
      description: Information about a Service Fabric compose deployment.
      example:
        Status: Invalid
        ApplicationName: ApplicationName
        StatusDetails: StatusDetails
        Name: Name
      properties:
        ApplicationName:
          description: "The name of the application, including the 'fabric:' URI scheme."
          title: ApplicationName
          type: string
        Name:
          description: The name of the deployment.
          title: Name
          type: string
        Status:
          $ref: '#/components/schemas/ComposeDeploymentStatus'
        StatusDetails:
          description: The status details of compose deployment including failure
            message.
          title: StatusDetails
          type: string
      title: ComposeDeploymentStatusInfo
      type: object
    ComposeDeploymentUpgradeDescription:
      description: Describes the parameters for a compose deployment upgrade.
      example:
        DeploymentName: DeploymentName
        ComposeFileContent: ComposeFileContent
        UpgradeKind: Rolling
        ApplicationHealthPolicy:
          DefaultServiceTypeHealthPolicy:
            MaxPercentUnhealthyReplicasPerPartition: 6
            MaxPercentUnhealthyServices: 1
            MaxPercentUnhealthyPartitionsPerService: 0
          ConsiderWarningAsError: false
          MaxPercentUnhealthyDeployedApplications: 5
          ServiceTypeHealthPolicyMap:
          - Value:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            Key: Key
          - Value:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            Key: Key
        RollingUpgradeMode: UnmonitoredAuto
        ForceRestart: false
        UpgradeReplicaSetCheckTimeoutInSeconds: 0
        MonitoringPolicy:
          UpgradeDomainTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          FailureAction: Invalid
          UpgradeTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          HealthCheckStableDurationInMilliseconds: PT0H2M0S
          HealthCheckRetryTimeoutInMilliseconds: PT0H10M0S
          HealthCheckWaitDurationInMilliseconds: "0"
        RegistryCredential:
          RegistryUserName: RegistryUserName
          RegistryPassword: RegistryPassword
          PasswordEncrypted: true
      properties:
        ApplicationHealthPolicy:
          $ref: '#/components/schemas/ApplicationHealthPolicy'
        ComposeFileContent:
          description: The content of the compose file that describes the deployment
            to create.
          title: ComposeFileContent
          type: string
        DeploymentName:
          description: The name of the deployment.
          title: Name
          type: string
        ForceRestart:
          default: false
          description: "If true, then processes are forcefully restarted during upgrade\
            \ even when the code version has not changed (the upgrade only changes\
            \ configuration or data)."
          title: ForceRestart
          type: boolean
        MonitoringPolicy:
          $ref: '#/components/schemas/MonitoringPolicyDescription'
        RegistryCredential:
          $ref: '#/components/schemas/RegistryCredential'
        RollingUpgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
        UpgradeKind:
          $ref: '#/components/schemas/UpgradeKind'
        UpgradeReplicaSetCheckTimeoutInSeconds:
          description: "The maximum amount of time to block processing of an upgrade\
            \ domain and prevent loss of availability when there are unexpected issues.\
            \ When this timeout expires, processing of the upgrade domain will proceed\
            \ regardless of availability loss issues. The timeout is reset at the\
            \ start of each upgrade domain. Valid values are between 0 and 42949672925\
            \ inclusive. (unsigned 32-bit integer)."
          format: int64
          title: UpgradeReplicaSetCheckTimeoutInSeconds
          type: integer
      required:
      - ComposeFileContent
      - DeploymentName
      - UpgradeKind
      title: ComposeDeploymentUpgradeDescription
      type: object
    ComposeDeploymentUpgradeProgressInfo:
      description: Describes the parameters for a compose deployment upgrade.
      example:
        ApplicationUnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        ApplicationUpgradeStatusDetails: ApplicationUpgradeStatusDetails
        DeploymentName: DeploymentName
        ApplicationName: ApplicationName
        UpgradeKind: Rolling
        CurrentUpgradeDomainDuration: PT0H2M0S
        ForceRestart: false
        UpgradeDomainProgressAtFailure:
          DomainName: DomainName
          NodeUpgradeProgressList:
          - NodeName: NodeName
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            UpgradePhase: Invalid
          - NodeName: NodeName
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            UpgradePhase: Invalid
        UpgradeState: Invalid
        MonitoringPolicy:
          UpgradeDomainTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          FailureAction: Invalid
          UpgradeTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          HealthCheckStableDurationInMilliseconds: PT0H2M0S
          HealthCheckRetryTimeoutInMilliseconds: PT0H10M0S
          HealthCheckWaitDurationInMilliseconds: "0"
        TargetApplicationTypeVersion: TargetApplicationTypeVersion
        StartTimestampUtc: StartTimestampUtc
        ApplicationHealthPolicy:
          DefaultServiceTypeHealthPolicy:
            MaxPercentUnhealthyReplicasPerPartition: 6
            MaxPercentUnhealthyServices: 1
            MaxPercentUnhealthyPartitionsPerService: 0
          ConsiderWarningAsError: false
          MaxPercentUnhealthyDeployedApplications: 5
          ServiceTypeHealthPolicyMap:
          - Value:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            Key: Key
          - Value:
              MaxPercentUnhealthyReplicasPerPartition: 6
              MaxPercentUnhealthyServices: 1
              MaxPercentUnhealthyPartitionsPerService: 0
            Key: Key
        RollingUpgradeMode: UnmonitoredAuto
        UpgradeStatusDetails: UpgradeStatusDetails
        FailureReason: None
        FailureTimestampUtc: FailureTimestampUtc
        UpgradeReplicaSetCheckTimeoutInSeconds: 0
        CurrentUpgradeDomainProgress:
          DomainName: DomainName
          NodeUpgradeProgressList:
          - NodeName: NodeName
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            UpgradePhase: Invalid
          - NodeName: NodeName
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            UpgradePhase: Invalid
        UpgradeDuration: PT0H2M0S
      properties:
        ApplicationHealthPolicy:
          $ref: '#/components/schemas/ApplicationHealthPolicy'
        ApplicationName:
          description: "The name of the target application, including the 'fabric:'\
            \ URI scheme."
          title: Name
          type: string
        ApplicationUnhealthyEvaluations:
          description: List of health evaluations that resulted in the current aggregated
            health state.
          items:
            $ref: '#/components/schemas/HealthEvaluationWrapper'
          title: ApplicationUnhealthyEvaluations
          type: array
        ApplicationUpgradeStatusDetails:
          title: ApplicationUpgradeStatusDetails
          type: string
        CurrentUpgradeDomainDuration:
          default: PT0H2M0S
          description: "The estimated amount of time spent processing current Upgrade\
            \ Domain. It is first interpreted as a string representing an ISO 8601\
            \ duration. If that fails, then it is interpreted as a number representing\
            \ the total number of milliseconds."
          title: CurrentUpgradeDomainDuration
          type: string
        CurrentUpgradeDomainProgress:
          $ref: '#/components/schemas/CurrentUpgradeDomainProgressInfo'
        DeploymentName:
          description: The name of the target deployment.
          title: DeploymentName
          type: string
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
        FailureTimestampUtc:
          title: FailureTimestampUtc
          type: string
        ForceRestart:
          default: false
          description: "If true, then processes are forcefully restarted during upgrade\
            \ even when the code version has not changed (the upgrade only changes\
            \ configuration or data)."
          title: ForceRestart
          type: boolean
        MonitoringPolicy:
          $ref: '#/components/schemas/MonitoringPolicyDescription'
        RollingUpgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
        StartTimestampUtc:
          title: StartTimestampUtc
          type: string
        TargetApplicationTypeVersion:
          description: The target application type version (found in the application
            manifest) for the application upgrade.
          title: TargetApplicationTypeVersion
          type: string
        UpgradeDomainProgressAtFailure:
          $ref: '#/components/schemas/FailureUpgradeDomainProgressInfo'
        UpgradeDuration:
          default: PT0H2M0S
          description: "The estimated amount of time that the overall upgrade elapsed.\
            \ It is first interpreted as a string representing an ISO 8601 duration.\
            \ If that fails, then it is interpreted as a number representing the total\
            \ number of milliseconds."
          title: UpgradeDuration
          type: string
        UpgradeKind:
          $ref: '#/components/schemas/UpgradeKind'
        UpgradeReplicaSetCheckTimeoutInSeconds:
          description: "The maximum amount of time to block processing of an upgrade\
            \ domain and prevent loss of availability when there are unexpected issues.\
            \ When this timeout expires, processing of the upgrade domain will proceed\
            \ regardless of availability loss issues. The timeout is reset at the\
            \ start of each upgrade domain. Valid values are between 0 and 42949672925\
            \ inclusive. (unsigned 32-bit integer)."
          format: int64
          title: UpgradeReplicaSetCheckTimeoutInSeconds
          type: integer
        UpgradeState:
          $ref: '#/components/schemas/ComposeDeploymentUpgradeState'
        UpgradeStatusDetails:
          title: UpgradeStatusDetails
          type: string
      title: ComposeDeploymentUpgradeProgressInfo
      type: object
    ComposeDeploymentUpgradeState:
      description: |
        The state of the compose deployment upgrade.

            - Invalid - Indicates the upgrade state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
            - ProvisioningTarget - The upgrade is in the progress of provisioning target application type version. The value is 1.
            - RollingForwardInProgress - The upgrade is rolling forward to the target version but is not complete yet. The value is 2.
            - RollingForwardPending - The current upgrade domain has finished upgrading. The overall upgrade is waiting for an explicit move next request in UnmonitoredManual mode or performing health checks in Monitored mode. The value is 3
            - UnprovisioningCurrent - The upgrade is in the progress of unprovisioning current application type version and rolling forward to the target version is completed. The value is 4.
            - RollingForwardCompleted - The upgrade has finished rolling forward. The value is 5.
            - RollingBackInProgress - The upgrade is rolling back to the previous version but is not complete yet. The value is 6.
            - UnprovisioningTarget - The upgrade is in the progress of unprovisioning target application type version and rolling back to the current version is completed. The value is 7.
            - RollingBackCompleted - The upgrade has finished rolling back. The valud is 8.
            - Failed - The upgrade has failed and is unable to execute FailureAction. The value is 9.
      enum:
      - Invalid
      - ProvisioningTarget
      - RollingForwardInProgress
      - RollingForwardPending
      - UnprovisioningCurrent
      - RollingForwardCompleted
      - RollingBackInProgress
      - UnprovisioningTarget
      - RollingBackCompleted
      - Failed
      title: ComposeDeploymentUpgradeState
      type: string
    ContinuationToken:
      description: "The continuation token parameter is used to obtain next set of\
        \ results. The continuation token is included in the response of the API when\
        \ the results from the system do not fit in a single response. When this value\
        \ is passed to the next API call, the API returns next set of results. If\
        \ there are no further results then the continuation token is not included\
        \ in the response."
      title: ContinuationToken
      type: string
    CorrelationSchemeList:
      description: A list that describes the correlation of the service with other
        services.
      items:
        $ref: '#/components/schemas/ServiceCorrelationDescription'
      title: CorrelationScheme
      type: array
    CreateComposeDeploymentDescription:
      description: |
        Defines description for creating a Service Fabric compose deployment.
      example:
        DeploymentName: DeploymentName
        ComposeFileContent: ComposeFileContent
        RegistryCredential:
          RegistryUserName: RegistryUserName
          RegistryPassword: RegistryPassword
          PasswordEncrypted: true
      properties:
        ComposeFileContent:
          description: The content of the compose file that describes the deployment
            to create.
          title: ComposeFileContent
          type: string
        DeploymentName:
          description: The name of the deployment.
          title: Name
          type: string
        RegistryCredential:
          $ref: '#/components/schemas/RegistryCredential'
      required:
      - ComposeFileContent
      - DeploymentName
      title: CreateComposeDeploymentDescription
      type: object
    CurrentUpgradeDomainDuration:
      default: PT0H2M0S
      description: "The estimated amount of time spent processing current Upgrade\
        \ Domain. It is first interpreted as a string representing an ISO 8601 duration.\
        \ If that fails, then it is interpreted as a number representing the total\
        \ number of milliseconds."
      title: CurrentUpgradeDomainDuration
      type: string
    CurrentUpgradeDomainProgressInfo:
      description: Information about the current in-progress upgrade domain.
      example:
        DomainName: DomainName
        NodeUpgradeProgressList:
        - NodeName: NodeName
          PendingSafetyChecks:
          - SafetyCheck:
              Kind: Invalid
          - SafetyCheck:
              Kind: Invalid
          UpgradePhase: Invalid
        - NodeName: NodeName
          PendingSafetyChecks:
          - SafetyCheck:
              Kind: Invalid
          - SafetyCheck:
              Kind: Invalid
          UpgradePhase: Invalid
      properties:
        DomainName:
          description: The name of the upgrade domain
          title: UpgradeDomainName
          type: string
        NodeUpgradeProgressList:
          description: List of upgrading nodes and their statuses
          items:
            $ref: '#/components/schemas/NodeUpgradeProgressInfo'
          title: NodeUpgradeProgressInfoList
          type: array
      title: CurrentUpgradeDomainProgressInfo
      type: object
    DeactivationIntentDescription:
      description: Describes the intent or reason for deactivating the node.
      example:
        DeactivationIntent: Pause
      properties:
        DeactivationIntent:
          description: |
            Describes the intent or reason for deactivating the node. The possible values are following.
              - Pause - Indicates that the node should be paused. The value is 1.
              - Restart - Indicates that the intent is for the node to be restarted after a short period of time. The value is 2.
              - RemoveData - Indicates the intent is for the node to remove data. The value is 3.
          enum:
          - Pause
          - Restart
          - RemoveData
          title: DeactivationIntent
          type: string
      title: DeactivationIntentDescription
      type: object
    DeletePropertyBatchOperation:
      allOf:
      - $ref: '#/components/schemas/PropertyBatchOperation'
      - description: DeletePropertyBatchOperation
        type: object
      description: |
        Represents a PropertyBatchOperation that deletes a specified property if it exists.  Note that if one PropertyBatchOperation in a PropertyBatch fails,  the entire batch fails and cannot be committed in a transactional manner.
      x-ms-discriminator-value: Delete
    DeltaHealthEvaluationBool:
      description: "When true, enables delta health evaluation rather than absolute\
        \ health evaluation after completion of each upgrade domain."
      title: EnableDeltaHealthEvaluation
      type: boolean
    DeltaNodesCheckHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: DeltaNodesCheckHealthEvaluation
        properties:
          BaselineErrorCount:
            description: Number of nodes with aggregated heath state Error in the
              health store at the beginning of the cluster upgrade.
            format: int64
            type: integer
          BaselineTotalCount:
            description: Total number of nodes in the health store at the beginning
              of the cluster upgrade.
            format: int64
            type: integer
          MaxPercentDeltaUnhealthyNodes:
            description: Maximum allowed percentage of delta unhealthy nodes from
              the ClusterUpgradeHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of nodes in the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: |
        Represents health evaluation for delta nodes, containing health evaluations for each unhealthy node that impacted current aggregated health state.
        Can be returned during cluster upgrade when the aggregated health state of the cluster is Warning or Error.
      x-ms-discriminator-value: DeltaNodesCheck
    DeployServicePackageToNodeDescription:
      description: |
        Defines description for downloading packages associated with a service manifest to image cache on a Service Fabric node.
      example:
        NodeName: NodeName
        ServiceManifestName: ServiceManifestName
        ApplicationTypeVersion: ApplicationTypeVersion
        ApplicationTypeName: ApplicationTypeName
        PackageSharingPolicy:
        - PackageSharingScope: None
          SharedPackageName: SharedPackageName
        - PackageSharingScope: None
          SharedPackageName: SharedPackageName
      properties:
        ApplicationTypeName:
          description: The application type name as defined in the application manifest.
          title: TypeName
          type: string
        ApplicationTypeVersion:
          description: The version of the application type as defined in the application
            manifest.
          title: TypeVersion
          type: string
        NodeName:
          description: The name of a Service Fabric node.
          title: NodeName
          type: string
        PackageSharingPolicy:
          description: List of package sharing policy information.
          items:
            $ref: '#/components/schemas/PackageSharingPolicyInfo'
          title: PackageSharingPolicy
          type: array
        ServiceManifestName:
          description: The name of the service manifest.
          title: ServiceManifestName
          type: string
      required:
      - ApplicationTypeName
      - ApplicationTypeVersion
      - NodeName
      - ServiceManifestName
      title: DeployServicePackageToNodeDescription
      type: object
    DeployedApplicationHealth:
      allOf:
      - $ref: '#/components/schemas/EntityHealth'
      - description: DeployedApplicationHealth
        properties:
          DeployedServicePackageHealthStates:
            $ref: '#/components/schemas/DeployedServicePackageHealthStateList'
          Name:
            $ref: '#/components/schemas/ApplicationName'
          NodeName:
            $ref: '#/components/schemas/NodeName'
        type: object
      description: Information about the health of an application deployed on a Service
        Fabric node.
      example:
        AggregatedHealthState: Invalid
        HealthStatistics:
          HealthStateCountList:
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
        UnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        HealthEvents:
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        NodeName: null
        DeployedServicePackageHealthStates:
        - AggregatedHealthState: null
          ApplicationName: null
          NodeName: null
          ServiceManifestName: null
          ServicePackageActivationId: null
        - AggregatedHealthState: null
          ApplicationName: null
          NodeName: null
          ServiceManifestName: null
          ServicePackageActivationId: null
        Name: null
      title: DeployedApplicationHealth
    DeployedApplicationHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: DeployedApplicationHealthEvaluation
        properties:
          ApplicationName:
            $ref: '#/components/schemas/ApplicationName'
          NodeName:
            $ref: '#/components/schemas/NodeName'
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: |
        Represents health evaluation for a deployed application, containing information about the data and the algorithm used by the health store to evaluate health.
      x-ms-discriminator-value: DeployedApplication
    DeployedApplicationHealthState:
      allOf:
      - $ref: '#/components/schemas/EntityHealthState'
      - description: DeployedApplicationHealthState
        properties:
          ApplicationName:
            $ref: '#/components/schemas/ApplicationName'
          NodeName:
            $ref: '#/components/schemas/NodeName'
        type: object
      description: "Represents the health state of a deployed application, which contains\
        \ the entity identifier and the aggregated health state."
      example:
        AggregatedHealthState: null
        ApplicationName: null
        NodeName: null
      title: DeployedApplicationHealthState
    DeployedApplicationHealthStateChunk:
      allOf:
      - $ref: '#/components/schemas/EntityHealthStateChunk'
      - description: DeployedApplicationHealthStateChunk
        properties:
          DeployedServicePackageHealthStateChunks:
            $ref: '#/components/schemas/DeployedServicePackageHealthStateChunkList'
          NodeName:
            description: The name of node where the application is deployed.
            type: string
        type: object
      description: |
        Represents the health state chunk of a deployed application, which contains the node where the application is deployed, the aggregated health state and any deployed service packages that respect the chunk query description filters.
      example:
        DeployedServicePackageHealthStateChunks:
          Items:
          - ServiceManifestName: null
            ServicePackageActivationId: null
            HealthState: null
          - ServiceManifestName: null
            ServicePackageActivationId: null
            HealthState: null
        NodeName: NodeName
        HealthState: null
      title: DeployedApplicationHealthStateChunk
    DeployedApplicationHealthStateChunkList:
      description: |
        The list of deployed application health state chunks that respect the input filters in the chunk query. Returned by get cluster health state chunks query.
      example:
        Items:
        - DeployedServicePackageHealthStateChunks:
            Items:
            - ServiceManifestName: null
              ServicePackageActivationId: null
              HealthState: null
            - ServiceManifestName: null
              ServicePackageActivationId: null
              HealthState: null
          NodeName: NodeName
          HealthState: null
        - DeployedServicePackageHealthStateChunks:
            Items:
            - ServiceManifestName: null
              ServicePackageActivationId: null
              HealthState: null
            - ServiceManifestName: null
              ServicePackageActivationId: null
              HealthState: null
          NodeName: NodeName
          HealthState: null
      properties:
        Items:
          description: |
            The list of deployed application health state chunks that respect the input filters in the chunk query.
          items:
            $ref: '#/components/schemas/DeployedApplicationHealthStateChunk'
          title: Items
          type: array
      title: DeployedApplicationHealthStateChunkList
      type: object
    DeployedApplicationHealthStateFilter:
      description: |
        Defines matching criteria to determine whether a deployed application should be included as a child of an application in the cluster health chunk.
        The deployed applications are only returned if the parent application matches a filter specified in the cluster health chunk query description.
        One filter can match zero, one or multiple deployed applications, depending on its properties.
      example:
        NodeNameFilter: NodeNameFilter
        HealthStateFilter: 6
        DeployedServicePackageFilters:
        - ServiceManifestNameFilter: ServiceManifestNameFilter
          HealthStateFilter: 0
          ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
        - ServiceManifestNameFilter: ServiceManifestNameFilter
          HealthStateFilter: 0
          ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
      properties:
        DeployedServicePackageFilters:
          description: |
            Defines a list of filters that specify which deployed service packages to be included in the returned cluster health chunk as children of the parent deployed application. The deployed service packages are returned only if the parent deployed application matches a filter.
            If the list is empty, no deployed service packages are returned. All the deployed service packages are used to evaluate the parent deployed application aggregated health state, regardless of the input filters.
            The deployed application filter may specify multiple deployed service package filters.
            For example, it can specify a filter to return all deployed service packages with health state Error and another filter to always include a deployed service package on a node.
          items:
            $ref: '#/components/schemas/DeployedServicePackageHealthStateFilter'
          title: DeployedServicePackageFilters
          type: array
        HealthStateFilter:
          description: |
            The filter for the health state of the deployed applications. It allows selecting deployed applications if they match the desired health states.
            The possible values are integer value of one of the following health states. Only deployed applications that match the filter are returned. All deployed applications are used to evaluate the cluster aggregated health state.
            If not specified, default value is None, unless the node name is specified. If the filter has default value and node name is specified, the matching deployed application is returned.
            The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
            For example, if the provided value is 6, it matches deployed applications with HealthState value of OK (2) and Warning (4).

            - Default - Default value. Matches any HealthState. The value is zero.
            - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
            - Ok - Filter that matches input with HealthState value Ok. The value is 2.
            - Warning - Filter that matches input with HealthState value Warning. The value is 4.
            - Error - Filter that matches input with HealthState value Error. The value is 8.
            - All - Filter that matches input with any HealthState value. The value is 65535.
          title: HealthStateFilter
          type: integer
        NodeNameFilter:
          description: |
            The name of the node where the application is deployed in order to match the filter.
            If specified, the filter is applied only to the application deployed on the specified node.
            If the application is not deployed on the node with the specified name, no deployed application is returned in the cluster health chunk based on this filter.
            Otherwise, the deployed application is included in the cluster health chunk if it respects the other filter properties.
            If not specified, all deployed applications that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.
          title: NodeNameFilter
          type: string
      title: DeployedApplicationHealthStateFilter
      type: object
    DeployedApplicationInfo:
      description: Information about application deployed on the node.
      example:
        Status: Invalid
        TempDirectory: TempDirectory
        TypeName: TypeName
        WorkDirectory: WorkDirectory
        Id: Id
        LogDirectory: LogDirectory
        Name: Name
      properties:
        Id:
          description: "The identity of the application. This is an encoded representation\
            \ of the application name. This is used in the REST APIs to identify the\
            \ application resource. \n\nStarting in version 6.0, hierarchical names\
            \ are delimited with the \"~\" character. For example, if the application\
            \ name is \"fabric://myapp/app1\", the application identity would be \"\
            myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.\n"
          title: Id
          type: string
        LogDirectory:
          description: The log directory of the application on the node. The log directory
            can be used to store application logs.
          title: LogDirectory
          type: string
        Name:
          description: "The name of the application, including the 'fabric:' URI scheme."
          title: ApplicationName
          type: string
        Status:
          $ref: '#/components/schemas/DeployedApplicationStatus'
        TempDirectory:
          description: The temp directory of the application on the node. The code
            packages belonging to the application are forked with this directory set
            as their temporary directory.
          title: TempDirectory
          type: string
        TypeName:
          description: The application type name as defined in the application manifest.
          title: TypeName
          type: string
        WorkDirectory:
          description: The work directory of the application on the node. The work
            directory can be used to store application data.
          title: WorkDirectory
          type: string
      title: DeployedApplicationInfo
      type: object
    DeployedApplicationInfoList:
      description: List of deployed application information.
      items:
        $ref: '#/components/schemas/DeployedApplicationInfo'
      type: array
    DeployedApplicationStatus:
      description: |
        The status of the application deployed on the node. Following are the possible values.

        - Invalid - Indicates that deployment status is not valid. All Service Fabric enumerations have the invalid type. The value is zero.
        - Downloading - Indicates that the package is downloading from the ImageStore. The value is 1.
        - Activating - Indicates that the package is activating. The value is 2.
        - Active - Indicates that the package is active. The value is 3.
        - Upgrading - Indicates that the package is upgrading. The value is 4.
        - Deactivating - Indicates that the package is deactivating. The value is 5.
      enum:
      - Invalid
      - Downloading
      - Activating
      - Active
      - Upgrading
      - Deactivating
      title: DeployedApplicationStatus
      type: string
    DeployedApplicationsHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: DeployedApplicationsHealthEvaluation
        properties:
          MaxPercentUnhealthyDeployedApplications:
            description: Maximum allowed percentage of unhealthy deployed applications
              from the ApplicationHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of deployed applications of the application
              in the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: |
        Represents health evaluation for deployed applications, containing health evaluations for each unhealthy deployed application that impacted current aggregated health state.
        Can be returned when evaluating application health and the aggregated health state is either Error or Warning.
      x-ms-discriminator-value: DeployedApplications
    DeployedCodePackageInfo:
      description: Information about code package deployed on a Service Fabric node.
      example:
        Status: Invalid
        HostType: Invalid
        SetupEntryPoint:
          Status: Invalid
          EntryPointLocation: EntryPointLocation
          InstanceId: InstanceId
          RunAsUserName: RunAsUserName
          CodePackageEntryPointStatistics:
            LastExitCode: LastExitCode
            ContinuousActivationFailureCount: ContinuousActivationFailureCount
            ExitCount: ExitCount
            LastSuccessfulExitTime: 2000-01-23T04:56:07.000+00:00
            ActivationCount: ActivationCount
            ContinuousExitFailureCount: ContinuousExitFailureCount
            ActivationFailureCount: ActivationFailureCount
            LastExitTime: 2000-01-23T04:56:07.000+00:00
            ExitFailureCount: ExitFailureCount
            LastActivationTime: 2000-01-23T04:56:07.000+00:00
            LastSuccessfulActivationTime: 2000-01-23T04:56:07.000+00:00
          ProcessId: ProcessId
          NextActivationTime: 2000-01-23T04:56:07.000+00:00
        MainEntryPoint:
          Status: Invalid
          EntryPointLocation: EntryPointLocation
          InstanceId: InstanceId
          RunAsUserName: RunAsUserName
          CodePackageEntryPointStatistics:
            LastExitCode: LastExitCode
            ContinuousActivationFailureCount: ContinuousActivationFailureCount
            ExitCount: ExitCount
            LastSuccessfulExitTime: 2000-01-23T04:56:07.000+00:00
            ActivationCount: ActivationCount
            ContinuousExitFailureCount: ContinuousExitFailureCount
            ActivationFailureCount: ActivationFailureCount
            LastExitTime: 2000-01-23T04:56:07.000+00:00
            ExitFailureCount: ExitFailureCount
            LastActivationTime: 2000-01-23T04:56:07.000+00:00
            LastSuccessfulActivationTime: 2000-01-23T04:56:07.000+00:00
          ProcessId: ProcessId
          NextActivationTime: 2000-01-23T04:56:07.000+00:00
        ServiceManifestName: ServiceManifestName
        Version: Version
        ServicePackageActivationId: ServicePackageActivationId
        HostIsolationMode: None
        Name: Name
        RunFrequencyInterval: RunFrequencyInterval
      properties:
        HostIsolationMode:
          $ref: '#/components/schemas/HostIsolationMode'
        HostType:
          $ref: '#/components/schemas/HostType'
        MainEntryPoint:
          $ref: '#/components/schemas/CodePackageEntryPoint'
        Name:
          description: The name of the code package defined in the service manifest.
          title: CodePackageName
          type: string
        RunFrequencyInterval:
          description: The interval at which code package is run. This is used for
            periodic code package.
          title: RunFrequencyInterval
          type: string
        ServiceManifestName:
          description: The name of the service manifest.
          title: ServiceManifestName
          type: string
        ServicePackageActivationId:
          description: |
            The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
            is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
            is always an empty string.
          title: ServicePackageActivationId
          type: string
        SetupEntryPoint:
          $ref: '#/components/schemas/CodePackageEntryPoint'
        Status:
          $ref: '#/components/schemas/DeploymentStatus'
        Version:
          description: The version of the code package specified in service manifest.
          title: Version
          type: string
      title: DeployedCodePackageInfo
      type: object
    DeployedCodePackageInfoList:
      description: List of deployed code package information.
      items:
        $ref: '#/components/schemas/DeployedCodePackageInfo'
      type: array
    DeployedServicePackageHealth:
      allOf:
      - $ref: '#/components/schemas/EntityHealth'
      - description: DeployedServicePackageHealth
        properties:
          ApplicationName:
            $ref: '#/components/schemas/ApplicationName'
          NodeName:
            $ref: '#/components/schemas/NodeName'
          ServiceManifestName:
            $ref: '#/components/schemas/ServiceManifestName'
        type: object
      description: Information about the health of a service package for a specific
        application deployed on a Service Fabric node.
      example:
        AggregatedHealthState: Invalid
        HealthStatistics:
          HealthStateCountList:
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
        UnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        ApplicationName: null
        HealthEvents:
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        NodeName: null
        ServiceManifestName: null
      title: DeployedServicePackageHealth
    DeployedServicePackageHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: DeployedServicePackageHealthEvaluation
        properties:
          ApplicationName:
            $ref: '#/components/schemas/ApplicationName'
          NodeName:
            $ref: '#/components/schemas/NodeName'
          ServiceManifestName:
            $ref: '#/components/schemas/ServiceManifestName'
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for a deployed service package, containing\
        \ information about the data and the algorithm used by health store to evaluate\
        \ health. The evaluation is returned only when the aggregated health state\
        \ is either Error or Warning."
      x-ms-discriminator-value: DeployedServicePackage
    DeployedServicePackageHealthState:
      allOf:
      - $ref: '#/components/schemas/EntityHealthState'
      - description: DeployedServicePackageHealthState
        properties:
          ApplicationName:
            $ref: '#/components/schemas/ApplicationName'
          NodeName:
            $ref: '#/components/schemas/NodeName'
          ServiceManifestName:
            $ref: '#/components/schemas/ServiceManifestName'
          ServicePackageActivationId:
            $ref: '#/components/schemas/ServicePackageActivationId'
        type: object
      description: "Represents the health state of a deployed service package, containing\
        \ the entity identifier and the aggregated health state."
      example:
        AggregatedHealthState: null
        ApplicationName: null
        NodeName: null
        ServiceManifestName: null
        ServicePackageActivationId: null
      title: DeployedServicePackageHealthState
    DeployedServicePackageHealthStateChunk:
      allOf:
      - $ref: '#/components/schemas/EntityHealthStateChunk'
      - description: DeployedServicePackageHealthStateChunk
        properties:
          ServiceManifestName:
            $ref: '#/components/schemas/ServiceManifestName'
          ServicePackageActivationId:
            $ref: '#/components/schemas/ServicePackageActivationId'
        type: object
      description: |
        Represents the health state chunk of a deployed service package, which contains the service manifest name and the service package aggregated health state.
      example:
        ServiceManifestName: null
        ServicePackageActivationId: null
        HealthState: null
      title: DeployedServicePackageHealthStateChunk
    DeployedServicePackageHealthStateChunkList:
      description: |
        The list of deployed service package health state chunks that respect the input filters in the chunk query. Returned by get cluster health state chunks query.
      example:
        Items:
        - ServiceManifestName: null
          ServicePackageActivationId: null
          HealthState: null
        - ServiceManifestName: null
          ServicePackageActivationId: null
          HealthState: null
      properties:
        Items:
          description: |
            The list of deployed service package health state chunks that respect the input filters in the chunk query.
          items:
            $ref: '#/components/schemas/DeployedServicePackageHealthStateChunk'
          title: Items
          type: array
      title: DeployedServicePackageHealthStateChunkList
      type: object
    DeployedServicePackageHealthStateFilter:
      description: |
        Defines matching criteria to determine whether a deployed service package should be included as a child of a deployed application in the cluster health chunk.
        The deployed service packages are only returned if the parent entities match a filter specified in the cluster health chunk query description. The parent deployed application and its parent application must be included in the cluster health chunk.
        One filter can match zero, one or multiple deployed service packages, depending on its properties.
      example:
        ServiceManifestNameFilter: ServiceManifestNameFilter
        HealthStateFilter: 0
        ServicePackageActivationIdFilter: ServicePackageActivationIdFilter
      properties:
        HealthStateFilter:
          description: |
            The filter for the health state of the deployed service packages. It allows selecting deployed service packages if they match the desired health states.
            The possible values are integer value of one of the following health states. Only deployed service packages that match the filter are returned. All deployed service packages are used to evaluate the parent deployed application aggregated health state.
            If not specified, default value is None, unless the deployed service package id is specified. If the filter has default value and deployed service package id is specified, the matching deployed service package is returned.
            The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
            For example, if the provided value is 6, it matches deployed service packages with HealthState value of OK (2) and Warning (4).

            - Default - Default value. Matches any HealthState. The value is zero.
            - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
            - Ok - Filter that matches input with HealthState value Ok. The value is 2.
            - Warning - Filter that matches input with HealthState value Warning. The value is 4.
            - Error - Filter that matches input with HealthState value Error. The value is 8.
            - All - Filter that matches input with any HealthState value. The value is 65535.
          title: HealthStateFilter
          type: integer
        ServiceManifestNameFilter:
          description: |
            The name of the service manifest which identifies the deployed service packages that matches the filter.
            If specified, the filter is applied only to the specified deployed service packages, if any.
            If no deployed service packages with specified manifest name exist, nothing is returned in the cluster health chunk based on this filter.
            If any deployed service package exists, they are included in the cluster health chunk if it respects the other filter properties.
            If not specified, all deployed service packages that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.
          title: ServiceManifestNameFilter
          type: string
        ServicePackageActivationIdFilter:
          description: |
            The activation ID of a deployed service package that matches the filter.
            If not specified, the filter applies to all deployed service packages that match the other parameters.
            If specified, the filter matches only the deployed service package with the specified activation ID.
          title: ServicePackageActivationIdFilter
          type: string
      title: DeployedServicePackageHealthStateFilter
      type: object
    DeployedServicePackageHealthStateList:
      description: List of health states for a service package deployed on a Service
        Fabric node.
      items:
        $ref: '#/components/schemas/DeployedServicePackageHealthState'
      type: array
    DeployedServicePackageInfo:
      description: Information about service package deployed on a Service Fabric
        node.
      example:
        Status: Invalid
        Version: Version
        ServicePackageActivationId: ServicePackageActivationId
        Name: Name
      properties:
        Name:
          description: The name of the service manifest.
          title: ServiceManifestName
          type: string
        ServicePackageActivationId:
          description: |
            The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
            is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
            is always an empty string.
          title: ServicePackageActivationId
          type: string
        Status:
          $ref: '#/components/schemas/DeploymentStatus'
        Version:
          description: The version of the service package specified in service manifest.
          title: Version
          type: string
      title: DeployedServicePackageInfo
      type: object
    DeployedServicePackageInfoList:
      description: List of deployed service package information.
      items:
        $ref: '#/components/schemas/DeployedServicePackageInfo'
      type: array
    DeployedServicePackagesHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: DeployedServicePackagesHealthEvaluation
        properties:
          TotalCount:
            description: Total number of deployed service packages of the deployed
              application in the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for deployed service packages, containing\
        \ health evaluations for each unhealthy deployed service package that impacted\
        \ current aggregated health state. Can be returned when evaluating deployed\
        \ application health and the aggregated health state is either Error or Warning."
      x-ms-discriminator-value: DeployedServicePackages
    DeployedServiceReplicaDetailInfo:
      description: Information about a Service Fabric service replica deployed on
        a node.
      discriminator:
        propertyName: ServiceKind
      example:
        ServiceName: ServiceName
        CurrentServiceOperation: Unknown
        CurrentServiceOperationStartTimeUtc: 2000-01-23T04:56:07.000+00:00
        PartitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ServiceKind: Invalid
        ReportedLoad:
        - LastReportedUtc: 2000-01-23T04:56:07.000+00:00
          Value: 0
          Name: Name
        - LastReportedUtc: 2000-01-23T04:56:07.000+00:00
          Value: 0
          Name: Name
      properties:
        CurrentServiceOperation:
          $ref: '#/components/schemas/ServiceOperationName'
        CurrentServiceOperationStartTimeUtc:
          description: The start time of the current service operation in UTC format.
          format: date-time
          title: CurrentServiceOperationStartTimeUtc
          type: string
        PartitionId:
          description: An internal ID used by Service Fabric to uniquely identify
            a partition. This is a randomly generated GUID when the service was created.
            The partition id is unique and does not change for the lifetime of the
            service. If the same service was deleted and recreated the ids of its
            partitions would be different.
          format: uuid
          title: PartitionId
          type: string
        ReportedLoad:
          description: List of load reported by replica.
          items:
            $ref: '#/components/schemas/LoadMetricReportInfo'
          title: ReportedLoad
          type: array
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServiceName:
          description: The full name of the service with 'fabric:' URI scheme.
          title: ServiceName
          type: string
      required:
      - ServiceKind
      title: DeployedServiceReplicaDetailInfo
      type: object
    DeployedServiceReplicaInfo:
      description: Information about a Service Fabric service replica deployed on
        a node.
      discriminator:
        propertyName: ServiceKind
      example:
        ServiceTypeName: ServiceTypeName
        Address: Address
        CodePackageName: CodePackageName
        ServiceManifestName: ServiceManifestName
        ServiceName: ServiceName
        HostProcessId: HostProcessId
        ReplicaStatus: Invalid
        ServicePackageActivationId: ServicePackageActivationId
        PartitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ServiceKind: Invalid
      properties:
        Address:
          description: The last address returned by the replica in Open or ChangeRole.
          title: Address
          type: string
        CodePackageName:
          description: The name of the code package defined in the service manifest.
          title: CodePackageName
          type: string
        HostProcessId:
          description: Host process id of the process that is hosting the replica.
            This will be zero if the replica is down. In hyper-v containers this host
            process id will be from different kernel.
          format: int64
          title: HostProcessId
          type: string
        PartitionId:
          description: An internal ID used by Service Fabric to uniquely identify
            a partition. This is a randomly generated GUID when the service was created.
            The partition id is unique and does not change for the lifetime of the
            service. If the same service was deleted and recreated the ids of its
            partitions would be different.
          format: uuid
          title: PartitionId
          type: string
        ReplicaStatus:
          $ref: '#/components/schemas/ReplicaStatus'
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServiceManifestName:
          description: The name of the service manifest.
          title: ServiceManifestName
          type: string
        ServiceName:
          description: The full name of the service with 'fabric:' URI scheme.
          title: ServiceName
          type: string
        ServicePackageActivationId:
          description: |
            The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
            is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
            is always an empty string.
          title: ServicePackageActivationId
          type: string
        ServiceTypeName:
          description: Name of the service type as specified in the service manifest.
          title: ServiceTypeName
          type: string
      required:
      - ServiceKind
      title: DeployedServiceReplicaInfo
      type: object
    DeployedServiceReplicaInfoList:
      description: List of deployed service replica information.
      items:
        $ref: '#/components/schemas/DeployedServiceReplicaInfo'
      type: array
    DeployedServiceTypeInfo:
      description: "Information about service type deployed on a node, information\
        \ such as the status of the service type registration on a node."
      example:
        ServiceTypeName: ServiceTypeName
        Status: Invalid
        CodePackageName: CodePackageName
        ServiceManifestName: ServiceManifestName
        ServicePackageActivationId: ServicePackageActivationId
      properties:
        CodePackageName:
          description: The name of the code package defined in the service manifest.
          title: CodePackageName
          type: string
        ServiceManifestName:
          description: The name of the service manifest.
          title: ServiceManifestName
          type: string
        ServicePackageActivationId:
          description: |
            The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
            is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
            is always an empty string.
          title: ServicePackageActivationId
          type: string
        ServiceTypeName:
          description: Name of the service type as specified in the service manifest.
          title: ServiceTypeName
          type: string
        Status:
          $ref: '#/components/schemas/ServiceTypeRegistrationStatus'
      title: DeployedServiceTypeInfo
      type: object
    DeployedServiceTypeInfoList:
      description: List of information about service type deployed on a node.
      items:
        $ref: '#/components/schemas/DeployedServiceTypeInfo'
      type: array
    DeployedStatefulServiceReplicaDetailInfo:
      allOf:
      - $ref: '#/components/schemas/DeployedServiceReplicaDetailInfo'
      - description: DeployedStatefulServiceReplicaDetailInfo
        properties:
          CurrentReplicatorOperation:
            $ref: '#/components/schemas/ReplicatorOperationName'
          DeployedServiceReplicaQueryResult:
            $ref: '#/components/schemas/DeployedStatefulServiceReplicaInfo'
          ReadStatus:
            $ref: '#/components/schemas/PartitionAccessStatus'
          ReplicaId:
            $ref: '#/components/schemas/ReplicaId'
          ReplicaStatus:
            $ref: '#/components/schemas/KeyValueStoreReplicaStatus'
          ReplicatorStatus:
            $ref: '#/components/schemas/ReplicatorStatus'
          WriteStatus:
            $ref: '#/components/schemas/PartitionAccessStatus'
        type: object
      description: "Information about a stateful replica running in a code package.\
        \ Please note DeployedServiceReplicaQueryResult will contain duplicate data\
        \ like ServiceKind, ServiceName, PartitionId and replicaId."
      x-ms-discriminator-value: Stateful
    DeployedStatefulServiceReplicaInfo:
      allOf:
      - $ref: '#/components/schemas/DeployedServiceReplicaInfo'
      - description: DeployedStatefulServiceReplicaInfo
        properties:
          ReconfigurationInformation:
            $ref: '#/components/schemas/ReconfigurationInformation'
          ReplicaId:
            $ref: '#/components/schemas/ReplicaId'
          ReplicaRole:
            $ref: '#/components/schemas/ReplicaRole'
        type: object
      description: Information about a stateful service replica deployed on a node.
      title: DeployedStatefulServiceReplicaInfo
      x-ms-discriminator-value: Stateful
    DeployedStatelessServiceInstanceDetailInfo:
      allOf:
      - $ref: '#/components/schemas/DeployedServiceReplicaDetailInfo'
      - description: DeployedStatelessServiceInstanceDetailInfo
        properties:
          DeployedServiceReplicaQueryResult:
            $ref: '#/components/schemas/DeployedStatelessServiceInstanceInfo'
          InstanceId:
            $ref: '#/components/schemas/InstanceId'
        type: object
      description: "Information about a stateless instance running in a code package.\
        \ Please note that DeployedServiceReplicaQueryResult will contain duplicate\
        \ data like ServiceKind, ServiceName, PartitionId and InstanceId."
      x-ms-discriminator-value: Stateless
    DeployedStatelessServiceInstanceInfo:
      allOf:
      - $ref: '#/components/schemas/DeployedServiceReplicaInfo'
      - description: DeployedStatelessServiceInstanceInfo
        properties:
          InstanceId:
            $ref: '#/components/schemas/InstanceId'
        type: object
      description: Information about a stateless service instance deployed on a node.
      title: DeployedStatelessServiceInstanceInfo
      x-ms-discriminator-value: Stateless
    DeploymentName:
      description: The name of the deployment.
      title: Name
      type: string
    DeploymentStatus:
      description: |
        Specifies the status of a deployed application or service package on a Service Fabric node. Possible values are following.

          - Invalid - Indicates status of the application or service package is not known or invalid. The value is 0.
          - Downloading - Indicates the application or service package is being downloaded to the node from the ImageStore. The value is 1.
          - Activating - Indicates the application or service package is being activated. The value is 2.
          - Active - Indicates the application or service package is active the node. The value is 3.
          - Upgrading - Indicates the application or service package is being upgraded. The value is 4.
          - Deactivating - Indicates the application or service package is being deactivated. The value is 5.
      enum:
      - Invalid
      - Downloading
      - Activating
      - Active
      - Upgrading
      - Deactivating
      title: DeploymentStatus
      type: string
    DoublePropertyValue:
      allOf:
      - $ref: '#/components/schemas/PropertyValue'
      - description: DoublePropertyValue
        type: object
      description: Describes a Service Fabric property value of type Double.
      properties:
        Data:
          description: The data of the property value.
          format: double
          type: number
      required:
      - Data
      x-ms-discriminator-value: Double
    EnsureAvailabilitySafetyCheck:
      allOf:
      - $ref: '#/components/schemas/PartitionSafetyCheck'
      - description: EnsureAvailabilitySafetyCheck
        type: object
      description: Safety check that waits to ensure the availability of the partition.
        It waits until there are replicas available such that bringing down this replica
        will not cause availability loss for the partition.
      x-ms-discriminator-value: EnsureAvailability
    EnsurePartitionQurumSafetyCheck:
      allOf:
      - $ref: '#/components/schemas/PartitionSafetyCheck'
      - description: EnsurePartitionQurumSafetyCheck
        type: object
      description: Safety check that ensures that a quorum of replicas are not lost
        for a partition.
      x-ms-discriminator-value: EnsurePartitionQuorum
    EntityHealth:
      description: |
        Health information common to all entities in the cluster. It contains the aggregated health state, health events and unhealthy evaluation.
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        HealthEvents:
          description: The list of health events reported on the entity.
          items:
            $ref: '#/components/schemas/HealthEvent'
          title: HealthEvents
          type: array
        HealthStatistics:
          $ref: '#/components/schemas/HealthStatistics'
        UnhealthyEvaluations:
          description: List of health evaluations that resulted in the current aggregated
            health state.
          items:
            $ref: '#/components/schemas/HealthEvaluationWrapper'
          title: UnhealthyEvaluations
          type: array
      title: EntityHealth
      type: object
    EntityHealthState:
      description: A base type for the health state of various entities in the cluster.
        It contains the aggregated health state.
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
      title: EntityHealthState
      type: object
    EntityHealthStateChunk:
      description: A base type for the health state chunk of various entities in the
        cluster. It contains the aggregated health state.
      properties:
        HealthState:
          $ref: '#/components/schemas/HealthState'
      title: EntityHealthStateChunk
      type: object
    EntityHealthStateChunkList:
      description: A base type for the list of health state chunks found in the cluster.
        It contains the total number of health states that match the input filters.
      properties:
        TotalCount:
          description: |
            Total number of entity health state objects that match the specified filters from the cluster health chunk query description.
          format: int64
          title: TotalCount
          type: integer
      title: EntityHealthStateChunkList
      type: object
    EntityKind:
      description: |
        The entity type of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

          - Invalid - Indicates an invalid entity kind. All Service Fabric enumerations have the invalid type. The value is zero.
          - Node - Indicates the entity is a Service Fabric node. The value is 1.
          - Partition - Indicates the entity is a Service Fabric partition. The value is 2.
          - Service - Indicates the entity is a Service Fabric service. The value is 3.
          - Application - Indicates the entity is a Service Fabric application. The value is 4.
          - Replica - Indicates the entity is a Service Fabric replica. The value is 5.
          - DeployedApplication - Indicates the entity is a Service Fabric deployed application. The value is 6.
          - DeployedServicePackage - Indicates the entity is a Service Fabric deployed service package. The value is 7.
          - Cluster - Indicates the entity is a Service Fabric cluster. The value is 8.
      enum:
      - Invalid
      - Node
      - Partition
      - Service
      - Application
      - Replica
      - DeployedApplication
      - DeployedServicePackage
      - Cluster
      title: EntityKind
      type: string
    EntityKindHealthStateCount:
      description: Represents health state count for entities of the specified entity
        kind.
      example:
        HealthStateCount:
          WarningCount: 0
          OkCount: 0
          ErrorCount: 0
        EntityKind: Invalid
      properties:
        EntityKind:
          $ref: '#/components/schemas/EntityKind'
        HealthStateCount:
          $ref: '#/components/schemas/HealthStateCount'
      title: EntityKindHealthStateCount
      type: object
    EntryPointStatus:
      description: |
        Specifies the status of the code package entry point deployed on a Service Fabric node. Possible values are following.

          - Invalid - Indicates status of entry point is not known or invalid. The value is 0.
          - Pending - Indicates the entry point is scheduled to be started. The value is 1.
          - Starting - Indicates the entry point is being started. The value is 2.
          - Started - Indicates the entry point was started successfully and is running. The value is 3.
          - Stopping - Indicates the entry point is being stoppped. The value is 4.
          - Stopped - Indicates the entry point is not running. The value is 5.
      enum:
      - Invalid
      - Pending
      - Starting
      - Started
      - Stopping
      - Stopped
      title: EntryPointStatus
      type: string
    Epoch:
      description: |
        An Epoch is a configuration number for the partition as a whole. When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new Epoch from the ones which were sent by the old Primary replica.
      properties:
        ConfigurationVersion:
          description: The current configuration number of this Epoch. The configuration
            number is an increasing value that is updated whenever the configuration
            of this replica set changes.
          title: ConfigurationVersion
          type: string
        DataLossVersion:
          description: "The current dataloss number of this Epoch. The data loss number\
            \ property is an increasing value which is updated whenever data loss\
            \ is suspected, as when loss of a quorum of replicas in the replica set\
            \ that includes the Primary replica."
          title: DataLossVersion
          type: string
      title: Epoch
      type: object
    EventHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: EventHealthEvaluation
        properties:
          ConsiderWarningAsError:
            description: Indicates whether warnings are treated with the same severity
              as errors. The field is specified in the health policy used to evaluate
              the entity.
            type: boolean
          UnhealthyEvent:
            $ref: '#/components/schemas/HealthEvent'
        type: object
      description: |
        Represents health evaluation of a HealthEvent that was reported on the entity.
        The health evaluation is returned when evaluating health of an entity results in Error or Warning.
      x-ms-discriminator-value: Event
    ExecutingFaultsChaosEvent:
      allOf:
      - $ref: '#/components/schemas/ChaosEvent'
      - description: ExecutingFaultsChaosEvent
        properties:
          Faults:
            items:
              type: string
            type: array
        type: object
      description: Describes a Chaos event that gets generated when Chaos has decided
        on the faults for an iteration. This Chaos event contains the details of the
        faults as a list of strings.
      x-ms-discriminator-value: ExecutingFaults
    FabricCodeVersionInfo:
      description: Information about a Service Fabric code version.
      example:
        CodeVersion: CodeVersion
      properties:
        CodeVersion:
          description: The product version of Service Fabric.
          title: CodeVersion
          type: string
      title: FabricCodeVersionInfo
      type: object
    FabricCodeVersionInfoList:
      description: List of all Service Fabric code versions.
      items:
        $ref: '#/components/schemas/FabricCodeVersionInfo'
      type: array
    FabricConfigVersionInfo:
      description: Information about a Service Fabric config version.
      example:
        ConfigVersion: ConfigVersion
      properties:
        ConfigVersion:
          description: The config version of Service Fabric.
          title: ConfigVersion
          type: string
      title: FabricConfigVersionInfo
      type: object
    FabricConfigVersionInfoList:
      description: List of all Service Fabric config versions.
      items:
        $ref: '#/components/schemas/FabricConfigVersionInfo'
      type: array
    FabricError:
      description: |
        The REST API operations for Service Fabric return standard HTTP status codes. This type defines the additional information returned from the Service Fabric API operations that are not successful.
      example:
        Error:
          Message: Message
          Code: FABRIC_E_INVALID_PARTITION_KEY
      properties:
        Error:
          $ref: '#/components/schemas/FabricError_Error'
      required:
      - Error
      title: FabricError
      type: object
    FabricErrorCodes:
      description: |
        Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

          - Possible values of the error code for HTTP status code 400 (Bad Request)
            - "FABRIC_E_INVALID_PARTITION_KEY"
            - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
            - "FABRIC_E_INVALID_ADDRESS"
            - "FABRIC_E_APPLICATION_NOT_UPGRADING"
            - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
            - "FABRIC_E_FABRIC_NOT_UPGRADING"
            - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
            - "FABRIC_E_INVALID_CONFIGURATION"
            - "FABRIC_E_INVALID_NAME_URI"
            - "FABRIC_E_PATH_TOO_LONG"
            - "FABRIC_E_KEY_TOO_LARGE"
            - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
            - "FABRIC_E_INVALID_ATOMIC_GROUP"
            - "FABRIC_E_VALUE_EMPTY"

          - Possible values of the error code for HTTP status code 404 (Not Found)
            - "FABRIC_E_NODE_NOT_FOUND"
            - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
            - "FABRIC_E_APPLICATION_NOT_FOUND"
            - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
            - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
            - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
            - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
            - "FABRIC_E_PARTITION_NOT_FOUND"
            - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
            - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
            - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
            - "FABRIC_E_DIRECTORY_NOT_FOUND"
            - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
            - "FABRIC_E_FILE_NOT_FOUND"
            - "FABRIC_E_NAME_DOES_NOT_EXIST"
            - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
            - "FABRIC_E_ENUMERATION_COMPLETED"
            - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
            - "FABRIC_E_KEY_NOT_FOUND"
            - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"

          - Possible values of the error code for HTTP status code 409 (Conflict)
            - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
            - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
            - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
            - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
            - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
            - "FABRIC_E_SERVICE_ALREADY_EXISTS"
            - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
            - "FABRIC_E_APPLICATION_TYPE_IN_USE"
            - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
            - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
            - "FABRIC_E_FABRIC_VERSION_IN_USE"
            - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
            - "FABRIC_E_NAME_ALREADY_EXISTS"
            - "FABRIC_E_NAME_NOT_EMPTY"
            - "FABRIC_E_PROPERTY_CHECK_FAILED"
            - "FABRIC_E_SERVICE_METADATA_MISMATCH"
            - "FABRIC_E_SERVICE_TYPE_MISMATCH"
            - "FABRIC_E_HEALTH_STALE_REPORT"
            - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
            - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
            - "FABRIC_E_INSTANCE_ID_MISMATCH"

          - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
            - "FABRIC_E_VALUE_TOO_LARGE"

          - Possible values of the error code for HTTP status code 500 (Internal Server Error)
            - "FABRIC_E_NODE_IS_UP"

          - Possible values of the error code for HTTP status code 503 (Service Unavailable)
            - "FABRIC_E_NO_WRITE_QUORUM"
            - "FABRIC_E_NOT_PRIMARY"
            - "FABRIC_E_NOT_READY"
            - "FABRIC_E_RECONFIGURATION_PENDING"
            - "FABRIC_E_SERVICE_OFFLINE"
            - "E_ABORT"
            - "FABRIC_E_VALUE_TOO_LARGE"

          - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
            - "FABRIC_E_COMMUNICATION_ERROR"
            - "FABRIC_E_OPERATION_NOT_COMPLETE"
            - "FABRIC_E_TIMEOUT"
      enum:
      - FABRIC_E_INVALID_PARTITION_KEY
      - FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR
      - FABRIC_E_INVALID_ADDRESS
      - FABRIC_E_APPLICATION_NOT_UPGRADING
      - FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR
      - FABRIC_E_FABRIC_NOT_UPGRADING
      - FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR
      - FABRIC_E_INVALID_CONFIGURATION
      - FABRIC_E_INVALID_NAME_URI
      - FABRIC_E_PATH_TOO_LONG
      - FABRIC_E_KEY_TOO_LARGE
      - FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED
      - FABRIC_E_INVALID_ATOMIC_GROUP
      - FABRIC_E_VALUE_EMPTY
      - FABRIC_E_NODE_NOT_FOUND
      - FABRIC_E_APPLICATION_TYPE_NOT_FOUND
      - FABRIC_E_APPLICATION_NOT_FOUND
      - FABRIC_E_SERVICE_TYPE_NOT_FOUND
      - FABRIC_E_SERVICE_DOES_NOT_EXIST
      - FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND
      - FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND
      - FABRIC_E_PARTITION_NOT_FOUND
      - FABRIC_E_REPLICA_DOES_NOT_EXIST
      - FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST
      - FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND
      - FABRIC_E_DIRECTORY_NOT_FOUND
      - FABRIC_E_FABRIC_VERSION_NOT_FOUND
      - FABRIC_E_FILE_NOT_FOUND
      - FABRIC_E_NAME_DOES_NOT_EXIST
      - FABRIC_E_PROPERTY_DOES_NOT_EXIST
      - FABRIC_E_ENUMERATION_COMPLETED
      - FABRIC_E_SERVICE_MANIFEST_NOT_FOUND
      - FABRIC_E_KEY_NOT_FOUND
      - FABRIC_E_HEALTH_ENTITY_NOT_FOUND
      - FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS
      - FABRIC_E_APPLICATION_ALREADY_EXISTS
      - FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION
      - FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS
      - FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS
      - FABRIC_E_SERVICE_ALREADY_EXISTS
      - FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS
      - FABRIC_E_APPLICATION_TYPE_IN_USE
      - FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION
      - FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS
      - FABRIC_E_FABRIC_VERSION_IN_USE
      - FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS
      - FABRIC_E_NAME_ALREADY_EXISTS
      - FABRIC_E_NAME_NOT_EMPTY
      - FABRIC_E_PROPERTY_CHECK_FAILED
      - FABRIC_E_SERVICE_METADATA_MISMATCH
      - FABRIC_E_SERVICE_TYPE_MISMATCH
      - FABRIC_E_HEALTH_STALE_REPORT
      - FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED
      - FABRIC_E_NODE_HAS_NOT_STOPPED_YET
      - FABRIC_E_INSTANCE_ID_MISMATCH
      - FABRIC_E_VALUE_TOO_LARGE
      - FABRIC_E_NO_WRITE_QUORUM
      - FABRIC_E_NOT_PRIMARY
      - FABRIC_E_NOT_READY
      - FABRIC_E_RECONFIGURATION_PENDING
      - FABRIC_E_SERVICE_OFFLINE
      - E_ABORT
      - FABRIC_E_COMMUNICATION_ERROR
      - FABRIC_E_OPERATION_NOT_COMPLETE
      - FABRIC_E_TIMEOUT
      - FABRIC_E_NODE_IS_UP
      title: FabricErrorCodes
      type: string
    FabricError_Error:
      description: Error object containing error code and error message.
      example:
        Message: Message
        Code: FABRIC_E_INVALID_PARTITION_KEY
      properties:
        Code:
          $ref: '#/components/schemas/FabricErrorCodes'
        Message:
          description: Error message.
          title: Message
          type: string
      required:
      - Code
      title: FabricError_Error
      type: object
    FabricName:
      description: "The Service Fabric name, including the 'fabric:' URI scheme."
      title: FabricName
      type: string
    FabricReplicaStatus:
      description: |
        Specifies the status of the replica. Possible values are following.
          - Invalid - Indicates that the read or write operation access status is not valid. This value is not returned to the caller.
          - Down - Indicates that the replica is down.
          - Up - Indicates that the replica is up.
      enum:
      - Invalid
      - Down
      - Up
      type: string
    FailedPropertyBatchInfo:
      allOf:
      - $ref: '#/components/schemas/PropertyBatchInfo'
      - description: FailedPropertyBatchInfo
        type: object
      description: Derived from PropertyBatchInfo. Represents the property batch failing.
        Contains information about the specific batch failure.
      example:
        ErrorMessage: ErrorMessage
        OperationIndex: 0
      properties:
        ErrorMessage:
          description: The error message of the failed operation. Describes the exception
            thrown due to the first unsuccessful operation in the property batch.
          title: ErrorMessage
          type: string
        OperationIndex:
          description: The index of the unsuccessful operation in the property batch.
          title: OperationIndex
          type: integer
      title: FailedPropertyBatchInfo
      x-ms-discriminator-value: Failed
    FailedUpgradeDomainProgressObject:
      description: The detailed upgrade progress for nodes in the current upgrade
        domain at the point of failure.
      example:
        DomainName: DomainName
        NodeUpgradeProgressList:
        - NodeName: NodeName
          PendingSafetyChecks:
          - SafetyCheck:
              Kind: Invalid
          - SafetyCheck:
              Kind: Invalid
          UpgradePhase: Invalid
        - NodeName: NodeName
          PendingSafetyChecks:
          - SafetyCheck:
              Kind: Invalid
          - SafetyCheck:
              Kind: Invalid
          UpgradePhase: Invalid
      properties:
        DomainName:
          description: The name of the upgrade domain
          title: UpgradeDomainName
          type: string
        NodeUpgradeProgressList:
          description: List of upgrading nodes and their statuses
          items:
            $ref: '#/components/schemas/NodeUpgradeProgressInfo'
          title: NodeUpgradeProgressInfoList
          type: array
      title: FailedUpgradeDomainProgressObject
      type: object
    FailureAction:
      description: |
        The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations.

            - Invalid - Indicates the failure action is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
            - Rollback - The upgrade will start rolling back automatically. The value is 1
            - Manual - The upgrade will switch to UnmonitoredManual upgrade mode. The value is 2
      enum:
      - Invalid
      - Rollback
      - Manual
      title: FailureAction
      type: string
    FailureReason:
      description: |
        The cause of an upgrade failure that resulted in FailureAction being executed.

            - None - Indicates the reason is invalid or unknown. All Service Fabric enumerations have the invalid type. The value is zero.
            - Interrupted - There was an external request to rollback the upgrade. The value is 1
            - HealthCheck - The upgrade failed due to health policy violations. The value is 2
            - UpgradeDomainTimeout - An upgrade domain took longer than the allowed upgrade domain timeout to process. The value is 3
            - UpgradeTimeout - The overall upgrade took longer than the allowed upgrade timeout to process. The value is 4
      enum:
      - None
      - Interrupted
      - HealthCheck
      - UpgradeDomainTimeout
      - UpgradeTimeout
      title: FailureReason
      type: string
    FailureUpgradeDomainProgressInfo:
      description: Information about the upgrade domain progress at the time of upgrade
        failure.
      example:
        DomainName: DomainName
        NodeUpgradeProgressList:
        - NodeName: NodeName
          PendingSafetyChecks:
          - SafetyCheck:
              Kind: Invalid
          - SafetyCheck:
              Kind: Invalid
          UpgradePhase: Invalid
        - NodeName: NodeName
          PendingSafetyChecks:
          - SafetyCheck:
              Kind: Invalid
          - SafetyCheck:
              Kind: Invalid
          UpgradePhase: Invalid
      properties:
        DomainName:
          description: The name of the upgrade domain
          title: UpgradeDomainName
          type: string
        NodeUpgradeProgressList:
          description: List of upgrading nodes and their statuses
          items:
            $ref: '#/components/schemas/NodeUpgradeProgressInfo'
          title: NodeUpgradeProgressInfoList
          type: array
      title: FailureUpgradeDomainProgressInfo
      type: object
    FileInfo:
      description: Information about a image store file.
      example:
        StoreRelativePath: StoreRelativePath
        FileVersion:
          EpochDataLossNumber: EpochDataLossNumber
          VersionNumber: VersionNumber
        ModifiedDate: 2000-01-23T04:56:07.000+00:00
        FileSize: FileSize
      properties:
        FileSize:
          description: The size of file in bytes.
          title: FileSize
          type: string
        FileVersion:
          $ref: '#/components/schemas/FileVersion'
        ModifiedDate:
          description: The date and time when the image store file was last modified.
          format: date-time
          title: ModifiedDate
          type: string
        StoreRelativePath:
          description: The file path relative to the image store root path.
          title: StoreRelativePath
          type: string
      title: FileInfo
      type: object
    FileVersion:
      description: Information about the version of image store file.
      example:
        EpochDataLossNumber: EpochDataLossNumber
        VersionNumber: VersionNumber
      properties:
        EpochDataLossNumber:
          description: The epoch data loss number of image store file is used to indicate
            the status of data loss.
          title: EpochDataLossNumber
          type: string
        VersionNumber:
          description: The current iamge store version number for the file is used
            in image store for checking whether it need to be updated.
          title: VersionNumber
          type: string
      title: FileVersion
      type: object
    FolderInfo:
      description: Information about a image store folder. It inclues how many files
        this folder contains and its image store relative path.
      example:
        FileCount: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        StoreRelativePath: StoreRelativePath
      properties:
        FileCount:
          description: The number of files from within the image store folder.
          format: uuid
          title: FileCount
          type: string
        StoreRelativePath:
          description: The remote location within image store. This path is relative
            to the image store root.
          title: StoreRelativePath
          type: string
      title: FolderInfo
      type: object
    ForceRestart:
      default: false
      description: "If true, then processes are forcefully restarted during upgrade\
        \ even when the code version has not changed (the upgrade only changes configuration\
        \ or data)."
      title: ForceRestart
      type: boolean
    GetPropertyBatchOperation:
      allOf:
      - $ref: '#/components/schemas/PropertyBatchOperation'
      - description: GetPropertyBatchOperation
        type: object
      description: |
        Represents a PropertyBatchOperation that gets the specified property if it exists.  Note that if one PropertyBatchOperation in a PropertyBatch fails,  the entire batch fails and cannot be committed in a transactional manner.
      properties:
        IncludeValue:
          default: false
          description: |
            Whether or not to return the property value with the metadata.  True if values should be returned with the metadata; False to return only property metadata.
          type: boolean
      x-ms-discriminator-value: Get
    GuidPropertyValue:
      allOf:
      - $ref: '#/components/schemas/PropertyValue'
      - description: GuidPropertyValue
        type: object
      description: Describes a Service Fabric property value of type Guid.
      properties:
        Data:
          description: The data of the property value.
          format: uuid
          type: string
      required:
      - Data
      x-ms-discriminator-value: Guid
    HealthCheckRetryTimeout:
      default: PT0H10M0S
      description: "The amount of time to retry health evaluation when the application\
        \ or cluster is unhealthy before FailureAction is executed. It is first interpreted\
        \ as a string representing an ISO 8601 duration. If that fails, then it is\
        \ interpreted as a number representing the total number of milliseconds."
      title: HealthCheckRetryTimeout
      type: string
    HealthCheckStableDuration:
      default: PT0H2M0S
      description: "The amount of time that the application or cluster must remain\
        \ healthy before the upgrade proceeds to the next upgrade domain. It is first\
        \ interpreted as a string representing an ISO 8601 duration. If that fails,\
        \ then it is interpreted as a number representing the total number of milliseconds."
      title: HealthCheckStableDuration
      type: string
    HealthCheckWaitDuration:
      default: "0"
      description: "The amount of time to wait after completing an upgrade domain\
        \ before applying health policies. It is first interpreted as a string representing\
        \ an ISO 8601 duration. If that fails, then it is interpreted as a number\
        \ representing the total number of milliseconds."
      title: HealthCheckWaitDuration
      type: string
    HealthEvaluation:
      description: Represents a health evaluation which describes the data and the
        algorithm used by health manager to evaluate the health of an entity.
      discriminator:
        propertyName: Kind
      example:
        AggregatedHealthState: null
        Description: Description
        Kind: Invalid
      properties:
        AggregatedHealthState:
          $ref: '#/components/schemas/HealthState'
        Description:
          description: "Description of the health evaluation, which represents a summary\
            \ of the evaluation process."
          title: Description
          type: string
        Kind:
          $ref: '#/components/schemas/HealthEvaluationKind'
      required:
      - Kind
      title: HealthEvaluation
      type: object
    HealthEvaluationKind:
      description: |
        The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

          - Invalid - Indicates that the health evaluation is invalid. The value is zero.
          - Event - Indicates that the health evaluation is for a health event. The value is 1.
          - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
          - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
          - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
          - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
          - Services - Indicates that the health evaluation is for services of an application. The value is 6.
          - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
          - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
          - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
          - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
          - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
          - Node - Indicates that the health evaluation is for a node. The value is 12.
          - Replica - Indicates that the health evaluation is for a replica. The value is 13.
          - Partition - Indicates that the health evaluation is for a partition. The value is 14.
          - Service - Indicates that the health evaluation is for a service. The value is 15.
          - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
          - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
          - Application - Indicates that the health evaluation is for an application. The value is 18.
          - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
          - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
          - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
      enum:
      - Invalid
      - Event
      - Replicas
      - Partitions
      - DeployedServicePackages
      - DeployedApplications
      - Services
      - Nodes
      - Applications
      - SystemApplication
      - UpgradeDomainDeployedApplications
      - UpgradeDomainNodes
      - Replica
      - Partition
      - DeployedServicePackage
      - DeployedApplication
      - Service
      - Node
      - Application
      - DeltaNodesCheck
      - UpgradeDomainDeltaNodesCheck
      - ApplicationTypeApplications
      title: HealthEvaluationKind
      type: string
    HealthEvaluationWrapper:
      description: Wrapper object for health evaluation.
      example:
        HealthEvaluation:
          AggregatedHealthState: null
          Description: Description
          Kind: Invalid
      properties:
        HealthEvaluation:
          $ref: '#/components/schemas/HealthEvaluation'
      title: HealthEvaluationWrapper
      type: object
    HealthEvent:
      allOf:
      - $ref: '#/components/schemas/HealthInformation'
      - description: HealthEvent
        properties:
          IsExpired:
            description: "Returns true if the health event is expired, otherwise false."
            type: boolean
          LastErrorTransitionAt:
            description: |
              If the current health state is 'Error', this property returns the time at which the health report was first reported with 'Error'. For periodic reporting, many reports with the same state may have been generated however, this property returns only the date and time at the first 'Error' health report was received.

              If the current health state is 'Ok' or 'Warning', returns the date and time at which the health state was last in 'Error', before transitioning to a different state.

              If the health state was never 'Error', the value will be zero date-time.
            format: date-time
            type: string
          LastModifiedUtcTimestamp:
            description: The date and time when the health report was last modified
              by the health store.
            format: date-time
            type: string
          LastOkTransitionAt:
            description: |
              If the current health state is 'Ok', this property returns the time at which the health report was first reported with 'Ok'.
              For periodic reporting, many reports with the same state may have been generated.
              This property returns the date and time when the first 'Ok' health report was received.

              If the current health state is 'Error' or 'Warning', returns the date and time at which the health state was last in 'Ok', before transitioning to a different state.

              If the health state was never 'Ok', the value will be zero date-time.
            format: date-time
            type: string
          LastWarningTransitionAt:
            description: |
              If the current health state is 'Warning', this property returns the time at which the health report was first reported with 'Warning'. For periodic reporting, many reports with the same state may have been generated however, this property returns only the date and time at the first 'Warning' health report was received.

              If the current health state is 'Ok' or 'Error', returns the date and time at which the health state was last in 'Warning', before transitioning to a different state.

              If the health state was never 'Warning', the value will be zero date-time.
            format: date-time
            type: string
          SourceUtcTimestamp:
            description: The date and time when the health report was sent by the
              source.
            format: date-time
            type: string
        type: object
      description: |
        Represents health information reported on a health entity, such as cluster, application or node, with additional metadata added by the Health Manager.
      example:
        RemoveWhenExpired: true
        TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
        IsExpired: true
        Description: Description
        SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        SourceId: SourceId
        LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
        LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
        LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        SequenceNumber: SequenceNumber
        LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
        Property: Property
        HealthState: null
      title: HealthEvent
    HealthInformation:
      description: |
        Represents common health report information. It is included in all health reports sent to health store and in all health events returned by health queries.
      example:
        RemoveWhenExpired: true
        TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
        Description: Description
        SourceId: SourceId
        SequenceNumber: SequenceNumber
        Property: Property
        HealthState: Invalid
      properties:
        Description:
          description: |
            The description of the health information. It represents free text used to add human readable information about the report.
            The maximum string length for the description is 4096 characters.
            If the provided string is longer, it will be automatically truncated.
            When truncated, the last characters of the description contain a marker "[Truncated]", and total string size is 4096 characters.
            The presence of the marker indicates to users that truncation occurred.
            Note that when truncated, the description has less than 4096 characters from the original string.
          title: Description
          type: string
        HealthState:
          $ref: '#/components/schemas/HealthState'
        Property:
          description: |
            The property of the health information. An entity can have health reports for different properties.
            The property is a string and not a fixed enumeration to allow the reporter flexibility to categorize the state condition that triggers the report.
            For example, a reporter with SourceId "LocalWatchdog" can monitor the state of the available disk on a node,
            so it can report "AvailableDisk" property on that node.
            The same reporter can monitor the node connectivity, so it can report a property "Connectivity" on the same node.
            In the health store, these reports are treated as separate health events for the specified node.

            Together with the SourceId, the property uniquely identifies the health information.
          title: Property
          type: string
        RemoveWhenExpired:
          description: |
            Value that indicates whether the report is removed from health store when it expires.
            If set to true, the report is remopved from the health store after it expires.
            If set to false, the report is treated as an error when expired. The value of this property is false by default.
            When clients report periodically, they should set RemoveWhenExpired false (default).
            This way, is the reporter has issues (eg. deadlock) and can't report, the entity is evaluated at error when the health report expires.
            This flags the entity as being in Error health state.
          title: RemoveWhenExpired
          type: boolean
        SequenceNumber:
          description: |
            The sequence number for this health report as a numeric string.
            The report sequence number is used by the health store to detect stale reports.
            If not specified, a sequence number is auto-generated by the health client when a report is added.
          title: SequenceNumber
          type: string
        SourceId:
          description: |
            The source name which identifies the client/watchdog/system component which generated the health information.
          title: SourceId
          type: string
        TimeToLiveInMilliSeconds:
          description: |
            The duration for which this health report is valid. This field is using ISO8601 format for specifying the duration.
            When clients report periodically, they should send reports with higher frequency than time to live.
            If clients report on transition, they can set the time to live to infinite.
            When time to live expires, the health event that contains the health information
            is either removed from health store, if RemoveWhenExpired is true, or evaluated at error, if RemoveWhenExpired false.

            If not specified, time to live defaults to infinite value.
          format: duration
          title: TimeToLiveInMilliSeconds
          type: string
      required:
      - HealthState
      - Property
      - SourceId
      title: HealthInformation
      type: object
    HealthState:
      description: |
        The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

          - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
          - Ok - Indicates the health state is okay. The value is 1.
          - Warning - Indicates the health state is at a warning level. The value is 2.
          - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
          - Unknown - Indicates an unknown health status. The value is 65535.
      enum:
      - Invalid
      - Ok
      - Warning
      - Error
      - Unknown
      title: HealthState
      type: string
    HealthStateCount:
      description: |
        Represents information about how many health entities are in Ok, Warning and Error health state.
      example:
        WarningCount: 0
        OkCount: 0
        ErrorCount: 0
      properties:
        ErrorCount:
          description: The number of health entities with aggregated health state
            Error.
          format: int64
          minimum: 0
          title: ErrorCount
          type: integer
        OkCount:
          description: The number of health entities with aggregated health state
            Ok.
          format: int64
          minimum: 0
          title: OkCount
          type: integer
        WarningCount:
          description: The number of health entities with aggregated health state
            Warning.
          format: int64
          minimum: 0
          title: WarningCount
          type: integer
      title: HealthStateCount
      type: object
    HealthStatistics:
      description: |
        The health statistics of an entity, returned as part of the health query result when the query description is configured to include statistics.
        The statistics include health state counts for all children types of the current entity.
        For example, for cluster, the health statistics include health state counts for nodes, applications, services, partitions, replicas, deployed applications and deployed service packages.
        For partition, the health statistics include health counts for replicas.
      example:
        HealthStateCountList:
        - HealthStateCount:
            WarningCount: 0
            OkCount: 0
            ErrorCount: 0
          EntityKind: Invalid
        - HealthStateCount:
            WarningCount: 0
            OkCount: 0
            ErrorCount: 0
          EntityKind: Invalid
      properties:
        HealthStateCountList:
          description: |
            List of health state counts per entity kind, which keeps track of how many children of the queried entity are in Ok, Warning and Error state.
          items:
            $ref: '#/components/schemas/EntityKindHealthStateCount'
          title: HealthStateCountList
          type: array
      title: HealthStatistics
      type: object
    HostIsolationMode:
      description: |
        Specifies the isolation mode of main entry point of a code package when it's host type is ContainerHost. This is specified as part of container host policies in application manifest while importing service manifest. Possible values are following.

          - None - Indicates the isolation mode is not applicable for given HostType. The value is 0.
          - Process - This is the default isolation mode for a ContainerHost. The value is 1.
          - HyperV - Indicates the ContainerHost is a Hyper-V container. This applies to only Windows containers. The value is 2.
      enum:
      - None
      - Process
      - HyperV
      title: HostIsolationMode
      type: string
    HostType:
      description: |
        Specifies the type of host for main entry point of a code package as specified in service manifest. Possible values are following.

          - Invalid - Indicates the type of host is not known or invalid. The value is 0.
          - ExeHost - Indicates the host is an executable. The value is 1.
          - ContainerHost - Indicates the host is a container. The value is 2.
      enum:
      - Invalid
      - ExeHost
      - ContainerHost
      title: HostType
      type: string
    ImageStoreContent:
      description: Information about the image store content.
      example:
        StoreFolders:
        - FileCount: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          StoreRelativePath: StoreRelativePath
        - FileCount: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          StoreRelativePath: StoreRelativePath
        StoreFiles:
        - StoreRelativePath: StoreRelativePath
          FileVersion:
            EpochDataLossNumber: EpochDataLossNumber
            VersionNumber: VersionNumber
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          FileSize: FileSize
        - StoreRelativePath: StoreRelativePath
          FileVersion:
            EpochDataLossNumber: EpochDataLossNumber
            VersionNumber: VersionNumber
          ModifiedDate: 2000-01-23T04:56:07.000+00:00
          FileSize: FileSize
      properties:
        StoreFiles:
          description: The list of image store file info objects represents files
            found under the given image store relative path.
          items:
            $ref: '#/components/schemas/FileInfo'
          title: StoreFiles
          type: array
        StoreFolders:
          description: The list of image store folder info objectes represents subfolders
            found under the given image store relative path.
          items:
            $ref: '#/components/schemas/FolderInfo'
          title: StoreFolders
          type: array
      title: ImageStoreContent
      type: object
    ImageStoreCopyDescription:
      description: Information about how to copy image store content from one image
        store relative path to another image store relative path.
      example:
        RemoteSource: RemoteSource
        CheckMarkFile: true
        RemoteDestination: RemoteDestination
        SkipFiles:
        - SkipFiles
        - SkipFiles
      properties:
        CheckMarkFile:
          description: "Indicates whether to check mark file during copying. The property\
            \ is true if checking mark file is required, false otherwise. The mark\
            \ file is used to check whether the folder is well constructed. If the\
            \ property is true and mark file does not exist, the copy is skipped."
          title: CheckMarkFile
          type: boolean
        RemoteDestination:
          description: The relative path of destination image store content to be
            copied to.
          title: RemoteDestination
          type: string
        RemoteSource:
          description: The relative path of source image store content to be copied
            from.
          title: RemoteSource
          type: string
        SkipFiles:
          description: The list of the file names to be skipped for copying.
          items:
            type: string
          title: SkipFiles
          type: array
      required:
      - RemoteDestination
      - RemoteSource
      title: ImageStoreCopyDescription
      type: object
    ImageStoreRelativePath:
      description: The remote location within image store. This path is relative to
        the image store root.
      title: StoreRelativePath
      type: string
    InfrastructureServiceResponse:
      description: |
        This is a weakly-typed response stream to the client. It contains the JSON response from the infrastructure service without deserialization.
        The content of the response depends on which command was issued to the infrastructure service.
      format: binary
      type: string
    InstanceId:
      description: "Id of a stateless service instance. InstanceId is used by Service\
        \ Fabric to uniquely identify an instance of a partition of a stateless service.\
        \ It is unique within a partition and does not change for the lifetime of\
        \ the instance. If the instance is failedover on the same or different node,\
        \ it will get a different value for the InstanceId."
      type: string
    Int64PropertyValue:
      allOf:
      - $ref: '#/components/schemas/PropertyValue'
      - description: Int64PropertyValue
        type: object
      description: Describes a Service Fabric property value of type Int64.
      properties:
        Data:
          description: The data of the property value.
          format: int64
          type: string
      required:
      - Data
      x-ms-discriminator-value: Int64
    Int64RangePartitionInformation:
      allOf:
      - $ref: '#/components/schemas/PartitionInformation'
      - description: StatelessServicePartitionInfo
        type: object
      description: Describes the partition information for the integer range that
        is based on partition schemes.
      properties:
        HighKey:
          description: Specifies the maximum key value handled by this partition.
          type: string
        LowKey:
          description: Specifies the minimum key value handled by this partition.
          type: string
      x-ms-discriminator-value: Int64Range
    InvokeDataLossResult:
      description: Represents information about an operation in a terminal state (Completed
        or Faulted).
      example:
        ErrorCode: 0
        SelectedPartition:
          ServiceName: ServiceName
          PartitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ErrorCode:
          description: "If OperationState is Completed, this is 0.  If OperationState\
            \ is Faulted, this is an error code indicating the reason."
          format: int32
          title: ErrorCode
          type: integer
        SelectedPartition:
          $ref: '#/components/schemas/SelectedPartition'
      title: InvokeDataLossResult
      type: object
    InvokeQuorumLossResult:
      description: Represents information about an operation in a terminal state (Completed
        or Faulted).
      example:
        ErrorCode: 0
        SelectedPartition:
          ServiceName: ServiceName
          PartitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ErrorCode:
          description: "If OperationState is Completed, this is 0.  If OperationState\
            \ is Faulted, this is an error code indicating the reason."
          format: int32
          title: ErrorCode
          type: integer
        SelectedPartition:
          $ref: '#/components/schemas/SelectedPartition'
      title: InvokeQuorumLossResult
      type: object
    KeyValueStoreReplicaStatus:
      allOf:
      - $ref: '#/components/schemas/ReplicaStatusBase'
      - description: KeyValueStoreReplicaStatus
        properties:
          CopyNotificationCurrentKeyFilter:
            description: Value indicating the latest key-prefix filter applied to
              enumeration during the callback. Null if there is no pending callback.
            type: string
          CopyNotificationCurrentProgress:
            description: Value indicating the latest number of keys enumerated during
              the callback. 0 if there is no pending callback.
            type: string
          DatabaseLogicalSizeEstimate:
            description: Value indicating the estimated size of the underlying database.
            type: string
          DatabaseRowCountEstimate:
            description: Value indicating the estimated number of rows in the underlying
              database.
            type: string
          StatusDetails:
            description: Value indicating the current status details of the replica.
            type: string
        type: object
      description: Key value store related information for the replica.
      title: KeyValueStoreReplicaStatus
      x-ms-discriminator-value: KeyValueStore
    LoadMetricReport:
      description: "Represents the load metric report which contains the time metric\
        \ was reported, its name and value."
      example:
        LastReportedUtc: 2000-01-23T04:56:07.000+00:00
        Value: Value
        Name: Name
      properties:
        LastReportedUtc:
          description: Gets the UTC time when the load was reported.
          format: date-time
          title: LastReportedUtc
          type: string
        Name:
          description: The name of the load metric.
          title: Name
          type: string
        Value:
          description: The value of the load metric.
          format: int32
          title: Value
          type: string
      title: LoadMetricReport
      type: object
    LoadMetricReportInfo:
      description: Information about load reported by replica.
      example:
        LastReportedUtc: 2000-01-23T04:56:07.000+00:00
        Value: 0
        Name: Name
      properties:
        LastReportedUtc:
          description: The UTC time when the load is reported.
          format: date-time
          title: LastReportedUtc
          type: string
        Name:
          description: The name of the metric.
          title: Name
          type: string
        Value:
          description: The value of the load for the metric..
          format: int32
          title: Value
          type: integer
      title: LoadMetricReportInfo
      type: object
    LoadMetricReportInfoList:
      description: List of load reported by replica.
      items:
        $ref: '#/components/schemas/LoadMetricReportInfo'
      title: ReportedLoad
      type: array
    MonitoringPolicyDescription:
      description: Describes the parameters for monitoring an upgrade in Monitored
        mode.
      example:
        UpgradeDomainTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
        FailureAction: Invalid
        UpgradeTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
        HealthCheckStableDurationInMilliseconds: PT0H2M0S
        HealthCheckRetryTimeoutInMilliseconds: PT0H10M0S
        HealthCheckWaitDurationInMilliseconds: "0"
      properties:
        FailureAction:
          $ref: '#/components/schemas/FailureAction'
        HealthCheckRetryTimeoutInMilliseconds:
          default: PT0H10M0S
          description: "The amount of time to retry health evaluation when the application\
            \ or cluster is unhealthy before FailureAction is executed. It is first\
            \ interpreted as a string representing an ISO 8601 duration. If that fails,\
            \ then it is interpreted as a number representing the total number of\
            \ milliseconds."
          title: HealthCheckRetryTimeout
          type: string
        HealthCheckStableDurationInMilliseconds:
          default: PT0H2M0S
          description: "The amount of time that the application or cluster must remain\
            \ healthy before the upgrade proceeds to the next upgrade domain. It is\
            \ first interpreted as a string representing an ISO 8601 duration. If\
            \ that fails, then it is interpreted as a number representing the total\
            \ number of milliseconds."
          title: HealthCheckStableDuration
          type: string
        HealthCheckWaitDurationInMilliseconds:
          default: "0"
          description: "The amount of time to wait after completing an upgrade domain\
            \ before applying health policies. It is first interpreted as a string\
            \ representing an ISO 8601 duration. If that fails, then it is interpreted\
            \ as a number representing the total number of milliseconds."
          title: HealthCheckWaitDuration
          type: string
        UpgradeDomainTimeoutInMilliseconds:
          default: P10675199DT02H48M05.4775807S
          description: "The amount of time each upgrade domain has to complete before\
            \ FailureAction is executed. It is first interpreted as a string representing\
            \ an ISO 8601 duration. If that fails, then it is interpreted as a number\
            \ representing the total number of milliseconds."
          title: UpgradeDomainTimeout
          type: string
        UpgradeTimeoutInMilliseconds:
          default: P10675199DT02H48M05.4775807S
          description: "The amount of time the overall upgrade has to complete before\
            \ FailureAction is executed. It is first interpreted as a string representing\
            \ an ISO 8601 duration. If that fails, then it is interpreted as a number\
            \ representing the total number of milliseconds."
          title: UpgradeTimeout
          type: string
      title: MonitoringPolicyDescription
      type: object
    MoveCost:
      description: |
        Specifies the move cost for the service. Possible values are the following.

          - Zero - Zero move cost. This value is zero.
          - Low - Specifies the move cost of the service as Low. The value is 1.
          - Medium - Specifies the move cost of the service as Medium. The value is 2.
          - High - Specifies the move cost of the service as High. The value is 3.
      enum:
      - Zero
      - Low
      - Medium
      - High
      title: MoveCost
      type: string
    NameDescription:
      description: Describes a Service Fabric name.
      example:
        Name: Name
      properties:
        Name:
          description: "The Service Fabric name, including the 'fabric:' URI scheme."
          title: FabricName
          type: string
      required:
      - Name
      title: NameDescription
      type: object
    NamedPartitionInformation:
      allOf:
      - $ref: '#/components/schemas/PartitionInformation'
      - description: StatelessServicePartitionInfo
        type: object
      description: Describes the partition information for the name as a string that
        is based on partition schemes.
      properties:
        Name:
          description: Name of the partition.
          type: string
      x-ms-discriminator-value: Named
    NamedPartitionSchemeDescription:
      allOf:
      - $ref: '#/components/schemas/PartitionSchemeDescription'
      - description: NamedPartitionSchemeDescription
        type: object
      description: Describes the named partition scheme of the service.
      properties:
        Count:
          description: The number of partitions.
          type: integer
        Names:
          description: "Array of size specified by the ‘Count’ parameter, for the\
            \ names of the partitions."
          items:
            type: string
          type: array
      required:
      - Count
      - Names
      x-ms-discriminator-value: Named
    NextUpgradeDomain:
      description: The name of the next upgrade domain to be processed.
      title: NextUpgradeDomain
      type: string
    NodeDeactivationInfo:
      description: Information about the node deactivation. This information is valid
        for a node that is undergoing deactivation or has already been deactivated.
      example:
        PendingSafetyChecks:
        - SafetyCheck:
            Kind: Invalid
        - SafetyCheck:
            Kind: Invalid
        NodeDeactivationStatus: None
        NodeDeactivationIntent: Invalid
        NodeDeactivationTask:
        - NodeDeactivationTaskId:
            NodeDeactivationTaskType: Invalid
            Id: Id
          NodeDeactivationIntent: null
        - NodeDeactivationTaskId:
            NodeDeactivationTaskType: Invalid
            Id: Id
          NodeDeactivationIntent: null
      properties:
        NodeDeactivationIntent:
          $ref: '#/components/schemas/NodeDeactivationIntent'
        NodeDeactivationStatus:
          $ref: '#/components/schemas/NodeDeactivationStatus'
        NodeDeactivationTask:
          description: List of tasks representing the deactivation operation on the
            node.
          items:
            $ref: '#/components/schemas/NodeDeactivationTask'
          title: NodeDeactivationTask
          type: array
        PendingSafetyChecks:
          description: List of pending safety checks
          items:
            $ref: '#/components/schemas/SafetyCheckWrapper'
          title: SafetyCheckInfoList
          type: array
      title: NodeDeactivationInfo
      type: object
    NodeDeactivationIntent:
      description: |
        The intent or the reason for deactivating the node. Following are the possible values for it.

          - Invalid - Indicates the node deactivation intent is invalid. All Service Fabric enumerations have the invalid type. The value is zero. This value is not used.
          - Pause - Indicates that the node should be paused. The value is 1.
          - Restart - Indicates that the intent is for the node to be restarted after a short period of time. Service Fabric does not restart the node, this action is done outside of Service Fabric. The value is 2.
          - RemoveData - Indicates that the intent is to reimage the node. Service Fabric does not reimage the node, this action is done outside of Service Fabric. The value is 3.
          - RemoveNode - Indicates that the node is being decommissioned and is not expected to return. Service Fabric does not decommission the node, this action is done outside of Service Fabric. The value is 4.
      enum:
      - Invalid
      - Pause
      - Restart
      - RemoveData
      - RemoveNode
      title: NodeDeactivationIntent
      type: string
    NodeDeactivationStatus:
      description: |
        The status of node deactivation operation. Following are the possible values.

          - None - No status is associated with the task. The value is zero.
          - SafetyCheckInProgress - When a node is deactivated Service Fabric performs checks to ensure that the operation is safe to proceed to ensure avaiablity of the service and reliability of the state. This value indicates that one or more safety checks are in progress. The value is 1.
          - SafetyCheckComplete - When a node is deactivated Service Fabric performs checks to ensure that the operation is safe to proceed to ensure avaiablity of the service and reliability of the state. This value indicates that all safety checks have been completed. The value is 2.
          - Completed - The task is completed. The value is 3.
      enum:
      - None
      - SafetyCheckInProgress
      - SafetyCheckComplete
      - Completed
      title: NodeDeactivationStatus
      type: string
    NodeDeactivationTask:
      description: The task representing the deactivation operation on the node.
      example:
        NodeDeactivationTaskId:
          NodeDeactivationTaskType: Invalid
          Id: Id
        NodeDeactivationIntent: null
      properties:
        NodeDeactivationIntent:
          $ref: '#/components/schemas/NodeDeactivationIntent'
        NodeDeactivationTaskId:
          $ref: '#/components/schemas/NodeDeactivationTaskId'
      title: NodeDeactivationTask
      type: object
    NodeDeactivationTaskId:
      description: Identity of the task related to deactivation operation on the node.
      example:
        NodeDeactivationTaskType: Invalid
        Id: Id
      properties:
        Id:
          description: Value of the task id.
          title: Id
          type: string
        NodeDeactivationTaskType:
          $ref: '#/components/schemas/NodeDeactivationTaskType'
      title: NodeDeactivationTaskId
      type: object
    NodeDeactivationTaskList:
      description: List of tasks representing the deactivation operation on the node.
      items:
        $ref: '#/components/schemas/NodeDeactivationTask'
      title: NodeDeactivationTask
      type: array
    NodeDeactivationTaskType:
      description: |
        The type of the task that performed the node deactivation. Following are the possible values.

          - Invalid - Indicates the node deactivation task type is invalid. All Service Fabric enumerations have the invalid type. The value is zero. This value is not used.
          - Infrastructure - Specifies the task created by Infrastructure hosting the nodes. The value is 1.
          - Repair - Specifies the task that was created by the Repair Manager service. The value is 2.
          - Client - Specifies that the task was created by using the public API. The value is 3.
      enum:
      - Invalid
      - Infrastructure
      - Repair
      - Client
      title: NodeDeactivationTaskType
      type: string
    NodeHealth:
      allOf:
      - $ref: '#/components/schemas/EntityHealth'
      - description: NodeHealth
        properties:
          Name:
            $ref: '#/components/schemas/NodeName'
        type: object
      description: Information about the health of a Service Fabric node.
      example:
        AggregatedHealthState: Invalid
        HealthStatistics:
          HealthStateCountList:
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
        UnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        HealthEvents:
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        Name: null
      title: NodeHealth
    NodeHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: NodeHealthEvaluation
        properties:
          NodeName:
            $ref: '#/components/schemas/NodeName'
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for a node, containing information\
        \ about the data and the algorithm used by health store to evaluate health.\
        \ The evaluation is returned only when the aggregated health state is either\
        \ Error or Warning."
      x-ms-discriminator-value: Node
    NodeHealthState:
      allOf:
      - $ref: '#/components/schemas/EntityHealthState'
      - description: NodeHealthState
        properties:
          Id:
            $ref: '#/components/schemas/NodeId'
          Name:
            $ref: '#/components/schemas/NodeName'
        type: object
      description: "Represents the health state of a node, which contains the node\
        \ identifier and its aggregated health state."
      example:
        AggregatedHealthState: null
        Id:
          Id: Id
        Name: null
      title: NodeHealthState
    NodeHealthStateChunk:
      allOf:
      - $ref: '#/components/schemas/EntityHealthStateChunk'
      - description: NodeHealthStateChunk
        properties:
          NodeName:
            $ref: '#/components/schemas/NodeName'
        type: object
      description: |
        Represents the health state chunk of a node, which contains the node name and its aggregated health state.
      example:
        NodeName: null
        HealthState: null
      title: NodeHealthStateChunk
    NodeHealthStateChunkList:
      allOf:
      - $ref: '#/components/schemas/EntityHealthStateChunkList'
      - description: NodeHealthStateChunkList
        properties:
          Items:
            description: |
              The list of node health state chunks that respect the input filters in the chunk query.
            items:
              $ref: '#/components/schemas/NodeHealthStateChunk'
            type: array
        type: object
      description: |
        The list of node health state chunks in the cluster that respect the input filters in the chunk query. Returned by get cluster health state chunks query.
      example:
        TotalCount: 6
        Items:
        - NodeName: null
          HealthState: null
        - NodeName: null
          HealthState: null
      title: NodeHealthStateChunkList
    NodeHealthStateFilter:
      description: |
        Defines matching criteria to determine whether a node should be included in the returned cluster health chunk.
        One filter can match zero, one or multiple nodes, depending on its properties.
        Can be specified in the cluster health chunk query description.
      example:
        NodeNameFilter: NodeNameFilter
        HealthStateFilter: 7
      properties:
        HealthStateFilter:
          description: |
            The filter for the health state of the nodes. It allows selecting nodes if they match the desired health states.
            The possible values are integer value of one of the following health states. Only nodes that match the filter are returned. All nodes are used to evaluate the cluster aggregated health state.
            If not specified, default value is None, unless the node name is specified. If the filter has default value and node name is specified, the matching node is returned.
            The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
            For example, if the provided value is 6, it matches nodes with HealthState value of OK (2) and Warning (4).

            - Default - Default value. Matches any HealthState. The value is zero.
            - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
            - Ok - Filter that matches input with HealthState value Ok. The value is 2.
            - Warning - Filter that matches input with HealthState value Warning. The value is 4.
            - Error - Filter that matches input with HealthState value Error. The value is 8.
            - All - Filter that matches input with any HealthState value. The value is 65535.
          title: HealthStateFilter
          type: integer
        NodeNameFilter:
          description: |
            Name of the node that matches the filter. The filter is applied only to the specified node, if it exists.
            If the node doesn't exist, no node is returned in the cluster health chunk based on this filter.
            If the node exists, it is included in the cluster health chunk if the health state matches the other filter properties.
            If not specified, all nodes that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.
          title: NodeNameFilter
          type: string
      title: NodeHealthStateFilter
      type: object
    NodeId:
      description: An internal ID used by Service Fabric to uniquely identify a node.
        Node Id is deterministically generated from node name.
      example:
        Id: Id
      properties:
        Id:
          description: Value of the node Id. This is a 128 bit integer.
          title: Id
          type: string
      title: NodeId
      type: object
    NodeImpact:
      description: |
        Describes the expected impact of a repair to a particular node.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      properties:
        ImpactLevel:
          description: The level of impact expected.
          enum:
          - Invalid
          - None
          - Restart
          - RemoveData
          - RemoveNode
          title: ImpactLevel
          type: string
        NodeName:
          description: The name of the impacted node.
          title: NodeName
          type: string
      required:
      - NodeName
      title: NodeImpact
      type: object
    NodeInfo:
      description: Information about a node in Service Fabric cluster.
      example:
        NodeDownTimeInSeconds: NodeDownTimeInSeconds
        NodeDownAt: 2000-01-23T04:56:07.000+00:00
        UpgradeDomain: UpgradeDomain
        NodeUpTimeInSeconds: NodeUpTimeInSeconds
        InstanceId: InstanceId
        ConfigVersion: ConfigVersion
        FaultDomain: FaultDomain
        Name: Name
        IsStopped: true
        Type: Type
        IpAddressOrFQDN: IpAddressOrFQDN
        IsSeedNode: true
        CodeVersion: CodeVersion
        Id:
          Id: Id
        NodeUpAt: 2000-01-23T04:56:07.000+00:00
        NodeDeactivationInfo:
          PendingSafetyChecks:
          - SafetyCheck:
              Kind: Invalid
          - SafetyCheck:
              Kind: Invalid
          NodeDeactivationStatus: None
          NodeDeactivationIntent: Invalid
          NodeDeactivationTask:
          - NodeDeactivationTaskId:
              NodeDeactivationTaskType: Invalid
              Id: Id
            NodeDeactivationIntent: null
          - NodeDeactivationTaskId:
              NodeDeactivationTaskType: Invalid
              Id: Id
            NodeDeactivationIntent: null
        HealthState: Invalid
        NodeStatus: Invalid
      properties:
        CodeVersion:
          description: The version of Service Fabric binaries that the node is running.
          title: CodeVersion
          type: string
        ConfigVersion:
          description: The version of Service Fabric cluster manifest that the node
            is using.
          title: ConfigVersion
          type: string
        FaultDomain:
          description: The fault domain of the node.
          title: FaultDomain
          type: string
        HealthState:
          $ref: '#/components/schemas/HealthState'
        Id:
          $ref: '#/components/schemas/NodeId'
        InstanceId:
          description: "The id representing the node instance. While the Id of the\
            \ node is deterministically generated from the node name and remains same\
            \ across restarts, the InstanceId changes every time node restarts."
          title: InstanceId
          type: string
        IpAddressOrFQDN:
          description: The IP address or fully qualified domain name of the node.
          title: IpAddressOrFQDN
          type: string
        IsSeedNode:
          description: "Indicates if the node is a seed node or not. Returns true\
            \ if the node is a seed node, otherwise false. A quorum of seed nodes\
            \ are required for proper operation of Service Fabric cluster."
          title: IsSeedNode
          type: boolean
        IsStopped:
          description: "Indicates if the node is stopped by calling stop node API\
            \ or not. Returns true if the node is stopped, otherwise false."
          title: IsStopped
          type: boolean
        Name:
          description: The name of a Service Fabric node.
          title: NodeName
          type: string
        NodeDeactivationInfo:
          $ref: '#/components/schemas/NodeDeactivationInfo'
        NodeDownAt:
          description: Date time in UTC when the node went down. If node has never
            been down then this value will be zero date time.
          format: date-time
          title: NodeDownAt
          type: string
        NodeDownTimeInSeconds:
          description: Time in seconds since the node has been in NodeStatus Down.
            Value zero indicates node is not NodeStatus Down.
          title: NodeDownTimeInSeconds
          type: string
        NodeStatus:
          $ref: '#/components/schemas/NodeStatus'
        NodeUpAt:
          description: Date time in UTC when the node came up. If the node has never
            been up then this value will be zero date time.
          format: date-time
          title: NodeUpAt
          type: string
        NodeUpTimeInSeconds:
          description: Time in seconds since the node has been in NodeStatus Up. Value
            ero indicates that the node is not Up.
          title: NodeUpTimeInSeconds
          type: string
        Type:
          description: The type of the node.
          title: Type
          type: string
        UpgradeDomain:
          description: The upgrade domain of the node.
          title: UpgradeDomain
          type: string
      title: NodeInfo
      type: object
    NodeLoadInfo:
      description: Information about load on a Service Fabric node. It holds a summary
        of all metrics and their load on a node.
      example:
        NodeName: NodeName
        NodeLoadMetricInformation:
        - NodeBufferedCapacity: NodeBufferedCapacity
          IsCapacityViolation: true
          NodeCapacity: NodeCapacity
          NodeRemainingBufferedCapacity: NodeRemainingBufferedCapacity
          NodeRemainingCapacity: NodeRemainingCapacity
          Name: Name
          NodeLoad: NodeLoad
        - NodeBufferedCapacity: NodeBufferedCapacity
          IsCapacityViolation: true
          NodeCapacity: NodeCapacity
          NodeRemainingBufferedCapacity: NodeRemainingBufferedCapacity
          NodeRemainingCapacity: NodeRemainingCapacity
          Name: Name
          NodeLoad: NodeLoad
      properties:
        NodeLoadMetricInformation:
          description: List that contains metrics and their load information on this
            node.
          items:
            $ref: '#/components/schemas/NodeLoadMetricInformation'
          title: NodeLoadMetricInformation
          type: array
        NodeName:
          description: The name of a Service Fabric node.
          title: NodeName
          type: string
      title: NodeLoadInfo
      type: object
    NodeLoadMetricInformation:
      description: Represents data structure that contains load information for a
        certain metric on a node.
      example:
        NodeBufferedCapacity: NodeBufferedCapacity
        IsCapacityViolation: true
        NodeCapacity: NodeCapacity
        NodeRemainingBufferedCapacity: NodeRemainingBufferedCapacity
        NodeRemainingCapacity: NodeRemainingCapacity
        Name: Name
        NodeLoad: NodeLoad
      properties:
        IsCapacityViolation:
          description: Indicates if there is a capacity violation for this metric
            on the node.
          title: IsCapacityViolation
          type: boolean
        Name:
          description: Name of the metric for which this load information is provided.
          title: Name
          type: string
        NodeBufferedCapacity:
          description: The value that indicates the reserved capacity for this metric
            on the node.
          title: NodeBufferedCapacity
          type: string
        NodeCapacity:
          description: Total capacity on the node for this metric.
          title: NodeCapacity
          type: string
        NodeLoad:
          description: Current load on the node for this metric.
          title: NodeLoad
          type: string
        NodeRemainingBufferedCapacity:
          description: The remaining reserved capacity for this metric on the node.
          title: NodeRemainingBufferedCapacity
          type: string
        NodeRemainingCapacity:
          description: The remaining capacity on the node for this metric.
          title: NodeRemainingCapacity
          type: string
      title: NodeLoadMetricInformation
      type: object
    NodeName:
      description: The name of a Service Fabric node.
      title: NodeName
      type: string
    NodeRepairImpactDescription:
      allOf:
      - $ref: '#/components/schemas/RepairImpactDescriptionBase'
      - description: NodeRepairImpactDescription
        properties:
          NodeImpactList:
            description: The list of nodes impacted by a repair action and their respective
              expected impact.
            items:
              $ref: '#/components/schemas/NodeImpact'
            type: array
        type: object
      description: |
        Describes the expected impact of a repair on a set of nodes.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      x-ms-discriminator-value: Node
    NodeRepairTargetDescription:
      allOf:
      - $ref: '#/components/schemas/RepairTargetDescriptionBase'
      - description: NodeRepairTargetDescription
        properties:
          NodeNames:
            description: The list of nodes targeted by a repair action.
            items:
              type: string
            type: array
        type: object
      description: |
        Describes the list of nodes targeted by a repair action.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      x-ms-discriminator-value: Node
    NodeResult:
      description: Contains information about a node that was targeted by a user-induced
        operation.
      example:
        NodeName: NodeName
        NodeInstanceId: NodeInstanceId
      properties:
        NodeInstanceId:
          description: The node instance id.
          title: NodeInstanceId
          type: string
        NodeName:
          description: The name of a Service Fabric node.
          title: NodeName
          type: string
      title: NodeResult
      type: object
    NodeStatus:
      description: |
        The status of the node. Possible values are following.

          - Invalid - Indicates the node status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - Up - Indicates the node is up. The value is 1.
          - Down - Indicates the node is down. The value is 2.
          - Enabling - Indicates the node is in process of being enabled. The value is 3.
          - Disabling - Indicates the node is in the process of being disabled. The value is 4.
          - Disabled - Indicates the node is disabled. The value is 5.
          - Unknown - Indicates the node is unknown. A node would be in Unknown state if Service Fabric does not have authoritative information about that node. This can happen if the system learns about a node at runtime.The value is 6.
          - Removed - Indicates the node is removed. A node would be in Removed state if NodeStateRemoved API has been called for this node. In other words, Service Fabric has been informed that the persisted state on the node has been permanently lost. The value is 7.
      enum:
      - Invalid
      - Up
      - Down
      - Enabling
      - Disabling
      - Disabled
      - Unknown
      - Removed
      title: NodeStatus
      type: string
    NodeTransitionProgress:
      description: |
        Information about an NodeTransition operation.  This class contains an OperationState and a NodeTransitionResult.  The NodeTransitionResult is not valid until OperationState
        is Completed or Faulted.
      example:
        State: Invalid
        NodeTransitionResult:
          NodeResult:
            NodeName: NodeName
            NodeInstanceId: NodeInstanceId
          ErrorCode: 0
      properties:
        NodeTransitionResult:
          $ref: '#/components/schemas/NodeTransitionResult'
        State:
          $ref: '#/components/schemas/OperationState'
      title: NodeTransitionProgress
      type: object
    NodeTransitionResult:
      description: Represents information about an operation in a terminal state (Completed
        or Faulted).
      example:
        NodeResult:
          NodeName: NodeName
          NodeInstanceId: NodeInstanceId
        ErrorCode: 0
      properties:
        ErrorCode:
          description: "If OperationState is Completed, this is 0.  If OperationState\
            \ is Faulted, this is an error code indicating the reason."
          format: int32
          title: ErrorCode
          type: integer
        NodeResult:
          $ref: '#/components/schemas/NodeResult'
      title: NodeTransitionResult
      type: object
    NodeUpgradePhase:
      description: |
        The state of the upgrading node.

          - Invalid - Indicates the upgrade state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - PreUpgradeSafetyCheck - The upgrade has not started yet due to pending safety checks. The value is 1
          - Upgrading - The upgrade is in progress. The value is 2
          - PostUpgradeSafetyCheck - The upgrade has completed and post upgrade safety checks are being performed. The value is 3
      enum:
      - Invalid
      - PreUpgradeSafetyCheck
      - Upgrading
      - PostUpgradeSafetyCheck
      title: NodeUpgradePhase
      type: string
    NodeUpgradeProgressInfo:
      description: Information about the upgrading node and its status
      example:
        NodeName: NodeName
        PendingSafetyChecks:
        - SafetyCheck:
            Kind: Invalid
        - SafetyCheck:
            Kind: Invalid
        UpgradePhase: Invalid
      properties:
        NodeName:
          description: The name of a Service Fabric node.
          title: NodeName
          type: string
        PendingSafetyChecks:
          description: List of pending safety checks
          items:
            $ref: '#/components/schemas/SafetyCheckWrapper'
          title: SafetyCheckInfoList
          type: array
        UpgradePhase:
          $ref: '#/components/schemas/NodeUpgradePhase'
      title: NodeUpgradeProgressInfo
      type: object
    NodeUpgradeProgressInfoList:
      description: List of upgrading nodes and their statuses
      items:
        $ref: '#/components/schemas/NodeUpgradeProgressInfo'
      title: NodeUpgradeProgressInfoList
      type: array
    NodesHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: NodesHealthEvaluation
        properties:
          MaxPercentUnhealthyNodes:
            description: Maximum allowed percentage of unhealthy nodes from the ClusterHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of nodes found in the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for nodes, containing health evaluations\
        \ for each unhealthy node that impacted current aggregated health state. Can\
        \ be returned when evaluating cluster health and the aggregated health state\
        \ is either Error or Warning."
      x-ms-discriminator-value: Nodes
    OperationId:
      description: A GUID that identifies a call to this API.  This is also passed
        into the corresponding GetProgress API.
      format: uuid
      title: OperationId
      type: string
    OperationState:
      description: |
        - Invalid - The operation state is invalid.
        - Running - The operation is in progress.
        - RollingBack -  The operation is rolling back internal system state because it encountered a fatal error or was cancelled by the user.  "RollingBack"
           does not refer to user state.  For example, if CancelOperation is called on a command of type PartitionDataLoss,
           a state of "RollingBack" does not mean service data is being restored (assuming the command has progressed far enough to cause data loss).
           It means the system is rolling back/cleaning up internal system state associated with the command.
        - Completed - The operation has completed successfully and is no longer running.
        - Faulted - The operation has failed and is no longer running.
        - Cancelled - The operation was cancelled by the user using CancelOperation, and is no longer running.
        - ForceCancelled - The operation was cancelled by the user using CancelOperation, with the force parameter set to true.  It is no longer running.  Refer to CancelOperation for more details.
      enum:
      - Invalid
      - Running
      - RollingBack
      - Completed
      - Faulted
      - Cancelled
      - ForceCancelled
      title: OperationState
      type: string
    OperationStatus:
      description: "Contains the OperationId, OperationState, and OperationType for\
        \ user-induced operations."
      example:
        Type: Invalid
        OperationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        State: Invalid
      properties:
        OperationId:
          description: A GUID that identifies a call to this API.  This is also passed
            into the corresponding GetProgress API.
          format: uuid
          title: OperationId
          type: string
        State:
          $ref: '#/components/schemas/OperationState'
        Type:
          $ref: '#/components/schemas/OperationType'
      title: OperationStatus
      type: object
    OperationStatusList:
      description: A list of OperationStatus objects.
      items:
        $ref: '#/components/schemas/OperationStatus'
      type: array
    OperationType:
      description: |
        - Invalid - The operation state is invalid.
        - PartitionDataLoss - An operation started using the StartDataLoss API.
        - PartitionQuorumLoss - An operation started using the StartQuorumLoss API.
        - PartitionRestart - An operation started using the StartPartitionRestart API.
        - NodeTransition - An operation started using the StartNodeTransition API.
      enum:
      - Invalid
      - PartitionDataLoss
      - PartitionQuorumLoss
      - PartitionRestart
      - NodeTransition
      title: OperationType
      type: string
    PackageSharingPolicyInfo:
      description: Represents a policy for the package sharing.
      example:
        PackageSharingScope: None
        SharedPackageName: SharedPackageName
      properties:
        PackageSharingScope:
          $ref: '#/components/schemas/PackageSharingPolicyScope'
        SharedPackageName:
          description: "The name of code, configuration or data package that should\
            \ be shared."
          title: SharedPackageName
          type: string
      title: PackageSharingPolicyInfo
      type: object
    PackageSharingPolicyInfoList:
      description: List of package sharing policy information.
      items:
        $ref: '#/components/schemas/PackageSharingPolicyInfo'
      title: PackageSharingPolicy
      type: array
    PackageSharingPolicyScope:
      description: |
        Represents the scope for PackageSharingPolicy. This is specified during DeployServicePackageToNode operation. Possible values are following.

          - None - No package sharing policy scope. The value is 0.
          - All - Share all code, config and data packages from corresponding service manifest. The value is 1.
          - Code - Share all code packages from corresponding service manifest. The value is 2.
          - Config - Share all config packages from corresponding service manifest. The value is 3.
          - Data - Share all data packages from corresponding service manifest. The value is 4.
      enum:
      - None
      - All
      - Code
      - Config
      - Data
      title: PackageSharingPolicyScope
      type: string
    PagedApplicationInfoList:
      description: The list of applications in the cluster. The list is paged when
        all of the results cannot fit in a single message. The next set of results
        can be obtained by executing the same query with the continuation token provided
        in this list.
      example:
        ContinuationToken: ContinuationToken
        Items:
        - Status: Invalid
          TypeName: TypeName
          Parameters:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          ApplicationDefinitionKind: Invalid
          TypeVersion: TypeVersion
          Id: Id
          HealthState: Invalid
          Name: Name
        - Status: Invalid
          TypeName: TypeName
          Parameters:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          ApplicationDefinitionKind: Invalid
          TypeVersion: TypeVersion
          Id: Id
          HealthState: Invalid
          Name: Name
      properties:
        ContinuationToken:
          description: "The continuation token parameter is used to obtain next set\
            \ of results. The continuation token is included in the response of the\
            \ API when the results from the system do not fit in a single response.\
            \ When this value is passed to the next API call, the API returns next\
            \ set of results. If there are no further results then the continuation\
            \ token is not included in the response."
          title: ContinuationToken
          type: string
        Items:
          items:
            $ref: '#/components/schemas/ApplicationInfo'
          title: Items
          type: array
      title: PagedApplicationInfoList
      type: object
    PagedApplicationTypeInfoList:
      description: The list of application types that are provisioned or being provisioned
        in the cluster. The list is paged when all of the results cannot fit in a
        single message. The next set of results can be obtained by executing the same
        query with the continuation token provided in this list.
      example:
        ContinuationToken: ContinuationToken
        Items:
        - Status: Invalid
          Version: Version
          StatusDetails: StatusDetails
          ApplicationTypeDefinitionKind: Invalid
          DefaultParameterList:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          Name: Name
        - Status: Invalid
          Version: Version
          StatusDetails: StatusDetails
          ApplicationTypeDefinitionKind: Invalid
          DefaultParameterList:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          Name: Name
      properties:
        ContinuationToken:
          description: "The continuation token parameter is used to obtain next set\
            \ of results. The continuation token is included in the response of the\
            \ API when the results from the system do not fit in a single response.\
            \ When this value is passed to the next API call, the API returns next\
            \ set of results. If there are no further results then the continuation\
            \ token is not included in the response."
          title: ContinuationToken
          type: string
        Items:
          items:
            $ref: '#/components/schemas/ApplicationTypeInfo'
          title: Items
          type: array
      title: PagedApplicationTypeInfoList
      type: object
    PagedComposeDeploymentStatusInfoList:
      description: The list of compose deployments in the cluster. The list is paged
        when all of the results cannot fit in a single message. The next set of results
        can be obtained by executing the same query with the continuation token provided
        in this list.
      example:
        ContinuationToken: ContinuationToken
        Items:
        - Status: Invalid
          ApplicationName: ApplicationName
          StatusDetails: StatusDetails
          Name: Name
        - Status: Invalid
          ApplicationName: ApplicationName
          StatusDetails: StatusDetails
          Name: Name
      properties:
        ContinuationToken:
          description: "The continuation token parameter is used to obtain next set\
            \ of results. The continuation token is included in the response of the\
            \ API when the results from the system do not fit in a single response.\
            \ When this value is passed to the next API call, the API returns next\
            \ set of results. If there are no further results then the continuation\
            \ token is not included in the response."
          title: ContinuationToken
          type: string
        Items:
          items:
            $ref: '#/components/schemas/ComposeDeploymentStatusInfo'
          title: Items
          type: array
      title: PagedComposeDeploymentStatusInfoList
      type: object
    PagedNodeInfoList:
      description: The list of nodes in the cluster. The list is paged when all of
        the results cannot fit in a single message. The next set of results can be
        obtained by executing the same query with the continuation token provided
        in this list.
      example:
        ContinuationToken: ContinuationToken
        Items:
        - NodeDownTimeInSeconds: NodeDownTimeInSeconds
          NodeDownAt: 2000-01-23T04:56:07.000+00:00
          UpgradeDomain: UpgradeDomain
          NodeUpTimeInSeconds: NodeUpTimeInSeconds
          InstanceId: InstanceId
          ConfigVersion: ConfigVersion
          FaultDomain: FaultDomain
          Name: Name
          IsStopped: true
          Type: Type
          IpAddressOrFQDN: IpAddressOrFQDN
          IsSeedNode: true
          CodeVersion: CodeVersion
          Id:
            Id: Id
          NodeUpAt: 2000-01-23T04:56:07.000+00:00
          NodeDeactivationInfo:
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            NodeDeactivationStatus: None
            NodeDeactivationIntent: Invalid
            NodeDeactivationTask:
            - NodeDeactivationTaskId:
                NodeDeactivationTaskType: Invalid
                Id: Id
              NodeDeactivationIntent: null
            - NodeDeactivationTaskId:
                NodeDeactivationTaskType: Invalid
                Id: Id
              NodeDeactivationIntent: null
          HealthState: Invalid
          NodeStatus: Invalid
        - NodeDownTimeInSeconds: NodeDownTimeInSeconds
          NodeDownAt: 2000-01-23T04:56:07.000+00:00
          UpgradeDomain: UpgradeDomain
          NodeUpTimeInSeconds: NodeUpTimeInSeconds
          InstanceId: InstanceId
          ConfigVersion: ConfigVersion
          FaultDomain: FaultDomain
          Name: Name
          IsStopped: true
          Type: Type
          IpAddressOrFQDN: IpAddressOrFQDN
          IsSeedNode: true
          CodeVersion: CodeVersion
          Id:
            Id: Id
          NodeUpAt: 2000-01-23T04:56:07.000+00:00
          NodeDeactivationInfo:
            PendingSafetyChecks:
            - SafetyCheck:
                Kind: Invalid
            - SafetyCheck:
                Kind: Invalid
            NodeDeactivationStatus: None
            NodeDeactivationIntent: Invalid
            NodeDeactivationTask:
            - NodeDeactivationTaskId:
                NodeDeactivationTaskType: Invalid
                Id: Id
              NodeDeactivationIntent: null
            - NodeDeactivationTaskId:
                NodeDeactivationTaskType: Invalid
                Id: Id
              NodeDeactivationIntent: null
          HealthState: Invalid
          NodeStatus: Invalid
      properties:
        ContinuationToken:
          description: "The continuation token parameter is used to obtain next set\
            \ of results. The continuation token is included in the response of the\
            \ API when the results from the system do not fit in a single response.\
            \ When this value is passed to the next API call, the API returns next\
            \ set of results. If there are no further results then the continuation\
            \ token is not included in the response."
          title: ContinuationToken
          type: string
        Items:
          items:
            $ref: '#/components/schemas/NodeInfo'
          title: Items
          type: array
      title: PagedNodeInfoList
      type: object
    PagedPropertyInfoList:
      description: The paged list of Service Fabric properties under a given name.
        The list is paged when all of the results cannot fit in a single message.
        The next set of results can be obtained by executing the same query with the
        continuation token provided in this list.
      example:
        IsConsistent: true
        ContinuationToken: ContinuationToken
        Properties:
        - Metadata:
            TypeId: Invalid
            CustomTypeId: CustomTypeId
            LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
            Parent: Parent
            SequenceNumber: SequenceNumber
            SizeInBytes: 0
          Value:
            Kind: null
          Name: Name
        - Metadata:
            TypeId: Invalid
            CustomTypeId: CustomTypeId
            LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
            Parent: Parent
            SequenceNumber: SequenceNumber
            SizeInBytes: 0
          Value:
            Kind: null
          Name: Name
      properties:
        ContinuationToken:
          description: "The continuation token parameter is used to obtain next set\
            \ of results. The continuation token is included in the response of the\
            \ API when the results from the system do not fit in a single response.\
            \ When this value is passed to the next API call, the API returns next\
            \ set of results. If there are no further results then the continuation\
            \ token is not included in the response."
          title: ContinuationToken
          type: string
        IsConsistent:
          description: "Indicates whether any property under the given name has been\
            \ modified during the enumeration. If there was a modification, this property\
            \ value is false."
          title: IsConsistent
          type: boolean
        Properties:
          items:
            $ref: '#/components/schemas/PropertyInfo'
          title: Properties
          type: array
      title: PagedPropertyInfoList
      type: object
    PagedReplicaInfoList:
      description: The list of replicas in the cluster for a given partition. The
        list is paged when all of the results cannot fit in a single message. The
        next set of results can be obtained by executing the same query with the continuation
        token provided in this list.
      example:
        ContinuationToken: ContinuationToken
        Items:
        - LastInBuildDurationInSeconds: LastInBuildDurationInSeconds
          Address: Address
          NodeName: NodeName
          ReplicaStatus: Invalid
          ServiceKind: Invalid
          HealthState: Invalid
        - LastInBuildDurationInSeconds: LastInBuildDurationInSeconds
          Address: Address
          NodeName: NodeName
          ReplicaStatus: Invalid
          ServiceKind: Invalid
          HealthState: Invalid
      properties:
        ContinuationToken:
          description: "The continuation token parameter is used to obtain next set\
            \ of results. The continuation token is included in the response of the\
            \ API when the results from the system do not fit in a single response.\
            \ When this value is passed to the next API call, the API returns next\
            \ set of results. If there are no further results then the continuation\
            \ token is not included in the response."
          title: ContinuationToken
          type: string
        Items:
          items:
            $ref: '#/components/schemas/ReplicaInfo'
          title: Items
          type: array
      title: PagedReplicaInfoList
      type: object
    PagedServiceInfoList:
      description: The list of services in the cluster for an application. The list
        is paged when all of the results cannot fit in a single message. The next
        set of results can be obtained by executing the same query with the continuation
        token provided in this list.
      example:
        ContinuationToken: ContinuationToken
        Items:
        - TypeName: TypeName
          ServiceStatus: Unknown
          ManifestVersion: ManifestVersion
          Id: Id
          IsServiceGroup: true
          ServiceKind: Invalid
          HealthState: Invalid
          Name: Name
        - TypeName: TypeName
          ServiceStatus: Unknown
          ManifestVersion: ManifestVersion
          Id: Id
          IsServiceGroup: true
          ServiceKind: Invalid
          HealthState: Invalid
          Name: Name
      properties:
        ContinuationToken:
          description: "The continuation token parameter is used to obtain next set\
            \ of results. The continuation token is included in the response of the\
            \ API when the results from the system do not fit in a single response.\
            \ When this value is passed to the next API call, the API returns next\
            \ set of results. If there are no further results then the continuation\
            \ token is not included in the response."
          title: ContinuationToken
          type: string
        Items:
          items:
            $ref: '#/components/schemas/ServiceInfo'
          title: Items
          type: array
      title: PagedServiceInfoList
      type: object
    PagedServicePartitionInfoList:
      description: The list of partition in the cluster for a service. The list is
        paged when all of the results cannot fit in a single message. The next set
        of results can be obtained by executing the same query with the continuation
        token provided in this list.
      example:
        ContinuationToken: ContinuationToken
        Items:
        - PartitionStatus: Invalid
          PartitionInformation:
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            ServicePartitionKind: Invalid
          ServiceKind: Invalid
          HealthState: Invalid
        - PartitionStatus: Invalid
          PartitionInformation:
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            ServicePartitionKind: Invalid
          ServiceKind: Invalid
          HealthState: Invalid
      properties:
        ContinuationToken:
          description: "The continuation token parameter is used to obtain next set\
            \ of results. The continuation token is included in the response of the\
            \ API when the results from the system do not fit in a single response.\
            \ When this value is passed to the next API call, the API returns next\
            \ set of results. If there are no further results then the continuation\
            \ token is not included in the response."
          title: ContinuationToken
          type: string
        Items:
          items:
            $ref: '#/components/schemas/ServicePartitionInfo'
          title: Items
          type: array
      title: PagedServicePartitionInfoList
      type: object
    PagedSubNameInfoList:
      description: A paged list of Service Fabric names. The list is paged when all
        of the results cannot fit in a single message. The next set of results can
        be obtained by executing the same query with the continuation token provided
        in this list.
      example:
        IsConsistent: true
        ContinuationToken: ContinuationToken
        SubNames:
        - null
        - null
      properties:
        ContinuationToken:
          description: "The continuation token parameter is used to obtain next set\
            \ of results. The continuation token is included in the response of the\
            \ API when the results from the system do not fit in a single response.\
            \ When this value is passed to the next API call, the API returns next\
            \ set of results. If there are no further results then the continuation\
            \ token is not included in the response."
          title: ContinuationToken
          type: string
        IsConsistent:
          description: "Indicates whether any name under the given name has been modified\
            \ during the enumeration. If there was a modification, this property value\
            \ is false."
          title: IsConsistent
          type: boolean
        SubNames:
          items:
            $ref: '#/components/schemas/FabricName'
          title: SubNames
          type: array
      title: PagedSubNameInfoList
      type: object
    PartitionAccessStatus:
      description: |
        Specifies the access status of the partition. Possible values are following.
          - Invalid - Indicates that the read or write operation access status is not valid. This value is not returned to the caller.
          - Granted - Indicates that the read or write operation access is granted and the operation is allowed.
          - ReconfigurationPending - Indicates that the client should try again later, because a reconfiguration is in progress.
          - NotPrimary - Indicates that this client request was received by a replica that is not a Primary replica.
          - NoWriteQuorum - Indicates that no write quorum is available and, therefore, no write operation can be accepted.
      enum:
      - Invalid
      - Granted
      - ReconfigurationPending
      - NotPrimary
      - NoWriteQuorum
      title: PartitionAccessStatus
      type: string
    PartitionDataLossProgress:
      description: Information about a partition data loss user-induced operation.
      example:
        InvokeDataLossResult:
          ErrorCode: 0
          SelectedPartition:
            ServiceName: ServiceName
            PartitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        State: Invalid
      properties:
        InvokeDataLossResult:
          $ref: '#/components/schemas/InvokeDataLossResult'
        State:
          $ref: '#/components/schemas/OperationState'
      title: PartitionDataLossProgress
      type: object
    PartitionHealth:
      allOf:
      - $ref: '#/components/schemas/EntityHealth'
      - description: PartitionHealth
        properties:
          PartitionId:
            $ref: '#/components/schemas/PartitionId'
          ReplicaHealthStates:
            description: The list of replica health states associated with the partition.
            items:
              $ref: '#/components/schemas/ReplicaHealthState'
            type: array
        type: object
      description: Information about the health of a Service Fabric partition.
      example:
        AggregatedHealthState: Invalid
        HealthStatistics:
          HealthStateCountList:
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
        UnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        HealthEvents:
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        ReplicaHealthStates:
        - AggregatedHealthState: null
          PartitionId: null
          ServiceKind: Invalid
        - AggregatedHealthState: null
          PartitionId: null
          ServiceKind: Invalid
        PartitionId: null
      title: PartitionHealth
    PartitionHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: PartitionHealthEvaluation
        properties:
          PartitionId:
            $ref: '#/components/schemas/PartitionId'
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for a partition, containing information\
        \ about the data and the algorithm used by health store to evaluate health.\
        \ The evaluation is returned only when the aggregated health state is either\
        \ Error or Warning."
      x-ms-discriminator-value: Partition
    PartitionHealthState:
      allOf:
      - $ref: '#/components/schemas/EntityHealthState'
      - description: PartitionHealthState
        properties:
          PartitionId:
            $ref: '#/components/schemas/PartitionId'
        type: object
      description: "Represents the health state of a partition, which contains the\
        \ partition identifier and its aggregated health state."
      example:
        AggregatedHealthState: null
        PartitionId: null
      title: PartitionHealthState
    PartitionHealthStateChunk:
      allOf:
      - $ref: '#/components/schemas/EntityHealthStateChunk'
      - description: PartitionHealthStateChunk
        properties:
          PartitionId:
            $ref: '#/components/schemas/PartitionId'
          ReplicaHealthStateChunks:
            $ref: '#/components/schemas/ReplicaHealthStateChunkList'
        type: object
      description: |
        Represents the health state chunk of a partition, which contains the partition id, its aggregated health state and any replicas that respect the filters in the cluster health chunk query description.
      example:
        ReplicaHealthStateChunks:
          Items:
          - HealthState: null
            ReplicaOrInstanceId: null
          - HealthState: null
            ReplicaOrInstanceId: null
        PartitionId: null
        HealthState: null
      title: PartitionHealthStateChunk
    PartitionHealthStateChunkList:
      description: |
        The list of partition health state chunks that respect the input filters in the chunk query description.
        Returned by get cluster health state chunks query as part of the parent application hierarchy.
      example:
        Items:
        - ReplicaHealthStateChunks:
            Items:
            - HealthState: null
              ReplicaOrInstanceId: null
            - HealthState: null
              ReplicaOrInstanceId: null
          PartitionId: null
          HealthState: null
        - ReplicaHealthStateChunks:
            Items:
            - HealthState: null
              ReplicaOrInstanceId: null
            - HealthState: null
              ReplicaOrInstanceId: null
          PartitionId: null
          HealthState: null
      properties:
        Items:
          description: |
            The list of partition health state chunks that respect the input filters in the chunk query.
          items:
            $ref: '#/components/schemas/PartitionHealthStateChunk'
          title: Items
          type: array
      title: PartitionHealthStateChunkList
      type: object
    PartitionHealthStateFilter:
      description: |
        Defines matching criteria to determine whether a partition should be included as a child of a service in the cluster health chunk.
        The partitions are only returned if the parent entities match a filter specified in the cluster health chunk query description. The parent service and application must be included in the cluster health chunk.
        One filter can match zero, one or multiple partitions, depending on its properties.
      example:
        ReplicaFilters:
        - HealthStateFilter: 2
          ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
        - HealthStateFilter: 2
          ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
        HealthStateFilter: 5
        PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        HealthStateFilter:
          description: |
            The filter for the health state of the partitions. It allows selecting partitions if they match the desired health states.
            The possible values are integer value of one of the following health states. Only partitions that match the filter are returned. All partitions are used to evaluate the cluster aggregated health state.
            If not specified, default value is None, unless the partition id is specified. If the filter has default value and partition id is specified, the matching partition is returned.
            The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
            For example, if the provided value is 6, it matches partitions with HealthState value of OK (2) and Warning (4).

            - Default - Default value. Matches any HealthState. The value is zero.
            - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
            - Ok - Filter that matches input with HealthState value Ok. The value is 2.
            - Warning - Filter that matches input with HealthState value Warning. The value is 4.
            - Error - Filter that matches input with HealthState value Error. The value is 8.
            - All - Filter that matches input with any HealthState value. The value is 65535.
          title: HealthStateFilter
          type: integer
        PartitionIdFilter:
          description: |
            ID of the partition that matches the filter. The filter is applied only to the specified partition, if it exists.
            If the partition doesn't exist, no partition is returned in the cluster health chunk based on this filter.
            If the partition exists, it is included in the cluster health chunk if it respects the other filter properties.
            If not specified, all partitions that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.
          format: uuid
          title: PartitionIdFilter
          type: string
        ReplicaFilters:
          description: |
            Defines a list of filters that specify which replicas to be included in the returned cluster health chunk as children of the parent partition. The replicas are returned only if the parent partition matches a filter.
            If the list is empty, no replicas are returned. All the replicas are used to evaluate the parent partition aggregated health state, regardless of the input filters.
            The partition filter may specify multiple replica filters.
            For example, it can specify a filter to return all replicas with health state Error and another filter to always include a replica identified by its replica id.
          items:
            $ref: '#/components/schemas/ReplicaHealthStateFilter'
          title: ReplicaFilters
          type: array
      title: PartitionHealthStateFilter
      type: object
    PartitionId:
      description: An internal ID used by Service Fabric to uniquely identify a partition.
        This is a randomly generated GUID when the service was created. The partition
        id is unique and does not change for the lifetime of the service. If the same
        service was deleted and recreated the ids of its partitions would be different.
      format: uuid
      title: PartitionId
      type: string
    PartitionInformation:
      description: "Information about the partition identity, partitioning scheme\
        \ and keys supported by it."
      discriminator:
        propertyName: ServicePartitionKind
      example:
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ServicePartitionKind: Invalid
      properties:
        Id:
          description: An internal ID used by Service Fabric to uniquely identify
            a partition. This is a randomly generated GUID when the service was created.
            The partition id is unique and does not change for the lifetime of the
            service. If the same service was deleted and recreated the ids of its
            partitions would be different.
          format: uuid
          title: PartitionId
          type: string
        ServicePartitionKind:
          $ref: '#/components/schemas/ServicePartitionKind'
      required:
      - ServicePartitionKind
      title: PartitionInformation
      type: object
    PartitionLoadInformation:
      description: |
        Represents load information for a partition, which contains the primary and secondary reported load metrics.
        In case there is no load reported, PartitionLoadInformation will contain the default load for the service of the partition.
        For default loads, LoadMetricReport's LastReportedUtc is set to 0.
      example:
        PrimaryLoadMetricReports:
        - LastReportedUtc: 2000-01-23T04:56:07.000+00:00
          Value: Value
          Name: Name
        - LastReportedUtc: 2000-01-23T04:56:07.000+00:00
          Value: Value
          Name: Name
        SecondaryLoadMetricReports:
        - LastReportedUtc: 2000-01-23T04:56:07.000+00:00
          Value: Value
          Name: Name
        - LastReportedUtc: 2000-01-23T04:56:07.000+00:00
          Value: Value
          Name: Name
        PartitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        PartitionId:
          description: An internal ID used by Service Fabric to uniquely identify
            a partition. This is a randomly generated GUID when the service was created.
            The partition id is unique and does not change for the lifetime of the
            service. If the same service was deleted and recreated the ids of its
            partitions would be different.
          format: uuid
          title: PartitionId
          type: string
        PrimaryLoadMetricReports:
          description: Array of load reports from the primary replica for this partition.
          items:
            $ref: '#/components/schemas/LoadMetricReport'
          title: PrimaryLoadMetricReports
          type: array
        SecondaryLoadMetricReports:
          description: |
            Array of aggregated load reports from all secondary replicas for this partition.
            Array only contains the latest reported load for each metric.
          items:
            $ref: '#/components/schemas/LoadMetricReport'
          title: SecondaryLoadMetricReports
          type: array
      title: PartitionLoadInformation
      type: object
    PartitionQuorumLossProgress:
      description: Information about a partition quorum loss user-induced operation.
      example:
        InvokeQuorumLossResult:
          ErrorCode: 0
          SelectedPartition:
            ServiceName: ServiceName
            PartitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        State: Invalid
      properties:
        InvokeQuorumLossResult:
          $ref: '#/components/schemas/InvokeQuorumLossResult'
        State:
          $ref: '#/components/schemas/OperationState'
      title: PartitionQuorumLossProgress
      type: object
    PartitionRestartProgress:
      description: Information about a partition restart user-induced operation.
      example:
        State: Invalid
        RestartPartitionResult:
          ErrorCode: 0
          SelectedPartition:
            ServiceName: ServiceName
            PartitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        RestartPartitionResult:
          $ref: '#/components/schemas/RestartPartitionResult'
        State:
          $ref: '#/components/schemas/OperationState'
      title: PartitionRestartProgress
      type: object
    PartitionSafetyCheck:
      allOf:
      - $ref: '#/components/schemas/SafetyCheck'
      - description: PartitionSafetyCheck
        properties:
          PartitionId:
            $ref: '#/components/schemas/PartitionId'
        type: object
      description: Represents a safety check for the service partition being performed
        by service fabric before continuing with operations.
      title: PartitionSafetyCheck
    PartitionScheme:
      description: |
        Enumerates the ways that a service can be partitioned. Possible values are:

        - Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - Singleton - Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.
        - UniformInt64Range - Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.
        - Named - Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
      enum:
      - Invalid
      - Singleton
      - UniformInt64Range
      - Named
      title: PartitionScheme
      type: string
    PartitionSchemeDescription:
      description: Describes how the service is partitioned.
      discriminator:
        propertyName: PartitionScheme
      example:
        PartitionScheme: Invalid
      properties:
        PartitionScheme:
          $ref: '#/components/schemas/PartitionScheme'
      required:
      - PartitionScheme
      title: PartitionSchemeDescription
      type: object
    PartitionsHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: PartitionsHealthEvaluation
        properties:
          MaxPercentUnhealthyPartitionsPerService:
            description: Maximum allowed percentage of unhealthy partitions per service
              from the ServiceTypeHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of partitions of the service from the health
              store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for the partitions of a service,\
        \ containing health evaluations for each unhealthy partition that impacts\
        \ current aggregated health state. Can be returned when evaluating service\
        \ health and the aggregated health state is either Error or Warning."
      x-ms-discriminator-value: Partitions
    PrimaryReplicatorStatus:
      allOf:
      - $ref: '#/components/schemas/ReplicatorStatus'
      - description: Status of the primary replicator.
        properties:
          RemoteReplicators:
            $ref: '#/components/schemas/RemoteReplicatorStatusList'
          ReplicationQueueStatus:
            $ref: '#/components/schemas/ReplicatorQueueStatus'
        type: object
      x-ms-discriminator-value: Primary
    PropertyBatchDescriptionList:
      description: Describes a list of property batch operations to be executed. Either
        all or none of the operations will be committed.
      example:
        Operations:
        - PropertyName: PropertyName
          Kind: Invalid
        - PropertyName: PropertyName
          Kind: Invalid
      properties:
        Operations:
          description: A list of the property batch operations to be executed.
          items:
            $ref: '#/components/schemas/PropertyBatchOperation'
          title: Operations
          type: array
      title: PropertyBatchDescriptionList
      type: object
    PropertyBatchInfo:
      description: Information about the results of a property batch.
      discriminator:
        propertyName: Kind
      properties:
        Kind:
          $ref: '#/components/schemas/PropertyBatchInfoKind'
      required:
      - Kind
      title: PropertyBatchInfo
      type: object
    PropertyBatchInfoKind:
      description: |
        The kind of property batch info, determined by the results of a property batch. The following are the possible values.

        - Invalid - Indicates the property batch info is invalid. All Service Fabric enumerations have the invalid type.
        - Successful - The property batch succeeded.
        - Failed - The property batch failed.
      enum:
      - Invalid
      - Successful
      - Failed
      title: PropertyBatchInfoKind
      type: string
    PropertyBatchOperation:
      description: Represents the base type for property operations that can be put
        into a batch and submitted.
      discriminator:
        propertyName: Kind
      example:
        PropertyName: PropertyName
        Kind: Invalid
      properties:
        Kind:
          $ref: '#/components/schemas/PropertyBatchOperationKind'
        PropertyName:
          description: The name of the Service Fabric property.
          title: PropertyName
          type: string
      required:
      - Kind
      - PropertyName
      title: PropertyBatchOperation
      type: object
    PropertyBatchOperationKind:
      description: |
        The kind of property batch operation, determined by the operation to be performed. The following are the possible values.

        - Invalid - Indicates the property operation is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - Put - The operation will create or edit a property. The value is 1.
        - Get - The operation will get a property. The value is 2.
        - CheckExists - The operation will check that a property exists or doesn't exists, depending on the provided value. The value is 3.
        - CheckSequence - The operation will ensure that the sequence number is equal to the provided value. The value is 4.
        - Delete - The operation will delete a property. The value is 5.
        - CheckValue - The operation will ensure that the value of a property is equal to the provided value. The value is 7.
      enum:
      - Invalid
      - Put
      - Get
      - CheckExists
      - CheckSequence
      - Delete
      - CheckValue
      title: PropertyBatchOperationKind
      type: string
    PropertyCustomTypeId:
      description: "The property's custom type id. Using this property, the user is\
        \ able to tag the type of the value of the property."
      title: PropertyCustomTypeId
      type: string
    PropertyDescription:
      description: Description of a Service Fabric property.
      example:
        PropertyName: PropertyName
        CustomTypeId: CustomTypeId
        Value:
          Kind: null
      properties:
        CustomTypeId:
          description: "The property's custom type id. Using this property, the user\
            \ is able to tag the type of the value of the property."
          title: PropertyCustomTypeId
          type: string
        PropertyName:
          description: The name of the Service Fabric property.
          title: PropertyName
          type: string
        Value:
          $ref: '#/components/schemas/PropertyValue'
      required:
      - PropertyName
      - Value
      title: PropertyDescription
      type: object
    PropertyInfo:
      description: Information about a Service Fabric property.
      discriminator:
        propertyName: Kind
      example:
        Metadata:
          TypeId: Invalid
          CustomTypeId: CustomTypeId
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          Parent: Parent
          SequenceNumber: SequenceNumber
          SizeInBytes: 0
        Value:
          Kind: null
        Name: Name
      properties:
        Metadata:
          $ref: '#/components/schemas/PropertyMetadata'
        Name:
          description: The name of the Service Fabric property.
          title: PropertyName
          type: string
        Value:
          $ref: '#/components/schemas/PropertyValue'
      required:
      - Metadata
      - Name
      title: PropertyInfo
      type: object
    PropertyMetadata:
      description: "The metadata associated with a property, including the property's\
        \ name."
      example:
        TypeId: Invalid
        CustomTypeId: CustomTypeId
        LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        Parent: Parent
        SequenceNumber: SequenceNumber
        SizeInBytes: 0
      properties:
        CustomTypeId:
          description: "The property's custom type id. Using this property, the user\
            \ is able to tag the type of the value of the property."
          title: PropertyCustomTypeId
          type: string
        LastModifiedUtcTimestamp:
          description: Represents when the Property was last modified. Only write
            operations will cause this field to be updated.
          format: date-time
          title: LastModifiedUtcTimestamp
          type: string
        Parent:
          description: "The Service Fabric name, including the 'fabric:' URI scheme."
          title: FabricName
          type: string
        SequenceNumber:
          description: "The version of the property. Every time a property is modified,\
            \ its sequence number is increased."
          format: int64
          title: SequenceNumber
          type: string
        SizeInBytes:
          description: The length of the serialized property value.
          title: SizeInBytes
          type: integer
        TypeId:
          $ref: '#/components/schemas/PropertyValueKind'
      title: PropertyMetadata
      type: object
    PropertyName:
      description: The name of the Service Fabric property.
      title: PropertyName
      type: string
    PropertyValue:
      description: Describes a Service Fabric property value.
      discriminator:
        propertyName: Kind
      example:
        Kind: null
      properties:
        Kind:
          $ref: '#/components/schemas/PropertyValueKind'
      required:
      - Kind
      title: PropertyValue
      type: object
    PropertyValueKind:
      description: |
        The kind of property, determined by the type of data. Following are the possible values.

        - Invalid - Indicates the property is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - Binary - The data inside the property is a binary blob. The value is 1.
        - Int64 - The data inside the property is an int64. The value is 2.
        - Double - The data inside the property is a double. The value is 3.
        - String - The data inside the property is a wstring. The value is 4.
        - Guid - The data inside the property is a guid. The value is 5.
      enum:
      - Invalid
      - Binary
      - Int64
      - Double
      - String
      - Guid
      title: PropertyValueKind
      type: string
    ProvisionFabricDescription:
      description: Describes the parameters for provisioning a cluster.
      example:
        ClusterManifestFilePath: ClusterManifestFilePath
        CodeFilePath: CodeFilePath
      properties:
        ClusterManifestFilePath:
          description: The cluster manifest file path.
          title: ClusterManifestFilePath
          type: string
        CodeFilePath:
          description: The cluster code package file path.
          title: CodeFilePath
          type: string
      title: ProvisionFabricDescription
      type: object
    PutPropertyBatchOperation:
      allOf:
      - $ref: '#/components/schemas/PropertyBatchOperation'
      - description: PutPropertyBatchOperation
        type: object
      description: |
        Puts the specified property under the specified name.  Note that if one PropertyBatchOperation in a PropertyBatch fails,  the entire batch fails and cannot be committed in a transactional manner.
      properties:
        CustomTypeId:
          description: "The property's custom type id. Using this property, the user\
            \ is able to tag the type of the value of the property."
          title: PropertyCustomTypeId
          type: string
        Value:
          $ref: '#/components/schemas/PropertyValue'
      required:
      - Value
      x-ms-discriminator-value: Put
    ReconfigurationInformation:
      description: "Information about current reconfiguration like phase, type, previous\
        \ configuration role of replica and reconfiguration start date time."
      properties:
        PreviousConfigurationRole:
          $ref: '#/components/schemas/ReplicaRole'
        ReconfigurationPhase:
          $ref: '#/components/schemas/ReconfigurationPhase'
        ReconfigurationStartTimeUtc:
          description: Start time (in UTC) of the ongoing reconfiguration. If no reconfiguration
            is taking place then this value will be zero date-time.
          format: date-time
          title: ReconfigurationStartTimeUtc
          type: string
        ReconfigurationType:
          $ref: '#/components/schemas/ReconfigurationType'
      title: ReconfigurationInformation
      type: object
    ReconfigurationPhase:
      description: |
        The reconfiguration phase of a replica of a stateful service. Possible values are following.
          - Unknown - Indicates the invalid reconfiguration phase.
          - None - Specifies that there is no reconfiguration in progress.
          - Phase0 - Refers to the phase where the reconfiguration is transferring data from the previous primary to the new primary.
          - Phase1 - Refers to the phase where the reconfiguration is querying the replica set for the progress.
          - Phase2 - Refers to the phase where the reconfiguration is ensuring that data from the current primary is present in a majority of the replica set.
          - Phase3 - This phase is for internal use only.
          - Phase4 - This phase is for internal use only.
          - AbortPhaseZero - This phase is for internal use only.
      enum:
      - Unknown
      - None
      - Phase0
      - Phase1
      - Phase2
      - Phase3
      - Phase4
      - AbortPhaseZero
      title: ReconfigurationPhase
      type: string
    ReconfigurationType:
      description: |
        The type of reconfiguration for replica of a stateful service. Possible values are following.
          - Unknown - Indicates the invalid reconfiguration type.
          - SwapPrimary - Specifies that the primary replica is being swapped with a different replica.
          - Failover - Reconfiguration triggered in response to a primary going down. This could be due to many reasons such as primary replica crashing etc.
          - Other - Reconfigurations where the primary replica is not changing.
      enum:
      - Unknown
      - SwapPrimary
      - Failover
      - Other
      title: ReconfigurationType
      type: string
    RegistryCredential:
      description: Credential information to connect to container registry.
      example:
        RegistryUserName: RegistryUserName
        RegistryPassword: RegistryPassword
        PasswordEncrypted: true
      properties:
        PasswordEncrypted:
          description: Indicates that supplied container registry password is encrypted.
          title: PasswordEncrypted
          type: boolean
        RegistryPassword:
          description: The password for supplied username to connect to container
            registry.
          title: RegistryPassword
          type: string
        RegistryUserName:
          description: The user name to connect to container registry.
          title: RegistryUserName
          type: string
      title: RegistryCredential
      type: object
    RemoteReplicatorAcknowledgementDetail:
      description: Provides various statistics of the acknowledgements that are being
        received from the remote replicator.
      properties:
        AverageApplyDuration:
          description: Represents the average duration it takes for the remote replicator
            to apply an operation. This usually entails writing the operation to disk.
          title: AverageApplyDuration
          type: string
        AverageReceiveDuration:
          description: Represents the average duration it takes for the remote replicator
            to receive an operation.
          title: AverageReceiveDuration
          type: string
        NotReceivedCount:
          description: Represents the number of operations not yet received by a remote
            replicator.
          title: NotReceivedCount
          type: string
        ReceivedAndNotAppliedCount:
          description: Represents the number of operations received and not yet applied
            by a remote replicator.
          title: ReceivedAndNotAppliedCount
          type: string
      title: RemoteReplicatorAcknowledgementDetail
      type: object
    RemoteReplicatorAcknowledgementStatus:
      description: Provides details about the remote replicators from the primary
        replicator's point of view.
      properties:
        CopyStreamAcknowledgementDetail:
          $ref: '#/components/schemas/RemoteReplicatorAcknowledgementDetail'
        ReplicationStreamAcknowledgementDetail:
          $ref: '#/components/schemas/RemoteReplicatorAcknowledgementDetail'
      title: RemoteReplicatorAcknowledgementStatus
      type: object
    RemoteReplicatorStatus:
      description: |
        Represents the state of the secondary replicator from the primary replicator’s point of view.
      properties:
        IsInBuild:
          description: A value that indicates whether the secondary replica is in
            the process of being built.
          title: IsInBuild
          type: boolean
        LastAcknowledgementProcessedTimeUtc:
          description: |
            The last timestamp (in UTC) when an acknowledgement from the secondary replicator was processed on the primary.
            UTC 0 represents an invalid value, indicating that no acknowledgement messages were ever processed.
          format: date-time
          title: LastAcknowledgementProcessedTimeUtc
          type: string
        LastAppliedCopySequenceNumber:
          description: |
            The highest copy operation sequence number that the secondary has applied to its state.
            A value of -1 implies that the secondary has applied all copy operations and the copy process is complete.
          title: LastAppliedCopySequenceNumber
          type: string
        LastAppliedReplicationSequenceNumber:
          description: The highest replication operation sequence number that the
            secondary has applied to its state.
          title: LastAppliedReplicationSequenceNumber
          type: string
        LastReceivedCopySequenceNumber:
          description: |
            The highest copy operation sequence number that the secondary has received from the primary.
            A value of -1 implies that the secondary has received all copy operations.
          title: LastReceivedCopySequenceNumber
          type: string
        LastReceivedReplicationSequenceNumber:
          description: The highest replication operation sequence number that the
            secondary has received from the primary.
          title: LastReceivedReplicationSequenceNumber
          type: string
        RemoteReplicatorAcknowledgementStatus:
          $ref: '#/components/schemas/RemoteReplicatorAcknowledgementStatus'
        ReplicaId:
          description: "Id of a stateful service replica. ReplicaId is used by Service\
            \ Fabric to uniquely identify a replica of a partition. It is unique within\
            \ a partition and does not change for the lifetime of the replica. If\
            \ a replica gets dropped and another replica gets created on the same\
            \ node for the same partition, it will get a different value for the id.\
            \ Sometimes the id of a stateless service instance is also referred as\
            \ a replica id."
          title: ReplicaId
          type: string
      title: RemoteReplicatorStatus
      type: object
    RemoteReplicatorStatusList:
      description: List of remote replicator status
      items:
        $ref: '#/components/schemas/RemoteReplicatorStatus'
      type: array
    RepairImpactDescriptionBase:
      description: |
        Describes the expected impact of executing a repair task.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      discriminator:
        propertyName: Kind
      example:
        Kind: Invalid
      properties:
        Kind:
          $ref: '#/components/schemas/RepairImpactKind'
      required:
      - Kind
      title: RepairImpactDescriptionBase
      type: object
    RepairImpactKind:
      description: |
        Specifies the kind of the impact.
        - Invalid - The repair impact is not valid or is of an unknown type.
        - Node - The repair impact affects a set of Service Fabric nodes.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      enum:
      - Invalid
      - Node
      title: RepairImpactKind
      type: string
    RepairTargetDescriptionBase:
      description: |
        Describes the entities targeted by a repair action.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      discriminator:
        propertyName: Kind
      example:
        Kind: Invalid
      properties:
        Kind:
          $ref: '#/components/schemas/RepairTargetKind'
      required:
      - Kind
      title: RepairTargetDescriptionBase
      type: object
    RepairTargetKind:
      description: |
        Specifies the kind of the repair target.
        - Invalid - The repair target is not valid or is of an unknown type.
        - Node - The repair target is a set of Service Fabric nodes.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      enum:
      - Invalid
      - Node
      title: RepairTargetKind
      type: string
    RepairTask:
      description: |
        Represents a repair task, which includes information about what kind of repair was requested, what its progress is, and what its final result was.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      example:
        Impact:
          Kind: Invalid
        Action: Action
        Description: Description
        TaskId: TaskId
        ResultStatus: Invalid
        RestoringHealthCheckState: null
        PerformRestoringHealthCheck: true
        Flags: 0
        History:
          RestoringHealthCheckStartUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          ExecutingUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          ApprovedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          ClaimedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          RestoringHealthCheckEndUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          RestoringUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          CreatedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          PreparingUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          CompletedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          PreparingHealthCheckEndUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          PreparingHealthCheckStartUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        ExecutorData: ExecutorData
        ResultDetails: ResultDetails
        Target:
          Kind: Invalid
        Executor: Executor
        Version: Version
        PreparingHealthCheckState: NotStarted
        State: Invalid
        PerformPreparingHealthCheck: true
        ResultCode: 6
      properties:
        Action:
          description: |
            The requested repair action. Must be specified when the repair task is created, and is immutable once set.
          title: Action
          type: string
        Description:
          description: |
            A description of the purpose of the repair task, or other informational details.
            May be set when the repair task is created, and is immutable once set.
          title: Description
          type: string
        Executor:
          description: "The name of the repair executor. Must be specified in Claimed\
            \ and later states, and is immutable once set."
          title: Executor
          type: string
        ExecutorData:
          description: A data string that the repair executor can use to store its
            internal state.
          title: ExecutorData
          type: string
        Flags:
          description: |
            A bitwise-OR of the following values, which gives additional details about the status of the repair task.
            - 1 - Cancellation of the repair has been requested
            - 2 - Abort of the repair has been requested
            - 4 - Approval of the repair was forced via client request
          title: Flags
          type: integer
        History:
          $ref: '#/components/schemas/RepairTaskHistory'
        Impact:
          $ref: '#/components/schemas/RepairImpactDescriptionBase'
        PerformPreparingHealthCheck:
          description: A value to determine if health checks will be performed when
            the repair task enters the Preparing state.
          title: PerformPreparingHealthCheck
          type: boolean
        PerformRestoringHealthCheck:
          description: A value to determine if health checks will be performed when
            the repair task enters the Restoring state.
          title: PerformRestoringHealthCheck
          type: boolean
        PreparingHealthCheckState:
          $ref: '#/components/schemas/RepairTaskHealthCheckState'
        RestoringHealthCheckState:
          $ref: '#/components/schemas/RepairTaskHealthCheckState'
        ResultCode:
          description: |
            A numeric value providing additional details about the result of the repair task execution.
            May be specified in the Restoring and later states, and is immutable once set.
          title: ResultCode
          type: integer
        ResultDetails:
          description: |
            A string providing additional details about the result of the repair task execution.
            May be specified in the Restoring and later states, and is immutable once set.
          title: ResultDetails
          type: string
        ResultStatus:
          description: |
            A value describing the overall result of the repair task execution.
            Must be specified in the Restoring and later states, and is immutable once set.

            - Invalid - Indicates that the repair task result is invalid. All Service Fabric enumerations have the invalid value.
            - Succeeded - Indicates that the repair task completed execution successfully.
            - Cancelled - Indicates that the repair task was cancelled prior to execution.
            - Interrupted - Indicates that execution of the repair task was interrupted by a cancellation request after some work had already been performed.
            - Failed - Indicates that there was a failure during execution of the repair task. Some work may have been performed.
            - Pending - Indicates that the repair task result is not yet available, because the repair task has not finished executing.
          enum:
          - Invalid
          - Succeeded
          - Cancelled
          - Interrupted
          - Failed
          - Pending
          title: ResultStatus
          type: string
        State:
          description: |
            The workflow state of the repair task. Valid initial states are Created, Claimed, and Preparing.

            - Invalid - Indicates that the repair task state is invalid. All Service Fabric enumerations have the invalid value.
            - Created - Indicates that the repair task has been created.
            - Claimed - Indicates that the repair task has been claimed by a repair executor.
            - Preparing - Indicates that the Repair Manager is preparing the system to handle the impact of the repair task, usually by taking resources offline gracefully.
            - Approved - Indicates that the repair task has been approved by the Repair Manager and is safe to execute.
            - Executing - Indicates that execution of the repair task is in progress.
            - Restoring - Indicates that the Repair Manager is restoring the system to its pre-repair state, usually by bringing resources back online.
            - Completed - Indicates that the repair task has completed, and no further state changes will occur.
          enum:
          - Invalid
          - Created
          - Claimed
          - Preparing
          - Approved
          - Executing
          - Restoring
          - Completed
          title: State
          type: string
        Target:
          $ref: '#/components/schemas/RepairTargetDescriptionBase'
        TaskId:
          description: The ID of the repair task.
          title: TaskId
          type: string
        Version:
          description: "The version of the repair task.\nWhen creating a new repair\
            \ task, the version must be set to zero.  When updating a repair task,\
            \ \nthe version is used for optimistic concurrency checks.  If the version\
            \ is \nset to zero, the update will not check for write conflicts.  If\
            \ the version is set to a non-zero value, then the \nupdate will only\
            \ succeed if the actual current version of the repair task matches this\
            \ value.\n"
          format: int64
          title: Version
          type: string
      required:
      - Action
      - State
      - TaskId
      title: RepairTask
      type: object
    RepairTaskApproveDescription:
      description: |
        Describes a request for forced approval of a repair task.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      example:
        TaskId: TaskId
        Version: Version
      properties:
        TaskId:
          description: The ID of the repair task.
          title: TaskId
          type: string
        Version:
          description: "The current version number of the repair task. If non-zero,\
            \ then the request will only succeed if this value matches the actual\
            \ current version of the repair task. If zero, then no version check is\
            \ performed.</para>"
          format: int64
          title: Version
          type: string
      required:
      - TaskId
      title: RepairTaskApproveDescription
      type: object
    RepairTaskCancelDescription:
      description: |
        Describes a request to cancel a repair task.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      example:
        TaskId: TaskId
        Version: Version
        RequestAbort: true
      properties:
        RequestAbort:
          description: _True_ if the repair should be stopped as soon as possible
            even if it has already started executing. _False_ if the repair should
            be cancelled only if execution has not yet started.</para>
          title: RequestAbort
          type: boolean
        TaskId:
          description: The ID of the repair task.
          title: TaskId
          type: string
        Version:
          description: "The current version number of the repair task. If non-zero,\
            \ then the request will only succeed if this value matches the actual\
            \ current version of the repair task. If zero, then no version check is\
            \ performed.</para>"
          format: int64
          title: Version
          type: string
      required:
      - TaskId
      title: RepairTaskCancelDescription
      type: object
    RepairTaskDeleteDescription:
      description: |
        Describes a request to delete a completed repair task.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      example:
        TaskId: TaskId
        Version: Version
      properties:
        TaskId:
          description: The ID of the completed repair task to be deleted.
          title: TaskId
          type: string
        Version:
          description: "The current version number of the repair task. If non-zero,\
            \ then the request will only succeed if this value matches the actual\
            \ current version of the repair task. If zero, then no version check is\
            \ performed."
          format: int64
          title: Version
          type: string
      required:
      - TaskId
      title: RepairTaskDeleteDescription
      type: object
    RepairTaskHealthCheckState:
      description: |
        Specifies the workflow state of a repair task's health check.

        - NotStarted - Indicates that the health check has not started.
        - InProgress - Indicates that the health check is in progress.
        - Succeeded - Indicates that the health check succeeded.
        - Skipped - Indicates that the health check was skipped.
        - TimedOut - Indicates that the health check timed out.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      enum:
      - NotStarted
      - InProgress
      - Succeeded
      - Skipped
      - TimedOut
      title: RepairTaskHealthCheckState
      type: string
    RepairTaskHistory:
      description: |
        A record of the times when the repair task entered each state.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      example:
        RestoringHealthCheckStartUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        ExecutingUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        ApprovedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        ClaimedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        RestoringHealthCheckEndUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        RestoringUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        CreatedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        PreparingUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        CompletedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        PreparingHealthCheckEndUtcTimestamp: 2000-01-23T04:56:07.000+00:00
        PreparingHealthCheckStartUtcTimestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        ApprovedUtcTimestamp:
          description: The time when the repair task entered the Approved state
          format: date-time
          title: ApprovedUtcTimestamp
          type: string
        ClaimedUtcTimestamp:
          description: The time when the repair task entered the Claimed state.
          format: date-time
          title: ClaimedUtcTimestamp
          type: string
        CompletedUtcTimestamp:
          description: The time when the repair task entered the Completed state
          format: date-time
          title: CompletedUtcTimestamp
          type: string
        CreatedUtcTimestamp:
          description: The time when the repair task entered the Created state.
          format: date-time
          title: CreatedUtcTimestamp
          type: string
        ExecutingUtcTimestamp:
          description: The time when the repair task entered the Executing state
          format: date-time
          title: ExecutingUtcTimestamp
          type: string
        PreparingHealthCheckEndUtcTimestamp:
          description: The time when the repair task completed the health check in
            the Preparing state.
          format: date-time
          title: PreparingHealthCheckEndUtcTimestamp
          type: string
        PreparingHealthCheckStartUtcTimestamp:
          description: The time when the repair task started the health check in the
            Preparing state.
          format: date-time
          title: PreparingHealthCheckStartUtcTimestamp
          type: string
        PreparingUtcTimestamp:
          description: The time when the repair task entered the Preparing state.
          format: date-time
          title: PreparingUtcTimestamp
          type: string
        RestoringHealthCheckEndUtcTimestamp:
          description: The time when the repair task completed the health check in
            the Restoring state.
          format: date-time
          title: RestoringHealthCheckEndUtcTimestamp
          type: string
        RestoringHealthCheckStartUtcTimestamp:
          description: The time when the repair task started the health check in the
            Restoring state.
          format: date-time
          title: RestoringHealthCheckStartUtcTimestamp
          type: string
        RestoringUtcTimestamp:
          description: The time when the repair task entered the Restoring state
          format: date-time
          title: RestoringUtcTimestamp
          type: string
      title: RepairTaskHistory
      type: object
    RepairTaskList:
      description: A list of repair tasks.
      items:
        $ref: '#/components/schemas/RepairTask'
      type: array
    RepairTaskUpdateHealthPolicyDescription:
      description: |
        Describes a request to update the health policy of a repair task.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      example:
        TaskId: TaskId
        Version: Version
        PerformRestoringHealthCheck: true
        PerformPreparingHealthCheck: true
      properties:
        PerformPreparingHealthCheck:
          description: "A boolean indicating if health check is to be performed in\
            \ the Preparing stage of the repair task. If not specified the existing\
            \ value should not be altered. Otherwise, specify the desired new value."
          title: PerformPreparingHealthCheck
          type: boolean
        PerformRestoringHealthCheck:
          description: "A boolean indicating if health check is to be performed in\
            \ the Restoring stage of the repair task. If not specified the existing\
            \ value should not be altered. Otherwise, specify the desired new value."
          title: PerformRestoringHealthCheck
          type: boolean
        TaskId:
          description: The ID of the repair task to be updated.
          title: TaskId
          type: string
        Version:
          description: "The current version number of the repair task. If non-zero,\
            \ then the request will only succeed if this value matches the actual\
            \ current value of the repair task. If zero, then no version check is\
            \ performed."
          format: int64
          title: Version
          type: string
      required:
      - TaskId
      title: RepairTaskUpdateHealthPolicyDescription
      type: object
    RepairTaskUpdateInfo:
      description: |
        Describes the result of an operation that created or updated a repair task.

        This type supports the Service Fabric platform; it is not meant to be used directly from your code.
      example:
        Version: Version
      properties:
        Version:
          description: The new version of the repair task.
          format: int64
          title: Version
          type: string
      required:
      - Version
      title: RepairTaskUpdateInfo
      type: object
    ReplicaHealth:
      allOf:
      - $ref: '#/components/schemas/EntityHealth'
      - description: ReplicaHealth
        properties:
          PartitionId:
            $ref: '#/components/schemas/PartitionId'
          ServiceKind:
            $ref: '#/components/schemas/ServiceKind'
        required:
        - ServiceKind
        type: object
      description: |
        Represents a base class for stateful service replica or stateless service instance health.
        Contains the replica aggregated health state, the health events and the unhealthy evaluations.
      example:
        AggregatedHealthState: Invalid
        HealthStatistics:
          HealthStateCountList:
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
        UnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        HealthEvents:
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        PartitionId: null
        ServiceKind: Invalid
      title: ReplicaHealth
    ReplicaHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: ReplicaHealthEvaluation
        properties:
          PartitionId:
            $ref: '#/components/schemas/PartitionId'
          ReplicaOrInstanceId:
            $ref: '#/components/schemas/ReplicaOrInstanceId'
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for a replica, containing information\
        \ about the data and the algorithm used by health store to evaluate health.\
        \ The evaluation is returned only when the aggregated health state is either\
        \ Error or Warning."
      x-ms-discriminator-value: Replica
    ReplicaHealthState:
      allOf:
      - $ref: '#/components/schemas/EntityHealthState'
      - description: ReplicaHealthState
        properties:
          PartitionId:
            $ref: '#/components/schemas/PartitionId'
          ServiceKind:
            $ref: '#/components/schemas/ServiceKind'
        type: object
      description: Represents a base class for stateful service replica or stateless
        service instance health state.
      example:
        AggregatedHealthState: null
        PartitionId: null
        ServiceKind: Invalid
      title: ReplicaHealthState
    ReplicaHealthStateChunk:
      allOf:
      - $ref: '#/components/schemas/EntityHealthStateChunk'
      - description: ReplicaHealthStateChunk
        properties:
          ReplicaOrInstanceId:
            $ref: '#/components/schemas/ReplicaOrInstanceId'
        type: object
      description: |
        Represents the health state chunk of a stateful service replica or a stateless service instance.
        The replica health state contains the replica ID and its aggregated health state.
      example:
        HealthState: null
        ReplicaOrInstanceId: null
      title: ReplicaHealthStateChunk
    ReplicaHealthStateChunkList:
      description: |
        The list of replica health state chunks that respect the input filters in the chunk query. Returned by get cluster health state chunks query.
      example:
        Items:
        - HealthState: null
          ReplicaOrInstanceId: null
        - HealthState: null
          ReplicaOrInstanceId: null
      properties:
        Items:
          description: |
            The list of replica health state chunks that respect the input filters in the chunk query.
          items:
            $ref: '#/components/schemas/ReplicaHealthStateChunk'
          title: Items
          type: array
      title: ReplicaHealthStateChunkList
      type: object
    ReplicaHealthStateFilter:
      description: |
        Defines matching criteria to determine whether a replica should be included as a child of a partition in the cluster health chunk.
        The replicas are only returned if the parent entities match a filter specified in the cluster health chunk query description. The parent partition, service and application must be included in the cluster health chunk.
        One filter can match zero, one or multiple replicas, depending on its properties.
      example:
        HealthStateFilter: 2
        ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
      properties:
        HealthStateFilter:
          description: |
            The filter for the health state of the replicas. It allows selecting replicas if they match the desired health states.
            The possible values are integer value of one of the following health states. Only replicas that match the filter are returned. All replicas are used to evaluate the parent partition aggregated health state.
            If not specified, default value is None, unless the replica id is specified. If the filter has default value and replica id is specified, the matching replica is returned.
            The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
            For example, if the provided value is 6, it matches replicas with HealthState value of OK (2) and Warning (4).

            - Default - Default value. Matches any HealthState. The value is zero.
            - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
            - Ok - Filter that matches input with HealthState value Ok. The value is 2.
            - Warning - Filter that matches input with HealthState value Warning. The value is 4.
            - Error - Filter that matches input with HealthState value Error. The value is 8.
            - All - Filter that matches input with any HealthState value. The value is 65535.
          title: HealthStateFilter
          type: integer
        ReplicaOrInstanceIdFilter:
          description: |
            Id of the stateful service replica or stateles service instance that matches the filter. The filter is applied only to the specified replica, if it exists.
            If the replica doesn't exist, no replica is returned in the cluster health chunk based on this filter.
            If the replica exists, it is included in the cluster health chunk if it respects the other filter properties.
            If not specified, all replicas that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.
          title: ReplicaOrInstanceIdFilter
          type: string
      title: ReplicaHealthStateFilter
      type: object
    ReplicaId:
      description: "Id of a stateful service replica. ReplicaId is used by Service\
        \ Fabric to uniquely identify a replica of a partition. It is unique within\
        \ a partition and does not change for the lifetime of the replica. If a replica\
        \ gets dropped and another replica gets created on the same node for the same\
        \ partition, it will get a different value for the id. Sometimes the id of\
        \ a stateless service instance is also referred as a replica id."
      title: ReplicaId
      type: string
    ReplicaInfo:
      description: "Information about the identity, status, health, node name, uptime,\
        \ and other details about the replica."
      discriminator:
        propertyName: ServiceKind
      example:
        LastInBuildDurationInSeconds: LastInBuildDurationInSeconds
        Address: Address
        NodeName: NodeName
        ReplicaStatus: Invalid
        ServiceKind: Invalid
        HealthState: Invalid
      properties:
        Address:
          description: The address the replica is listening on.
          title: Address
          type: string
        HealthState:
          $ref: '#/components/schemas/HealthState'
        LastInBuildDurationInSeconds:
          description: The last in build duration of the replica in seconds.
          title: LastInBuildDurationInSeconds
          type: string
        NodeName:
          description: The name of a Service Fabric node.
          title: NodeName
          type: string
        ReplicaStatus:
          $ref: '#/components/schemas/ReplicaStatus'
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
      required:
      - ServiceKind
      title: ReplicaInfo
      type: object
    ReplicaKind:
      description: |
        The role of a replica of a stateful service. Possible values are following.
          - Invalid - Represents an invalid replica kind. The value is zero.
          - KeyValueStore - Represents a key value store replica. The value is 1
      enum:
      - Invalid
      - KeyValueStore
      title: ReplicaKind
      type: string
    ReplicaOrInstanceId:
      description: "Id of a stateful service replica or a stateless service instance.\
        \ This id is used in the queries that apply to both stateful and stateless\
        \ services. It is used by Service Fabric to uniquely identify a replica of\
        \ a partition of a stateful service or an instance of a stateless service\
        \ partition. It is unique within a partition and does not change for the lifetime\
        \ of the replica or the instance. If a stateful replica gets dropped and another\
        \ replica gets created on the same node for the same partition, it will get\
        \ a different value for the id. If a staless instance is failed over on the\
        \ same or different node it will get a different value for the id."
      type: string
    ReplicaRole:
      description: |
        The role of a replica of a stateful service. Possible values are following.
          - Unknown - Indicates the initial role that a replica is created in. The value is zero.
          - None - Specifies that the replica has no responsibility in regard to the replica set. The value is 1
          - Primary - Refers to the replica in the set on which all read and write operations are complete in order to enforce strong consistency semantics. Read operations are handled directly by the Primary replica, while write operations must be acknowledged by a quorum of the replicas in the replica set. There can only be one Primary replica in a replica set at a time. The value is 2.
          - IdleSecondary - Refers to a replica in the set that receives a state transfer from the Primary replica to prepare for becoming an active Secondary replica. There can be multiple Idle Secondary replicas in a replica set at a time. Idle Secondary replicas do not count as a part of a write quorum. The value is 3.
          - ActiveSecondary - Refers to a replica in the set that receives state updates from the Primary replica, applies them, and sends acknowledgements back. Secondary replicas must participate in the write quorum for a replica set. There can be multiple active Secondary replicas in a replica set at a time. The number of active Secondary replicas is configurable that the reliability subsystem should maintain. The value is 4.
      enum:
      - Unknown
      - None
      - Primary
      - IdleSecondary
      - ActiveSecondary
      title: ReplicaRole
      type: string
    ReplicaStatus:
      description: |
        The status of a replica of a service. Possible values are following.

          -Invalid - Indicates the replica status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          -InBuild - The replica is being built. This means that a primary replica is seeding this replica. The value is 1.
          -Standby - The replica is in standby. The value is 2.
          -Ready - The replica is ready. The value is 3.
          -Down - The replica is down. The value is 4.
          -Dropped - Replica is dropped. This means that the replica has been removed from the replica set. If it is persisted, its state has been deleted. The value is 5.
      enum:
      - Invalid
      - InBuild
      - Standby
      - Ready
      - Down
      - Dropped
      title: ReplicaStatus
      type: string
    ReplicaStatusBase:
      description: Information about the replica.
      discriminator:
        propertyName: Kind
      properties:
        Kind:
          $ref: '#/components/schemas/ReplicaKind'
      required:
      - Kind
      title: ReplicaStatusBase
      type: object
    ReplicasHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: ReplicasHealthEvaluation
        properties:
          MaxPercentUnhealthyReplicasPerPartition:
            description: Maximum allowed percentage of unhealthy replicas per partition
              from the ApplicationHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of replicas in the partition from the health
              store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for replicas, containing health evaluations\
        \ for each unhealthy replica that impacted current aggregated health state.\
        \ Can be returned when evaluating partition health and the aggregated health\
        \ state is either Error or Warning."
      x-ms-discriminator-value: Replicas
    ReplicatorOperationName:
      description: |
        Specifies the operation currently being executed by the Replicator. Possible values are following.
          - Invalid - Default value if the replicator is not yet ready.
          - None - Replicator is not running any operation from Service Fabric perspective.
          - Open - Replicator is opening.
          - ChangeRole - Replicator is in the process of changing its role.
          - UpdateEpoch - Due to a change in the replica set, replicator is being updated with its Epoch.
          - Close - Replicator is closing.
          - Abort - Replicator is being aborted.
          - OnDataLoss - Replicator is handling the data loss condition, where the user service may potentially be recovering state from an external source.
          - WaitForCatchup - Replicator is waiting for a quorum of replicas to be caught up to the latest state.
          - Build - Replicator is in the process of building one or more replicas.
      enum:
      - Invalid
      - None
      - Open
      - ChangeRole
      - UpdateEpoch
      - Close
      - Abort
      - OnDataLoss
      - WaitForCatchup
      - Build
      title: ReplicatorOperationName
      type: string
    ReplicatorQueueStatus:
      description: |
        Provides various statistics of the queue used in the service fabric replicator.
        Contains information about the service fabric replicator like the replication/copy queue utilization, last acknowledgement received timestamp, etc.
        Depending on the role of the replicator, the properties in this type imply different meanings.
      properties:
        CommittedSequenceNumber:
          description: |
            On a primary replicator, this is semantically the highest sequence number of the operation for which a write quorum of the secondary replicas have sent an acknowledgement.
            On a secondary replicator, this is semantically the highest sequence number of the in-order operation received from the primary.
          title: CommittedSequenceNumber
          type: string
        CompletedSequenceNumber:
          description: |
            On a primary replicator, this is semantically the highest sequence number of the operation for which all the secondary replicas have sent an acknowledgement.
            On a secondary replicator, this is semantically the highest sequence number that has been applied to the persistent state.
          title: CompletedSequenceNumber
          type: string
        FirstSequenceNumber:
          description: |
            On a primary replicator, this is semantically the sequence number of the operation for which all the secondary replicas have sent an acknowledgement.
            On a secondary replicator, this is the smallest sequence number of the operation that is present in the queue.
          title: FirstSequenceNumber
          type: string
        LastSequenceNumber:
          description: Represents the latest sequence number of the operation that
            is available in the queue.
          title: LastSequenceNumber
          type: string
        QueueMemorySize:
          description: Represents the virtual memory consumed by the queue in bytes.
          title: QueueMemorySize
          type: string
        QueueUtilizationPercentage:
          description: Represents the utilization of the queue. A value of 0 indicates
            that the queue is empty and a value of 100 indicates the queue is full.
          format: int32
          title: QueueUtilizationPercentage
          type: integer
      title: ReplicatorQueueStatus
      type: object
    ReplicatorStatus:
      description: |
        Represents a base class for primary or secondary replicator status.
        Contains information about the service fabric replicator like the replication/copy queue utilization, last acknowledgement received timestamp, etc.
      discriminator:
        propertyName: Kind
      properties:
        Kind:
          $ref: '#/components/schemas/ReplicaRole'
      required:
      - Kind
      title: ReplicatorStatus
      type: object
    ResolvedServiceEndpoint:
      description: Endpoint of a resolved service partition.
      example:
        Address: Address
        Kind: Invalid
      properties:
        Address:
          description: The address of the endpoint. If the endpoint has multiple listeners
            the address is a JSON object with one property per listener with the value
            as the address of that listener.
          title: Address
          type: string
        Kind:
          $ref: '#/components/schemas/ServiceEndpointRole'
      title: ResolvedServiceEndpoint
      type: object
    ResolvedServiceEndpointList:
      description: List of resolved service endpoints of a service partition.
      items:
        $ref: '#/components/schemas/ResolvedServiceEndpoint'
      title: Endpoints
      type: array
    ResolvedServicePartition:
      description: Information about a service partition and its associated endpoints.
      example:
        Endpoints:
        - Address: Address
          Kind: Invalid
        - Address: Address
          Kind: Invalid
        Version: Version
        PartitionInformation:
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ServicePartitionKind: Invalid
        Name: Name
      properties:
        Endpoints:
          description: List of resolved service endpoints of a service partition.
          items:
            $ref: '#/components/schemas/ResolvedServiceEndpoint'
          title: Endpoints
          type: array
        Name:
          description: The full name of the service with 'fabric:' URI scheme.
          title: ServiceName
          type: string
        PartitionInformation:
          $ref: '#/components/schemas/PartitionInformation'
        Version:
          description: The version of this resolved service partition result. This
            version should be passed in the next time the ResolveService call is made
            via the PreviousRspVersion query parameter.
          title: Version
          type: string
      required:
      - Endpoints
      - Name
      - PartitionInformation
      - Version
      title: ResolvedServicePartition
      type: object
    RestartDeployedCodePackageDescription:
      description: |
        Defines description for restarting a deloyed code package on Service Fabric node.
      example:
        CodePackageName: CodePackageName
        ServiceManifestName: ServiceManifestName
        ServicePackageActivationId: ServicePackageActivationId
        CodePackageInstanceId: CodePackageInstanceId
      properties:
        CodePackageInstanceId:
          description: "The instance id for current running entry point. For a code\
            \ package setup entry point (if specified) runs first and after it finishes\
            \ main entry point is started. Each time entry point executable is run,\
            \ its instance id will change."
          title: InstanceId
          type: string
        CodePackageName:
          description: The name of the code package defined in the service manifest.
          title: CodePackageName
          type: string
        ServiceManifestName:
          description: The name of the service manifest.
          title: ServiceManifestName
          type: string
        ServicePackageActivationId:
          description: |
            The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
            is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
            is always an empty string.
          title: ServicePackageActivationId
          type: string
      required:
      - CodePackageInstanceId
      - CodePackageName
      - ServiceManifestName
      title: RestartDeployedCodePackageDescription
      type: object
    RestartNodeDescription:
      description: Describes the parameters to restart a Service Fabric node.
      example:
        CreateFabricDump: "False"
        NodeInstanceId: "0"
      properties:
        CreateFabricDump:
          default: "False"
          description: Specify True to create a dump of the fabric node process. This
            is case sensitive.
          enum:
          - "False"
          - "True"
          title: CreateFabricDump
          type: string
        NodeInstanceId:
          default: "0"
          description: The instance id of the target node. If instance id is specified
            the node is restarted only if it matches with the current instance of
            the node. A default value of "0" would match any instance id. The instance
            id can be obtained using get node query.
          title: NodeInstanceId
          type: string
      required:
      - NodeInstanceId
      title: RestartNodeDescription
      type: object
    RestartPartitionResult:
      description: Represents information about an operation in a terminal state (Completed
        or Faulted).
      example:
        ErrorCode: 0
        SelectedPartition:
          ServiceName: ServiceName
          PartitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ErrorCode:
          description: "If OperationState is Completed, this is 0.  If OperationState\
            \ is Faulted, this is an error code indicating the reason."
          format: int32
          title: ErrorCode
          type: integer
        SelectedPartition:
          $ref: '#/components/schemas/SelectedPartition'
      title: RestartPartitionResult
      type: object
    ResumeApplicationUpgradeDescription:
      description: Describes the parameters for resuming an unmonitored manual Service
        Fabric application upgrade
      example:
        UpgradeDomainName: UpgradeDomainName
      properties:
        UpgradeDomainName:
          description: The name of the upgrade domain in which to resume the upgrade.
          title: UpgradeDomainName
          type: string
      required:
      - UpgradeDomainName
      title: ResumeApplicationUpgradeDescription
      type: object
    ResumeClusterUpgradeDescription:
      description: Describes the parameters for resuming a cluster upgrade.
      example:
        UpgradeDomain: UpgradeDomain
      properties:
        UpgradeDomain:
          description: The next upgrade domain for this cluster upgrade.
          title: UpgradeDomain
          type: string
      required:
      - UpgradeDomain
      title: ResumeClusterUpgradeDescription
      type: object
    RollingUpgradeUpdateDescription:
      description: Describes the parameters for updating a rolling upgrade of application
        or cluster.
      example:
        UpgradeDomainTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
        FailureAction: Invalid
        ReplicaSetCheckTimeoutInMilliseconds: 0
        UpgradeTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
        RollingUpgradeMode: UnmonitoredAuto
        ForceRestart: false
        HealthCheckStableDurationInMilliseconds: PT0H2M0S
        HealthCheckRetryTimeoutInMilliseconds: PT0H10M0S
        HealthCheckWaitDurationInMilliseconds: "0"
      properties:
        FailureAction:
          $ref: '#/components/schemas/FailureAction'
        ForceRestart:
          default: false
          description: "If true, then processes are forcefully restarted during upgrade\
            \ even when the code version has not changed (the upgrade only changes\
            \ configuration or data)."
          title: ForceRestart
          type: boolean
        HealthCheckRetryTimeoutInMilliseconds:
          default: PT0H10M0S
          description: "The amount of time to retry health evaluation when the application\
            \ or cluster is unhealthy before FailureAction is executed. It is first\
            \ interpreted as a string representing an ISO 8601 duration. If that fails,\
            \ then it is interpreted as a number representing the total number of\
            \ milliseconds."
          title: HealthCheckRetryTimeout
          type: string
        HealthCheckStableDurationInMilliseconds:
          default: PT0H2M0S
          description: "The amount of time that the application or cluster must remain\
            \ healthy before the upgrade proceeds to the next upgrade domain. It is\
            \ first interpreted as a string representing an ISO 8601 duration. If\
            \ that fails, then it is interpreted as a number representing the total\
            \ number of milliseconds."
          title: HealthCheckStableDuration
          type: string
        HealthCheckWaitDurationInMilliseconds:
          default: "0"
          description: "The amount of time to wait after completing an upgrade domain\
            \ before applying health policies. It is first interpreted as a string\
            \ representing an ISO 8601 duration. If that fails, then it is interpreted\
            \ as a number representing the total number of milliseconds."
          title: HealthCheckWaitDuration
          type: string
        ReplicaSetCheckTimeoutInMilliseconds:
          description: "The maximum amount of time to block processing of an upgrade\
            \ domain and prevent loss of availability when there are unexpected issues.\
            \ When this timeout expires, processing of the upgrade domain will proceed\
            \ regardless of availability loss issues. The timeout is reset at the\
            \ start of each upgrade domain. Valid values are between 0 and 42949672925\
            \ inclusive. (unsigned 32-bit integer)."
          format: int64
          title: UpgradeReplicaSetCheckTimeoutInSeconds
          type: integer
        RollingUpgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
        UpgradeDomainTimeoutInMilliseconds:
          default: P10675199DT02H48M05.4775807S
          description: "The amount of time each upgrade domain has to complete before\
            \ FailureAction is executed. It is first interpreted as a string representing\
            \ an ISO 8601 duration. If that fails, then it is interpreted as a number\
            \ representing the total number of milliseconds."
          title: UpgradeDomainTimeout
          type: string
        UpgradeTimeoutInMilliseconds:
          default: P10675199DT02H48M05.4775807S
          description: "The amount of time the overall upgrade has to complete before\
            \ FailureAction is executed. It is first interpreted as a string representing\
            \ an ISO 8601 duration. If that fails, then it is interpreted as a number\
            \ representing the total number of milliseconds."
          title: UpgradeTimeout
          type: string
      required:
      - RollingUpgradeMode
      title: RollingUpgradeUpdateDescription
      type: object
    SafetyCheck:
      description: Represents a safety check performed by service fabric before continuing
        with the operations. These checks ensure the availability of the service and
        the reliability of the state.
      discriminator:
        propertyName: Kind
      example:
        Kind: Invalid
      properties:
        Kind:
          $ref: '#/components/schemas/SafetyCheckKind'
      required:
      - Kind
      title: SafetyCheck
      type: object
    SafetyCheckInfoList:
      description: List of pending safety checks
      items:
        $ref: '#/components/schemas/SafetyCheckWrapper'
      title: SafetyCheckInfoList
      type: array
    SafetyCheckKind:
      description: |
        The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.

        - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.
        - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.
        - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.
        - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.
        - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.
        - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.
        - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
      enum:
      - Invalid
      - EnsureSeedNodeQuorum
      - EnsurePartitionQuorum
      - WaitForPrimaryPlacement
      - WaitForPrimarySwap
      - WaitForReconfiguration
      - WaitForInbuildReplica
      - EnsureAvailability
      title: SafetyCheckKind
      type: string
    SafetyCheckWrapper:
      description: A wrapper for the safety check object. Safety checks are performed
        by service fabric before continuing with the operations. These checks ensure
        the availability of the service and the reliability of the state.
      example:
        SafetyCheck:
          Kind: Invalid
      properties:
        SafetyCheck:
          $ref: '#/components/schemas/SafetyCheck'
      title: SafetyCheckWrapper
      type: object
    SecondaryActiveReplicatorStatus:
      allOf:
      - $ref: '#/components/schemas/SecondaryReplicatorStatus'
      - type: object
      description: Status of the secondary replicator when it is in active mode and
        is part of the replica set.
      x-ms-discriminator-value: ActiveSecondary
    SecondaryIdleReplicatorStatus:
      allOf:
      - $ref: '#/components/schemas/SecondaryReplicatorStatus'
      - type: object
      description: Status of the secondary replicator when it is in idle mode and
        is being built by the primary.
      x-ms-discriminator-value: IdleSecondary
    SecondaryReplicatorStatus:
      allOf:
      - $ref: '#/components/schemas/ReplicatorStatus'
      - description: |
          Represents a base class for secondary replicator status.
        properties:
          CopyQueueStatus:
            $ref: '#/components/schemas/ReplicatorQueueStatus'
          IsInBuild:
            description: Value that indicates whether the replica is currently being
              built.
            type: boolean
          LastAcknowledgementSentTimeUtc:
            description: |
              The last time-stamp (UTC) at which an acknowledgment was sent to the primary replicator.
              UTC 0 represents an invalid value, indicating that an acknowledgment message was never sent.
            format: date-time
            type: string
          LastCopyOperationReceivedTimeUtc:
            description: |
              The last time-stamp (UTC) at which a copy operation was received from the primary.
              UTC 0 represents an invalid value, indicating that a copy operation message was never received.
            format: date-time
            type: string
          LastReplicationOperationReceivedTimeUtc:
            description: |
              The last time-stamp (UTC) at which a replication operation was received from the primary.
              UTC 0 represents an invalid value, indicating that a replication operation message was never received.
            format: date-time
            type: string
          ReplicationQueueStatus:
            $ref: '#/components/schemas/ReplicatorQueueStatus'
        type: object
      title: SecondaryReplicatorStatus
    SeedNodeSafetyCheck:
      allOf:
      - $ref: '#/components/schemas/SafetyCheck'
      - description: SeedNodeSafetyCheck
        type: object
      description: Represents a safety check for the seed nodes being performed by
        service fabric before continuing with node level operations.
      x-ms-discriminator-value: EnsureSeedNodeQuorum
    SelectedPartition:
      description: This class returns information about the partition that the user-induced
        operation acted upon.
      example:
        ServiceName: ServiceName
        PartitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        PartitionId:
          description: An internal ID used by Service Fabric to uniquely identify
            a partition. This is a randomly generated GUID when the service was created.
            The partition id is unique and does not change for the lifetime of the
            service. If the same service was deleted and recreated the ids of its
            partitions would be different.
          format: uuid
          title: PartitionId
          type: string
        ServiceName:
          description: The full name of the service with 'fabric:' URI scheme.
          title: ServiceName
          type: string
      title: SelectedPartition
      type: object
    ServiceCorrelationDescription:
      description: Creates a particular correlation between services.
      example:
        Scheme: Invalid
        ServiceName: ServiceName
      properties:
        Scheme:
          $ref: '#/components/schemas/ServiceCorrelationScheme'
        ServiceName:
          description: The full name of the service with 'fabric:' URI scheme.
          title: ServiceName
          type: string
      required:
      - Scheme
      - ServiceName
      title: ServiceCorrelationDescription
      type: object
    ServiceCorrelationScheme:
      description: |
        The service correlation scheme. Possible values are following.

          - Invalid - An invalid correlation scheme. Cannot be used. The value is zero.
          - Affinity - Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.
          - AlignedAffinity - Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.
          - NonAlignedAffinity - Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.
      enum:
      - Invalid
      - Affinity
      - AlignedAffinity
      - NonAlignedAffinity
      title: ServiceCorrelationScheme
      type: string
    ServiceDescription:
      description: A ServiceDescription contains all of the information necessary
        to create a service.
      discriminator:
        propertyName: ServiceKind
      example:
        CorrelationScheme:
        - Scheme: Invalid
          ServiceName: ServiceName
        - Scheme: Invalid
          ServiceName: ServiceName
        ServiceTypeName: ServiceTypeName
        ApplicationName: ApplicationName
        PlacementConstraints: PlacementConstraints
        IsDefaultMoveCostSpecified: true
        ServicePlacementPolicies:
        - Type: Invalid
        - Type: Invalid
        ServicePackageActivationMode: SharedProcess
        DefaultMoveCost: Zero
        ServiceName: ServiceName
        InitializationData:
        - 0
        - 0
        ServiceDnsName: ServiceDnsName
        ServiceLoadMetrics:
        - PrimaryDefaultLoad: 1
          SecondaryDefaultLoad: 5
          DefaultLoad: 6
          Weight: Zero
          Name: Name
        - PrimaryDefaultLoad: 1
          SecondaryDefaultLoad: 5
          DefaultLoad: 6
          Weight: Zero
          Name: Name
        ServiceKind: Invalid
        PartitionDescription:
          PartitionScheme: Invalid
      properties:
        ApplicationName:
          description: "The name of the application, including the 'fabric:' URI scheme."
          title: ApplicationName
          type: string
        CorrelationScheme:
          description: A list that describes the correlation of the service with other
            services.
          items:
            $ref: '#/components/schemas/ServiceCorrelationDescription'
          title: CorrelationScheme
          type: array
        DefaultMoveCost:
          $ref: '#/components/schemas/MoveCost'
        InitializationData:
          description: Array of bytes to be sent as an integer array. Each element
            of array is a number between 0 and 255.
          items:
            type: integer
          title: InitializationData
          type: array
        IsDefaultMoveCostSpecified:
          description: Indicates if the DefaultMoveCost property is specified.
          title: IsDefaultMoveCostSpecified
          type: boolean
        PartitionDescription:
          $ref: '#/components/schemas/PartitionSchemeDescription'
        PlacementConstraints:
          description: "The placement constraints as a string. Placement constraints\
            \ are boolean expressions on node properties and allow for restricting\
            \ a service to particular nodes based on the service requirements. For\
            \ example, to place a service on nodes where NodeType is blue specify\
            \ the following: \"NodeColor == blue)\"."
          title: PlacementConstraints
          type: string
        ServiceDnsName:
          description: The DNS name of the service. It requires the DNS system service
            to be enabled in Service Fabric cluster.
          title: ServiceDnsName
          type: string
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServiceLoadMetrics:
          description: The service load metrics is given as an array of ServiceLoadMetricDescription
            objects.
          items:
            $ref: '#/components/schemas/ServiceLoadMetricDescription'
          title: ServiceLoadMetrics
          type: array
        ServiceName:
          description: The full name of the service with 'fabric:' URI scheme.
          title: ServiceName
          type: string
        ServicePackageActivationMode:
          $ref: '#/components/schemas/ServicePackageActivationMode'
        ServicePlacementPolicies:
          description: A list that describes the correlation of the service with other
            services.
          items:
            $ref: '#/components/schemas/ServicePlacementPolicyDescription'
          title: ServicePlacementPolicies
          type: array
        ServiceTypeName:
          description: Name of the service type as specified in the service manifest.
          title: ServiceTypeName
          type: string
      required:
      - PartitionDescription
      - ServiceKind
      - ServiceName
      - ServiceTypeName
      title: ServiceDescription
      type: object
    ServiceEndpointRole:
      description: |
        The role of the replica where the endpoint is reported. Possible values are following.

          - Invalid - Indicates the service endpoint role is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - Stateless - Indicates that the service endpoint is of a stateless service. The value is 1.
          - StatefulPrimary - Indicates that the service endpoint is of a primary replica of a stateful service. The value is 2.
          - StatefulSecondary -  Indicates that the service endpoint is of a secondary replica of a stateful service. The value is 3.
      enum:
      - Invalid
      - Stateless
      - StatefulPrimary
      - StatefulSecondary
      title: ServiceEndpointRole
      type: string
    ServiceFromTemplateDescription:
      description: |
        Defines description for creating a Service Fabric service from a template defined in the application manifest.
      example:
        ServiceTypeName: ServiceTypeName
        ApplicationName: ApplicationName
        ServicePackageActivationMode: SharedProcess
        ServiceName: ServiceName
        InitializationData:
        - 0
        - 0
        ServiceDnsName: ServiceDnsName
      properties:
        ApplicationName:
          description: "The name of the application, including the 'fabric:' URI scheme."
          title: ApplicationName
          type: string
        InitializationData:
          description: Array of bytes to be sent as an integer array. Each element
            of array is a number between 0 and 255.
          items:
            type: integer
          title: InitializationData
          type: array
        ServiceDnsName:
          description: The DNS name of the service. It requires the DNS system service
            to be enabled in Service Fabric cluster.
          title: ServiceDnsName
          type: string
        ServiceName:
          description: The full name of the service with 'fabric:' URI scheme.
          title: ServiceName
          type: string
        ServicePackageActivationMode:
          $ref: '#/components/schemas/ServicePackageActivationMode'
        ServiceTypeName:
          description: Name of the service type as specified in the service manifest.
          title: ServiceTypeName
          type: string
      required:
      - ApplicationName
      - ServiceName
      - ServiceTypeName
      title: ServiceFromTemplateDescription
      type: object
    ServiceHealth:
      allOf:
      - $ref: '#/components/schemas/EntityHealth'
      - description: ServiceHealth
        properties:
          Name:
            $ref: '#/components/schemas/ServiceName'
          PartitionHealthStates:
            description: The list of partition health states associated with the service.
            items:
              $ref: '#/components/schemas/PartitionHealthState'
            type: array
        type: object
      description: Information about the health of a Service Fabric service.
      example:
        AggregatedHealthState: Invalid
        HealthStatistics:
          HealthStateCountList:
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
          - HealthStateCount:
              WarningCount: 0
              OkCount: 0
              ErrorCount: 0
            EntityKind: Invalid
        PartitionHealthStates:
        - AggregatedHealthState: null
          PartitionId: null
        - AggregatedHealthState: null
          PartitionId: null
        UnhealthyEvaluations:
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        - HealthEvaluation:
            AggregatedHealthState: null
            Description: Description
            Kind: Invalid
        HealthEvents:
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        - RemoveWhenExpired: true
          TimeToLiveInMilliSeconds: TimeToLiveInMilliSeconds
          IsExpired: true
          Description: Description
          SourceUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SourceId: SourceId
          LastErrorTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastOkTransitionAt: 2000-01-23T04:56:07.000+00:00
          LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
          SequenceNumber: SequenceNumber
          LastWarningTransitionAt: 2000-01-23T04:56:07.000+00:00
          Property: Property
          HealthState: null
        Name: null
      title: ServiceHealth
    ServiceHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: ServiceHealthEvaluation
        properties:
          ServiceName:
            $ref: '#/components/schemas/ServiceName'
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for a service, containing information\
        \ about the data and the algorithm used by health store to evaluate health.\
        \ The evaluation is returned only when the aggregated health state is either\
        \ Error or Warning."
      x-ms-discriminator-value: Service
    ServiceHealthState:
      allOf:
      - $ref: '#/components/schemas/EntityHealthState'
      - description: ServiceHealthState
        properties:
          ServiceName:
            $ref: '#/components/schemas/ServiceName'
        type: object
      description: "Represents the health state of a service, which contains the service\
        \ identifier and its aggregated health state."
      example:
        AggregatedHealthState: null
        ServiceName: null
      title: ServiceHealthState
    ServiceHealthStateChunk:
      allOf:
      - $ref: '#/components/schemas/EntityHealthStateChunk'
      - description: ServiceHealthStateChunk
        properties:
          PartitionHealthStateChunks:
            $ref: '#/components/schemas/PartitionHealthStateChunkList'
          ServiceName:
            $ref: '#/components/schemas/ServiceName'
        type: object
      description: |
        Represents the health state chunk of a service, which contains the service name, its aggregated health state and any partitions that respect the filters in the cluster health chunk query description.
      example:
        ServiceName: null
        PartitionHealthStateChunks:
          Items:
          - ReplicaHealthStateChunks:
              Items:
              - HealthState: null
                ReplicaOrInstanceId: null
              - HealthState: null
                ReplicaOrInstanceId: null
            PartitionId: null
            HealthState: null
          - ReplicaHealthStateChunks:
              Items:
              - HealthState: null
                ReplicaOrInstanceId: null
              - HealthState: null
                ReplicaOrInstanceId: null
            PartitionId: null
            HealthState: null
        HealthState: null
      title: ServiceHealthStateChunk
    ServiceHealthStateChunkList:
      description: |
        The list of service health state chunks that respect the input filters in the chunk query. Returned by get cluster health state chunks query.
      example:
        Items:
        - ServiceName: null
          PartitionHealthStateChunks:
            Items:
            - ReplicaHealthStateChunks:
                Items:
                - HealthState: null
                  ReplicaOrInstanceId: null
                - HealthState: null
                  ReplicaOrInstanceId: null
              PartitionId: null
              HealthState: null
            - ReplicaHealthStateChunks:
                Items:
                - HealthState: null
                  ReplicaOrInstanceId: null
                - HealthState: null
                  ReplicaOrInstanceId: null
              PartitionId: null
              HealthState: null
          HealthState: null
        - ServiceName: null
          PartitionHealthStateChunks:
            Items:
            - ReplicaHealthStateChunks:
                Items:
                - HealthState: null
                  ReplicaOrInstanceId: null
                - HealthState: null
                  ReplicaOrInstanceId: null
              PartitionId: null
              HealthState: null
            - ReplicaHealthStateChunks:
                Items:
                - HealthState: null
                  ReplicaOrInstanceId: null
                - HealthState: null
                  ReplicaOrInstanceId: null
              PartitionId: null
              HealthState: null
          HealthState: null
      properties:
        Items:
          description: |
            The list of service health state chunks that respect the input filters in the chunk query.
          items:
            $ref: '#/components/schemas/ServiceHealthStateChunk'
          title: Items
          type: array
      title: ServiceHealthStateChunkList
      type: object
    ServiceHealthStateFilter:
      description: |
        Defines matching criteria to determine whether a service should be included as a child of an application in the cluster health chunk.
        The services are only returned if the parent application matches a filter specified in the cluster health chunk query description.
        One filter can match zero, one or multiple services, depending on its properties.
      example:
        ServiceNameFilter: ServiceNameFilter
        HealthStateFilter: 5
        PartitionFilters:
        - ReplicaFilters:
          - HealthStateFilter: 2
            ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
          - HealthStateFilter: 2
            ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
          HealthStateFilter: 5
          PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - ReplicaFilters:
          - HealthStateFilter: 2
            ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
          - HealthStateFilter: 2
            ReplicaOrInstanceIdFilter: ReplicaOrInstanceIdFilter
          HealthStateFilter: 5
          PartitionIdFilter: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        HealthStateFilter:
          description: |
            The filter for the health state of the services. It allows selecting services if they match the desired health states.
            The possible values are integer value of one of the following health states. Only services that match the filter are returned. All services are used to evaluate the cluster aggregated health state.
            If not specified, default value is None, unless the service name is specified. If the filter has default value and service name is specified, the matching service is returned.
            The state values are flag based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
            For example, if the provided value is 6, it matches services with HealthState value of OK (2) and Warning (4).

            - Default - Default value. Matches any HealthState. The value is zero.
            - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
            - Ok - Filter that matches input with HealthState value Ok. The value is 2.
            - Warning - Filter that matches input with HealthState value Warning. The value is 4.
            - Error - Filter that matches input with HealthState value Error. The value is 8.
            - All - Filter that matches input with any HealthState value. The value is 65535.
          title: HealthStateFilter
          type: integer
        PartitionFilters:
          description: |
            Defines a list of filters that specify which partitions to be included in the returned cluster health chunk as children of the service. The partitions are returned only if the parent service matches a filter.
            If the list is empty, no partitions are returned. All the partitions are used to evaluate the parent service aggregated health state, regardless of the input filters.
            The service filter may specify multiple partition filters.
            For example, it can specify a filter to return all partitions with health state Error and another filter to always include a partition identified by its partition id.
          items:
            $ref: '#/components/schemas/PartitionHealthStateFilter'
          title: PartitionFilters
          type: array
        ServiceNameFilter:
          description: |
            The name of the service that matches the filter. The filter is applied only to the specified service, if it exists.
            If the service doesn't exist, no service is returned in the cluster health chunk based on this filter.
            If the service exists, it is included as the application's child if the health state matches the other filter properties.
            If not specified, all services that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.
          title: ServiceNameFilter
          type: string
      title: ServiceHealthStateFilter
      type: object
    ServiceId:
      description: |
        The identity of the service. This is an encoded representation of the service name. This is used in the REST APIs to identify the service resource.

        Starting in version 6.0, hierarchical names are delimited with the "~" character. For example, if the service name is "fabric://myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.
      title: ServiceId
      type: string
    ServiceInfo:
      description: Information about a Service Fabric service.
      discriminator:
        propertyName: ServiceKind
      example:
        TypeName: TypeName
        ServiceStatus: Unknown
        ManifestVersion: ManifestVersion
        Id: Id
        IsServiceGroup: true
        ServiceKind: Invalid
        HealthState: Invalid
        Name: Name
      properties:
        HealthState:
          $ref: '#/components/schemas/HealthState'
        Id:
          description: |
            The identity of the service. This is an encoded representation of the service name. This is used in the REST APIs to identify the service resource.

            Starting in version 6.0, hierarchical names are delimited with the "~" character. For example, if the service name is "fabric://myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.
          title: ServiceId
          type: string
        IsServiceGroup:
          description: Whether the service is in a service group.
          title: IsServiceGroup
          type: boolean
        ManifestVersion:
          description: The version of the service manifest.
          title: ManifestVersion
          type: string
        Name:
          description: The full name of the service with 'fabric:' URI scheme.
          title: ServiceName
          type: string
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServiceStatus:
          $ref: '#/components/schemas/ServiceStatus'
        TypeName:
          description: Name of the service type as specified in the service manifest.
          title: ServiceTypeName
          type: string
      required:
      - ServiceKind
      title: ServiceInfo
      type: object
    ServiceKind:
      description: |
        The kind of service (Stateless or Stateful). Following are the possible values.

        - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.
        - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
      enum:
      - Invalid
      - Stateless
      - Stateful
      title: ServiceKind
      type: string
    ServiceLoadMetricDescription:
      description: Specifies a metric to load balance a service during runtime.
      example:
        PrimaryDefaultLoad: 1
        SecondaryDefaultLoad: 5
        DefaultLoad: 6
        Weight: Zero
        Name: Name
      properties:
        DefaultLoad:
          description: "Used only for Stateless services. The default amount of load,\
            \ as a number, that this service creates for this metric."
          title: DefaultLoad
          type: integer
        Name:
          description: "The name of the metric. If the service chooses to report load\
            \ during runtime, the load metric name should match the name that is specified\
            \ in Name exactly. Note that metric names are case sensitive."
          title: Name
          type: string
        PrimaryDefaultLoad:
          description: "Used only for Stateful services. The default amount of load,\
            \ as a number, that this service creates for this metric when it is a\
            \ Primary replica."
          title: PrimaryDefaultLoad
          type: integer
        SecondaryDefaultLoad:
          description: "Used only for Stateful services. The default amount of load,\
            \ as a number, that this service creates for this metric when it is a\
            \ Secondary replica."
          title: SecondaryDefaultLoad
          type: integer
        Weight:
          $ref: '#/components/schemas/ServiceLoadMetricWeight'
      required:
      - Name
      title: ServiceLoadMetricDescription
      type: object
    ServiceLoadMetricWeight:
      description: |
        Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight. Possible values are following.

          - Zero - Disables resource balancing for this metric. This value is zero.
          - Low - Specifies the metric weight of the service load as Low. The value is 1.
          - Medium - Specifies the metric weight of the service load as Medium. The value is 2.
          - High - Specifies the metric weight of the service load as High. The value is 3.
      enum:
      - Zero
      - Low
      - Medium
      - High
      title: ServiceLoadMetricWeight
      type: string
    ServiceLoadMetricsList:
      description: The service load metrics is given as an array of ServiceLoadMetricDescription
        objects.
      items:
        $ref: '#/components/schemas/ServiceLoadMetricDescription'
      title: ServiceLoadMetrics
      type: array
    ServiceManifestName:
      description: The name of the service manifest.
      title: ServiceManifestName
      type: string
    ServiceName:
      description: The full name of the service with 'fabric:' URI scheme.
      title: ServiceName
      type: string
    ServiceNameInfo:
      description: Information about the service name.
      example:
        Id: Id
        Name: Name
      properties:
        Id:
          description: |
            The identity of the service. This is an encoded representation of the service name. This is used in the REST APIs to identify the service resource.

            Starting in version 6.0, hierarchical names are delimited with the "~" character. For example, if the service name is "fabric://myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.
          title: ServiceId
          type: string
        Name:
          description: The full name of the service with 'fabric:' URI scheme.
          title: ServiceName
          type: string
      title: ServiceNameInfo
      type: object
    ServiceOperationName:
      description: |
        Specifies the current active life-cycle operation on a stateful service replica or stateless service instance. Possible values are following.
          - Unknown - Reserved for future use.
          - None - The service replica or instance is not going through any life-cycle changes.
          - Open - The service replica or instance is being opened.
          - ChangeRole - The service replica is changing roles.
          - Close - The service replica or instance is being closed.
          - Abort - The service replica or instance is being aborted.
      enum:
      - Unknown
      - None
      - Open
      - ChangeRole
      - Close
      - Abort
      title: ServiceOperationName
      type: string
    ServicePackageActivationId:
      description: |
        The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
        is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
        is always an empty string.
      title: ServicePackageActivationId
      type: string
    ServicePackageActivationMode:
      description: |
        The activation mode of service package to be used for a Service Fabric service. This is specified at the time of creating the Service. Possible values are following.

          - SharedProcess - This is the default activation mode. With this activation mode, replicas or instances from different partition(s) of service, on a given node, will share same activation of service package on a node. The value is zero.
          - ExclusiveProcess - With this activation mode, each replica or instance of service, on a given node, will have its own dedicated activation of service package on a node. The value is 1.
      enum:
      - SharedProcess
      - ExclusiveProcess
      title: ServicePackageActivationMode
      type: string
    ServicePartitionInfo:
      description: Information about a partition of a Service Fabric service.
      discriminator:
        propertyName: ServiceKind
      example:
        PartitionStatus: Invalid
        PartitionInformation:
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ServicePartitionKind: Invalid
        ServiceKind: Invalid
        HealthState: Invalid
      properties:
        HealthState:
          $ref: '#/components/schemas/HealthState'
        PartitionInformation:
          $ref: '#/components/schemas/PartitionInformation'
        PartitionStatus:
          $ref: '#/components/schemas/ServicePartitionStatus'
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
      required:
      - ServiceKind
      title: ServicePartitionInfo
      type: object
    ServicePartitionKind:
      description: "The kind of partitioning scheme used to partition the service.\
        \ Possible values are following.\n\n    -\tInvalid - Indicates the partition\
        \ kind is invalid. All Service Fabric enumerations have the invalid type.\
        \ The value is zero.\n    -\tSingleton - Indicates that there is only one\
        \ partition, and SingletonPartitionSchemeDescription was specified while creating\
        \ the service. The value is 1.\n    -\tInt64Range - Indicates that the partition\
        \ is based on Int64 key ranges, and UniformInt64RangePartitionSchemeDescription\
        \ was specified while creating the service. The value is 2.\n    -\tNamed\
        \ - Indicates that the partition is based on string names, and NamedPartitionInformation\
        \  was specified while creating the service. The value is 3.\n"
      enum:
      - Invalid
      - Singleton
      - Int64Range
      - Named
      title: ServicePartitionKind
      type: string
    ServicePartitionStatus:
      description: |
        The status of the service fabric service partition. Possible values are following.

          - Invalid - Indicates the partition status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - Ready - Indicates that the partition is ready. This means that for a stateless service partition there is atleast one instance that is up and for a stateful service partition the number of ready replicas is greater than or equal to the MinReplicaSetSize. The value is 1.
          - NotReady - Indicates that the partition is not ready. This status is returned when none of the other states apply. The value is 2.
          - InQuorumLoss  - Indicates that the partition is in quorum loss. This means that number of replicas that are up and participating in a replica set is less than MinReplicaSetSize for this partition. The value is 3.
          - Reconfiguring - Indicates that the partition is undergoing reconfiguration of its replica sets. This can happen due to failover, upgrade, load balancing or addition or removal of replicas from the replica set. The value is 4.
          - Deleting - Indicates that the partition is being deleted. The value is 5.
      enum:
      - Invalid
      - Ready
      - NotReady
      - InQuorumLoss
      - Reconfiguring
      - Deleting
      title: ServicePartitionStatus
      type: string
    ServicePlacementInvalidDomainPolicyDescription:
      allOf:
      - $ref: '#/components/schemas/ServicePlacementPolicyDescription'
      - description: ServicePlacementInvalidDomainPolicyDescription
        properties:
          DomainName:
            description: The name of the domain that should not be used for placement.
            type: string
        type: object
      description: Describes the policy to be used for placement of a Service Fabric
        service where a particular fault or upgrade domain should not be used for
        placement of the instances or replicas of that service.
      x-ms-discriminator-value: InvalidDomain
    ServicePlacementNonPartiallyPlaceServicePolicyDescription:
      allOf:
      - $ref: '#/components/schemas/ServicePlacementPolicyDescription'
      - description: ServicePlacementNonPartiallyPlaceServicePolicyDescription
        type: object
      description: |
        Describes the policy to be used for placement of a Service Fabric service where all replicas must be able to be placed in order for any replicas to be created.
      x-ms-discriminator-value: NonPartiallyPlaceService
    ServicePlacementPoliciesList:
      description: A list that describes the correlation of the service with other
        services.
      items:
        $ref: '#/components/schemas/ServicePlacementPolicyDescription'
      title: ServicePlacementPolicies
      type: array
    ServicePlacementPolicyDescription:
      description: Describes the policy to be used for placement of a Service Fabric
        service.
      discriminator:
        propertyName: Type
      example:
        Type: Invalid
      properties:
        Type:
          $ref: '#/components/schemas/ServicePlacementPolicyType'
      required:
      - Type
      title: ServicePlacementPolicyDescription
      type: object
    ServicePlacementPolicyDescriptionList:
      description: List of service placement policy descriptions.
      items:
        $ref: '#/components/schemas/ServicePlacementPolicyDescription'
      title: ServicePlacementPolicies
      type: array
    ServicePlacementPolicyType:
      description: |
        The type of placement policy for a service fabric service. Following are the possible values.

          - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
          - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
          - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
          - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
          - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
      enum:
      - Invalid
      - InvalidDomain
      - RequiredDomain
      - PreferredPrimaryDomain
      - RequiredDomainDistribution
      - NonPartiallyPlaceService
      title: ServicePlacementPolicyType
      type: string
    ServicePlacementPreferPrimaryDomainPolicyDescription:
      allOf:
      - $ref: '#/components/schemas/ServicePlacementPolicyDescription'
      - description: ServicePlacementPreferPrimaryDomainPolicyDescription
        properties:
          DomainName:
            description: The name of the domain that should used for placement as
              per this policy.
            type: string
        type: object
      description: |
        Describes the policy to be used for placement of a Service Fabric service where the service's Primary replicas should optimally be placed in a particular domain.

        This placement policy is usually used with fault domains in scenarios where the Service Fabric cluster is geographically distributed in order to indicate that a service's primary replica should be located in a particular fault domain, which in geo-distributed scenarios usually aligns with regional or datacenter boundaries. Note that since this is an optimization it is possible that the Primary replica may not end up located in this domain due to failures, capacity limits, or other constraints.
      x-ms-discriminator-value: PreferPrimaryDomain
    ServicePlacementRequireDomainDistributionPolicyDescription:
      allOf:
      - $ref: '#/components/schemas/ServicePlacementPolicyDescription'
      - description: ServicePlacementRequireDomainDistributionPolicyDescription
        properties:
          DomainName:
            description: The name of the domain that should used for placement as
              per this policy.
            type: string
        type: object
      description: |
        Describes the policy to be used for placement of a Service Fabric service where two replicas from the same partition should never be placed in the same fault or upgrade domain.

        While this is not common it can expose the service to an increased risk of concurrent failures due to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider a case where replicas are deployed across different data center, with one replica per location. In the event that one of the datacenters goes offline, normally the replica that was placed in that datacenter will be packed into one of the remaining datacenters. If this is not desirable then this policy should be set.
      x-ms-discriminator-value: RequireDomainDistribution
    ServicePlacementRequiredDomainPolicyDescription:
      allOf:
      - $ref: '#/components/schemas/ServicePlacementPolicyDescription'
      - description: ServicePlacementRequiredDomainPolicyDescription
        properties:
          DomainName:
            description: The name of the domain that should used for placement as
              per this policy.
            type: string
        type: object
      description: Describes the policy to be used for placement of a Service Fabric
        service where the instances or replicas of that service must be placed in
        a particular domain
      x-ms-discriminator-value: RequireDomain
    ServiceStatus:
      description: |
        The status of the application. Possible values are:

        - Unknown - Indicates the service status is unknown. The value is zero.
        - Active - Indicates the service status is active. The value is 1.
        - Upgrading - Indicates the service is upgrading. The value is 2.
        - Deleting - Indicates the service is being deleted. The value is 3.
        - Creating - Indicates the service is being created. The value is 4.
        - Failed - Indicates creation or deletion was terminated due to persistent failures. Another create/delete request can be accepted. The value is 5.
      enum:
      - Unknown
      - Active
      - Upgrading
      - Deleting
      - Creating
      - Failed
      title: ServiceStatus
      type: string
    ServiceTypeDescription:
      description: Describes a service type defined in the service manifest of a provisioned
        application type. The properties the the ones defined in the service manifest.
      discriminator:
        propertyName: Kind
      example:
        ServiceTypeName: ServiceTypeName
        Kind: Invalid
        PlacementConstraints: PlacementConstraints
        Extensions:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        IsStateful: true
        ServicePlacementPolicies:
        - Type: Invalid
        - Type: Invalid
      properties:
        Extensions:
          description: List of service type extensions.
          items:
            $ref: '#/components/schemas/ServiceTypeExtensionDescription'
          title: Extensions
          type: array
        IsStateful:
          description: "Indicates whether the service type is a stateful service type\
            \ or a stateless service type. This property is true if the service type\
            \ is a stateful service type, false otherwise."
          title: IsStateful
          type: boolean
        Kind:
          $ref: '#/components/schemas/ServiceKind'
        PlacementConstraints:
          description: The placement constraint to be used when instantiating this
            service in a Service Fabric cluster.
          title: PlacementConstraints
          type: string
        ServicePlacementPolicies:
          description: List of service placement policy descriptions.
          items:
            $ref: '#/components/schemas/ServicePlacementPolicyDescription'
          title: ServicePlacementPolicies
          type: array
        ServiceTypeName:
          description: Name of the service type as specified in the service manifest.
          title: ServiceTypeName
          type: string
      required:
      - Kind
      title: ServiceTypeDescription
      type: object
    ServiceTypeExtensionDescription:
      description: Describes extension of a service type defined in the service manifest.
      example:
        Value: Value
        Key: Key
      properties:
        Key:
          description: The name of the extension.
          title: Key
          type: string
        Value:
          description: The extension value.
          title: Value
          type: string
      title: ServiceTypeExtensionDescription
      type: object
    ServiceTypeExtensionDescriptionList:
      description: List of service type extensions.
      items:
        $ref: '#/components/schemas/ServiceTypeExtensionDescription'
      title: Extensions
      type: array
    ServiceTypeHealthPolicy:
      description: |
        Represents the health policy used to evaluate the health of services belonging to a service type.
      example:
        MaxPercentUnhealthyReplicasPerPartition: 6
        MaxPercentUnhealthyServices: 1
        MaxPercentUnhealthyPartitionsPerService: 0
      properties:
        MaxPercentUnhealthyPartitionsPerService:
          description: |
            The maximum allowed percentage of unhealthy partitions per service. Allowed values are Byte values from zero to 100

            The percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.
            If the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.
            The percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.
            The computation rounds up to tolerate one failure on small numbers of partitions. Default percentage is zero.
          title: MaxPercentUnhealthyPartitionsPerService
          type: integer
        MaxPercentUnhealthyReplicasPerPartition:
          description: |
            The maximum allowed percentage of unhealthy replicas per partition. Allowed values are Byte values from zero to 100.

            The percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.
            If the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.
            The percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.
            The computation rounds up to tolerate one failure on small numbers of replicas. Default percentage is zero.
          title: MaxPercentUnhealthyReplicasPerPartition
          type: integer
        MaxPercentUnhealthyServices:
          description: |
            The maximum maximum allowed percentage of unhealthy services. Allowed values are Byte values from zero to 100.

            The percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.
            If the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.
            This is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.
            The computation rounds up to tolerate one failure on small numbers of services. Default percentage is zero.
          title: MaxPercentUnhealthyServices
          type: integer
      title: ServiceTypeHealthPolicy
      type: object
    ServiceTypeHealthPolicyMap:
      description: |
        Defines a ServiceTypeHealthPolicy per service type name.

        The entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.

        If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
      items:
        $ref: '#/components/schemas/ServiceTypeHealthPolicyMapItem'
      title: ServiceTypeHealthPolicyMap
      type: array
    ServiceTypeHealthPolicyMapItem:
      description: |
        Defines an item in ServiceTypeHealthPolicyMap.
      example:
        Value:
          MaxPercentUnhealthyReplicasPerPartition: 6
          MaxPercentUnhealthyServices: 1
          MaxPercentUnhealthyPartitionsPerService: 0
        Key: Key
      properties:
        Key:
          description: The key of the service type health policy map item. This is
            the name of the service type.
          title: Key
          type: string
        Value:
          $ref: '#/components/schemas/ServiceTypeHealthPolicy'
      required:
      - Key
      - Value
      title: ServiceTypeHealthPolicyMapItem
      type: object
    ServiceTypeInfo:
      description: Information about a service type that is defined in a service manifest
        of a provisioned application type.
      example:
        ServiceTypeDescription:
          ServiceTypeName: ServiceTypeName
          Kind: Invalid
          PlacementConstraints: PlacementConstraints
          Extensions:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          IsStateful: true
          ServicePlacementPolicies:
          - Type: Invalid
          - Type: Invalid
        ServiceManifestVersion: ServiceManifestVersion
        ServiceManifestName: ServiceManifestName
        IsServiceGroup: true
      properties:
        IsServiceGroup:
          description: "Indicates whether the service is a service group. If it is,\
            \ the property value is true otherwise false."
          title: IsServiceGroup
          type: boolean
        ServiceManifestName:
          description: The name of the service manifest.
          title: ServiceManifestName
          type: string
        ServiceManifestVersion:
          description: The version of the service manifest in which this service type
            is defined.
          title: ServiceManifestVersion
          type: string
        ServiceTypeDescription:
          $ref: '#/components/schemas/ServiceTypeDescription'
      title: ServiceTypeInfo
      type: object
    ServiceTypeInfoList:
      description: List of service type information.
      items:
        $ref: '#/components/schemas/ServiceTypeInfo'
      type: array
    ServiceTypeManifest:
      description: Contains the manifest describing a service type registered as part
        of an application in a Service Fabric cluster.
      example:
        Manifest: Manifest
      properties:
        Manifest:
          description: The XML manifest as a string.
          title: Manifest
          type: string
      title: ServiceTypeManifest
      type: object
    ServiceTypeName:
      description: Name of the service type as specified in the service manifest.
      title: ServiceTypeName
      type: string
    ServiceTypeRegistrationStatus:
      description: |
        The status of the service type registration on the node. Possible values are following.

          - Invalid - Indicates the registration status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - Disabled - Indicates that the service type is disabled on this node. A type gets disabled when there are too many failures of the code package hosting the service type. If the service type is disabled, new replicas of that service type will not be placed on the node until it is enabled again. The service type is enabled again after the process hosting it comes up and re-registers the type or a preconfigured time interval has passed. The value is 1.
          - Enabled - Indicates that the service type is enabled on this node. Replicas of this service type can be placed on this node when the code package registeres the service type. The value is 2.
          - Registered - Indicates that the sevice type is enabled and registered on the node by a code package. Replicas of this service type can now be olaced on this node. The value is 3.
      enum:
      - Invalid
      - Disabled
      - Enabled
      - Registered
      title: ServiceTypeRegistrationStatus
      type: string
    ServiceUpdateDescription:
      description: A ServiceUpdateDescription contains all of the information necessary
        to update a service.
      discriminator:
        propertyName: ServiceKind
      example:
        CorrelationScheme:
        - Scheme: Invalid
          ServiceName: ServiceName
        - Scheme: Invalid
          ServiceName: ServiceName
        DefaultMoveCost: Zero
        PlacementConstraints: PlacementConstraints
        Flags: Flags
        ServiceKind: Invalid
        ServicePlacementPolicies:
        - Type: Invalid
        - Type: Invalid
        LoadMetrics:
        - PrimaryDefaultLoad: 1
          SecondaryDefaultLoad: 5
          DefaultLoad: 6
          Weight: Zero
          Name: Name
        - PrimaryDefaultLoad: 1
          SecondaryDefaultLoad: 5
          DefaultLoad: 6
          Weight: Zero
          Name: Name
      properties:
        CorrelationScheme:
          description: A list that describes the correlation of the service with other
            services.
          items:
            $ref: '#/components/schemas/ServiceCorrelationDescription'
          title: CorrelationScheme
          type: array
        DefaultMoveCost:
          $ref: '#/components/schemas/MoveCost'
        Flags:
          description: |
            Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified.
            This property can be a combination of those flags obtained using bitwise 'OR' operator.
            For example, if the provided value is 6 then the flags for ReplicaRestartWaitDuration (2) and QuorumLossWaitDuration (4) are set.

            - None - Does not indicate any other properties are set. The value is zero.
            - TargetReplicaSetSize/InstanceCount - Indicates whether the TargetReplicaSetSize property (for Stateful services) or the InstanceCount property (for Stateless services) is set. The value is 1.
            - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is  2.
            - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 4.
            - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 8.
            - MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The value is 16.
            - PlacementConstraints - Indicates the PlacementConstraints property is set. The value is 32.
            - PlacementPolicyList - Indicates the ServicePlacementPolicies property is set. The value is 64.
            - Correlation - Indicates the CorrelationScheme property is set. The value is 128.
            - Metrics - Indicates the ServiceLoadMetrics property is set. The value is 256.
            - DefaultMoveCost - Indicates the DefaultMoveCost property is set. The value is 512.
          title: Flags
          type: string
        LoadMetrics:
          description: The service load metrics is given as an array of ServiceLoadMetricDescription
            objects.
          items:
            $ref: '#/components/schemas/ServiceLoadMetricDescription'
          title: ServiceLoadMetrics
          type: array
        PlacementConstraints:
          description: "The placement constraints as a string. Placement constraints\
            \ are boolean expressions on node properties and allow for restricting\
            \ a service to particular nodes based on the service requirements. For\
            \ example, to place a service on nodes where NodeType is blue specify\
            \ the following: \"NodeColor == blue)\"."
          title: PlacementConstraints
          type: string
        ServiceKind:
          $ref: '#/components/schemas/ServiceKind'
        ServicePlacementPolicies:
          description: A list that describes the correlation of the service with other
            services.
          items:
            $ref: '#/components/schemas/ServicePlacementPolicyDescription'
          title: ServicePlacementPolicies
          type: array
      required:
      - ServiceKind
      title: ServiceUpdateDescription
      type: object
    ServicesHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: ServicesHealthEvaluation
        properties:
          MaxPercentUnhealthyServices:
            description: Maximum allowed percentage of unhealthy services from the
              ServiceTypeHealthPolicy.
            type: integer
          ServiceTypeName:
            description: Name of the service type of the services.
            type: string
          TotalCount:
            description: Total number of services of the current service type in the
              application from the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for services of a certain service\
        \ type belonging to an application, containing health evaluations for each\
        \ unhealthy service that impacted current aggregated health state. Can be\
        \ returned when evaluating application health and the aggregated health state\
        \ is either Error or Warning."
      x-ms-discriminator-value: Services
    SingletonPartitionInformation:
      allOf:
      - $ref: '#/components/schemas/PartitionInformation'
      - description: StatelessServicePartitionInfo
        type: object
      description: Information about a partition that is singleton. The services with
        singletone partitioning scheme are effectively non-partitioned. They only
        have one partition.
      x-ms-discriminator-value: Singleton
    SingletonPartitionSchemeDescription:
      allOf:
      - $ref: '#/components/schemas/PartitionSchemeDescription'
      - description: SingletonPartitionSchemeDescription
        type: object
      description: "Describes the partition scheme of a singleton-partitioned, or\
        \ non-partitioned service."
      x-ms-discriminator-value: Singleton
    StartClusterUpgradeDescription:
      description: Describes the parameters for starting a cluster upgrade.
      example:
        ClusterHealthPolicy:
          ApplicationTypeHealthPolicyMap:
          - Value: 5
            Key: Key
          - Value: 5
            Key: Key
          ConsiderWarningAsError: false
          MaxPercentUnhealthyNodes: 7
          MaxPercentUnhealthyApplications: 2
        ApplicationHealthPolicyMap:
          ApplicationHealthPolicyMap:
          - Value:
              DefaultServiceTypeHealthPolicy:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              ConsiderWarningAsError: false
              MaxPercentUnhealthyDeployedApplications: 5
              ServiceTypeHealthPolicyMap:
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
            Key: Key
          - Value:
              DefaultServiceTypeHealthPolicy:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              ConsiderWarningAsError: false
              MaxPercentUnhealthyDeployedApplications: 5
              ServiceTypeHealthPolicyMap:
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
            Key: Key
        ClusterUpgradeHealthPolicy:
          MaxPercentDeltaUnhealthyNodes: 8
          MaxPercentUpgradeDomainDeltaUnhealthyNodes: 60
        UpgradeKind: Rolling
        RollingUpgradeMode: UnmonitoredAuto
        ForceRestart: false
        ConfigVersion: ConfigVersion
        CodeVersion: CodeVersion
        UpgradeReplicaSetCheckTimeoutInSeconds: 0
        MonitoringPolicy:
          UpgradeDomainTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          FailureAction: Invalid
          UpgradeTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          HealthCheckStableDurationInMilliseconds: PT0H2M0S
          HealthCheckRetryTimeoutInMilliseconds: PT0H10M0S
          HealthCheckWaitDurationInMilliseconds: "0"
        EnableDeltaHealthEvaluation: true
      properties:
        ApplicationHealthPolicyMap:
          $ref: '#/components/schemas/ApplicationHealthPolicies'
        ClusterHealthPolicy:
          $ref: '#/components/schemas/ClusterHealthPolicy'
        ClusterUpgradeHealthPolicy:
          $ref: '#/components/schemas/ClusterUpgradeHealthPolicyObject'
        CodeVersion:
          description: The cluster code version.
          title: CodeVersion
          type: string
        ConfigVersion:
          description: The cluster configuration version.
          title: ConfigVersion
          type: string
        EnableDeltaHealthEvaluation:
          description: "When true, enables delta health evaluation rather than absolute\
            \ health evaluation after completion of each upgrade domain."
          title: EnableDeltaHealthEvaluation
          type: boolean
        ForceRestart:
          default: false
          description: "If true, then processes are forcefully restarted during upgrade\
            \ even when the code version has not changed (the upgrade only changes\
            \ configuration or data)."
          title: ForceRestart
          type: boolean
        MonitoringPolicy:
          $ref: '#/components/schemas/MonitoringPolicyDescription'
        RollingUpgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
        UpgradeKind:
          $ref: '#/components/schemas/UpgradeKind'
        UpgradeReplicaSetCheckTimeoutInSeconds:
          description: "The maximum amount of time to block processing of an upgrade\
            \ domain and prevent loss of availability when there are unexpected issues.\
            \ When this timeout expires, processing of the upgrade domain will proceed\
            \ regardless of availability loss issues. The timeout is reset at the\
            \ start of each upgrade domain. Valid values are between 0 and 42949672925\
            \ inclusive. (unsigned 32-bit integer)."
          format: int64
          title: UpgradeReplicaSetCheckTimeoutInSeconds
          type: integer
      title: StartClusterUpgradeDescription
      type: object
    StartedChaosEvent:
      allOf:
      - $ref: '#/components/schemas/ChaosEvent'
      - description: StartedChaosEvent
        properties:
          ChaosParameters:
            $ref: '#/components/schemas/ChaosParameters'
        type: object
      description: Describes a Chaos event that gets generated when Chaos is started.
      x-ms-discriminator-value: Started
    StatefulServiceDescription:
      allOf:
      - $ref: '#/components/schemas/ServiceDescription'
      - description: StatefulServiceDescription
        type: object
      description: Describes a stateful service.
      properties:
        Flags:
          description: |
            Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified.
            This property can be a combination of those flags obtained using bitwise 'OR' operator.
            For example, if the provided value is 6 then the flags for QuorumLossWaitDuration (2) and StandByReplicaKeepDuration(4) are set.

            - None - Does not indicate any other properties are set. The value is zero.
            - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is 1.
            - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 2.
            - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 4.
          type: integer
        HasPersistedState:
          description: "A flag indicating whether this is a persistent service which\
            \ stores states on the local disk. If it is then the value of this property\
            \ is true, if not it is false."
          type: boolean
        MinReplicaSetSize:
          description: The minimum replica set size as a number.
          minimum: 1
          type: integer
        QuorumLossWaitDurationSeconds:
          description: "The maximum duration, in seconds, for which a partition is\
            \ allowed to be in a state of quorum loss."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        ReplicaRestartWaitDurationSeconds:
          description: "The duration, in seconds, between when a replica goes down\
            \ and when a new replica is created."
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        StandByReplicaKeepDurationSeconds:
          description: The definition on how long StandBy replicas should be maintained
            before being removed.
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        TargetReplicaSetSize:
          description: The target replica set size as a number.
          minimum: 1
          type: integer
      required:
      - HasPersistedState
      - MinReplicaSetSize
      - TargetReplicaSetSize
      x-ms-discriminator-value: Stateful
    StatefulServiceInfo:
      allOf:
      - $ref: '#/components/schemas/ServiceInfo'
      - description: StatefulService
        properties:
          HasPersistedState:
            description: Whether the service has persisted state.
            type: boolean
        type: object
      description: Information about a stateful Service Fabric service.
      x-ms-discriminator-value: Stateful
    StatefulServicePartitionInfo:
      allOf:
      - $ref: '#/components/schemas/ServicePartitionInfo'
      - description: StatefulServicePartitionInfo
        type: object
      description: Information about a partition of a stateful Service Fabric service..
      properties:
        CurrentConfigurationEpoch:
          $ref: '#/components/schemas/Epoch'
        LastQuorumLossDuration:
          description: "The duration for which this partition was in quorum loss.\
            \ If the partition is currently in quorum loss, it returns the duration\
            \ since it has been in that state. This field is using ISO8601 format\
            \ for specifying the duration."
          format: duration
          type: string
        MinReplicaSetSize:
          description: The minimum replica set size as a number.
          format: int64
          type: integer
        TargetReplicaSetSize:
          description: The target replica set size as a number.
          format: int64
          type: integer
      x-ms-discriminator-value: Stateful
    StatefulServiceReplicaHealth:
      allOf:
      - $ref: '#/components/schemas/ReplicaHealth'
      - description: StatefulServiceReplicaHealth
        properties:
          ReplicaId:
            $ref: '#/components/schemas/ReplicaId'
        type: object
      description: |
        Represents the health of the stateful service replica.
        Contains the replica aggregated health state, the health events and the unhealthy evaluations.
      x-ms-discriminator-value: Stateful
    StatefulServiceReplicaHealthState:
      allOf:
      - $ref: '#/components/schemas/ReplicaHealthState'
      - description: StatefulServiceReplicaHealthState
        properties:
          ReplicaId:
            $ref: '#/components/schemas/ReplicaId'
        type: object
      description: "Represents the health state of the stateful service replica, which\
        \ contains the replica id and the aggregated health state."
      x-ms-discriminator-value: Stateful
    StatefulServiceReplicaInfo:
      allOf:
      - $ref: '#/components/schemas/ReplicaInfo'
      - description: StatefulServiceReplicaInfo
        properties:
          ReplicaId:
            $ref: '#/components/schemas/ReplicaId'
          ReplicaRole:
            $ref: '#/components/schemas/ReplicaRole'
        type: object
      description: "Represents a stateful service replica. This includes information\
        \ about the identity, role, status, health, node name, uptime, and other details\
        \ about the replica."
      x-ms-discriminator-value: Stateful
    StatefulServiceTypeDescription:
      allOf:
      - $ref: '#/components/schemas/ServiceTypeDescription'
      - description: StatefulServiceTypeDescription
        type: object
      description: Describes a stateful service type defined in the service manifest
        of a provisioned application type.
      properties:
        HasPersistedState:
          description: "A flag indicating whether this is a persistent service which\
            \ stores states on the local disk. If it is then the value of this property\
            \ is true, if not it is false."
          type: boolean
      x-ms-discriminator-value: Stateful
    StatefulServiceUpdateDescription:
      allOf:
      - $ref: '#/components/schemas/ServiceUpdateDescription'
      - description: StatefulServiceUpdateDescription
        type: object
      description: Describes an update for a stateful service.
      properties:
        MinReplicaSetSize:
          description: The minimum replica set size as a number.
          minimum: 1
          type: integer
        QuorumLossWaitDurationSeconds:
          description: "The maximum duration, in seconds, for which a partition is\
            \ allowed to be in a state of quorum loss."
          type: string
        ReplicaRestartWaitDurationSeconds:
          description: "The duration, in seconds, between when a replica goes down\
            \ and when a new replica is created."
          type: string
        StandByReplicaKeepDurationSeconds:
          description: The definition on how long StandBy replicas should be maintained
            before being removed.
          type: string
        TargetReplicaSetSize:
          description: The target replica set size as a number.
          minimum: 1
          type: integer
      x-ms-discriminator-value: Stateful
    StatelessServiceDescription:
      allOf:
      - $ref: '#/components/schemas/ServiceDescription'
      - description: StatelessServiceDescription
        type: object
      description: Describes a stateless service.
      properties:
        InstanceCount:
          description: The instance count.
          minimum: -1
          type: integer
      required:
      - InstanceCount
      x-ms-discriminator-value: Stateless
    StatelessServiceInfo:
      allOf:
      - $ref: '#/components/schemas/ServiceInfo'
      - description: StatelessService
        type: object
      description: Information about a stateless Service Fabric service.
      x-ms-discriminator-value: Stateless
    StatelessServiceInstanceHealth:
      allOf:
      - $ref: '#/components/schemas/ReplicaHealth'
      - description: StatelessServiceInstanceHealth
        properties:
          InstanceId:
            $ref: '#/components/schemas/InstanceId'
        type: object
      description: |
        Represents the health of the statelss service instance.
        Contains the instance aggregated health state, the health events and the unhealthy evaluations.
      x-ms-discriminator-value: Stateless
    StatelessServiceInstanceHealthState:
      allOf:
      - $ref: '#/components/schemas/ReplicaHealthState'
      - description: StatelessServiceInstanceHealthState
        properties:
          ReplicaId:
            $ref: '#/components/schemas/ReplicaId'
        type: object
      description: "Represents the health state of the stateless service instance,\
        \ which contains the instance id and the aggregated health state."
      x-ms-discriminator-value: Stateless
    StatelessServiceInstanceInfo:
      allOf:
      - $ref: '#/components/schemas/ReplicaInfo'
      - description: StatelessServiceInstanceInfo
        properties:
          InstanceId:
            $ref: '#/components/schemas/InstanceId'
        type: object
      description: "Represents a stateless service instance. This includes information\
        \ about the identity, status, health, node name, uptime, and other details\
        \ about the instance."
      x-ms-discriminator-value: Stateless
    StatelessServicePartitionInfo:
      allOf:
      - $ref: '#/components/schemas/ServicePartitionInfo'
      - description: StatelessServicePartitionInfo
        type: object
      description: Information about a partition of a stateless Service Fabric service.
      properties:
        InstanceCount:
          description: Number of instances of this partition.
          format: int64
          type: integer
      x-ms-discriminator-value: Stateless
    StatelessServiceTypeDescription:
      allOf:
      - $ref: '#/components/schemas/ServiceTypeDescription'
      - description: StatelessServiceTypeDescription
        type: object
      description: Describes a stateless service type defined in the service manifest
        of a provisioned application type.
      properties:
        UseImplicitHost:
          description: "A flag indicating if this type is not implemented and hosted\
            \ by a user service process, but is implicitly hosted by a system created\
            \ process. This value is true for services using the guest executable\
            \ services, false otherwise."
          type: boolean
      x-ms-discriminator-value: Stateless
    StatelessServiceUpdateDescription:
      allOf:
      - $ref: '#/components/schemas/ServiceUpdateDescription'
      - description: StatelessServiceUpdateDescription
        type: object
      description: Describes an update for a stateless service.
      properties:
        InstanceCount:
          description: The instance count.
          minimum: -1
          type: integer
      x-ms-discriminator-value: Stateless
    StoppedChaosEvent:
      allOf:
      - $ref: '#/components/schemas/ChaosEvent'
      - description: StoppedChaosEvent
        properties:
          Reason:
            type: string
        type: object
      description: Describes a Chaos event that gets generated when Chaos stops because
        either the user issued a stop or the time to run was up.
      x-ms-discriminator-value: Stopped
    StringPropertyValue:
      allOf:
      - $ref: '#/components/schemas/PropertyValue'
      - description: StringPropertyValue
        type: object
      description: Describes a Service Fabric property value of type String.
      properties:
        Data:
          description: The data of the property value.
          type: string
      required:
      - Data
      x-ms-discriminator-value: String
    SuccessfulPropertyBatchInfo:
      allOf:
      - $ref: '#/components/schemas/PropertyBatchInfo'
      - description: SuccessfulPropertyBatchInfo
        type: object
      description: Derived from PropertyBatchInfo. Represents the property batch succeeding.
        Contains the results of any "Get" operations in the batch.
      example:
        Properties:
          key:
            Metadata:
              TypeId: Invalid
              CustomTypeId: CustomTypeId
              LastModifiedUtcTimestamp: 2000-01-23T04:56:07.000+00:00
              Parent: Parent
              SequenceNumber: SequenceNumber
              SizeInBytes: 0
            Value:
              Kind: null
            Name: Name
      properties:
        Properties:
          additionalProperties:
            $ref: '#/components/schemas/PropertyInfo'
          description: "A map containing the properties that were requested through\
            \ any \"Get\" property batch operations. The key represents the index\
            \ of the \"Get\" operation in the original request, in string form. The\
            \ value is the property. If a property is not found, it will not be in\
            \ the map."
          title: Properties
          type: object
      title: SuccessfulPropertyBatchInfo
      x-ms-discriminator-value: Successful
    SystemApplicationHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: SystemApplicationHealthEvaluation
        properties:
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
        type: object
      description: "Represents health evaluation for the fabric:/System application,\
        \ containing information about the data and the algorithm used by health store\
        \ to evaluate health. The evaluation is returned only when the aggregated\
        \ health state of the cluster is either Error or Warning."
      x-ms-discriminator-value: SystemApplication
    TargetApplicationName:
      description: "The name of the target application, including the 'fabric:' URI\
        \ scheme."
      title: Name
      type: string
    TargetApplicationTypeVersion:
      description: The target application type version (found in the application manifest)
        for the application upgrade.
      title: TargetApplicationTypeVersion
      type: string
    TargetDeploymentName:
      description: The name of the target deployment.
      title: DeploymentName
      type: string
    TestErrorChaosEvent:
      allOf:
      - $ref: '#/components/schemas/ChaosEvent'
      - description: TestErrorChaosEvent
        properties:
          Reason:
            type: string
        type: object
      description: |
        Describes a Chaos event that gets generated when an unexpected event occurs in the Chaos engine.
        For example, due to the cluster snapshot being inconsistent, while faulting a faultable entity, Chaos found that the entity was alreay faulted -- which would be an unexpected event.
      x-ms-discriminator-value: TestError
    UnhealthyEvaluations:
      description: List of health evaluations that resulted in the current aggregated
        health state.
      items:
        $ref: '#/components/schemas/HealthEvaluationWrapper'
      title: UnhealthyEvaluations
      type: array
    UniformInt64RangePartitionSchemeDescription:
      allOf:
      - $ref: '#/components/schemas/PartitionSchemeDescription'
      - description: UniformInt64RangePartitionSchemeDescription
        type: object
      description: Describes a partitioning scheme where an integer range is allocated
        evenly across a number of partitions.
      properties:
        Count:
          description: The number of partitions.
          type: integer
        HighKey:
          description: |
            String indicating the upper bound of the partition key range that
            should be split between the partition ‘Count’
          type: string
        LowKey:
          description: |
            String indicating the lower bound of the partition key range that
            should be split between the partition ‘Count’
          type: string
      required:
      - Count
      - HighKey
      - LowKey
      x-ms-discriminator-value: UniformInt64Range
    UnprovisionFabricDescription:
      description: Describes the parameters for unprovisioning a cluster.
      example:
        ConfigVersion: ConfigVersion
        CodeVersion: CodeVersion
      properties:
        CodeVersion:
          description: The cluster code package version.
          title: CodeVersion
          type: string
        ConfigVersion:
          description: The cluster manifest version.
          title: ConfigVersion
          type: string
      title: UnprovisionFabricDescription
      type: object
    UpdateClusterUpgradeDescription:
      description: Parameters for updating a cluster upgrade.
      example:
        ClusterHealthPolicy:
          ApplicationTypeHealthPolicyMap:
          - Value: 5
            Key: Key
          - Value: 5
            Key: Key
          ConsiderWarningAsError: false
          MaxPercentUnhealthyNodes: 7
          MaxPercentUnhealthyApplications: 2
        ApplicationHealthPolicyMap:
          ApplicationHealthPolicyMap:
          - Value:
              DefaultServiceTypeHealthPolicy:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              ConsiderWarningAsError: false
              MaxPercentUnhealthyDeployedApplications: 5
              ServiceTypeHealthPolicyMap:
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
            Key: Key
          - Value:
              DefaultServiceTypeHealthPolicy:
                MaxPercentUnhealthyReplicasPerPartition: 6
                MaxPercentUnhealthyServices: 1
                MaxPercentUnhealthyPartitionsPerService: 0
              ConsiderWarningAsError: false
              MaxPercentUnhealthyDeployedApplications: 5
              ServiceTypeHealthPolicyMap:
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
              - Value:
                  MaxPercentUnhealthyReplicasPerPartition: 6
                  MaxPercentUnhealthyServices: 1
                  MaxPercentUnhealthyPartitionsPerService: 0
                Key: Key
            Key: Key
        ClusterUpgradeHealthPolicy:
          MaxPercentDeltaUnhealthyNodes: 8
          MaxPercentUpgradeDomainDeltaUnhealthyNodes: 60
        UpgradeKind: Rolling
        UpdateDescription:
          UpgradeDomainTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          FailureAction: Invalid
          ReplicaSetCheckTimeoutInMilliseconds: 0
          UpgradeTimeoutInMilliseconds: P10675199DT02H48M05.4775807S
          RollingUpgradeMode: UnmonitoredAuto
          ForceRestart: false
          HealthCheckStableDurationInMilliseconds: PT0H2M0S
          HealthCheckRetryTimeoutInMilliseconds: PT0H10M0S
          HealthCheckWaitDurationInMilliseconds: "0"
        EnableDeltaHealthEvaluation: true
      properties:
        ApplicationHealthPolicyMap:
          $ref: '#/components/schemas/ApplicationHealthPolicies'
        ClusterHealthPolicy:
          $ref: '#/components/schemas/ClusterHealthPolicy'
        ClusterUpgradeHealthPolicy:
          $ref: '#/components/schemas/ClusterUpgradeHealthPolicyObject'
        EnableDeltaHealthEvaluation:
          description: "When true, enables delta health evaluation rather than absolute\
            \ health evaluation after completion of each upgrade domain."
          title: EnableDeltaHealthEvaluation
          type: boolean
        UpdateDescription:
          $ref: '#/components/schemas/RollingUpgradeUpdateDescription'
        UpgradeKind:
          $ref: '#/components/schemas/UpgradeType'
      title: UpdateClusterUpgradeDescription
      type: object
    UpgradeDomainDeltaNodesCheckHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: UpgradeDomainDeltaNodesCheckHealthEvaluation
        properties:
          BaselineErrorCount:
            description: Number of upgrade domain nodes with aggregated heath state
              Error in the health store at the beginning of the cluster upgrade.
            format: int64
            type: integer
          BaselineTotalCount:
            description: Total number of upgrade domain nodes in the health store
              at the beginning of the cluster upgrade.
            format: int64
            type: integer
          MaxPercentDeltaUnhealthyNodes:
            description: Maximum allowed percentage of upgrade domain delta unhealthy
              nodes from the ClusterUpgradeHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of upgrade domain nodes in the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
          UpgradeDomainName:
            description: Name of the upgrade domain where nodes health is currently
              evaluated.
            type: string
        type: object
      description: |
        Represents health evaluation for delta unhealthy cluster nodes in an upgrade domain, containing health evaluations for each unhealthy node that impacted current aggregated health state.
        Can be returned during cluster upgrade when cluster aggregated health state is Warning or Error.
      x-ms-discriminator-value: UpgradeDomainDeltaNodesCheck
    UpgradeDomainDurationString:
      description: The estimated elapsed time spent processing the current upgrade
        domain.
      title: UpgradeDomainDurationInMilliseconds
      type: string
    UpgradeDomainInfo:
      description: Information about an upgrade domain.
      example:
        State: Invalid
        Name: Name
      properties:
        Name:
          description: The name of the upgrade domain
          title: UpgradeDomainName
          type: string
        State:
          $ref: '#/components/schemas/UpgradeDomainState'
      title: UpgradeDomainInfo
      type: object
    UpgradeDomainInfoList:
      description: List of upgrade domains and their statuses.
      items:
        $ref: '#/components/schemas/UpgradeDomainInfo'
      title: UpgradeDomains
      type: array
    UpgradeDomainName:
      description: The name of the upgrade domain
      title: UpgradeDomainName
      type: string
    UpgradeDomainNodesHealthEvaluation:
      allOf:
      - $ref: '#/components/schemas/HealthEvaluation'
      - description: UpgradeDomainNodesHealthEvaluation
        properties:
          MaxPercentUnhealthyNodes:
            description: Maximum allowed percentage of unhealthy nodes from the ClusterHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of nodes in the current upgrade domain.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/components/schemas/UnhealthyEvaluations'
          UpgradeDomainName:
            description: Name of the upgrade domain where nodes health is currently
              evaluated.
            type: string
        type: object
      description: "Represents health evaluation for cluster nodes in an upgrade domain,\
        \ containing health evaluations for each unhealthy node that impacted current\
        \ aggregated health state. Can be returned when evaluating cluster health\
        \ during cluster upgrade and the aggregated health state is either Error or\
        \ Warning."
      x-ms-discriminator-value: UpgradeDomainNodes
    UpgradeDomainState:
      description: |
        The state of the upgrade domain.

            - Invalid - Indicates the upgrade domain state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
            - Pending - The upgrade domain has not started upgrading yet. The value is 1
            - InProgress - The upgrade domain is being upgraded but not complete yet. The value is 2
            - Completed - The upgrade domain has completed upgrade. The value is 3
      enum:
      - Invalid
      - Pending
      - InProgress
      - Completed
      title: UpgradeDomainState
      type: string
    UpgradeDomainTimeout:
      default: P10675199DT02H48M05.4775807S
      description: "The amount of time each upgrade domain has to complete before\
        \ FailureAction is executed. It is first interpreted as a string representing\
        \ an ISO 8601 duration. If that fails, then it is interpreted as a number\
        \ representing the total number of milliseconds."
      title: UpgradeDomainTimeout
      type: string
    UpgradeDuration:
      default: PT0H2M0S
      description: "The estimated amount of time that the overall upgrade elapsed.\
        \ It is first interpreted as a string representing an ISO 8601 duration. If\
        \ that fails, then it is interpreted as a number representing the total number\
        \ of milliseconds."
      title: UpgradeDuration
      type: string
    UpgradeDurationString:
      description: The estimated elapsed time spent processing the current overall
        upgrade.
      title: UpgradeDurationInMilliseconds
      type: string
    UpgradeFailureTimeUTCString:
      description: The failure time of the upgrade in UTC.
      title: FailureTimestampUtc
      type: string
    UpgradeKind:
      default: Rolling
      description: |
        The kind of upgrade out of the following possible values.

            - Invalid - Indicates the upgrade kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
            - Rolling - The upgrade progresses one upgrade domain at a time. The value is 1
      enum:
      - Invalid
      - Rolling
      title: UpgradeKind
      type: string
    UpgradeMode:
      default: UnmonitoredAuto
      description: |
        The mode used to monitor health during a rolling upgrade.

            - Invalid - Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
            - UnmonitoredAuto - The upgrade will proceed automatically without performing any health monitoring. The value is 1
            - UnmonitoredManual - The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2
            - Monitored - The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3
      enum:
      - Invalid
      - UnmonitoredAuto
      - UnmonitoredManual
      - Monitored
      title: UpgradeMode
      type: string
    UpgradeReplicaSetCheckTimeout:
      description: "The maximum amount of time to block processing of an upgrade domain\
        \ and prevent loss of availability when there are unexpected issues. When\
        \ this timeout expires, processing of the upgrade domain will proceed regardless\
        \ of availability loss issues. The timeout is reset at the start of each upgrade\
        \ domain. Valid values are between 0 and 42949672925 inclusive. (unsigned\
        \ 32-bit integer)."
      format: int64
      title: UpgradeReplicaSetCheckTimeoutInSeconds
      type: integer
    UpgradeStartTimeUTCString:
      description: The start time of the upgrade in UTC.
      title: StartTimestampUtc
      type: string
    UpgradeState:
      description: |
        The state of the upgrade domain.

            - Invalid - Indicates the upgrade state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
            - RollingBackInProgress - The upgrade is rolling back to the previous version but is not complete yet. The value is 1
            - RollingBackCompleted - The upgrade has finished rolling back. The value is 2
            - RollingForwardPending - The current upgrade domain has finished upgrading. The overall upgrade is waiting for an explicit move next request in UnmonitoredManual mode or performing health checks in Monitored mode. The value is 3
            - RollingForwardInProgress - The upgrade is rolling forward to the target version but is not complete yet. The value is 4
            - RollingForwardCompleted - The upgrade has finished rolling forward. The value is 5
            - Failed - The upgrade has failed and is unable to execute FailureAction. The value is 6
      enum:
      - Invalid
      - RollingBackInProgress
      - RollingBackCompleted
      - RollingForwardPending
      - RollingForwardInProgress
      - RollingForwardCompleted
      - Failed
      title: UpgradeState
      type: string
    UpgradeTimeout:
      default: P10675199DT02H48M05.4775807S
      description: "The amount of time the overall upgrade has to complete before\
        \ FailureAction is executed. It is first interpreted as a string representing\
        \ an ISO 8601 duration. If that fails, then it is interpreted as a number\
        \ representing the total number of milliseconds."
      title: UpgradeTimeout
      type: string
    UpgradeType:
      default: Rolling
      description: |
        The type of upgrade out of the following possible values.

            - Invalid - Indicates the upgrade kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
            - Rolling - The upgrade progresses one upgrade domain at a time. The value is 1.
            - Rolling_ForceRestart - The upgrade gets restarted by force. The value is 2.
      enum:
      - Invalid
      - Rolling
      - Rolling_ForceRestart
      title: UpgradeType
      type: string
    ValidationFailedChaosEvent:
      allOf:
      - $ref: '#/components/schemas/ChaosEvent'
      - description: ValidationFailedChaosEvent
        properties:
          Reason:
            type: string
        type: object
      description: Chaos event corresponding to a failure during validation.
      x-ms-discriminator-value: ValidationFailed
    WaitForInbuildReplicaSafetyCheck:
      allOf:
      - $ref: '#/components/schemas/PartitionSafetyCheck'
      - description: WaitForInbuildReplicaSafetyCheck
        type: object
      description: Safety check that waits for the replica build operation to finish.
        This indiciates that there is a replica that is going through the copy or
        is providing data for building another replica. Bring the node down will abort
        this copy operation which are typoically expensive involving data movements.
      x-ms-discriminator-value: WaitForInbuildReplica
    WaitForPrimaryPlacementSafetyCheck:
      allOf:
      - $ref: '#/components/schemas/PartitionSafetyCheck'
      - description: WaitForPrimaryPlacementSafetyCheck
        type: object
      description: Safety check that waits for the primary replica that was moved
        out of the node due to upgrade to be placed back again on that node.
      x-ms-discriminator-value: WaitForPrimaryPlacement
    WaitForPrimarySwapSafetyCheck:
      allOf:
      - $ref: '#/components/schemas/PartitionSafetyCheck'
      - description: WaitForPrimarySwapSafetyCheck
        type: object
      description: Safety check that waits for the primary replica to be moved out
        of the node before starting an upgrade to ensure the availability of the primary
        replica for the partition.
      x-ms-discriminator-value: WaitForPrimarySwap
    WaitForReconfigurationSafetyCheck:
      allOf:
      - $ref: '#/components/schemas/PartitionSafetyCheck'
      - description: WaitForReconfigurationSafetyCheck
        type: object
      description: Safety check that waits for the current reconfiguration of the
        partition to be completed before starting an upgrade.
      x-ms-discriminator-value: WaitForReconfiguration
    WaitingChaosEvent:
      allOf:
      - $ref: '#/components/schemas/ChaosEvent'
      - description: WaitingChaosEvent
        properties:
          Reason:
            type: string
        type: object
      description: "Describes a Chaos event that gets generated when Chaos is waiting\
        \ for the cluster to become ready for faulting, for example, Chaos may be\
        \ waiting for the on-going upgrade to finish."
      x-ms-discriminator-value: Waiting
x-original-swagger-version: "2.0"
