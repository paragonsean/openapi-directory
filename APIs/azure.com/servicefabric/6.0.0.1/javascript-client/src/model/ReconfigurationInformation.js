/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReconfigurationPhase from './ReconfigurationPhase';
import ReconfigurationType from './ReconfigurationType';
import ReplicaRole from './ReplicaRole';

/**
 * The ReconfigurationInformation model module.
 * @module model/ReconfigurationInformation
 * @version 6.0.0.1
 */
class ReconfigurationInformation {
    /**
     * Constructs a new <code>ReconfigurationInformation</code>.
     * Information about current reconfiguration like phase, type, previous configuration role of replica and reconfiguration start date time.
     * @alias module:model/ReconfigurationInformation
     */
    constructor() { 
        
        ReconfigurationInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReconfigurationInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReconfigurationInformation} obj Optional instance to populate.
     * @return {module:model/ReconfigurationInformation} The populated <code>ReconfigurationInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReconfigurationInformation();

            if (data.hasOwnProperty('PreviousConfigurationRole')) {
                obj['PreviousConfigurationRole'] = ReplicaRole.constructFromObject(data['PreviousConfigurationRole']);
            }
            if (data.hasOwnProperty('ReconfigurationPhase')) {
                obj['ReconfigurationPhase'] = ReconfigurationPhase.constructFromObject(data['ReconfigurationPhase']);
            }
            if (data.hasOwnProperty('ReconfigurationStartTimeUtc')) {
                obj['ReconfigurationStartTimeUtc'] = ApiClient.convertToType(data['ReconfigurationStartTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('ReconfigurationType')) {
                obj['ReconfigurationType'] = ReconfigurationType.constructFromObject(data['ReconfigurationType']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReconfigurationInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReconfigurationInformation</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {module:model/ReplicaRole} PreviousConfigurationRole
 */
ReconfigurationInformation.prototype['PreviousConfigurationRole'] = undefined;

/**
 * @member {module:model/ReconfigurationPhase} ReconfigurationPhase
 */
ReconfigurationInformation.prototype['ReconfigurationPhase'] = undefined;

/**
 * Start time (in UTC) of the ongoing reconfiguration. If no reconfiguration is taking place then this value will be zero date-time.
 * @member {Date} ReconfigurationStartTimeUtc
 */
ReconfigurationInformation.prototype['ReconfigurationStartTimeUtc'] = undefined;

/**
 * @member {module:model/ReconfigurationType} ReconfigurationType
 */
ReconfigurationInformation.prototype['ReconfigurationType'] = undefined;






export default ReconfigurationInformation;

