/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServiceFabricClientApis);
  }
}(this, function(expect, ServiceFabricClientApis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClusterUpgradeDescriptionObject', function() {
    it('should create an instance of ClusterUpgradeDescriptionObject', function() {
      // uncomment below and update the code to test ClusterUpgradeDescriptionObject
      //var instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
      //expect(instance).to.be.a(ServiceFabricClientApis.ClusterUpgradeDescriptionObject);
    });

    it('should have the property applicationHealthPolicyMap (base name: "ApplicationHealthPolicyMap")', function() {
      // uncomment below and update the code to test the property applicationHealthPolicyMap
      //var instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
      //expect(instance).to.be();
    });

    it('should have the property clusterHealthPolicy (base name: "ClusterHealthPolicy")', function() {
      // uncomment below and update the code to test the property clusterHealthPolicy
      //var instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
      //expect(instance).to.be();
    });

    it('should have the property clusterUpgradeHealthPolicy (base name: "ClusterUpgradeHealthPolicy")', function() {
      // uncomment below and update the code to test the property clusterUpgradeHealthPolicy
      //var instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
      //expect(instance).to.be();
    });

    it('should have the property codeVersion (base name: "CodeVersion")', function() {
      // uncomment below and update the code to test the property codeVersion
      //var instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
      //expect(instance).to.be();
    });

    it('should have the property configVersion (base name: "ConfigVersion")', function() {
      // uncomment below and update the code to test the property configVersion
      //var instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
      //expect(instance).to.be();
    });

    it('should have the property enableDeltaHealthEvaluation (base name: "EnableDeltaHealthEvaluation")', function() {
      // uncomment below and update the code to test the property enableDeltaHealthEvaluation
      //var instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
      //expect(instance).to.be();
    });

    it('should have the property forceRestart (base name: "ForceRestart")', function() {
      // uncomment below and update the code to test the property forceRestart
      //var instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
      //expect(instance).to.be();
    });

    it('should have the property monitoringPolicy (base name: "MonitoringPolicy")', function() {
      // uncomment below and update the code to test the property monitoringPolicy
      //var instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
      //expect(instance).to.be();
    });

    it('should have the property rollingUpgradeMode (base name: "RollingUpgradeMode")', function() {
      // uncomment below and update the code to test the property rollingUpgradeMode
      //var instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
      //expect(instance).to.be();
    });

    it('should have the property upgradeKind (base name: "UpgradeKind")', function() {
      // uncomment below and update the code to test the property upgradeKind
      //var instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
      //expect(instance).to.be();
    });

    it('should have the property upgradeReplicaSetCheckTimeoutInSeconds (base name: "UpgradeReplicaSetCheckTimeoutInSeconds")', function() {
      // uncomment below and update the code to test the property upgradeReplicaSetCheckTimeoutInSeconds
      //var instance = new ServiceFabricClientApis.ClusterUpgradeDescriptionObject();
      //expect(instance).to.be();
    });

  });

}));
