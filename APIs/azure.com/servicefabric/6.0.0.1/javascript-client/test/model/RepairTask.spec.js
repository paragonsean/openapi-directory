/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServiceFabricClientApis);
  }
}(this, function(expect, ServiceFabricClientApis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServiceFabricClientApis.RepairTask();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RepairTask', function() {
    it('should create an instance of RepairTask', function() {
      // uncomment below and update the code to test RepairTask
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be.a(ServiceFabricClientApis.RepairTask);
    });

    it('should have the property action (base name: "Action")', function() {
      // uncomment below and update the code to test the property action
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property executor (base name: "Executor")', function() {
      // uncomment below and update the code to test the property executor
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property executorData (base name: "ExecutorData")', function() {
      // uncomment below and update the code to test the property executorData
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property flags (base name: "Flags")', function() {
      // uncomment below and update the code to test the property flags
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property history (base name: "History")', function() {
      // uncomment below and update the code to test the property history
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property impact (base name: "Impact")', function() {
      // uncomment below and update the code to test the property impact
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property performPreparingHealthCheck (base name: "PerformPreparingHealthCheck")', function() {
      // uncomment below and update the code to test the property performPreparingHealthCheck
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property performRestoringHealthCheck (base name: "PerformRestoringHealthCheck")', function() {
      // uncomment below and update the code to test the property performRestoringHealthCheck
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property preparingHealthCheckState (base name: "PreparingHealthCheckState")', function() {
      // uncomment below and update the code to test the property preparingHealthCheckState
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property restoringHealthCheckState (base name: "RestoringHealthCheckState")', function() {
      // uncomment below and update the code to test the property restoringHealthCheckState
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property resultCode (base name: "ResultCode")', function() {
      // uncomment below and update the code to test the property resultCode
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property resultDetails (base name: "ResultDetails")', function() {
      // uncomment below and update the code to test the property resultDetails
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property resultStatus (base name: "ResultStatus")', function() {
      // uncomment below and update the code to test the property resultStatus
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "State")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property target (base name: "Target")', function() {
      // uncomment below and update the code to test the property target
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property taskId (base name: "TaskId")', function() {
      // uncomment below and update the code to test the property taskId
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "Version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new ServiceFabricClientApis.RepairTask();
      //expect(instance).to.be();
    });

  });

}));
