/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntryPointStatus.h
 *
 * Specifies the status of the code package entry point deployed on a Service Fabric node. Possible values are following.    - Invalid - Indicates status of entry point is not known or invalid. The value is 0.   - Pending - Indicates the entry point is scheduled to be started. The value is 1.   - Starting - Indicates the entry point is being started. The value is 2.   - Started - Indicates the entry point was started successfully and is running. The value is 3.   - Stopping - Indicates the entry point is being stoppped. The value is 4.   - Stopped - Indicates the entry point is not running. The value is 5. 
 */

#ifndef OAIEntryPointStatus_H
#define OAIEntryPointStatus_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEntryPointStatus : public OAIEnum {
public:
    OAIEntryPointStatus();
    OAIEntryPointStatus(QString json);
    ~OAIEntryPointStatus() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIEntryPointStatus {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        INVALID, 
        PENDING, 
        STARTING, 
        STARTED, 
        STOPPING, 
        STOPPED
    };
    OAIEntryPointStatus::eOAIEntryPointStatus getValue() const;
    void setValue(const OAIEntryPointStatus::eOAIEntryPointStatus& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIEntryPointStatus m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntryPointStatus)

#endif // OAIEntryPointStatus_H
