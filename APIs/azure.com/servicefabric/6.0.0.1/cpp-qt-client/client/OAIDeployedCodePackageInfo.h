/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeployedCodePackageInfo.h
 *
 * Information about code package deployed on a Service Fabric node.
 */

#ifndef OAIDeployedCodePackageInfo_H
#define OAIDeployedCodePackageInfo_H

#include <QJsonObject>

#include "OAICodePackageEntryPoint.h"
#include "OAIDeploymentStatus.h"
#include "OAIHostIsolationMode.h"
#include "OAIHostType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICodePackageEntryPoint;

class OAIDeployedCodePackageInfo : public OAIObject {
public:
    OAIDeployedCodePackageInfo();
    OAIDeployedCodePackageInfo(QString json);
    ~OAIDeployedCodePackageInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHostIsolationMode getHostIsolationMode() const;
    void setHostIsolationMode(const OAIHostIsolationMode &host_isolation_mode);
    bool is_host_isolation_mode_Set() const;
    bool is_host_isolation_mode_Valid() const;

    OAIHostType getHostType() const;
    void setHostType(const OAIHostType &host_type);
    bool is_host_type_Set() const;
    bool is_host_type_Valid() const;

    OAICodePackageEntryPoint getMainEntryPoint() const;
    void setMainEntryPoint(const OAICodePackageEntryPoint &main_entry_point);
    bool is_main_entry_point_Set() const;
    bool is_main_entry_point_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRunFrequencyInterval() const;
    void setRunFrequencyInterval(const QString &run_frequency_interval);
    bool is_run_frequency_interval_Set() const;
    bool is_run_frequency_interval_Valid() const;

    QString getServiceManifestName() const;
    void setServiceManifestName(const QString &service_manifest_name);
    bool is_service_manifest_name_Set() const;
    bool is_service_manifest_name_Valid() const;

    QString getServicePackageActivationId() const;
    void setServicePackageActivationId(const QString &service_package_activation_id);
    bool is_service_package_activation_id_Set() const;
    bool is_service_package_activation_id_Valid() const;

    OAICodePackageEntryPoint getSetupEntryPoint() const;
    void setSetupEntryPoint(const OAICodePackageEntryPoint &setup_entry_point);
    bool is_setup_entry_point_Set() const;
    bool is_setup_entry_point_Valid() const;

    OAIDeploymentStatus getStatus() const;
    void setStatus(const OAIDeploymentStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHostIsolationMode m_host_isolation_mode;
    bool m_host_isolation_mode_isSet;
    bool m_host_isolation_mode_isValid;

    OAIHostType m_host_type;
    bool m_host_type_isSet;
    bool m_host_type_isValid;

    OAICodePackageEntryPoint m_main_entry_point;
    bool m_main_entry_point_isSet;
    bool m_main_entry_point_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_run_frequency_interval;
    bool m_run_frequency_interval_isSet;
    bool m_run_frequency_interval_isValid;

    QString m_service_manifest_name;
    bool m_service_manifest_name_isSet;
    bool m_service_manifest_name_isValid;

    QString m_service_package_activation_id;
    bool m_service_package_activation_id_isSet;
    bool m_service_package_activation_id_isValid;

    OAICodePackageEntryPoint m_setup_entry_point;
    bool m_setup_entry_point_isSet;
    bool m_setup_entry_point_isValid;

    OAIDeploymentStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeployedCodePackageInfo)

#endif // OAIDeployedCodePackageInfo_H
