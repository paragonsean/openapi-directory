/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceStatus::OAIServiceStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceStatus::OAIServiceStatus() {
    this->initializeModel();
}

OAIServiceStatus::~OAIServiceStatus() {}

void OAIServiceStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIServiceStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIServiceStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Unknown", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceStatus::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Active", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceStatus::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Upgrading", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceStatus::UPGRADING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Deleting", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceStatus::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Creating", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceStatus::CREATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIServiceStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIServiceStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIServiceStatus::UNKNOWN:
            val = "Unknown";
            break;
        case eOAIServiceStatus::ACTIVE:
            val = "Active";
            break;
        case eOAIServiceStatus::UPGRADING:
            val = "Upgrading";
            break;
        case eOAIServiceStatus::DELETING:
            val = "Deleting";
            break;
        case eOAIServiceStatus::CREATING:
            val = "Creating";
            break;
        case eOAIServiceStatus::FAILED:
            val = "Failed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIServiceStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIServiceStatus::eOAIServiceStatus OAIServiceStatus::getValue() const {
    return m_value;
}

void OAIServiceStatus::setValue(const OAIServiceStatus::eOAIServiceStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIServiceStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIServiceStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
