/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComposeDeploymentUpgradeProgressInfo.h
 *
 * Describes the parameters for a compose deployment upgrade.
 */

#ifndef OAIComposeDeploymentUpgradeProgressInfo_H
#define OAIComposeDeploymentUpgradeProgressInfo_H

#include <QJsonObject>

#include "OAIApplicationHealthPolicy.h"
#include "OAIComposeDeploymentUpgradeState.h"
#include "OAICurrentUpgradeDomainProgressInfo.h"
#include "OAIFailureReason.h"
#include "OAIFailureUpgradeDomainProgressInfo.h"
#include "OAIHealthEvaluationWrapper.h"
#include "OAIMonitoringPolicyDescription.h"
#include "OAIUpgradeKind.h"
#include "OAIUpgradeMode.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationHealthPolicy;
class OAIHealthEvaluationWrapper;
class OAICurrentUpgradeDomainProgressInfo;
class OAIMonitoringPolicyDescription;
class OAIFailureUpgradeDomainProgressInfo;

class OAIComposeDeploymentUpgradeProgressInfo : public OAIObject {
public:
    OAIComposeDeploymentUpgradeProgressInfo();
    OAIComposeDeploymentUpgradeProgressInfo(QString json);
    ~OAIComposeDeploymentUpgradeProgressInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApplicationHealthPolicy getApplicationHealthPolicy() const;
    void setApplicationHealthPolicy(const OAIApplicationHealthPolicy &application_health_policy);
    bool is_application_health_policy_Set() const;
    bool is_application_health_policy_Valid() const;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    QList<OAIHealthEvaluationWrapper> getApplicationUnhealthyEvaluations() const;
    void setApplicationUnhealthyEvaluations(const QList<OAIHealthEvaluationWrapper> &application_unhealthy_evaluations);
    bool is_application_unhealthy_evaluations_Set() const;
    bool is_application_unhealthy_evaluations_Valid() const;

    QString getApplicationUpgradeStatusDetails() const;
    void setApplicationUpgradeStatusDetails(const QString &application_upgrade_status_details);
    bool is_application_upgrade_status_details_Set() const;
    bool is_application_upgrade_status_details_Valid() const;

    QString getCurrentUpgradeDomainDuration() const;
    void setCurrentUpgradeDomainDuration(const QString &current_upgrade_domain_duration);
    bool is_current_upgrade_domain_duration_Set() const;
    bool is_current_upgrade_domain_duration_Valid() const;

    OAICurrentUpgradeDomainProgressInfo getCurrentUpgradeDomainProgress() const;
    void setCurrentUpgradeDomainProgress(const OAICurrentUpgradeDomainProgressInfo &current_upgrade_domain_progress);
    bool is_current_upgrade_domain_progress_Set() const;
    bool is_current_upgrade_domain_progress_Valid() const;

    QString getDeploymentName() const;
    void setDeploymentName(const QString &deployment_name);
    bool is_deployment_name_Set() const;
    bool is_deployment_name_Valid() const;

    OAIFailureReason getFailureReason() const;
    void setFailureReason(const OAIFailureReason &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    QString getFailureTimestampUtc() const;
    void setFailureTimestampUtc(const QString &failure_timestamp_utc);
    bool is_failure_timestamp_utc_Set() const;
    bool is_failure_timestamp_utc_Valid() const;

    bool isForceRestart() const;
    void setForceRestart(const bool &force_restart);
    bool is_force_restart_Set() const;
    bool is_force_restart_Valid() const;

    OAIMonitoringPolicyDescription getMonitoringPolicy() const;
    void setMonitoringPolicy(const OAIMonitoringPolicyDescription &monitoring_policy);
    bool is_monitoring_policy_Set() const;
    bool is_monitoring_policy_Valid() const;

    OAIUpgradeMode getRollingUpgradeMode() const;
    void setRollingUpgradeMode(const OAIUpgradeMode &rolling_upgrade_mode);
    bool is_rolling_upgrade_mode_Set() const;
    bool is_rolling_upgrade_mode_Valid() const;

    QString getStartTimestampUtc() const;
    void setStartTimestampUtc(const QString &start_timestamp_utc);
    bool is_start_timestamp_utc_Set() const;
    bool is_start_timestamp_utc_Valid() const;

    QString getTargetApplicationTypeVersion() const;
    void setTargetApplicationTypeVersion(const QString &target_application_type_version);
    bool is_target_application_type_version_Set() const;
    bool is_target_application_type_version_Valid() const;

    OAIFailureUpgradeDomainProgressInfo getUpgradeDomainProgressAtFailure() const;
    void setUpgradeDomainProgressAtFailure(const OAIFailureUpgradeDomainProgressInfo &upgrade_domain_progress_at_failure);
    bool is_upgrade_domain_progress_at_failure_Set() const;
    bool is_upgrade_domain_progress_at_failure_Valid() const;

    QString getUpgradeDuration() const;
    void setUpgradeDuration(const QString &upgrade_duration);
    bool is_upgrade_duration_Set() const;
    bool is_upgrade_duration_Valid() const;

    OAIUpgradeKind getUpgradeKind() const;
    void setUpgradeKind(const OAIUpgradeKind &upgrade_kind);
    bool is_upgrade_kind_Set() const;
    bool is_upgrade_kind_Valid() const;

    qint64 getUpgradeReplicaSetCheckTimeoutInSeconds() const;
    void setUpgradeReplicaSetCheckTimeoutInSeconds(const qint64 &upgrade_replica_set_check_timeout_in_seconds);
    bool is_upgrade_replica_set_check_timeout_in_seconds_Set() const;
    bool is_upgrade_replica_set_check_timeout_in_seconds_Valid() const;

    OAIComposeDeploymentUpgradeState getUpgradeState() const;
    void setUpgradeState(const OAIComposeDeploymentUpgradeState &upgrade_state);
    bool is_upgrade_state_Set() const;
    bool is_upgrade_state_Valid() const;

    QString getUpgradeStatusDetails() const;
    void setUpgradeStatusDetails(const QString &upgrade_status_details);
    bool is_upgrade_status_details_Set() const;
    bool is_upgrade_status_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApplicationHealthPolicy m_application_health_policy;
    bool m_application_health_policy_isSet;
    bool m_application_health_policy_isValid;

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    QList<OAIHealthEvaluationWrapper> m_application_unhealthy_evaluations;
    bool m_application_unhealthy_evaluations_isSet;
    bool m_application_unhealthy_evaluations_isValid;

    QString m_application_upgrade_status_details;
    bool m_application_upgrade_status_details_isSet;
    bool m_application_upgrade_status_details_isValid;

    QString m_current_upgrade_domain_duration;
    bool m_current_upgrade_domain_duration_isSet;
    bool m_current_upgrade_domain_duration_isValid;

    OAICurrentUpgradeDomainProgressInfo m_current_upgrade_domain_progress;
    bool m_current_upgrade_domain_progress_isSet;
    bool m_current_upgrade_domain_progress_isValid;

    QString m_deployment_name;
    bool m_deployment_name_isSet;
    bool m_deployment_name_isValid;

    OAIFailureReason m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    QString m_failure_timestamp_utc;
    bool m_failure_timestamp_utc_isSet;
    bool m_failure_timestamp_utc_isValid;

    bool m_force_restart;
    bool m_force_restart_isSet;
    bool m_force_restart_isValid;

    OAIMonitoringPolicyDescription m_monitoring_policy;
    bool m_monitoring_policy_isSet;
    bool m_monitoring_policy_isValid;

    OAIUpgradeMode m_rolling_upgrade_mode;
    bool m_rolling_upgrade_mode_isSet;
    bool m_rolling_upgrade_mode_isValid;

    QString m_start_timestamp_utc;
    bool m_start_timestamp_utc_isSet;
    bool m_start_timestamp_utc_isValid;

    QString m_target_application_type_version;
    bool m_target_application_type_version_isSet;
    bool m_target_application_type_version_isValid;

    OAIFailureUpgradeDomainProgressInfo m_upgrade_domain_progress_at_failure;
    bool m_upgrade_domain_progress_at_failure_isSet;
    bool m_upgrade_domain_progress_at_failure_isValid;

    QString m_upgrade_duration;
    bool m_upgrade_duration_isSet;
    bool m_upgrade_duration_isValid;

    OAIUpgradeKind m_upgrade_kind;
    bool m_upgrade_kind_isSet;
    bool m_upgrade_kind_isValid;

    qint64 m_upgrade_replica_set_check_timeout_in_seconds;
    bool m_upgrade_replica_set_check_timeout_in_seconds_isSet;
    bool m_upgrade_replica_set_check_timeout_in_seconds_isValid;

    OAIComposeDeploymentUpgradeState m_upgrade_state;
    bool m_upgrade_state_isSet;
    bool m_upgrade_state_isValid;

    QString m_upgrade_status_details;
    bool m_upgrade_status_details_isSet;
    bool m_upgrade_status_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComposeDeploymentUpgradeProgressInfo)

#endif // OAIComposeDeploymentUpgradeProgressInfo_H
