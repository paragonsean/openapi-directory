/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileVersion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileVersion::OAIFileVersion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileVersion::OAIFileVersion() {
    this->initializeModel();
}

OAIFileVersion::~OAIFileVersion() {}

void OAIFileVersion::initializeModel() {

    m_epoch_data_loss_number_isSet = false;
    m_epoch_data_loss_number_isValid = false;

    m_version_number_isSet = false;
    m_version_number_isValid = false;
}

void OAIFileVersion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileVersion::fromJsonObject(QJsonObject json) {

    m_epoch_data_loss_number_isValid = ::OpenAPI::fromJsonValue(m_epoch_data_loss_number, json[QString("EpochDataLossNumber")]);
    m_epoch_data_loss_number_isSet = !json[QString("EpochDataLossNumber")].isNull() && m_epoch_data_loss_number_isValid;

    m_version_number_isValid = ::OpenAPI::fromJsonValue(m_version_number, json[QString("VersionNumber")]);
    m_version_number_isSet = !json[QString("VersionNumber")].isNull() && m_version_number_isValid;
}

QString OAIFileVersion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileVersion::asJsonObject() const {
    QJsonObject obj;
    if (m_epoch_data_loss_number_isSet) {
        obj.insert(QString("EpochDataLossNumber"), ::OpenAPI::toJsonValue(m_epoch_data_loss_number));
    }
    if (m_version_number_isSet) {
        obj.insert(QString("VersionNumber"), ::OpenAPI::toJsonValue(m_version_number));
    }
    return obj;
}

QString OAIFileVersion::getEpochDataLossNumber() const {
    return m_epoch_data_loss_number;
}
void OAIFileVersion::setEpochDataLossNumber(const QString &epoch_data_loss_number) {
    m_epoch_data_loss_number = epoch_data_loss_number;
    m_epoch_data_loss_number_isSet = true;
}

bool OAIFileVersion::is_epoch_data_loss_number_Set() const{
    return m_epoch_data_loss_number_isSet;
}

bool OAIFileVersion::is_epoch_data_loss_number_Valid() const{
    return m_epoch_data_loss_number_isValid;
}

QString OAIFileVersion::getVersionNumber() const {
    return m_version_number;
}
void OAIFileVersion::setVersionNumber(const QString &version_number) {
    m_version_number = version_number;
    m_version_number_isSet = true;
}

bool OAIFileVersion::is_version_number_Set() const{
    return m_version_number_isSet;
}

bool OAIFileVersion::is_version_number_Valid() const{
    return m_version_number_isValid;
}

bool OAIFileVersion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_epoch_data_loss_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileVersion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
