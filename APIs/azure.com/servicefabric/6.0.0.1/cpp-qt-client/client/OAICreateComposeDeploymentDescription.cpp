/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateComposeDeploymentDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateComposeDeploymentDescription::OAICreateComposeDeploymentDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateComposeDeploymentDescription::OAICreateComposeDeploymentDescription() {
    this->initializeModel();
}

OAICreateComposeDeploymentDescription::~OAICreateComposeDeploymentDescription() {}

void OAICreateComposeDeploymentDescription::initializeModel() {

    m_compose_file_content_isSet = false;
    m_compose_file_content_isValid = false;

    m_deployment_name_isSet = false;
    m_deployment_name_isValid = false;

    m_registry_credential_isSet = false;
    m_registry_credential_isValid = false;
}

void OAICreateComposeDeploymentDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateComposeDeploymentDescription::fromJsonObject(QJsonObject json) {

    m_compose_file_content_isValid = ::OpenAPI::fromJsonValue(m_compose_file_content, json[QString("ComposeFileContent")]);
    m_compose_file_content_isSet = !json[QString("ComposeFileContent")].isNull() && m_compose_file_content_isValid;

    m_deployment_name_isValid = ::OpenAPI::fromJsonValue(m_deployment_name, json[QString("DeploymentName")]);
    m_deployment_name_isSet = !json[QString("DeploymentName")].isNull() && m_deployment_name_isValid;

    m_registry_credential_isValid = ::OpenAPI::fromJsonValue(m_registry_credential, json[QString("RegistryCredential")]);
    m_registry_credential_isSet = !json[QString("RegistryCredential")].isNull() && m_registry_credential_isValid;
}

QString OAICreateComposeDeploymentDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateComposeDeploymentDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_compose_file_content_isSet) {
        obj.insert(QString("ComposeFileContent"), ::OpenAPI::toJsonValue(m_compose_file_content));
    }
    if (m_deployment_name_isSet) {
        obj.insert(QString("DeploymentName"), ::OpenAPI::toJsonValue(m_deployment_name));
    }
    if (m_registry_credential.isSet()) {
        obj.insert(QString("RegistryCredential"), ::OpenAPI::toJsonValue(m_registry_credential));
    }
    return obj;
}

QString OAICreateComposeDeploymentDescription::getComposeFileContent() const {
    return m_compose_file_content;
}
void OAICreateComposeDeploymentDescription::setComposeFileContent(const QString &compose_file_content) {
    m_compose_file_content = compose_file_content;
    m_compose_file_content_isSet = true;
}

bool OAICreateComposeDeploymentDescription::is_compose_file_content_Set() const{
    return m_compose_file_content_isSet;
}

bool OAICreateComposeDeploymentDescription::is_compose_file_content_Valid() const{
    return m_compose_file_content_isValid;
}

QString OAICreateComposeDeploymentDescription::getDeploymentName() const {
    return m_deployment_name;
}
void OAICreateComposeDeploymentDescription::setDeploymentName(const QString &deployment_name) {
    m_deployment_name = deployment_name;
    m_deployment_name_isSet = true;
}

bool OAICreateComposeDeploymentDescription::is_deployment_name_Set() const{
    return m_deployment_name_isSet;
}

bool OAICreateComposeDeploymentDescription::is_deployment_name_Valid() const{
    return m_deployment_name_isValid;
}

OAIRegistryCredential OAICreateComposeDeploymentDescription::getRegistryCredential() const {
    return m_registry_credential;
}
void OAICreateComposeDeploymentDescription::setRegistryCredential(const OAIRegistryCredential &registry_credential) {
    m_registry_credential = registry_credential;
    m_registry_credential_isSet = true;
}

bool OAICreateComposeDeploymentDescription::is_registry_credential_Set() const{
    return m_registry_credential_isSet;
}

bool OAICreateComposeDeploymentDescription::is_registry_credential_Valid() const{
    return m_registry_credential_isValid;
}

bool OAICreateComposeDeploymentDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_compose_file_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registry_credential.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateComposeDeploymentDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_compose_file_content_isValid && m_deployment_name_isValid && true;
}

} // namespace OpenAPI
