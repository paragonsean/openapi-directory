/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeployedServicePackageHealthStateFilter.h
 *
 * Defines matching criteria to determine whether a deployed service package should be included as a child of a deployed application in the cluster health chunk. The deployed service packages are only returned if the parent entities match a filter specified in the cluster health chunk query description. The parent deployed application and its parent application must be included in the cluster health chunk. One filter can match zero, one or multiple deployed service packages, depending on its properties. 
 */

#ifndef OAIDeployedServicePackageHealthStateFilter_H
#define OAIDeployedServicePackageHealthStateFilter_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeployedServicePackageHealthStateFilter : public OAIObject {
public:
    OAIDeployedServicePackageHealthStateFilter();
    OAIDeployedServicePackageHealthStateFilter(QString json);
    ~OAIDeployedServicePackageHealthStateFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getHealthStateFilter() const;
    void setHealthStateFilter(const qint32 &health_state_filter);
    bool is_health_state_filter_Set() const;
    bool is_health_state_filter_Valid() const;

    QString getServiceManifestNameFilter() const;
    void setServiceManifestNameFilter(const QString &service_manifest_name_filter);
    bool is_service_manifest_name_filter_Set() const;
    bool is_service_manifest_name_filter_Valid() const;

    QString getServicePackageActivationIdFilter() const;
    void setServicePackageActivationIdFilter(const QString &service_package_activation_id_filter);
    bool is_service_package_activation_id_filter_Set() const;
    bool is_service_package_activation_id_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_health_state_filter;
    bool m_health_state_filter_isSet;
    bool m_health_state_filter_isValid;

    QString m_service_manifest_name_filter;
    bool m_service_manifest_name_filter_isSet;
    bool m_service_manifest_name_filter_isValid;

    QString m_service_package_activation_id_filter;
    bool m_service_package_activation_id_filter_isSet;
    bool m_service_package_activation_id_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeployedServicePackageHealthStateFilter)

#endif // OAIDeployedServicePackageHealthStateFilter_H
