/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationHealthStateChunk.h
 *
 * Represents the health state chunk of a application. The application health state chunk contains the application name, its aggregated health state and any children services and deployed applications that respect the filters in cluster health chunk query description. 
 */

#ifndef OAIApplicationHealthStateChunk_H
#define OAIApplicationHealthStateChunk_H

#include <QJsonObject>

#include "OAIDeployedApplicationHealthStateChunkList.h"
#include "OAIHealthState.h"
#include "OAIServiceHealthStateChunkList.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeployedApplicationHealthStateChunkList;
class OAIServiceHealthStateChunkList;

class OAIApplicationHealthStateChunk : public OAIObject {
public:
    OAIApplicationHealthStateChunk();
    OAIApplicationHealthStateChunk(QString json);
    ~OAIApplicationHealthStateChunk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHealthState getHealthState() const;
    void setHealthState(const OAIHealthState &health_state);
    bool is_health_state_Set() const;
    bool is_health_state_Valid() const;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    QString getApplicationTypeName() const;
    void setApplicationTypeName(const QString &application_type_name);
    bool is_application_type_name_Set() const;
    bool is_application_type_name_Valid() const;

    OAIDeployedApplicationHealthStateChunkList getDeployedApplicationHealthStateChunks() const;
    void setDeployedApplicationHealthStateChunks(const OAIDeployedApplicationHealthStateChunkList &deployed_application_health_state_chunks);
    bool is_deployed_application_health_state_chunks_Set() const;
    bool is_deployed_application_health_state_chunks_Valid() const;

    OAIServiceHealthStateChunkList getServiceHealthStateChunks() const;
    void setServiceHealthStateChunks(const OAIServiceHealthStateChunkList &service_health_state_chunks);
    bool is_service_health_state_chunks_Set() const;
    bool is_service_health_state_chunks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHealthState m_health_state;
    bool m_health_state_isSet;
    bool m_health_state_isValid;

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    QString m_application_type_name;
    bool m_application_type_name_isSet;
    bool m_application_type_name_isValid;

    OAIDeployedApplicationHealthStateChunkList m_deployed_application_health_state_chunks;
    bool m_deployed_application_health_state_chunks_isSet;
    bool m_deployed_application_health_state_chunks_isValid;

    OAIServiceHealthStateChunkList m_service_health_state_chunks;
    bool m_service_health_state_chunks_isSet;
    bool m_service_health_state_chunks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationHealthStateChunk)

#endif // OAIApplicationHealthStateChunk_H
