/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChaosReport.h
 *
 * Contains detailed Chaos report. 
 */

#ifndef OAIChaosReport_H
#define OAIChaosReport_H

#include <QJsonObject>

#include "OAIChaosEventWrapper.h"
#include "OAIChaosParameters.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChaosParameters;
class OAIChaosEventWrapper;

class OAIChaosReport : public OAIObject {
public:
    OAIChaosReport();
    OAIChaosReport(QString json);
    ~OAIChaosReport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChaosParameters getChaosParameters() const;
    void setChaosParameters(const OAIChaosParameters &chaos_parameters);
    bool is_chaos_parameters_Set() const;
    bool is_chaos_parameters_Valid() const;

    QString getContinuationToken() const;
    void setContinuationToken(const QString &continuation_token);
    bool is_continuation_token_Set() const;
    bool is_continuation_token_Valid() const;

    QList<OAIChaosEventWrapper> getHistory() const;
    void setHistory(const QList<OAIChaosEventWrapper> &history);
    bool is_history_Set() const;
    bool is_history_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChaosParameters m_chaos_parameters;
    bool m_chaos_parameters_isSet;
    bool m_chaos_parameters_isValid;

    QString m_continuation_token;
    bool m_continuation_token_isSet;
    bool m_continuation_token_isValid;

    QList<OAIChaosEventWrapper> m_history;
    bool m_history_isSet;
    bool m_history_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChaosReport)

#endif // OAIChaosReport_H
