/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRemoteReplicatorAcknowledgementStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRemoteReplicatorAcknowledgementStatus::OAIRemoteReplicatorAcknowledgementStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRemoteReplicatorAcknowledgementStatus::OAIRemoteReplicatorAcknowledgementStatus() {
    this->initializeModel();
}

OAIRemoteReplicatorAcknowledgementStatus::~OAIRemoteReplicatorAcknowledgementStatus() {}

void OAIRemoteReplicatorAcknowledgementStatus::initializeModel() {

    m_copy_stream_acknowledgement_detail_isSet = false;
    m_copy_stream_acknowledgement_detail_isValid = false;

    m_replication_stream_acknowledgement_detail_isSet = false;
    m_replication_stream_acknowledgement_detail_isValid = false;
}

void OAIRemoteReplicatorAcknowledgementStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRemoteReplicatorAcknowledgementStatus::fromJsonObject(QJsonObject json) {

    m_copy_stream_acknowledgement_detail_isValid = ::OpenAPI::fromJsonValue(m_copy_stream_acknowledgement_detail, json[QString("CopyStreamAcknowledgementDetail")]);
    m_copy_stream_acknowledgement_detail_isSet = !json[QString("CopyStreamAcknowledgementDetail")].isNull() && m_copy_stream_acknowledgement_detail_isValid;

    m_replication_stream_acknowledgement_detail_isValid = ::OpenAPI::fromJsonValue(m_replication_stream_acknowledgement_detail, json[QString("ReplicationStreamAcknowledgementDetail")]);
    m_replication_stream_acknowledgement_detail_isSet = !json[QString("ReplicationStreamAcknowledgementDetail")].isNull() && m_replication_stream_acknowledgement_detail_isValid;
}

QString OAIRemoteReplicatorAcknowledgementStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRemoteReplicatorAcknowledgementStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_copy_stream_acknowledgement_detail.isSet()) {
        obj.insert(QString("CopyStreamAcknowledgementDetail"), ::OpenAPI::toJsonValue(m_copy_stream_acknowledgement_detail));
    }
    if (m_replication_stream_acknowledgement_detail.isSet()) {
        obj.insert(QString("ReplicationStreamAcknowledgementDetail"), ::OpenAPI::toJsonValue(m_replication_stream_acknowledgement_detail));
    }
    return obj;
}

OAIRemoteReplicatorAcknowledgementDetail OAIRemoteReplicatorAcknowledgementStatus::getCopyStreamAcknowledgementDetail() const {
    return m_copy_stream_acknowledgement_detail;
}
void OAIRemoteReplicatorAcknowledgementStatus::setCopyStreamAcknowledgementDetail(const OAIRemoteReplicatorAcknowledgementDetail &copy_stream_acknowledgement_detail) {
    m_copy_stream_acknowledgement_detail = copy_stream_acknowledgement_detail;
    m_copy_stream_acknowledgement_detail_isSet = true;
}

bool OAIRemoteReplicatorAcknowledgementStatus::is_copy_stream_acknowledgement_detail_Set() const{
    return m_copy_stream_acknowledgement_detail_isSet;
}

bool OAIRemoteReplicatorAcknowledgementStatus::is_copy_stream_acknowledgement_detail_Valid() const{
    return m_copy_stream_acknowledgement_detail_isValid;
}

OAIRemoteReplicatorAcknowledgementDetail OAIRemoteReplicatorAcknowledgementStatus::getReplicationStreamAcknowledgementDetail() const {
    return m_replication_stream_acknowledgement_detail;
}
void OAIRemoteReplicatorAcknowledgementStatus::setReplicationStreamAcknowledgementDetail(const OAIRemoteReplicatorAcknowledgementDetail &replication_stream_acknowledgement_detail) {
    m_replication_stream_acknowledgement_detail = replication_stream_acknowledgement_detail;
    m_replication_stream_acknowledgement_detail_isSet = true;
}

bool OAIRemoteReplicatorAcknowledgementStatus::is_replication_stream_acknowledgement_detail_Set() const{
    return m_replication_stream_acknowledgement_detail_isSet;
}

bool OAIRemoteReplicatorAcknowledgementStatus::is_replication_stream_acknowledgement_detail_Valid() const{
    return m_replication_stream_acknowledgement_detail_isValid;
}

bool OAIRemoteReplicatorAcknowledgementStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_copy_stream_acknowledgement_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_replication_stream_acknowledgement_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRemoteReplicatorAcknowledgementStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
