/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepairTaskHealthCheckState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepairTaskHealthCheckState::OAIRepairTaskHealthCheckState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepairTaskHealthCheckState::OAIRepairTaskHealthCheckState() {
    this->initializeModel();
}

OAIRepairTaskHealthCheckState::~OAIRepairTaskHealthCheckState() {}

void OAIRepairTaskHealthCheckState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRepairTaskHealthCheckState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRepairTaskHealthCheckState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotStarted", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRepairTaskHealthCheckState::NOTSTARTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("InProgress", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRepairTaskHealthCheckState::INPROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Succeeded", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRepairTaskHealthCheckState::SUCCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Skipped", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRepairTaskHealthCheckState::SKIPPED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TimedOut", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRepairTaskHealthCheckState::TIMEDOUT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRepairTaskHealthCheckState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRepairTaskHealthCheckState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRepairTaskHealthCheckState::NOTSTARTED:
            val = "NotStarted";
            break;
        case eOAIRepairTaskHealthCheckState::INPROGRESS:
            val = "InProgress";
            break;
        case eOAIRepairTaskHealthCheckState::SUCCEEDED:
            val = "Succeeded";
            break;
        case eOAIRepairTaskHealthCheckState::SKIPPED:
            val = "Skipped";
            break;
        case eOAIRepairTaskHealthCheckState::TIMEDOUT:
            val = "TimedOut";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRepairTaskHealthCheckState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRepairTaskHealthCheckState::eOAIRepairTaskHealthCheckState OAIRepairTaskHealthCheckState::getValue() const {
    return m_value;
}

void OAIRepairTaskHealthCheckState::setValue(const OAIRepairTaskHealthCheckState::eOAIRepairTaskHealthCheckState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRepairTaskHealthCheckState::isSet() const {
    
    return m_value_isSet;
}

bool OAIRepairTaskHealthCheckState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
