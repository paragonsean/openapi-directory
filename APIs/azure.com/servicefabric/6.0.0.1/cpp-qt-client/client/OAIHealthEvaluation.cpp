/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHealthEvaluation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHealthEvaluation::OAIHealthEvaluation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHealthEvaluation::OAIHealthEvaluation() {
    this->initializeModel();
}

OAIHealthEvaluation::~OAIHealthEvaluation() {}

void OAIHealthEvaluation::initializeModel() {

    m_aggregated_health_state_isSet = false;
    m_aggregated_health_state_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;
}

void OAIHealthEvaluation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHealthEvaluation::fromJsonObject(QJsonObject json) {

    m_aggregated_health_state_isValid = ::OpenAPI::fromJsonValue(m_aggregated_health_state, json[QString("AggregatedHealthState")]);
    m_aggregated_health_state_isSet = !json[QString("AggregatedHealthState")].isNull() && m_aggregated_health_state_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("Kind")]);
    m_kind_isSet = !json[QString("Kind")].isNull() && m_kind_isValid;
}

QString OAIHealthEvaluation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHealthEvaluation::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregated_health_state.isSet()) {
        obj.insert(QString("AggregatedHealthState"), ::OpenAPI::toJsonValue(m_aggregated_health_state));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_kind.isSet()) {
        obj.insert(QString("Kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    return obj;
}

OAIHealthState OAIHealthEvaluation::getAggregatedHealthState() const {
    return m_aggregated_health_state;
}
void OAIHealthEvaluation::setAggregatedHealthState(const OAIHealthState &aggregated_health_state) {
    m_aggregated_health_state = aggregated_health_state;
    m_aggregated_health_state_isSet = true;
}

bool OAIHealthEvaluation::is_aggregated_health_state_Set() const{
    return m_aggregated_health_state_isSet;
}

bool OAIHealthEvaluation::is_aggregated_health_state_Valid() const{
    return m_aggregated_health_state_isValid;
}

QString OAIHealthEvaluation::getDescription() const {
    return m_description;
}
void OAIHealthEvaluation::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIHealthEvaluation::is_description_Set() const{
    return m_description_isSet;
}

bool OAIHealthEvaluation::is_description_Valid() const{
    return m_description_isValid;
}

OAIHealthEvaluationKind OAIHealthEvaluation::getKind() const {
    return m_kind;
}
void OAIHealthEvaluation::setKind(const OAIHealthEvaluationKind &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIHealthEvaluation::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIHealthEvaluation::is_kind_Valid() const{
    return m_kind_isValid;
}

bool OAIHealthEvaluation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregated_health_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHealthEvaluation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_kind_isValid && true;
}

} // namespace OpenAPI
