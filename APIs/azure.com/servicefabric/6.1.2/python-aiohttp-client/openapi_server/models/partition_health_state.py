# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_state import HealthState
from openapi_server import util


class PartitionHealthState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregated_health_state: HealthState=None, partition_id: str=None):
        """PartitionHealthState - a model defined in OpenAPI

        :param aggregated_health_state: The aggregated_health_state of this PartitionHealthState.
        :param partition_id: The partition_id of this PartitionHealthState.
        """
        self.openapi_types = {
            'aggregated_health_state': HealthState,
            'partition_id': str
        }

        self.attribute_map = {
            'aggregated_health_state': 'AggregatedHealthState',
            'partition_id': 'PartitionId'
        }

        self._aggregated_health_state = aggregated_health_state
        self._partition_id = partition_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PartitionHealthState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PartitionHealthState of this PartitionHealthState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregated_health_state(self):
        """Gets the aggregated_health_state of this PartitionHealthState.


        :return: The aggregated_health_state of this PartitionHealthState.
        :rtype: HealthState
        """
        return self._aggregated_health_state

    @aggregated_health_state.setter
    def aggregated_health_state(self, aggregated_health_state):
        """Sets the aggregated_health_state of this PartitionHealthState.


        :param aggregated_health_state: The aggregated_health_state of this PartitionHealthState.
        :type aggregated_health_state: HealthState
        """

        self._aggregated_health_state = aggregated_health_state

    @property
    def partition_id(self):
        """Gets the partition_id of this PartitionHealthState.

        An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.

        :return: The partition_id of this PartitionHealthState.
        :rtype: str
        """
        return self._partition_id

    @partition_id.setter
    def partition_id(self, partition_id):
        """Sets the partition_id of this PartitionHealthState.

        An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.

        :param partition_id: The partition_id of this PartitionHealthState.
        :type partition_id: str
        """

        self._partition_id = partition_id
