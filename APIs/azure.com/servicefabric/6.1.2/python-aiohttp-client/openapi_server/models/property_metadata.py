# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.property_value_kind import PropertyValueKind
from openapi_server import util


class PropertyMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_type_id: str=None, last_modified_utc_timestamp: datetime=None, parent: str=None, sequence_number: str=None, size_in_bytes: int=None, type_id: PropertyValueKind=None):
        """PropertyMetadata - a model defined in OpenAPI

        :param custom_type_id: The custom_type_id of this PropertyMetadata.
        :param last_modified_utc_timestamp: The last_modified_utc_timestamp of this PropertyMetadata.
        :param parent: The parent of this PropertyMetadata.
        :param sequence_number: The sequence_number of this PropertyMetadata.
        :param size_in_bytes: The size_in_bytes of this PropertyMetadata.
        :param type_id: The type_id of this PropertyMetadata.
        """
        self.openapi_types = {
            'custom_type_id': str,
            'last_modified_utc_timestamp': datetime,
            'parent': str,
            'sequence_number': str,
            'size_in_bytes': int,
            'type_id': PropertyValueKind
        }

        self.attribute_map = {
            'custom_type_id': 'CustomTypeId',
            'last_modified_utc_timestamp': 'LastModifiedUtcTimestamp',
            'parent': 'Parent',
            'sequence_number': 'SequenceNumber',
            'size_in_bytes': 'SizeInBytes',
            'type_id': 'TypeId'
        }

        self._custom_type_id = custom_type_id
        self._last_modified_utc_timestamp = last_modified_utc_timestamp
        self._parent = parent
        self._sequence_number = sequence_number
        self._size_in_bytes = size_in_bytes
        self._type_id = type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PropertyMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PropertyMetadata of this PropertyMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_type_id(self):
        """Gets the custom_type_id of this PropertyMetadata.

        The property's custom type id. Using this property, the user is able to tag the type of the value of the property.

        :return: The custom_type_id of this PropertyMetadata.
        :rtype: str
        """
        return self._custom_type_id

    @custom_type_id.setter
    def custom_type_id(self, custom_type_id):
        """Sets the custom_type_id of this PropertyMetadata.

        The property's custom type id. Using this property, the user is able to tag the type of the value of the property.

        :param custom_type_id: The custom_type_id of this PropertyMetadata.
        :type custom_type_id: str
        """

        self._custom_type_id = custom_type_id

    @property
    def last_modified_utc_timestamp(self):
        """Gets the last_modified_utc_timestamp of this PropertyMetadata.

        Represents when the Property was last modified. Only write operations will cause this field to be updated.

        :return: The last_modified_utc_timestamp of this PropertyMetadata.
        :rtype: datetime
        """
        return self._last_modified_utc_timestamp

    @last_modified_utc_timestamp.setter
    def last_modified_utc_timestamp(self, last_modified_utc_timestamp):
        """Sets the last_modified_utc_timestamp of this PropertyMetadata.

        Represents when the Property was last modified. Only write operations will cause this field to be updated.

        :param last_modified_utc_timestamp: The last_modified_utc_timestamp of this PropertyMetadata.
        :type last_modified_utc_timestamp: datetime
        """

        self._last_modified_utc_timestamp = last_modified_utc_timestamp

    @property
    def parent(self):
        """Gets the parent of this PropertyMetadata.

        The Service Fabric name, including the 'fabric:' URI scheme.

        :return: The parent of this PropertyMetadata.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this PropertyMetadata.

        The Service Fabric name, including the 'fabric:' URI scheme.

        :param parent: The parent of this PropertyMetadata.
        :type parent: str
        """

        self._parent = parent

    @property
    def sequence_number(self):
        """Gets the sequence_number of this PropertyMetadata.

        The version of the property. Every time a property is modified, its sequence number is increased.

        :return: The sequence_number of this PropertyMetadata.
        :rtype: str
        """
        return self._sequence_number

    @sequence_number.setter
    def sequence_number(self, sequence_number):
        """Sets the sequence_number of this PropertyMetadata.

        The version of the property. Every time a property is modified, its sequence number is increased.

        :param sequence_number: The sequence_number of this PropertyMetadata.
        :type sequence_number: str
        """

        self._sequence_number = sequence_number

    @property
    def size_in_bytes(self):
        """Gets the size_in_bytes of this PropertyMetadata.

        The length of the serialized property value.

        :return: The size_in_bytes of this PropertyMetadata.
        :rtype: int
        """
        return self._size_in_bytes

    @size_in_bytes.setter
    def size_in_bytes(self, size_in_bytes):
        """Sets the size_in_bytes of this PropertyMetadata.

        The length of the serialized property value.

        :param size_in_bytes: The size_in_bytes of this PropertyMetadata.
        :type size_in_bytes: int
        """

        self._size_in_bytes = size_in_bytes

    @property
    def type_id(self):
        """Gets the type_id of this PropertyMetadata.


        :return: The type_id of this PropertyMetadata.
        :rtype: PropertyValueKind
        """
        return self._type_id

    @type_id.setter
    def type_id(self, type_id):
        """Sets the type_id of this PropertyMetadata.


        :param type_id: The type_id of this PropertyMetadata.
        :type type_id: PropertyValueKind
        """

        self._type_id = type_id
