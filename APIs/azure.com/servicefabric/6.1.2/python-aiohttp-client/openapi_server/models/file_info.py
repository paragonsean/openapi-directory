# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_version import FileVersion
from openapi_server import util


class FileInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_size: str=None, file_version: FileVersion=None, modified_date: datetime=None, store_relative_path: str=None):
        """FileInfo - a model defined in OpenAPI

        :param file_size: The file_size of this FileInfo.
        :param file_version: The file_version of this FileInfo.
        :param modified_date: The modified_date of this FileInfo.
        :param store_relative_path: The store_relative_path of this FileInfo.
        """
        self.openapi_types = {
            'file_size': str,
            'file_version': FileVersion,
            'modified_date': datetime,
            'store_relative_path': str
        }

        self.attribute_map = {
            'file_size': 'FileSize',
            'file_version': 'FileVersion',
            'modified_date': 'ModifiedDate',
            'store_relative_path': 'StoreRelativePath'
        }

        self._file_size = file_size
        self._file_version = file_version
        self._modified_date = modified_date
        self._store_relative_path = store_relative_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileInfo of this FileInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_size(self):
        """Gets the file_size of this FileInfo.

        The size of file in bytes.

        :return: The file_size of this FileInfo.
        :rtype: str
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """Sets the file_size of this FileInfo.

        The size of file in bytes.

        :param file_size: The file_size of this FileInfo.
        :type file_size: str
        """

        self._file_size = file_size

    @property
    def file_version(self):
        """Gets the file_version of this FileInfo.


        :return: The file_version of this FileInfo.
        :rtype: FileVersion
        """
        return self._file_version

    @file_version.setter
    def file_version(self, file_version):
        """Sets the file_version of this FileInfo.


        :param file_version: The file_version of this FileInfo.
        :type file_version: FileVersion
        """

        self._file_version = file_version

    @property
    def modified_date(self):
        """Gets the modified_date of this FileInfo.

        The date and time when the image store file was last modified.

        :return: The modified_date of this FileInfo.
        :rtype: datetime
        """
        return self._modified_date

    @modified_date.setter
    def modified_date(self, modified_date):
        """Sets the modified_date of this FileInfo.

        The date and time when the image store file was last modified.

        :param modified_date: The modified_date of this FileInfo.
        :type modified_date: datetime
        """

        self._modified_date = modified_date

    @property
    def store_relative_path(self):
        """Gets the store_relative_path of this FileInfo.

        The file path relative to the image store root path.

        :return: The store_relative_path of this FileInfo.
        :rtype: str
        """
        return self._store_relative_path

    @store_relative_path.setter
    def store_relative_path(self, store_relative_path):
        """Sets the store_relative_path of this FileInfo.

        The file path relative to the image store root path.

        :param store_relative_path: The store_relative_path of this FileInfo.
        :type store_relative_path: str
        """

        self._store_relative_path = store_relative_path
