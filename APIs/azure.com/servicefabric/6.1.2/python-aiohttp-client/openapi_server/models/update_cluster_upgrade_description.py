# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_health_policies import ApplicationHealthPolicies
from openapi_server.models.cluster_health_policy import ClusterHealthPolicy
from openapi_server.models.cluster_upgrade_health_policy_object import ClusterUpgradeHealthPolicyObject
from openapi_server.models.rolling_upgrade_update_description import RollingUpgradeUpdateDescription
from openapi_server.models.upgrade_type import UpgradeType
from openapi_server import util


class UpdateClusterUpgradeDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_health_policy_map: ApplicationHealthPolicies=None, cluster_health_policy: ClusterHealthPolicy=None, cluster_upgrade_health_policy: ClusterUpgradeHealthPolicyObject=None, enable_delta_health_evaluation: bool=None, update_description: RollingUpgradeUpdateDescription=None, upgrade_kind: UpgradeType=UpgradeType.ROLLING):
        """UpdateClusterUpgradeDescription - a model defined in OpenAPI

        :param application_health_policy_map: The application_health_policy_map of this UpdateClusterUpgradeDescription.
        :param cluster_health_policy: The cluster_health_policy of this UpdateClusterUpgradeDescription.
        :param cluster_upgrade_health_policy: The cluster_upgrade_health_policy of this UpdateClusterUpgradeDescription.
        :param enable_delta_health_evaluation: The enable_delta_health_evaluation of this UpdateClusterUpgradeDescription.
        :param update_description: The update_description of this UpdateClusterUpgradeDescription.
        :param upgrade_kind: The upgrade_kind of this UpdateClusterUpgradeDescription.
        """
        self.openapi_types = {
            'application_health_policy_map': ApplicationHealthPolicies,
            'cluster_health_policy': ClusterHealthPolicy,
            'cluster_upgrade_health_policy': ClusterUpgradeHealthPolicyObject,
            'enable_delta_health_evaluation': bool,
            'update_description': RollingUpgradeUpdateDescription,
            'upgrade_kind': UpgradeType
        }

        self.attribute_map = {
            'application_health_policy_map': 'ApplicationHealthPolicyMap',
            'cluster_health_policy': 'ClusterHealthPolicy',
            'cluster_upgrade_health_policy': 'ClusterUpgradeHealthPolicy',
            'enable_delta_health_evaluation': 'EnableDeltaHealthEvaluation',
            'update_description': 'UpdateDescription',
            'upgrade_kind': 'UpgradeKind'
        }

        self._application_health_policy_map = application_health_policy_map
        self._cluster_health_policy = cluster_health_policy
        self._cluster_upgrade_health_policy = cluster_upgrade_health_policy
        self._enable_delta_health_evaluation = enable_delta_health_evaluation
        self._update_description = update_description
        self._upgrade_kind = upgrade_kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateClusterUpgradeDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateClusterUpgradeDescription of this UpdateClusterUpgradeDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_health_policy_map(self):
        """Gets the application_health_policy_map of this UpdateClusterUpgradeDescription.


        :return: The application_health_policy_map of this UpdateClusterUpgradeDescription.
        :rtype: ApplicationHealthPolicies
        """
        return self._application_health_policy_map

    @application_health_policy_map.setter
    def application_health_policy_map(self, application_health_policy_map):
        """Sets the application_health_policy_map of this UpdateClusterUpgradeDescription.


        :param application_health_policy_map: The application_health_policy_map of this UpdateClusterUpgradeDescription.
        :type application_health_policy_map: ApplicationHealthPolicies
        """

        self._application_health_policy_map = application_health_policy_map

    @property
    def cluster_health_policy(self):
        """Gets the cluster_health_policy of this UpdateClusterUpgradeDescription.


        :return: The cluster_health_policy of this UpdateClusterUpgradeDescription.
        :rtype: ClusterHealthPolicy
        """
        return self._cluster_health_policy

    @cluster_health_policy.setter
    def cluster_health_policy(self, cluster_health_policy):
        """Sets the cluster_health_policy of this UpdateClusterUpgradeDescription.


        :param cluster_health_policy: The cluster_health_policy of this UpdateClusterUpgradeDescription.
        :type cluster_health_policy: ClusterHealthPolicy
        """

        self._cluster_health_policy = cluster_health_policy

    @property
    def cluster_upgrade_health_policy(self):
        """Gets the cluster_upgrade_health_policy of this UpdateClusterUpgradeDescription.


        :return: The cluster_upgrade_health_policy of this UpdateClusterUpgradeDescription.
        :rtype: ClusterUpgradeHealthPolicyObject
        """
        return self._cluster_upgrade_health_policy

    @cluster_upgrade_health_policy.setter
    def cluster_upgrade_health_policy(self, cluster_upgrade_health_policy):
        """Sets the cluster_upgrade_health_policy of this UpdateClusterUpgradeDescription.


        :param cluster_upgrade_health_policy: The cluster_upgrade_health_policy of this UpdateClusterUpgradeDescription.
        :type cluster_upgrade_health_policy: ClusterUpgradeHealthPolicyObject
        """

        self._cluster_upgrade_health_policy = cluster_upgrade_health_policy

    @property
    def enable_delta_health_evaluation(self):
        """Gets the enable_delta_health_evaluation of this UpdateClusterUpgradeDescription.

        When true, enables delta health evaluation rather than absolute health evaluation after completion of each upgrade domain.

        :return: The enable_delta_health_evaluation of this UpdateClusterUpgradeDescription.
        :rtype: bool
        """
        return self._enable_delta_health_evaluation

    @enable_delta_health_evaluation.setter
    def enable_delta_health_evaluation(self, enable_delta_health_evaluation):
        """Sets the enable_delta_health_evaluation of this UpdateClusterUpgradeDescription.

        When true, enables delta health evaluation rather than absolute health evaluation after completion of each upgrade domain.

        :param enable_delta_health_evaluation: The enable_delta_health_evaluation of this UpdateClusterUpgradeDescription.
        :type enable_delta_health_evaluation: bool
        """

        self._enable_delta_health_evaluation = enable_delta_health_evaluation

    @property
    def update_description(self):
        """Gets the update_description of this UpdateClusterUpgradeDescription.


        :return: The update_description of this UpdateClusterUpgradeDescription.
        :rtype: RollingUpgradeUpdateDescription
        """
        return self._update_description

    @update_description.setter
    def update_description(self, update_description):
        """Sets the update_description of this UpdateClusterUpgradeDescription.


        :param update_description: The update_description of this UpdateClusterUpgradeDescription.
        :type update_description: RollingUpgradeUpdateDescription
        """

        self._update_description = update_description

    @property
    def upgrade_kind(self):
        """Gets the upgrade_kind of this UpdateClusterUpgradeDescription.


        :return: The upgrade_kind of this UpdateClusterUpgradeDescription.
        :rtype: UpgradeType
        """
        return self._upgrade_kind

    @upgrade_kind.setter
    def upgrade_kind(self, upgrade_kind):
        """Sets the upgrade_kind of this UpdateClusterUpgradeDescription.


        :param upgrade_kind: The upgrade_kind of this UpdateClusterUpgradeDescription.
        :type upgrade_kind: UpgradeType
        """

        self._upgrade_kind = upgrade_kind
