# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployment_status import DeploymentStatus
from openapi_server import util


class DeployedServicePackageInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, service_package_activation_id: str=None, status: DeploymentStatus=None, version: str=None):
        """DeployedServicePackageInfo - a model defined in OpenAPI

        :param name: The name of this DeployedServicePackageInfo.
        :param service_package_activation_id: The service_package_activation_id of this DeployedServicePackageInfo.
        :param status: The status of this DeployedServicePackageInfo.
        :param version: The version of this DeployedServicePackageInfo.
        """
        self.openapi_types = {
            'name': str,
            'service_package_activation_id': str,
            'status': DeploymentStatus,
            'version': str
        }

        self.attribute_map = {
            'name': 'Name',
            'service_package_activation_id': 'ServicePackageActivationId',
            'status': 'Status',
            'version': 'Version'
        }

        self._name = name
        self._service_package_activation_id = service_package_activation_id
        self._status = status
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeployedServicePackageInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeployedServicePackageInfo of this DeployedServicePackageInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DeployedServicePackageInfo.

        The name of the service manifest.

        :return: The name of this DeployedServicePackageInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeployedServicePackageInfo.

        The name of the service manifest.

        :param name: The name of this DeployedServicePackageInfo.
        :type name: str
        """

        self._name = name

    @property
    def service_package_activation_id(self):
        """Gets the service_package_activation_id of this DeployedServicePackageInfo.

        The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId is always an empty string. 

        :return: The service_package_activation_id of this DeployedServicePackageInfo.
        :rtype: str
        """
        return self._service_package_activation_id

    @service_package_activation_id.setter
    def service_package_activation_id(self, service_package_activation_id):
        """Sets the service_package_activation_id of this DeployedServicePackageInfo.

        The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId is always an empty string. 

        :param service_package_activation_id: The service_package_activation_id of this DeployedServicePackageInfo.
        :type service_package_activation_id: str
        """

        self._service_package_activation_id = service_package_activation_id

    @property
    def status(self):
        """Gets the status of this DeployedServicePackageInfo.


        :return: The status of this DeployedServicePackageInfo.
        :rtype: DeploymentStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeployedServicePackageInfo.


        :param status: The status of this DeployedServicePackageInfo.
        :type status: DeploymentStatus
        """

        self._status = status

    @property
    def version(self):
        """Gets the version of this DeployedServicePackageInfo.

        The version of the service package specified in service manifest.

        :return: The version of this DeployedServicePackageInfo.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this DeployedServicePackageInfo.

        The version of the service package specified in service manifest.

        :param version: The version of this DeployedServicePackageInfo.
        :type version: str
        """

        self._version = version
