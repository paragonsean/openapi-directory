# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.provision_application_type_description_base import ProvisionApplicationTypeDescriptionBase
from openapi_server.models.provision_application_type_kind import ProvisionApplicationTypeKind
from openapi_server import util


class ProvisionApplicationTypeDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _async: bool=None, kind: ProvisionApplicationTypeKind=None, application_type_build_path: str=None):
        """ProvisionApplicationTypeDescription - a model defined in OpenAPI

        :param _async: The _async of this ProvisionApplicationTypeDescription.
        :param kind: The kind of this ProvisionApplicationTypeDescription.
        :param application_type_build_path: The application_type_build_path of this ProvisionApplicationTypeDescription.
        """
        self.openapi_types = {
            '_async': bool,
            'kind': ProvisionApplicationTypeKind,
            'application_type_build_path': str
        }

        self.attribute_map = {
            '_async': 'Async',
            'kind': 'Kind',
            'application_type_build_path': 'ApplicationTypeBuildPath'
        }

        self.__async = _async
        self._kind = kind
        self._application_type_build_path = application_type_build_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProvisionApplicationTypeDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProvisionApplicationTypeDescription of this ProvisionApplicationTypeDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _async(self):
        """Gets the _async of this ProvisionApplicationTypeDescription.

        Indicates whether or not provisioning should occur asynchronously. When set to true, the provision operation returns when the request is accepted by the system, and the provision operation continues without any timeout limit. The default value is false. For large application packages, we recommend setting the value to true.

        :return: The _async of this ProvisionApplicationTypeDescription.
        :rtype: bool
        """
        return self.__async

    @_async.setter
    def _async(self, _async):
        """Sets the _async of this ProvisionApplicationTypeDescription.

        Indicates whether or not provisioning should occur asynchronously. When set to true, the provision operation returns when the request is accepted by the system, and the provision operation continues without any timeout limit. The default value is false. For large application packages, we recommend setting the value to true.

        :param _async: The _async of this ProvisionApplicationTypeDescription.
        :type _async: bool
        """
        if _async is None:
            raise ValueError("Invalid value for `_async`, must not be `None`")

        self.__async = _async

    @property
    def kind(self):
        """Gets the kind of this ProvisionApplicationTypeDescription.


        :return: The kind of this ProvisionApplicationTypeDescription.
        :rtype: ProvisionApplicationTypeKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ProvisionApplicationTypeDescription.


        :param kind: The kind of this ProvisionApplicationTypeDescription.
        :type kind: ProvisionApplicationTypeKind
        """
        if kind is None:
            raise ValueError("Invalid value for `kind`, must not be `None`")

        self._kind = kind

    @property
    def application_type_build_path(self):
        """Gets the application_type_build_path of this ProvisionApplicationTypeDescription.

        The relative path for the application package in the image store specified during the prior upload operation.

        :return: The application_type_build_path of this ProvisionApplicationTypeDescription.
        :rtype: str
        """
        return self._application_type_build_path

    @application_type_build_path.setter
    def application_type_build_path(self, application_type_build_path):
        """Sets the application_type_build_path of this ProvisionApplicationTypeDescription.

        The relative path for the application package in the image store specified during the prior upload operation.

        :param application_type_build_path: The application_type_build_path of this ProvisionApplicationTypeDescription.
        :type application_type_build_path: str
        """

        self._application_type_build_path = application_type_build_path
