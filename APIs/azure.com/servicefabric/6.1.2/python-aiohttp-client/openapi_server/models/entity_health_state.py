# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_state import HealthState
from openapi_server import util


class EntityHealthState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregated_health_state: HealthState=None):
        """EntityHealthState - a model defined in OpenAPI

        :param aggregated_health_state: The aggregated_health_state of this EntityHealthState.
        """
        self.openapi_types = {
            'aggregated_health_state': HealthState
        }

        self.attribute_map = {
            'aggregated_health_state': 'AggregatedHealthState'
        }

        self._aggregated_health_state = aggregated_health_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntityHealthState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntityHealthState of this EntityHealthState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregated_health_state(self):
        """Gets the aggregated_health_state of this EntityHealthState.


        :return: The aggregated_health_state of this EntityHealthState.
        :rtype: HealthState
        """
        return self._aggregated_health_state

    @aggregated_health_state.setter
    def aggregated_health_state(self, aggregated_health_state):
        """Sets the aggregated_health_state of this EntityHealthState.


        :param aggregated_health_state: The aggregated_health_state of this EntityHealthState.
        :type aggregated_health_state: HealthState
        """

        self._aggregated_health_state = aggregated_health_state
