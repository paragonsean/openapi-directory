# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.upgrade_state import UpgradeState
from openapi_server import util


class ClusterConfigurationUpgradeStatusInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config_version: str=None, details: str=None, progress_status: int=None, upgrade_state: UpgradeState=None):
        """ClusterConfigurationUpgradeStatusInfo - a model defined in OpenAPI

        :param config_version: The config_version of this ClusterConfigurationUpgradeStatusInfo.
        :param details: The details of this ClusterConfigurationUpgradeStatusInfo.
        :param progress_status: The progress_status of this ClusterConfigurationUpgradeStatusInfo.
        :param upgrade_state: The upgrade_state of this ClusterConfigurationUpgradeStatusInfo.
        """
        self.openapi_types = {
            'config_version': str,
            'details': str,
            'progress_status': int,
            'upgrade_state': UpgradeState
        }

        self.attribute_map = {
            'config_version': 'ConfigVersion',
            'details': 'Details',
            'progress_status': 'ProgressStatus',
            'upgrade_state': 'UpgradeState'
        }

        self._config_version = config_version
        self._details = details
        self._progress_status = progress_status
        self._upgrade_state = upgrade_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterConfigurationUpgradeStatusInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterConfigurationUpgradeStatusInfo of this ClusterConfigurationUpgradeStatusInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config_version(self):
        """Gets the config_version of this ClusterConfigurationUpgradeStatusInfo.

        The cluster configuration version.

        :return: The config_version of this ClusterConfigurationUpgradeStatusInfo.
        :rtype: str
        """
        return self._config_version

    @config_version.setter
    def config_version(self, config_version):
        """Sets the config_version of this ClusterConfigurationUpgradeStatusInfo.

        The cluster configuration version.

        :param config_version: The config_version of this ClusterConfigurationUpgradeStatusInfo.
        :type config_version: str
        """

        self._config_version = config_version

    @property
    def details(self):
        """Gets the details of this ClusterConfigurationUpgradeStatusInfo.

        The cluster upgrade status details.

        :return: The details of this ClusterConfigurationUpgradeStatusInfo.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this ClusterConfigurationUpgradeStatusInfo.

        The cluster upgrade status details.

        :param details: The details of this ClusterConfigurationUpgradeStatusInfo.
        :type details: str
        """

        self._details = details

    @property
    def progress_status(self):
        """Gets the progress_status of this ClusterConfigurationUpgradeStatusInfo.

        The cluster manifest version.

        :return: The progress_status of this ClusterConfigurationUpgradeStatusInfo.
        :rtype: int
        """
        return self._progress_status

    @progress_status.setter
    def progress_status(self, progress_status):
        """Sets the progress_status of this ClusterConfigurationUpgradeStatusInfo.

        The cluster manifest version.

        :param progress_status: The progress_status of this ClusterConfigurationUpgradeStatusInfo.
        :type progress_status: int
        """

        self._progress_status = progress_status

    @property
    def upgrade_state(self):
        """Gets the upgrade_state of this ClusterConfigurationUpgradeStatusInfo.


        :return: The upgrade_state of this ClusterConfigurationUpgradeStatusInfo.
        :rtype: UpgradeState
        """
        return self._upgrade_state

    @upgrade_state.setter
    def upgrade_state(self, upgrade_state):
        """Sets the upgrade_state of this ClusterConfigurationUpgradeStatusInfo.


        :param upgrade_state: The upgrade_state of this ClusterConfigurationUpgradeStatusInfo.
        :type upgrade_state: UpgradeState
        """

        self._upgrade_state = upgrade_state
