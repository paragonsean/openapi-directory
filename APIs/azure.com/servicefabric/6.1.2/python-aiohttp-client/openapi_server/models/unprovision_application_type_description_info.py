# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UnprovisionApplicationTypeDescriptionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_type_version: str=None, _async: bool=None):
        """UnprovisionApplicationTypeDescriptionInfo - a model defined in OpenAPI

        :param application_type_version: The application_type_version of this UnprovisionApplicationTypeDescriptionInfo.
        :param _async: The _async of this UnprovisionApplicationTypeDescriptionInfo.
        """
        self.openapi_types = {
            'application_type_version': str,
            '_async': bool
        }

        self.attribute_map = {
            'application_type_version': 'ApplicationTypeVersion',
            '_async': 'Async'
        }

        self._application_type_version = application_type_version
        self.__async = _async

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnprovisionApplicationTypeDescriptionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnprovisionApplicationTypeDescriptionInfo of this UnprovisionApplicationTypeDescriptionInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_type_version(self):
        """Gets the application_type_version of this UnprovisionApplicationTypeDescriptionInfo.

        The version of the application type as defined in the application manifest.

        :return: The application_type_version of this UnprovisionApplicationTypeDescriptionInfo.
        :rtype: str
        """
        return self._application_type_version

    @application_type_version.setter
    def application_type_version(self, application_type_version):
        """Sets the application_type_version of this UnprovisionApplicationTypeDescriptionInfo.

        The version of the application type as defined in the application manifest.

        :param application_type_version: The application_type_version of this UnprovisionApplicationTypeDescriptionInfo.
        :type application_type_version: str
        """
        if application_type_version is None:
            raise ValueError("Invalid value for `application_type_version`, must not be `None`")

        self._application_type_version = application_type_version

    @property
    def _async(self):
        """Gets the _async of this UnprovisionApplicationTypeDescriptionInfo.

        The flag indicating whether or not unprovision should occur asynchronously. When set to true, the unprovision operation returns when the request is accepted by the system, and the unprovision operation continues without any timeout limit. The default value is false. However, we recommend to set it to true for large application packages that were provisioned.

        :return: The _async of this UnprovisionApplicationTypeDescriptionInfo.
        :rtype: bool
        """
        return self.__async

    @_async.setter
    def _async(self, _async):
        """Sets the _async of this UnprovisionApplicationTypeDescriptionInfo.

        The flag indicating whether or not unprovision should occur asynchronously. When set to true, the unprovision operation returns when the request is accepted by the system, and the unprovision operation continues without any timeout limit. The default value is false. However, we recommend to set it to true for large application packages that were provisioned.

        :param _async: The _async of this UnprovisionApplicationTypeDescriptionInfo.
        :type _async: bool
        """

        self.__async = _async
