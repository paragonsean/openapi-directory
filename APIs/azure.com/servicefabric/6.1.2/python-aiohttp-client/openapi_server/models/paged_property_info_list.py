# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.property_info import PropertyInfo
from openapi_server import util


class PagedPropertyInfoList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, continuation_token: str=None, is_consistent: bool=None, properties: List[PropertyInfo]=None):
        """PagedPropertyInfoList - a model defined in OpenAPI

        :param continuation_token: The continuation_token of this PagedPropertyInfoList.
        :param is_consistent: The is_consistent of this PagedPropertyInfoList.
        :param properties: The properties of this PagedPropertyInfoList.
        """
        self.openapi_types = {
            'continuation_token': str,
            'is_consistent': bool,
            'properties': List[PropertyInfo]
        }

        self.attribute_map = {
            'continuation_token': 'ContinuationToken',
            'is_consistent': 'IsConsistent',
            'properties': 'Properties'
        }

        self._continuation_token = continuation_token
        self._is_consistent = is_consistent
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PagedPropertyInfoList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PagedPropertyInfoList of this PagedPropertyInfoList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def continuation_token(self):
        """Gets the continuation_token of this PagedPropertyInfoList.

        The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results then the continuation token is not included in the response.

        :return: The continuation_token of this PagedPropertyInfoList.
        :rtype: str
        """
        return self._continuation_token

    @continuation_token.setter
    def continuation_token(self, continuation_token):
        """Sets the continuation_token of this PagedPropertyInfoList.

        The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results then the continuation token is not included in the response.

        :param continuation_token: The continuation_token of this PagedPropertyInfoList.
        :type continuation_token: str
        """

        self._continuation_token = continuation_token

    @property
    def is_consistent(self):
        """Gets the is_consistent of this PagedPropertyInfoList.

        Indicates whether any property under the given name has been modified during the enumeration. If there was a modification, this property value is false.

        :return: The is_consistent of this PagedPropertyInfoList.
        :rtype: bool
        """
        return self._is_consistent

    @is_consistent.setter
    def is_consistent(self, is_consistent):
        """Sets the is_consistent of this PagedPropertyInfoList.

        Indicates whether any property under the given name has been modified during the enumeration. If there was a modification, this property value is false.

        :param is_consistent: The is_consistent of this PagedPropertyInfoList.
        :type is_consistent: bool
        """

        self._is_consistent = is_consistent

    @property
    def properties(self):
        """Gets the properties of this PagedPropertyInfoList.

        List of property information.

        :return: The properties of this PagedPropertyInfoList.
        :rtype: List[PropertyInfo]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this PagedPropertyInfoList.

        List of property information.

        :param properties: The properties of this PagedPropertyInfoList.
        :type properties: List[PropertyInfo]
        """

        self._properties = properties
