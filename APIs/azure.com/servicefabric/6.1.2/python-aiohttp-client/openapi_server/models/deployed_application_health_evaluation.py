# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_evaluation import HealthEvaluation
from openapi_server.models.health_evaluation_kind import HealthEvaluationKind
from openapi_server.models.health_evaluation_wrapper import HealthEvaluationWrapper
from openapi_server.models.health_state import HealthState
from openapi_server import util


class DeployedApplicationHealthEvaluation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregated_health_state: HealthState=None, description: str=None, kind: HealthEvaluationKind=None, application_name: str=None, node_name: str=None, unhealthy_evaluations: List[HealthEvaluationWrapper]=None):
        """DeployedApplicationHealthEvaluation - a model defined in OpenAPI

        :param aggregated_health_state: The aggregated_health_state of this DeployedApplicationHealthEvaluation.
        :param description: The description of this DeployedApplicationHealthEvaluation.
        :param kind: The kind of this DeployedApplicationHealthEvaluation.
        :param application_name: The application_name of this DeployedApplicationHealthEvaluation.
        :param node_name: The node_name of this DeployedApplicationHealthEvaluation.
        :param unhealthy_evaluations: The unhealthy_evaluations of this DeployedApplicationHealthEvaluation.
        """
        self.openapi_types = {
            'aggregated_health_state': HealthState,
            'description': str,
            'kind': HealthEvaluationKind,
            'application_name': str,
            'node_name': str,
            'unhealthy_evaluations': List[HealthEvaluationWrapper]
        }

        self.attribute_map = {
            'aggregated_health_state': 'AggregatedHealthState',
            'description': 'Description',
            'kind': 'Kind',
            'application_name': 'ApplicationName',
            'node_name': 'NodeName',
            'unhealthy_evaluations': 'UnhealthyEvaluations'
        }

        self._aggregated_health_state = aggregated_health_state
        self._description = description
        self._kind = kind
        self._application_name = application_name
        self._node_name = node_name
        self._unhealthy_evaluations = unhealthy_evaluations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeployedApplicationHealthEvaluation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeployedApplicationHealthEvaluation of this DeployedApplicationHealthEvaluation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregated_health_state(self):
        """Gets the aggregated_health_state of this DeployedApplicationHealthEvaluation.


        :return: The aggregated_health_state of this DeployedApplicationHealthEvaluation.
        :rtype: HealthState
        """
        return self._aggregated_health_state

    @aggregated_health_state.setter
    def aggregated_health_state(self, aggregated_health_state):
        """Sets the aggregated_health_state of this DeployedApplicationHealthEvaluation.


        :param aggregated_health_state: The aggregated_health_state of this DeployedApplicationHealthEvaluation.
        :type aggregated_health_state: HealthState
        """

        self._aggregated_health_state = aggregated_health_state

    @property
    def description(self):
        """Gets the description of this DeployedApplicationHealthEvaluation.

        Description of the health evaluation, which represents a summary of the evaluation process.

        :return: The description of this DeployedApplicationHealthEvaluation.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DeployedApplicationHealthEvaluation.

        Description of the health evaluation, which represents a summary of the evaluation process.

        :param description: The description of this DeployedApplicationHealthEvaluation.
        :type description: str
        """

        self._description = description

    @property
    def kind(self):
        """Gets the kind of this DeployedApplicationHealthEvaluation.


        :return: The kind of this DeployedApplicationHealthEvaluation.
        :rtype: HealthEvaluationKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this DeployedApplicationHealthEvaluation.


        :param kind: The kind of this DeployedApplicationHealthEvaluation.
        :type kind: HealthEvaluationKind
        """
        if kind is None:
            raise ValueError("Invalid value for `kind`, must not be `None`")

        self._kind = kind

    @property
    def application_name(self):
        """Gets the application_name of this DeployedApplicationHealthEvaluation.

        The name of the application, including the 'fabric:' URI scheme.

        :return: The application_name of this DeployedApplicationHealthEvaluation.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this DeployedApplicationHealthEvaluation.

        The name of the application, including the 'fabric:' URI scheme.

        :param application_name: The application_name of this DeployedApplicationHealthEvaluation.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def node_name(self):
        """Gets the node_name of this DeployedApplicationHealthEvaluation.

        The name of a Service Fabric node.

        :return: The node_name of this DeployedApplicationHealthEvaluation.
        :rtype: str
        """
        return self._node_name

    @node_name.setter
    def node_name(self, node_name):
        """Sets the node_name of this DeployedApplicationHealthEvaluation.

        The name of a Service Fabric node.

        :param node_name: The node_name of this DeployedApplicationHealthEvaluation.
        :type node_name: str
        """

        self._node_name = node_name

    @property
    def unhealthy_evaluations(self):
        """Gets the unhealthy_evaluations of this DeployedApplicationHealthEvaluation.

        List of health evaluations that resulted in the current aggregated health state.

        :return: The unhealthy_evaluations of this DeployedApplicationHealthEvaluation.
        :rtype: List[HealthEvaluationWrapper]
        """
        return self._unhealthy_evaluations

    @unhealthy_evaluations.setter
    def unhealthy_evaluations(self, unhealthy_evaluations):
        """Sets the unhealthy_evaluations of this DeployedApplicationHealthEvaluation.

        List of health evaluations that resulted in the current aggregated health state.

        :param unhealthy_evaluations: The unhealthy_evaluations of this DeployedApplicationHealthEvaluation.
        :type unhealthy_evaluations: List[HealthEvaluationWrapper]
        """

        self._unhealthy_evaluations = unhealthy_evaluations
