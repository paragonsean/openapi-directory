/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeployedApplicationStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeployedApplicationStatus::OAIDeployedApplicationStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeployedApplicationStatus::OAIDeployedApplicationStatus() {
    this->initializeModel();
}

OAIDeployedApplicationStatus::~OAIDeployedApplicationStatus() {}

void OAIDeployedApplicationStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDeployedApplicationStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDeployedApplicationStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Invalid", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeployedApplicationStatus::INVALID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Downloading", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeployedApplicationStatus::DOWNLOADING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Activating", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeployedApplicationStatus::ACTIVATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Active", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeployedApplicationStatus::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Upgrading", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeployedApplicationStatus::UPGRADING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Deactivating", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeployedApplicationStatus::DEACTIVATING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDeployedApplicationStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDeployedApplicationStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDeployedApplicationStatus::INVALID:
            val = "Invalid";
            break;
        case eOAIDeployedApplicationStatus::DOWNLOADING:
            val = "Downloading";
            break;
        case eOAIDeployedApplicationStatus::ACTIVATING:
            val = "Activating";
            break;
        case eOAIDeployedApplicationStatus::ACTIVE:
            val = "Active";
            break;
        case eOAIDeployedApplicationStatus::UPGRADING:
            val = "Upgrading";
            break;
        case eOAIDeployedApplicationStatus::DEACTIVATING:
            val = "Deactivating";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDeployedApplicationStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDeployedApplicationStatus::eOAIDeployedApplicationStatus OAIDeployedApplicationStatus::getValue() const {
    return m_value;
}

void OAIDeployedApplicationStatus::setValue(const OAIDeployedApplicationStatus::eOAIDeployedApplicationStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDeployedApplicationStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIDeployedApplicationStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
