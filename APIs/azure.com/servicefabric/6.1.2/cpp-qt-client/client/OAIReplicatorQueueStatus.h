/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplicatorQueueStatus.h
 *
 * Provides various statistics of the queue used in the service fabric replicator. Contains information about the service fabric replicator like the replication/copy queue utilization, last acknowledgement received timestamp, etc. Depending on the role of the replicator, the properties in this type imply different meanings. 
 */

#ifndef OAIReplicatorQueueStatus_H
#define OAIReplicatorQueueStatus_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReplicatorQueueStatus : public OAIObject {
public:
    OAIReplicatorQueueStatus();
    OAIReplicatorQueueStatus(QString json);
    ~OAIReplicatorQueueStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCommittedSequenceNumber() const;
    void setCommittedSequenceNumber(const QString &committed_sequence_number);
    bool is_committed_sequence_number_Set() const;
    bool is_committed_sequence_number_Valid() const;

    QString getCompletedSequenceNumber() const;
    void setCompletedSequenceNumber(const QString &completed_sequence_number);
    bool is_completed_sequence_number_Set() const;
    bool is_completed_sequence_number_Valid() const;

    QString getFirstSequenceNumber() const;
    void setFirstSequenceNumber(const QString &first_sequence_number);
    bool is_first_sequence_number_Set() const;
    bool is_first_sequence_number_Valid() const;

    QString getLastSequenceNumber() const;
    void setLastSequenceNumber(const QString &last_sequence_number);
    bool is_last_sequence_number_Set() const;
    bool is_last_sequence_number_Valid() const;

    QString getQueueMemorySize() const;
    void setQueueMemorySize(const QString &queue_memory_size);
    bool is_queue_memory_size_Set() const;
    bool is_queue_memory_size_Valid() const;

    qint32 getQueueUtilizationPercentage() const;
    void setQueueUtilizationPercentage(const qint32 &queue_utilization_percentage);
    bool is_queue_utilization_percentage_Set() const;
    bool is_queue_utilization_percentage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_committed_sequence_number;
    bool m_committed_sequence_number_isSet;
    bool m_committed_sequence_number_isValid;

    QString m_completed_sequence_number;
    bool m_completed_sequence_number_isSet;
    bool m_completed_sequence_number_isValid;

    QString m_first_sequence_number;
    bool m_first_sequence_number_isSet;
    bool m_first_sequence_number_isValid;

    QString m_last_sequence_number;
    bool m_last_sequence_number_isSet;
    bool m_last_sequence_number_isValid;

    QString m_queue_memory_size;
    bool m_queue_memory_size_isSet;
    bool m_queue_memory_size_isValid;

    qint32 m_queue_utilization_percentage;
    bool m_queue_utilization_percentage_isSet;
    bool m_queue_utilization_percentage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplicatorQueueStatus)

#endif // OAIReplicatorQueueStatus_H
