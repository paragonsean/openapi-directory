/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeployedApplicationHealthStateChunk.h
 *
 * Represents the health state chunk of a deployed application, which contains the node where the application is deployed, the aggregated health state and any deployed service packages that respect the chunk query description filters. 
 */

#ifndef OAIDeployedApplicationHealthStateChunk_H
#define OAIDeployedApplicationHealthStateChunk_H

#include <QJsonObject>

#include "OAIDeployedServicePackageHealthStateChunkList.h"
#include "OAIHealthState.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeployedServicePackageHealthStateChunkList;

class OAIDeployedApplicationHealthStateChunk : public OAIObject {
public:
    OAIDeployedApplicationHealthStateChunk();
    OAIDeployedApplicationHealthStateChunk(QString json);
    ~OAIDeployedApplicationHealthStateChunk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHealthState getHealthState() const;
    void setHealthState(const OAIHealthState &health_state);
    bool is_health_state_Set() const;
    bool is_health_state_Valid() const;

    OAIDeployedServicePackageHealthStateChunkList getDeployedServicePackageHealthStateChunks() const;
    void setDeployedServicePackageHealthStateChunks(const OAIDeployedServicePackageHealthStateChunkList &deployed_service_package_health_state_chunks);
    bool is_deployed_service_package_health_state_chunks_Set() const;
    bool is_deployed_service_package_health_state_chunks_Valid() const;

    QString getNodeName() const;
    void setNodeName(const QString &node_name);
    bool is_node_name_Set() const;
    bool is_node_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHealthState m_health_state;
    bool m_health_state_isSet;
    bool m_health_state_isValid;

    OAIDeployedServicePackageHealthStateChunkList m_deployed_service_package_health_state_chunks;
    bool m_deployed_service_package_health_state_chunks_isSet;
    bool m_deployed_service_package_health_state_chunks_isValid;

    QString m_node_name;
    bool m_node_name_isSet;
    bool m_node_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeployedApplicationHealthStateChunk)

#endif // OAIDeployedApplicationHealthStateChunk_H
