/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPagedSubNameInfoList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPagedSubNameInfoList::OAIPagedSubNameInfoList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPagedSubNameInfoList::OAIPagedSubNameInfoList() {
    this->initializeModel();
}

OAIPagedSubNameInfoList::~OAIPagedSubNameInfoList() {}

void OAIPagedSubNameInfoList::initializeModel() {

    m_continuation_token_isSet = false;
    m_continuation_token_isValid = false;

    m_is_consistent_isSet = false;
    m_is_consistent_isValid = false;

    m_sub_names_isSet = false;
    m_sub_names_isValid = false;
}

void OAIPagedSubNameInfoList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPagedSubNameInfoList::fromJsonObject(QJsonObject json) {

    m_continuation_token_isValid = ::OpenAPI::fromJsonValue(m_continuation_token, json[QString("ContinuationToken")]);
    m_continuation_token_isSet = !json[QString("ContinuationToken")].isNull() && m_continuation_token_isValid;

    m_is_consistent_isValid = ::OpenAPI::fromJsonValue(m_is_consistent, json[QString("IsConsistent")]);
    m_is_consistent_isSet = !json[QString("IsConsistent")].isNull() && m_is_consistent_isValid;

    m_sub_names_isValid = ::OpenAPI::fromJsonValue(m_sub_names, json[QString("SubNames")]);
    m_sub_names_isSet = !json[QString("SubNames")].isNull() && m_sub_names_isValid;
}

QString OAIPagedSubNameInfoList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPagedSubNameInfoList::asJsonObject() const {
    QJsonObject obj;
    if (m_continuation_token_isSet) {
        obj.insert(QString("ContinuationToken"), ::OpenAPI::toJsonValue(m_continuation_token));
    }
    if (m_is_consistent_isSet) {
        obj.insert(QString("IsConsistent"), ::OpenAPI::toJsonValue(m_is_consistent));
    }
    if (m_sub_names.size() > 0) {
        obj.insert(QString("SubNames"), ::OpenAPI::toJsonValue(m_sub_names));
    }
    return obj;
}

QString OAIPagedSubNameInfoList::getContinuationToken() const {
    return m_continuation_token;
}
void OAIPagedSubNameInfoList::setContinuationToken(const QString &continuation_token) {
    m_continuation_token = continuation_token;
    m_continuation_token_isSet = true;
}

bool OAIPagedSubNameInfoList::is_continuation_token_Set() const{
    return m_continuation_token_isSet;
}

bool OAIPagedSubNameInfoList::is_continuation_token_Valid() const{
    return m_continuation_token_isValid;
}

bool OAIPagedSubNameInfoList::isIsConsistent() const {
    return m_is_consistent;
}
void OAIPagedSubNameInfoList::setIsConsistent(const bool &is_consistent) {
    m_is_consistent = is_consistent;
    m_is_consistent_isSet = true;
}

bool OAIPagedSubNameInfoList::is_is_consistent_Set() const{
    return m_is_consistent_isSet;
}

bool OAIPagedSubNameInfoList::is_is_consistent_Valid() const{
    return m_is_consistent_isValid;
}

QList<QString> OAIPagedSubNameInfoList::getSubNames() const {
    return m_sub_names;
}
void OAIPagedSubNameInfoList::setSubNames(const QList<QString> &sub_names) {
    m_sub_names = sub_names;
    m_sub_names_isSet = true;
}

bool OAIPagedSubNameInfoList::is_sub_names_Set() const{
    return m_sub_names_isSet;
}

bool OAIPagedSubNameInfoList::is_sub_names_Valid() const{
    return m_sub_names_isValid;
}

bool OAIPagedSubNameInfoList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_continuation_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_consistent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPagedSubNameInfoList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
