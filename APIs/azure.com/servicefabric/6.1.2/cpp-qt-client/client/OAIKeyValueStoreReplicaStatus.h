/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeyValueStoreReplicaStatus.h
 *
 * Key value store related information for the replica.
 */

#ifndef OAIKeyValueStoreReplicaStatus_H
#define OAIKeyValueStoreReplicaStatus_H

#include <QJsonObject>

#include "OAIReplicaKind.h"
#include "OAIReplicaStatusBase.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKeyValueStoreReplicaStatus : public OAIObject {
public:
    OAIKeyValueStoreReplicaStatus();
    OAIKeyValueStoreReplicaStatus(QString json);
    ~OAIKeyValueStoreReplicaStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReplicaKind getKind() const;
    void setKind(const OAIReplicaKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getCopyNotificationCurrentKeyFilter() const;
    void setCopyNotificationCurrentKeyFilter(const QString &copy_notification_current_key_filter);
    bool is_copy_notification_current_key_filter_Set() const;
    bool is_copy_notification_current_key_filter_Valid() const;

    QString getCopyNotificationCurrentProgress() const;
    void setCopyNotificationCurrentProgress(const QString &copy_notification_current_progress);
    bool is_copy_notification_current_progress_Set() const;
    bool is_copy_notification_current_progress_Valid() const;

    QString getDatabaseLogicalSizeEstimate() const;
    void setDatabaseLogicalSizeEstimate(const QString &database_logical_size_estimate);
    bool is_database_logical_size_estimate_Set() const;
    bool is_database_logical_size_estimate_Valid() const;

    QString getDatabaseRowCountEstimate() const;
    void setDatabaseRowCountEstimate(const QString &database_row_count_estimate);
    bool is_database_row_count_estimate_Set() const;
    bool is_database_row_count_estimate_Valid() const;

    QString getStatusDetails() const;
    void setStatusDetails(const QString &status_details);
    bool is_status_details_Set() const;
    bool is_status_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReplicaKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_copy_notification_current_key_filter;
    bool m_copy_notification_current_key_filter_isSet;
    bool m_copy_notification_current_key_filter_isValid;

    QString m_copy_notification_current_progress;
    bool m_copy_notification_current_progress_isSet;
    bool m_copy_notification_current_progress_isValid;

    QString m_database_logical_size_estimate;
    bool m_database_logical_size_estimate_isSet;
    bool m_database_logical_size_estimate_isValid;

    QString m_database_row_count_estimate;
    bool m_database_row_count_estimate_isSet;
    bool m_database_row_count_estimate_isValid;

    QString m_status_details;
    bool m_status_details_isSet;
    bool m_status_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeyValueStoreReplicaStatus)

#endif // OAIKeyValueStoreReplicaStatus_H
