/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterConfigurationUpgradeDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterConfigurationUpgradeDescription::OAIClusterConfigurationUpgradeDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterConfigurationUpgradeDescription::OAIClusterConfigurationUpgradeDescription() {
    this->initializeModel();
}

OAIClusterConfigurationUpgradeDescription::~OAIClusterConfigurationUpgradeDescription() {}

void OAIClusterConfigurationUpgradeDescription::initializeModel() {

    m_cluster_config_isSet = false;
    m_cluster_config_isValid = false;

    m_health_check_retry_timeout_isSet = false;
    m_health_check_retry_timeout_isValid = false;

    m_health_check_stable_duration_in_seconds_isSet = false;
    m_health_check_stable_duration_in_seconds_isValid = false;

    m_health_check_wait_duration_in_seconds_isSet = false;
    m_health_check_wait_duration_in_seconds_isValid = false;

    m_max_percent_delta_unhealthy_nodes_isSet = false;
    m_max_percent_delta_unhealthy_nodes_isValid = false;

    m_max_percent_unhealthy_applications_isSet = false;
    m_max_percent_unhealthy_applications_isValid = false;

    m_max_percent_unhealthy_nodes_isSet = false;
    m_max_percent_unhealthy_nodes_isValid = false;

    m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet = false;
    m_max_percent_upgrade_domain_delta_unhealthy_nodes_isValid = false;

    m_upgrade_domain_timeout_in_seconds_isSet = false;
    m_upgrade_domain_timeout_in_seconds_isValid = false;

    m_upgrade_timeout_in_seconds_isSet = false;
    m_upgrade_timeout_in_seconds_isValid = false;
}

void OAIClusterConfigurationUpgradeDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterConfigurationUpgradeDescription::fromJsonObject(QJsonObject json) {

    m_cluster_config_isValid = ::OpenAPI::fromJsonValue(m_cluster_config, json[QString("ClusterConfig")]);
    m_cluster_config_isSet = !json[QString("ClusterConfig")].isNull() && m_cluster_config_isValid;

    m_health_check_retry_timeout_isValid = ::OpenAPI::fromJsonValue(m_health_check_retry_timeout, json[QString("HealthCheckRetryTimeout")]);
    m_health_check_retry_timeout_isSet = !json[QString("HealthCheckRetryTimeout")].isNull() && m_health_check_retry_timeout_isValid;

    m_health_check_stable_duration_in_seconds_isValid = ::OpenAPI::fromJsonValue(m_health_check_stable_duration_in_seconds, json[QString("HealthCheckStableDurationInSeconds")]);
    m_health_check_stable_duration_in_seconds_isSet = !json[QString("HealthCheckStableDurationInSeconds")].isNull() && m_health_check_stable_duration_in_seconds_isValid;

    m_health_check_wait_duration_in_seconds_isValid = ::OpenAPI::fromJsonValue(m_health_check_wait_duration_in_seconds, json[QString("HealthCheckWaitDurationInSeconds")]);
    m_health_check_wait_duration_in_seconds_isSet = !json[QString("HealthCheckWaitDurationInSeconds")].isNull() && m_health_check_wait_duration_in_seconds_isValid;

    m_max_percent_delta_unhealthy_nodes_isValid = ::OpenAPI::fromJsonValue(m_max_percent_delta_unhealthy_nodes, json[QString("MaxPercentDeltaUnhealthyNodes")]);
    m_max_percent_delta_unhealthy_nodes_isSet = !json[QString("MaxPercentDeltaUnhealthyNodes")].isNull() && m_max_percent_delta_unhealthy_nodes_isValid;

    m_max_percent_unhealthy_applications_isValid = ::OpenAPI::fromJsonValue(m_max_percent_unhealthy_applications, json[QString("MaxPercentUnhealthyApplications")]);
    m_max_percent_unhealthy_applications_isSet = !json[QString("MaxPercentUnhealthyApplications")].isNull() && m_max_percent_unhealthy_applications_isValid;

    m_max_percent_unhealthy_nodes_isValid = ::OpenAPI::fromJsonValue(m_max_percent_unhealthy_nodes, json[QString("MaxPercentUnhealthyNodes")]);
    m_max_percent_unhealthy_nodes_isSet = !json[QString("MaxPercentUnhealthyNodes")].isNull() && m_max_percent_unhealthy_nodes_isValid;

    m_max_percent_upgrade_domain_delta_unhealthy_nodes_isValid = ::OpenAPI::fromJsonValue(m_max_percent_upgrade_domain_delta_unhealthy_nodes, json[QString("MaxPercentUpgradeDomainDeltaUnhealthyNodes")]);
    m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet = !json[QString("MaxPercentUpgradeDomainDeltaUnhealthyNodes")].isNull() && m_max_percent_upgrade_domain_delta_unhealthy_nodes_isValid;

    m_upgrade_domain_timeout_in_seconds_isValid = ::OpenAPI::fromJsonValue(m_upgrade_domain_timeout_in_seconds, json[QString("UpgradeDomainTimeoutInSeconds")]);
    m_upgrade_domain_timeout_in_seconds_isSet = !json[QString("UpgradeDomainTimeoutInSeconds")].isNull() && m_upgrade_domain_timeout_in_seconds_isValid;

    m_upgrade_timeout_in_seconds_isValid = ::OpenAPI::fromJsonValue(m_upgrade_timeout_in_seconds, json[QString("UpgradeTimeoutInSeconds")]);
    m_upgrade_timeout_in_seconds_isSet = !json[QString("UpgradeTimeoutInSeconds")].isNull() && m_upgrade_timeout_in_seconds_isValid;
}

QString OAIClusterConfigurationUpgradeDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterConfigurationUpgradeDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_cluster_config_isSet) {
        obj.insert(QString("ClusterConfig"), ::OpenAPI::toJsonValue(m_cluster_config));
    }
    if (m_health_check_retry_timeout_isSet) {
        obj.insert(QString("HealthCheckRetryTimeout"), ::OpenAPI::toJsonValue(m_health_check_retry_timeout));
    }
    if (m_health_check_stable_duration_in_seconds_isSet) {
        obj.insert(QString("HealthCheckStableDurationInSeconds"), ::OpenAPI::toJsonValue(m_health_check_stable_duration_in_seconds));
    }
    if (m_health_check_wait_duration_in_seconds_isSet) {
        obj.insert(QString("HealthCheckWaitDurationInSeconds"), ::OpenAPI::toJsonValue(m_health_check_wait_duration_in_seconds));
    }
    if (m_max_percent_delta_unhealthy_nodes_isSet) {
        obj.insert(QString("MaxPercentDeltaUnhealthyNodes"), ::OpenAPI::toJsonValue(m_max_percent_delta_unhealthy_nodes));
    }
    if (m_max_percent_unhealthy_applications_isSet) {
        obj.insert(QString("MaxPercentUnhealthyApplications"), ::OpenAPI::toJsonValue(m_max_percent_unhealthy_applications));
    }
    if (m_max_percent_unhealthy_nodes_isSet) {
        obj.insert(QString("MaxPercentUnhealthyNodes"), ::OpenAPI::toJsonValue(m_max_percent_unhealthy_nodes));
    }
    if (m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet) {
        obj.insert(QString("MaxPercentUpgradeDomainDeltaUnhealthyNodes"), ::OpenAPI::toJsonValue(m_max_percent_upgrade_domain_delta_unhealthy_nodes));
    }
    if (m_upgrade_domain_timeout_in_seconds_isSet) {
        obj.insert(QString("UpgradeDomainTimeoutInSeconds"), ::OpenAPI::toJsonValue(m_upgrade_domain_timeout_in_seconds));
    }
    if (m_upgrade_timeout_in_seconds_isSet) {
        obj.insert(QString("UpgradeTimeoutInSeconds"), ::OpenAPI::toJsonValue(m_upgrade_timeout_in_seconds));
    }
    return obj;
}

QString OAIClusterConfigurationUpgradeDescription::getClusterConfig() const {
    return m_cluster_config;
}
void OAIClusterConfigurationUpgradeDescription::setClusterConfig(const QString &cluster_config) {
    m_cluster_config = cluster_config;
    m_cluster_config_isSet = true;
}

bool OAIClusterConfigurationUpgradeDescription::is_cluster_config_Set() const{
    return m_cluster_config_isSet;
}

bool OAIClusterConfigurationUpgradeDescription::is_cluster_config_Valid() const{
    return m_cluster_config_isValid;
}

QString OAIClusterConfigurationUpgradeDescription::getHealthCheckRetryTimeout() const {
    return m_health_check_retry_timeout;
}
void OAIClusterConfigurationUpgradeDescription::setHealthCheckRetryTimeout(const QString &health_check_retry_timeout) {
    m_health_check_retry_timeout = health_check_retry_timeout;
    m_health_check_retry_timeout_isSet = true;
}

bool OAIClusterConfigurationUpgradeDescription::is_health_check_retry_timeout_Set() const{
    return m_health_check_retry_timeout_isSet;
}

bool OAIClusterConfigurationUpgradeDescription::is_health_check_retry_timeout_Valid() const{
    return m_health_check_retry_timeout_isValid;
}

QString OAIClusterConfigurationUpgradeDescription::getHealthCheckStableDurationInSeconds() const {
    return m_health_check_stable_duration_in_seconds;
}
void OAIClusterConfigurationUpgradeDescription::setHealthCheckStableDurationInSeconds(const QString &health_check_stable_duration_in_seconds) {
    m_health_check_stable_duration_in_seconds = health_check_stable_duration_in_seconds;
    m_health_check_stable_duration_in_seconds_isSet = true;
}

bool OAIClusterConfigurationUpgradeDescription::is_health_check_stable_duration_in_seconds_Set() const{
    return m_health_check_stable_duration_in_seconds_isSet;
}

bool OAIClusterConfigurationUpgradeDescription::is_health_check_stable_duration_in_seconds_Valid() const{
    return m_health_check_stable_duration_in_seconds_isValid;
}

QString OAIClusterConfigurationUpgradeDescription::getHealthCheckWaitDurationInSeconds() const {
    return m_health_check_wait_duration_in_seconds;
}
void OAIClusterConfigurationUpgradeDescription::setHealthCheckWaitDurationInSeconds(const QString &health_check_wait_duration_in_seconds) {
    m_health_check_wait_duration_in_seconds = health_check_wait_duration_in_seconds;
    m_health_check_wait_duration_in_seconds_isSet = true;
}

bool OAIClusterConfigurationUpgradeDescription::is_health_check_wait_duration_in_seconds_Set() const{
    return m_health_check_wait_duration_in_seconds_isSet;
}

bool OAIClusterConfigurationUpgradeDescription::is_health_check_wait_duration_in_seconds_Valid() const{
    return m_health_check_wait_duration_in_seconds_isValid;
}

qint32 OAIClusterConfigurationUpgradeDescription::getMaxPercentDeltaUnhealthyNodes() const {
    return m_max_percent_delta_unhealthy_nodes;
}
void OAIClusterConfigurationUpgradeDescription::setMaxPercentDeltaUnhealthyNodes(const qint32 &max_percent_delta_unhealthy_nodes) {
    m_max_percent_delta_unhealthy_nodes = max_percent_delta_unhealthy_nodes;
    m_max_percent_delta_unhealthy_nodes_isSet = true;
}

bool OAIClusterConfigurationUpgradeDescription::is_max_percent_delta_unhealthy_nodes_Set() const{
    return m_max_percent_delta_unhealthy_nodes_isSet;
}

bool OAIClusterConfigurationUpgradeDescription::is_max_percent_delta_unhealthy_nodes_Valid() const{
    return m_max_percent_delta_unhealthy_nodes_isValid;
}

qint32 OAIClusterConfigurationUpgradeDescription::getMaxPercentUnhealthyApplications() const {
    return m_max_percent_unhealthy_applications;
}
void OAIClusterConfigurationUpgradeDescription::setMaxPercentUnhealthyApplications(const qint32 &max_percent_unhealthy_applications) {
    m_max_percent_unhealthy_applications = max_percent_unhealthy_applications;
    m_max_percent_unhealthy_applications_isSet = true;
}

bool OAIClusterConfigurationUpgradeDescription::is_max_percent_unhealthy_applications_Set() const{
    return m_max_percent_unhealthy_applications_isSet;
}

bool OAIClusterConfigurationUpgradeDescription::is_max_percent_unhealthy_applications_Valid() const{
    return m_max_percent_unhealthy_applications_isValid;
}

qint32 OAIClusterConfigurationUpgradeDescription::getMaxPercentUnhealthyNodes() const {
    return m_max_percent_unhealthy_nodes;
}
void OAIClusterConfigurationUpgradeDescription::setMaxPercentUnhealthyNodes(const qint32 &max_percent_unhealthy_nodes) {
    m_max_percent_unhealthy_nodes = max_percent_unhealthy_nodes;
    m_max_percent_unhealthy_nodes_isSet = true;
}

bool OAIClusterConfigurationUpgradeDescription::is_max_percent_unhealthy_nodes_Set() const{
    return m_max_percent_unhealthy_nodes_isSet;
}

bool OAIClusterConfigurationUpgradeDescription::is_max_percent_unhealthy_nodes_Valid() const{
    return m_max_percent_unhealthy_nodes_isValid;
}

qint32 OAIClusterConfigurationUpgradeDescription::getMaxPercentUpgradeDomainDeltaUnhealthyNodes() const {
    return m_max_percent_upgrade_domain_delta_unhealthy_nodes;
}
void OAIClusterConfigurationUpgradeDescription::setMaxPercentUpgradeDomainDeltaUnhealthyNodes(const qint32 &max_percent_upgrade_domain_delta_unhealthy_nodes) {
    m_max_percent_upgrade_domain_delta_unhealthy_nodes = max_percent_upgrade_domain_delta_unhealthy_nodes;
    m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet = true;
}

bool OAIClusterConfigurationUpgradeDescription::is_max_percent_upgrade_domain_delta_unhealthy_nodes_Set() const{
    return m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet;
}

bool OAIClusterConfigurationUpgradeDescription::is_max_percent_upgrade_domain_delta_unhealthy_nodes_Valid() const{
    return m_max_percent_upgrade_domain_delta_unhealthy_nodes_isValid;
}

QString OAIClusterConfigurationUpgradeDescription::getUpgradeDomainTimeoutInSeconds() const {
    return m_upgrade_domain_timeout_in_seconds;
}
void OAIClusterConfigurationUpgradeDescription::setUpgradeDomainTimeoutInSeconds(const QString &upgrade_domain_timeout_in_seconds) {
    m_upgrade_domain_timeout_in_seconds = upgrade_domain_timeout_in_seconds;
    m_upgrade_domain_timeout_in_seconds_isSet = true;
}

bool OAIClusterConfigurationUpgradeDescription::is_upgrade_domain_timeout_in_seconds_Set() const{
    return m_upgrade_domain_timeout_in_seconds_isSet;
}

bool OAIClusterConfigurationUpgradeDescription::is_upgrade_domain_timeout_in_seconds_Valid() const{
    return m_upgrade_domain_timeout_in_seconds_isValid;
}

QString OAIClusterConfigurationUpgradeDescription::getUpgradeTimeoutInSeconds() const {
    return m_upgrade_timeout_in_seconds;
}
void OAIClusterConfigurationUpgradeDescription::setUpgradeTimeoutInSeconds(const QString &upgrade_timeout_in_seconds) {
    m_upgrade_timeout_in_seconds = upgrade_timeout_in_seconds;
    m_upgrade_timeout_in_seconds_isSet = true;
}

bool OAIClusterConfigurationUpgradeDescription::is_upgrade_timeout_in_seconds_Set() const{
    return m_upgrade_timeout_in_seconds_isSet;
}

bool OAIClusterConfigurationUpgradeDescription::is_upgrade_timeout_in_seconds_Valid() const{
    return m_upgrade_timeout_in_seconds_isValid;
}

bool OAIClusterConfigurationUpgradeDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cluster_config_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_check_retry_timeout_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_check_stable_duration_in_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_check_wait_duration_in_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_percent_delta_unhealthy_nodes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_percent_unhealthy_applications_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_percent_unhealthy_nodes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upgrade_domain_timeout_in_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upgrade_timeout_in_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterConfigurationUpgradeDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_cluster_config_isValid && true;
}

} // namespace OpenAPI
