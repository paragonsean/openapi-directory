/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationHealthPolicies.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationHealthPolicies::OAIApplicationHealthPolicies(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationHealthPolicies::OAIApplicationHealthPolicies() {
    this->initializeModel();
}

OAIApplicationHealthPolicies::~OAIApplicationHealthPolicies() {}

void OAIApplicationHealthPolicies::initializeModel() {

    m_application_health_policy_map_isSet = false;
    m_application_health_policy_map_isValid = false;
}

void OAIApplicationHealthPolicies::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationHealthPolicies::fromJsonObject(QJsonObject json) {

    m_application_health_policy_map_isValid = ::OpenAPI::fromJsonValue(m_application_health_policy_map, json[QString("ApplicationHealthPolicyMap")]);
    m_application_health_policy_map_isSet = !json[QString("ApplicationHealthPolicyMap")].isNull() && m_application_health_policy_map_isValid;
}

QString OAIApplicationHealthPolicies::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationHealthPolicies::asJsonObject() const {
    QJsonObject obj;
    if (m_application_health_policy_map.size() > 0) {
        obj.insert(QString("ApplicationHealthPolicyMap"), ::OpenAPI::toJsonValue(m_application_health_policy_map));
    }
    return obj;
}

QList<OAIApplicationHealthPolicyMapItem> OAIApplicationHealthPolicies::getApplicationHealthPolicyMap() const {
    return m_application_health_policy_map;
}
void OAIApplicationHealthPolicies::setApplicationHealthPolicyMap(const QList<OAIApplicationHealthPolicyMapItem> &application_health_policy_map) {
    m_application_health_policy_map = application_health_policy_map;
    m_application_health_policy_map_isSet = true;
}

bool OAIApplicationHealthPolicies::is_application_health_policy_map_Set() const{
    return m_application_health_policy_map_isSet;
}

bool OAIApplicationHealthPolicies::is_application_health_policy_map_Valid() const{
    return m_application_health_policy_map_isValid;
}

bool OAIApplicationHealthPolicies::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_health_policy_map.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationHealthPolicies::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
