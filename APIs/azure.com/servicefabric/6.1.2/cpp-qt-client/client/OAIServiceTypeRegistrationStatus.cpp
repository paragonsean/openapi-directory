/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceTypeRegistrationStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceTypeRegistrationStatus::OAIServiceTypeRegistrationStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceTypeRegistrationStatus::OAIServiceTypeRegistrationStatus() {
    this->initializeModel();
}

OAIServiceTypeRegistrationStatus::~OAIServiceTypeRegistrationStatus() {}

void OAIServiceTypeRegistrationStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIServiceTypeRegistrationStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIServiceTypeRegistrationStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Invalid", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceTypeRegistrationStatus::INVALID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Disabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceTypeRegistrationStatus::DISABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Enabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceTypeRegistrationStatus::ENABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Registered", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceTypeRegistrationStatus::REGISTERED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIServiceTypeRegistrationStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIServiceTypeRegistrationStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIServiceTypeRegistrationStatus::INVALID:
            val = "Invalid";
            break;
        case eOAIServiceTypeRegistrationStatus::DISABLED:
            val = "Disabled";
            break;
        case eOAIServiceTypeRegistrationStatus::ENABLED:
            val = "Enabled";
            break;
        case eOAIServiceTypeRegistrationStatus::REGISTERED:
            val = "Registered";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIServiceTypeRegistrationStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIServiceTypeRegistrationStatus::eOAIServiceTypeRegistrationStatus OAIServiceTypeRegistrationStatus::getValue() const {
    return m_value;
}

void OAIServiceTypeRegistrationStatus::setValue(const OAIServiceTypeRegistrationStatus::eOAIServiceTypeRegistrationStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIServiceTypeRegistrationStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIServiceTypeRegistrationStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
