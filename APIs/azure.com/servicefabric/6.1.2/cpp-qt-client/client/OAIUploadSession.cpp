/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUploadSession.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUploadSession::OAIUploadSession(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUploadSession::OAIUploadSession() {
    this->initializeModel();
}

OAIUploadSession::~OAIUploadSession() {}

void OAIUploadSession::initializeModel() {

    m_upload_sessions_isSet = false;
    m_upload_sessions_isValid = false;
}

void OAIUploadSession::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUploadSession::fromJsonObject(QJsonObject json) {

    m_upload_sessions_isValid = ::OpenAPI::fromJsonValue(m_upload_sessions, json[QString("UploadSessions")]);
    m_upload_sessions_isSet = !json[QString("UploadSessions")].isNull() && m_upload_sessions_isValid;
}

QString OAIUploadSession::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUploadSession::asJsonObject() const {
    QJsonObject obj;
    if (m_upload_sessions.size() > 0) {
        obj.insert(QString("UploadSessions"), ::OpenAPI::toJsonValue(m_upload_sessions));
    }
    return obj;
}

QList<OAIUploadSessionInfo> OAIUploadSession::getUploadSessions() const {
    return m_upload_sessions;
}
void OAIUploadSession::setUploadSessions(const QList<OAIUploadSessionInfo> &upload_sessions) {
    m_upload_sessions = upload_sessions;
    m_upload_sessions_isSet = true;
}

bool OAIUploadSession::is_upload_sessions_Set() const{
    return m_upload_sessions_isSet;
}

bool OAIUploadSession::is_upload_sessions_Valid() const{
    return m_upload_sessions_isValid;
}

bool OAIUploadSession::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_upload_sessions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUploadSession::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
