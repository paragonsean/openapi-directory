/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterHealth.h
 *
 * Represents the health of the cluster. Contains the cluster aggregated health state, the cluster application and node health states as well as the health events and the unhealthy evaluations. 
 */

#ifndef OAIClusterHealth_H
#define OAIClusterHealth_H

#include <QJsonObject>

#include "OAIApplicationHealthState.h"
#include "OAIHealthEvaluationWrapper.h"
#include "OAIHealthEvent.h"
#include "OAIHealthState.h"
#include "OAIHealthStatistics.h"
#include "OAINodeHealthState.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHealthEvent;
class OAIHealthStatistics;
class OAIHealthEvaluationWrapper;
class OAIApplicationHealthState;
class OAINodeHealthState;

class OAIClusterHealth : public OAIObject {
public:
    OAIClusterHealth();
    OAIClusterHealth(QString json);
    ~OAIClusterHealth() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHealthState getAggregatedHealthState() const;
    void setAggregatedHealthState(const OAIHealthState &aggregated_health_state);
    bool is_aggregated_health_state_Set() const;
    bool is_aggregated_health_state_Valid() const;

    QList<OAIHealthEvent> getHealthEvents() const;
    void setHealthEvents(const QList<OAIHealthEvent> &health_events);
    bool is_health_events_Set() const;
    bool is_health_events_Valid() const;

    OAIHealthStatistics getHealthStatistics() const;
    void setHealthStatistics(const OAIHealthStatistics &health_statistics);
    bool is_health_statistics_Set() const;
    bool is_health_statistics_Valid() const;

    QList<OAIHealthEvaluationWrapper> getUnhealthyEvaluations() const;
    void setUnhealthyEvaluations(const QList<OAIHealthEvaluationWrapper> &unhealthy_evaluations);
    bool is_unhealthy_evaluations_Set() const;
    bool is_unhealthy_evaluations_Valid() const;

    QList<OAIApplicationHealthState> getApplicationHealthStates() const;
    void setApplicationHealthStates(const QList<OAIApplicationHealthState> &application_health_states);
    bool is_application_health_states_Set() const;
    bool is_application_health_states_Valid() const;

    QList<OAINodeHealthState> getNodeHealthStates() const;
    void setNodeHealthStates(const QList<OAINodeHealthState> &node_health_states);
    bool is_node_health_states_Set() const;
    bool is_node_health_states_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHealthState m_aggregated_health_state;
    bool m_aggregated_health_state_isSet;
    bool m_aggregated_health_state_isValid;

    QList<OAIHealthEvent> m_health_events;
    bool m_health_events_isSet;
    bool m_health_events_isValid;

    OAIHealthStatistics m_health_statistics;
    bool m_health_statistics_isSet;
    bool m_health_statistics_isValid;

    QList<OAIHealthEvaluationWrapper> m_unhealthy_evaluations;
    bool m_unhealthy_evaluations_isSet;
    bool m_unhealthy_evaluations_isValid;

    QList<OAIApplicationHealthState> m_application_health_states;
    bool m_application_health_states_isSet;
    bool m_application_health_states_isValid;

    QList<OAINodeHealthState> m_node_health_states;
    bool m_node_health_states_isSet;
    bool m_node_health_states_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterHealth)

#endif // OAIClusterHealth_H
