/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRepairTask.h
 *
 * Represents a repair task, which includes information about what kind of repair was requested, what its progress is, and what its final result was.  This type supports the Service Fabric platform; it is not meant to be used directly from your code. 
 */

#ifndef OAIRepairTask_H
#define OAIRepairTask_H

#include <QJsonObject>

#include "OAIRepairImpactDescriptionBase.h"
#include "OAIRepairTargetDescriptionBase.h"
#include "OAIRepairTaskHealthCheckState.h"
#include "OAIRepairTaskHistory.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRepairTaskHistory;
class OAIRepairImpactDescriptionBase;
class OAIRepairTargetDescriptionBase;

class OAIRepairTask : public OAIObject {
public:
    OAIRepairTask();
    OAIRepairTask(QString json);
    ~OAIRepairTask() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getExecutor() const;
    void setExecutor(const QString &executor);
    bool is_executor_Set() const;
    bool is_executor_Valid() const;

    QString getExecutorData() const;
    void setExecutorData(const QString &executor_data);
    bool is_executor_data_Set() const;
    bool is_executor_data_Valid() const;

    qint32 getFlags() const;
    void setFlags(const qint32 &flags);
    bool is_flags_Set() const;
    bool is_flags_Valid() const;

    OAIRepairTaskHistory getHistory() const;
    void setHistory(const OAIRepairTaskHistory &history);
    bool is_history_Set() const;
    bool is_history_Valid() const;

    OAIRepairImpactDescriptionBase getImpact() const;
    void setImpact(const OAIRepairImpactDescriptionBase &impact);
    bool is_impact_Set() const;
    bool is_impact_Valid() const;

    bool isPerformPreparingHealthCheck() const;
    void setPerformPreparingHealthCheck(const bool &perform_preparing_health_check);
    bool is_perform_preparing_health_check_Set() const;
    bool is_perform_preparing_health_check_Valid() const;

    bool isPerformRestoringHealthCheck() const;
    void setPerformRestoringHealthCheck(const bool &perform_restoring_health_check);
    bool is_perform_restoring_health_check_Set() const;
    bool is_perform_restoring_health_check_Valid() const;

    OAIRepairTaskHealthCheckState getPreparingHealthCheckState() const;
    void setPreparingHealthCheckState(const OAIRepairTaskHealthCheckState &preparing_health_check_state);
    bool is_preparing_health_check_state_Set() const;
    bool is_preparing_health_check_state_Valid() const;

    OAIRepairTaskHealthCheckState getRestoringHealthCheckState() const;
    void setRestoringHealthCheckState(const OAIRepairTaskHealthCheckState &restoring_health_check_state);
    bool is_restoring_health_check_state_Set() const;
    bool is_restoring_health_check_state_Valid() const;

    qint32 getResultCode() const;
    void setResultCode(const qint32 &result_code);
    bool is_result_code_Set() const;
    bool is_result_code_Valid() const;

    QString getResultDetails() const;
    void setResultDetails(const QString &result_details);
    bool is_result_details_Set() const;
    bool is_result_details_Valid() const;

    QString getResultStatus() const;
    void setResultStatus(const QString &result_status);
    bool is_result_status_Set() const;
    bool is_result_status_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIRepairTargetDescriptionBase getTarget() const;
    void setTarget(const OAIRepairTargetDescriptionBase &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    QString getTaskId() const;
    void setTaskId(const QString &task_id);
    bool is_task_id_Set() const;
    bool is_task_id_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_executor;
    bool m_executor_isSet;
    bool m_executor_isValid;

    QString m_executor_data;
    bool m_executor_data_isSet;
    bool m_executor_data_isValid;

    qint32 m_flags;
    bool m_flags_isSet;
    bool m_flags_isValid;

    OAIRepairTaskHistory m_history;
    bool m_history_isSet;
    bool m_history_isValid;

    OAIRepairImpactDescriptionBase m_impact;
    bool m_impact_isSet;
    bool m_impact_isValid;

    bool m_perform_preparing_health_check;
    bool m_perform_preparing_health_check_isSet;
    bool m_perform_preparing_health_check_isValid;

    bool m_perform_restoring_health_check;
    bool m_perform_restoring_health_check_isSet;
    bool m_perform_restoring_health_check_isValid;

    OAIRepairTaskHealthCheckState m_preparing_health_check_state;
    bool m_preparing_health_check_state_isSet;
    bool m_preparing_health_check_state_isValid;

    OAIRepairTaskHealthCheckState m_restoring_health_check_state;
    bool m_restoring_health_check_state_isSet;
    bool m_restoring_health_check_state_isValid;

    qint32 m_result_code;
    bool m_result_code_isSet;
    bool m_result_code_isValid;

    QString m_result_details;
    bool m_result_details_isSet;
    bool m_result_details_isValid;

    QString m_result_status;
    bool m_result_status_isSet;
    bool m_result_status_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIRepairTargetDescriptionBase m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    QString m_task_id;
    bool m_task_id_isSet;
    bool m_task_id_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRepairTask)

#endif // OAIRepairTask_H
