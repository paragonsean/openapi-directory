/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationHealthPolicies from './ApplicationHealthPolicies';
import ClusterHealthPolicy from './ClusterHealthPolicy';
import ClusterUpgradeHealthPolicyObject from './ClusterUpgradeHealthPolicyObject';
import RollingUpgradeUpdateDescription from './RollingUpgradeUpdateDescription';
import UpgradeType from './UpgradeType';

/**
 * The UpdateClusterUpgradeDescription model module.
 * @module model/UpdateClusterUpgradeDescription
 * @version 6.1.2
 */
class UpdateClusterUpgradeDescription {
    /**
     * Constructs a new <code>UpdateClusterUpgradeDescription</code>.
     * Parameters for updating a cluster upgrade.
     * @alias module:model/UpdateClusterUpgradeDescription
     */
    constructor() { 
        
        UpdateClusterUpgradeDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateClusterUpgradeDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateClusterUpgradeDescription} obj Optional instance to populate.
     * @return {module:model/UpdateClusterUpgradeDescription} The populated <code>UpdateClusterUpgradeDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateClusterUpgradeDescription();

            if (data.hasOwnProperty('ApplicationHealthPolicyMap')) {
                obj['ApplicationHealthPolicyMap'] = ApplicationHealthPolicies.constructFromObject(data['ApplicationHealthPolicyMap']);
            }
            if (data.hasOwnProperty('ClusterHealthPolicy')) {
                obj['ClusterHealthPolicy'] = ClusterHealthPolicy.constructFromObject(data['ClusterHealthPolicy']);
            }
            if (data.hasOwnProperty('ClusterUpgradeHealthPolicy')) {
                obj['ClusterUpgradeHealthPolicy'] = ClusterUpgradeHealthPolicyObject.constructFromObject(data['ClusterUpgradeHealthPolicy']);
            }
            if (data.hasOwnProperty('EnableDeltaHealthEvaluation')) {
                obj['EnableDeltaHealthEvaluation'] = ApiClient.convertToType(data['EnableDeltaHealthEvaluation'], 'Boolean');
            }
            if (data.hasOwnProperty('UpdateDescription')) {
                obj['UpdateDescription'] = RollingUpgradeUpdateDescription.constructFromObject(data['UpdateDescription']);
            }
            if (data.hasOwnProperty('UpgradeKind')) {
                obj['UpgradeKind'] = UpgradeType.constructFromObject(data['UpgradeKind']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateClusterUpgradeDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateClusterUpgradeDescription</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ApplicationHealthPolicyMap`
        if (data['ApplicationHealthPolicyMap']) { // data not null
          ApplicationHealthPolicies.validateJSON(data['ApplicationHealthPolicyMap']);
        }
        // validate the optional field `ClusterHealthPolicy`
        if (data['ClusterHealthPolicy']) { // data not null
          ClusterHealthPolicy.validateJSON(data['ClusterHealthPolicy']);
        }
        // validate the optional field `ClusterUpgradeHealthPolicy`
        if (data['ClusterUpgradeHealthPolicy']) { // data not null
          ClusterUpgradeHealthPolicyObject.validateJSON(data['ClusterUpgradeHealthPolicy']);
        }
        // validate the optional field `UpdateDescription`
        if (data['UpdateDescription']) { // data not null
          RollingUpgradeUpdateDescription.validateJSON(data['UpdateDescription']);
        }

        return true;
    }


}



/**
 * @member {module:model/ApplicationHealthPolicies} ApplicationHealthPolicyMap
 */
UpdateClusterUpgradeDescription.prototype['ApplicationHealthPolicyMap'] = undefined;

/**
 * @member {module:model/ClusterHealthPolicy} ClusterHealthPolicy
 */
UpdateClusterUpgradeDescription.prototype['ClusterHealthPolicy'] = undefined;

/**
 * @member {module:model/ClusterUpgradeHealthPolicyObject} ClusterUpgradeHealthPolicy
 */
UpdateClusterUpgradeDescription.prototype['ClusterUpgradeHealthPolicy'] = undefined;

/**
 * When true, enables delta health evaluation rather than absolute health evaluation after completion of each upgrade domain.
 * @member {Boolean} EnableDeltaHealthEvaluation
 */
UpdateClusterUpgradeDescription.prototype['EnableDeltaHealthEvaluation'] = undefined;

/**
 * @member {module:model/RollingUpgradeUpdateDescription} UpdateDescription
 */
UpdateClusterUpgradeDescription.prototype['UpdateDescription'] = undefined;

/**
 * @member {module:model/UpgradeType} UpgradeKind
 */
UpdateClusterUpgradeDescription.prototype['UpgradeKind'] = undefined;






export default UpdateClusterUpgradeDescription;

