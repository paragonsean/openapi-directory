/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NodeLoadMetricInformation from './NodeLoadMetricInformation';

/**
 * The NodeLoadInfo model module.
 * @module model/NodeLoadInfo
 * @version 6.1.2
 */
class NodeLoadInfo {
    /**
     * Constructs a new <code>NodeLoadInfo</code>.
     * Information about load on a Service Fabric node. It holds a summary of all metrics and their load on a node.
     * @alias module:model/NodeLoadInfo
     */
    constructor() { 
        
        NodeLoadInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NodeLoadInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeLoadInfo} obj Optional instance to populate.
     * @return {module:model/NodeLoadInfo} The populated <code>NodeLoadInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeLoadInfo();

            if (data.hasOwnProperty('NodeLoadMetricInformation')) {
                obj['NodeLoadMetricInformation'] = ApiClient.convertToType(data['NodeLoadMetricInformation'], [NodeLoadMetricInformation]);
            }
            if (data.hasOwnProperty('NodeName')) {
                obj['NodeName'] = ApiClient.convertToType(data['NodeName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodeLoadInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodeLoadInfo</code>.
     */
    static validateJSON(data) {
        if (data['NodeLoadMetricInformation']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['NodeLoadMetricInformation'])) {
                throw new Error("Expected the field `NodeLoadMetricInformation` to be an array in the JSON data but got " + data['NodeLoadMetricInformation']);
            }
            // validate the optional field `NodeLoadMetricInformation` (array)
            for (const item of data['NodeLoadMetricInformation']) {
                NodeLoadMetricInformation.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['NodeName'] && !(typeof data['NodeName'] === 'string' || data['NodeName'] instanceof String)) {
            throw new Error("Expected the field `NodeName` to be a primitive type in the JSON string but got " + data['NodeName']);
        }

        return true;
    }


}



/**
 * List that contains metrics and their load information on this node.
 * @member {Array.<module:model/NodeLoadMetricInformation>} NodeLoadMetricInformation
 */
NodeLoadInfo.prototype['NodeLoadMetricInformation'] = undefined;

/**
 * The name of a Service Fabric node.
 * @member {String} NodeName
 */
NodeLoadInfo.prototype['NodeName'] = undefined;






export default NodeLoadInfo;

