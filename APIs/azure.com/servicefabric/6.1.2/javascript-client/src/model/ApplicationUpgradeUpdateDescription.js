/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationHealthPolicy from './ApplicationHealthPolicy';
import RollingUpgradeUpdateDescription from './RollingUpgradeUpdateDescription';
import UpgradeKind from './UpgradeKind';

/**
 * The ApplicationUpgradeUpdateDescription model module.
 * @module model/ApplicationUpgradeUpdateDescription
 * @version 6.1.2
 */
class ApplicationUpgradeUpdateDescription {
    /**
     * Constructs a new <code>ApplicationUpgradeUpdateDescription</code>.
     * Describes the parameters for updating an ongoing application upgrade.
     * @alias module:model/ApplicationUpgradeUpdateDescription
     * @param name {String} The name of the application, including the 'fabric:' URI scheme.
     * @param upgradeKind {module:model/UpgradeKind} 
     */
    constructor(name, upgradeKind) { 
        
        ApplicationUpgradeUpdateDescription.initialize(this, name, upgradeKind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, upgradeKind) { 
        obj['Name'] = name;
        obj['UpgradeKind'] = upgradeKind;
    }

    /**
     * Constructs a <code>ApplicationUpgradeUpdateDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationUpgradeUpdateDescription} obj Optional instance to populate.
     * @return {module:model/ApplicationUpgradeUpdateDescription} The populated <code>ApplicationUpgradeUpdateDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationUpgradeUpdateDescription();

            if (data.hasOwnProperty('ApplicationHealthPolicy')) {
                obj['ApplicationHealthPolicy'] = ApplicationHealthPolicy.constructFromObject(data['ApplicationHealthPolicy']);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('UpdateDescription')) {
                obj['UpdateDescription'] = RollingUpgradeUpdateDescription.constructFromObject(data['UpdateDescription']);
            }
            if (data.hasOwnProperty('UpgradeKind')) {
                obj['UpgradeKind'] = UpgradeKind.constructFromObject(data['UpgradeKind']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationUpgradeUpdateDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationUpgradeUpdateDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApplicationUpgradeUpdateDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ApplicationHealthPolicy`
        if (data['ApplicationHealthPolicy']) { // data not null
          ApplicationHealthPolicy.validateJSON(data['ApplicationHealthPolicy']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // validate the optional field `UpdateDescription`
        if (data['UpdateDescription']) { // data not null
          RollingUpgradeUpdateDescription.validateJSON(data['UpdateDescription']);
        }

        return true;
    }


}

ApplicationUpgradeUpdateDescription.RequiredProperties = ["Name", "UpgradeKind"];

/**
 * @member {module:model/ApplicationHealthPolicy} ApplicationHealthPolicy
 */
ApplicationUpgradeUpdateDescription.prototype['ApplicationHealthPolicy'] = undefined;

/**
 * The name of the application, including the 'fabric:' URI scheme.
 * @member {String} Name
 */
ApplicationUpgradeUpdateDescription.prototype['Name'] = undefined;

/**
 * @member {module:model/RollingUpgradeUpdateDescription} UpdateDescription
 */
ApplicationUpgradeUpdateDescription.prototype['UpdateDescription'] = undefined;

/**
 * @member {module:model/UpgradeKind} UpgradeKind
 */
ApplicationUpgradeUpdateDescription.prototype['UpgradeKind'] = undefined;






export default ApplicationUpgradeUpdateDescription;

