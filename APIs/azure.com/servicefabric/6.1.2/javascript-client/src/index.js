/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AadMetadata from './model/AadMetadata';
import AadMetadataObject from './model/AadMetadataObject';
import ApplicationCapacityDescription from './model/ApplicationCapacityDescription';
import ApplicationDefinitionKind from './model/ApplicationDefinitionKind';
import ApplicationDescription from './model/ApplicationDescription';
import ApplicationHealth from './model/ApplicationHealth';
import ApplicationHealthEvaluation from './model/ApplicationHealthEvaluation';
import ApplicationHealthPolicies from './model/ApplicationHealthPolicies';
import ApplicationHealthPolicy from './model/ApplicationHealthPolicy';
import ApplicationHealthPolicyMapItem from './model/ApplicationHealthPolicyMapItem';
import ApplicationHealthState from './model/ApplicationHealthState';
import ApplicationHealthStateChunk from './model/ApplicationHealthStateChunk';
import ApplicationHealthStateChunkList from './model/ApplicationHealthStateChunkList';
import ApplicationHealthStateFilter from './model/ApplicationHealthStateFilter';
import ApplicationInfo from './model/ApplicationInfo';
import ApplicationLoadInfo from './model/ApplicationLoadInfo';
import ApplicationMetricDescription from './model/ApplicationMetricDescription';
import ApplicationNameInfo from './model/ApplicationNameInfo';
import ApplicationParameter from './model/ApplicationParameter';
import ApplicationStatus from './model/ApplicationStatus';
import ApplicationTypeApplicationsHealthEvaluation from './model/ApplicationTypeApplicationsHealthEvaluation';
import ApplicationTypeDefinitionKind from './model/ApplicationTypeDefinitionKind';
import ApplicationTypeHealthPolicyMapItem from './model/ApplicationTypeHealthPolicyMapItem';
import ApplicationTypeImageStorePath from './model/ApplicationTypeImageStorePath';
import ApplicationTypeInfo from './model/ApplicationTypeInfo';
import ApplicationTypeManifest from './model/ApplicationTypeManifest';
import ApplicationTypeStatus from './model/ApplicationTypeStatus';
import ApplicationUpgradeDescription from './model/ApplicationUpgradeDescription';
import ApplicationUpgradeProgressInfo from './model/ApplicationUpgradeProgressInfo';
import ApplicationUpgradeUpdateDescription from './model/ApplicationUpgradeUpdateDescription';
import ApplicationsHealthEvaluation from './model/ApplicationsHealthEvaluation';
import BinaryPropertyValue from './model/BinaryPropertyValue';
import ChaosContext from './model/ChaosContext';
import ChaosContextMapItem from './model/ChaosContextMapItem';
import ChaosEvent from './model/ChaosEvent';
import ChaosEventKind from './model/ChaosEventKind';
import ChaosEventWrapper from './model/ChaosEventWrapper';
import ChaosParameters from './model/ChaosParameters';
import ChaosReport from './model/ChaosReport';
import ChaosTargetFilter from './model/ChaosTargetFilter';
import CheckExistsPropertyBatchOperation from './model/CheckExistsPropertyBatchOperation';
import CheckSequencePropertyBatchOperation from './model/CheckSequencePropertyBatchOperation';
import CheckValuePropertyBatchOperation from './model/CheckValuePropertyBatchOperation';
import ClusterConfiguration from './model/ClusterConfiguration';
import ClusterConfigurationUpgradeDescription from './model/ClusterConfigurationUpgradeDescription';
import ClusterConfigurationUpgradeStatusInfo from './model/ClusterConfigurationUpgradeStatusInfo';
import ClusterHealth from './model/ClusterHealth';
import ClusterHealthChunk from './model/ClusterHealthChunk';
import ClusterHealthChunkQueryDescription from './model/ClusterHealthChunkQueryDescription';
import ClusterHealthPolicies from './model/ClusterHealthPolicies';
import ClusterHealthPolicy from './model/ClusterHealthPolicy';
import ClusterManifest from './model/ClusterManifest';
import ClusterUpgradeDescriptionObject from './model/ClusterUpgradeDescriptionObject';
import ClusterUpgradeHealthPolicyObject from './model/ClusterUpgradeHealthPolicyObject';
import ClusterUpgradeProgressObject from './model/ClusterUpgradeProgressObject';
import CodePackageEntryPoint from './model/CodePackageEntryPoint';
import CodePackageEntryPointStatistics from './model/CodePackageEntryPointStatistics';
import ComposeDeploymentStatus from './model/ComposeDeploymentStatus';
import ComposeDeploymentStatusInfo from './model/ComposeDeploymentStatusInfo';
import ComposeDeploymentUpgradeDescription from './model/ComposeDeploymentUpgradeDescription';
import ComposeDeploymentUpgradeProgressInfo from './model/ComposeDeploymentUpgradeProgressInfo';
import ComposeDeploymentUpgradeState from './model/ComposeDeploymentUpgradeState';
import ContainerLogs from './model/ContainerLogs';
import CreateComposeDeploymentDescription from './model/CreateComposeDeploymentDescription';
import CurrentUpgradeDomainProgressInfo from './model/CurrentUpgradeDomainProgressInfo';
import DeactivationIntentDescription from './model/DeactivationIntentDescription';
import DeletePropertyBatchOperation from './model/DeletePropertyBatchOperation';
import DeltaNodesCheckHealthEvaluation from './model/DeltaNodesCheckHealthEvaluation';
import DeployServicePackageToNodeDescription from './model/DeployServicePackageToNodeDescription';
import DeployedApplicationHealth from './model/DeployedApplicationHealth';
import DeployedApplicationHealthEvaluation from './model/DeployedApplicationHealthEvaluation';
import DeployedApplicationHealthState from './model/DeployedApplicationHealthState';
import DeployedApplicationHealthStateChunk from './model/DeployedApplicationHealthStateChunk';
import DeployedApplicationHealthStateChunkList from './model/DeployedApplicationHealthStateChunkList';
import DeployedApplicationHealthStateFilter from './model/DeployedApplicationHealthStateFilter';
import DeployedApplicationInfo from './model/DeployedApplicationInfo';
import DeployedApplicationStatus from './model/DeployedApplicationStatus';
import DeployedApplicationsHealthEvaluation from './model/DeployedApplicationsHealthEvaluation';
import DeployedCodePackageInfo from './model/DeployedCodePackageInfo';
import DeployedServicePackageHealth from './model/DeployedServicePackageHealth';
import DeployedServicePackageHealthEvaluation from './model/DeployedServicePackageHealthEvaluation';
import DeployedServicePackageHealthState from './model/DeployedServicePackageHealthState';
import DeployedServicePackageHealthStateChunk from './model/DeployedServicePackageHealthStateChunk';
import DeployedServicePackageHealthStateChunkList from './model/DeployedServicePackageHealthStateChunkList';
import DeployedServicePackageHealthStateFilter from './model/DeployedServicePackageHealthStateFilter';
import DeployedServicePackageInfo from './model/DeployedServicePackageInfo';
import DeployedServicePackagesHealthEvaluation from './model/DeployedServicePackagesHealthEvaluation';
import DeployedServiceReplicaDetailInfo from './model/DeployedServiceReplicaDetailInfo';
import DeployedServiceReplicaInfo from './model/DeployedServiceReplicaInfo';
import DeployedServiceTypeInfo from './model/DeployedServiceTypeInfo';
import DeployedStatefulServiceReplicaDetailInfo from './model/DeployedStatefulServiceReplicaDetailInfo';
import DeployedStatefulServiceReplicaInfo from './model/DeployedStatefulServiceReplicaInfo';
import DeployedStatelessServiceInstanceDetailInfo from './model/DeployedStatelessServiceInstanceDetailInfo';
import DeployedStatelessServiceInstanceInfo from './model/DeployedStatelessServiceInstanceInfo';
import DeploymentStatus from './model/DeploymentStatus';
import DoublePropertyValue from './model/DoublePropertyValue';
import EnsureAvailabilitySafetyCheck from './model/EnsureAvailabilitySafetyCheck';
import EnsurePartitionQurumSafetyCheck from './model/EnsurePartitionQurumSafetyCheck';
import EntityHealth from './model/EntityHealth';
import EntityHealthState from './model/EntityHealthState';
import EntityHealthStateChunk from './model/EntityHealthStateChunk';
import EntityHealthStateChunkList from './model/EntityHealthStateChunkList';
import EntityKind from './model/EntityKind';
import EntityKindHealthStateCount from './model/EntityKindHealthStateCount';
import EntryPointStatus from './model/EntryPointStatus';
import Epoch from './model/Epoch';
import EventHealthEvaluation from './model/EventHealthEvaluation';
import ExecutingFaultsChaosEvent from './model/ExecutingFaultsChaosEvent';
import ExternalStoreProvisionApplicationTypeDescription from './model/ExternalStoreProvisionApplicationTypeDescription';
import FabricCodeVersionInfo from './model/FabricCodeVersionInfo';
import FabricConfigVersionInfo from './model/FabricConfigVersionInfo';
import FabricError from './model/FabricError';
import FabricErrorCodes from './model/FabricErrorCodes';
import FabricErrorError from './model/FabricErrorError';
import FabricReplicaStatus from './model/FabricReplicaStatus';
import FailedPropertyBatchInfo from './model/FailedPropertyBatchInfo';
import FailedUpgradeDomainProgressObject from './model/FailedUpgradeDomainProgressObject';
import FailureAction from './model/FailureAction';
import FailureReason from './model/FailureReason';
import FailureUpgradeDomainProgressInfo from './model/FailureUpgradeDomainProgressInfo';
import FileInfo from './model/FileInfo';
import FileVersion from './model/FileVersion';
import FolderInfo from './model/FolderInfo';
import GetPropertyBatchOperation from './model/GetPropertyBatchOperation';
import GuidPropertyValue from './model/GuidPropertyValue';
import HealthEvaluation from './model/HealthEvaluation';
import HealthEvaluationKind from './model/HealthEvaluationKind';
import HealthEvaluationWrapper from './model/HealthEvaluationWrapper';
import HealthEvent from './model/HealthEvent';
import HealthInformation from './model/HealthInformation';
import HealthState from './model/HealthState';
import HealthStateCount from './model/HealthStateCount';
import HealthStatistics from './model/HealthStatistics';
import HostIsolationMode from './model/HostIsolationMode';
import HostType from './model/HostType';
import ImageStoreContent from './model/ImageStoreContent';
import ImageStoreCopyDescription from './model/ImageStoreCopyDescription';
import Int64PropertyValue from './model/Int64PropertyValue';
import Int64RangePartitionInformation from './model/Int64RangePartitionInformation';
import InvokeDataLossResult from './model/InvokeDataLossResult';
import InvokeQuorumLossResult from './model/InvokeQuorumLossResult';
import KeyValueStoreReplicaStatus from './model/KeyValueStoreReplicaStatus';
import LoadMetricReport from './model/LoadMetricReport';
import LoadMetricReportInfo from './model/LoadMetricReportInfo';
import MonitoringPolicyDescription from './model/MonitoringPolicyDescription';
import MoveCost from './model/MoveCost';
import NameDescription from './model/NameDescription';
import NamedPartitionInformation from './model/NamedPartitionInformation';
import NamedPartitionSchemeDescription from './model/NamedPartitionSchemeDescription';
import NodeDeactivationInfo from './model/NodeDeactivationInfo';
import NodeDeactivationIntent from './model/NodeDeactivationIntent';
import NodeDeactivationStatus from './model/NodeDeactivationStatus';
import NodeDeactivationTask from './model/NodeDeactivationTask';
import NodeDeactivationTaskId from './model/NodeDeactivationTaskId';
import NodeDeactivationTaskType from './model/NodeDeactivationTaskType';
import NodeHealth from './model/NodeHealth';
import NodeHealthEvaluation from './model/NodeHealthEvaluation';
import NodeHealthState from './model/NodeHealthState';
import NodeHealthStateChunk from './model/NodeHealthStateChunk';
import NodeHealthStateChunkList from './model/NodeHealthStateChunkList';
import NodeHealthStateFilter from './model/NodeHealthStateFilter';
import NodeId from './model/NodeId';
import NodeImpact from './model/NodeImpact';
import NodeInfo from './model/NodeInfo';
import NodeLoadInfo from './model/NodeLoadInfo';
import NodeLoadMetricInformation from './model/NodeLoadMetricInformation';
import NodeRepairImpactDescription from './model/NodeRepairImpactDescription';
import NodeRepairTargetDescription from './model/NodeRepairTargetDescription';
import NodeResult from './model/NodeResult';
import NodeStatus from './model/NodeStatus';
import NodeTransitionProgress from './model/NodeTransitionProgress';
import NodeTransitionResult from './model/NodeTransitionResult';
import NodeUpgradePhase from './model/NodeUpgradePhase';
import NodeUpgradeProgressInfo from './model/NodeUpgradeProgressInfo';
import NodesHealthEvaluation from './model/NodesHealthEvaluation';
import OperationState from './model/OperationState';
import OperationStatus from './model/OperationStatus';
import OperationType from './model/OperationType';
import PackageSharingPolicyInfo from './model/PackageSharingPolicyInfo';
import PackageSharingPolicyScope from './model/PackageSharingPolicyScope';
import PagedApplicationInfoList from './model/PagedApplicationInfoList';
import PagedApplicationTypeInfoList from './model/PagedApplicationTypeInfoList';
import PagedComposeDeploymentStatusInfoList from './model/PagedComposeDeploymentStatusInfoList';
import PagedDeployedApplicationInfoList from './model/PagedDeployedApplicationInfoList';
import PagedNodeInfoList from './model/PagedNodeInfoList';
import PagedPropertyInfoList from './model/PagedPropertyInfoList';
import PagedReplicaInfoList from './model/PagedReplicaInfoList';
import PagedServiceInfoList from './model/PagedServiceInfoList';
import PagedServicePartitionInfoList from './model/PagedServicePartitionInfoList';
import PagedSubNameInfoList from './model/PagedSubNameInfoList';
import PartitionAccessStatus from './model/PartitionAccessStatus';
import PartitionDataLossProgress from './model/PartitionDataLossProgress';
import PartitionHealth from './model/PartitionHealth';
import PartitionHealthEvaluation from './model/PartitionHealthEvaluation';
import PartitionHealthState from './model/PartitionHealthState';
import PartitionHealthStateChunk from './model/PartitionHealthStateChunk';
import PartitionHealthStateChunkList from './model/PartitionHealthStateChunkList';
import PartitionHealthStateFilter from './model/PartitionHealthStateFilter';
import PartitionInformation from './model/PartitionInformation';
import PartitionLoadInformation from './model/PartitionLoadInformation';
import PartitionQuorumLossProgress from './model/PartitionQuorumLossProgress';
import PartitionRestartProgress from './model/PartitionRestartProgress';
import PartitionSafetyCheck from './model/PartitionSafetyCheck';
import PartitionScheme from './model/PartitionScheme';
import PartitionSchemeDescription from './model/PartitionSchemeDescription';
import PartitionsHealthEvaluation from './model/PartitionsHealthEvaluation';
import PrimaryReplicatorStatus from './model/PrimaryReplicatorStatus';
import PropertyBatchDescriptionList from './model/PropertyBatchDescriptionList';
import PropertyBatchInfo from './model/PropertyBatchInfo';
import PropertyBatchInfoKind from './model/PropertyBatchInfoKind';
import PropertyBatchOperation from './model/PropertyBatchOperation';
import PropertyBatchOperationKind from './model/PropertyBatchOperationKind';
import PropertyDescription from './model/PropertyDescription';
import PropertyInfo from './model/PropertyInfo';
import PropertyMetadata from './model/PropertyMetadata';
import PropertyValue from './model/PropertyValue';
import PropertyValueKind from './model/PropertyValueKind';
import ProvisionApplicationTypeDescription from './model/ProvisionApplicationTypeDescription';
import ProvisionApplicationTypeDescriptionBase from './model/ProvisionApplicationTypeDescriptionBase';
import ProvisionApplicationTypeKind from './model/ProvisionApplicationTypeKind';
import ProvisionFabricDescription from './model/ProvisionFabricDescription';
import PutPropertyBatchOperation from './model/PutPropertyBatchOperation';
import ReconfigurationInformation from './model/ReconfigurationInformation';
import ReconfigurationPhase from './model/ReconfigurationPhase';
import ReconfigurationType from './model/ReconfigurationType';
import RegistryCredential from './model/RegistryCredential';
import RemoteReplicatorAcknowledgementDetail from './model/RemoteReplicatorAcknowledgementDetail';
import RemoteReplicatorAcknowledgementStatus from './model/RemoteReplicatorAcknowledgementStatus';
import RemoteReplicatorStatus from './model/RemoteReplicatorStatus';
import RepairImpactDescriptionBase from './model/RepairImpactDescriptionBase';
import RepairImpactKind from './model/RepairImpactKind';
import RepairTargetDescriptionBase from './model/RepairTargetDescriptionBase';
import RepairTargetKind from './model/RepairTargetKind';
import RepairTask from './model/RepairTask';
import RepairTaskApproveDescription from './model/RepairTaskApproveDescription';
import RepairTaskCancelDescription from './model/RepairTaskCancelDescription';
import RepairTaskDeleteDescription from './model/RepairTaskDeleteDescription';
import RepairTaskHealthCheckState from './model/RepairTaskHealthCheckState';
import RepairTaskHistory from './model/RepairTaskHistory';
import RepairTaskUpdateHealthPolicyDescription from './model/RepairTaskUpdateHealthPolicyDescription';
import RepairTaskUpdateInfo from './model/RepairTaskUpdateInfo';
import ReplicaHealth from './model/ReplicaHealth';
import ReplicaHealthEvaluation from './model/ReplicaHealthEvaluation';
import ReplicaHealthState from './model/ReplicaHealthState';
import ReplicaHealthStateChunk from './model/ReplicaHealthStateChunk';
import ReplicaHealthStateChunkList from './model/ReplicaHealthStateChunkList';
import ReplicaHealthStateFilter from './model/ReplicaHealthStateFilter';
import ReplicaInfo from './model/ReplicaInfo';
import ReplicaKind from './model/ReplicaKind';
import ReplicaRole from './model/ReplicaRole';
import ReplicaStatus from './model/ReplicaStatus';
import ReplicaStatusBase from './model/ReplicaStatusBase';
import ReplicasHealthEvaluation from './model/ReplicasHealthEvaluation';
import ReplicatorOperationName from './model/ReplicatorOperationName';
import ReplicatorQueueStatus from './model/ReplicatorQueueStatus';
import ReplicatorStatus from './model/ReplicatorStatus';
import ResolvedServiceEndpoint from './model/ResolvedServiceEndpoint';
import ResolvedServicePartition from './model/ResolvedServicePartition';
import RestartDeployedCodePackageDescription from './model/RestartDeployedCodePackageDescription';
import RestartNodeDescription from './model/RestartNodeDescription';
import RestartPartitionResult from './model/RestartPartitionResult';
import ResumeApplicationUpgradeDescription from './model/ResumeApplicationUpgradeDescription';
import ResumeClusterUpgradeDescription from './model/ResumeClusterUpgradeDescription';
import RollingUpgradeUpdateDescription from './model/RollingUpgradeUpdateDescription';
import SafetyCheck from './model/SafetyCheck';
import SafetyCheckKind from './model/SafetyCheckKind';
import SafetyCheckWrapper from './model/SafetyCheckWrapper';
import SecondaryActiveReplicatorStatus from './model/SecondaryActiveReplicatorStatus';
import SecondaryIdleReplicatorStatus from './model/SecondaryIdleReplicatorStatus';
import SecondaryReplicatorStatus from './model/SecondaryReplicatorStatus';
import SeedNodeSafetyCheck from './model/SeedNodeSafetyCheck';
import SelectedPartition from './model/SelectedPartition';
import ServiceCorrelationDescription from './model/ServiceCorrelationDescription';
import ServiceCorrelationScheme from './model/ServiceCorrelationScheme';
import ServiceDescription from './model/ServiceDescription';
import ServiceEndpointRole from './model/ServiceEndpointRole';
import ServiceFromTemplateDescription from './model/ServiceFromTemplateDescription';
import ServiceHealth from './model/ServiceHealth';
import ServiceHealthEvaluation from './model/ServiceHealthEvaluation';
import ServiceHealthState from './model/ServiceHealthState';
import ServiceHealthStateChunk from './model/ServiceHealthStateChunk';
import ServiceHealthStateChunkList from './model/ServiceHealthStateChunkList';
import ServiceHealthStateFilter from './model/ServiceHealthStateFilter';
import ServiceInfo from './model/ServiceInfo';
import ServiceKind from './model/ServiceKind';
import ServiceLoadMetricDescription from './model/ServiceLoadMetricDescription';
import ServiceLoadMetricWeight from './model/ServiceLoadMetricWeight';
import ServiceNameInfo from './model/ServiceNameInfo';
import ServiceOperationName from './model/ServiceOperationName';
import ServicePackageActivationMode from './model/ServicePackageActivationMode';
import ServicePartitionInfo from './model/ServicePartitionInfo';
import ServicePartitionKind from './model/ServicePartitionKind';
import ServicePartitionStatus from './model/ServicePartitionStatus';
import ServicePlacementInvalidDomainPolicyDescription from './model/ServicePlacementInvalidDomainPolicyDescription';
import ServicePlacementNonPartiallyPlaceServicePolicyDescription from './model/ServicePlacementNonPartiallyPlaceServicePolicyDescription';
import ServicePlacementPolicyDescription from './model/ServicePlacementPolicyDescription';
import ServicePlacementPolicyType from './model/ServicePlacementPolicyType';
import ServicePlacementPreferPrimaryDomainPolicyDescription from './model/ServicePlacementPreferPrimaryDomainPolicyDescription';
import ServicePlacementRequireDomainDistributionPolicyDescription from './model/ServicePlacementRequireDomainDistributionPolicyDescription';
import ServicePlacementRequiredDomainPolicyDescription from './model/ServicePlacementRequiredDomainPolicyDescription';
import ServiceStatus from './model/ServiceStatus';
import ServiceTypeDescription from './model/ServiceTypeDescription';
import ServiceTypeExtensionDescription from './model/ServiceTypeExtensionDescription';
import ServiceTypeHealthPolicy from './model/ServiceTypeHealthPolicy';
import ServiceTypeHealthPolicyMapItem from './model/ServiceTypeHealthPolicyMapItem';
import ServiceTypeInfo from './model/ServiceTypeInfo';
import ServiceTypeManifest from './model/ServiceTypeManifest';
import ServiceTypeRegistrationStatus from './model/ServiceTypeRegistrationStatus';
import ServiceUpdateDescription from './model/ServiceUpdateDescription';
import ServicesHealthEvaluation from './model/ServicesHealthEvaluation';
import SingletonPartitionInformation from './model/SingletonPartitionInformation';
import SingletonPartitionSchemeDescription from './model/SingletonPartitionSchemeDescription';
import StartClusterUpgradeDescription from './model/StartClusterUpgradeDescription';
import StartedChaosEvent from './model/StartedChaosEvent';
import StatefulServiceDescription from './model/StatefulServiceDescription';
import StatefulServiceInfo from './model/StatefulServiceInfo';
import StatefulServicePartitionInfo from './model/StatefulServicePartitionInfo';
import StatefulServiceReplicaHealth from './model/StatefulServiceReplicaHealth';
import StatefulServiceReplicaHealthState from './model/StatefulServiceReplicaHealthState';
import StatefulServiceReplicaInfo from './model/StatefulServiceReplicaInfo';
import StatefulServiceTypeDescription from './model/StatefulServiceTypeDescription';
import StatefulServiceUpdateDescription from './model/StatefulServiceUpdateDescription';
import StatelessServiceDescription from './model/StatelessServiceDescription';
import StatelessServiceInfo from './model/StatelessServiceInfo';
import StatelessServiceInstanceHealth from './model/StatelessServiceInstanceHealth';
import StatelessServiceInstanceHealthState from './model/StatelessServiceInstanceHealthState';
import StatelessServiceInstanceInfo from './model/StatelessServiceInstanceInfo';
import StatelessServicePartitionInfo from './model/StatelessServicePartitionInfo';
import StatelessServiceTypeDescription from './model/StatelessServiceTypeDescription';
import StatelessServiceUpdateDescription from './model/StatelessServiceUpdateDescription';
import StoppedChaosEvent from './model/StoppedChaosEvent';
import StringPropertyValue from './model/StringPropertyValue';
import SuccessfulPropertyBatchInfo from './model/SuccessfulPropertyBatchInfo';
import SystemApplicationHealthEvaluation from './model/SystemApplicationHealthEvaluation';
import TestErrorChaosEvent from './model/TestErrorChaosEvent';
import UniformInt64RangePartitionSchemeDescription from './model/UniformInt64RangePartitionSchemeDescription';
import UnprovisionApplicationTypeDescriptionInfo from './model/UnprovisionApplicationTypeDescriptionInfo';
import UnprovisionFabricDescription from './model/UnprovisionFabricDescription';
import UpdateClusterUpgradeDescription from './model/UpdateClusterUpgradeDescription';
import UpgradeDomainDeltaNodesCheckHealthEvaluation from './model/UpgradeDomainDeltaNodesCheckHealthEvaluation';
import UpgradeDomainInfo from './model/UpgradeDomainInfo';
import UpgradeDomainNodesHealthEvaluation from './model/UpgradeDomainNodesHealthEvaluation';
import UpgradeDomainState from './model/UpgradeDomainState';
import UpgradeKind from './model/UpgradeKind';
import UpgradeMode from './model/UpgradeMode';
import UpgradeOrchestrationServiceState from './model/UpgradeOrchestrationServiceState';
import UpgradeOrchestrationServiceStateSummary from './model/UpgradeOrchestrationServiceStateSummary';
import UpgradeState from './model/UpgradeState';
import UpgradeType from './model/UpgradeType';
import UploadChunkRange from './model/UploadChunkRange';
import UploadSession from './model/UploadSession';
import UploadSessionInfo from './model/UploadSessionInfo';
import ValidationFailedChaosEvent from './model/ValidationFailedChaosEvent';
import WaitForInbuildReplicaSafetyCheck from './model/WaitForInbuildReplicaSafetyCheck';
import WaitForPrimaryPlacementSafetyCheck from './model/WaitForPrimaryPlacementSafetyCheck';
import WaitForPrimarySwapSafetyCheck from './model/WaitForPrimarySwapSafetyCheck';
import WaitForReconfigurationSafetyCheck from './model/WaitForReconfigurationSafetyCheck';
import WaitingChaosEvent from './model/WaitingChaosEvent';
import ApplicationApi from './api/ApplicationApi';
import ApplicationTypeApi from './api/ApplicationTypeApi';
import ChaosApi from './api/ChaosApi';
import ClusterApi from './api/ClusterApi';
import CodePackageApi from './api/CodePackageApi';
import ComposeDeploymentApi from './api/ComposeDeploymentApi';
import FaultsApi from './api/FaultsApi';
import ImageStoreApi from './api/ImageStoreApi';
import InfrastructureApi from './api/InfrastructureApi';
import NodeApi from './api/NodeApi';
import PartitionApi from './api/PartitionApi';
import PropertyManagementApi from './api/PropertyManagementApi';
import RepairManagementApi from './api/RepairManagementApi';
import ReplicaApi from './api/ReplicaApi';
import ServiceApi from './api/ServiceApi';
import ServicePackageApi from './api/ServicePackageApi';
import ServiceTypeApi from './api/ServiceTypeApi';


/**
* Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ServiceFabricClientApis = require('index'); // See note below*.
* var xxxSvc = new ServiceFabricClientApis.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ServiceFabricClientApis.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ServiceFabricClientApis.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ServiceFabricClientApis.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 6.1.2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AadMetadata model constructor.
     * @property {module:model/AadMetadata}
     */
    AadMetadata,

    /**
     * The AadMetadataObject model constructor.
     * @property {module:model/AadMetadataObject}
     */
    AadMetadataObject,

    /**
     * The ApplicationCapacityDescription model constructor.
     * @property {module:model/ApplicationCapacityDescription}
     */
    ApplicationCapacityDescription,

    /**
     * The ApplicationDefinitionKind model constructor.
     * @property {module:model/ApplicationDefinitionKind}
     */
    ApplicationDefinitionKind,

    /**
     * The ApplicationDescription model constructor.
     * @property {module:model/ApplicationDescription}
     */
    ApplicationDescription,

    /**
     * The ApplicationHealth model constructor.
     * @property {module:model/ApplicationHealth}
     */
    ApplicationHealth,

    /**
     * The ApplicationHealthEvaluation model constructor.
     * @property {module:model/ApplicationHealthEvaluation}
     */
    ApplicationHealthEvaluation,

    /**
     * The ApplicationHealthPolicies model constructor.
     * @property {module:model/ApplicationHealthPolicies}
     */
    ApplicationHealthPolicies,

    /**
     * The ApplicationHealthPolicy model constructor.
     * @property {module:model/ApplicationHealthPolicy}
     */
    ApplicationHealthPolicy,

    /**
     * The ApplicationHealthPolicyMapItem model constructor.
     * @property {module:model/ApplicationHealthPolicyMapItem}
     */
    ApplicationHealthPolicyMapItem,

    /**
     * The ApplicationHealthState model constructor.
     * @property {module:model/ApplicationHealthState}
     */
    ApplicationHealthState,

    /**
     * The ApplicationHealthStateChunk model constructor.
     * @property {module:model/ApplicationHealthStateChunk}
     */
    ApplicationHealthStateChunk,

    /**
     * The ApplicationHealthStateChunkList model constructor.
     * @property {module:model/ApplicationHealthStateChunkList}
     */
    ApplicationHealthStateChunkList,

    /**
     * The ApplicationHealthStateFilter model constructor.
     * @property {module:model/ApplicationHealthStateFilter}
     */
    ApplicationHealthStateFilter,

    /**
     * The ApplicationInfo model constructor.
     * @property {module:model/ApplicationInfo}
     */
    ApplicationInfo,

    /**
     * The ApplicationLoadInfo model constructor.
     * @property {module:model/ApplicationLoadInfo}
     */
    ApplicationLoadInfo,

    /**
     * The ApplicationMetricDescription model constructor.
     * @property {module:model/ApplicationMetricDescription}
     */
    ApplicationMetricDescription,

    /**
     * The ApplicationNameInfo model constructor.
     * @property {module:model/ApplicationNameInfo}
     */
    ApplicationNameInfo,

    /**
     * The ApplicationParameter model constructor.
     * @property {module:model/ApplicationParameter}
     */
    ApplicationParameter,

    /**
     * The ApplicationStatus model constructor.
     * @property {module:model/ApplicationStatus}
     */
    ApplicationStatus,

    /**
     * The ApplicationTypeApplicationsHealthEvaluation model constructor.
     * @property {module:model/ApplicationTypeApplicationsHealthEvaluation}
     */
    ApplicationTypeApplicationsHealthEvaluation,

    /**
     * The ApplicationTypeDefinitionKind model constructor.
     * @property {module:model/ApplicationTypeDefinitionKind}
     */
    ApplicationTypeDefinitionKind,

    /**
     * The ApplicationTypeHealthPolicyMapItem model constructor.
     * @property {module:model/ApplicationTypeHealthPolicyMapItem}
     */
    ApplicationTypeHealthPolicyMapItem,

    /**
     * The ApplicationTypeImageStorePath model constructor.
     * @property {module:model/ApplicationTypeImageStorePath}
     */
    ApplicationTypeImageStorePath,

    /**
     * The ApplicationTypeInfo model constructor.
     * @property {module:model/ApplicationTypeInfo}
     */
    ApplicationTypeInfo,

    /**
     * The ApplicationTypeManifest model constructor.
     * @property {module:model/ApplicationTypeManifest}
     */
    ApplicationTypeManifest,

    /**
     * The ApplicationTypeStatus model constructor.
     * @property {module:model/ApplicationTypeStatus}
     */
    ApplicationTypeStatus,

    /**
     * The ApplicationUpgradeDescription model constructor.
     * @property {module:model/ApplicationUpgradeDescription}
     */
    ApplicationUpgradeDescription,

    /**
     * The ApplicationUpgradeProgressInfo model constructor.
     * @property {module:model/ApplicationUpgradeProgressInfo}
     */
    ApplicationUpgradeProgressInfo,

    /**
     * The ApplicationUpgradeUpdateDescription model constructor.
     * @property {module:model/ApplicationUpgradeUpdateDescription}
     */
    ApplicationUpgradeUpdateDescription,

    /**
     * The ApplicationsHealthEvaluation model constructor.
     * @property {module:model/ApplicationsHealthEvaluation}
     */
    ApplicationsHealthEvaluation,

    /**
     * The BinaryPropertyValue model constructor.
     * @property {module:model/BinaryPropertyValue}
     */
    BinaryPropertyValue,

    /**
     * The ChaosContext model constructor.
     * @property {module:model/ChaosContext}
     */
    ChaosContext,

    /**
     * The ChaosContextMapItem model constructor.
     * @property {module:model/ChaosContextMapItem}
     */
    ChaosContextMapItem,

    /**
     * The ChaosEvent model constructor.
     * @property {module:model/ChaosEvent}
     */
    ChaosEvent,

    /**
     * The ChaosEventKind model constructor.
     * @property {module:model/ChaosEventKind}
     */
    ChaosEventKind,

    /**
     * The ChaosEventWrapper model constructor.
     * @property {module:model/ChaosEventWrapper}
     */
    ChaosEventWrapper,

    /**
     * The ChaosParameters model constructor.
     * @property {module:model/ChaosParameters}
     */
    ChaosParameters,

    /**
     * The ChaosReport model constructor.
     * @property {module:model/ChaosReport}
     */
    ChaosReport,

    /**
     * The ChaosTargetFilter model constructor.
     * @property {module:model/ChaosTargetFilter}
     */
    ChaosTargetFilter,

    /**
     * The CheckExistsPropertyBatchOperation model constructor.
     * @property {module:model/CheckExistsPropertyBatchOperation}
     */
    CheckExistsPropertyBatchOperation,

    /**
     * The CheckSequencePropertyBatchOperation model constructor.
     * @property {module:model/CheckSequencePropertyBatchOperation}
     */
    CheckSequencePropertyBatchOperation,

    /**
     * The CheckValuePropertyBatchOperation model constructor.
     * @property {module:model/CheckValuePropertyBatchOperation}
     */
    CheckValuePropertyBatchOperation,

    /**
     * The ClusterConfiguration model constructor.
     * @property {module:model/ClusterConfiguration}
     */
    ClusterConfiguration,

    /**
     * The ClusterConfigurationUpgradeDescription model constructor.
     * @property {module:model/ClusterConfigurationUpgradeDescription}
     */
    ClusterConfigurationUpgradeDescription,

    /**
     * The ClusterConfigurationUpgradeStatusInfo model constructor.
     * @property {module:model/ClusterConfigurationUpgradeStatusInfo}
     */
    ClusterConfigurationUpgradeStatusInfo,

    /**
     * The ClusterHealth model constructor.
     * @property {module:model/ClusterHealth}
     */
    ClusterHealth,

    /**
     * The ClusterHealthChunk model constructor.
     * @property {module:model/ClusterHealthChunk}
     */
    ClusterHealthChunk,

    /**
     * The ClusterHealthChunkQueryDescription model constructor.
     * @property {module:model/ClusterHealthChunkQueryDescription}
     */
    ClusterHealthChunkQueryDescription,

    /**
     * The ClusterHealthPolicies model constructor.
     * @property {module:model/ClusterHealthPolicies}
     */
    ClusterHealthPolicies,

    /**
     * The ClusterHealthPolicy model constructor.
     * @property {module:model/ClusterHealthPolicy}
     */
    ClusterHealthPolicy,

    /**
     * The ClusterManifest model constructor.
     * @property {module:model/ClusterManifest}
     */
    ClusterManifest,

    /**
     * The ClusterUpgradeDescriptionObject model constructor.
     * @property {module:model/ClusterUpgradeDescriptionObject}
     */
    ClusterUpgradeDescriptionObject,

    /**
     * The ClusterUpgradeHealthPolicyObject model constructor.
     * @property {module:model/ClusterUpgradeHealthPolicyObject}
     */
    ClusterUpgradeHealthPolicyObject,

    /**
     * The ClusterUpgradeProgressObject model constructor.
     * @property {module:model/ClusterUpgradeProgressObject}
     */
    ClusterUpgradeProgressObject,

    /**
     * The CodePackageEntryPoint model constructor.
     * @property {module:model/CodePackageEntryPoint}
     */
    CodePackageEntryPoint,

    /**
     * The CodePackageEntryPointStatistics model constructor.
     * @property {module:model/CodePackageEntryPointStatistics}
     */
    CodePackageEntryPointStatistics,

    /**
     * The ComposeDeploymentStatus model constructor.
     * @property {module:model/ComposeDeploymentStatus}
     */
    ComposeDeploymentStatus,

    /**
     * The ComposeDeploymentStatusInfo model constructor.
     * @property {module:model/ComposeDeploymentStatusInfo}
     */
    ComposeDeploymentStatusInfo,

    /**
     * The ComposeDeploymentUpgradeDescription model constructor.
     * @property {module:model/ComposeDeploymentUpgradeDescription}
     */
    ComposeDeploymentUpgradeDescription,

    /**
     * The ComposeDeploymentUpgradeProgressInfo model constructor.
     * @property {module:model/ComposeDeploymentUpgradeProgressInfo}
     */
    ComposeDeploymentUpgradeProgressInfo,

    /**
     * The ComposeDeploymentUpgradeState model constructor.
     * @property {module:model/ComposeDeploymentUpgradeState}
     */
    ComposeDeploymentUpgradeState,

    /**
     * The ContainerLogs model constructor.
     * @property {module:model/ContainerLogs}
     */
    ContainerLogs,

    /**
     * The CreateComposeDeploymentDescription model constructor.
     * @property {module:model/CreateComposeDeploymentDescription}
     */
    CreateComposeDeploymentDescription,

    /**
     * The CurrentUpgradeDomainProgressInfo model constructor.
     * @property {module:model/CurrentUpgradeDomainProgressInfo}
     */
    CurrentUpgradeDomainProgressInfo,

    /**
     * The DeactivationIntentDescription model constructor.
     * @property {module:model/DeactivationIntentDescription}
     */
    DeactivationIntentDescription,

    /**
     * The DeletePropertyBatchOperation model constructor.
     * @property {module:model/DeletePropertyBatchOperation}
     */
    DeletePropertyBatchOperation,

    /**
     * The DeltaNodesCheckHealthEvaluation model constructor.
     * @property {module:model/DeltaNodesCheckHealthEvaluation}
     */
    DeltaNodesCheckHealthEvaluation,

    /**
     * The DeployServicePackageToNodeDescription model constructor.
     * @property {module:model/DeployServicePackageToNodeDescription}
     */
    DeployServicePackageToNodeDescription,

    /**
     * The DeployedApplicationHealth model constructor.
     * @property {module:model/DeployedApplicationHealth}
     */
    DeployedApplicationHealth,

    /**
     * The DeployedApplicationHealthEvaluation model constructor.
     * @property {module:model/DeployedApplicationHealthEvaluation}
     */
    DeployedApplicationHealthEvaluation,

    /**
     * The DeployedApplicationHealthState model constructor.
     * @property {module:model/DeployedApplicationHealthState}
     */
    DeployedApplicationHealthState,

    /**
     * The DeployedApplicationHealthStateChunk model constructor.
     * @property {module:model/DeployedApplicationHealthStateChunk}
     */
    DeployedApplicationHealthStateChunk,

    /**
     * The DeployedApplicationHealthStateChunkList model constructor.
     * @property {module:model/DeployedApplicationHealthStateChunkList}
     */
    DeployedApplicationHealthStateChunkList,

    /**
     * The DeployedApplicationHealthStateFilter model constructor.
     * @property {module:model/DeployedApplicationHealthStateFilter}
     */
    DeployedApplicationHealthStateFilter,

    /**
     * The DeployedApplicationInfo model constructor.
     * @property {module:model/DeployedApplicationInfo}
     */
    DeployedApplicationInfo,

    /**
     * The DeployedApplicationStatus model constructor.
     * @property {module:model/DeployedApplicationStatus}
     */
    DeployedApplicationStatus,

    /**
     * The DeployedApplicationsHealthEvaluation model constructor.
     * @property {module:model/DeployedApplicationsHealthEvaluation}
     */
    DeployedApplicationsHealthEvaluation,

    /**
     * The DeployedCodePackageInfo model constructor.
     * @property {module:model/DeployedCodePackageInfo}
     */
    DeployedCodePackageInfo,

    /**
     * The DeployedServicePackageHealth model constructor.
     * @property {module:model/DeployedServicePackageHealth}
     */
    DeployedServicePackageHealth,

    /**
     * The DeployedServicePackageHealthEvaluation model constructor.
     * @property {module:model/DeployedServicePackageHealthEvaluation}
     */
    DeployedServicePackageHealthEvaluation,

    /**
     * The DeployedServicePackageHealthState model constructor.
     * @property {module:model/DeployedServicePackageHealthState}
     */
    DeployedServicePackageHealthState,

    /**
     * The DeployedServicePackageHealthStateChunk model constructor.
     * @property {module:model/DeployedServicePackageHealthStateChunk}
     */
    DeployedServicePackageHealthStateChunk,

    /**
     * The DeployedServicePackageHealthStateChunkList model constructor.
     * @property {module:model/DeployedServicePackageHealthStateChunkList}
     */
    DeployedServicePackageHealthStateChunkList,

    /**
     * The DeployedServicePackageHealthStateFilter model constructor.
     * @property {module:model/DeployedServicePackageHealthStateFilter}
     */
    DeployedServicePackageHealthStateFilter,

    /**
     * The DeployedServicePackageInfo model constructor.
     * @property {module:model/DeployedServicePackageInfo}
     */
    DeployedServicePackageInfo,

    /**
     * The DeployedServicePackagesHealthEvaluation model constructor.
     * @property {module:model/DeployedServicePackagesHealthEvaluation}
     */
    DeployedServicePackagesHealthEvaluation,

    /**
     * The DeployedServiceReplicaDetailInfo model constructor.
     * @property {module:model/DeployedServiceReplicaDetailInfo}
     */
    DeployedServiceReplicaDetailInfo,

    /**
     * The DeployedServiceReplicaInfo model constructor.
     * @property {module:model/DeployedServiceReplicaInfo}
     */
    DeployedServiceReplicaInfo,

    /**
     * The DeployedServiceTypeInfo model constructor.
     * @property {module:model/DeployedServiceTypeInfo}
     */
    DeployedServiceTypeInfo,

    /**
     * The DeployedStatefulServiceReplicaDetailInfo model constructor.
     * @property {module:model/DeployedStatefulServiceReplicaDetailInfo}
     */
    DeployedStatefulServiceReplicaDetailInfo,

    /**
     * The DeployedStatefulServiceReplicaInfo model constructor.
     * @property {module:model/DeployedStatefulServiceReplicaInfo}
     */
    DeployedStatefulServiceReplicaInfo,

    /**
     * The DeployedStatelessServiceInstanceDetailInfo model constructor.
     * @property {module:model/DeployedStatelessServiceInstanceDetailInfo}
     */
    DeployedStatelessServiceInstanceDetailInfo,

    /**
     * The DeployedStatelessServiceInstanceInfo model constructor.
     * @property {module:model/DeployedStatelessServiceInstanceInfo}
     */
    DeployedStatelessServiceInstanceInfo,

    /**
     * The DeploymentStatus model constructor.
     * @property {module:model/DeploymentStatus}
     */
    DeploymentStatus,

    /**
     * The DoublePropertyValue model constructor.
     * @property {module:model/DoublePropertyValue}
     */
    DoublePropertyValue,

    /**
     * The EnsureAvailabilitySafetyCheck model constructor.
     * @property {module:model/EnsureAvailabilitySafetyCheck}
     */
    EnsureAvailabilitySafetyCheck,

    /**
     * The EnsurePartitionQurumSafetyCheck model constructor.
     * @property {module:model/EnsurePartitionQurumSafetyCheck}
     */
    EnsurePartitionQurumSafetyCheck,

    /**
     * The EntityHealth model constructor.
     * @property {module:model/EntityHealth}
     */
    EntityHealth,

    /**
     * The EntityHealthState model constructor.
     * @property {module:model/EntityHealthState}
     */
    EntityHealthState,

    /**
     * The EntityHealthStateChunk model constructor.
     * @property {module:model/EntityHealthStateChunk}
     */
    EntityHealthStateChunk,

    /**
     * The EntityHealthStateChunkList model constructor.
     * @property {module:model/EntityHealthStateChunkList}
     */
    EntityHealthStateChunkList,

    /**
     * The EntityKind model constructor.
     * @property {module:model/EntityKind}
     */
    EntityKind,

    /**
     * The EntityKindHealthStateCount model constructor.
     * @property {module:model/EntityKindHealthStateCount}
     */
    EntityKindHealthStateCount,

    /**
     * The EntryPointStatus model constructor.
     * @property {module:model/EntryPointStatus}
     */
    EntryPointStatus,

    /**
     * The Epoch model constructor.
     * @property {module:model/Epoch}
     */
    Epoch,

    /**
     * The EventHealthEvaluation model constructor.
     * @property {module:model/EventHealthEvaluation}
     */
    EventHealthEvaluation,

    /**
     * The ExecutingFaultsChaosEvent model constructor.
     * @property {module:model/ExecutingFaultsChaosEvent}
     */
    ExecutingFaultsChaosEvent,

    /**
     * The ExternalStoreProvisionApplicationTypeDescription model constructor.
     * @property {module:model/ExternalStoreProvisionApplicationTypeDescription}
     */
    ExternalStoreProvisionApplicationTypeDescription,

    /**
     * The FabricCodeVersionInfo model constructor.
     * @property {module:model/FabricCodeVersionInfo}
     */
    FabricCodeVersionInfo,

    /**
     * The FabricConfigVersionInfo model constructor.
     * @property {module:model/FabricConfigVersionInfo}
     */
    FabricConfigVersionInfo,

    /**
     * The FabricError model constructor.
     * @property {module:model/FabricError}
     */
    FabricError,

    /**
     * The FabricErrorCodes model constructor.
     * @property {module:model/FabricErrorCodes}
     */
    FabricErrorCodes,

    /**
     * The FabricErrorError model constructor.
     * @property {module:model/FabricErrorError}
     */
    FabricErrorError,

    /**
     * The FabricReplicaStatus model constructor.
     * @property {module:model/FabricReplicaStatus}
     */
    FabricReplicaStatus,

    /**
     * The FailedPropertyBatchInfo model constructor.
     * @property {module:model/FailedPropertyBatchInfo}
     */
    FailedPropertyBatchInfo,

    /**
     * The FailedUpgradeDomainProgressObject model constructor.
     * @property {module:model/FailedUpgradeDomainProgressObject}
     */
    FailedUpgradeDomainProgressObject,

    /**
     * The FailureAction model constructor.
     * @property {module:model/FailureAction}
     */
    FailureAction,

    /**
     * The FailureReason model constructor.
     * @property {module:model/FailureReason}
     */
    FailureReason,

    /**
     * The FailureUpgradeDomainProgressInfo model constructor.
     * @property {module:model/FailureUpgradeDomainProgressInfo}
     */
    FailureUpgradeDomainProgressInfo,

    /**
     * The FileInfo model constructor.
     * @property {module:model/FileInfo}
     */
    FileInfo,

    /**
     * The FileVersion model constructor.
     * @property {module:model/FileVersion}
     */
    FileVersion,

    /**
     * The FolderInfo model constructor.
     * @property {module:model/FolderInfo}
     */
    FolderInfo,

    /**
     * The GetPropertyBatchOperation model constructor.
     * @property {module:model/GetPropertyBatchOperation}
     */
    GetPropertyBatchOperation,

    /**
     * The GuidPropertyValue model constructor.
     * @property {module:model/GuidPropertyValue}
     */
    GuidPropertyValue,

    /**
     * The HealthEvaluation model constructor.
     * @property {module:model/HealthEvaluation}
     */
    HealthEvaluation,

    /**
     * The HealthEvaluationKind model constructor.
     * @property {module:model/HealthEvaluationKind}
     */
    HealthEvaluationKind,

    /**
     * The HealthEvaluationWrapper model constructor.
     * @property {module:model/HealthEvaluationWrapper}
     */
    HealthEvaluationWrapper,

    /**
     * The HealthEvent model constructor.
     * @property {module:model/HealthEvent}
     */
    HealthEvent,

    /**
     * The HealthInformation model constructor.
     * @property {module:model/HealthInformation}
     */
    HealthInformation,

    /**
     * The HealthState model constructor.
     * @property {module:model/HealthState}
     */
    HealthState,

    /**
     * The HealthStateCount model constructor.
     * @property {module:model/HealthStateCount}
     */
    HealthStateCount,

    /**
     * The HealthStatistics model constructor.
     * @property {module:model/HealthStatistics}
     */
    HealthStatistics,

    /**
     * The HostIsolationMode model constructor.
     * @property {module:model/HostIsolationMode}
     */
    HostIsolationMode,

    /**
     * The HostType model constructor.
     * @property {module:model/HostType}
     */
    HostType,

    /**
     * The ImageStoreContent model constructor.
     * @property {module:model/ImageStoreContent}
     */
    ImageStoreContent,

    /**
     * The ImageStoreCopyDescription model constructor.
     * @property {module:model/ImageStoreCopyDescription}
     */
    ImageStoreCopyDescription,

    /**
     * The Int64PropertyValue model constructor.
     * @property {module:model/Int64PropertyValue}
     */
    Int64PropertyValue,

    /**
     * The Int64RangePartitionInformation model constructor.
     * @property {module:model/Int64RangePartitionInformation}
     */
    Int64RangePartitionInformation,

    /**
     * The InvokeDataLossResult model constructor.
     * @property {module:model/InvokeDataLossResult}
     */
    InvokeDataLossResult,

    /**
     * The InvokeQuorumLossResult model constructor.
     * @property {module:model/InvokeQuorumLossResult}
     */
    InvokeQuorumLossResult,

    /**
     * The KeyValueStoreReplicaStatus model constructor.
     * @property {module:model/KeyValueStoreReplicaStatus}
     */
    KeyValueStoreReplicaStatus,

    /**
     * The LoadMetricReport model constructor.
     * @property {module:model/LoadMetricReport}
     */
    LoadMetricReport,

    /**
     * The LoadMetricReportInfo model constructor.
     * @property {module:model/LoadMetricReportInfo}
     */
    LoadMetricReportInfo,

    /**
     * The MonitoringPolicyDescription model constructor.
     * @property {module:model/MonitoringPolicyDescription}
     */
    MonitoringPolicyDescription,

    /**
     * The MoveCost model constructor.
     * @property {module:model/MoveCost}
     */
    MoveCost,

    /**
     * The NameDescription model constructor.
     * @property {module:model/NameDescription}
     */
    NameDescription,

    /**
     * The NamedPartitionInformation model constructor.
     * @property {module:model/NamedPartitionInformation}
     */
    NamedPartitionInformation,

    /**
     * The NamedPartitionSchemeDescription model constructor.
     * @property {module:model/NamedPartitionSchemeDescription}
     */
    NamedPartitionSchemeDescription,

    /**
     * The NodeDeactivationInfo model constructor.
     * @property {module:model/NodeDeactivationInfo}
     */
    NodeDeactivationInfo,

    /**
     * The NodeDeactivationIntent model constructor.
     * @property {module:model/NodeDeactivationIntent}
     */
    NodeDeactivationIntent,

    /**
     * The NodeDeactivationStatus model constructor.
     * @property {module:model/NodeDeactivationStatus}
     */
    NodeDeactivationStatus,

    /**
     * The NodeDeactivationTask model constructor.
     * @property {module:model/NodeDeactivationTask}
     */
    NodeDeactivationTask,

    /**
     * The NodeDeactivationTaskId model constructor.
     * @property {module:model/NodeDeactivationTaskId}
     */
    NodeDeactivationTaskId,

    /**
     * The NodeDeactivationTaskType model constructor.
     * @property {module:model/NodeDeactivationTaskType}
     */
    NodeDeactivationTaskType,

    /**
     * The NodeHealth model constructor.
     * @property {module:model/NodeHealth}
     */
    NodeHealth,

    /**
     * The NodeHealthEvaluation model constructor.
     * @property {module:model/NodeHealthEvaluation}
     */
    NodeHealthEvaluation,

    /**
     * The NodeHealthState model constructor.
     * @property {module:model/NodeHealthState}
     */
    NodeHealthState,

    /**
     * The NodeHealthStateChunk model constructor.
     * @property {module:model/NodeHealthStateChunk}
     */
    NodeHealthStateChunk,

    /**
     * The NodeHealthStateChunkList model constructor.
     * @property {module:model/NodeHealthStateChunkList}
     */
    NodeHealthStateChunkList,

    /**
     * The NodeHealthStateFilter model constructor.
     * @property {module:model/NodeHealthStateFilter}
     */
    NodeHealthStateFilter,

    /**
     * The NodeId model constructor.
     * @property {module:model/NodeId}
     */
    NodeId,

    /**
     * The NodeImpact model constructor.
     * @property {module:model/NodeImpact}
     */
    NodeImpact,

    /**
     * The NodeInfo model constructor.
     * @property {module:model/NodeInfo}
     */
    NodeInfo,

    /**
     * The NodeLoadInfo model constructor.
     * @property {module:model/NodeLoadInfo}
     */
    NodeLoadInfo,

    /**
     * The NodeLoadMetricInformation model constructor.
     * @property {module:model/NodeLoadMetricInformation}
     */
    NodeLoadMetricInformation,

    /**
     * The NodeRepairImpactDescription model constructor.
     * @property {module:model/NodeRepairImpactDescription}
     */
    NodeRepairImpactDescription,

    /**
     * The NodeRepairTargetDescription model constructor.
     * @property {module:model/NodeRepairTargetDescription}
     */
    NodeRepairTargetDescription,

    /**
     * The NodeResult model constructor.
     * @property {module:model/NodeResult}
     */
    NodeResult,

    /**
     * The NodeStatus model constructor.
     * @property {module:model/NodeStatus}
     */
    NodeStatus,

    /**
     * The NodeTransitionProgress model constructor.
     * @property {module:model/NodeTransitionProgress}
     */
    NodeTransitionProgress,

    /**
     * The NodeTransitionResult model constructor.
     * @property {module:model/NodeTransitionResult}
     */
    NodeTransitionResult,

    /**
     * The NodeUpgradePhase model constructor.
     * @property {module:model/NodeUpgradePhase}
     */
    NodeUpgradePhase,

    /**
     * The NodeUpgradeProgressInfo model constructor.
     * @property {module:model/NodeUpgradeProgressInfo}
     */
    NodeUpgradeProgressInfo,

    /**
     * The NodesHealthEvaluation model constructor.
     * @property {module:model/NodesHealthEvaluation}
     */
    NodesHealthEvaluation,

    /**
     * The OperationState model constructor.
     * @property {module:model/OperationState}
     */
    OperationState,

    /**
     * The OperationStatus model constructor.
     * @property {module:model/OperationStatus}
     */
    OperationStatus,

    /**
     * The OperationType model constructor.
     * @property {module:model/OperationType}
     */
    OperationType,

    /**
     * The PackageSharingPolicyInfo model constructor.
     * @property {module:model/PackageSharingPolicyInfo}
     */
    PackageSharingPolicyInfo,

    /**
     * The PackageSharingPolicyScope model constructor.
     * @property {module:model/PackageSharingPolicyScope}
     */
    PackageSharingPolicyScope,

    /**
     * The PagedApplicationInfoList model constructor.
     * @property {module:model/PagedApplicationInfoList}
     */
    PagedApplicationInfoList,

    /**
     * The PagedApplicationTypeInfoList model constructor.
     * @property {module:model/PagedApplicationTypeInfoList}
     */
    PagedApplicationTypeInfoList,

    /**
     * The PagedComposeDeploymentStatusInfoList model constructor.
     * @property {module:model/PagedComposeDeploymentStatusInfoList}
     */
    PagedComposeDeploymentStatusInfoList,

    /**
     * The PagedDeployedApplicationInfoList model constructor.
     * @property {module:model/PagedDeployedApplicationInfoList}
     */
    PagedDeployedApplicationInfoList,

    /**
     * The PagedNodeInfoList model constructor.
     * @property {module:model/PagedNodeInfoList}
     */
    PagedNodeInfoList,

    /**
     * The PagedPropertyInfoList model constructor.
     * @property {module:model/PagedPropertyInfoList}
     */
    PagedPropertyInfoList,

    /**
     * The PagedReplicaInfoList model constructor.
     * @property {module:model/PagedReplicaInfoList}
     */
    PagedReplicaInfoList,

    /**
     * The PagedServiceInfoList model constructor.
     * @property {module:model/PagedServiceInfoList}
     */
    PagedServiceInfoList,

    /**
     * The PagedServicePartitionInfoList model constructor.
     * @property {module:model/PagedServicePartitionInfoList}
     */
    PagedServicePartitionInfoList,

    /**
     * The PagedSubNameInfoList model constructor.
     * @property {module:model/PagedSubNameInfoList}
     */
    PagedSubNameInfoList,

    /**
     * The PartitionAccessStatus model constructor.
     * @property {module:model/PartitionAccessStatus}
     */
    PartitionAccessStatus,

    /**
     * The PartitionDataLossProgress model constructor.
     * @property {module:model/PartitionDataLossProgress}
     */
    PartitionDataLossProgress,

    /**
     * The PartitionHealth model constructor.
     * @property {module:model/PartitionHealth}
     */
    PartitionHealth,

    /**
     * The PartitionHealthEvaluation model constructor.
     * @property {module:model/PartitionHealthEvaluation}
     */
    PartitionHealthEvaluation,

    /**
     * The PartitionHealthState model constructor.
     * @property {module:model/PartitionHealthState}
     */
    PartitionHealthState,

    /**
     * The PartitionHealthStateChunk model constructor.
     * @property {module:model/PartitionHealthStateChunk}
     */
    PartitionHealthStateChunk,

    /**
     * The PartitionHealthStateChunkList model constructor.
     * @property {module:model/PartitionHealthStateChunkList}
     */
    PartitionHealthStateChunkList,

    /**
     * The PartitionHealthStateFilter model constructor.
     * @property {module:model/PartitionHealthStateFilter}
     */
    PartitionHealthStateFilter,

    /**
     * The PartitionInformation model constructor.
     * @property {module:model/PartitionInformation}
     */
    PartitionInformation,

    /**
     * The PartitionLoadInformation model constructor.
     * @property {module:model/PartitionLoadInformation}
     */
    PartitionLoadInformation,

    /**
     * The PartitionQuorumLossProgress model constructor.
     * @property {module:model/PartitionQuorumLossProgress}
     */
    PartitionQuorumLossProgress,

    /**
     * The PartitionRestartProgress model constructor.
     * @property {module:model/PartitionRestartProgress}
     */
    PartitionRestartProgress,

    /**
     * The PartitionSafetyCheck model constructor.
     * @property {module:model/PartitionSafetyCheck}
     */
    PartitionSafetyCheck,

    /**
     * The PartitionScheme model constructor.
     * @property {module:model/PartitionScheme}
     */
    PartitionScheme,

    /**
     * The PartitionSchemeDescription model constructor.
     * @property {module:model/PartitionSchemeDescription}
     */
    PartitionSchemeDescription,

    /**
     * The PartitionsHealthEvaluation model constructor.
     * @property {module:model/PartitionsHealthEvaluation}
     */
    PartitionsHealthEvaluation,

    /**
     * The PrimaryReplicatorStatus model constructor.
     * @property {module:model/PrimaryReplicatorStatus}
     */
    PrimaryReplicatorStatus,

    /**
     * The PropertyBatchDescriptionList model constructor.
     * @property {module:model/PropertyBatchDescriptionList}
     */
    PropertyBatchDescriptionList,

    /**
     * The PropertyBatchInfo model constructor.
     * @property {module:model/PropertyBatchInfo}
     */
    PropertyBatchInfo,

    /**
     * The PropertyBatchInfoKind model constructor.
     * @property {module:model/PropertyBatchInfoKind}
     */
    PropertyBatchInfoKind,

    /**
     * The PropertyBatchOperation model constructor.
     * @property {module:model/PropertyBatchOperation}
     */
    PropertyBatchOperation,

    /**
     * The PropertyBatchOperationKind model constructor.
     * @property {module:model/PropertyBatchOperationKind}
     */
    PropertyBatchOperationKind,

    /**
     * The PropertyDescription model constructor.
     * @property {module:model/PropertyDescription}
     */
    PropertyDescription,

    /**
     * The PropertyInfo model constructor.
     * @property {module:model/PropertyInfo}
     */
    PropertyInfo,

    /**
     * The PropertyMetadata model constructor.
     * @property {module:model/PropertyMetadata}
     */
    PropertyMetadata,

    /**
     * The PropertyValue model constructor.
     * @property {module:model/PropertyValue}
     */
    PropertyValue,

    /**
     * The PropertyValueKind model constructor.
     * @property {module:model/PropertyValueKind}
     */
    PropertyValueKind,

    /**
     * The ProvisionApplicationTypeDescription model constructor.
     * @property {module:model/ProvisionApplicationTypeDescription}
     */
    ProvisionApplicationTypeDescription,

    /**
     * The ProvisionApplicationTypeDescriptionBase model constructor.
     * @property {module:model/ProvisionApplicationTypeDescriptionBase}
     */
    ProvisionApplicationTypeDescriptionBase,

    /**
     * The ProvisionApplicationTypeKind model constructor.
     * @property {module:model/ProvisionApplicationTypeKind}
     */
    ProvisionApplicationTypeKind,

    /**
     * The ProvisionFabricDescription model constructor.
     * @property {module:model/ProvisionFabricDescription}
     */
    ProvisionFabricDescription,

    /**
     * The PutPropertyBatchOperation model constructor.
     * @property {module:model/PutPropertyBatchOperation}
     */
    PutPropertyBatchOperation,

    /**
     * The ReconfigurationInformation model constructor.
     * @property {module:model/ReconfigurationInformation}
     */
    ReconfigurationInformation,

    /**
     * The ReconfigurationPhase model constructor.
     * @property {module:model/ReconfigurationPhase}
     */
    ReconfigurationPhase,

    /**
     * The ReconfigurationType model constructor.
     * @property {module:model/ReconfigurationType}
     */
    ReconfigurationType,

    /**
     * The RegistryCredential model constructor.
     * @property {module:model/RegistryCredential}
     */
    RegistryCredential,

    /**
     * The RemoteReplicatorAcknowledgementDetail model constructor.
     * @property {module:model/RemoteReplicatorAcknowledgementDetail}
     */
    RemoteReplicatorAcknowledgementDetail,

    /**
     * The RemoteReplicatorAcknowledgementStatus model constructor.
     * @property {module:model/RemoteReplicatorAcknowledgementStatus}
     */
    RemoteReplicatorAcknowledgementStatus,

    /**
     * The RemoteReplicatorStatus model constructor.
     * @property {module:model/RemoteReplicatorStatus}
     */
    RemoteReplicatorStatus,

    /**
     * The RepairImpactDescriptionBase model constructor.
     * @property {module:model/RepairImpactDescriptionBase}
     */
    RepairImpactDescriptionBase,

    /**
     * The RepairImpactKind model constructor.
     * @property {module:model/RepairImpactKind}
     */
    RepairImpactKind,

    /**
     * The RepairTargetDescriptionBase model constructor.
     * @property {module:model/RepairTargetDescriptionBase}
     */
    RepairTargetDescriptionBase,

    /**
     * The RepairTargetKind model constructor.
     * @property {module:model/RepairTargetKind}
     */
    RepairTargetKind,

    /**
     * The RepairTask model constructor.
     * @property {module:model/RepairTask}
     */
    RepairTask,

    /**
     * The RepairTaskApproveDescription model constructor.
     * @property {module:model/RepairTaskApproveDescription}
     */
    RepairTaskApproveDescription,

    /**
     * The RepairTaskCancelDescription model constructor.
     * @property {module:model/RepairTaskCancelDescription}
     */
    RepairTaskCancelDescription,

    /**
     * The RepairTaskDeleteDescription model constructor.
     * @property {module:model/RepairTaskDeleteDescription}
     */
    RepairTaskDeleteDescription,

    /**
     * The RepairTaskHealthCheckState model constructor.
     * @property {module:model/RepairTaskHealthCheckState}
     */
    RepairTaskHealthCheckState,

    /**
     * The RepairTaskHistory model constructor.
     * @property {module:model/RepairTaskHistory}
     */
    RepairTaskHistory,

    /**
     * The RepairTaskUpdateHealthPolicyDescription model constructor.
     * @property {module:model/RepairTaskUpdateHealthPolicyDescription}
     */
    RepairTaskUpdateHealthPolicyDescription,

    /**
     * The RepairTaskUpdateInfo model constructor.
     * @property {module:model/RepairTaskUpdateInfo}
     */
    RepairTaskUpdateInfo,

    /**
     * The ReplicaHealth model constructor.
     * @property {module:model/ReplicaHealth}
     */
    ReplicaHealth,

    /**
     * The ReplicaHealthEvaluation model constructor.
     * @property {module:model/ReplicaHealthEvaluation}
     */
    ReplicaHealthEvaluation,

    /**
     * The ReplicaHealthState model constructor.
     * @property {module:model/ReplicaHealthState}
     */
    ReplicaHealthState,

    /**
     * The ReplicaHealthStateChunk model constructor.
     * @property {module:model/ReplicaHealthStateChunk}
     */
    ReplicaHealthStateChunk,

    /**
     * The ReplicaHealthStateChunkList model constructor.
     * @property {module:model/ReplicaHealthStateChunkList}
     */
    ReplicaHealthStateChunkList,

    /**
     * The ReplicaHealthStateFilter model constructor.
     * @property {module:model/ReplicaHealthStateFilter}
     */
    ReplicaHealthStateFilter,

    /**
     * The ReplicaInfo model constructor.
     * @property {module:model/ReplicaInfo}
     */
    ReplicaInfo,

    /**
     * The ReplicaKind model constructor.
     * @property {module:model/ReplicaKind}
     */
    ReplicaKind,

    /**
     * The ReplicaRole model constructor.
     * @property {module:model/ReplicaRole}
     */
    ReplicaRole,

    /**
     * The ReplicaStatus model constructor.
     * @property {module:model/ReplicaStatus}
     */
    ReplicaStatus,

    /**
     * The ReplicaStatusBase model constructor.
     * @property {module:model/ReplicaStatusBase}
     */
    ReplicaStatusBase,

    /**
     * The ReplicasHealthEvaluation model constructor.
     * @property {module:model/ReplicasHealthEvaluation}
     */
    ReplicasHealthEvaluation,

    /**
     * The ReplicatorOperationName model constructor.
     * @property {module:model/ReplicatorOperationName}
     */
    ReplicatorOperationName,

    /**
     * The ReplicatorQueueStatus model constructor.
     * @property {module:model/ReplicatorQueueStatus}
     */
    ReplicatorQueueStatus,

    /**
     * The ReplicatorStatus model constructor.
     * @property {module:model/ReplicatorStatus}
     */
    ReplicatorStatus,

    /**
     * The ResolvedServiceEndpoint model constructor.
     * @property {module:model/ResolvedServiceEndpoint}
     */
    ResolvedServiceEndpoint,

    /**
     * The ResolvedServicePartition model constructor.
     * @property {module:model/ResolvedServicePartition}
     */
    ResolvedServicePartition,

    /**
     * The RestartDeployedCodePackageDescription model constructor.
     * @property {module:model/RestartDeployedCodePackageDescription}
     */
    RestartDeployedCodePackageDescription,

    /**
     * The RestartNodeDescription model constructor.
     * @property {module:model/RestartNodeDescription}
     */
    RestartNodeDescription,

    /**
     * The RestartPartitionResult model constructor.
     * @property {module:model/RestartPartitionResult}
     */
    RestartPartitionResult,

    /**
     * The ResumeApplicationUpgradeDescription model constructor.
     * @property {module:model/ResumeApplicationUpgradeDescription}
     */
    ResumeApplicationUpgradeDescription,

    /**
     * The ResumeClusterUpgradeDescription model constructor.
     * @property {module:model/ResumeClusterUpgradeDescription}
     */
    ResumeClusterUpgradeDescription,

    /**
     * The RollingUpgradeUpdateDescription model constructor.
     * @property {module:model/RollingUpgradeUpdateDescription}
     */
    RollingUpgradeUpdateDescription,

    /**
     * The SafetyCheck model constructor.
     * @property {module:model/SafetyCheck}
     */
    SafetyCheck,

    /**
     * The SafetyCheckKind model constructor.
     * @property {module:model/SafetyCheckKind}
     */
    SafetyCheckKind,

    /**
     * The SafetyCheckWrapper model constructor.
     * @property {module:model/SafetyCheckWrapper}
     */
    SafetyCheckWrapper,

    /**
     * The SecondaryActiveReplicatorStatus model constructor.
     * @property {module:model/SecondaryActiveReplicatorStatus}
     */
    SecondaryActiveReplicatorStatus,

    /**
     * The SecondaryIdleReplicatorStatus model constructor.
     * @property {module:model/SecondaryIdleReplicatorStatus}
     */
    SecondaryIdleReplicatorStatus,

    /**
     * The SecondaryReplicatorStatus model constructor.
     * @property {module:model/SecondaryReplicatorStatus}
     */
    SecondaryReplicatorStatus,

    /**
     * The SeedNodeSafetyCheck model constructor.
     * @property {module:model/SeedNodeSafetyCheck}
     */
    SeedNodeSafetyCheck,

    /**
     * The SelectedPartition model constructor.
     * @property {module:model/SelectedPartition}
     */
    SelectedPartition,

    /**
     * The ServiceCorrelationDescription model constructor.
     * @property {module:model/ServiceCorrelationDescription}
     */
    ServiceCorrelationDescription,

    /**
     * The ServiceCorrelationScheme model constructor.
     * @property {module:model/ServiceCorrelationScheme}
     */
    ServiceCorrelationScheme,

    /**
     * The ServiceDescription model constructor.
     * @property {module:model/ServiceDescription}
     */
    ServiceDescription,

    /**
     * The ServiceEndpointRole model constructor.
     * @property {module:model/ServiceEndpointRole}
     */
    ServiceEndpointRole,

    /**
     * The ServiceFromTemplateDescription model constructor.
     * @property {module:model/ServiceFromTemplateDescription}
     */
    ServiceFromTemplateDescription,

    /**
     * The ServiceHealth model constructor.
     * @property {module:model/ServiceHealth}
     */
    ServiceHealth,

    /**
     * The ServiceHealthEvaluation model constructor.
     * @property {module:model/ServiceHealthEvaluation}
     */
    ServiceHealthEvaluation,

    /**
     * The ServiceHealthState model constructor.
     * @property {module:model/ServiceHealthState}
     */
    ServiceHealthState,

    /**
     * The ServiceHealthStateChunk model constructor.
     * @property {module:model/ServiceHealthStateChunk}
     */
    ServiceHealthStateChunk,

    /**
     * The ServiceHealthStateChunkList model constructor.
     * @property {module:model/ServiceHealthStateChunkList}
     */
    ServiceHealthStateChunkList,

    /**
     * The ServiceHealthStateFilter model constructor.
     * @property {module:model/ServiceHealthStateFilter}
     */
    ServiceHealthStateFilter,

    /**
     * The ServiceInfo model constructor.
     * @property {module:model/ServiceInfo}
     */
    ServiceInfo,

    /**
     * The ServiceKind model constructor.
     * @property {module:model/ServiceKind}
     */
    ServiceKind,

    /**
     * The ServiceLoadMetricDescription model constructor.
     * @property {module:model/ServiceLoadMetricDescription}
     */
    ServiceLoadMetricDescription,

    /**
     * The ServiceLoadMetricWeight model constructor.
     * @property {module:model/ServiceLoadMetricWeight}
     */
    ServiceLoadMetricWeight,

    /**
     * The ServiceNameInfo model constructor.
     * @property {module:model/ServiceNameInfo}
     */
    ServiceNameInfo,

    /**
     * The ServiceOperationName model constructor.
     * @property {module:model/ServiceOperationName}
     */
    ServiceOperationName,

    /**
     * The ServicePackageActivationMode model constructor.
     * @property {module:model/ServicePackageActivationMode}
     */
    ServicePackageActivationMode,

    /**
     * The ServicePartitionInfo model constructor.
     * @property {module:model/ServicePartitionInfo}
     */
    ServicePartitionInfo,

    /**
     * The ServicePartitionKind model constructor.
     * @property {module:model/ServicePartitionKind}
     */
    ServicePartitionKind,

    /**
     * The ServicePartitionStatus model constructor.
     * @property {module:model/ServicePartitionStatus}
     */
    ServicePartitionStatus,

    /**
     * The ServicePlacementInvalidDomainPolicyDescription model constructor.
     * @property {module:model/ServicePlacementInvalidDomainPolicyDescription}
     */
    ServicePlacementInvalidDomainPolicyDescription,

    /**
     * The ServicePlacementNonPartiallyPlaceServicePolicyDescription model constructor.
     * @property {module:model/ServicePlacementNonPartiallyPlaceServicePolicyDescription}
     */
    ServicePlacementNonPartiallyPlaceServicePolicyDescription,

    /**
     * The ServicePlacementPolicyDescription model constructor.
     * @property {module:model/ServicePlacementPolicyDescription}
     */
    ServicePlacementPolicyDescription,

    /**
     * The ServicePlacementPolicyType model constructor.
     * @property {module:model/ServicePlacementPolicyType}
     */
    ServicePlacementPolicyType,

    /**
     * The ServicePlacementPreferPrimaryDomainPolicyDescription model constructor.
     * @property {module:model/ServicePlacementPreferPrimaryDomainPolicyDescription}
     */
    ServicePlacementPreferPrimaryDomainPolicyDescription,

    /**
     * The ServicePlacementRequireDomainDistributionPolicyDescription model constructor.
     * @property {module:model/ServicePlacementRequireDomainDistributionPolicyDescription}
     */
    ServicePlacementRequireDomainDistributionPolicyDescription,

    /**
     * The ServicePlacementRequiredDomainPolicyDescription model constructor.
     * @property {module:model/ServicePlacementRequiredDomainPolicyDescription}
     */
    ServicePlacementRequiredDomainPolicyDescription,

    /**
     * The ServiceStatus model constructor.
     * @property {module:model/ServiceStatus}
     */
    ServiceStatus,

    /**
     * The ServiceTypeDescription model constructor.
     * @property {module:model/ServiceTypeDescription}
     */
    ServiceTypeDescription,

    /**
     * The ServiceTypeExtensionDescription model constructor.
     * @property {module:model/ServiceTypeExtensionDescription}
     */
    ServiceTypeExtensionDescription,

    /**
     * The ServiceTypeHealthPolicy model constructor.
     * @property {module:model/ServiceTypeHealthPolicy}
     */
    ServiceTypeHealthPolicy,

    /**
     * The ServiceTypeHealthPolicyMapItem model constructor.
     * @property {module:model/ServiceTypeHealthPolicyMapItem}
     */
    ServiceTypeHealthPolicyMapItem,

    /**
     * The ServiceTypeInfo model constructor.
     * @property {module:model/ServiceTypeInfo}
     */
    ServiceTypeInfo,

    /**
     * The ServiceTypeManifest model constructor.
     * @property {module:model/ServiceTypeManifest}
     */
    ServiceTypeManifest,

    /**
     * The ServiceTypeRegistrationStatus model constructor.
     * @property {module:model/ServiceTypeRegistrationStatus}
     */
    ServiceTypeRegistrationStatus,

    /**
     * The ServiceUpdateDescription model constructor.
     * @property {module:model/ServiceUpdateDescription}
     */
    ServiceUpdateDescription,

    /**
     * The ServicesHealthEvaluation model constructor.
     * @property {module:model/ServicesHealthEvaluation}
     */
    ServicesHealthEvaluation,

    /**
     * The SingletonPartitionInformation model constructor.
     * @property {module:model/SingletonPartitionInformation}
     */
    SingletonPartitionInformation,

    /**
     * The SingletonPartitionSchemeDescription model constructor.
     * @property {module:model/SingletonPartitionSchemeDescription}
     */
    SingletonPartitionSchemeDescription,

    /**
     * The StartClusterUpgradeDescription model constructor.
     * @property {module:model/StartClusterUpgradeDescription}
     */
    StartClusterUpgradeDescription,

    /**
     * The StartedChaosEvent model constructor.
     * @property {module:model/StartedChaosEvent}
     */
    StartedChaosEvent,

    /**
     * The StatefulServiceDescription model constructor.
     * @property {module:model/StatefulServiceDescription}
     */
    StatefulServiceDescription,

    /**
     * The StatefulServiceInfo model constructor.
     * @property {module:model/StatefulServiceInfo}
     */
    StatefulServiceInfo,

    /**
     * The StatefulServicePartitionInfo model constructor.
     * @property {module:model/StatefulServicePartitionInfo}
     */
    StatefulServicePartitionInfo,

    /**
     * The StatefulServiceReplicaHealth model constructor.
     * @property {module:model/StatefulServiceReplicaHealth}
     */
    StatefulServiceReplicaHealth,

    /**
     * The StatefulServiceReplicaHealthState model constructor.
     * @property {module:model/StatefulServiceReplicaHealthState}
     */
    StatefulServiceReplicaHealthState,

    /**
     * The StatefulServiceReplicaInfo model constructor.
     * @property {module:model/StatefulServiceReplicaInfo}
     */
    StatefulServiceReplicaInfo,

    /**
     * The StatefulServiceTypeDescription model constructor.
     * @property {module:model/StatefulServiceTypeDescription}
     */
    StatefulServiceTypeDescription,

    /**
     * The StatefulServiceUpdateDescription model constructor.
     * @property {module:model/StatefulServiceUpdateDescription}
     */
    StatefulServiceUpdateDescription,

    /**
     * The StatelessServiceDescription model constructor.
     * @property {module:model/StatelessServiceDescription}
     */
    StatelessServiceDescription,

    /**
     * The StatelessServiceInfo model constructor.
     * @property {module:model/StatelessServiceInfo}
     */
    StatelessServiceInfo,

    /**
     * The StatelessServiceInstanceHealth model constructor.
     * @property {module:model/StatelessServiceInstanceHealth}
     */
    StatelessServiceInstanceHealth,

    /**
     * The StatelessServiceInstanceHealthState model constructor.
     * @property {module:model/StatelessServiceInstanceHealthState}
     */
    StatelessServiceInstanceHealthState,

    /**
     * The StatelessServiceInstanceInfo model constructor.
     * @property {module:model/StatelessServiceInstanceInfo}
     */
    StatelessServiceInstanceInfo,

    /**
     * The StatelessServicePartitionInfo model constructor.
     * @property {module:model/StatelessServicePartitionInfo}
     */
    StatelessServicePartitionInfo,

    /**
     * The StatelessServiceTypeDescription model constructor.
     * @property {module:model/StatelessServiceTypeDescription}
     */
    StatelessServiceTypeDescription,

    /**
     * The StatelessServiceUpdateDescription model constructor.
     * @property {module:model/StatelessServiceUpdateDescription}
     */
    StatelessServiceUpdateDescription,

    /**
     * The StoppedChaosEvent model constructor.
     * @property {module:model/StoppedChaosEvent}
     */
    StoppedChaosEvent,

    /**
     * The StringPropertyValue model constructor.
     * @property {module:model/StringPropertyValue}
     */
    StringPropertyValue,

    /**
     * The SuccessfulPropertyBatchInfo model constructor.
     * @property {module:model/SuccessfulPropertyBatchInfo}
     */
    SuccessfulPropertyBatchInfo,

    /**
     * The SystemApplicationHealthEvaluation model constructor.
     * @property {module:model/SystemApplicationHealthEvaluation}
     */
    SystemApplicationHealthEvaluation,

    /**
     * The TestErrorChaosEvent model constructor.
     * @property {module:model/TestErrorChaosEvent}
     */
    TestErrorChaosEvent,

    /**
     * The UniformInt64RangePartitionSchemeDescription model constructor.
     * @property {module:model/UniformInt64RangePartitionSchemeDescription}
     */
    UniformInt64RangePartitionSchemeDescription,

    /**
     * The UnprovisionApplicationTypeDescriptionInfo model constructor.
     * @property {module:model/UnprovisionApplicationTypeDescriptionInfo}
     */
    UnprovisionApplicationTypeDescriptionInfo,

    /**
     * The UnprovisionFabricDescription model constructor.
     * @property {module:model/UnprovisionFabricDescription}
     */
    UnprovisionFabricDescription,

    /**
     * The UpdateClusterUpgradeDescription model constructor.
     * @property {module:model/UpdateClusterUpgradeDescription}
     */
    UpdateClusterUpgradeDescription,

    /**
     * The UpgradeDomainDeltaNodesCheckHealthEvaluation model constructor.
     * @property {module:model/UpgradeDomainDeltaNodesCheckHealthEvaluation}
     */
    UpgradeDomainDeltaNodesCheckHealthEvaluation,

    /**
     * The UpgradeDomainInfo model constructor.
     * @property {module:model/UpgradeDomainInfo}
     */
    UpgradeDomainInfo,

    /**
     * The UpgradeDomainNodesHealthEvaluation model constructor.
     * @property {module:model/UpgradeDomainNodesHealthEvaluation}
     */
    UpgradeDomainNodesHealthEvaluation,

    /**
     * The UpgradeDomainState model constructor.
     * @property {module:model/UpgradeDomainState}
     */
    UpgradeDomainState,

    /**
     * The UpgradeKind model constructor.
     * @property {module:model/UpgradeKind}
     */
    UpgradeKind,

    /**
     * The UpgradeMode model constructor.
     * @property {module:model/UpgradeMode}
     */
    UpgradeMode,

    /**
     * The UpgradeOrchestrationServiceState model constructor.
     * @property {module:model/UpgradeOrchestrationServiceState}
     */
    UpgradeOrchestrationServiceState,

    /**
     * The UpgradeOrchestrationServiceStateSummary model constructor.
     * @property {module:model/UpgradeOrchestrationServiceStateSummary}
     */
    UpgradeOrchestrationServiceStateSummary,

    /**
     * The UpgradeState model constructor.
     * @property {module:model/UpgradeState}
     */
    UpgradeState,

    /**
     * The UpgradeType model constructor.
     * @property {module:model/UpgradeType}
     */
    UpgradeType,

    /**
     * The UploadChunkRange model constructor.
     * @property {module:model/UploadChunkRange}
     */
    UploadChunkRange,

    /**
     * The UploadSession model constructor.
     * @property {module:model/UploadSession}
     */
    UploadSession,

    /**
     * The UploadSessionInfo model constructor.
     * @property {module:model/UploadSessionInfo}
     */
    UploadSessionInfo,

    /**
     * The ValidationFailedChaosEvent model constructor.
     * @property {module:model/ValidationFailedChaosEvent}
     */
    ValidationFailedChaosEvent,

    /**
     * The WaitForInbuildReplicaSafetyCheck model constructor.
     * @property {module:model/WaitForInbuildReplicaSafetyCheck}
     */
    WaitForInbuildReplicaSafetyCheck,

    /**
     * The WaitForPrimaryPlacementSafetyCheck model constructor.
     * @property {module:model/WaitForPrimaryPlacementSafetyCheck}
     */
    WaitForPrimaryPlacementSafetyCheck,

    /**
     * The WaitForPrimarySwapSafetyCheck model constructor.
     * @property {module:model/WaitForPrimarySwapSafetyCheck}
     */
    WaitForPrimarySwapSafetyCheck,

    /**
     * The WaitForReconfigurationSafetyCheck model constructor.
     * @property {module:model/WaitForReconfigurationSafetyCheck}
     */
    WaitForReconfigurationSafetyCheck,

    /**
     * The WaitingChaosEvent model constructor.
     * @property {module:model/WaitingChaosEvent}
     */
    WaitingChaosEvent,

    /**
    * The ApplicationApi service constructor.
    * @property {module:api/ApplicationApi}
    */
    ApplicationApi,

    /**
    * The ApplicationTypeApi service constructor.
    * @property {module:api/ApplicationTypeApi}
    */
    ApplicationTypeApi,

    /**
    * The ChaosApi service constructor.
    * @property {module:api/ChaosApi}
    */
    ChaosApi,

    /**
    * The ClusterApi service constructor.
    * @property {module:api/ClusterApi}
    */
    ClusterApi,

    /**
    * The CodePackageApi service constructor.
    * @property {module:api/CodePackageApi}
    */
    CodePackageApi,

    /**
    * The ComposeDeploymentApi service constructor.
    * @property {module:api/ComposeDeploymentApi}
    */
    ComposeDeploymentApi,

    /**
    * The FaultsApi service constructor.
    * @property {module:api/FaultsApi}
    */
    FaultsApi,

    /**
    * The ImageStoreApi service constructor.
    * @property {module:api/ImageStoreApi}
    */
    ImageStoreApi,

    /**
    * The InfrastructureApi service constructor.
    * @property {module:api/InfrastructureApi}
    */
    InfrastructureApi,

    /**
    * The NodeApi service constructor.
    * @property {module:api/NodeApi}
    */
    NodeApi,

    /**
    * The PartitionApi service constructor.
    * @property {module:api/PartitionApi}
    */
    PartitionApi,

    /**
    * The PropertyManagementApi service constructor.
    * @property {module:api/PropertyManagementApi}
    */
    PropertyManagementApi,

    /**
    * The RepairManagementApi service constructor.
    * @property {module:api/RepairManagementApi}
    */
    RepairManagementApi,

    /**
    * The ReplicaApi service constructor.
    * @property {module:api/ReplicaApi}
    */
    ReplicaApi,

    /**
    * The ServiceApi service constructor.
    * @property {module:api/ServiceApi}
    */
    ServiceApi,

    /**
    * The ServicePackageApi service constructor.
    * @property {module:api/ServicePackageApi}
    */
    ServicePackageApi,

    /**
    * The ServiceTypeApi service constructor.
    * @property {module:api/ServiceTypeApi}
    */
    ServiceTypeApi
};
