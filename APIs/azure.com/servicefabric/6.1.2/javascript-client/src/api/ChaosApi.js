/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ChaosParameters from '../model/ChaosParameters';
import ChaosReport from '../model/ChaosReport';
import FabricError from '../model/FabricError';

/**
* Chaos service.
* @module api/ChaosApi
* @version 6.1.2
*/
export default class ChaosApi {

    /**
    * Constructs a new ChaosApi. 
    * @alias module:api/ChaosApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getChaosReport operation.
     * @callback module:api/ChaosApi~getChaosReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChaosReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the next segment of the Chaos report based on the passed-in continuation token or the passed-in time-range.
     * You can either specify the ContinuationToken to get the next segment of the Chaos report or you can specify the time-range through StartTimeUtc and EndTimeUtc, but you cannot specify both the ContinuationToken and the time-range in the same call. When there are more than 100 Chaos events, the Chaos report is returned in segments where a segment contains no more than 100 Chaos events. 
     * @param {module:model/String} apiVersion The version of this API. This is a required parameter and its value must be \"6.0\".  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accept any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0, but if the runtime is 6.1, in order to make it easier to write the clients, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. 
     * @param {Object} opts Optional parameters
     * @param {String} [continuationToken] The continuation token parameter is used to obtain next set of results. A continuation token with a non empty value is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results then the continuation token does not contain a value. The value of this parameter should not be URL encoded.
     * @param {String} [startTimeUtc] The Windows file time representing the start time of the time range for which a Chaos report is to be generated. Please consult [DateTime.ToFileTimeUtc Method](https://msdn.microsoft.com/en-us/library/system.datetime.tofiletimeutc(v=vs.110).aspx) for details.
     * @param {String} [endTimeUtc] The Windows file time representing the end time of the time range for which a Chaos report is to be generated. Please consult [DateTime.ToFileTimeUtc Method](https://msdn.microsoft.com/en-us/library/system.datetime.tofiletimeutc(v=vs.110).aspx) for details.
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/ChaosApi~getChaosReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChaosReport}
     */
    getChaosReport(apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getChaosReport");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        'ContinuationToken': opts['continuationToken'],
        'StartTimeUtc': opts['startTimeUtc'],
        'EndTimeUtc': opts['endTimeUtc'],
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ChaosReport;
      return this.apiClient.callApi(
        '/Tools/Chaos/$/Report', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the startChaos operation.
     * @callback module:api/ChaosApi~startChaosCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Starts Chaos in the cluster.
     * If Chaos is not already running in the cluster, it starts Chaos with the passed in Chaos parameters. If Chaos is already running when this call is made, the call fails with the error code FABRIC_E_CHAOS_ALREADY_RUNNING. Please refer to the article [Induce controlled Chaos in Service Fabric clusters](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-controlled-chaos) for more details. 
     * @param {module:model/String} apiVersion The version of this API. This is a required parameter and its value must be \"6.0\".  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accept any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0, but if the runtime is 6.1, in order to make it easier to write the clients, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. 
     * @param {module:model/ChaosParameters} chaosParameters Describes all the parameters to configure a Chaos run.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/ChaosApi~startChaosCallback} callback The callback function, accepting three arguments: error, data, response
     */
    startChaos(apiVersion, chaosParameters, opts, callback) {
      opts = opts || {};
      let postBody = chaosParameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling startChaos");
      }
      // verify the required parameter 'chaosParameters' is set
      if (chaosParameters === undefined || chaosParameters === null) {
        throw new Error("Missing the required parameter 'chaosParameters' when calling startChaos");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Tools/Chaos/$/Start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the stopChaos operation.
     * @callback module:api/ChaosApi~stopChaosCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Stops Chaos in the cluster if it is already running, otherwise it does nothing.
     * Stops Chaos from scheduling further faults; but, the in-flight faults are not affected.
     * @param {module:model/String} apiVersion The version of this API. This is a required parameter and its value must be \"6.0\".  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accept any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0, but if the runtime is 6.1, in order to make it easier to write the clients, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. 
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/ChaosApi~stopChaosCallback} callback The callback function, accepting three arguments: error, data, response
     */
    stopChaos(apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling stopChaos");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Tools/Chaos/$/Stop', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
