/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.
 */
@JsonAdapter(SafetyCheckKind.Adapter.class)
public enum SafetyCheckKind {
  
  INVALID("Invalid"),
  
  ENSURE_SEED_NODE_QUORUM("EnsureSeedNodeQuorum"),
  
  ENSURE_PARTITION_QUORUM("EnsurePartitionQuorum"),
  
  WAIT_FOR_PRIMARY_PLACEMENT("WaitForPrimaryPlacement"),
  
  WAIT_FOR_PRIMARY_SWAP("WaitForPrimarySwap"),
  
  WAIT_FOR_RECONFIGURATION("WaitForReconfiguration"),
  
  WAIT_FOR_INBUILD_REPLICA("WaitForInbuildReplica"),
  
  ENSURE_AVAILABILITY("EnsureAvailability");

  private String value;

  SafetyCheckKind(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static SafetyCheckKind fromValue(String value) {
    for (SafetyCheckKind b : SafetyCheckKind.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<SafetyCheckKind> {
    @Override
    public void write(final JsonWriter jsonWriter, final SafetyCheckKind enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public SafetyCheckKind read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return SafetyCheckKind.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    SafetyCheckKind.fromValue(value);
  }
}

