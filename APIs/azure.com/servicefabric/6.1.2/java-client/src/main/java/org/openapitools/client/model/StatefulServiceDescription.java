/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MoveCost;
import org.openapitools.client.model.PartitionSchemeDescription;
import org.openapitools.client.model.ServiceCorrelationDescription;
import org.openapitools.client.model.ServiceDescription;
import org.openapitools.client.model.ServiceKind;
import org.openapitools.client.model.ServiceLoadMetricDescription;
import org.openapitools.client.model.ServicePackageActivationMode;
import org.openapitools.client.model.ServicePlacementPolicyDescription;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes a stateful service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:57:08.089721-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StatefulServiceDescription extends ServiceDescription {
  public static final String SERIALIZED_NAME_FLAGS = "Flags";
  @SerializedName(SERIALIZED_NAME_FLAGS)
  private Integer flags;

  public static final String SERIALIZED_NAME_HAS_PERSISTED_STATE = "HasPersistedState";
  @SerializedName(SERIALIZED_NAME_HAS_PERSISTED_STATE)
  private Boolean hasPersistedState;

  public static final String SERIALIZED_NAME_MIN_REPLICA_SET_SIZE = "MinReplicaSetSize";
  @SerializedName(SERIALIZED_NAME_MIN_REPLICA_SET_SIZE)
  private Integer minReplicaSetSize;

  public static final String SERIALIZED_NAME_QUORUM_LOSS_WAIT_DURATION_SECONDS = "QuorumLossWaitDurationSeconds";
  @SerializedName(SERIALIZED_NAME_QUORUM_LOSS_WAIT_DURATION_SECONDS)
  private Long quorumLossWaitDurationSeconds;

  public static final String SERIALIZED_NAME_REPLICA_RESTART_WAIT_DURATION_SECONDS = "ReplicaRestartWaitDurationSeconds";
  @SerializedName(SERIALIZED_NAME_REPLICA_RESTART_WAIT_DURATION_SECONDS)
  private Long replicaRestartWaitDurationSeconds;

  public static final String SERIALIZED_NAME_STAND_BY_REPLICA_KEEP_DURATION_SECONDS = "StandByReplicaKeepDurationSeconds";
  @SerializedName(SERIALIZED_NAME_STAND_BY_REPLICA_KEEP_DURATION_SECONDS)
  private Long standByReplicaKeepDurationSeconds;

  public static final String SERIALIZED_NAME_TARGET_REPLICA_SET_SIZE = "TargetReplicaSetSize";
  @SerializedName(SERIALIZED_NAME_TARGET_REPLICA_SET_SIZE)
  private Integer targetReplicaSetSize;

  public StatefulServiceDescription() {
    this.serviceKind = this.getClass().getSimpleName();
  }

  public StatefulServiceDescription flags(Integer flags) {
    this.flags = flags;
    return this;
  }

  /**
   * Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified. This property can be a combination of those flags obtained using bitwise &#39;OR&#39; operator. For example, if the provided value is 6 then the flags for QuorumLossWaitDuration (2) and StandByReplicaKeepDuration(4) are set.  - None - Does not indicate any other properties are set. The value is zero. - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is 1. - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 2. - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 4. 
   * @return flags
   */
  @javax.annotation.Nullable
  public Integer getFlags() {
    return flags;
  }

  public void setFlags(Integer flags) {
    this.flags = flags;
  }


  public StatefulServiceDescription hasPersistedState(Boolean hasPersistedState) {
    this.hasPersistedState = hasPersistedState;
    return this;
  }

  /**
   * A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false.
   * @return hasPersistedState
   */
  @javax.annotation.Nonnull
  public Boolean getHasPersistedState() {
    return hasPersistedState;
  }

  public void setHasPersistedState(Boolean hasPersistedState) {
    this.hasPersistedState = hasPersistedState;
  }


  public StatefulServiceDescription minReplicaSetSize(Integer minReplicaSetSize) {
    this.minReplicaSetSize = minReplicaSetSize;
    return this;
  }

  /**
   * The minimum replica set size as a number.
   * minimum: 1
   * @return minReplicaSetSize
   */
  @javax.annotation.Nonnull
  public Integer getMinReplicaSetSize() {
    return minReplicaSetSize;
  }

  public void setMinReplicaSetSize(Integer minReplicaSetSize) {
    this.minReplicaSetSize = minReplicaSetSize;
  }


  public StatefulServiceDescription quorumLossWaitDurationSeconds(Long quorumLossWaitDurationSeconds) {
    this.quorumLossWaitDurationSeconds = quorumLossWaitDurationSeconds;
    return this;
  }

  /**
   * The maximum duration, in seconds, for which a partition is allowed to be in a state of quorum loss.
   * minimum: 0
   * maximum: 4294967295
   * @return quorumLossWaitDurationSeconds
   */
  @javax.annotation.Nullable
  public Long getQuorumLossWaitDurationSeconds() {
    return quorumLossWaitDurationSeconds;
  }

  public void setQuorumLossWaitDurationSeconds(Long quorumLossWaitDurationSeconds) {
    this.quorumLossWaitDurationSeconds = quorumLossWaitDurationSeconds;
  }


  public StatefulServiceDescription replicaRestartWaitDurationSeconds(Long replicaRestartWaitDurationSeconds) {
    this.replicaRestartWaitDurationSeconds = replicaRestartWaitDurationSeconds;
    return this;
  }

  /**
   * The duration, in seconds, between when a replica goes down and when a new replica is created.
   * minimum: 0
   * maximum: 4294967295
   * @return replicaRestartWaitDurationSeconds
   */
  @javax.annotation.Nullable
  public Long getReplicaRestartWaitDurationSeconds() {
    return replicaRestartWaitDurationSeconds;
  }

  public void setReplicaRestartWaitDurationSeconds(Long replicaRestartWaitDurationSeconds) {
    this.replicaRestartWaitDurationSeconds = replicaRestartWaitDurationSeconds;
  }


  public StatefulServiceDescription standByReplicaKeepDurationSeconds(Long standByReplicaKeepDurationSeconds) {
    this.standByReplicaKeepDurationSeconds = standByReplicaKeepDurationSeconds;
    return this;
  }

  /**
   * The definition on how long StandBy replicas should be maintained before being removed.
   * minimum: 0
   * maximum: 4294967295
   * @return standByReplicaKeepDurationSeconds
   */
  @javax.annotation.Nullable
  public Long getStandByReplicaKeepDurationSeconds() {
    return standByReplicaKeepDurationSeconds;
  }

  public void setStandByReplicaKeepDurationSeconds(Long standByReplicaKeepDurationSeconds) {
    this.standByReplicaKeepDurationSeconds = standByReplicaKeepDurationSeconds;
  }


  public StatefulServiceDescription targetReplicaSetSize(Integer targetReplicaSetSize) {
    this.targetReplicaSetSize = targetReplicaSetSize;
    return this;
  }

  /**
   * The target replica set size as a number.
   * minimum: 1
   * @return targetReplicaSetSize
   */
  @javax.annotation.Nonnull
  public Integer getTargetReplicaSetSize() {
    return targetReplicaSetSize;
  }

  public void setTargetReplicaSetSize(Integer targetReplicaSetSize) {
    this.targetReplicaSetSize = targetReplicaSetSize;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatefulServiceDescription statefulServiceDescription = (StatefulServiceDescription) o;
    return Objects.equals(this.flags, statefulServiceDescription.flags) &&
        Objects.equals(this.hasPersistedState, statefulServiceDescription.hasPersistedState) &&
        Objects.equals(this.minReplicaSetSize, statefulServiceDescription.minReplicaSetSize) &&
        Objects.equals(this.quorumLossWaitDurationSeconds, statefulServiceDescription.quorumLossWaitDurationSeconds) &&
        Objects.equals(this.replicaRestartWaitDurationSeconds, statefulServiceDescription.replicaRestartWaitDurationSeconds) &&
        Objects.equals(this.standByReplicaKeepDurationSeconds, statefulServiceDescription.standByReplicaKeepDurationSeconds) &&
        Objects.equals(this.targetReplicaSetSize, statefulServiceDescription.targetReplicaSetSize) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(flags, hasPersistedState, minReplicaSetSize, quorumLossWaitDurationSeconds, replicaRestartWaitDurationSeconds, standByReplicaKeepDurationSeconds, targetReplicaSetSize, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatefulServiceDescription {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    hasPersistedState: ").append(toIndentedString(hasPersistedState)).append("\n");
    sb.append("    minReplicaSetSize: ").append(toIndentedString(minReplicaSetSize)).append("\n");
    sb.append("    quorumLossWaitDurationSeconds: ").append(toIndentedString(quorumLossWaitDurationSeconds)).append("\n");
    sb.append("    replicaRestartWaitDurationSeconds: ").append(toIndentedString(replicaRestartWaitDurationSeconds)).append("\n");
    sb.append("    standByReplicaKeepDurationSeconds: ").append(toIndentedString(standByReplicaKeepDurationSeconds)).append("\n");
    sb.append("    targetReplicaSetSize: ").append(toIndentedString(targetReplicaSetSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApplicationName");
    openapiFields.add("CorrelationScheme");
    openapiFields.add("DefaultMoveCost");
    openapiFields.add("InitializationData");
    openapiFields.add("IsDefaultMoveCostSpecified");
    openapiFields.add("PartitionDescription");
    openapiFields.add("PlacementConstraints");
    openapiFields.add("ServiceDnsName");
    openapiFields.add("ServiceKind");
    openapiFields.add("ServiceLoadMetrics");
    openapiFields.add("ServiceName");
    openapiFields.add("ServicePackageActivationMode");
    openapiFields.add("ServicePlacementPolicies");
    openapiFields.add("ServiceTypeName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("HasPersistedState");
    openapiRequiredFields.add("MinReplicaSetSize");
    openapiRequiredFields.add("TargetReplicaSetSize");
    openapiRequiredFields.add("PartitionDescription");
    openapiRequiredFields.add("ServiceKind");
    openapiRequiredFields.add("ServiceName");
    openapiRequiredFields.add("ServiceTypeName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StatefulServiceDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StatefulServiceDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StatefulServiceDescription is not found in the empty JSON string", StatefulServiceDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StatefulServiceDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StatefulServiceDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StatefulServiceDescription.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StatefulServiceDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StatefulServiceDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StatefulServiceDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StatefulServiceDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<StatefulServiceDescription>() {
           @Override
           public void write(JsonWriter out, StatefulServiceDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StatefulServiceDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StatefulServiceDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StatefulServiceDescription
   * @throws IOException if the JSON string is invalid with respect to StatefulServiceDescription
   */
  public static StatefulServiceDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StatefulServiceDescription.class);
  }

  /**
   * Convert an instance of StatefulServiceDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

