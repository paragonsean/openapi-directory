/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ChaosContext;
import org.openapitools.client.model.ChaosTargetFilter;
import org.openapitools.client.model.ClusterHealthPolicy;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ChaosParameters
 */
public class ChaosParametersTest {
    private final ChaosParameters model = new ChaosParameters();

    /**
     * Model tests for ChaosParameters
     */
    @Test
    public void testChaosParameters() {
        // TODO: test ChaosParameters
    }

    /**
     * Test the property 'chaosTargetFilter'
     */
    @Test
    public void chaosTargetFilterTest() {
        // TODO: test chaosTargetFilter
    }

    /**
     * Test the property 'clusterHealthPolicy'
     */
    @Test
    public void clusterHealthPolicyTest() {
        // TODO: test clusterHealthPolicy
    }

    /**
     * Test the property 'context'
     */
    @Test
    public void contextTest() {
        // TODO: test context
    }

    /**
     * Test the property 'enableMoveReplicaFaults'
     */
    @Test
    public void enableMoveReplicaFaultsTest() {
        // TODO: test enableMoveReplicaFaults
    }

    /**
     * Test the property 'maxClusterStabilizationTimeoutInSeconds'
     */
    @Test
    public void maxClusterStabilizationTimeoutInSecondsTest() {
        // TODO: test maxClusterStabilizationTimeoutInSeconds
    }

    /**
     * Test the property 'maxConcurrentFaults'
     */
    @Test
    public void maxConcurrentFaultsTest() {
        // TODO: test maxConcurrentFaults
    }

    /**
     * Test the property 'timeToRunInSeconds'
     */
    @Test
    public void timeToRunInSecondsTest() {
        // TODO: test timeToRunInSeconds
    }

    /**
     * Test the property 'waitTimeBetweenFaultsInSeconds'
     */
    @Test
    public void waitTimeBetweenFaultsInSecondsTest() {
        // TODO: test waitTimeBetweenFaultsInSeconds
    }

    /**
     * Test the property 'waitTimeBetweenIterationsInSeconds'
     */
    @Test
    public void waitTimeBetweenIterationsInSecondsTest() {
        // TODO: test waitTimeBetweenIterationsInSeconds
    }

}
