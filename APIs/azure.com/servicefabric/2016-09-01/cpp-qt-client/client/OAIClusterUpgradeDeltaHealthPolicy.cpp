/**
 * ServiceFabricManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterUpgradeDeltaHealthPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterUpgradeDeltaHealthPolicy::OAIClusterUpgradeDeltaHealthPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterUpgradeDeltaHealthPolicy::OAIClusterUpgradeDeltaHealthPolicy() {
    this->initializeModel();
}

OAIClusterUpgradeDeltaHealthPolicy::~OAIClusterUpgradeDeltaHealthPolicy() {}

void OAIClusterUpgradeDeltaHealthPolicy::initializeModel() {

    m_max_percent_delta_unhealthy_applications_isSet = false;
    m_max_percent_delta_unhealthy_applications_isValid = false;

    m_max_percent_delta_unhealthy_nodes_isSet = false;
    m_max_percent_delta_unhealthy_nodes_isValid = false;

    m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet = false;
    m_max_percent_upgrade_domain_delta_unhealthy_nodes_isValid = false;
}

void OAIClusterUpgradeDeltaHealthPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterUpgradeDeltaHealthPolicy::fromJsonObject(QJsonObject json) {

    m_max_percent_delta_unhealthy_applications_isValid = ::OpenAPI::fromJsonValue(m_max_percent_delta_unhealthy_applications, json[QString("maxPercentDeltaUnhealthyApplications")]);
    m_max_percent_delta_unhealthy_applications_isSet = !json[QString("maxPercentDeltaUnhealthyApplications")].isNull() && m_max_percent_delta_unhealthy_applications_isValid;

    m_max_percent_delta_unhealthy_nodes_isValid = ::OpenAPI::fromJsonValue(m_max_percent_delta_unhealthy_nodes, json[QString("maxPercentDeltaUnhealthyNodes")]);
    m_max_percent_delta_unhealthy_nodes_isSet = !json[QString("maxPercentDeltaUnhealthyNodes")].isNull() && m_max_percent_delta_unhealthy_nodes_isValid;

    m_max_percent_upgrade_domain_delta_unhealthy_nodes_isValid = ::OpenAPI::fromJsonValue(m_max_percent_upgrade_domain_delta_unhealthy_nodes, json[QString("maxPercentUpgradeDomainDeltaUnhealthyNodes")]);
    m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet = !json[QString("maxPercentUpgradeDomainDeltaUnhealthyNodes")].isNull() && m_max_percent_upgrade_domain_delta_unhealthy_nodes_isValid;
}

QString OAIClusterUpgradeDeltaHealthPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterUpgradeDeltaHealthPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_max_percent_delta_unhealthy_applications_isSet) {
        obj.insert(QString("maxPercentDeltaUnhealthyApplications"), ::OpenAPI::toJsonValue(m_max_percent_delta_unhealthy_applications));
    }
    if (m_max_percent_delta_unhealthy_nodes_isSet) {
        obj.insert(QString("maxPercentDeltaUnhealthyNodes"), ::OpenAPI::toJsonValue(m_max_percent_delta_unhealthy_nodes));
    }
    if (m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet) {
        obj.insert(QString("maxPercentUpgradeDomainDeltaUnhealthyNodes"), ::OpenAPI::toJsonValue(m_max_percent_upgrade_domain_delta_unhealthy_nodes));
    }
    return obj;
}

qint32 OAIClusterUpgradeDeltaHealthPolicy::getMaxPercentDeltaUnhealthyApplications() const {
    return m_max_percent_delta_unhealthy_applications;
}
void OAIClusterUpgradeDeltaHealthPolicy::setMaxPercentDeltaUnhealthyApplications(const qint32 &max_percent_delta_unhealthy_applications) {
    m_max_percent_delta_unhealthy_applications = max_percent_delta_unhealthy_applications;
    m_max_percent_delta_unhealthy_applications_isSet = true;
}

bool OAIClusterUpgradeDeltaHealthPolicy::is_max_percent_delta_unhealthy_applications_Set() const{
    return m_max_percent_delta_unhealthy_applications_isSet;
}

bool OAIClusterUpgradeDeltaHealthPolicy::is_max_percent_delta_unhealthy_applications_Valid() const{
    return m_max_percent_delta_unhealthy_applications_isValid;
}

qint32 OAIClusterUpgradeDeltaHealthPolicy::getMaxPercentDeltaUnhealthyNodes() const {
    return m_max_percent_delta_unhealthy_nodes;
}
void OAIClusterUpgradeDeltaHealthPolicy::setMaxPercentDeltaUnhealthyNodes(const qint32 &max_percent_delta_unhealthy_nodes) {
    m_max_percent_delta_unhealthy_nodes = max_percent_delta_unhealthy_nodes;
    m_max_percent_delta_unhealthy_nodes_isSet = true;
}

bool OAIClusterUpgradeDeltaHealthPolicy::is_max_percent_delta_unhealthy_nodes_Set() const{
    return m_max_percent_delta_unhealthy_nodes_isSet;
}

bool OAIClusterUpgradeDeltaHealthPolicy::is_max_percent_delta_unhealthy_nodes_Valid() const{
    return m_max_percent_delta_unhealthy_nodes_isValid;
}

qint32 OAIClusterUpgradeDeltaHealthPolicy::getMaxPercentUpgradeDomainDeltaUnhealthyNodes() const {
    return m_max_percent_upgrade_domain_delta_unhealthy_nodes;
}
void OAIClusterUpgradeDeltaHealthPolicy::setMaxPercentUpgradeDomainDeltaUnhealthyNodes(const qint32 &max_percent_upgrade_domain_delta_unhealthy_nodes) {
    m_max_percent_upgrade_domain_delta_unhealthy_nodes = max_percent_upgrade_domain_delta_unhealthy_nodes;
    m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet = true;
}

bool OAIClusterUpgradeDeltaHealthPolicy::is_max_percent_upgrade_domain_delta_unhealthy_nodes_Set() const{
    return m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet;
}

bool OAIClusterUpgradeDeltaHealthPolicy::is_max_percent_upgrade_domain_delta_unhealthy_nodes_Valid() const{
    return m_max_percent_upgrade_domain_delta_unhealthy_nodes_isValid;
}

bool OAIClusterUpgradeDeltaHealthPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_percent_delta_unhealthy_applications_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_percent_delta_unhealthy_nodes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterUpgradeDeltaHealthPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_max_percent_delta_unhealthy_applications_isValid && m_max_percent_delta_unhealthy_nodes_isValid && m_max_percent_upgrade_domain_delta_unhealthy_nodes_isValid && true;
}

} // namespace OpenAPI
