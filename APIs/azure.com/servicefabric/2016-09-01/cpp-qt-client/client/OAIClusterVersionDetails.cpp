/**
 * ServiceFabricManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterVersionDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterVersionDetails::OAIClusterVersionDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterVersionDetails::OAIClusterVersionDetails() {
    this->initializeModel();
}

OAIClusterVersionDetails::~OAIClusterVersionDetails() {}

void OAIClusterVersionDetails::initializeModel() {

    m_code_version_isSet = false;
    m_code_version_isValid = false;

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_support_expiry_utc_isSet = false;
    m_support_expiry_utc_isValid = false;
}

void OAIClusterVersionDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterVersionDetails::fromJsonObject(QJsonObject json) {

    m_code_version_isValid = ::OpenAPI::fromJsonValue(m_code_version, json[QString("codeVersion")]);
    m_code_version_isSet = !json[QString("codeVersion")].isNull() && m_code_version_isValid;

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("environment")]);
    m_environment_isSet = !json[QString("environment")].isNull() && m_environment_isValid;

    m_support_expiry_utc_isValid = ::OpenAPI::fromJsonValue(m_support_expiry_utc, json[QString("supportExpiryUtc")]);
    m_support_expiry_utc_isSet = !json[QString("supportExpiryUtc")].isNull() && m_support_expiry_utc_isValid;
}

QString OAIClusterVersionDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterVersionDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_code_version_isSet) {
        obj.insert(QString("codeVersion"), ::OpenAPI::toJsonValue(m_code_version));
    }
    if (m_environment.isSet()) {
        obj.insert(QString("environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_support_expiry_utc_isSet) {
        obj.insert(QString("supportExpiryUtc"), ::OpenAPI::toJsonValue(m_support_expiry_utc));
    }
    return obj;
}

QString OAIClusterVersionDetails::getCodeVersion() const {
    return m_code_version;
}
void OAIClusterVersionDetails::setCodeVersion(const QString &code_version) {
    m_code_version = code_version;
    m_code_version_isSet = true;
}

bool OAIClusterVersionDetails::is_code_version_Set() const{
    return m_code_version_isSet;
}

bool OAIClusterVersionDetails::is_code_version_Valid() const{
    return m_code_version_isValid;
}

OAIClusterEnvironment OAIClusterVersionDetails::getEnvironment() const {
    return m_environment;
}
void OAIClusterVersionDetails::setEnvironment(const OAIClusterEnvironment &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIClusterVersionDetails::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIClusterVersionDetails::is_environment_Valid() const{
    return m_environment_isValid;
}

QString OAIClusterVersionDetails::getSupportExpiryUtc() const {
    return m_support_expiry_utc;
}
void OAIClusterVersionDetails::setSupportExpiryUtc(const QString &support_expiry_utc) {
    m_support_expiry_utc = support_expiry_utc;
    m_support_expiry_utc_isSet = true;
}

bool OAIClusterVersionDetails::is_support_expiry_utc_Set() const{
    return m_support_expiry_utc_isSet;
}

bool OAIClusterVersionDetails::is_support_expiry_utc_Valid() const{
    return m_support_expiry_utc_isValid;
}

bool OAIClusterVersionDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_support_expiry_utc_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterVersionDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
