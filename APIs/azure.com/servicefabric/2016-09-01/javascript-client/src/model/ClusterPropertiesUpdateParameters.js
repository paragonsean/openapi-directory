/**
 * ServiceFabricManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CertificateDescription from './CertificateDescription';
import ClientCertificateCommonName from './ClientCertificateCommonName';
import ClientCertificateThumbprint from './ClientCertificateThumbprint';
import ClusterUpgradePolicy from './ClusterUpgradePolicy';
import NodeTypeDescription from './NodeTypeDescription';
import SettingsSectionDescription from './SettingsSectionDescription';

/**
 * The ClusterPropertiesUpdateParameters model module.
 * @module model/ClusterPropertiesUpdateParameters
 * @version 2016-09-01
 */
class ClusterPropertiesUpdateParameters {
    /**
     * Constructs a new <code>ClusterPropertiesUpdateParameters</code>.
     * The cluster resource properties can be updated
     * @alias module:model/ClusterPropertiesUpdateParameters
     */
    constructor() { 
        
        ClusterPropertiesUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterPropertiesUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterPropertiesUpdateParameters} obj Optional instance to populate.
     * @return {module:model/ClusterPropertiesUpdateParameters} The populated <code>ClusterPropertiesUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterPropertiesUpdateParameters();

            if (data.hasOwnProperty('certificate')) {
                obj['certificate'] = CertificateDescription.constructFromObject(data['certificate']);
            }
            if (data.hasOwnProperty('clientCertificateCommonNames')) {
                obj['clientCertificateCommonNames'] = ApiClient.convertToType(data['clientCertificateCommonNames'], [ClientCertificateCommonName]);
            }
            if (data.hasOwnProperty('clientCertificateThumbprints')) {
                obj['clientCertificateThumbprints'] = ApiClient.convertToType(data['clientCertificateThumbprints'], [ClientCertificateThumbprint]);
            }
            if (data.hasOwnProperty('clusterCodeVersion')) {
                obj['clusterCodeVersion'] = ApiClient.convertToType(data['clusterCodeVersion'], 'String');
            }
            if (data.hasOwnProperty('fabricSettings')) {
                obj['fabricSettings'] = ApiClient.convertToType(data['fabricSettings'], [SettingsSectionDescription]);
            }
            if (data.hasOwnProperty('nodeTypes')) {
                obj['nodeTypes'] = ApiClient.convertToType(data['nodeTypes'], [NodeTypeDescription]);
            }
            if (data.hasOwnProperty('reliabilityLevel')) {
                obj['reliabilityLevel'] = ApiClient.convertToType(data['reliabilityLevel'], 'String');
            }
            if (data.hasOwnProperty('reverseProxyCertificate')) {
                obj['reverseProxyCertificate'] = CertificateDescription.constructFromObject(data['reverseProxyCertificate']);
            }
            if (data.hasOwnProperty('upgradeDescription')) {
                obj['upgradeDescription'] = ClusterUpgradePolicy.constructFromObject(data['upgradeDescription']);
            }
            if (data.hasOwnProperty('upgradeMode')) {
                obj['upgradeMode'] = ApiClient.convertToType(data['upgradeMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterPropertiesUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterPropertiesUpdateParameters</code>.
     */
    static validateJSON(data) {
        // validate the optional field `certificate`
        if (data['certificate']) { // data not null
          CertificateDescription.validateJSON(data['certificate']);
        }
        if (data['clientCertificateCommonNames']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clientCertificateCommonNames'])) {
                throw new Error("Expected the field `clientCertificateCommonNames` to be an array in the JSON data but got " + data['clientCertificateCommonNames']);
            }
            // validate the optional field `clientCertificateCommonNames` (array)
            for (const item of data['clientCertificateCommonNames']) {
                ClientCertificateCommonName.validateJSON(item);
            };
        }
        if (data['clientCertificateThumbprints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clientCertificateThumbprints'])) {
                throw new Error("Expected the field `clientCertificateThumbprints` to be an array in the JSON data but got " + data['clientCertificateThumbprints']);
            }
            // validate the optional field `clientCertificateThumbprints` (array)
            for (const item of data['clientCertificateThumbprints']) {
                ClientCertificateThumbprint.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['clusterCodeVersion'] && !(typeof data['clusterCodeVersion'] === 'string' || data['clusterCodeVersion'] instanceof String)) {
            throw new Error("Expected the field `clusterCodeVersion` to be a primitive type in the JSON string but got " + data['clusterCodeVersion']);
        }
        if (data['fabricSettings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fabricSettings'])) {
                throw new Error("Expected the field `fabricSettings` to be an array in the JSON data but got " + data['fabricSettings']);
            }
            // validate the optional field `fabricSettings` (array)
            for (const item of data['fabricSettings']) {
                SettingsSectionDescription.validateJSON(item);
            };
        }
        if (data['nodeTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nodeTypes'])) {
                throw new Error("Expected the field `nodeTypes` to be an array in the JSON data but got " + data['nodeTypes']);
            }
            // validate the optional field `nodeTypes` (array)
            for (const item of data['nodeTypes']) {
                NodeTypeDescription.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['reliabilityLevel'] && !(typeof data['reliabilityLevel'] === 'string' || data['reliabilityLevel'] instanceof String)) {
            throw new Error("Expected the field `reliabilityLevel` to be a primitive type in the JSON string but got " + data['reliabilityLevel']);
        }
        // validate the optional field `reverseProxyCertificate`
        if (data['reverseProxyCertificate']) { // data not null
          CertificateDescription.validateJSON(data['reverseProxyCertificate']);
        }
        // validate the optional field `upgradeDescription`
        if (data['upgradeDescription']) { // data not null
          ClusterUpgradePolicy.validateJSON(data['upgradeDescription']);
        }
        // ensure the json data is a string
        if (data['upgradeMode'] && !(typeof data['upgradeMode'] === 'string' || data['upgradeMode'] instanceof String)) {
            throw new Error("Expected the field `upgradeMode` to be a primitive type in the JSON string but got " + data['upgradeMode']);
        }

        return true;
    }


}



/**
 * @member {module:model/CertificateDescription} certificate
 */
ClusterPropertiesUpdateParameters.prototype['certificate'] = undefined;

/**
 * List of client certificates to whitelist based on common names.
 * @member {Array.<module:model/ClientCertificateCommonName>} clientCertificateCommonNames
 */
ClusterPropertiesUpdateParameters.prototype['clientCertificateCommonNames'] = undefined;

/**
 * The client thumbprint details, it is used for client access for cluster operation, it will override existing collection
 * @member {Array.<module:model/ClientCertificateThumbprint>} clientCertificateThumbprints
 */
ClusterPropertiesUpdateParameters.prototype['clientCertificateThumbprints'] = undefined;

/**
 * The ServiceFabric code version, if set it, please make sure you have set upgradeMode to Manual, otherwise ,it will fail, if you are using PUT new cluster, you can get the version by using ClusterVersions_List, if you are updating existing cluster, you can get the availableClusterVersions from Clusters_Get
 * @member {String} clusterCodeVersion
 */
ClusterPropertiesUpdateParameters.prototype['clusterCodeVersion'] = undefined;

/**
 * List of custom fabric settings to configure the cluster, Note, it will overwrite existing collection
 * @member {Array.<module:model/SettingsSectionDescription>} fabricSettings
 */
ClusterPropertiesUpdateParameters.prototype['fabricSettings'] = undefined;

/**
 * The list of node types that make up the cluster, it will override
 * @member {Array.<module:model/NodeTypeDescription>} nodeTypes
 */
ClusterPropertiesUpdateParameters.prototype['nodeTypes'] = undefined;

/**
 * This level is used to set the number of replicas of the system services
 * @member {module:model/ClusterPropertiesUpdateParameters.ReliabilityLevelEnum} reliabilityLevel
 */
ClusterPropertiesUpdateParameters.prototype['reliabilityLevel'] = undefined;

/**
 * @member {module:model/CertificateDescription} reverseProxyCertificate
 */
ClusterPropertiesUpdateParameters.prototype['reverseProxyCertificate'] = undefined;

/**
 * @member {module:model/ClusterUpgradePolicy} upgradeDescription
 */
ClusterPropertiesUpdateParameters.prototype['upgradeDescription'] = undefined;

/**
 * Cluster upgrade mode indicates if fabric upgrade is initiated automatically by the system or not
 * @member {module:model/ClusterPropertiesUpdateParameters.UpgradeModeEnum} upgradeMode
 */
ClusterPropertiesUpdateParameters.prototype['upgradeMode'] = undefined;





/**
 * Allowed values for the <code>reliabilityLevel</code> property.
 * @enum {String}
 * @readonly
 */
ClusterPropertiesUpdateParameters['ReliabilityLevelEnum'] = {

    /**
     * value: "Bronze"
     * @const
     */
    "Bronze": "Bronze",

    /**
     * value: "Silver"
     * @const
     */
    "Silver": "Silver",

    /**
     * value: "Gold"
     * @const
     */
    "Gold": "Gold"
};


/**
 * Allowed values for the <code>upgradeMode</code> property.
 * @enum {String}
 * @readonly
 */
ClusterPropertiesUpdateParameters['UpgradeModeEnum'] = {

    /**
     * value: "Automatic"
     * @const
     */
    "Automatic": "Automatic",

    /**
     * value: "Manual"
     * @const
     */
    "Manual": "Manual"
};



export default ClusterPropertiesUpdateParameters;

