/**
 * ServiceFabricManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ClusterCodeVersionsListResult from '../model/ClusterCodeVersionsListResult';
import ClusterCodeVersionsResult from '../model/ClusterCodeVersionsResult';

/**
* ClusterVersion service.
* @module api/ClusterVersionApi
* @version 2016-09-01
*/
export default class ClusterVersionApi {

    /**
    * Constructs a new ClusterVersionApi. 
    * @alias module:api/ClusterVersionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the clusterVersionsGet operation.
     * @callback module:api/ClusterVersionApi~clusterVersionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClusterCodeVersionsResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cluster code versions by environment and version
     * @param {String} location The location for the cluster code versions, this is different from cluster location
     * @param {module:model/String} environment Cluster operating system, the default means all
     * @param {String} apiVersion The version of the ServiceFabric resource provider api
     * @param {String} subscriptionId The customer subscription identifier
     * @param {String} clusterVersion The cluster code version
     * @param {module:api/ClusterVersionApi~clusterVersionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClusterCodeVersionsResult}
     */
    clusterVersionsGet(location, environment, apiVersion, subscriptionId, clusterVersion, callback) {
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling clusterVersionsGet");
      }
      // verify the required parameter 'environment' is set
      if (environment === undefined || environment === null) {
        throw new Error("Missing the required parameter 'environment' when calling clusterVersionsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling clusterVersionsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling clusterVersionsGet");
      }
      // verify the required parameter 'clusterVersion' is set
      if (clusterVersion === undefined || clusterVersion === null) {
        throw new Error("Missing the required parameter 'clusterVersion' when calling clusterVersionsGet");
      }

      let pathParams = {
        'location': location,
        'environment': environment,
        'subscriptionId': subscriptionId,
        'clusterVersion': clusterVersion
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ClusterCodeVersionsResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/{clusterVersion}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clusterVersionsList operation.
     * @callback module:api/ClusterVersionApi~clusterVersionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClusterCodeVersionsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List cluster code versions by location
     * @param {String} location The location for the cluster code versions, this is different from cluster location
     * @param {String} apiVersion The version of the ServiceFabric resource provider api
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:api/ClusterVersionApi~clusterVersionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClusterCodeVersionsListResult}
     */
    clusterVersionsList(location, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling clusterVersionsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling clusterVersionsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling clusterVersionsList");
      }

      let pathParams = {
        'location': location,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ClusterCodeVersionsListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clusterVersionsListByEnvironment operation.
     * @callback module:api/ClusterVersionApi~clusterVersionsListByEnvironmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClusterCodeVersionsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List cluster code versions by environment
     * @param {String} location The location for the cluster code versions, this is different from cluster location
     * @param {module:model/String} environment Cluster operating system, the default means all
     * @param {String} apiVersion The version of the ServiceFabric resource provider api
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:api/ClusterVersionApi~clusterVersionsListByEnvironmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClusterCodeVersionsListResult}
     */
    clusterVersionsListByEnvironment(location, environment, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling clusterVersionsListByEnvironment");
      }
      // verify the required parameter 'environment' is set
      if (environment === undefined || environment === null) {
        throw new Error("Missing the required parameter 'environment' when calling clusterVersionsListByEnvironment");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling clusterVersionsListByEnvironment");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling clusterVersionsListByEnvironment");
      }

      let pathParams = {
        'location': location,
        'environment': environment,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ClusterCodeVersionsListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
