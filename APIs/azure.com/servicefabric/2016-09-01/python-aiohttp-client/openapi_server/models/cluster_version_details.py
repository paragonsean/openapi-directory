# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_environment import ClusterEnvironment
from openapi_server import util


class ClusterVersionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code_version: str=None, environment: ClusterEnvironment=None, support_expiry_utc: str=None):
        """ClusterVersionDetails - a model defined in OpenAPI

        :param code_version: The code_version of this ClusterVersionDetails.
        :param environment: The environment of this ClusterVersionDetails.
        :param support_expiry_utc: The support_expiry_utc of this ClusterVersionDetails.
        """
        self.openapi_types = {
            'code_version': str,
            'environment': ClusterEnvironment,
            'support_expiry_utc': str
        }

        self.attribute_map = {
            'code_version': 'codeVersion',
            'environment': 'environment',
            'support_expiry_utc': 'supportExpiryUtc'
        }

        self._code_version = code_version
        self._environment = environment
        self._support_expiry_utc = support_expiry_utc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterVersionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterVersionDetails of this ClusterVersionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_version(self):
        """Gets the code_version of this ClusterVersionDetails.

        The ServiceFabric runtime version of the cluster

        :return: The code_version of this ClusterVersionDetails.
        :rtype: str
        """
        return self._code_version

    @code_version.setter
    def code_version(self, code_version):
        """Sets the code_version of this ClusterVersionDetails.

        The ServiceFabric runtime version of the cluster

        :param code_version: The code_version of this ClusterVersionDetails.
        :type code_version: str
        """

        self._code_version = code_version

    @property
    def environment(self):
        """Gets the environment of this ClusterVersionDetails.


        :return: The environment of this ClusterVersionDetails.
        :rtype: ClusterEnvironment
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this ClusterVersionDetails.


        :param environment: The environment of this ClusterVersionDetails.
        :type environment: ClusterEnvironment
        """

        self._environment = environment

    @property
    def support_expiry_utc(self):
        """Gets the support_expiry_utc of this ClusterVersionDetails.

        The date of expiry of support of the version

        :return: The support_expiry_utc of this ClusterVersionDetails.
        :rtype: str
        """
        return self._support_expiry_utc

    @support_expiry_utc.setter
    def support_expiry_utc(self, support_expiry_utc):
        """Sets the support_expiry_utc of this ClusterVersionDetails.

        The date of expiry of support of the version

        :param support_expiry_utc: The support_expiry_utc of this ClusterVersionDetails.
        :type support_expiry_utc: str
        """

        self._support_expiry_utc = support_expiry_utc
