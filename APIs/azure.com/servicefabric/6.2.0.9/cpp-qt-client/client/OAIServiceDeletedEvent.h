/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceDeletedEvent.h
 *
 * Service Deleted event.
 */

#ifndef OAIServiceDeletedEvent_H
#define OAIServiceDeletedEvent_H

#include <QJsonObject>

#include "OAIFabricEventKind.h"
#include "OAIServiceEvent.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServiceDeletedEvent : public OAIObject {
public:
    OAIServiceDeletedEvent();
    OAIServiceDeletedEvent(QString json);
    ~OAIServiceDeletedEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEventInstanceId() const;
    void setEventInstanceId(const QString &event_instance_id);
    bool is_event_instance_id_Set() const;
    bool is_event_instance_id_Valid() const;

    bool isHasCorrelatedEvents() const;
    void setHasCorrelatedEvents(const bool &has_correlated_events);
    bool is_has_correlated_events_Set() const;
    bool is_has_correlated_events_Valid() const;

    OAIFabricEventKind getKind() const;
    void setKind(const OAIFabricEventKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QDateTime getTimeStamp() const;
    void setTimeStamp(const QDateTime &time_stamp);
    bool is_time_stamp_Set() const;
    bool is_time_stamp_Valid() const;

    QString getServiceId() const;
    void setServiceId(const QString &service_id);
    bool is_service_id_Set() const;
    bool is_service_id_Valid() const;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    QString getApplicationTypeName() const;
    void setApplicationTypeName(const QString &application_type_name);
    bool is_application_type_name_Set() const;
    bool is_application_type_name_Valid() const;

    bool isIsStateful() const;
    void setIsStateful(const bool &is_stateful);
    bool is_is_stateful_Set() const;
    bool is_is_stateful_Valid() const;

    qint32 getMinReplicaSetSize() const;
    void setMinReplicaSetSize(const qint32 &min_replica_set_size);
    bool is_min_replica_set_size_Set() const;
    bool is_min_replica_set_size_Valid() const;

    qint32 getPartitionCount() const;
    void setPartitionCount(const qint32 &partition_count);
    bool is_partition_count_Set() const;
    bool is_partition_count_Valid() const;

    qint64 getServiceInstance() const;
    void setServiceInstance(const qint64 &service_instance);
    bool is_service_instance_Set() const;
    bool is_service_instance_Valid() const;

    QString getServicePackageVersion() const;
    void setServicePackageVersion(const QString &service_package_version);
    bool is_service_package_version_Set() const;
    bool is_service_package_version_Valid() const;

    QString getServiceTypeName() const;
    void setServiceTypeName(const QString &service_type_name);
    bool is_service_type_name_Set() const;
    bool is_service_type_name_Valid() const;

    qint32 getTargetReplicaSetSize() const;
    void setTargetReplicaSetSize(const qint32 &target_replica_set_size);
    bool is_target_replica_set_size_Set() const;
    bool is_target_replica_set_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_event_instance_id;
    bool m_event_instance_id_isSet;
    bool m_event_instance_id_isValid;

    bool m_has_correlated_events;
    bool m_has_correlated_events_isSet;
    bool m_has_correlated_events_isValid;

    OAIFabricEventKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QDateTime m_time_stamp;
    bool m_time_stamp_isSet;
    bool m_time_stamp_isValid;

    QString m_service_id;
    bool m_service_id_isSet;
    bool m_service_id_isValid;

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    QString m_application_type_name;
    bool m_application_type_name_isSet;
    bool m_application_type_name_isValid;

    bool m_is_stateful;
    bool m_is_stateful_isSet;
    bool m_is_stateful_isValid;

    qint32 m_min_replica_set_size;
    bool m_min_replica_set_size_isSet;
    bool m_min_replica_set_size_isValid;

    qint32 m_partition_count;
    bool m_partition_count_isSet;
    bool m_partition_count_isValid;

    qint64 m_service_instance;
    bool m_service_instance_isSet;
    bool m_service_instance_isValid;

    QString m_service_package_version;
    bool m_service_package_version_isSet;
    bool m_service_package_version_isValid;

    QString m_service_type_name;
    bool m_service_type_name_isSet;
    bool m_service_type_name_isValid;

    qint32 m_target_replica_set_size;
    bool m_target_replica_set_size_isSet;
    bool m_target_replica_set_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceDeletedEvent)

#endif // OAIServiceDeletedEvent_H
