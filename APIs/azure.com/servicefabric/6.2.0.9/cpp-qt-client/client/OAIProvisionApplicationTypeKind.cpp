/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProvisionApplicationTypeKind.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProvisionApplicationTypeKind::OAIProvisionApplicationTypeKind(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProvisionApplicationTypeKind::OAIProvisionApplicationTypeKind() {
    this->initializeModel();
}

OAIProvisionApplicationTypeKind::~OAIProvisionApplicationTypeKind() {}

void OAIProvisionApplicationTypeKind::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProvisionApplicationTypeKind::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProvisionApplicationTypeKind::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Invalid", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionApplicationTypeKind::INVALID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ImageStorePath", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionApplicationTypeKind::IMAGESTOREPATH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ExternalStore", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionApplicationTypeKind::EXTERNALSTORE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProvisionApplicationTypeKind::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProvisionApplicationTypeKind::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProvisionApplicationTypeKind::INVALID:
            val = "Invalid";
            break;
        case eOAIProvisionApplicationTypeKind::IMAGESTOREPATH:
            val = "ImageStorePath";
            break;
        case eOAIProvisionApplicationTypeKind::EXTERNALSTORE:
            val = "ExternalStore";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProvisionApplicationTypeKind::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProvisionApplicationTypeKind::eOAIProvisionApplicationTypeKind OAIProvisionApplicationTypeKind::getValue() const {
    return m_value;
}

void OAIProvisionApplicationTypeKind::setValue(const OAIProvisionApplicationTypeKind::eOAIProvisionApplicationTypeKind& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProvisionApplicationTypeKind::isSet() const {
    
    return m_value_isSet;
}

bool OAIProvisionApplicationTypeKind::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
