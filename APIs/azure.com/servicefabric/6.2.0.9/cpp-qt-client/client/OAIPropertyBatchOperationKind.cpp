/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPropertyBatchOperationKind.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPropertyBatchOperationKind::OAIPropertyBatchOperationKind(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPropertyBatchOperationKind::OAIPropertyBatchOperationKind() {
    this->initializeModel();
}

OAIPropertyBatchOperationKind::~OAIPropertyBatchOperationKind() {}

void OAIPropertyBatchOperationKind::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPropertyBatchOperationKind::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPropertyBatchOperationKind::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Invalid", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPropertyBatchOperationKind::INVALID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Put", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPropertyBatchOperationKind::PUT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Get", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPropertyBatchOperationKind::GET;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CheckExists", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPropertyBatchOperationKind::CHECKEXISTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CheckSequence", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPropertyBatchOperationKind::CHECKSEQUENCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Delete", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPropertyBatchOperationKind::DELETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CheckValue", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPropertyBatchOperationKind::CHECKVALUE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPropertyBatchOperationKind::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPropertyBatchOperationKind::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPropertyBatchOperationKind::INVALID:
            val = "Invalid";
            break;
        case eOAIPropertyBatchOperationKind::PUT:
            val = "Put";
            break;
        case eOAIPropertyBatchOperationKind::GET:
            val = "Get";
            break;
        case eOAIPropertyBatchOperationKind::CHECKEXISTS:
            val = "CheckExists";
            break;
        case eOAIPropertyBatchOperationKind::CHECKSEQUENCE:
            val = "CheckSequence";
            break;
        case eOAIPropertyBatchOperationKind::DELETE:
            val = "Delete";
            break;
        case eOAIPropertyBatchOperationKind::CHECKVALUE:
            val = "CheckValue";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPropertyBatchOperationKind::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPropertyBatchOperationKind::eOAIPropertyBatchOperationKind OAIPropertyBatchOperationKind::getValue() const {
    return m_value;
}

void OAIPropertyBatchOperationKind::setValue(const OAIPropertyBatchOperationKind::eOAIPropertyBatchOperationKind& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPropertyBatchOperationKind::isSet() const {
    
    return m_value_isSet;
}

bool OAIPropertyBatchOperationKind::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
