/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPartitionReconfigurationCompletedEvent.h
 *
 * Partition Reconfiguration Completed event.
 */

#ifndef OAIPartitionReconfigurationCompletedEvent_H
#define OAIPartitionReconfigurationCompletedEvent_H

#include <QJsonObject>

#include "OAIFabricEventKind.h"
#include "OAIPartitionEvent.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPartitionReconfigurationCompletedEvent : public OAIObject {
public:
    OAIPartitionReconfigurationCompletedEvent();
    OAIPartitionReconfigurationCompletedEvent(QString json);
    ~OAIPartitionReconfigurationCompletedEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEventInstanceId() const;
    void setEventInstanceId(const QString &event_instance_id);
    bool is_event_instance_id_Set() const;
    bool is_event_instance_id_Valid() const;

    bool isHasCorrelatedEvents() const;
    void setHasCorrelatedEvents(const bool &has_correlated_events);
    bool is_has_correlated_events_Set() const;
    bool is_has_correlated_events_Valid() const;

    OAIFabricEventKind getKind() const;
    void setKind(const OAIFabricEventKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QDateTime getTimeStamp() const;
    void setTimeStamp(const QDateTime &time_stamp);
    bool is_time_stamp_Set() const;
    bool is_time_stamp_Valid() const;

    QString getPartitionId() const;
    void setPartitionId(const QString &partition_id);
    bool is_partition_id_Set() const;
    bool is_partition_id_Valid() const;

    qint64 getCcEpochConfigVersion() const;
    void setCcEpochConfigVersion(const qint64 &cc_epoch_config_version);
    bool is_cc_epoch_config_version_Set() const;
    bool is_cc_epoch_config_version_Valid() const;

    qint64 getCcEpochDataLossVersion() const;
    void setCcEpochDataLossVersion(const qint64 &cc_epoch_data_loss_version);
    bool is_cc_epoch_data_loss_version_Set() const;
    bool is_cc_epoch_data_loss_version_Valid() const;

    QString getNodeInstanceId() const;
    void setNodeInstanceId(const QString &node_instance_id);
    bool is_node_instance_id_Set() const;
    bool is_node_instance_id_Valid() const;

    QString getNodeName() const;
    void setNodeName(const QString &node_name);
    bool is_node_name_Set() const;
    bool is_node_name_Valid() const;

    double getPhase0DurationMs() const;
    void setPhase0DurationMs(const double &phase0_duration_ms);
    bool is_phase0_duration_ms_Set() const;
    bool is_phase0_duration_ms_Valid() const;

    double getPhase1DurationMs() const;
    void setPhase1DurationMs(const double &phase1_duration_ms);
    bool is_phase1_duration_ms_Set() const;
    bool is_phase1_duration_ms_Valid() const;

    double getPhase2DurationMs() const;
    void setPhase2DurationMs(const double &phase2_duration_ms);
    bool is_phase2_duration_ms_Set() const;
    bool is_phase2_duration_ms_Valid() const;

    double getPhase3DurationMs() const;
    void setPhase3DurationMs(const double &phase3_duration_ms);
    bool is_phase3_duration_ms_Set() const;
    bool is_phase3_duration_ms_Valid() const;

    double getPhase4DurationMs() const;
    void setPhase4DurationMs(const double &phase4_duration_ms);
    bool is_phase4_duration_ms_Set() const;
    bool is_phase4_duration_ms_Valid() const;

    QString getReconfigType() const;
    void setReconfigType(const QString &reconfig_type);
    bool is_reconfig_type_Set() const;
    bool is_reconfig_type_Valid() const;

    QString getResult() const;
    void setResult(const QString &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    QString getServiceType() const;
    void setServiceType(const QString &service_type);
    bool is_service_type_Set() const;
    bool is_service_type_Valid() const;

    double getTotalDurationMs() const;
    void setTotalDurationMs(const double &total_duration_ms);
    bool is_total_duration_ms_Set() const;
    bool is_total_duration_ms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_event_instance_id;
    bool m_event_instance_id_isSet;
    bool m_event_instance_id_isValid;

    bool m_has_correlated_events;
    bool m_has_correlated_events_isSet;
    bool m_has_correlated_events_isValid;

    OAIFabricEventKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QDateTime m_time_stamp;
    bool m_time_stamp_isSet;
    bool m_time_stamp_isValid;

    QString m_partition_id;
    bool m_partition_id_isSet;
    bool m_partition_id_isValid;

    qint64 m_cc_epoch_config_version;
    bool m_cc_epoch_config_version_isSet;
    bool m_cc_epoch_config_version_isValid;

    qint64 m_cc_epoch_data_loss_version;
    bool m_cc_epoch_data_loss_version_isSet;
    bool m_cc_epoch_data_loss_version_isValid;

    QString m_node_instance_id;
    bool m_node_instance_id_isSet;
    bool m_node_instance_id_isValid;

    QString m_node_name;
    bool m_node_name_isSet;
    bool m_node_name_isValid;

    double m_phase0_duration_ms;
    bool m_phase0_duration_ms_isSet;
    bool m_phase0_duration_ms_isValid;

    double m_phase1_duration_ms;
    bool m_phase1_duration_ms_isSet;
    bool m_phase1_duration_ms_isValid;

    double m_phase2_duration_ms;
    bool m_phase2_duration_ms_isSet;
    bool m_phase2_duration_ms_isValid;

    double m_phase3_duration_ms;
    bool m_phase3_duration_ms_isSet;
    bool m_phase3_duration_ms_isValid;

    double m_phase4_duration_ms;
    bool m_phase4_duration_ms_isSet;
    bool m_phase4_duration_ms_isValid;

    QString m_reconfig_type;
    bool m_reconfig_type_isSet;
    bool m_reconfig_type_isValid;

    QString m_result;
    bool m_result_isSet;
    bool m_result_isValid;

    QString m_service_type;
    bool m_service_type_isSet;
    bool m_service_type_isValid;

    double m_total_duration_ms;
    bool m_total_duration_ms_isSet;
    bool m_total_duration_ms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPartitionReconfigurationCompletedEvent)

#endif // OAIPartitionReconfigurationCompletedEvent_H
