/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeBasedBackupScheduleDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeBasedBackupScheduleDescription::OAITimeBasedBackupScheduleDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeBasedBackupScheduleDescription::OAITimeBasedBackupScheduleDescription() {
    this->initializeModel();
}

OAITimeBasedBackupScheduleDescription::~OAITimeBasedBackupScheduleDescription() {}

void OAITimeBasedBackupScheduleDescription::initializeModel() {

    m_run_days_isSet = false;
    m_run_days_isValid = false;

    m_run_times_isSet = false;
    m_run_times_isValid = false;

    m_schedule_frequency_type_isSet = false;
    m_schedule_frequency_type_isValid = false;

    m_schedule_kind_isSet = false;
    m_schedule_kind_isValid = false;
}

void OAITimeBasedBackupScheduleDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeBasedBackupScheduleDescription::fromJsonObject(QJsonObject json) {

    m_run_days_isValid = ::OpenAPI::fromJsonValue(m_run_days, json[QString("RunDays")]);
    m_run_days_isSet = !json[QString("RunDays")].isNull() && m_run_days_isValid;

    m_run_times_isValid = ::OpenAPI::fromJsonValue(m_run_times, json[QString("RunTimes")]);
    m_run_times_isSet = !json[QString("RunTimes")].isNull() && m_run_times_isValid;

    m_schedule_frequency_type_isValid = ::OpenAPI::fromJsonValue(m_schedule_frequency_type, json[QString("ScheduleFrequencyType")]);
    m_schedule_frequency_type_isSet = !json[QString("ScheduleFrequencyType")].isNull() && m_schedule_frequency_type_isValid;

    m_schedule_kind_isValid = ::OpenAPI::fromJsonValue(m_schedule_kind, json[QString("ScheduleKind")]);
    m_schedule_kind_isSet = !json[QString("ScheduleKind")].isNull() && m_schedule_kind_isValid;
}

QString OAITimeBasedBackupScheduleDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeBasedBackupScheduleDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_run_days.size() > 0) {
        obj.insert(QString("RunDays"), ::OpenAPI::toJsonValue(m_run_days));
    }
    if (m_run_times.size() > 0) {
        obj.insert(QString("RunTimes"), ::OpenAPI::toJsonValue(m_run_times));
    }
    if (m_schedule_frequency_type.isSet()) {
        obj.insert(QString("ScheduleFrequencyType"), ::OpenAPI::toJsonValue(m_schedule_frequency_type));
    }
    if (m_schedule_kind.isSet()) {
        obj.insert(QString("ScheduleKind"), ::OpenAPI::toJsonValue(m_schedule_kind));
    }
    return obj;
}

QList<OAIDayOfWeek> OAITimeBasedBackupScheduleDescription::getRunDays() const {
    return m_run_days;
}
void OAITimeBasedBackupScheduleDescription::setRunDays(const QList<OAIDayOfWeek> &run_days) {
    m_run_days = run_days;
    m_run_days_isSet = true;
}

bool OAITimeBasedBackupScheduleDescription::is_run_days_Set() const{
    return m_run_days_isSet;
}

bool OAITimeBasedBackupScheduleDescription::is_run_days_Valid() const{
    return m_run_days_isValid;
}

QList<QDateTime> OAITimeBasedBackupScheduleDescription::getRunTimes() const {
    return m_run_times;
}
void OAITimeBasedBackupScheduleDescription::setRunTimes(const QList<QDateTime> &run_times) {
    m_run_times = run_times;
    m_run_times_isSet = true;
}

bool OAITimeBasedBackupScheduleDescription::is_run_times_Set() const{
    return m_run_times_isSet;
}

bool OAITimeBasedBackupScheduleDescription::is_run_times_Valid() const{
    return m_run_times_isValid;
}

OAIBackupScheduleFrequencyType OAITimeBasedBackupScheduleDescription::getScheduleFrequencyType() const {
    return m_schedule_frequency_type;
}
void OAITimeBasedBackupScheduleDescription::setScheduleFrequencyType(const OAIBackupScheduleFrequencyType &schedule_frequency_type) {
    m_schedule_frequency_type = schedule_frequency_type;
    m_schedule_frequency_type_isSet = true;
}

bool OAITimeBasedBackupScheduleDescription::is_schedule_frequency_type_Set() const{
    return m_schedule_frequency_type_isSet;
}

bool OAITimeBasedBackupScheduleDescription::is_schedule_frequency_type_Valid() const{
    return m_schedule_frequency_type_isValid;
}

OAIBackupScheduleKind OAITimeBasedBackupScheduleDescription::getScheduleKind() const {
    return m_schedule_kind;
}
void OAITimeBasedBackupScheduleDescription::setScheduleKind(const OAIBackupScheduleKind &schedule_kind) {
    m_schedule_kind = schedule_kind;
    m_schedule_kind_isSet = true;
}

bool OAITimeBasedBackupScheduleDescription::is_schedule_kind_Set() const{
    return m_schedule_kind_isSet;
}

bool OAITimeBasedBackupScheduleDescription::is_schedule_kind_Valid() const{
    return m_schedule_kind_isValid;
}

bool OAITimeBasedBackupScheduleDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_run_days.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_run_times.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_frequency_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_kind.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeBasedBackupScheduleDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_run_times_isValid && m_schedule_frequency_type_isValid && m_schedule_kind_isValid && true;
}

} // namespace OpenAPI
