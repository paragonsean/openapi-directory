/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpgradeOrchestrationServiceStateSummary.h
 *
 * Service state summary of Service Fabric Upgrade Orchestration Service.
 */

#ifndef OAIUpgradeOrchestrationServiceStateSummary_H
#define OAIUpgradeOrchestrationServiceStateSummary_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpgradeOrchestrationServiceStateSummary : public OAIObject {
public:
    OAIUpgradeOrchestrationServiceStateSummary();
    OAIUpgradeOrchestrationServiceStateSummary(QString json);
    ~OAIUpgradeOrchestrationServiceStateSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrentCodeVersion() const;
    void setCurrentCodeVersion(const QString &current_code_version);
    bool is_current_code_version_Set() const;
    bool is_current_code_version_Valid() const;

    QString getCurrentManifestVersion() const;
    void setCurrentManifestVersion(const QString &current_manifest_version);
    bool is_current_manifest_version_Set() const;
    bool is_current_manifest_version_Valid() const;

    QString getPendingUpgradeType() const;
    void setPendingUpgradeType(const QString &pending_upgrade_type);
    bool is_pending_upgrade_type_Set() const;
    bool is_pending_upgrade_type_Valid() const;

    QString getTargetCodeVersion() const;
    void setTargetCodeVersion(const QString &target_code_version);
    bool is_target_code_version_Set() const;
    bool is_target_code_version_Valid() const;

    QString getTargetManifestVersion() const;
    void setTargetManifestVersion(const QString &target_manifest_version);
    bool is_target_manifest_version_Set() const;
    bool is_target_manifest_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_current_code_version;
    bool m_current_code_version_isSet;
    bool m_current_code_version_isValid;

    QString m_current_manifest_version;
    bool m_current_manifest_version_isSet;
    bool m_current_manifest_version_isValid;

    QString m_pending_upgrade_type;
    bool m_pending_upgrade_type_isSet;
    bool m_pending_upgrade_type_isValid;

    QString m_target_code_version;
    bool m_target_code_version_isSet;
    bool m_target_code_version_isValid;

    QString m_target_manifest_version;
    bool m_target_manifest_version_isSet;
    bool m_target_manifest_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpgradeOrchestrationServiceStateSummary)

#endif // OAIUpgradeOrchestrationServiceStateSummary_H
