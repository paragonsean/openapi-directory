/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHealthStatistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHealthStatistics::OAIHealthStatistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHealthStatistics::OAIHealthStatistics() {
    this->initializeModel();
}

OAIHealthStatistics::~OAIHealthStatistics() {}

void OAIHealthStatistics::initializeModel() {

    m_health_state_count_list_isSet = false;
    m_health_state_count_list_isValid = false;
}

void OAIHealthStatistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHealthStatistics::fromJsonObject(QJsonObject json) {

    m_health_state_count_list_isValid = ::OpenAPI::fromJsonValue(m_health_state_count_list, json[QString("HealthStateCountList")]);
    m_health_state_count_list_isSet = !json[QString("HealthStateCountList")].isNull() && m_health_state_count_list_isValid;
}

QString OAIHealthStatistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHealthStatistics::asJsonObject() const {
    QJsonObject obj;
    if (m_health_state_count_list.size() > 0) {
        obj.insert(QString("HealthStateCountList"), ::OpenAPI::toJsonValue(m_health_state_count_list));
    }
    return obj;
}

QList<OAIEntityKindHealthStateCount> OAIHealthStatistics::getHealthStateCountList() const {
    return m_health_state_count_list;
}
void OAIHealthStatistics::setHealthStateCountList(const QList<OAIEntityKindHealthStateCount> &health_state_count_list) {
    m_health_state_count_list = health_state_count_list;
    m_health_state_count_list_isSet = true;
}

bool OAIHealthStatistics::is_health_state_count_list_Set() const{
    return m_health_state_count_list_isSet;
}

bool OAIHealthStatistics::is_health_state_count_list_Valid() const{
    return m_health_state_count_list_isValid;
}

bool OAIHealthStatistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_health_state_count_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHealthStatistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
