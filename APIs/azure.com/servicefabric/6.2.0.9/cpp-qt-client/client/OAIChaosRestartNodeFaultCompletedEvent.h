/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChaosRestartNodeFaultCompletedEvent.h
 *
 * Chaos Restart Node Fault Completed event.
 */

#ifndef OAIChaosRestartNodeFaultCompletedEvent_H
#define OAIChaosRestartNodeFaultCompletedEvent_H

#include <QJsonObject>

#include "OAIFabricEventKind.h"
#include "OAINodeEvent.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIChaosRestartNodeFaultCompletedEvent : public OAIObject {
public:
    OAIChaosRestartNodeFaultCompletedEvent();
    OAIChaosRestartNodeFaultCompletedEvent(QString json);
    ~OAIChaosRestartNodeFaultCompletedEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEventInstanceId() const;
    void setEventInstanceId(const QString &event_instance_id);
    bool is_event_instance_id_Set() const;
    bool is_event_instance_id_Valid() const;

    bool isHasCorrelatedEvents() const;
    void setHasCorrelatedEvents(const bool &has_correlated_events);
    bool is_has_correlated_events_Set() const;
    bool is_has_correlated_events_Valid() const;

    OAIFabricEventKind getKind() const;
    void setKind(const OAIFabricEventKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QDateTime getTimeStamp() const;
    void setTimeStamp(const QDateTime &time_stamp);
    bool is_time_stamp_Set() const;
    bool is_time_stamp_Valid() const;

    QString getNodeName() const;
    void setNodeName(const QString &node_name);
    bool is_node_name_Set() const;
    bool is_node_name_Valid() const;

    QString getFaultGroupId() const;
    void setFaultGroupId(const QString &fault_group_id);
    bool is_fault_group_id_Set() const;
    bool is_fault_group_id_Valid() const;

    QString getFaultId() const;
    void setFaultId(const QString &fault_id);
    bool is_fault_id_Set() const;
    bool is_fault_id_Valid() const;

    qint64 getNodeInstanceId() const;
    void setNodeInstanceId(const qint64 &node_instance_id);
    bool is_node_instance_id_Set() const;
    bool is_node_instance_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_event_instance_id;
    bool m_event_instance_id_isSet;
    bool m_event_instance_id_isValid;

    bool m_has_correlated_events;
    bool m_has_correlated_events_isSet;
    bool m_has_correlated_events_isValid;

    OAIFabricEventKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QDateTime m_time_stamp;
    bool m_time_stamp_isSet;
    bool m_time_stamp_isValid;

    QString m_node_name;
    bool m_node_name_isSet;
    bool m_node_name_isValid;

    QString m_fault_group_id;
    bool m_fault_group_id_isSet;
    bool m_fault_group_id_isValid;

    QString m_fault_id;
    bool m_fault_id_isSet;
    bool m_fault_id_isValid;

    qint64 m_node_instance_id;
    bool m_node_instance_id_isSet;
    bool m_node_instance_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChaosRestartNodeFaultCompletedEvent)

#endif // OAIChaosRestartNodeFaultCompletedEvent_H
