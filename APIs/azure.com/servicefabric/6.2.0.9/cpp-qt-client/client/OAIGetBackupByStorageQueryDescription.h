/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetBackupByStorageQueryDescription.h
 *
 * Describes additional filters to be applied, while listing backups, and backup storage details from where to fetch the backups.
 */

#ifndef OAIGetBackupByStorageQueryDescription_H
#define OAIGetBackupByStorageQueryDescription_H

#include <QJsonObject>

#include "OAIBackupEntity.h"
#include "OAIBackupStorageDescription.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBackupEntity;
class OAIBackupStorageDescription;

class OAIGetBackupByStorageQueryDescription : public OAIObject {
public:
    OAIGetBackupByStorageQueryDescription();
    OAIGetBackupByStorageQueryDescription(QString json);
    ~OAIGetBackupByStorageQueryDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBackupEntity getBackupEntity() const;
    void setBackupEntity(const OAIBackupEntity &backup_entity);
    bool is_backup_entity_Set() const;
    bool is_backup_entity_Valid() const;

    QDateTime getEndDateTimeFilter() const;
    void setEndDateTimeFilter(const QDateTime &end_date_time_filter);
    bool is_end_date_time_filter_Set() const;
    bool is_end_date_time_filter_Valid() const;

    bool isLatest() const;
    void setLatest(const bool &latest);
    bool is_latest_Set() const;
    bool is_latest_Valid() const;

    QDateTime getStartDateTimeFilter() const;
    void setStartDateTimeFilter(const QDateTime &start_date_time_filter);
    bool is_start_date_time_filter_Set() const;
    bool is_start_date_time_filter_Valid() const;

    OAIBackupStorageDescription getStorage() const;
    void setStorage(const OAIBackupStorageDescription &storage);
    bool is_storage_Set() const;
    bool is_storage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBackupEntity m_backup_entity;
    bool m_backup_entity_isSet;
    bool m_backup_entity_isValid;

    QDateTime m_end_date_time_filter;
    bool m_end_date_time_filter_isSet;
    bool m_end_date_time_filter_isValid;

    bool m_latest;
    bool m_latest_isSet;
    bool m_latest_isValid;

    QDateTime m_start_date_time_filter;
    bool m_start_date_time_filter_isSet;
    bool m_start_date_time_filter_isValid;

    OAIBackupStorageDescription m_storage;
    bool m_storage_isSet;
    bool m_storage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetBackupByStorageQueryDescription)

#endif // OAIGetBackupByStorageQueryDescription_H
