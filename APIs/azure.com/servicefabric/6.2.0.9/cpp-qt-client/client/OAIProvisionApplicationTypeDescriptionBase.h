/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProvisionApplicationTypeDescriptionBase.h
 *
 * Represents the type of registration or provision requested, and if the operation needs to be asynchronous or not. Supported types of provision operations are from either image store or external store.
 */

#ifndef OAIProvisionApplicationTypeDescriptionBase_H
#define OAIProvisionApplicationTypeDescriptionBase_H

#include <QJsonObject>

#include "OAIProvisionApplicationTypeKind.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProvisionApplicationTypeDescriptionBase : public OAIObject {
public:
    OAIProvisionApplicationTypeDescriptionBase();
    OAIProvisionApplicationTypeDescriptionBase(QString json);
    ~OAIProvisionApplicationTypeDescriptionBase() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAsync() const;
    void setAsync(const bool &async);
    bool is_async_Set() const;
    bool is_async_Valid() const;

    OAIProvisionApplicationTypeKind getKind() const;
    void setKind(const OAIProvisionApplicationTypeKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_async;
    bool m_async_isSet;
    bool m_async_isValid;

    OAIProvisionApplicationTypeKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProvisionApplicationTypeDescriptionBase)

#endif // OAIProvisionApplicationTypeDescriptionBase_H
