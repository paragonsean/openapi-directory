/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExternalStoreProvisionApplicationTypeDescription.h
 *
 * Describes the operation to register or provision an application type using an application package from an external store instead of a package uploaded to the Service Fabric image store.
 */

#ifndef OAIExternalStoreProvisionApplicationTypeDescription_H
#define OAIExternalStoreProvisionApplicationTypeDescription_H

#include <QJsonObject>

#include "OAIProvisionApplicationTypeDescriptionBase.h"
#include "OAIProvisionApplicationTypeKind.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExternalStoreProvisionApplicationTypeDescription : public OAIObject {
public:
    OAIExternalStoreProvisionApplicationTypeDescription();
    OAIExternalStoreProvisionApplicationTypeDescription(QString json);
    ~OAIExternalStoreProvisionApplicationTypeDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAsync() const;
    void setAsync(const bool &async);
    bool is_async_Set() const;
    bool is_async_Valid() const;

    OAIProvisionApplicationTypeKind getKind() const;
    void setKind(const OAIProvisionApplicationTypeKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getApplicationPackageDownloadUri() const;
    void setApplicationPackageDownloadUri(const QString &application_package_download_uri);
    bool is_application_package_download_uri_Set() const;
    bool is_application_package_download_uri_Valid() const;

    QString getApplicationTypeName() const;
    void setApplicationTypeName(const QString &application_type_name);
    bool is_application_type_name_Set() const;
    bool is_application_type_name_Valid() const;

    QString getApplicationTypeVersion() const;
    void setApplicationTypeVersion(const QString &application_type_version);
    bool is_application_type_version_Set() const;
    bool is_application_type_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_async;
    bool m_async_isSet;
    bool m_async_isValid;

    OAIProvisionApplicationTypeKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_application_package_download_uri;
    bool m_application_package_download_uri_isSet;
    bool m_application_package_download_uri_isValid;

    QString m_application_type_name;
    bool m_application_type_name_isSet;
    bool m_application_type_name_isValid;

    QString m_application_type_version;
    bool m_application_type_version_isSet;
    bool m_application_type_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExternalStoreProvisionApplicationTypeDescription)

#endif // OAIExternalStoreProvisionApplicationTypeDescription_H
