/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServicePlacementPreferPrimaryDomainPolicyDescription.h
 *
 * Describes the policy to be used for placement of a Service Fabric service where the service&#39;s Primary replicas should optimally be placed in a particular domain.  This placement policy is usually used with fault domains in scenarios where the Service Fabric cluster is geographically distributed in order to indicate that a service&#39;s primary replica should be located in a particular fault domain, which in geo-distributed scenarios usually aligns with regional or datacenter boundaries. Note that since this is an optimization it is possible that the Primary replica may not end up located in this domain due to failures, capacity limits, or other constraints.
 */

#ifndef OAIServicePlacementPreferPrimaryDomainPolicyDescription_H
#define OAIServicePlacementPreferPrimaryDomainPolicyDescription_H

#include <QJsonObject>

#include "OAIServicePlacementPolicyDescription.h"
#include "OAIServicePlacementPolicyType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServicePlacementPreferPrimaryDomainPolicyDescription : public OAIObject {
public:
    OAIServicePlacementPreferPrimaryDomainPolicyDescription();
    OAIServicePlacementPreferPrimaryDomainPolicyDescription(QString json);
    ~OAIServicePlacementPreferPrimaryDomainPolicyDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIServicePlacementPolicyType getType() const;
    void setType(const OAIServicePlacementPolicyType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIServicePlacementPolicyType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServicePlacementPreferPrimaryDomainPolicyDescription)

#endif // OAIServicePlacementPreferPrimaryDomainPolicyDescription_H
