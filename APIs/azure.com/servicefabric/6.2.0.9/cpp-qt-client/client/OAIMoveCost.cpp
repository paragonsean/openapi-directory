/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMoveCost.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMoveCost::OAIMoveCost(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMoveCost::OAIMoveCost() {
    this->initializeModel();
}

OAIMoveCost::~OAIMoveCost() {}

void OAIMoveCost::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMoveCost::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMoveCost::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Zero", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMoveCost::ZERO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Low", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMoveCost::LOW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Medium", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMoveCost::MEDIUM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("High", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMoveCost::HIGH;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMoveCost::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMoveCost::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMoveCost::ZERO:
            val = "Zero";
            break;
        case eOAIMoveCost::LOW:
            val = "Low";
            break;
        case eOAIMoveCost::MEDIUM:
            val = "Medium";
            break;
        case eOAIMoveCost::HIGH:
            val = "High";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMoveCost::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMoveCost::eOAIMoveCost OAIMoveCost::getValue() const {
    return m_value;
}

void OAIMoveCost::setValue(const OAIMoveCost::eOAIMoveCost& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMoveCost::isSet() const {
    
    return m_value_isSet;
}

bool OAIMoveCost::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
