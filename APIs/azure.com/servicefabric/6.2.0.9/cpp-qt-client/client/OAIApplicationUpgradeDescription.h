/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationUpgradeDescription.h
 *
 * Describes the parameters for an application upgrade. Please note that upgrade description replaces the existing application description. This means that if the parameters are not specified, the existing parameters on the applications will be overwritten with the empty parameters list. This would results in application using the default value of the parameters from the application manifest. If you do not want to change any existing parameter values, please get the application parameters first using the GetApplicationInfo query and then supply those values as Parameters in this ApplicationUpgradeDescription.
 */

#ifndef OAIApplicationUpgradeDescription_H
#define OAIApplicationUpgradeDescription_H

#include <QJsonObject>

#include "OAIApplicationHealthPolicy.h"
#include "OAIApplicationParameter.h"
#include "OAIMonitoringPolicyDescription.h"
#include "OAIUpgradeKind.h"
#include "OAIUpgradeMode.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationHealthPolicy;
class OAIMonitoringPolicyDescription;
class OAIApplicationParameter;

class OAIApplicationUpgradeDescription : public OAIObject {
public:
    OAIApplicationUpgradeDescription();
    OAIApplicationUpgradeDescription(QString json);
    ~OAIApplicationUpgradeDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApplicationHealthPolicy getApplicationHealthPolicy() const;
    void setApplicationHealthPolicy(const OAIApplicationHealthPolicy &application_health_policy);
    bool is_application_health_policy_Set() const;
    bool is_application_health_policy_Valid() const;

    bool isForceRestart() const;
    void setForceRestart(const bool &force_restart);
    bool is_force_restart_Set() const;
    bool is_force_restart_Valid() const;

    OAIMonitoringPolicyDescription getMonitoringPolicy() const;
    void setMonitoringPolicy(const OAIMonitoringPolicyDescription &monitoring_policy);
    bool is_monitoring_policy_Set() const;
    bool is_monitoring_policy_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIApplicationParameter> getParameters() const;
    void setParameters(const QList<OAIApplicationParameter> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    OAIUpgradeMode getRollingUpgradeMode() const;
    void setRollingUpgradeMode(const OAIUpgradeMode &rolling_upgrade_mode);
    bool is_rolling_upgrade_mode_Set() const;
    bool is_rolling_upgrade_mode_Valid() const;

    QString getTargetApplicationTypeVersion() const;
    void setTargetApplicationTypeVersion(const QString &target_application_type_version);
    bool is_target_application_type_version_Set() const;
    bool is_target_application_type_version_Valid() const;

    OAIUpgradeKind getUpgradeKind() const;
    void setUpgradeKind(const OAIUpgradeKind &upgrade_kind);
    bool is_upgrade_kind_Set() const;
    bool is_upgrade_kind_Valid() const;

    qint64 getUpgradeReplicaSetCheckTimeoutInSeconds() const;
    void setUpgradeReplicaSetCheckTimeoutInSeconds(const qint64 &upgrade_replica_set_check_timeout_in_seconds);
    bool is_upgrade_replica_set_check_timeout_in_seconds_Set() const;
    bool is_upgrade_replica_set_check_timeout_in_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApplicationHealthPolicy m_application_health_policy;
    bool m_application_health_policy_isSet;
    bool m_application_health_policy_isValid;

    bool m_force_restart;
    bool m_force_restart_isSet;
    bool m_force_restart_isValid;

    OAIMonitoringPolicyDescription m_monitoring_policy;
    bool m_monitoring_policy_isSet;
    bool m_monitoring_policy_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIApplicationParameter> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    OAIUpgradeMode m_rolling_upgrade_mode;
    bool m_rolling_upgrade_mode_isSet;
    bool m_rolling_upgrade_mode_isValid;

    QString m_target_application_type_version;
    bool m_target_application_type_version_isSet;
    bool m_target_application_type_version_isValid;

    OAIUpgradeKind m_upgrade_kind;
    bool m_upgrade_kind_isSet;
    bool m_upgrade_kind_isValid;

    qint64 m_upgrade_replica_set_check_timeout_in_seconds;
    bool m_upgrade_replica_set_check_timeout_in_seconds_isSet;
    bool m_upgrade_replica_set_check_timeout_in_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationUpgradeDescription)

#endif // OAIApplicationUpgradeDescription_H
