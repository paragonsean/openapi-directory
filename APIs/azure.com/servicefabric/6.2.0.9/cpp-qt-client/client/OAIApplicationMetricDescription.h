/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationMetricDescription.h
 *
 * Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.
 */

#ifndef OAIApplicationMetricDescription_H
#define OAIApplicationMetricDescription_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplicationMetricDescription : public OAIObject {
public:
    OAIApplicationMetricDescription();
    OAIApplicationMetricDescription(QString json);
    ~OAIApplicationMetricDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getMaximumCapacity() const;
    void setMaximumCapacity(const qint64 &maximum_capacity);
    bool is_maximum_capacity_Set() const;
    bool is_maximum_capacity_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint64 getReservationCapacity() const;
    void setReservationCapacity(const qint64 &reservation_capacity);
    bool is_reservation_capacity_Set() const;
    bool is_reservation_capacity_Valid() const;

    qint64 getTotalApplicationCapacity() const;
    void setTotalApplicationCapacity(const qint64 &total_application_capacity);
    bool is_total_application_capacity_Set() const;
    bool is_total_application_capacity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_maximum_capacity;
    bool m_maximum_capacity_isSet;
    bool m_maximum_capacity_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint64 m_reservation_capacity;
    bool m_reservation_capacity_isSet;
    bool m_reservation_capacity_isValid;

    qint64 m_total_application_capacity;
    bool m_total_application_capacity_isSet;
    bool m_total_application_capacity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationMetricDescription)

#endif // OAIApplicationMetricDescription_H
