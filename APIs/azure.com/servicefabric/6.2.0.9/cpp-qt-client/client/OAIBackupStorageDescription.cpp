/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBackupStorageDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBackupStorageDescription::OAIBackupStorageDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBackupStorageDescription::OAIBackupStorageDescription() {
    this->initializeModel();
}

OAIBackupStorageDescription::~OAIBackupStorageDescription() {}

void OAIBackupStorageDescription::initializeModel() {

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_storage_kind_isSet = false;
    m_storage_kind_isValid = false;
}

void OAIBackupStorageDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBackupStorageDescription::fromJsonObject(QJsonObject json) {

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("FriendlyName")]);
    m_friendly_name_isSet = !json[QString("FriendlyName")].isNull() && m_friendly_name_isValid;

    m_storage_kind_isValid = ::OpenAPI::fromJsonValue(m_storage_kind, json[QString("StorageKind")]);
    m_storage_kind_isSet = !json[QString("StorageKind")].isNull() && m_storage_kind_isValid;
}

QString OAIBackupStorageDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBackupStorageDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_friendly_name_isSet) {
        obj.insert(QString("FriendlyName"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_storage_kind.isSet()) {
        obj.insert(QString("StorageKind"), ::OpenAPI::toJsonValue(m_storage_kind));
    }
    return obj;
}

QString OAIBackupStorageDescription::getFriendlyName() const {
    return m_friendly_name;
}
void OAIBackupStorageDescription::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIBackupStorageDescription::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIBackupStorageDescription::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

OAIBackupStorageKind OAIBackupStorageDescription::getStorageKind() const {
    return m_storage_kind;
}
void OAIBackupStorageDescription::setStorageKind(const OAIBackupStorageKind &storage_kind) {
    m_storage_kind = storage_kind;
    m_storage_kind_isSet = true;
}

bool OAIBackupStorageDescription::is_storage_kind_Set() const{
    return m_storage_kind_isSet;
}

bool OAIBackupStorageDescription::is_storage_kind_Valid() const{
    return m_storage_kind_isValid;
}

bool OAIBackupStorageDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_kind.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBackupStorageDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_storage_kind_isValid && true;
}

} // namespace OpenAPI
