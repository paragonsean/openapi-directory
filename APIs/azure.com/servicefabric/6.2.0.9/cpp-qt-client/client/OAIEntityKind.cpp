/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEntityKind.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEntityKind::OAIEntityKind(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEntityKind::OAIEntityKind() {
    this->initializeModel();
}

OAIEntityKind::~OAIEntityKind() {}

void OAIEntityKind::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEntityKind::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEntityKind::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Invalid", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityKind::INVALID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Node", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityKind::NODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Partition", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityKind::PARTITION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Service", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityKind::SERVICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Application", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityKind::APPLICATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Replica", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityKind::REPLICA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DeployedApplication", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityKind::DEPLOYEDAPPLICATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DeployedServicePackage", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityKind::DEPLOYEDSERVICEPACKAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Cluster", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityKind::CLUSTER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEntityKind::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEntityKind::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEntityKind::INVALID:
            val = "Invalid";
            break;
        case eOAIEntityKind::NODE:
            val = "Node";
            break;
        case eOAIEntityKind::PARTITION:
            val = "Partition";
            break;
        case eOAIEntityKind::SERVICE:
            val = "Service";
            break;
        case eOAIEntityKind::APPLICATION:
            val = "Application";
            break;
        case eOAIEntityKind::REPLICA:
            val = "Replica";
            break;
        case eOAIEntityKind::DEPLOYEDAPPLICATION:
            val = "DeployedApplication";
            break;
        case eOAIEntityKind::DEPLOYEDSERVICEPACKAGE:
            val = "DeployedServicePackage";
            break;
        case eOAIEntityKind::CLUSTER:
            val = "Cluster";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEntityKind::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEntityKind::eOAIEntityKind OAIEntityKind::getValue() const {
    return m_value;
}

void OAIEntityKind::setValue(const OAIEntityKind::eOAIEntityKind& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEntityKind::isSet() const {
    
    return m_value_isSet;
}

bool OAIEntityKind::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
