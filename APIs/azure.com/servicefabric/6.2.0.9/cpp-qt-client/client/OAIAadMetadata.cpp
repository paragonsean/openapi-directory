/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAadMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAadMetadata::OAIAadMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAadMetadata::OAIAadMetadata() {
    this->initializeModel();
}

OAIAadMetadata::~OAIAadMetadata() {}

void OAIAadMetadata::initializeModel() {

    m_authority_isSet = false;
    m_authority_isValid = false;

    m_client_isSet = false;
    m_client_isValid = false;

    m_cluster_isSet = false;
    m_cluster_isValid = false;

    m_login_isSet = false;
    m_login_isValid = false;

    m_redirect_isSet = false;
    m_redirect_isValid = false;

    m_tenant_isSet = false;
    m_tenant_isValid = false;
}

void OAIAadMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAadMetadata::fromJsonObject(QJsonObject json) {

    m_authority_isValid = ::OpenAPI::fromJsonValue(m_authority, json[QString("authority")]);
    m_authority_isSet = !json[QString("authority")].isNull() && m_authority_isValid;

    m_client_isValid = ::OpenAPI::fromJsonValue(m_client, json[QString("client")]);
    m_client_isSet = !json[QString("client")].isNull() && m_client_isValid;

    m_cluster_isValid = ::OpenAPI::fromJsonValue(m_cluster, json[QString("cluster")]);
    m_cluster_isSet = !json[QString("cluster")].isNull() && m_cluster_isValid;

    m_login_isValid = ::OpenAPI::fromJsonValue(m_login, json[QString("login")]);
    m_login_isSet = !json[QString("login")].isNull() && m_login_isValid;

    m_redirect_isValid = ::OpenAPI::fromJsonValue(m_redirect, json[QString("redirect")]);
    m_redirect_isSet = !json[QString("redirect")].isNull() && m_redirect_isValid;

    m_tenant_isValid = ::OpenAPI::fromJsonValue(m_tenant, json[QString("tenant")]);
    m_tenant_isSet = !json[QString("tenant")].isNull() && m_tenant_isValid;
}

QString OAIAadMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAadMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_authority_isSet) {
        obj.insert(QString("authority"), ::OpenAPI::toJsonValue(m_authority));
    }
    if (m_client_isSet) {
        obj.insert(QString("client"), ::OpenAPI::toJsonValue(m_client));
    }
    if (m_cluster_isSet) {
        obj.insert(QString("cluster"), ::OpenAPI::toJsonValue(m_cluster));
    }
    if (m_login_isSet) {
        obj.insert(QString("login"), ::OpenAPI::toJsonValue(m_login));
    }
    if (m_redirect_isSet) {
        obj.insert(QString("redirect"), ::OpenAPI::toJsonValue(m_redirect));
    }
    if (m_tenant_isSet) {
        obj.insert(QString("tenant"), ::OpenAPI::toJsonValue(m_tenant));
    }
    return obj;
}

QString OAIAadMetadata::getAuthority() const {
    return m_authority;
}
void OAIAadMetadata::setAuthority(const QString &authority) {
    m_authority = authority;
    m_authority_isSet = true;
}

bool OAIAadMetadata::is_authority_Set() const{
    return m_authority_isSet;
}

bool OAIAadMetadata::is_authority_Valid() const{
    return m_authority_isValid;
}

QString OAIAadMetadata::getClient() const {
    return m_client;
}
void OAIAadMetadata::setClient(const QString &client) {
    m_client = client;
    m_client_isSet = true;
}

bool OAIAadMetadata::is_client_Set() const{
    return m_client_isSet;
}

bool OAIAadMetadata::is_client_Valid() const{
    return m_client_isValid;
}

QString OAIAadMetadata::getCluster() const {
    return m_cluster;
}
void OAIAadMetadata::setCluster(const QString &cluster) {
    m_cluster = cluster;
    m_cluster_isSet = true;
}

bool OAIAadMetadata::is_cluster_Set() const{
    return m_cluster_isSet;
}

bool OAIAadMetadata::is_cluster_Valid() const{
    return m_cluster_isValid;
}

QString OAIAadMetadata::getLogin() const {
    return m_login;
}
void OAIAadMetadata::setLogin(const QString &login) {
    m_login = login;
    m_login_isSet = true;
}

bool OAIAadMetadata::is_login_Set() const{
    return m_login_isSet;
}

bool OAIAadMetadata::is_login_Valid() const{
    return m_login_isValid;
}

QString OAIAadMetadata::getRedirect() const {
    return m_redirect;
}
void OAIAadMetadata::setRedirect(const QString &redirect) {
    m_redirect = redirect;
    m_redirect_isSet = true;
}

bool OAIAadMetadata::is_redirect_Set() const{
    return m_redirect_isSet;
}

bool OAIAadMetadata::is_redirect_Valid() const{
    return m_redirect_isValid;
}

QString OAIAadMetadata::getTenant() const {
    return m_tenant;
}
void OAIAadMetadata::setTenant(const QString &tenant) {
    m_tenant = tenant;
    m_tenant_isSet = true;
}

bool OAIAadMetadata::is_tenant_Set() const{
    return m_tenant_isSet;
}

bool OAIAadMetadata::is_tenant_Valid() const{
    return m_tenant_isValid;
}

bool OAIAadMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_authority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cluster_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_login_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redirect_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tenant_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAadMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
