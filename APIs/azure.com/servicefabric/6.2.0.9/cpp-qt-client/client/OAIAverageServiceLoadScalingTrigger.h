/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAverageServiceLoadScalingTrigger.h
 *
 * Represents a scaling policy related to an average load of a metric/resource of a service.
 */

#ifndef OAIAverageServiceLoadScalingTrigger_H
#define OAIAverageServiceLoadScalingTrigger_H

#include <QJsonObject>

#include "OAIScalingTriggerDescription.h"
#include "OAIScalingTriggerKind.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAverageServiceLoadScalingTrigger : public OAIObject {
public:
    OAIAverageServiceLoadScalingTrigger();
    OAIAverageServiceLoadScalingTrigger(QString json);
    ~OAIAverageServiceLoadScalingTrigger() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLowerLoadThreshold() const;
    void setLowerLoadThreshold(const QString &lower_load_threshold);
    bool is_lower_load_threshold_Set() const;
    bool is_lower_load_threshold_Valid() const;

    QString getMetricName() const;
    void setMetricName(const QString &metric_name);
    bool is_metric_name_Set() const;
    bool is_metric_name_Valid() const;

    qint64 getScaleIntervalInSeconds() const;
    void setScaleIntervalInSeconds(const qint64 &scale_interval_in_seconds);
    bool is_scale_interval_in_seconds_Set() const;
    bool is_scale_interval_in_seconds_Valid() const;

    QString getUpperLoadThreshold() const;
    void setUpperLoadThreshold(const QString &upper_load_threshold);
    bool is_upper_load_threshold_Set() const;
    bool is_upper_load_threshold_Valid() const;

    OAIScalingTriggerKind getKind() const;
    void setKind(const OAIScalingTriggerKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_lower_load_threshold;
    bool m_lower_load_threshold_isSet;
    bool m_lower_load_threshold_isValid;

    QString m_metric_name;
    bool m_metric_name_isSet;
    bool m_metric_name_isValid;

    qint64 m_scale_interval_in_seconds;
    bool m_scale_interval_in_seconds_isSet;
    bool m_scale_interval_in_seconds_isValid;

    QString m_upper_load_threshold;
    bool m_upper_load_threshold_isSet;
    bool m_upper_load_threshold_isValid;

    OAIScalingTriggerKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAverageServiceLoadScalingTrigger)

#endif // OAIAverageServiceLoadScalingTrigger_H
