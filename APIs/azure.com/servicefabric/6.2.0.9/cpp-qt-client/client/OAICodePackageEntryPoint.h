/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICodePackageEntryPoint.h
 *
 * Information about setup or main entry point of a code package deployed on a Service Fabric node.
 */

#ifndef OAICodePackageEntryPoint_H
#define OAICodePackageEntryPoint_H

#include <QJsonObject>

#include "OAICodePackageEntryPointStatistics.h"
#include "OAIEntryPointStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICodePackageEntryPointStatistics;

class OAICodePackageEntryPoint : public OAIObject {
public:
    OAICodePackageEntryPoint();
    OAICodePackageEntryPoint(QString json);
    ~OAICodePackageEntryPoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICodePackageEntryPointStatistics getCodePackageEntryPointStatistics() const;
    void setCodePackageEntryPointStatistics(const OAICodePackageEntryPointStatistics &code_package_entry_point_statistics);
    bool is_code_package_entry_point_statistics_Set() const;
    bool is_code_package_entry_point_statistics_Valid() const;

    QString getEntryPointLocation() const;
    void setEntryPointLocation(const QString &entry_point_location);
    bool is_entry_point_location_Set() const;
    bool is_entry_point_location_Valid() const;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QDateTime getNextActivationTime() const;
    void setNextActivationTime(const QDateTime &next_activation_time);
    bool is_next_activation_time_Set() const;
    bool is_next_activation_time_Valid() const;

    QString getProcessId() const;
    void setProcessId(const QString &process_id);
    bool is_process_id_Set() const;
    bool is_process_id_Valid() const;

    QString getRunAsUserName() const;
    void setRunAsUserName(const QString &run_as_user_name);
    bool is_run_as_user_name_Set() const;
    bool is_run_as_user_name_Valid() const;

    OAIEntryPointStatus getStatus() const;
    void setStatus(const OAIEntryPointStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICodePackageEntryPointStatistics m_code_package_entry_point_statistics;
    bool m_code_package_entry_point_statistics_isSet;
    bool m_code_package_entry_point_statistics_isValid;

    QString m_entry_point_location;
    bool m_entry_point_location_isSet;
    bool m_entry_point_location_isValid;

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QDateTime m_next_activation_time;
    bool m_next_activation_time_isSet;
    bool m_next_activation_time_isValid;

    QString m_process_id;
    bool m_process_id_isSet;
    bool m_process_id_isValid;

    QString m_run_as_user_name;
    bool m_run_as_user_name_isSet;
    bool m_run_as_user_name_isValid;

    OAIEntryPointStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICodePackageEntryPoint)

#endif // OAICodePackageEntryPoint_H
