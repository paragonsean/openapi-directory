/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINodeImpact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINodeImpact::OAINodeImpact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINodeImpact::OAINodeImpact() {
    this->initializeModel();
}

OAINodeImpact::~OAINodeImpact() {}

void OAINodeImpact::initializeModel() {

    m_impact_level_isSet = false;
    m_impact_level_isValid = false;

    m_node_name_isSet = false;
    m_node_name_isValid = false;
}

void OAINodeImpact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINodeImpact::fromJsonObject(QJsonObject json) {

    m_impact_level_isValid = ::OpenAPI::fromJsonValue(m_impact_level, json[QString("ImpactLevel")]);
    m_impact_level_isSet = !json[QString("ImpactLevel")].isNull() && m_impact_level_isValid;

    m_node_name_isValid = ::OpenAPI::fromJsonValue(m_node_name, json[QString("NodeName")]);
    m_node_name_isSet = !json[QString("NodeName")].isNull() && m_node_name_isValid;
}

QString OAINodeImpact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINodeImpact::asJsonObject() const {
    QJsonObject obj;
    if (m_impact_level_isSet) {
        obj.insert(QString("ImpactLevel"), ::OpenAPI::toJsonValue(m_impact_level));
    }
    if (m_node_name_isSet) {
        obj.insert(QString("NodeName"), ::OpenAPI::toJsonValue(m_node_name));
    }
    return obj;
}

QString OAINodeImpact::getImpactLevel() const {
    return m_impact_level;
}
void OAINodeImpact::setImpactLevel(const QString &impact_level) {
    m_impact_level = impact_level;
    m_impact_level_isSet = true;
}

bool OAINodeImpact::is_impact_level_Set() const{
    return m_impact_level_isSet;
}

bool OAINodeImpact::is_impact_level_Valid() const{
    return m_impact_level_isValid;
}

QString OAINodeImpact::getNodeName() const {
    return m_node_name;
}
void OAINodeImpact::setNodeName(const QString &node_name) {
    m_node_name = node_name;
    m_node_name_isSet = true;
}

bool OAINodeImpact::is_node_name_Set() const{
    return m_node_name_isSet;
}

bool OAINodeImpact::is_node_name_Valid() const{
    return m_node_name_isValid;
}

bool OAINodeImpact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_impact_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINodeImpact::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_node_name_isValid && true;
}

} // namespace OpenAPI
