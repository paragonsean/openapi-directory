/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationLoadInfo.h
 *
 * Load Information about a Service Fabric application.
 */

#ifndef OAIApplicationLoadInfo_H
#define OAIApplicationLoadInfo_H

#include <QJsonObject>

#include "OAIApplicationMetricDescription.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationMetricDescription;

class OAIApplicationLoadInfo : public OAIObject {
public:
    OAIApplicationLoadInfo();
    OAIApplicationLoadInfo(QString json);
    ~OAIApplicationLoadInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIApplicationMetricDescription> getApplicationLoadMetricInformation() const;
    void setApplicationLoadMetricInformation(const QList<OAIApplicationMetricDescription> &application_load_metric_information);
    bool is_application_load_metric_information_Set() const;
    bool is_application_load_metric_information_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint64 getMaximumNodes() const;
    void setMaximumNodes(const qint64 &maximum_nodes);
    bool is_maximum_nodes_Set() const;
    bool is_maximum_nodes_Valid() const;

    qint64 getMinimumNodes() const;
    void setMinimumNodes(const qint64 &minimum_nodes);
    bool is_minimum_nodes_Set() const;
    bool is_minimum_nodes_Valid() const;

    qint64 getNodeCount() const;
    void setNodeCount(const qint64 &node_count);
    bool is_node_count_Set() const;
    bool is_node_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIApplicationMetricDescription> m_application_load_metric_information;
    bool m_application_load_metric_information_isSet;
    bool m_application_load_metric_information_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint64 m_maximum_nodes;
    bool m_maximum_nodes_isSet;
    bool m_maximum_nodes_isValid;

    qint64 m_minimum_nodes;
    bool m_minimum_nodes_isSet;
    bool m_minimum_nodes_isValid;

    qint64 m_node_count;
    bool m_node_count_isSet;
    bool m_node_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationLoadInfo)

#endif // OAIApplicationLoadInfo_H
