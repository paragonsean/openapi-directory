/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHealthEvent.h
 *
 * Represents health information reported on a health entity, such as cluster, application or node, with additional metadata added by the Health Manager.
 */

#ifndef OAIHealthEvent_H
#define OAIHealthEvent_H

#include <QJsonObject>

#include "OAIHealthState.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHealthEvent : public OAIObject {
public:
    OAIHealthEvent();
    OAIHealthEvent(QString json);
    ~OAIHealthEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIHealthState getHealthState() const;
    void setHealthState(const OAIHealthState &health_state);
    bool is_health_state_Set() const;
    bool is_health_state_Valid() const;

    QString getProperty() const;
    void setProperty(const QString &property);
    bool is_property_Set() const;
    bool is_property_Valid() const;

    bool isRemoveWhenExpired() const;
    void setRemoveWhenExpired(const bool &remove_when_expired);
    bool is_remove_when_expired_Set() const;
    bool is_remove_when_expired_Valid() const;

    QString getSequenceNumber() const;
    void setSequenceNumber(const QString &sequence_number);
    bool is_sequence_number_Set() const;
    bool is_sequence_number_Valid() const;

    QString getSourceId() const;
    void setSourceId(const QString &source_id);
    bool is_source_id_Set() const;
    bool is_source_id_Valid() const;

    QString getTimeToLiveInMilliSeconds() const;
    void setTimeToLiveInMilliSeconds(const QString &time_to_live_in_milli_seconds);
    bool is_time_to_live_in_milli_seconds_Set() const;
    bool is_time_to_live_in_milli_seconds_Valid() const;

    bool isIsExpired() const;
    void setIsExpired(const bool &is_expired);
    bool is_is_expired_Set() const;
    bool is_is_expired_Valid() const;

    QDateTime getLastErrorTransitionAt() const;
    void setLastErrorTransitionAt(const QDateTime &last_error_transition_at);
    bool is_last_error_transition_at_Set() const;
    bool is_last_error_transition_at_Valid() const;

    QDateTime getLastModifiedUtcTimestamp() const;
    void setLastModifiedUtcTimestamp(const QDateTime &last_modified_utc_timestamp);
    bool is_last_modified_utc_timestamp_Set() const;
    bool is_last_modified_utc_timestamp_Valid() const;

    QDateTime getLastOkTransitionAt() const;
    void setLastOkTransitionAt(const QDateTime &last_ok_transition_at);
    bool is_last_ok_transition_at_Set() const;
    bool is_last_ok_transition_at_Valid() const;

    QDateTime getLastWarningTransitionAt() const;
    void setLastWarningTransitionAt(const QDateTime &last_warning_transition_at);
    bool is_last_warning_transition_at_Set() const;
    bool is_last_warning_transition_at_Valid() const;

    QDateTime getSourceUtcTimestamp() const;
    void setSourceUtcTimestamp(const QDateTime &source_utc_timestamp);
    bool is_source_utc_timestamp_Set() const;
    bool is_source_utc_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIHealthState m_health_state;
    bool m_health_state_isSet;
    bool m_health_state_isValid;

    QString m_property;
    bool m_property_isSet;
    bool m_property_isValid;

    bool m_remove_when_expired;
    bool m_remove_when_expired_isSet;
    bool m_remove_when_expired_isValid;

    QString m_sequence_number;
    bool m_sequence_number_isSet;
    bool m_sequence_number_isValid;

    QString m_source_id;
    bool m_source_id_isSet;
    bool m_source_id_isValid;

    QString m_time_to_live_in_milli_seconds;
    bool m_time_to_live_in_milli_seconds_isSet;
    bool m_time_to_live_in_milli_seconds_isValid;

    bool m_is_expired;
    bool m_is_expired_isSet;
    bool m_is_expired_isValid;

    QDateTime m_last_error_transition_at;
    bool m_last_error_transition_at_isSet;
    bool m_last_error_transition_at_isValid;

    QDateTime m_last_modified_utc_timestamp;
    bool m_last_modified_utc_timestamp_isSet;
    bool m_last_modified_utc_timestamp_isValid;

    QDateTime m_last_ok_transition_at;
    bool m_last_ok_transition_at_isSet;
    bool m_last_ok_transition_at_isValid;

    QDateTime m_last_warning_transition_at;
    bool m_last_warning_transition_at_isSet;
    bool m_last_warning_transition_at_isValid;

    QDateTime m_source_utc_timestamp;
    bool m_source_utc_timestamp_isSet;
    bool m_source_utc_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHealthEvent)

#endif // OAIHealthEvent_H
