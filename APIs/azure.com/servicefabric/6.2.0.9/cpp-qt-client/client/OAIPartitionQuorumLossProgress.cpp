/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPartitionQuorumLossProgress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPartitionQuorumLossProgress::OAIPartitionQuorumLossProgress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPartitionQuorumLossProgress::OAIPartitionQuorumLossProgress() {
    this->initializeModel();
}

OAIPartitionQuorumLossProgress::~OAIPartitionQuorumLossProgress() {}

void OAIPartitionQuorumLossProgress::initializeModel() {

    m_invoke_quorum_loss_result_isSet = false;
    m_invoke_quorum_loss_result_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIPartitionQuorumLossProgress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPartitionQuorumLossProgress::fromJsonObject(QJsonObject json) {

    m_invoke_quorum_loss_result_isValid = ::OpenAPI::fromJsonValue(m_invoke_quorum_loss_result, json[QString("InvokeQuorumLossResult")]);
    m_invoke_quorum_loss_result_isSet = !json[QString("InvokeQuorumLossResult")].isNull() && m_invoke_quorum_loss_result_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;
}

QString OAIPartitionQuorumLossProgress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPartitionQuorumLossProgress::asJsonObject() const {
    QJsonObject obj;
    if (m_invoke_quorum_loss_result.isSet()) {
        obj.insert(QString("InvokeQuorumLossResult"), ::OpenAPI::toJsonValue(m_invoke_quorum_loss_result));
    }
    if (m_state.isSet()) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

OAIInvokeQuorumLossResult OAIPartitionQuorumLossProgress::getInvokeQuorumLossResult() const {
    return m_invoke_quorum_loss_result;
}
void OAIPartitionQuorumLossProgress::setInvokeQuorumLossResult(const OAIInvokeQuorumLossResult &invoke_quorum_loss_result) {
    m_invoke_quorum_loss_result = invoke_quorum_loss_result;
    m_invoke_quorum_loss_result_isSet = true;
}

bool OAIPartitionQuorumLossProgress::is_invoke_quorum_loss_result_Set() const{
    return m_invoke_quorum_loss_result_isSet;
}

bool OAIPartitionQuorumLossProgress::is_invoke_quorum_loss_result_Valid() const{
    return m_invoke_quorum_loss_result_isValid;
}

OAIOperationState OAIPartitionQuorumLossProgress::getState() const {
    return m_state;
}
void OAIPartitionQuorumLossProgress::setState(const OAIOperationState &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIPartitionQuorumLossProgress::is_state_Set() const{
    return m_state_isSet;
}

bool OAIPartitionQuorumLossProgress::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIPartitionQuorumLossProgress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_invoke_quorum_loss_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPartitionQuorumLossProgress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
