/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBackupPolicyScope.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBackupPolicyScope::OAIBackupPolicyScope(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBackupPolicyScope::OAIBackupPolicyScope() {
    this->initializeModel();
}

OAIBackupPolicyScope::~OAIBackupPolicyScope() {}

void OAIBackupPolicyScope::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIBackupPolicyScope::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIBackupPolicyScope::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Invalid", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBackupPolicyScope::INVALID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Partition", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBackupPolicyScope::PARTITION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Service", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBackupPolicyScope::SERVICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Application", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBackupPolicyScope::APPLICATION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIBackupPolicyScope::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIBackupPolicyScope::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIBackupPolicyScope::INVALID:
            val = "Invalid";
            break;
        case eOAIBackupPolicyScope::PARTITION:
            val = "Partition";
            break;
        case eOAIBackupPolicyScope::SERVICE:
            val = "Service";
            break;
        case eOAIBackupPolicyScope::APPLICATION:
            val = "Application";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIBackupPolicyScope::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIBackupPolicyScope::eOAIBackupPolicyScope OAIBackupPolicyScope::getValue() const {
    return m_value;
}

void OAIBackupPolicyScope::setValue(const OAIBackupPolicyScope::eOAIBackupPolicyScope& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIBackupPolicyScope::isSet() const {
    
    return m_value_isSet;
}

bool OAIBackupPolicyScope::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
