/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServicePartitionKind.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServicePartitionKind::OAIServicePartitionKind(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServicePartitionKind::OAIServicePartitionKind() {
    this->initializeModel();
}

OAIServicePartitionKind::~OAIServicePartitionKind() {}

void OAIServicePartitionKind::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIServicePartitionKind::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIServicePartitionKind::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Invalid", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServicePartitionKind::INVALID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Singleton", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServicePartitionKind::SINGLETON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Int64Range", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServicePartitionKind::INT64RANGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Named", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServicePartitionKind::NAMED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIServicePartitionKind::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIServicePartitionKind::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIServicePartitionKind::INVALID:
            val = "Invalid";
            break;
        case eOAIServicePartitionKind::SINGLETON:
            val = "Singleton";
            break;
        case eOAIServicePartitionKind::INT64RANGE:
            val = "Int64Range";
            break;
        case eOAIServicePartitionKind::NAMED:
            val = "Named";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIServicePartitionKind::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIServicePartitionKind::eOAIServicePartitionKind OAIServicePartitionKind::getValue() const {
    return m_value;
}

void OAIServicePartitionKind::setValue(const OAIServicePartitionKind::eOAIServicePartitionKind& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIServicePartitionKind::isSet() const {
    
    return m_value_isSet;
}

bool OAIServicePartitionKind::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
