/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.HealthState;
import org.openapitools.client.model.PartitionInformation;
import org.openapitools.client.model.ServiceKind;
import org.openapitools.client.model.ServicePartitionStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a partition of a Service Fabric service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:57:01.944731-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ServicePartitionInfo {
  public static final String SERIALIZED_NAME_HEALTH_STATE = "HealthState";
  @SerializedName(SERIALIZED_NAME_HEALTH_STATE)
  private HealthState healthState;

  public static final String SERIALIZED_NAME_PARTITION_INFORMATION = "PartitionInformation";
  @SerializedName(SERIALIZED_NAME_PARTITION_INFORMATION)
  private PartitionInformation partitionInformation;

  public static final String SERIALIZED_NAME_PARTITION_STATUS = "PartitionStatus";
  @SerializedName(SERIALIZED_NAME_PARTITION_STATUS)
  private ServicePartitionStatus partitionStatus;

  public static final String SERIALIZED_NAME_SERVICE_KIND = "ServiceKind";
  @SerializedName(SERIALIZED_NAME_SERVICE_KIND)
  protected ServiceKind serviceKind;

  public ServicePartitionInfo() {
    this.serviceKind = this.getClass().getSimpleName();
  }

  public ServicePartitionInfo healthState(HealthState healthState) {
    this.healthState = healthState;
    return this;
  }

  /**
   * Get healthState
   * @return healthState
   */
  @javax.annotation.Nullable
  public HealthState getHealthState() {
    return healthState;
  }

  public void setHealthState(HealthState healthState) {
    this.healthState = healthState;
  }


  public ServicePartitionInfo partitionInformation(PartitionInformation partitionInformation) {
    this.partitionInformation = partitionInformation;
    return this;
  }

  /**
   * Get partitionInformation
   * @return partitionInformation
   */
  @javax.annotation.Nullable
  public PartitionInformation getPartitionInformation() {
    return partitionInformation;
  }

  public void setPartitionInformation(PartitionInformation partitionInformation) {
    this.partitionInformation = partitionInformation;
  }


  public ServicePartitionInfo partitionStatus(ServicePartitionStatus partitionStatus) {
    this.partitionStatus = partitionStatus;
    return this;
  }

  /**
   * Get partitionStatus
   * @return partitionStatus
   */
  @javax.annotation.Nullable
  public ServicePartitionStatus getPartitionStatus() {
    return partitionStatus;
  }

  public void setPartitionStatus(ServicePartitionStatus partitionStatus) {
    this.partitionStatus = partitionStatus;
  }


  public ServicePartitionInfo serviceKind(ServiceKind serviceKind) {
    this.serviceKind = serviceKind;
    return this;
  }

  /**
   * Get serviceKind
   * @return serviceKind
   */
  @javax.annotation.Nonnull
  public ServiceKind getServiceKind() {
    return serviceKind;
  }

  public void setServiceKind(ServiceKind serviceKind) {
    this.serviceKind = serviceKind;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServicePartitionInfo servicePartitionInfo = (ServicePartitionInfo) o;
    return Objects.equals(this.healthState, servicePartitionInfo.healthState) &&
        Objects.equals(this.partitionInformation, servicePartitionInfo.partitionInformation) &&
        Objects.equals(this.partitionStatus, servicePartitionInfo.partitionStatus) &&
        Objects.equals(this.serviceKind, servicePartitionInfo.serviceKind);
  }

  @Override
  public int hashCode() {
    return Objects.hash(healthState, partitionInformation, partitionStatus, serviceKind);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServicePartitionInfo {\n");
    sb.append("    healthState: ").append(toIndentedString(healthState)).append("\n");
    sb.append("    partitionInformation: ").append(toIndentedString(partitionInformation)).append("\n");
    sb.append("    partitionStatus: ").append(toIndentedString(partitionStatus)).append("\n");
    sb.append("    serviceKind: ").append(toIndentedString(serviceKind)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("HealthState");
    openapiFields.add("PartitionInformation");
    openapiFields.add("PartitionStatus");
    openapiFields.add("ServiceKind");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ServiceKind");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServicePartitionInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServicePartitionInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServicePartitionInfo is not found in the empty JSON string", ServicePartitionInfo.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("ServiceKind").getAsString();
      switch (discriminatorValue) {
        case "StatefulServicePartitionInfo":
          StatefulServicePartitionInfo.validateJsonElement(jsonElement);
          break;
        case "StatelessServicePartitionInfo":
          StatelessServicePartitionInfo.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `ServiceKind` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of ServicePartitionInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServicePartitionInfo
   * @throws IOException if the JSON string is invalid with respect to ServicePartitionInfo
   */
  public static ServicePartitionInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServicePartitionInfo.class);
  }

  /**
   * Convert an instance of ServicePartitionInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

