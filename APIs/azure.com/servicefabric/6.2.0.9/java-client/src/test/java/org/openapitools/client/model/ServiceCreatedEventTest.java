/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.client.model.FabricEventKind;
import org.openapitools.client.model.ServiceEvent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ServiceCreatedEvent
 */
public class ServiceCreatedEventTest {
    private final ServiceCreatedEvent model = new ServiceCreatedEvent();

    /**
     * Model tests for ServiceCreatedEvent
     */
    @Test
    public void testServiceCreatedEvent() {
        // TODO: test ServiceCreatedEvent
    }

    /**
     * Test the property 'eventInstanceId'
     */
    @Test
    public void eventInstanceIdTest() {
        // TODO: test eventInstanceId
    }

    /**
     * Test the property 'hasCorrelatedEvents'
     */
    @Test
    public void hasCorrelatedEventsTest() {
        // TODO: test hasCorrelatedEvents
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'timeStamp'
     */
    @Test
    public void timeStampTest() {
        // TODO: test timeStamp
    }

    /**
     * Test the property 'serviceId'
     */
    @Test
    public void serviceIdTest() {
        // TODO: test serviceId
    }

    /**
     * Test the property 'applicationName'
     */
    @Test
    public void applicationNameTest() {
        // TODO: test applicationName
    }

    /**
     * Test the property 'applicationTypeName'
     */
    @Test
    public void applicationTypeNameTest() {
        // TODO: test applicationTypeName
    }

    /**
     * Test the property 'isStateful'
     */
    @Test
    public void isStatefulTest() {
        // TODO: test isStateful
    }

    /**
     * Test the property 'minReplicaSetSize'
     */
    @Test
    public void minReplicaSetSizeTest() {
        // TODO: test minReplicaSetSize
    }

    /**
     * Test the property 'partitionCount'
     */
    @Test
    public void partitionCountTest() {
        // TODO: test partitionCount
    }

    /**
     * Test the property 'partitionId'
     */
    @Test
    public void partitionIdTest() {
        // TODO: test partitionId
    }

    /**
     * Test the property 'serviceInstance'
     */
    @Test
    public void serviceInstanceTest() {
        // TODO: test serviceInstance
    }

    /**
     * Test the property 'servicePackageVersion'
     */
    @Test
    public void servicePackageVersionTest() {
        // TODO: test servicePackageVersion
    }

    /**
     * Test the property 'serviceTypeName'
     */
    @Test
    public void serviceTypeNameTest() {
        // TODO: test serviceTypeName
    }

    /**
     * Test the property 'targetReplicaSetSize'
     */
    @Test
    public void targetReplicaSetSizeTest() {
        // TODO: test targetReplicaSetSize
    }

}
