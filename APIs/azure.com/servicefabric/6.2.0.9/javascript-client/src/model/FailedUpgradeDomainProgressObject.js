/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NodeUpgradeProgressInfo from './NodeUpgradeProgressInfo';

/**
 * The FailedUpgradeDomainProgressObject model module.
 * @module model/FailedUpgradeDomainProgressObject
 * @version 6.2.0.9
 */
class FailedUpgradeDomainProgressObject {
    /**
     * Constructs a new <code>FailedUpgradeDomainProgressObject</code>.
     * The detailed upgrade progress for nodes in the current upgrade domain at the point of failure.
     * @alias module:model/FailedUpgradeDomainProgressObject
     */
    constructor() { 
        
        FailedUpgradeDomainProgressObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FailedUpgradeDomainProgressObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FailedUpgradeDomainProgressObject} obj Optional instance to populate.
     * @return {module:model/FailedUpgradeDomainProgressObject} The populated <code>FailedUpgradeDomainProgressObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FailedUpgradeDomainProgressObject();

            if (data.hasOwnProperty('DomainName')) {
                obj['DomainName'] = ApiClient.convertToType(data['DomainName'], 'String');
            }
            if (data.hasOwnProperty('NodeUpgradeProgressList')) {
                obj['NodeUpgradeProgressList'] = ApiClient.convertToType(data['NodeUpgradeProgressList'], [NodeUpgradeProgressInfo]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FailedUpgradeDomainProgressObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FailedUpgradeDomainProgressObject</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['DomainName'] && !(typeof data['DomainName'] === 'string' || data['DomainName'] instanceof String)) {
            throw new Error("Expected the field `DomainName` to be a primitive type in the JSON string but got " + data['DomainName']);
        }
        if (data['NodeUpgradeProgressList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['NodeUpgradeProgressList'])) {
                throw new Error("Expected the field `NodeUpgradeProgressList` to be an array in the JSON data but got " + data['NodeUpgradeProgressList']);
            }
            // validate the optional field `NodeUpgradeProgressList` (array)
            for (const item of data['NodeUpgradeProgressList']) {
                NodeUpgradeProgressInfo.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The name of the upgrade domain
 * @member {String} DomainName
 */
FailedUpgradeDomainProgressObject.prototype['DomainName'] = undefined;

/**
 * List of upgrading nodes and their statuses
 * @member {Array.<module:model/NodeUpgradeProgressInfo>} NodeUpgradeProgressList
 */
FailedUpgradeDomainProgressObject.prototype['NodeUpgradeProgressList'] = undefined;






export default FailedUpgradeDomainProgressObject;

