/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationEvent from './ApplicationEvent';
import FabricEventKind from './FabricEventKind';

/**
 * The ProcessDeactivatedEvent model module.
 * @module model/ProcessDeactivatedEvent
 * @version 6.2.0.9
 */
class ProcessDeactivatedEvent {
    /**
     * Constructs a new <code>ProcessDeactivatedEvent</code>.
     * Process Deactivated event.
     * @alias module:model/ProcessDeactivatedEvent
     * @extends module:model/ApplicationEvent
     * @implements module:model/ApplicationEvent
     * @param eventInstanceId {String} The identifier for the FabricEvent instance.
     * @param kind {module:model/FabricEventKind} 
     * @param timeStamp {Date} The time event was logged.
     * @param applicationId {String} The identity of the application. This is an encoded representation of the application name. This is used in the REST APIs to identify the application resource. Starting in version 6.0, hierarchical names are delimited with the \"\\~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp\\~app1\" in 6.0+ and \"myapp/app1\" in previous versions.
     * @param codePackageName {String} Name of Code package.
     * @param entryPointType {String} Type of EntryPoint.
     * @param exeName {String} Name of executable.
     * @param exitCode {Number} Exit code of process.
     * @param hostId {String} Host Id.
     * @param isExclusive {Boolean} Indicates IsExclusive flag.
     * @param processId {Number} Process Id.
     * @param serviceName {String} Name of Service.
     * @param servicePackageActivationId {String} Activation Id of Service package.
     * @param servicePackageName {String} Name of Service package.
     * @param startTime {Date} Start time of process.
     * @param unexpectedTermination {Boolean} Indicates if termination is unexpected.
     */
    constructor(eventInstanceId, kind, timeStamp, applicationId, codePackageName, entryPointType, exeName, exitCode, hostId, isExclusive, processId, serviceName, servicePackageActivationId, servicePackageName, startTime, unexpectedTermination) { 
        ApplicationEvent.initialize(this, eventInstanceId, kind, timeStamp, applicationId);
        ProcessDeactivatedEvent.initialize(this, eventInstanceId, kind, timeStamp, applicationId, codePackageName, entryPointType, exeName, exitCode, hostId, isExclusive, processId, serviceName, servicePackageActivationId, servicePackageName, startTime, unexpectedTermination);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eventInstanceId, kind, timeStamp, applicationId, codePackageName, entryPointType, exeName, exitCode, hostId, isExclusive, processId, serviceName, servicePackageActivationId, servicePackageName, startTime, unexpectedTermination) { 
        obj['CodePackageName'] = codePackageName;
        obj['EntryPointType'] = entryPointType;
        obj['ExeName'] = exeName;
        obj['ExitCode'] = exitCode;
        obj['HostId'] = hostId;
        obj['IsExclusive'] = isExclusive;
        obj['ProcessId'] = processId;
        obj['ServiceName'] = serviceName;
        obj['ServicePackageActivationId'] = servicePackageActivationId;
        obj['ServicePackageName'] = servicePackageName;
        obj['StartTime'] = startTime;
        obj['UnexpectedTermination'] = unexpectedTermination;
    }

    /**
     * Constructs a <code>ProcessDeactivatedEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProcessDeactivatedEvent} obj Optional instance to populate.
     * @return {module:model/ProcessDeactivatedEvent} The populated <code>ProcessDeactivatedEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProcessDeactivatedEvent();
            ApplicationEvent.constructFromObject(data, obj);
            ApplicationEvent.constructFromObject(data, obj);

            if (data.hasOwnProperty('CodePackageName')) {
                obj['CodePackageName'] = ApiClient.convertToType(data['CodePackageName'], 'String');
            }
            if (data.hasOwnProperty('EntryPointType')) {
                obj['EntryPointType'] = ApiClient.convertToType(data['EntryPointType'], 'String');
            }
            if (data.hasOwnProperty('ExeName')) {
                obj['ExeName'] = ApiClient.convertToType(data['ExeName'], 'String');
            }
            if (data.hasOwnProperty('ExitCode')) {
                obj['ExitCode'] = ApiClient.convertToType(data['ExitCode'], 'Number');
            }
            if (data.hasOwnProperty('HostId')) {
                obj['HostId'] = ApiClient.convertToType(data['HostId'], 'String');
            }
            if (data.hasOwnProperty('IsExclusive')) {
                obj['IsExclusive'] = ApiClient.convertToType(data['IsExclusive'], 'Boolean');
            }
            if (data.hasOwnProperty('ProcessId')) {
                obj['ProcessId'] = ApiClient.convertToType(data['ProcessId'], 'Number');
            }
            if (data.hasOwnProperty('ServiceName')) {
                obj['ServiceName'] = ApiClient.convertToType(data['ServiceName'], 'String');
            }
            if (data.hasOwnProperty('ServicePackageActivationId')) {
                obj['ServicePackageActivationId'] = ApiClient.convertToType(data['ServicePackageActivationId'], 'String');
            }
            if (data.hasOwnProperty('ServicePackageName')) {
                obj['ServicePackageName'] = ApiClient.convertToType(data['ServicePackageName'], 'String');
            }
            if (data.hasOwnProperty('StartTime')) {
                obj['StartTime'] = ApiClient.convertToType(data['StartTime'], 'Date');
            }
            if (data.hasOwnProperty('UnexpectedTermination')) {
                obj['UnexpectedTermination'] = ApiClient.convertToType(data['UnexpectedTermination'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProcessDeactivatedEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProcessDeactivatedEvent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProcessDeactivatedEvent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['CodePackageName'] && !(typeof data['CodePackageName'] === 'string' || data['CodePackageName'] instanceof String)) {
            throw new Error("Expected the field `CodePackageName` to be a primitive type in the JSON string but got " + data['CodePackageName']);
        }
        // ensure the json data is a string
        if (data['EntryPointType'] && !(typeof data['EntryPointType'] === 'string' || data['EntryPointType'] instanceof String)) {
            throw new Error("Expected the field `EntryPointType` to be a primitive type in the JSON string but got " + data['EntryPointType']);
        }
        // ensure the json data is a string
        if (data['ExeName'] && !(typeof data['ExeName'] === 'string' || data['ExeName'] instanceof String)) {
            throw new Error("Expected the field `ExeName` to be a primitive type in the JSON string but got " + data['ExeName']);
        }
        // ensure the json data is a string
        if (data['HostId'] && !(typeof data['HostId'] === 'string' || data['HostId'] instanceof String)) {
            throw new Error("Expected the field `HostId` to be a primitive type in the JSON string but got " + data['HostId']);
        }
        // ensure the json data is a string
        if (data['ServiceName'] && !(typeof data['ServiceName'] === 'string' || data['ServiceName'] instanceof String)) {
            throw new Error("Expected the field `ServiceName` to be a primitive type in the JSON string but got " + data['ServiceName']);
        }
        // ensure the json data is a string
        if (data['ServicePackageActivationId'] && !(typeof data['ServicePackageActivationId'] === 'string' || data['ServicePackageActivationId'] instanceof String)) {
            throw new Error("Expected the field `ServicePackageActivationId` to be a primitive type in the JSON string but got " + data['ServicePackageActivationId']);
        }
        // ensure the json data is a string
        if (data['ServicePackageName'] && !(typeof data['ServicePackageName'] === 'string' || data['ServicePackageName'] instanceof String)) {
            throw new Error("Expected the field `ServicePackageName` to be a primitive type in the JSON string but got " + data['ServicePackageName']);
        }

        return true;
    }


}

ProcessDeactivatedEvent.RequiredProperties = ["CodePackageName", "EntryPointType", "ExeName", "ExitCode", "HostId", "IsExclusive", "ProcessId", "ServiceName", "ServicePackageActivationId", "ServicePackageName", "StartTime", "UnexpectedTermination", "EventInstanceId", "Kind", "TimeStamp", "ApplicationId"];

/**
 * Name of Code package.
 * @member {String} CodePackageName
 */
ProcessDeactivatedEvent.prototype['CodePackageName'] = undefined;

/**
 * Type of EntryPoint.
 * @member {String} EntryPointType
 */
ProcessDeactivatedEvent.prototype['EntryPointType'] = undefined;

/**
 * Name of executable.
 * @member {String} ExeName
 */
ProcessDeactivatedEvent.prototype['ExeName'] = undefined;

/**
 * Exit code of process.
 * @member {Number} ExitCode
 */
ProcessDeactivatedEvent.prototype['ExitCode'] = undefined;

/**
 * Host Id.
 * @member {String} HostId
 */
ProcessDeactivatedEvent.prototype['HostId'] = undefined;

/**
 * Indicates IsExclusive flag.
 * @member {Boolean} IsExclusive
 */
ProcessDeactivatedEvent.prototype['IsExclusive'] = undefined;

/**
 * Process Id.
 * @member {Number} ProcessId
 */
ProcessDeactivatedEvent.prototype['ProcessId'] = undefined;

/**
 * Name of Service.
 * @member {String} ServiceName
 */
ProcessDeactivatedEvent.prototype['ServiceName'] = undefined;

/**
 * Activation Id of Service package.
 * @member {String} ServicePackageActivationId
 */
ProcessDeactivatedEvent.prototype['ServicePackageActivationId'] = undefined;

/**
 * Name of Service package.
 * @member {String} ServicePackageName
 */
ProcessDeactivatedEvent.prototype['ServicePackageName'] = undefined;

/**
 * Start time of process.
 * @member {Date} StartTime
 */
ProcessDeactivatedEvent.prototype['StartTime'] = undefined;

/**
 * Indicates if termination is unexpected.
 * @member {Boolean} UnexpectedTermination
 */
ProcessDeactivatedEvent.prototype['UnexpectedTermination'] = undefined;


// Implement ApplicationEvent interface:
/**
 * The identifier for the FabricEvent instance.
 * @member {String} EventInstanceId
 */
ApplicationEvent.prototype['EventInstanceId'] = undefined;
/**
 * Shows there is existing related events available.
 * @member {Boolean} HasCorrelatedEvents
 */
ApplicationEvent.prototype['HasCorrelatedEvents'] = undefined;
/**
 * @member {module:model/FabricEventKind} Kind
 */
ApplicationEvent.prototype['Kind'] = undefined;
/**
 * The time event was logged.
 * @member {Date} TimeStamp
 */
ApplicationEvent.prototype['TimeStamp'] = undefined;
/**
 * The identity of the application. This is an encoded representation of the application name. This is used in the REST APIs to identify the application resource. Starting in version 6.0, hierarchical names are delimited with the \"\\~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp\\~app1\" in 6.0+ and \"myapp/app1\" in previous versions.
 * @member {String} ApplicationId
 */
ApplicationEvent.prototype['ApplicationId'] = undefined;




export default ProcessDeactivatedEvent;

