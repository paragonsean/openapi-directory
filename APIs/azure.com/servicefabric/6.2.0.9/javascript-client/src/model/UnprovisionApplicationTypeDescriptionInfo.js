/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UnprovisionApplicationTypeDescriptionInfo model module.
 * @module model/UnprovisionApplicationTypeDescriptionInfo
 * @version 6.2.0.9
 */
class UnprovisionApplicationTypeDescriptionInfo {
    /**
     * Constructs a new <code>UnprovisionApplicationTypeDescriptionInfo</code>.
     * Describes the operation to unregister or unprovision an application type and its version that was registered with the Service Fabric.
     * @alias module:model/UnprovisionApplicationTypeDescriptionInfo
     * @param applicationTypeVersion {String} The version of the application type as defined in the application manifest.
     */
    constructor(applicationTypeVersion) { 
        
        UnprovisionApplicationTypeDescriptionInfo.initialize(this, applicationTypeVersion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationTypeVersion) { 
        obj['ApplicationTypeVersion'] = applicationTypeVersion;
    }

    /**
     * Constructs a <code>UnprovisionApplicationTypeDescriptionInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UnprovisionApplicationTypeDescriptionInfo} obj Optional instance to populate.
     * @return {module:model/UnprovisionApplicationTypeDescriptionInfo} The populated <code>UnprovisionApplicationTypeDescriptionInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UnprovisionApplicationTypeDescriptionInfo();

            if (data.hasOwnProperty('ApplicationTypeVersion')) {
                obj['ApplicationTypeVersion'] = ApiClient.convertToType(data['ApplicationTypeVersion'], 'String');
            }
            if (data.hasOwnProperty('Async')) {
                obj['Async'] = ApiClient.convertToType(data['Async'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UnprovisionApplicationTypeDescriptionInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UnprovisionApplicationTypeDescriptionInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UnprovisionApplicationTypeDescriptionInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ApplicationTypeVersion'] && !(typeof data['ApplicationTypeVersion'] === 'string' || data['ApplicationTypeVersion'] instanceof String)) {
            throw new Error("Expected the field `ApplicationTypeVersion` to be a primitive type in the JSON string but got " + data['ApplicationTypeVersion']);
        }

        return true;
    }


}

UnprovisionApplicationTypeDescriptionInfo.RequiredProperties = ["ApplicationTypeVersion"];

/**
 * The version of the application type as defined in the application manifest.
 * @member {String} ApplicationTypeVersion
 */
UnprovisionApplicationTypeDescriptionInfo.prototype['ApplicationTypeVersion'] = undefined;

/**
 * The flag indicating whether or not unprovision should occur asynchronously. When set to true, the unprovision operation returns when the request is accepted by the system, and the unprovision operation continues without any timeout limit. The default value is false. However, we recommend to set it to true for large application packages that were provisioned.
 * @member {Boolean} Async
 */
UnprovisionApplicationTypeDescriptionInfo.prototype['Async'] = undefined;






export default UnprovisionApplicationTypeDescriptionInfo;

