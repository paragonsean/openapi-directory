/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NodeImpact from './NodeImpact';
import RepairImpactDescriptionBase from './RepairImpactDescriptionBase';
import RepairImpactKind from './RepairImpactKind';

/**
 * The NodeRepairImpactDescription model module.
 * @module model/NodeRepairImpactDescription
 * @version 6.2.0.9
 */
class NodeRepairImpactDescription {
    /**
     * Constructs a new <code>NodeRepairImpactDescription</code>.
     * Describes the expected impact of a repair on a set of nodes.  This type supports the Service Fabric platform; it is not meant to be used directly from your code.
     * @alias module:model/NodeRepairImpactDescription
     * @extends module:model/RepairImpactDescriptionBase
     * @implements module:model/RepairImpactDescriptionBase
     * @param kind {module:model/RepairImpactKind} 
     */
    constructor(kind) { 
        RepairImpactDescriptionBase.initialize(this, kind);
        NodeRepairImpactDescription.initialize(this, kind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind) { 
    }

    /**
     * Constructs a <code>NodeRepairImpactDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeRepairImpactDescription} obj Optional instance to populate.
     * @return {module:model/NodeRepairImpactDescription} The populated <code>NodeRepairImpactDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeRepairImpactDescription();
            RepairImpactDescriptionBase.constructFromObject(data, obj);
            RepairImpactDescriptionBase.constructFromObject(data, obj);

            if (data.hasOwnProperty('NodeImpactList')) {
                obj['NodeImpactList'] = ApiClient.convertToType(data['NodeImpactList'], [NodeImpact]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodeRepairImpactDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodeRepairImpactDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NodeRepairImpactDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['NodeImpactList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['NodeImpactList'])) {
                throw new Error("Expected the field `NodeImpactList` to be an array in the JSON data but got " + data['NodeImpactList']);
            }
            // validate the optional field `NodeImpactList` (array)
            for (const item of data['NodeImpactList']) {
                NodeImpact.validateJSON(item);
            };
        }

        return true;
    }


}

NodeRepairImpactDescription.RequiredProperties = ["Kind"];

/**
 * The list of nodes impacted by a repair action and their respective expected impact.
 * @member {Array.<module:model/NodeImpact>} NodeImpactList
 */
NodeRepairImpactDescription.prototype['NodeImpactList'] = undefined;


// Implement RepairImpactDescriptionBase interface:
/**
 * @member {module:model/RepairImpactKind} Kind
 */
RepairImpactDescriptionBase.prototype['Kind'] = undefined;




export default NodeRepairImpactDescription;

