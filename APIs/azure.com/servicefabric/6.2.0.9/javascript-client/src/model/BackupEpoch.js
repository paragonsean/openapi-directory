/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BackupEpoch model module.
 * @module model/BackupEpoch
 * @version 6.2.0.9
 */
class BackupEpoch {
    /**
     * Constructs a new <code>BackupEpoch</code>.
     * An Epoch is a configuration number for the partition as a whole. When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new Epoch from the ones which were sent by the old Primary replica.
     * @alias module:model/BackupEpoch
     */
    constructor() { 
        
        BackupEpoch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BackupEpoch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupEpoch} obj Optional instance to populate.
     * @return {module:model/BackupEpoch} The populated <code>BackupEpoch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupEpoch();

            if (data.hasOwnProperty('ConfigurationNumber')) {
                obj['ConfigurationNumber'] = ApiClient.convertToType(data['ConfigurationNumber'], 'String');
            }
            if (data.hasOwnProperty('DataLossNumber')) {
                obj['DataLossNumber'] = ApiClient.convertToType(data['DataLossNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupEpoch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupEpoch</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ConfigurationNumber'] && !(typeof data['ConfigurationNumber'] === 'string' || data['ConfigurationNumber'] instanceof String)) {
            throw new Error("Expected the field `ConfigurationNumber` to be a primitive type in the JSON string but got " + data['ConfigurationNumber']);
        }
        // ensure the json data is a string
        if (data['DataLossNumber'] && !(typeof data['DataLossNumber'] === 'string' || data['DataLossNumber'] instanceof String)) {
            throw new Error("Expected the field `DataLossNumber` to be a primitive type in the JSON string but got " + data['DataLossNumber']);
        }

        return true;
    }


}



/**
 * The current configuration number of this Epoch. The configuration number is an increasing value that is updated whenever the configuration of this replica set changes.
 * @member {String} ConfigurationNumber
 */
BackupEpoch.prototype['ConfigurationNumber'] = undefined;

/**
 * The current data loss number of this Epoch. The data loss number property is an increasing value which is updated whenever data loss is suspected, as when loss of a quorum of replicas in the replica set that includes the Primary replica.
 * @member {String} DataLossNumber
 */
BackupEpoch.prototype['DataLossNumber'] = undefined;






export default BackupEpoch;

