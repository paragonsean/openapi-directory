/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthState from './HealthState';
import PartitionInformation from './PartitionInformation';
import ServiceKind from './ServiceKind';
import ServicePartitionStatus from './ServicePartitionStatus';

/**
 * The ServicePartitionInfo model module.
 * @module model/ServicePartitionInfo
 * @version 6.2.0.9
 */
class ServicePartitionInfo {
    /**
     * Constructs a new <code>ServicePartitionInfo</code>.
     * Information about a partition of a Service Fabric service.
     * @alias module:model/ServicePartitionInfo
     * @param serviceKind {module:model/ServiceKind} 
     */
    constructor(serviceKind) { 
        
        ServicePartitionInfo.initialize(this, serviceKind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serviceKind) { 
        obj['ServiceKind'] = serviceKind;
    }

    /**
     * Constructs a <code>ServicePartitionInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServicePartitionInfo} obj Optional instance to populate.
     * @return {module:model/ServicePartitionInfo} The populated <code>ServicePartitionInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServicePartitionInfo();

            if (data.hasOwnProperty('HealthState')) {
                obj['HealthState'] = HealthState.constructFromObject(data['HealthState']);
            }
            if (data.hasOwnProperty('PartitionInformation')) {
                obj['PartitionInformation'] = PartitionInformation.constructFromObject(data['PartitionInformation']);
            }
            if (data.hasOwnProperty('PartitionStatus')) {
                obj['PartitionStatus'] = ServicePartitionStatus.constructFromObject(data['PartitionStatus']);
            }
            if (data.hasOwnProperty('ServiceKind')) {
                obj['ServiceKind'] = ServiceKind.constructFromObject(data['ServiceKind']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServicePartitionInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServicePartitionInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ServicePartitionInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `PartitionInformation`
        if (data['PartitionInformation']) { // data not null
          PartitionInformation.validateJSON(data['PartitionInformation']);
        }

        return true;
    }


}

ServicePartitionInfo.RequiredProperties = ["ServiceKind"];

/**
 * @member {module:model/HealthState} HealthState
 */
ServicePartitionInfo.prototype['HealthState'] = undefined;

/**
 * @member {module:model/PartitionInformation} PartitionInformation
 */
ServicePartitionInfo.prototype['PartitionInformation'] = undefined;

/**
 * @member {module:model/ServicePartitionStatus} PartitionStatus
 */
ServicePartitionInfo.prototype['PartitionStatus'] = undefined;

/**
 * @member {module:model/ServiceKind} ServiceKind
 */
ServicePartitionInfo.prototype['ServiceKind'] = undefined;






export default ServicePartitionInfo;

