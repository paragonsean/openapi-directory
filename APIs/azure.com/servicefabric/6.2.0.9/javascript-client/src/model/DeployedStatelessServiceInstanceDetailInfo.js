/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeployedServiceReplicaDetailInfo from './DeployedServiceReplicaDetailInfo';
import DeployedStatelessServiceInstanceInfo from './DeployedStatelessServiceInstanceInfo';
import LoadMetricReportInfo from './LoadMetricReportInfo';
import ServiceKind from './ServiceKind';
import ServiceOperationName from './ServiceOperationName';

/**
 * The DeployedStatelessServiceInstanceDetailInfo model module.
 * @module model/DeployedStatelessServiceInstanceDetailInfo
 * @version 6.2.0.9
 */
class DeployedStatelessServiceInstanceDetailInfo {
    /**
     * Constructs a new <code>DeployedStatelessServiceInstanceDetailInfo</code>.
     * Information about a stateless instance running in a code package. Please note that DeployedServiceReplicaQueryResult will contain duplicate data like ServiceKind, ServiceName, PartitionId and InstanceId.
     * @alias module:model/DeployedStatelessServiceInstanceDetailInfo
     * @extends module:model/DeployedServiceReplicaDetailInfo
     * @implements module:model/DeployedServiceReplicaDetailInfo
     * @param serviceKind {module:model/ServiceKind} 
     */
    constructor(serviceKind) { 
        DeployedServiceReplicaDetailInfo.initialize(this, serviceKind);
        DeployedStatelessServiceInstanceDetailInfo.initialize(this, serviceKind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serviceKind) { 
    }

    /**
     * Constructs a <code>DeployedStatelessServiceInstanceDetailInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeployedStatelessServiceInstanceDetailInfo} obj Optional instance to populate.
     * @return {module:model/DeployedStatelessServiceInstanceDetailInfo} The populated <code>DeployedStatelessServiceInstanceDetailInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeployedStatelessServiceInstanceDetailInfo();
            DeployedServiceReplicaDetailInfo.constructFromObject(data, obj);
            DeployedServiceReplicaDetailInfo.constructFromObject(data, obj);

            if (data.hasOwnProperty('DeployedServiceReplicaQueryResult')) {
                obj['DeployedServiceReplicaQueryResult'] = DeployedStatelessServiceInstanceInfo.constructFromObject(data['DeployedServiceReplicaQueryResult']);
            }
            if (data.hasOwnProperty('InstanceId')) {
                obj['InstanceId'] = ApiClient.convertToType(data['InstanceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeployedStatelessServiceInstanceDetailInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeployedStatelessServiceInstanceDetailInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeployedStatelessServiceInstanceDetailInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DeployedServiceReplicaQueryResult`
        if (data['DeployedServiceReplicaQueryResult']) { // data not null
          DeployedStatelessServiceInstanceInfo.validateJSON(data['DeployedServiceReplicaQueryResult']);
        }
        // ensure the json data is a string
        if (data['InstanceId'] && !(typeof data['InstanceId'] === 'string' || data['InstanceId'] instanceof String)) {
            throw new Error("Expected the field `InstanceId` to be a primitive type in the JSON string but got " + data['InstanceId']);
        }

        return true;
    }


}

DeployedStatelessServiceInstanceDetailInfo.RequiredProperties = ["ServiceKind"];

/**
 * @member {module:model/DeployedStatelessServiceInstanceInfo} DeployedServiceReplicaQueryResult
 */
DeployedStatelessServiceInstanceDetailInfo.prototype['DeployedServiceReplicaQueryResult'] = undefined;

/**
 * Id of a stateless service instance. InstanceId is used by Service Fabric to uniquely identify an instance of a partition of a stateless service. It is unique within a partition and does not change for the lifetime of the instance. If the instance has failed over on the same or different node, it will get a different value for the InstanceId.
 * @member {String} InstanceId
 */
DeployedStatelessServiceInstanceDetailInfo.prototype['InstanceId'] = undefined;


// Implement DeployedServiceReplicaDetailInfo interface:
/**
 * @member {module:model/ServiceOperationName} CurrentServiceOperation
 */
DeployedServiceReplicaDetailInfo.prototype['CurrentServiceOperation'] = undefined;
/**
 * The start time of the current service operation in UTC format.
 * @member {Date} CurrentServiceOperationStartTimeUtc
 */
DeployedServiceReplicaDetailInfo.prototype['CurrentServiceOperationStartTimeUtc'] = undefined;
/**
 * An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
 * @member {String} PartitionId
 */
DeployedServiceReplicaDetailInfo.prototype['PartitionId'] = undefined;
/**
 * List of load reported by replica.
 * @member {Array.<module:model/LoadMetricReportInfo>} ReportedLoad
 */
DeployedServiceReplicaDetailInfo.prototype['ReportedLoad'] = undefined;
/**
 * @member {module:model/ServiceKind} ServiceKind
 */
DeployedServiceReplicaDetailInfo.prototype['ServiceKind'] = undefined;
/**
 * The full name of the service with 'fabric:' URI scheme.
 * @member {String} ServiceName
 */
DeployedServiceReplicaDetailInfo.prototype['ServiceName'] = undefined;




export default DeployedStatelessServiceInstanceDetailInfo;

