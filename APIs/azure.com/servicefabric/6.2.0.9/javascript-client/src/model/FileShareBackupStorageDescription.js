/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BackupStorageDescription from './BackupStorageDescription';
import BackupStorageKind from './BackupStorageKind';

/**
 * The FileShareBackupStorageDescription model module.
 * @module model/FileShareBackupStorageDescription
 * @version 6.2.0.9
 */
class FileShareBackupStorageDescription {
    /**
     * Constructs a new <code>FileShareBackupStorageDescription</code>.
     * Describes the parameters for file share storage used for storing or enumerating backups.
     * @alias module:model/FileShareBackupStorageDescription
     * @extends module:model/BackupStorageDescription
     * @implements module:model/BackupStorageDescription
     * @param storageKind {module:model/BackupStorageKind} 
     */
    constructor(storageKind) { 
        BackupStorageDescription.initialize(this, storageKind);
        FileShareBackupStorageDescription.initialize(this, storageKind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, storageKind) { 
        obj['Path'] = path;
    }

    /**
     * Constructs a <code>FileShareBackupStorageDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileShareBackupStorageDescription} obj Optional instance to populate.
     * @return {module:model/FileShareBackupStorageDescription} The populated <code>FileShareBackupStorageDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileShareBackupStorageDescription();
            BackupStorageDescription.constructFromObject(data, obj);
            BackupStorageDescription.constructFromObject(data, obj);

            if (data.hasOwnProperty('Path')) {
                obj['Path'] = ApiClient.convertToType(data['Path'], 'String');
            }
            if (data.hasOwnProperty('PrimaryPassword')) {
                obj['PrimaryPassword'] = ApiClient.convertToType(data['PrimaryPassword'], 'String');
            }
            if (data.hasOwnProperty('PrimaryUserName')) {
                obj['PrimaryUserName'] = ApiClient.convertToType(data['PrimaryUserName'], 'String');
            }
            if (data.hasOwnProperty('SecondaryPassword')) {
                obj['SecondaryPassword'] = ApiClient.convertToType(data['SecondaryPassword'], 'String');
            }
            if (data.hasOwnProperty('SecondaryUserName')) {
                obj['SecondaryUserName'] = ApiClient.convertToType(data['SecondaryUserName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileShareBackupStorageDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileShareBackupStorageDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FileShareBackupStorageDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Path'] && !(typeof data['Path'] === 'string' || data['Path'] instanceof String)) {
            throw new Error("Expected the field `Path` to be a primitive type in the JSON string but got " + data['Path']);
        }
        // ensure the json data is a string
        if (data['PrimaryPassword'] && !(typeof data['PrimaryPassword'] === 'string' || data['PrimaryPassword'] instanceof String)) {
            throw new Error("Expected the field `PrimaryPassword` to be a primitive type in the JSON string but got " + data['PrimaryPassword']);
        }
        // ensure the json data is a string
        if (data['PrimaryUserName'] && !(typeof data['PrimaryUserName'] === 'string' || data['PrimaryUserName'] instanceof String)) {
            throw new Error("Expected the field `PrimaryUserName` to be a primitive type in the JSON string but got " + data['PrimaryUserName']);
        }
        // ensure the json data is a string
        if (data['SecondaryPassword'] && !(typeof data['SecondaryPassword'] === 'string' || data['SecondaryPassword'] instanceof String)) {
            throw new Error("Expected the field `SecondaryPassword` to be a primitive type in the JSON string but got " + data['SecondaryPassword']);
        }
        // ensure the json data is a string
        if (data['SecondaryUserName'] && !(typeof data['SecondaryUserName'] === 'string' || data['SecondaryUserName'] instanceof String)) {
            throw new Error("Expected the field `SecondaryUserName` to be a primitive type in the JSON string but got " + data['SecondaryUserName']);
        }

        return true;
    }


}

FileShareBackupStorageDescription.RequiredProperties = ["Path", "StorageKind"];

/**
 * UNC path of the file share where to store or enumerate backups from.
 * @member {String} Path
 */
FileShareBackupStorageDescription.prototype['Path'] = undefined;

/**
 * Primary password to access the share location.
 * @member {String} PrimaryPassword
 */
FileShareBackupStorageDescription.prototype['PrimaryPassword'] = undefined;

/**
 * Primary user name to access the file share.
 * @member {String} PrimaryUserName
 */
FileShareBackupStorageDescription.prototype['PrimaryUserName'] = undefined;

/**
 * Secondary password to access the share location
 * @member {String} SecondaryPassword
 */
FileShareBackupStorageDescription.prototype['SecondaryPassword'] = undefined;

/**
 * Secondary user name to access the file share.
 * @member {String} SecondaryUserName
 */
FileShareBackupStorageDescription.prototype['SecondaryUserName'] = undefined;


// Implement BackupStorageDescription interface:
/**
 * Friendly name for this backup storage.
 * @member {String} FriendlyName
 */
BackupStorageDescription.prototype['FriendlyName'] = undefined;
/**
 * @member {module:model/BackupStorageKind} StorageKind
 */
BackupStorageDescription.prototype['StorageKind'] = undefined;




export default FileShareBackupStorageDescription;

