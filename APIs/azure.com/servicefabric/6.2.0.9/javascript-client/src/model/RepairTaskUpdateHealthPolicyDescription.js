/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.2.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RepairTaskUpdateHealthPolicyDescription model module.
 * @module model/RepairTaskUpdateHealthPolicyDescription
 * @version 6.2.0.9
 */
class RepairTaskUpdateHealthPolicyDescription {
    /**
     * Constructs a new <code>RepairTaskUpdateHealthPolicyDescription</code>.
     * Describes a request to update the health policy of a repair task.  This type supports the Service Fabric platform; it is not meant to be used directly from your code.
     * @alias module:model/RepairTaskUpdateHealthPolicyDescription
     * @param taskId {String} The ID of the repair task to be updated.
     */
    constructor(taskId) { 
        
        RepairTaskUpdateHealthPolicyDescription.initialize(this, taskId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, taskId) { 
        obj['TaskId'] = taskId;
    }

    /**
     * Constructs a <code>RepairTaskUpdateHealthPolicyDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RepairTaskUpdateHealthPolicyDescription} obj Optional instance to populate.
     * @return {module:model/RepairTaskUpdateHealthPolicyDescription} The populated <code>RepairTaskUpdateHealthPolicyDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepairTaskUpdateHealthPolicyDescription();

            if (data.hasOwnProperty('PerformPreparingHealthCheck')) {
                obj['PerformPreparingHealthCheck'] = ApiClient.convertToType(data['PerformPreparingHealthCheck'], 'Boolean');
            }
            if (data.hasOwnProperty('PerformRestoringHealthCheck')) {
                obj['PerformRestoringHealthCheck'] = ApiClient.convertToType(data['PerformRestoringHealthCheck'], 'Boolean');
            }
            if (data.hasOwnProperty('TaskId')) {
                obj['TaskId'] = ApiClient.convertToType(data['TaskId'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RepairTaskUpdateHealthPolicyDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RepairTaskUpdateHealthPolicyDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RepairTaskUpdateHealthPolicyDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['TaskId'] && !(typeof data['TaskId'] === 'string' || data['TaskId'] instanceof String)) {
            throw new Error("Expected the field `TaskId` to be a primitive type in the JSON string but got " + data['TaskId']);
        }
        // ensure the json data is a string
        if (data['Version'] && !(typeof data['Version'] === 'string' || data['Version'] instanceof String)) {
            throw new Error("Expected the field `Version` to be a primitive type in the JSON string but got " + data['Version']);
        }

        return true;
    }


}

RepairTaskUpdateHealthPolicyDescription.RequiredProperties = ["TaskId"];

/**
 * A boolean indicating if health check is to be performed in the Preparing stage of the repair task. If not specified the existing value should not be altered. Otherwise, specify the desired new value.
 * @member {Boolean} PerformPreparingHealthCheck
 */
RepairTaskUpdateHealthPolicyDescription.prototype['PerformPreparingHealthCheck'] = undefined;

/**
 * A boolean indicating if health check is to be performed in the Restoring stage of the repair task. If not specified the existing value should not be altered. Otherwise, specify the desired new value.
 * @member {Boolean} PerformRestoringHealthCheck
 */
RepairTaskUpdateHealthPolicyDescription.prototype['PerformRestoringHealthCheck'] = undefined;

/**
 * The ID of the repair task to be updated.
 * @member {String} TaskId
 */
RepairTaskUpdateHealthPolicyDescription.prototype['TaskId'] = undefined;

/**
 * The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current value of the repair task. If zero, then no version check is performed.
 * @member {String} Version
 */
RepairTaskUpdateHealthPolicyDescription.prototype['Version'] = undefined;






export default RepairTaskUpdateHealthPolicyDescription;

