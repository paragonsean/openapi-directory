/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServiceFabricClientApis);
  }
}(this, function(expect, ServiceFabricClientApis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServiceFabricClientApis.EventsStoreApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventsStoreApi', function() {
    describe('getApplicationEventList', function() {
      it('should call getApplicationEventList successfully', function(done) {
        //uncomment below and update the code to test getApplicationEventList
        //instance.getApplicationEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApplicationsEventList', function() {
      it('should call getApplicationsEventList successfully', function(done) {
        //uncomment below and update the code to test getApplicationsEventList
        //instance.getApplicationsEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClusterEventList', function() {
      it('should call getClusterEventList successfully', function(done) {
        //uncomment below and update the code to test getClusterEventList
        //instance.getClusterEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContainersEventList', function() {
      it('should call getContainersEventList successfully', function(done) {
        //uncomment below and update the code to test getContainersEventList
        //instance.getContainersEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCorrelatedEventList', function() {
      it('should call getCorrelatedEventList successfully', function(done) {
        //uncomment below and update the code to test getCorrelatedEventList
        //instance.getCorrelatedEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNodeEventList', function() {
      it('should call getNodeEventList successfully', function(done) {
        //uncomment below and update the code to test getNodeEventList
        //instance.getNodeEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNodesEventList', function() {
      it('should call getNodesEventList successfully', function(done) {
        //uncomment below and update the code to test getNodesEventList
        //instance.getNodesEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPartitionEventList', function() {
      it('should call getPartitionEventList successfully', function(done) {
        //uncomment below and update the code to test getPartitionEventList
        //instance.getPartitionEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPartitionReplicaEventList', function() {
      it('should call getPartitionReplicaEventList successfully', function(done) {
        //uncomment below and update the code to test getPartitionReplicaEventList
        //instance.getPartitionReplicaEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPartitionReplicasEventList', function() {
      it('should call getPartitionReplicasEventList successfully', function(done) {
        //uncomment below and update the code to test getPartitionReplicasEventList
        //instance.getPartitionReplicasEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPartitionsEventList', function() {
      it('should call getPartitionsEventList successfully', function(done) {
        //uncomment below and update the code to test getPartitionsEventList
        //instance.getPartitionsEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServiceEventList', function() {
      it('should call getServiceEventList successfully', function(done) {
        //uncomment below and update the code to test getServiceEventList
        //instance.getServiceEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServicesEventList', function() {
      it('should call getServicesEventList successfully', function(done) {
        //uncomment below and update the code to test getServicesEventList
        //instance.getServicesEventList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
