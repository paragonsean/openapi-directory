/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FabricError from '../model/FabricError';
import GatewayResourceDescription from '../model/GatewayResourceDescription';
import PagedGatewayResourceDescriptionList from '../model/PagedGatewayResourceDescriptionList';

/**
* MeshGateways service.
* @module api/MeshGatewaysApi
* @version 7.0.0.42
*/
export default class MeshGatewaysApi {

    /**
    * Constructs a new MeshGatewaysApi. 
    * @alias module:api/MeshGatewaysApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the meshGatewayCreateOrUpdate operation.
     * @callback module:api/MeshGatewaysApi~meshGatewayCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GatewayResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a Gateway resource.
     * Creates a Gateway resource with the specified name, description and properties. If Gateway resource with the same name exists, then it is updated with the specified description and properties. Use Gateway resource to provide public connectivity to application services.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} gatewayResourceName The identity of the gateway.
     * @param {module:model/GatewayResourceDescription} gatewayResourceDescription Description for creating a Gateway resource.
     * @param {module:api/MeshGatewaysApi~meshGatewayCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GatewayResourceDescription}
     */
    meshGatewayCreateOrUpdate(apiVersion, gatewayResourceName, gatewayResourceDescription, callback) {
      let postBody = gatewayResourceDescription;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshGatewayCreateOrUpdate");
      }
      // verify the required parameter 'gatewayResourceName' is set
      if (gatewayResourceName === undefined || gatewayResourceName === null) {
        throw new Error("Missing the required parameter 'gatewayResourceName' when calling meshGatewayCreateOrUpdate");
      }
      // verify the required parameter 'gatewayResourceDescription' is set
      if (gatewayResourceDescription === undefined || gatewayResourceDescription === null) {
        throw new Error("Missing the required parameter 'gatewayResourceDescription' when calling meshGatewayCreateOrUpdate");
      }

      let pathParams = {
        'gatewayResourceName': gatewayResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GatewayResourceDescription;
      return this.apiClient.callApi(
        '/Resources/Gateways/{gatewayResourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshGatewayDelete operation.
     * @callback module:api/MeshGatewaysApi~meshGatewayDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the Gateway resource.
     * Deletes the Gateway resource identified by the name.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} gatewayResourceName The identity of the gateway.
     * @param {module:api/MeshGatewaysApi~meshGatewayDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    meshGatewayDelete(apiVersion, gatewayResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshGatewayDelete");
      }
      // verify the required parameter 'gatewayResourceName' is set
      if (gatewayResourceName === undefined || gatewayResourceName === null) {
        throw new Error("Missing the required parameter 'gatewayResourceName' when calling meshGatewayDelete");
      }

      let pathParams = {
        'gatewayResourceName': gatewayResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Resources/Gateways/{gatewayResourceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshGatewayGet operation.
     * @callback module:api/MeshGatewaysApi~meshGatewayGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GatewayResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the Gateway resource with the given name.
     * Gets the information about the Gateway resource with the given name. The information include the description and other properties of the Gateway.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} gatewayResourceName The identity of the gateway.
     * @param {module:api/MeshGatewaysApi~meshGatewayGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GatewayResourceDescription}
     */
    meshGatewayGet(apiVersion, gatewayResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshGatewayGet");
      }
      // verify the required parameter 'gatewayResourceName' is set
      if (gatewayResourceName === undefined || gatewayResourceName === null) {
        throw new Error("Missing the required parameter 'gatewayResourceName' when calling meshGatewayGet");
      }

      let pathParams = {
        'gatewayResourceName': gatewayResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GatewayResourceDescription;
      return this.apiClient.callApi(
        '/Resources/Gateways/{gatewayResourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshGatewayList operation.
     * @callback module:api/MeshGatewaysApi~meshGatewayListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedGatewayResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the gateway resources.
     * Gets the information about all gateway resources in a given resource group. The information include the description and other properties of the Gateway.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {module:api/MeshGatewaysApi~meshGatewayListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedGatewayResourceDescriptionList}
     */
    meshGatewayList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshGatewayList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedGatewayResourceDescriptionList;
      return this.apiClient.callApi(
        '/Resources/Gateways', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
