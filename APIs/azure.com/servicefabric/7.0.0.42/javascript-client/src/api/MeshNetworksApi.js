/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FabricError from '../model/FabricError';
import NetworkResourceDescription from '../model/NetworkResourceDescription';
import PagedNetworkResourceDescriptionList from '../model/PagedNetworkResourceDescriptionList';

/**
* MeshNetworks service.
* @module api/MeshNetworksApi
* @version 7.0.0.42
*/
export default class MeshNetworksApi {

    /**
    * Constructs a new MeshNetworksApi. 
    * @alias module:api/MeshNetworksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the meshNetworkCreateOrUpdate operation.
     * @callback module:api/MeshNetworksApi~meshNetworkCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a Network resource.
     * Creates a Network resource with the specified name, description and properties. If Network resource with the same name exists, then it is updated with the specified description and properties. Network resource provides connectivity between application services.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} networkResourceName The identity of the network.
     * @param {module:model/NetworkResourceDescription} networkResourceDescription Description for creating a Network resource.
     * @param {module:api/MeshNetworksApi~meshNetworkCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkResourceDescription}
     */
    meshNetworkCreateOrUpdate(apiVersion, networkResourceName, networkResourceDescription, callback) {
      let postBody = networkResourceDescription;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshNetworkCreateOrUpdate");
      }
      // verify the required parameter 'networkResourceName' is set
      if (networkResourceName === undefined || networkResourceName === null) {
        throw new Error("Missing the required parameter 'networkResourceName' when calling meshNetworkCreateOrUpdate");
      }
      // verify the required parameter 'networkResourceDescription' is set
      if (networkResourceDescription === undefined || networkResourceDescription === null) {
        throw new Error("Missing the required parameter 'networkResourceDescription' when calling meshNetworkCreateOrUpdate");
      }

      let pathParams = {
        'networkResourceName': networkResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NetworkResourceDescription;
      return this.apiClient.callApi(
        '/Resources/Networks/{networkResourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshNetworkDelete operation.
     * @callback module:api/MeshNetworksApi~meshNetworkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the Network resource.
     * Deletes the Network resource identified by the name.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} networkResourceName The identity of the network.
     * @param {module:api/MeshNetworksApi~meshNetworkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    meshNetworkDelete(apiVersion, networkResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshNetworkDelete");
      }
      // verify the required parameter 'networkResourceName' is set
      if (networkResourceName === undefined || networkResourceName === null) {
        throw new Error("Missing the required parameter 'networkResourceName' when calling meshNetworkDelete");
      }

      let pathParams = {
        'networkResourceName': networkResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Resources/Networks/{networkResourceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshNetworkGet operation.
     * @callback module:api/MeshNetworksApi~meshNetworkGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the Network resource with the given name.
     * Gets the information about the Network resource with the given name. The information include the description and other properties of the Network.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} networkResourceName The identity of the network.
     * @param {module:api/MeshNetworksApi~meshNetworkGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkResourceDescription}
     */
    meshNetworkGet(apiVersion, networkResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshNetworkGet");
      }
      // verify the required parameter 'networkResourceName' is set
      if (networkResourceName === undefined || networkResourceName === null) {
        throw new Error("Missing the required parameter 'networkResourceName' when calling meshNetworkGet");
      }

      let pathParams = {
        'networkResourceName': networkResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NetworkResourceDescription;
      return this.apiClient.callApi(
        '/Resources/Networks/{networkResourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshNetworkList operation.
     * @callback module:api/MeshNetworksApi~meshNetworkListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedNetworkResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the network resources.
     * Gets the information about all network resources in a given resource group. The information include the description and other properties of the Network.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {module:api/MeshNetworksApi~meshNetworkListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedNetworkResourceDescriptionList}
     */
    meshNetworkList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshNetworkList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedNetworkResourceDescriptionList;
      return this.apiClient.callApi(
        '/Resources/Networks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
