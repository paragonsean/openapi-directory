/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationResourceDescription from '../model/ApplicationResourceDescription';
import ApplicationResourceUpgradeProgressInfo from '../model/ApplicationResourceUpgradeProgressInfo';
import FabricError from '../model/FabricError';
import PagedApplicationResourceDescriptionList from '../model/PagedApplicationResourceDescriptionList';

/**
* MeshApplications service.
* @module api/MeshApplicationsApi
* @version 7.0.0.42
*/
export default class MeshApplicationsApi {

    /**
    * Constructs a new MeshApplicationsApi. 
    * @alias module:api/MeshApplicationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the meshApplicationCreateOrUpdate operation.
     * @callback module:api/MeshApplicationsApi~meshApplicationCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a Application resource.
     * Creates a Application resource with the specified name, description and properties. If Application resource with the same name exists, then it is updated with the specified description and properties.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} applicationResourceName The identity of the application.
     * @param {module:model/ApplicationResourceDescription} applicationResourceDescription Description for creating a Application resource.
     * @param {module:api/MeshApplicationsApi~meshApplicationCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationResourceDescription}
     */
    meshApplicationCreateOrUpdate(apiVersion, applicationResourceName, applicationResourceDescription, callback) {
      let postBody = applicationResourceDescription;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshApplicationCreateOrUpdate");
      }
      // verify the required parameter 'applicationResourceName' is set
      if (applicationResourceName === undefined || applicationResourceName === null) {
        throw new Error("Missing the required parameter 'applicationResourceName' when calling meshApplicationCreateOrUpdate");
      }
      // verify the required parameter 'applicationResourceDescription' is set
      if (applicationResourceDescription === undefined || applicationResourceDescription === null) {
        throw new Error("Missing the required parameter 'applicationResourceDescription' when calling meshApplicationCreateOrUpdate");
      }

      let pathParams = {
        'applicationResourceName': applicationResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationResourceDescription;
      return this.apiClient.callApi(
        '/Resources/Applications/{applicationResourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshApplicationDelete operation.
     * @callback module:api/MeshApplicationsApi~meshApplicationDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the Application resource.
     * Deletes the Application resource identified by the name.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} applicationResourceName The identity of the application.
     * @param {module:api/MeshApplicationsApi~meshApplicationDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    meshApplicationDelete(apiVersion, applicationResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshApplicationDelete");
      }
      // verify the required parameter 'applicationResourceName' is set
      if (applicationResourceName === undefined || applicationResourceName === null) {
        throw new Error("Missing the required parameter 'applicationResourceName' when calling meshApplicationDelete");
      }

      let pathParams = {
        'applicationResourceName': applicationResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Resources/Applications/{applicationResourceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshApplicationGet operation.
     * @callback module:api/MeshApplicationsApi~meshApplicationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the Application resource with the given name.
     * Gets the information about the Application resource with the given name. The information include the description and other properties of the Application.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} applicationResourceName The identity of the application.
     * @param {module:api/MeshApplicationsApi~meshApplicationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationResourceDescription}
     */
    meshApplicationGet(apiVersion, applicationResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshApplicationGet");
      }
      // verify the required parameter 'applicationResourceName' is set
      if (applicationResourceName === undefined || applicationResourceName === null) {
        throw new Error("Missing the required parameter 'applicationResourceName' when calling meshApplicationGet");
      }

      let pathParams = {
        'applicationResourceName': applicationResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationResourceDescription;
      return this.apiClient.callApi(
        '/Resources/Applications/{applicationResourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshApplicationGetUpgradeProgress operation.
     * @callback module:api/MeshApplicationsApi~meshApplicationGetUpgradeProgressCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationResourceUpgradeProgressInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the progress of the latest upgrade performed on this application resource.
     * Gets the upgrade progress information about the Application resource with the given name. The information include percentage of completion and other upgrade state information of the Application resource.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '7.0'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} applicationResourceName The identity of the application.
     * @param {module:api/MeshApplicationsApi~meshApplicationGetUpgradeProgressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationResourceUpgradeProgressInfo}
     */
    meshApplicationGetUpgradeProgress(apiVersion, applicationResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshApplicationGetUpgradeProgress");
      }
      // verify the required parameter 'applicationResourceName' is set
      if (applicationResourceName === undefined || applicationResourceName === null) {
        throw new Error("Missing the required parameter 'applicationResourceName' when calling meshApplicationGetUpgradeProgress");
      }

      let pathParams = {
        'applicationResourceName': applicationResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationResourceUpgradeProgressInfo;
      return this.apiClient.callApi(
        '/Resources/Applications/{applicationResourceName}/$/GetUpgradeProgress', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshApplicationList operation.
     * @callback module:api/MeshApplicationsApi~meshApplicationListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedApplicationResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the application resources.
     * Gets the information about all application resources in a given resource group. The information include the description and other properties of the Application.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {module:api/MeshApplicationsApi~meshApplicationListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedApplicationResourceDescriptionList}
     */
    meshApplicationList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshApplicationList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedApplicationResourceDescriptionList;
      return this.apiClient.callApi(
        '/Resources/Applications', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
