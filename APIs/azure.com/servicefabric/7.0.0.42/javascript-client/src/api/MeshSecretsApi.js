/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FabricError from '../model/FabricError';
import PagedSecretResourceDescriptionList from '../model/PagedSecretResourceDescriptionList';
import SecretResourceDescription from '../model/SecretResourceDescription';

/**
* MeshSecrets service.
* @module api/MeshSecretsApi
* @version 7.0.0.42
*/
export default class MeshSecretsApi {

    /**
    * Constructs a new MeshSecretsApi. 
    * @alias module:api/MeshSecretsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the meshSecretCreateOrUpdate operation.
     * @callback module:api/MeshSecretsApi~meshSecretCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SecretResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a Secret resource.
     * Creates a Secret resource with the specified name, description and properties. If Secret resource with the same name exists, then it is updated with the specified description and properties. Once created, the kind and contentType of a secret resource cannot be updated.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} secretResourceName The name of the secret resource.
     * @param {module:model/SecretResourceDescription} secretResourceDescription Description for creating a secret resource.
     * @param {module:api/MeshSecretsApi~meshSecretCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecretResourceDescription}
     */
    meshSecretCreateOrUpdate(apiVersion, secretResourceName, secretResourceDescription, callback) {
      let postBody = secretResourceDescription;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshSecretCreateOrUpdate");
      }
      // verify the required parameter 'secretResourceName' is set
      if (secretResourceName === undefined || secretResourceName === null) {
        throw new Error("Missing the required parameter 'secretResourceName' when calling meshSecretCreateOrUpdate");
      }
      // verify the required parameter 'secretResourceDescription' is set
      if (secretResourceDescription === undefined || secretResourceDescription === null) {
        throw new Error("Missing the required parameter 'secretResourceDescription' when calling meshSecretCreateOrUpdate");
      }

      let pathParams = {
        'secretResourceName': secretResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SecretResourceDescription;
      return this.apiClient.callApi(
        '/Resources/Secrets/{secretResourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshSecretDelete operation.
     * @callback module:api/MeshSecretsApi~meshSecretDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the Secret resource.
     * Deletes the specified Secret resource and all of its named values.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} secretResourceName The name of the secret resource.
     * @param {module:api/MeshSecretsApi~meshSecretDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    meshSecretDelete(apiVersion, secretResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshSecretDelete");
      }
      // verify the required parameter 'secretResourceName' is set
      if (secretResourceName === undefined || secretResourceName === null) {
        throw new Error("Missing the required parameter 'secretResourceName' when calling meshSecretDelete");
      }

      let pathParams = {
        'secretResourceName': secretResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Resources/Secrets/{secretResourceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshSecretGet operation.
     * @callback module:api/MeshSecretsApi~meshSecretGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SecretResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the Secret resource with the given name.
     * Gets the information about the Secret resource with the given name. The information include the description and other properties of the Secret.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} secretResourceName The name of the secret resource.
     * @param {module:api/MeshSecretsApi~meshSecretGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecretResourceDescription}
     */
    meshSecretGet(apiVersion, secretResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshSecretGet");
      }
      // verify the required parameter 'secretResourceName' is set
      if (secretResourceName === undefined || secretResourceName === null) {
        throw new Error("Missing the required parameter 'secretResourceName' when calling meshSecretGet");
      }

      let pathParams = {
        'secretResourceName': secretResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SecretResourceDescription;
      return this.apiClient.callApi(
        '/Resources/Secrets/{secretResourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshSecretList operation.
     * @callback module:api/MeshSecretsApi~meshSecretListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedSecretResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the secret resources.
     * Gets the information about all secret resources in a given resource group. The information include the description and other properties of the Secret.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {module:api/MeshSecretsApi~meshSecretListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedSecretResourceDescriptionList}
     */
    meshSecretList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshSecretList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedSecretResourceDescriptionList;
      return this.apiClient.callApi(
        '/Resources/Secrets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
