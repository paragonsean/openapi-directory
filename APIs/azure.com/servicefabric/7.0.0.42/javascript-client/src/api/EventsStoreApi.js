/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationEvent from '../model/ApplicationEvent';
import ClusterEvent from '../model/ClusterEvent';
import ContainerInstanceEvent from '../model/ContainerInstanceEvent';
import FabricError from '../model/FabricError';
import FabricEvent from '../model/FabricEvent';
import NodeEvent from '../model/NodeEvent';
import PartitionEvent from '../model/PartitionEvent';
import ReplicaEvent from '../model/ReplicaEvent';
import ServiceEvent from '../model/ServiceEvent';

/**
* EventsStore service.
* @module api/EventsStoreApi
* @version 7.0.0.42
*/
export default class EventsStoreApi {

    /**
    * Constructs a new EventsStoreApi. 
    * @alias module:api/EventsStoreApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getApplicationEventList operation.
     * @callback module:api/EventsStoreApi~getApplicationEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ApplicationEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an Application-related events.
     * The response is list of ApplicationEvent objects.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} applicationId The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.
     * @param {String} startTimeUtc The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {String} endTimeUtc The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [eventsTypesFilter] This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
     * @param {Boolean} [excludeAnalysisEvents] This param disables the retrieval of AnalysisEvents if true is passed.
     * @param {Boolean} [skipCorrelationLookup] This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
     * @param {module:api/EventsStoreApi~getApplicationEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ApplicationEvent>}
     */
    getApplicationEventList(apiVersion, applicationId, startTimeUtc, endTimeUtc, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getApplicationEventList");
      }
      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling getApplicationEventList");
      }
      // verify the required parameter 'startTimeUtc' is set
      if (startTimeUtc === undefined || startTimeUtc === null) {
        throw new Error("Missing the required parameter 'startTimeUtc' when calling getApplicationEventList");
      }
      // verify the required parameter 'endTimeUtc' is set
      if (endTimeUtc === undefined || endTimeUtc === null) {
        throw new Error("Missing the required parameter 'endTimeUtc' when calling getApplicationEventList");
      }

      let pathParams = {
        'applicationId': applicationId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'StartTimeUtc': startTimeUtc,
        'EndTimeUtc': endTimeUtc,
        'EventsTypesFilter': opts['eventsTypesFilter'],
        'ExcludeAnalysisEvents': opts['excludeAnalysisEvents'],
        'SkipCorrelationLookup': opts['skipCorrelationLookup']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ApplicationEvent];
      return this.apiClient.callApi(
        '/EventsStore/Applications/{applicationId}/$/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getApplicationsEventList operation.
     * @callback module:api/EventsStoreApi~getApplicationsEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ApplicationEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all Applications-related events.
     * The response is list of ApplicationEvent objects.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} startTimeUtc The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {String} endTimeUtc The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [eventsTypesFilter] This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
     * @param {Boolean} [excludeAnalysisEvents] This param disables the retrieval of AnalysisEvents if true is passed.
     * @param {Boolean} [skipCorrelationLookup] This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
     * @param {module:api/EventsStoreApi~getApplicationsEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ApplicationEvent>}
     */
    getApplicationsEventList(apiVersion, startTimeUtc, endTimeUtc, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getApplicationsEventList");
      }
      // verify the required parameter 'startTimeUtc' is set
      if (startTimeUtc === undefined || startTimeUtc === null) {
        throw new Error("Missing the required parameter 'startTimeUtc' when calling getApplicationsEventList");
      }
      // verify the required parameter 'endTimeUtc' is set
      if (endTimeUtc === undefined || endTimeUtc === null) {
        throw new Error("Missing the required parameter 'endTimeUtc' when calling getApplicationsEventList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'StartTimeUtc': startTimeUtc,
        'EndTimeUtc': endTimeUtc,
        'EventsTypesFilter': opts['eventsTypesFilter'],
        'ExcludeAnalysisEvents': opts['excludeAnalysisEvents'],
        'SkipCorrelationLookup': opts['skipCorrelationLookup']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ApplicationEvent];
      return this.apiClient.callApi(
        '/EventsStore/Applications/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getClusterEventList operation.
     * @callback module:api/EventsStoreApi~getClusterEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ClusterEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all Cluster-related events.
     * The response is list of ClusterEvent objects.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} startTimeUtc The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {String} endTimeUtc The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [eventsTypesFilter] This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
     * @param {Boolean} [excludeAnalysisEvents] This param disables the retrieval of AnalysisEvents if true is passed.
     * @param {Boolean} [skipCorrelationLookup] This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
     * @param {module:api/EventsStoreApi~getClusterEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ClusterEvent>}
     */
    getClusterEventList(apiVersion, startTimeUtc, endTimeUtc, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getClusterEventList");
      }
      // verify the required parameter 'startTimeUtc' is set
      if (startTimeUtc === undefined || startTimeUtc === null) {
        throw new Error("Missing the required parameter 'startTimeUtc' when calling getClusterEventList");
      }
      // verify the required parameter 'endTimeUtc' is set
      if (endTimeUtc === undefined || endTimeUtc === null) {
        throw new Error("Missing the required parameter 'endTimeUtc' when calling getClusterEventList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'StartTimeUtc': startTimeUtc,
        'EndTimeUtc': endTimeUtc,
        'EventsTypesFilter': opts['eventsTypesFilter'],
        'ExcludeAnalysisEvents': opts['excludeAnalysisEvents'],
        'SkipCorrelationLookup': opts['skipCorrelationLookup']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ClusterEvent];
      return this.apiClient.callApi(
        '/EventsStore/Cluster/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getContainersEventList operation.
     * @callback module:api/EventsStoreApi~getContainersEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ContainerInstanceEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all Containers-related events.
     * The response is list of ContainerInstanceEvent objects.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.2-preview'.
     * @param {String} startTimeUtc The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {String} endTimeUtc The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [eventsTypesFilter] This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
     * @param {Boolean} [excludeAnalysisEvents] This param disables the retrieval of AnalysisEvents if true is passed.
     * @param {Boolean} [skipCorrelationLookup] This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
     * @param {module:api/EventsStoreApi~getContainersEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ContainerInstanceEvent>}
     */
    getContainersEventList(apiVersion, startTimeUtc, endTimeUtc, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getContainersEventList");
      }
      // verify the required parameter 'startTimeUtc' is set
      if (startTimeUtc === undefined || startTimeUtc === null) {
        throw new Error("Missing the required parameter 'startTimeUtc' when calling getContainersEventList");
      }
      // verify the required parameter 'endTimeUtc' is set
      if (endTimeUtc === undefined || endTimeUtc === null) {
        throw new Error("Missing the required parameter 'endTimeUtc' when calling getContainersEventList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'StartTimeUtc': startTimeUtc,
        'EndTimeUtc': endTimeUtc,
        'EventsTypesFilter': opts['eventsTypesFilter'],
        'ExcludeAnalysisEvents': opts['excludeAnalysisEvents'],
        'SkipCorrelationLookup': opts['skipCorrelationLookup']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ContainerInstanceEvent];
      return this.apiClient.callApi(
        '/EventsStore/Containers/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCorrelatedEventList operation.
     * @callback module:api/EventsStoreApi~getCorrelatedEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/FabricEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all correlated events for a given event.
     * The response is list of FabricEvents.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} eventInstanceId The EventInstanceId.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/EventsStoreApi~getCorrelatedEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/FabricEvent>}
     */
    getCorrelatedEventList(apiVersion, eventInstanceId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getCorrelatedEventList");
      }
      // verify the required parameter 'eventInstanceId' is set
      if (eventInstanceId === undefined || eventInstanceId === null) {
        throw new Error("Missing the required parameter 'eventInstanceId' when calling getCorrelatedEventList");
      }

      let pathParams = {
        'eventInstanceId': eventInstanceId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [FabricEvent];
      return this.apiClient.callApi(
        '/EventsStore/CorrelatedEvents/{eventInstanceId}/$/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNodeEventList operation.
     * @callback module:api/EventsStoreApi~getNodeEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NodeEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a Node-related events.
     * The response is list of NodeEvent objects.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} nodeName The name of the node.
     * @param {String} startTimeUtc The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {String} endTimeUtc The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [eventsTypesFilter] This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
     * @param {Boolean} [excludeAnalysisEvents] This param disables the retrieval of AnalysisEvents if true is passed.
     * @param {Boolean} [skipCorrelationLookup] This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
     * @param {module:api/EventsStoreApi~getNodeEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NodeEvent>}
     */
    getNodeEventList(apiVersion, nodeName, startTimeUtc, endTimeUtc, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getNodeEventList");
      }
      // verify the required parameter 'nodeName' is set
      if (nodeName === undefined || nodeName === null) {
        throw new Error("Missing the required parameter 'nodeName' when calling getNodeEventList");
      }
      // verify the required parameter 'startTimeUtc' is set
      if (startTimeUtc === undefined || startTimeUtc === null) {
        throw new Error("Missing the required parameter 'startTimeUtc' when calling getNodeEventList");
      }
      // verify the required parameter 'endTimeUtc' is set
      if (endTimeUtc === undefined || endTimeUtc === null) {
        throw new Error("Missing the required parameter 'endTimeUtc' when calling getNodeEventList");
      }

      let pathParams = {
        'nodeName': nodeName
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'StartTimeUtc': startTimeUtc,
        'EndTimeUtc': endTimeUtc,
        'EventsTypesFilter': opts['eventsTypesFilter'],
        'ExcludeAnalysisEvents': opts['excludeAnalysisEvents'],
        'SkipCorrelationLookup': opts['skipCorrelationLookup']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NodeEvent];
      return this.apiClient.callApi(
        '/EventsStore/Nodes/{nodeName}/$/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNodesEventList operation.
     * @callback module:api/EventsStoreApi~getNodesEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NodeEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all Nodes-related Events.
     * The response is list of NodeEvent objects.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} startTimeUtc The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {String} endTimeUtc The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [eventsTypesFilter] This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
     * @param {Boolean} [excludeAnalysisEvents] This param disables the retrieval of AnalysisEvents if true is passed.
     * @param {Boolean} [skipCorrelationLookup] This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
     * @param {module:api/EventsStoreApi~getNodesEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NodeEvent>}
     */
    getNodesEventList(apiVersion, startTimeUtc, endTimeUtc, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getNodesEventList");
      }
      // verify the required parameter 'startTimeUtc' is set
      if (startTimeUtc === undefined || startTimeUtc === null) {
        throw new Error("Missing the required parameter 'startTimeUtc' when calling getNodesEventList");
      }
      // verify the required parameter 'endTimeUtc' is set
      if (endTimeUtc === undefined || endTimeUtc === null) {
        throw new Error("Missing the required parameter 'endTimeUtc' when calling getNodesEventList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'StartTimeUtc': startTimeUtc,
        'EndTimeUtc': endTimeUtc,
        'EventsTypesFilter': opts['eventsTypesFilter'],
        'ExcludeAnalysisEvents': opts['excludeAnalysisEvents'],
        'SkipCorrelationLookup': opts['skipCorrelationLookup']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NodeEvent];
      return this.apiClient.callApi(
        '/EventsStore/Nodes/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPartitionEventList operation.
     * @callback module:api/EventsStoreApi~getPartitionEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PartitionEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a Partition-related events.
     * The response is list of PartitionEvent objects.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} partitionId The identity of the partition.
     * @param {String} startTimeUtc The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {String} endTimeUtc The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [eventsTypesFilter] This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
     * @param {Boolean} [excludeAnalysisEvents] This param disables the retrieval of AnalysisEvents if true is passed.
     * @param {Boolean} [skipCorrelationLookup] This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
     * @param {module:api/EventsStoreApi~getPartitionEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PartitionEvent>}
     */
    getPartitionEventList(apiVersion, partitionId, startTimeUtc, endTimeUtc, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getPartitionEventList");
      }
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling getPartitionEventList");
      }
      // verify the required parameter 'startTimeUtc' is set
      if (startTimeUtc === undefined || startTimeUtc === null) {
        throw new Error("Missing the required parameter 'startTimeUtc' when calling getPartitionEventList");
      }
      // verify the required parameter 'endTimeUtc' is set
      if (endTimeUtc === undefined || endTimeUtc === null) {
        throw new Error("Missing the required parameter 'endTimeUtc' when calling getPartitionEventList");
      }

      let pathParams = {
        'partitionId': partitionId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'StartTimeUtc': startTimeUtc,
        'EndTimeUtc': endTimeUtc,
        'EventsTypesFilter': opts['eventsTypesFilter'],
        'ExcludeAnalysisEvents': opts['excludeAnalysisEvents'],
        'SkipCorrelationLookup': opts['skipCorrelationLookup']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [PartitionEvent];
      return this.apiClient.callApi(
        '/EventsStore/Partitions/{partitionId}/$/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPartitionReplicaEventList operation.
     * @callback module:api/EventsStoreApi~getPartitionReplicaEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ReplicaEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a Partition Replica-related events.
     * The response is list of ReplicaEvent objects.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} partitionId The identity of the partition.
     * @param {String} replicaId The identifier of the replica.
     * @param {String} startTimeUtc The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {String} endTimeUtc The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [eventsTypesFilter] This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
     * @param {Boolean} [excludeAnalysisEvents] This param disables the retrieval of AnalysisEvents if true is passed.
     * @param {Boolean} [skipCorrelationLookup] This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
     * @param {module:api/EventsStoreApi~getPartitionReplicaEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ReplicaEvent>}
     */
    getPartitionReplicaEventList(apiVersion, partitionId, replicaId, startTimeUtc, endTimeUtc, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getPartitionReplicaEventList");
      }
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling getPartitionReplicaEventList");
      }
      // verify the required parameter 'replicaId' is set
      if (replicaId === undefined || replicaId === null) {
        throw new Error("Missing the required parameter 'replicaId' when calling getPartitionReplicaEventList");
      }
      // verify the required parameter 'startTimeUtc' is set
      if (startTimeUtc === undefined || startTimeUtc === null) {
        throw new Error("Missing the required parameter 'startTimeUtc' when calling getPartitionReplicaEventList");
      }
      // verify the required parameter 'endTimeUtc' is set
      if (endTimeUtc === undefined || endTimeUtc === null) {
        throw new Error("Missing the required parameter 'endTimeUtc' when calling getPartitionReplicaEventList");
      }

      let pathParams = {
        'partitionId': partitionId,
        'replicaId': replicaId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'StartTimeUtc': startTimeUtc,
        'EndTimeUtc': endTimeUtc,
        'EventsTypesFilter': opts['eventsTypesFilter'],
        'ExcludeAnalysisEvents': opts['excludeAnalysisEvents'],
        'SkipCorrelationLookup': opts['skipCorrelationLookup']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ReplicaEvent];
      return this.apiClient.callApi(
        '/EventsStore/Partitions/{partitionId}/$/Replicas/{replicaId}/$/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPartitionReplicasEventList operation.
     * @callback module:api/EventsStoreApi~getPartitionReplicasEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ReplicaEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all Replicas-related events for a Partition.
     * The response is list of ReplicaEvent objects.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} partitionId The identity of the partition.
     * @param {String} startTimeUtc The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {String} endTimeUtc The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [eventsTypesFilter] This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
     * @param {Boolean} [excludeAnalysisEvents] This param disables the retrieval of AnalysisEvents if true is passed.
     * @param {Boolean} [skipCorrelationLookup] This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
     * @param {module:api/EventsStoreApi~getPartitionReplicasEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ReplicaEvent>}
     */
    getPartitionReplicasEventList(apiVersion, partitionId, startTimeUtc, endTimeUtc, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getPartitionReplicasEventList");
      }
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling getPartitionReplicasEventList");
      }
      // verify the required parameter 'startTimeUtc' is set
      if (startTimeUtc === undefined || startTimeUtc === null) {
        throw new Error("Missing the required parameter 'startTimeUtc' when calling getPartitionReplicasEventList");
      }
      // verify the required parameter 'endTimeUtc' is set
      if (endTimeUtc === undefined || endTimeUtc === null) {
        throw new Error("Missing the required parameter 'endTimeUtc' when calling getPartitionReplicasEventList");
      }

      let pathParams = {
        'partitionId': partitionId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'StartTimeUtc': startTimeUtc,
        'EndTimeUtc': endTimeUtc,
        'EventsTypesFilter': opts['eventsTypesFilter'],
        'ExcludeAnalysisEvents': opts['excludeAnalysisEvents'],
        'SkipCorrelationLookup': opts['skipCorrelationLookup']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ReplicaEvent];
      return this.apiClient.callApi(
        '/EventsStore/Partitions/{partitionId}/$/Replicas/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPartitionsEventList operation.
     * @callback module:api/EventsStoreApi~getPartitionsEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PartitionEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all Partitions-related events.
     * The response is list of PartitionEvent objects.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} startTimeUtc The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {String} endTimeUtc The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [eventsTypesFilter] This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
     * @param {Boolean} [excludeAnalysisEvents] This param disables the retrieval of AnalysisEvents if true is passed.
     * @param {Boolean} [skipCorrelationLookup] This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
     * @param {module:api/EventsStoreApi~getPartitionsEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PartitionEvent>}
     */
    getPartitionsEventList(apiVersion, startTimeUtc, endTimeUtc, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getPartitionsEventList");
      }
      // verify the required parameter 'startTimeUtc' is set
      if (startTimeUtc === undefined || startTimeUtc === null) {
        throw new Error("Missing the required parameter 'startTimeUtc' when calling getPartitionsEventList");
      }
      // verify the required parameter 'endTimeUtc' is set
      if (endTimeUtc === undefined || endTimeUtc === null) {
        throw new Error("Missing the required parameter 'endTimeUtc' when calling getPartitionsEventList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'StartTimeUtc': startTimeUtc,
        'EndTimeUtc': endTimeUtc,
        'EventsTypesFilter': opts['eventsTypesFilter'],
        'ExcludeAnalysisEvents': opts['excludeAnalysisEvents'],
        'SkipCorrelationLookup': opts['skipCorrelationLookup']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [PartitionEvent];
      return this.apiClient.callApi(
        '/EventsStore/Partitions/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getServiceEventList operation.
     * @callback module:api/EventsStoreApi~getServiceEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ServiceEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a Service-related events.
     * The response is list of ServiceEvent objects.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} serviceId The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions.
     * @param {String} startTimeUtc The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {String} endTimeUtc The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [eventsTypesFilter] This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
     * @param {Boolean} [excludeAnalysisEvents] This param disables the retrieval of AnalysisEvents if true is passed.
     * @param {Boolean} [skipCorrelationLookup] This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
     * @param {module:api/EventsStoreApi~getServiceEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ServiceEvent>}
     */
    getServiceEventList(apiVersion, serviceId, startTimeUtc, endTimeUtc, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getServiceEventList");
      }
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling getServiceEventList");
      }
      // verify the required parameter 'startTimeUtc' is set
      if (startTimeUtc === undefined || startTimeUtc === null) {
        throw new Error("Missing the required parameter 'startTimeUtc' when calling getServiceEventList");
      }
      // verify the required parameter 'endTimeUtc' is set
      if (endTimeUtc === undefined || endTimeUtc === null) {
        throw new Error("Missing the required parameter 'endTimeUtc' when calling getServiceEventList");
      }

      let pathParams = {
        'serviceId': serviceId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'StartTimeUtc': startTimeUtc,
        'EndTimeUtc': endTimeUtc,
        'EventsTypesFilter': opts['eventsTypesFilter'],
        'ExcludeAnalysisEvents': opts['excludeAnalysisEvents'],
        'SkipCorrelationLookup': opts['skipCorrelationLookup']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ServiceEvent];
      return this.apiClient.callApi(
        '/EventsStore/Services/{serviceId}/$/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getServicesEventList operation.
     * @callback module:api/EventsStoreApi~getServicesEventListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ServiceEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all Services-related events.
     * The response is list of ServiceEvent objects.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {String} startTimeUtc The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {String} endTimeUtc The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [eventsTypesFilter] This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
     * @param {Boolean} [excludeAnalysisEvents] This param disables the retrieval of AnalysisEvents if true is passed.
     * @param {Boolean} [skipCorrelationLookup] This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
     * @param {module:api/EventsStoreApi~getServicesEventListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ServiceEvent>}
     */
    getServicesEventList(apiVersion, startTimeUtc, endTimeUtc, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getServicesEventList");
      }
      // verify the required parameter 'startTimeUtc' is set
      if (startTimeUtc === undefined || startTimeUtc === null) {
        throw new Error("Missing the required parameter 'startTimeUtc' when calling getServicesEventList");
      }
      // verify the required parameter 'endTimeUtc' is set
      if (endTimeUtc === undefined || endTimeUtc === null) {
        throw new Error("Missing the required parameter 'endTimeUtc' when calling getServicesEventList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'StartTimeUtc': startTimeUtc,
        'EndTimeUtc': endTimeUtc,
        'EventsTypesFilter': opts['eventsTypesFilter'],
        'ExcludeAnalysisEvents': opts['excludeAnalysisEvents'],
        'SkipCorrelationLookup': opts['skipCorrelationLookup']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ServiceEvent];
      return this.apiClient.callApi(
        '/EventsStore/Services/Events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
