/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FabricError from '../model/FabricError';
import PagedVolumeResourceDescriptionList from '../model/PagedVolumeResourceDescriptionList';
import VolumeResourceDescription from '../model/VolumeResourceDescription';

/**
* MeshVolumes service.
* @module api/MeshVolumesApi
* @version 7.0.0.42
*/
export default class MeshVolumesApi {

    /**
    * Constructs a new MeshVolumesApi. 
    * @alias module:api/MeshVolumesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the meshVolumeCreateOrUpdate operation.
     * @callback module:api/MeshVolumesApi~meshVolumeCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VolumeResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a Volume resource.
     * Creates a Volume resource with the specified name, description and properties. If Volume resource with the same name exists, then it is updated with the specified description and properties.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} volumeResourceName The identity of the volume.
     * @param {module:model/VolumeResourceDescription} volumeResourceDescription Description for creating a Volume resource.
     * @param {module:api/MeshVolumesApi~meshVolumeCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VolumeResourceDescription}
     */
    meshVolumeCreateOrUpdate(apiVersion, volumeResourceName, volumeResourceDescription, callback) {
      let postBody = volumeResourceDescription;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshVolumeCreateOrUpdate");
      }
      // verify the required parameter 'volumeResourceName' is set
      if (volumeResourceName === undefined || volumeResourceName === null) {
        throw new Error("Missing the required parameter 'volumeResourceName' when calling meshVolumeCreateOrUpdate");
      }
      // verify the required parameter 'volumeResourceDescription' is set
      if (volumeResourceDescription === undefined || volumeResourceDescription === null) {
        throw new Error("Missing the required parameter 'volumeResourceDescription' when calling meshVolumeCreateOrUpdate");
      }

      let pathParams = {
        'volumeResourceName': volumeResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VolumeResourceDescription;
      return this.apiClient.callApi(
        '/Resources/Volumes/{volumeResourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshVolumeDelete operation.
     * @callback module:api/MeshVolumesApi~meshVolumeDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the Volume resource.
     * Deletes the Volume resource identified by the name.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} volumeResourceName The identity of the volume.
     * @param {module:api/MeshVolumesApi~meshVolumeDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    meshVolumeDelete(apiVersion, volumeResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshVolumeDelete");
      }
      // verify the required parameter 'volumeResourceName' is set
      if (volumeResourceName === undefined || volumeResourceName === null) {
        throw new Error("Missing the required parameter 'volumeResourceName' when calling meshVolumeDelete");
      }

      let pathParams = {
        'volumeResourceName': volumeResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Resources/Volumes/{volumeResourceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshVolumeGet operation.
     * @callback module:api/MeshVolumesApi~meshVolumeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VolumeResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the Volume resource with the given name.
     * Gets the information about the Volume resource with the given name. The information include the description and other properties of the Volume.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} volumeResourceName The identity of the volume.
     * @param {module:api/MeshVolumesApi~meshVolumeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VolumeResourceDescription}
     */
    meshVolumeGet(apiVersion, volumeResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshVolumeGet");
      }
      // verify the required parameter 'volumeResourceName' is set
      if (volumeResourceName === undefined || volumeResourceName === null) {
        throw new Error("Missing the required parameter 'volumeResourceName' when calling meshVolumeGet");
      }

      let pathParams = {
        'volumeResourceName': volumeResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VolumeResourceDescription;
      return this.apiClient.callApi(
        '/Resources/Volumes/{volumeResourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshVolumeList operation.
     * @callback module:api/MeshVolumesApi~meshVolumeListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedVolumeResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the volume resources.
     * Gets the information about all volume resources in a given resource group. The information include the description and other properties of the Volume.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {module:api/MeshVolumesApi~meshVolumeListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedVolumeResourceDescriptionList}
     */
    meshVolumeList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshVolumeList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedVolumeResourceDescriptionList;
      return this.apiClient.callApi(
        '/Resources/Volumes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
