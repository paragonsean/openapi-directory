/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BackupPartitionDescription from '../model/BackupPartitionDescription';
import BackupPolicyDescription from '../model/BackupPolicyDescription';
import BackupProgressInfo from '../model/BackupProgressInfo';
import DisableBackupDescription from '../model/DisableBackupDescription';
import EnableBackupDescription from '../model/EnableBackupDescription';
import FabricError from '../model/FabricError';
import GetBackupByStorageQueryDescription from '../model/GetBackupByStorageQueryDescription';
import PagedBackupConfigurationInfoList from '../model/PagedBackupConfigurationInfoList';
import PagedBackupEntityList from '../model/PagedBackupEntityList';
import PagedBackupInfoList from '../model/PagedBackupInfoList';
import PagedBackupPolicyDescriptionList from '../model/PagedBackupPolicyDescriptionList';
import PartitionBackupConfigurationInfo from '../model/PartitionBackupConfigurationInfo';
import RestorePartitionDescription from '../model/RestorePartitionDescription';
import RestoreProgressInfo from '../model/RestoreProgressInfo';

/**
* BackupRestore service.
* @module api/BackupRestoreApi
* @version 7.0.0.42
*/
export default class BackupRestoreApi {

    /**
    * Constructs a new BackupRestoreApi. 
    * @alias module:api/BackupRestoreApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the backupPartition operation.
     * @callback module:api/BackupRestoreApi~backupPartitionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Triggers backup of the partition's state.
     * Creates a backup of the stateful persisted partition's state. In case the partition is already being periodically backed up, then by default the new backup is created at the same backup storage. One can also override the same by specifying the backup storage details as part of the request body. Once the backup is initiated, its progress can be tracked using the GetBackupProgress operation.  In case, the operation times out, specify a greater backup timeout value in the query parameter.
     * @param {String} partitionId The identity of the partition.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [backupTimeout = 10)] Specifies the maximum amount of time, in minutes, to wait for the backup operation to complete. Post that, the operation completes with timeout error. However, in certain corner cases it could be that though the operation returns back timeout, the backup actually goes through. In case of timeout error, its recommended to invoke this operation again with a greater timeout value. The default value for the same is 10 minutes.
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:model/BackupPartitionDescription} [backupPartitionDescription] Describes the parameters to backup the partition now. If not present, backup operation uses default parameters from the backup policy current associated with this partition.
     * @param {module:api/BackupRestoreApi~backupPartitionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    backupPartition(partitionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = opts['backupPartitionDescription'];
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling backupPartition");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling backupPartition");
      }

      let pathParams = {
        'partitionId': partitionId
      };
      let queryParams = {
        'BackupTimeout': opts['backupTimeout'],
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Partitions/{partitionId}/$/Backup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createBackupPolicy operation.
     * @callback module:api/BackupRestoreApi~createBackupPolicyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a backup policy.
     * Creates a backup policy which can be associated later with a Service Fabric application, service or a partition for periodic backup.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {module:model/BackupPolicyDescription} backupPolicyDescription Describes the backup policy.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~createBackupPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    createBackupPolicy(apiVersion, backupPolicyDescription, opts, callback) {
      opts = opts || {};
      let postBody = backupPolicyDescription;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling createBackupPolicy");
      }
      // verify the required parameter 'backupPolicyDescription' is set
      if (backupPolicyDescription === undefined || backupPolicyDescription === null) {
        throw new Error("Missing the required parameter 'backupPolicyDescription' when calling createBackupPolicy");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/BackupRestore/BackupPolicies/$/Create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteBackupPolicy operation.
     * @callback module:api/BackupRestoreApi~deleteBackupPolicyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the backup policy.
     * Deletes an existing backup policy. A backup policy must be created before it can be deleted. A currently active backup policy, associated with any Service Fabric application, service or partition, cannot be deleted without first deleting the mapping.
     * @param {String} backupPolicyName The name of the backup policy.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~deleteBackupPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteBackupPolicy(backupPolicyName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'backupPolicyName' is set
      if (backupPolicyName === undefined || backupPolicyName === null) {
        throw new Error("Missing the required parameter 'backupPolicyName' when calling deleteBackupPolicy");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling deleteBackupPolicy");
      }

      let pathParams = {
        'backupPolicyName': backupPolicyName
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/BackupRestore/BackupPolicies/{backupPolicyName}/$/Delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disableApplicationBackup operation.
     * @callback module:api/BackupRestoreApi~disableApplicationBackupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disables periodic backup of Service Fabric application.
     * Disables periodic backup of Service Fabric application which was previously enabled.
     * @param {String} applicationId The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:model/DisableBackupDescription} [disableBackupDescription] Specifies the parameters to disable backup for any backup entity.
     * @param {module:api/BackupRestoreApi~disableApplicationBackupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    disableApplicationBackup(applicationId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = opts['disableBackupDescription'];
      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling disableApplicationBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling disableApplicationBackup");
      }

      let pathParams = {
        'applicationId': applicationId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Applications/{applicationId}/$/DisableBackup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disablePartitionBackup operation.
     * @callback module:api/BackupRestoreApi~disablePartitionBackupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disables periodic backup of Service Fabric partition which was previously enabled.
     * Disables periodic backup of partition which was previously enabled. Backup must be explicitly enabled before it can be disabled.  In case the backup is enabled for the Service Fabric application or service, which this partition is part of, this partition would continue to be periodically backed up as per the policy mapped at the higher level entity.
     * @param {String} partitionId The identity of the partition.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:model/DisableBackupDescription} [disableBackupDescription] Specifies the parameters to disable backup for any backup entity.
     * @param {module:api/BackupRestoreApi~disablePartitionBackupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    disablePartitionBackup(partitionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = opts['disableBackupDescription'];
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling disablePartitionBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling disablePartitionBackup");
      }

      let pathParams = {
        'partitionId': partitionId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Partitions/{partitionId}/$/DisableBackup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disableServiceBackup operation.
     * @callback module:api/BackupRestoreApi~disableServiceBackupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disables periodic backup of Service Fabric service which was previously enabled.
     * Disables periodic backup of Service Fabric service which was previously enabled. Backup must be explicitly enabled before it can be disabled. In case the backup is enabled for the Service Fabric application, which this service is part of, this service would continue to be periodically backed up as per the policy mapped at the application level.
     * @param {String} serviceId The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:model/DisableBackupDescription} [disableBackupDescription] Specifies the parameters to disable backup for any backup entity.
     * @param {module:api/BackupRestoreApi~disableServiceBackupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    disableServiceBackup(serviceId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = opts['disableBackupDescription'];
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling disableServiceBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling disableServiceBackup");
      }

      let pathParams = {
        'serviceId': serviceId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Services/{serviceId}/$/DisableBackup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enableApplicationBackup operation.
     * @callback module:api/BackupRestoreApi~enableApplicationBackupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enables periodic backup of stateful partitions under this Service Fabric application.
     * Enables periodic backup of stateful partitions which are part of this Service Fabric application. Each partition is backed up individually as per the specified backup policy description.  Note only C# based Reliable Actor and Reliable Stateful services are currently supported for periodic backup.
     * @param {String} applicationId The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {module:model/EnableBackupDescription} enableBackupDescription Specifies the parameters for enabling backup.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~enableApplicationBackupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    enableApplicationBackup(applicationId, apiVersion, enableBackupDescription, opts, callback) {
      opts = opts || {};
      let postBody = enableBackupDescription;
      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling enableApplicationBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling enableApplicationBackup");
      }
      // verify the required parameter 'enableBackupDescription' is set
      if (enableBackupDescription === undefined || enableBackupDescription === null) {
        throw new Error("Missing the required parameter 'enableBackupDescription' when calling enableApplicationBackup");
      }

      let pathParams = {
        'applicationId': applicationId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Applications/{applicationId}/$/EnableBackup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enablePartitionBackup operation.
     * @callback module:api/BackupRestoreApi~enablePartitionBackupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enables periodic backup of the stateful persisted partition.
     * Enables periodic backup of stateful persisted partition. Each partition is backed up as per the specified backup policy description. In case the application or service, which is partition is part of, is already enabled for backup then this operation would override the policy being used to take the periodic backup of this partition. Note only C# based Reliable Actor and Reliable Stateful services are currently supported for periodic backup.
     * @param {String} partitionId The identity of the partition.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {module:model/EnableBackupDescription} enableBackupDescription Specifies the parameters for enabling backup.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~enablePartitionBackupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    enablePartitionBackup(partitionId, apiVersion, enableBackupDescription, opts, callback) {
      opts = opts || {};
      let postBody = enableBackupDescription;
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling enablePartitionBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling enablePartitionBackup");
      }
      // verify the required parameter 'enableBackupDescription' is set
      if (enableBackupDescription === undefined || enableBackupDescription === null) {
        throw new Error("Missing the required parameter 'enableBackupDescription' when calling enablePartitionBackup");
      }

      let pathParams = {
        'partitionId': partitionId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Partitions/{partitionId}/$/EnableBackup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enableServiceBackup operation.
     * @callback module:api/BackupRestoreApi~enableServiceBackupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enables periodic backup of stateful partitions under this Service Fabric service.
     * Enables periodic backup of stateful partitions which are part of this Service Fabric service. Each partition is backed up individually as per the specified backup policy description. In case the application, which the service is part of, is already enabled for backup then this operation would override the policy being used to take the periodic backup for this service and its partitions (unless explicitly overridden at the partition level). Note only C# based Reliable Actor and Reliable Stateful services are currently supported for periodic backup.
     * @param {String} serviceId The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {module:model/EnableBackupDescription} enableBackupDescription Specifies the parameters for enabling backup.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~enableServiceBackupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    enableServiceBackup(serviceId, apiVersion, enableBackupDescription, opts, callback) {
      opts = opts || {};
      let postBody = enableBackupDescription;
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling enableServiceBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling enableServiceBackup");
      }
      // verify the required parameter 'enableBackupDescription' is set
      if (enableBackupDescription === undefined || enableBackupDescription === null) {
        throw new Error("Missing the required parameter 'enableBackupDescription' when calling enableServiceBackup");
      }

      let pathParams = {
        'serviceId': serviceId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Services/{serviceId}/$/EnableBackup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllEntitiesBackedUpByPolicy operation.
     * @callback module:api/BackupRestoreApi~getAllEntitiesBackedUpByPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedBackupEntityList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the list of backup entities that are associated with this policy.
     * Returns a list of Service Fabric application, service or partition which are associated with this backup policy.
     * @param {String} backupPolicyName The name of the backup policy.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {String} [continuationToken] The continuation token parameter is used to obtain next set of results. A continuation token with a non-empty value is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token does not contain a value. The value of this parameter should not be URL encoded.
     * @param {Number} [maxResults = 0)] The maximum number of results to be returned as part of the paged queries. This parameter defines the upper bound on the number of results returned. The results returned can be less than the specified maximum results if they do not fit in the message as per the max message size restrictions defined in the configuration. If this parameter is zero or not specified, the paged query includes as many results as possible that fit in the return message.
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~getAllEntitiesBackedUpByPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedBackupEntityList}
     */
    getAllEntitiesBackedUpByPolicy(backupPolicyName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'backupPolicyName' is set
      if (backupPolicyName === undefined || backupPolicyName === null) {
        throw new Error("Missing the required parameter 'backupPolicyName' when calling getAllEntitiesBackedUpByPolicy");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getAllEntitiesBackedUpByPolicy");
      }

      let pathParams = {
        'backupPolicyName': backupPolicyName
      };
      let queryParams = {
        'api-version': apiVersion,
        'ContinuationToken': opts['continuationToken'],
        'MaxResults': opts['maxResults'],
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedBackupEntityList;
      return this.apiClient.callApi(
        '/BackupRestore/BackupPolicies/{backupPolicyName}/$/GetBackupEnabledEntities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getApplicationBackupConfigurationInfo operation.
     * @callback module:api/BackupRestoreApi~getApplicationBackupConfigurationInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedBackupConfigurationInfoList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the Service Fabric application backup configuration information.
     * Gets the Service Fabric backup configuration information for the application and the services and partitions under this application.
     * @param {String} applicationId The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {String} [continuationToken] The continuation token parameter is used to obtain next set of results. A continuation token with a non-empty value is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token does not contain a value. The value of this parameter should not be URL encoded.
     * @param {Number} [maxResults = 0)] The maximum number of results to be returned as part of the paged queries. This parameter defines the upper bound on the number of results returned. The results returned can be less than the specified maximum results if they do not fit in the message as per the max message size restrictions defined in the configuration. If this parameter is zero or not specified, the paged query includes as many results as possible that fit in the return message.
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~getApplicationBackupConfigurationInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedBackupConfigurationInfoList}
     */
    getApplicationBackupConfigurationInfo(applicationId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling getApplicationBackupConfigurationInfo");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getApplicationBackupConfigurationInfo");
      }

      let pathParams = {
        'applicationId': applicationId
      };
      let queryParams = {
        'api-version': apiVersion,
        'ContinuationToken': opts['continuationToken'],
        'MaxResults': opts['maxResults'],
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedBackupConfigurationInfoList;
      return this.apiClient.callApi(
        '/Applications/{applicationId}/$/GetBackupConfigurationInfo', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getApplicationBackupList operation.
     * @callback module:api/BackupRestoreApi~getApplicationBackupListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedBackupInfoList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the list of backups available for every partition in this application.
     * Returns a list of backups available for every partition in this Service Fabric application. The server enumerates all the backups available at the backup location configured in the backup policy. It also allows filtering of the result based on start and end datetime or just fetching the latest available backup for every partition.
     * @param {String} applicationId The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {Boolean} [latest = false)] Specifies whether to get only the most recent backup available for a partition for the specified time range.
     * @param {Date} [startDateTimeFilter] Specify the start date time from which to enumerate backups, in datetime format. The date time must be specified in ISO8601 format. This is an optional parameter. If not specified, all backups from the beginning are enumerated.
     * @param {Date} [endDateTimeFilter] Specify the end date time till which to enumerate backups, in datetime format. The date time must be specified in ISO8601 format. This is an optional parameter. If not specified, enumeration is done till the most recent backup.
     * @param {String} [continuationToken] The continuation token parameter is used to obtain next set of results. A continuation token with a non-empty value is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token does not contain a value. The value of this parameter should not be URL encoded.
     * @param {Number} [maxResults = 0)] The maximum number of results to be returned as part of the paged queries. This parameter defines the upper bound on the number of results returned. The results returned can be less than the specified maximum results if they do not fit in the message as per the max message size restrictions defined in the configuration. If this parameter is zero or not specified, the paged query includes as many results as possible that fit in the return message.
     * @param {module:api/BackupRestoreApi~getApplicationBackupListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedBackupInfoList}
     */
    getApplicationBackupList(applicationId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling getApplicationBackupList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getApplicationBackupList");
      }

      let pathParams = {
        'applicationId': applicationId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'Latest': opts['latest'],
        'StartDateTimeFilter': opts['startDateTimeFilter'],
        'EndDateTimeFilter': opts['endDateTimeFilter'],
        'ContinuationToken': opts['continuationToken'],
        'MaxResults': opts['maxResults']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedBackupInfoList;
      return this.apiClient.callApi(
        '/Applications/{applicationId}/$/GetBackups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBackupPolicyByName operation.
     * @callback module:api/BackupRestoreApi~getBackupPolicyByNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BackupPolicyDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a particular backup policy by name.
     * Gets a particular backup policy identified by {backupPolicyName}
     * @param {String} backupPolicyName The name of the backup policy.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~getBackupPolicyByNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BackupPolicyDescription}
     */
    getBackupPolicyByName(backupPolicyName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'backupPolicyName' is set
      if (backupPolicyName === undefined || backupPolicyName === null) {
        throw new Error("Missing the required parameter 'backupPolicyName' when calling getBackupPolicyByName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getBackupPolicyByName");
      }

      let pathParams = {
        'backupPolicyName': backupPolicyName
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BackupPolicyDescription;
      return this.apiClient.callApi(
        '/BackupRestore/BackupPolicies/{backupPolicyName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBackupPolicyList operation.
     * @callback module:api/BackupRestoreApi~getBackupPolicyListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedBackupPolicyDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the backup policies configured.
     * Get a list of all the backup policies configured.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {String} [continuationToken] The continuation token parameter is used to obtain next set of results. A continuation token with a non-empty value is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token does not contain a value. The value of this parameter should not be URL encoded.
     * @param {Number} [maxResults = 0)] The maximum number of results to be returned as part of the paged queries. This parameter defines the upper bound on the number of results returned. The results returned can be less than the specified maximum results if they do not fit in the message as per the max message size restrictions defined in the configuration. If this parameter is zero or not specified, the paged query includes as many results as possible that fit in the return message.
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~getBackupPolicyListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedBackupPolicyDescriptionList}
     */
    getBackupPolicyList(apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getBackupPolicyList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        'ContinuationToken': opts['continuationToken'],
        'MaxResults': opts['maxResults'],
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedBackupPolicyDescriptionList;
      return this.apiClient.callApi(
        '/BackupRestore/BackupPolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBackupsFromBackupLocation operation.
     * @callback module:api/BackupRestoreApi~getBackupsFromBackupLocationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedBackupInfoList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the list of backups available for the specified backed up entity at the specified backup location.
     * Gets the list of backups available for the specified backed up entity (Application, Service or Partition) at the specified backup location (FileShare or Azure Blob Storage).
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {module:model/GetBackupByStorageQueryDescription} getBackupByStorageQueryDescription Describes the filters and backup storage details to be used for enumerating backups.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {String} [continuationToken] The continuation token parameter is used to obtain next set of results. A continuation token with a non-empty value is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token does not contain a value. The value of this parameter should not be URL encoded.
     * @param {Number} [maxResults = 0)] The maximum number of results to be returned as part of the paged queries. This parameter defines the upper bound on the number of results returned. The results returned can be less than the specified maximum results if they do not fit in the message as per the max message size restrictions defined in the configuration. If this parameter is zero or not specified, the paged query includes as many results as possible that fit in the return message.
     * @param {module:api/BackupRestoreApi~getBackupsFromBackupLocationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedBackupInfoList}
     */
    getBackupsFromBackupLocation(apiVersion, getBackupByStorageQueryDescription, opts, callback) {
      opts = opts || {};
      let postBody = getBackupByStorageQueryDescription;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getBackupsFromBackupLocation");
      }
      // verify the required parameter 'getBackupByStorageQueryDescription' is set
      if (getBackupByStorageQueryDescription === undefined || getBackupByStorageQueryDescription === null) {
        throw new Error("Missing the required parameter 'getBackupByStorageQueryDescription' when calling getBackupsFromBackupLocation");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'ContinuationToken': opts['continuationToken'],
        'MaxResults': opts['maxResults']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedBackupInfoList;
      return this.apiClient.callApi(
        '/BackupRestore/$/GetBackups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPartitionBackupConfigurationInfo operation.
     * @callback module:api/BackupRestoreApi~getPartitionBackupConfigurationInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PartitionBackupConfigurationInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the partition backup configuration information
     * Gets the Service Fabric Backup configuration information for the specified partition.
     * @param {String} partitionId The identity of the partition.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~getPartitionBackupConfigurationInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PartitionBackupConfigurationInfo}
     */
    getPartitionBackupConfigurationInfo(partitionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling getPartitionBackupConfigurationInfo");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getPartitionBackupConfigurationInfo");
      }

      let pathParams = {
        'partitionId': partitionId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PartitionBackupConfigurationInfo;
      return this.apiClient.callApi(
        '/Partitions/{partitionId}/$/GetBackupConfigurationInfo', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPartitionBackupList operation.
     * @callback module:api/BackupRestoreApi~getPartitionBackupListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedBackupInfoList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the list of backups available for the specified partition.
     * Returns a list of backups available for the specified partition. The server enumerates all the backups available in the backup store configured in the backup policy. It also allows filtering of the result based on start and end datetime or just fetching the latest available backup for the partition.
     * @param {String} partitionId The identity of the partition.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {Boolean} [latest = false)] Specifies whether to get only the most recent backup available for a partition for the specified time range.
     * @param {Date} [startDateTimeFilter] Specify the start date time from which to enumerate backups, in datetime format. The date time must be specified in ISO8601 format. This is an optional parameter. If not specified, all backups from the beginning are enumerated.
     * @param {Date} [endDateTimeFilter] Specify the end date time till which to enumerate backups, in datetime format. The date time must be specified in ISO8601 format. This is an optional parameter. If not specified, enumeration is done till the most recent backup.
     * @param {module:api/BackupRestoreApi~getPartitionBackupListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedBackupInfoList}
     */
    getPartitionBackupList(partitionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling getPartitionBackupList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getPartitionBackupList");
      }

      let pathParams = {
        'partitionId': partitionId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'Latest': opts['latest'],
        'StartDateTimeFilter': opts['startDateTimeFilter'],
        'EndDateTimeFilter': opts['endDateTimeFilter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedBackupInfoList;
      return this.apiClient.callApi(
        '/Partitions/{partitionId}/$/GetBackups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPartitionBackupProgress operation.
     * @callback module:api/BackupRestoreApi~getPartitionBackupProgressCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BackupProgressInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets details for the latest backup triggered for this partition.
     * Returns information about the state of the latest backup along with details or failure reason in case of completion.
     * @param {String} partitionId The identity of the partition.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~getPartitionBackupProgressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BackupProgressInfo}
     */
    getPartitionBackupProgress(partitionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling getPartitionBackupProgress");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getPartitionBackupProgress");
      }

      let pathParams = {
        'partitionId': partitionId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BackupProgressInfo;
      return this.apiClient.callApi(
        '/Partitions/{partitionId}/$/GetBackupProgress', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPartitionRestoreProgress operation.
     * @callback module:api/BackupRestoreApi~getPartitionRestoreProgressCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestoreProgressInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets details for the latest restore operation triggered for this partition.
     * Returns information about the state of the latest restore operation along with details or failure reason in case of completion.
     * @param {String} partitionId The identity of the partition.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~getPartitionRestoreProgressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestoreProgressInfo}
     */
    getPartitionRestoreProgress(partitionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling getPartitionRestoreProgress");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getPartitionRestoreProgress");
      }

      let pathParams = {
        'partitionId': partitionId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RestoreProgressInfo;
      return this.apiClient.callApi(
        '/Partitions/{partitionId}/$/GetRestoreProgress', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getServiceBackupConfigurationInfo operation.
     * @callback module:api/BackupRestoreApi~getServiceBackupConfigurationInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedBackupConfigurationInfoList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the Service Fabric service backup configuration information.
     * Gets the Service Fabric backup configuration information for the service and the partitions under this service.
     * @param {String} serviceId The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {String} [continuationToken] The continuation token parameter is used to obtain next set of results. A continuation token with a non-empty value is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token does not contain a value. The value of this parameter should not be URL encoded.
     * @param {Number} [maxResults = 0)] The maximum number of results to be returned as part of the paged queries. This parameter defines the upper bound on the number of results returned. The results returned can be less than the specified maximum results if they do not fit in the message as per the max message size restrictions defined in the configuration. If this parameter is zero or not specified, the paged query includes as many results as possible that fit in the return message.
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~getServiceBackupConfigurationInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedBackupConfigurationInfoList}
     */
    getServiceBackupConfigurationInfo(serviceId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling getServiceBackupConfigurationInfo");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getServiceBackupConfigurationInfo");
      }

      let pathParams = {
        'serviceId': serviceId
      };
      let queryParams = {
        'api-version': apiVersion,
        'ContinuationToken': opts['continuationToken'],
        'MaxResults': opts['maxResults'],
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedBackupConfigurationInfoList;
      return this.apiClient.callApi(
        '/Services/{serviceId}/$/GetBackupConfigurationInfo', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getServiceBackupList operation.
     * @callback module:api/BackupRestoreApi~getServiceBackupListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedBackupInfoList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the list of backups available for every partition in this service.
     * Returns a list of backups available for every partition in this Service Fabric service. The server enumerates all the backups available in the backup store configured in the backup policy. It also allows filtering of the result based on start and end datetime or just fetching the latest available backup for every partition.
     * @param {String} serviceId The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {Boolean} [latest = false)] Specifies whether to get only the most recent backup available for a partition for the specified time range.
     * @param {Date} [startDateTimeFilter] Specify the start date time from which to enumerate backups, in datetime format. The date time must be specified in ISO8601 format. This is an optional parameter. If not specified, all backups from the beginning are enumerated.
     * @param {Date} [endDateTimeFilter] Specify the end date time till which to enumerate backups, in datetime format. The date time must be specified in ISO8601 format. This is an optional parameter. If not specified, enumeration is done till the most recent backup.
     * @param {String} [continuationToken] The continuation token parameter is used to obtain next set of results. A continuation token with a non-empty value is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token does not contain a value. The value of this parameter should not be URL encoded.
     * @param {Number} [maxResults = 0)] The maximum number of results to be returned as part of the paged queries. This parameter defines the upper bound on the number of results returned. The results returned can be less than the specified maximum results if they do not fit in the message as per the max message size restrictions defined in the configuration. If this parameter is zero or not specified, the paged query includes as many results as possible that fit in the return message.
     * @param {module:api/BackupRestoreApi~getServiceBackupListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedBackupInfoList}
     */
    getServiceBackupList(serviceId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling getServiceBackupList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getServiceBackupList");
      }

      let pathParams = {
        'serviceId': serviceId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout'],
        'Latest': opts['latest'],
        'StartDateTimeFilter': opts['startDateTimeFilter'],
        'EndDateTimeFilter': opts['endDateTimeFilter'],
        'ContinuationToken': opts['continuationToken'],
        'MaxResults': opts['maxResults']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedBackupInfoList;
      return this.apiClient.callApi(
        '/Services/{serviceId}/$/GetBackups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the restorePartition operation.
     * @callback module:api/BackupRestoreApi~restorePartitionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Triggers restore of the state of the partition using the specified restore partition description.
     * Restores the state of a of the stateful persisted partition using the specified backup point. In case the partition is already being periodically backed up, then by default the backup point is looked for in the storage specified in backup policy. One can also override the same by specifying the backup storage details as part of the restore partition description in body. Once the restore is initiated, its progress can be tracked using the GetRestoreProgress operation.  In case, the operation times out, specify a greater restore timeout value in the query parameter.
     * @param {String} partitionId The identity of the partition.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {module:model/RestorePartitionDescription} restorePartitionDescription Describes the parameters to restore the partition.
     * @param {Object} opts Optional parameters
     * @param {Number} [restoreTimeout = 10)] Specifies the maximum amount of time to wait, in minutes, for the restore operation to complete. Post that, the operation returns back with timeout error. However, in certain corner cases it could be that the restore operation goes through even though it completes with timeout. In case of timeout error, its recommended to invoke this operation again with a greater timeout value. the default value for the same is 10 minutes.
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~restorePartitionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    restorePartition(partitionId, apiVersion, restorePartitionDescription, opts, callback) {
      opts = opts || {};
      let postBody = restorePartitionDescription;
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling restorePartition");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling restorePartition");
      }
      // verify the required parameter 'restorePartitionDescription' is set
      if (restorePartitionDescription === undefined || restorePartitionDescription === null) {
        throw new Error("Missing the required parameter 'restorePartitionDescription' when calling restorePartition");
      }

      let pathParams = {
        'partitionId': partitionId
      };
      let queryParams = {
        'RestoreTimeout': opts['restoreTimeout'],
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Partitions/{partitionId}/$/Restore', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resumeApplicationBackup operation.
     * @callback module:api/BackupRestoreApi~resumeApplicationBackupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resumes periodic backup of a Service Fabric application which was previously suspended.
     * The previously suspended Service Fabric application resumes taking periodic backup as per the backup policy currently configured for the same.
     * @param {String} applicationId The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~resumeApplicationBackupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    resumeApplicationBackup(applicationId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling resumeApplicationBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resumeApplicationBackup");
      }

      let pathParams = {
        'applicationId': applicationId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Applications/{applicationId}/$/ResumeBackup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resumePartitionBackup operation.
     * @callback module:api/BackupRestoreApi~resumePartitionBackupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resumes periodic backup of partition which was previously suspended.
     * The previously suspended partition resumes taking periodic backup as per the backup policy currently configured for the same.
     * @param {String} partitionId The identity of the partition.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~resumePartitionBackupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    resumePartitionBackup(partitionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling resumePartitionBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resumePartitionBackup");
      }

      let pathParams = {
        'partitionId': partitionId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Partitions/{partitionId}/$/ResumeBackup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resumeServiceBackup operation.
     * @callback module:api/BackupRestoreApi~resumeServiceBackupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resumes periodic backup of a Service Fabric service which was previously suspended.
     * The previously suspended Service Fabric service resumes taking periodic backup as per the backup policy currently configured for the same.
     * @param {String} serviceId The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~resumeServiceBackupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    resumeServiceBackup(serviceId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling resumeServiceBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resumeServiceBackup");
      }

      let pathParams = {
        'serviceId': serviceId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Services/{serviceId}/$/ResumeBackup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suspendApplicationBackup operation.
     * @callback module:api/BackupRestoreApi~suspendApplicationBackupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Suspends periodic backup for the specified Service Fabric application.
     * The application which is configured to take periodic backups, is suspended for taking further backups till it is resumed again. This operation applies to the entire application's hierarchy. It means all the services and partitions under this application are now suspended for backup.
     * @param {String} applicationId The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~suspendApplicationBackupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    suspendApplicationBackup(applicationId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling suspendApplicationBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling suspendApplicationBackup");
      }

      let pathParams = {
        'applicationId': applicationId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Applications/{applicationId}/$/SuspendBackup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suspendPartitionBackup operation.
     * @callback module:api/BackupRestoreApi~suspendPartitionBackupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Suspends periodic backup for the specified partition.
     * The partition which is configured to take periodic backups, is suspended for taking further backups till it is resumed again.
     * @param {String} partitionId The identity of the partition.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~suspendPartitionBackupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    suspendPartitionBackup(partitionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'partitionId' is set
      if (partitionId === undefined || partitionId === null) {
        throw new Error("Missing the required parameter 'partitionId' when calling suspendPartitionBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling suspendPartitionBackup");
      }

      let pathParams = {
        'partitionId': partitionId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Partitions/{partitionId}/$/SuspendBackup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suspendServiceBackup operation.
     * @callback module:api/BackupRestoreApi~suspendServiceBackupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Suspends periodic backup for the specified Service Fabric service.
     * The service which is configured to take periodic backups, is suspended for taking further backups till it is resumed again. This operation applies to the entire service's hierarchy. It means all the partitions under this service are now suspended for backup.
     * @param {String} serviceId The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~suspendServiceBackupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    suspendServiceBackup(serviceId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling suspendServiceBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling suspendServiceBackup");
      }

      let pathParams = {
        'serviceId': serviceId
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Services/{serviceId}/$/SuspendBackup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateBackupPolicy operation.
     * @callback module:api/BackupRestoreApi~updateBackupPolicyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the backup policy.
     * Updates the backup policy identified by {backupPolicyName}
     * @param {String} backupPolicyName The name of the backup policy.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
     * @param {module:model/BackupPolicyDescription} backupPolicyDescription Describes the backup policy.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 60)] The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
     * @param {module:api/BackupRestoreApi~updateBackupPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateBackupPolicy(backupPolicyName, apiVersion, backupPolicyDescription, opts, callback) {
      opts = opts || {};
      let postBody = backupPolicyDescription;
      // verify the required parameter 'backupPolicyName' is set
      if (backupPolicyName === undefined || backupPolicyName === null) {
        throw new Error("Missing the required parameter 'backupPolicyName' when calling updateBackupPolicy");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling updateBackupPolicy");
      }
      // verify the required parameter 'backupPolicyDescription' is set
      if (backupPolicyDescription === undefined || backupPolicyDescription === null) {
        throw new Error("Missing the required parameter 'backupPolicyDescription' when calling updateBackupPolicy");
      }

      let pathParams = {
        'backupPolicyName': backupPolicyName
      };
      let queryParams = {
        'api-version': apiVersion,
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/BackupRestore/BackupPolicies/{backupPolicyName}/$/Update', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
