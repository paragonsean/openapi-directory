/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FabricError from '../model/FabricError';
import PagedServiceResourceDescriptionList from '../model/PagedServiceResourceDescriptionList';
import ServiceResourceDescription from '../model/ServiceResourceDescription';

/**
* MeshServices service.
* @module api/MeshServicesApi
* @version 7.0.0.42
*/
export default class MeshServicesApi {

    /**
    * Constructs a new MeshServicesApi. 
    * @alias module:api/MeshServicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the meshServiceGet operation.
     * @callback module:api/MeshServicesApi~meshServiceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the Service resource with the given name.
     * Gets the information about the Service resource with the given name. The information include the description and other properties of the Service.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} applicationResourceName The identity of the application.
     * @param {String} serviceResourceName The identity of the service.
     * @param {module:api/MeshServicesApi~meshServiceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceResourceDescription}
     */
    meshServiceGet(apiVersion, applicationResourceName, serviceResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshServiceGet");
      }
      // verify the required parameter 'applicationResourceName' is set
      if (applicationResourceName === undefined || applicationResourceName === null) {
        throw new Error("Missing the required parameter 'applicationResourceName' when calling meshServiceGet");
      }
      // verify the required parameter 'serviceResourceName' is set
      if (serviceResourceName === undefined || serviceResourceName === null) {
        throw new Error("Missing the required parameter 'serviceResourceName' when calling meshServiceGet");
      }

      let pathParams = {
        'applicationResourceName': applicationResourceName,
        'serviceResourceName': serviceResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceResourceDescription;
      return this.apiClient.callApi(
        '/Resources/Applications/{applicationResourceName}/Services/{serviceResourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the meshServiceList operation.
     * @callback module:api/MeshServicesApi~meshServiceListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedServiceResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the service resources.
     * Gets the information about all services of an application resource. The information include the description and other properties of the Service.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.4-preview'.
     * @param {String} applicationResourceName The identity of the application.
     * @param {module:api/MeshServicesApi~meshServiceListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedServiceResourceDescriptionList}
     */
    meshServiceList(apiVersion, applicationResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling meshServiceList");
      }
      // verify the required parameter 'applicationResourceName' is set
      if (applicationResourceName === undefined || applicationResourceName === null) {
        throw new Error("Missing the required parameter 'applicationResourceName' when calling meshServiceList");
      }

      let pathParams = {
        'applicationResourceName': applicationResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagedServiceResourceDescriptionList;
      return this.apiClient.callApi(
        '/Resources/Applications/{applicationResourceName}/Services', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
