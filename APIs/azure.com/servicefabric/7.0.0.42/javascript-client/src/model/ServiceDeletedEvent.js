/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FabricEventKind from './FabricEventKind';
import ServiceEvent from './ServiceEvent';

/**
 * The ServiceDeletedEvent model module.
 * @module model/ServiceDeletedEvent
 * @version 7.0.0.42
 */
class ServiceDeletedEvent {
    /**
     * Constructs a new <code>ServiceDeletedEvent</code>.
     * Service Deleted event.
     * @alias module:model/ServiceDeletedEvent
     * @extends module:model/ServiceEvent
     * @implements module:model/ServiceEvent
     * @param serviceId {String} The identity of the service. This ID is an encoded representation of the service name. This is used in the REST APIs to identify the service resource. Starting in version 6.0, hierarchical names are delimited with the \"\\~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1\\~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions.
     * @param eventInstanceId {String} The identifier for the FabricEvent instance.
     * @param kind {module:model/FabricEventKind} 
     * @param timeStamp {Date} The time event was logged.
     */
    constructor(serviceId, eventInstanceId, kind, timeStamp) { 
        ServiceEvent.initialize(this, eventInstanceId, kind, timeStamp);
        ServiceDeletedEvent.initialize(this, serviceId, eventInstanceId, kind, timeStamp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serviceId, eventInstanceId, kind, timeStamp) { 
        obj['ApplicationName'] = applicationName;
        obj['ApplicationTypeName'] = applicationTypeName;
        obj['IsStateful'] = isStateful;
        obj['MinReplicaSetSize'] = minReplicaSetSize;
        obj['PartitionCount'] = partitionCount;
        obj['ServiceInstance'] = serviceInstance;
        obj['ServicePackageVersion'] = servicePackageVersion;
        obj['ServiceTypeName'] = serviceTypeName;
        obj['TargetReplicaSetSize'] = targetReplicaSetSize;
    }

    /**
     * Constructs a <code>ServiceDeletedEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceDeletedEvent} obj Optional instance to populate.
     * @return {module:model/ServiceDeletedEvent} The populated <code>ServiceDeletedEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceDeletedEvent();
            ServiceEvent.constructFromObject(data, obj);
            ServiceEvent.constructFromObject(data, obj);

            if (data.hasOwnProperty('ApplicationName')) {
                obj['ApplicationName'] = ApiClient.convertToType(data['ApplicationName'], 'String');
            }
            if (data.hasOwnProperty('ApplicationTypeName')) {
                obj['ApplicationTypeName'] = ApiClient.convertToType(data['ApplicationTypeName'], 'String');
            }
            if (data.hasOwnProperty('IsStateful')) {
                obj['IsStateful'] = ApiClient.convertToType(data['IsStateful'], 'Boolean');
            }
            if (data.hasOwnProperty('MinReplicaSetSize')) {
                obj['MinReplicaSetSize'] = ApiClient.convertToType(data['MinReplicaSetSize'], 'Number');
            }
            if (data.hasOwnProperty('PartitionCount')) {
                obj['PartitionCount'] = ApiClient.convertToType(data['PartitionCount'], 'Number');
            }
            if (data.hasOwnProperty('ServiceInstance')) {
                obj['ServiceInstance'] = ApiClient.convertToType(data['ServiceInstance'], 'Number');
            }
            if (data.hasOwnProperty('ServicePackageVersion')) {
                obj['ServicePackageVersion'] = ApiClient.convertToType(data['ServicePackageVersion'], 'String');
            }
            if (data.hasOwnProperty('ServiceTypeName')) {
                obj['ServiceTypeName'] = ApiClient.convertToType(data['ServiceTypeName'], 'String');
            }
            if (data.hasOwnProperty('TargetReplicaSetSize')) {
                obj['TargetReplicaSetSize'] = ApiClient.convertToType(data['TargetReplicaSetSize'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceDeletedEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceDeletedEvent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ServiceDeletedEvent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ApplicationName'] && !(typeof data['ApplicationName'] === 'string' || data['ApplicationName'] instanceof String)) {
            throw new Error("Expected the field `ApplicationName` to be a primitive type in the JSON string but got " + data['ApplicationName']);
        }
        // ensure the json data is a string
        if (data['ApplicationTypeName'] && !(typeof data['ApplicationTypeName'] === 'string' || data['ApplicationTypeName'] instanceof String)) {
            throw new Error("Expected the field `ApplicationTypeName` to be a primitive type in the JSON string but got " + data['ApplicationTypeName']);
        }
        // ensure the json data is a string
        if (data['ServicePackageVersion'] && !(typeof data['ServicePackageVersion'] === 'string' || data['ServicePackageVersion'] instanceof String)) {
            throw new Error("Expected the field `ServicePackageVersion` to be a primitive type in the JSON string but got " + data['ServicePackageVersion']);
        }
        // ensure the json data is a string
        if (data['ServiceTypeName'] && !(typeof data['ServiceTypeName'] === 'string' || data['ServiceTypeName'] instanceof String)) {
            throw new Error("Expected the field `ServiceTypeName` to be a primitive type in the JSON string but got " + data['ServiceTypeName']);
        }

        return true;
    }


}

ServiceDeletedEvent.RequiredProperties = ["ApplicationName", "ApplicationTypeName", "IsStateful", "MinReplicaSetSize", "PartitionCount", "ServiceInstance", "ServicePackageVersion", "ServiceTypeName", "TargetReplicaSetSize", "ServiceId", "EventInstanceId", "Kind", "TimeStamp"];

/**
 * Application name.
 * @member {String} ApplicationName
 */
ServiceDeletedEvent.prototype['ApplicationName'] = undefined;

/**
 * Application type name.
 * @member {String} ApplicationTypeName
 */
ServiceDeletedEvent.prototype['ApplicationTypeName'] = undefined;

/**
 * Indicates if Service is stateful.
 * @member {Boolean} IsStateful
 */
ServiceDeletedEvent.prototype['IsStateful'] = undefined;

/**
 * Minimum size of replicas set.
 * @member {Number} MinReplicaSetSize
 */
ServiceDeletedEvent.prototype['MinReplicaSetSize'] = undefined;

/**
 * Number of partitions.
 * @member {Number} PartitionCount
 */
ServiceDeletedEvent.prototype['PartitionCount'] = undefined;

/**
 * Id of Service instance.
 * @member {Number} ServiceInstance
 */
ServiceDeletedEvent.prototype['ServiceInstance'] = undefined;

/**
 * Version of Service package.
 * @member {String} ServicePackageVersion
 */
ServiceDeletedEvent.prototype['ServicePackageVersion'] = undefined;

/**
 * Service type name.
 * @member {String} ServiceTypeName
 */
ServiceDeletedEvent.prototype['ServiceTypeName'] = undefined;

/**
 * Size of target replicas set.
 * @member {Number} TargetReplicaSetSize
 */
ServiceDeletedEvent.prototype['TargetReplicaSetSize'] = undefined;


// Implement ServiceEvent interface:
/**
 * The category of event.
 * @member {String} Category
 */
ServiceEvent.prototype['Category'] = undefined;
/**
 * The identifier for the FabricEvent instance.
 * @member {String} EventInstanceId
 */
ServiceEvent.prototype['EventInstanceId'] = undefined;
/**
 * Shows there is existing related events available.
 * @member {Boolean} HasCorrelatedEvents
 */
ServiceEvent.prototype['HasCorrelatedEvents'] = undefined;
/**
 * @member {module:model/FabricEventKind} Kind
 */
ServiceEvent.prototype['Kind'] = undefined;
/**
 * The time event was logged.
 * @member {Date} TimeStamp
 */
ServiceEvent.prototype['TimeStamp'] = undefined;




export default ServiceDeletedEvent;

