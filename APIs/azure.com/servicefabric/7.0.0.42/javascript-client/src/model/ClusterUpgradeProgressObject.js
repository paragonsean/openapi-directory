/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClusterUpgradeDescriptionObject from './ClusterUpgradeDescriptionObject';
import CurrentUpgradeDomainProgressInfo from './CurrentUpgradeDomainProgressInfo';
import FailedUpgradeDomainProgressObject from './FailedUpgradeDomainProgressObject';
import FailureReason from './FailureReason';
import HealthEvaluationWrapper from './HealthEvaluationWrapper';
import UpgradeDomainInfo from './UpgradeDomainInfo';
import UpgradeMode from './UpgradeMode';
import UpgradeState from './UpgradeState';

/**
 * The ClusterUpgradeProgressObject model module.
 * @module model/ClusterUpgradeProgressObject
 * @version 7.0.0.42
 */
class ClusterUpgradeProgressObject {
    /**
     * Constructs a new <code>ClusterUpgradeProgressObject</code>.
     * Information about a cluster upgrade.
     * @alias module:model/ClusterUpgradeProgressObject
     */
    constructor() { 
        
        ClusterUpgradeProgressObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterUpgradeProgressObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterUpgradeProgressObject} obj Optional instance to populate.
     * @return {module:model/ClusterUpgradeProgressObject} The populated <code>ClusterUpgradeProgressObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterUpgradeProgressObject();

            if (data.hasOwnProperty('CodeVersion')) {
                obj['CodeVersion'] = ApiClient.convertToType(data['CodeVersion'], 'String');
            }
            if (data.hasOwnProperty('ConfigVersion')) {
                obj['ConfigVersion'] = ApiClient.convertToType(data['ConfigVersion'], 'String');
            }
            if (data.hasOwnProperty('CurrentUpgradeDomainProgress')) {
                obj['CurrentUpgradeDomainProgress'] = CurrentUpgradeDomainProgressInfo.constructFromObject(data['CurrentUpgradeDomainProgress']);
            }
            if (data.hasOwnProperty('FailureReason')) {
                obj['FailureReason'] = FailureReason.constructFromObject(data['FailureReason']);
            }
            if (data.hasOwnProperty('FailureTimestampUtc')) {
                obj['FailureTimestampUtc'] = ApiClient.convertToType(data['FailureTimestampUtc'], 'String');
            }
            if (data.hasOwnProperty('NextUpgradeDomain')) {
                obj['NextUpgradeDomain'] = ApiClient.convertToType(data['NextUpgradeDomain'], 'String');
            }
            if (data.hasOwnProperty('RollingUpgradeMode')) {
                obj['RollingUpgradeMode'] = UpgradeMode.constructFromObject(data['RollingUpgradeMode']);
            }
            if (data.hasOwnProperty('StartTimestampUtc')) {
                obj['StartTimestampUtc'] = ApiClient.convertToType(data['StartTimestampUtc'], 'String');
            }
            if (data.hasOwnProperty('UnhealthyEvaluations')) {
                obj['UnhealthyEvaluations'] = ApiClient.convertToType(data['UnhealthyEvaluations'], [HealthEvaluationWrapper]);
            }
            if (data.hasOwnProperty('UpgradeDescription')) {
                obj['UpgradeDescription'] = ClusterUpgradeDescriptionObject.constructFromObject(data['UpgradeDescription']);
            }
            if (data.hasOwnProperty('UpgradeDomainDurationInMilliseconds')) {
                obj['UpgradeDomainDurationInMilliseconds'] = ApiClient.convertToType(data['UpgradeDomainDurationInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('UpgradeDomainProgressAtFailure')) {
                obj['UpgradeDomainProgressAtFailure'] = FailedUpgradeDomainProgressObject.constructFromObject(data['UpgradeDomainProgressAtFailure']);
            }
            if (data.hasOwnProperty('UpgradeDomains')) {
                obj['UpgradeDomains'] = ApiClient.convertToType(data['UpgradeDomains'], [UpgradeDomainInfo]);
            }
            if (data.hasOwnProperty('UpgradeDurationInMilliseconds')) {
                obj['UpgradeDurationInMilliseconds'] = ApiClient.convertToType(data['UpgradeDurationInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('UpgradeState')) {
                obj['UpgradeState'] = UpgradeState.constructFromObject(data['UpgradeState']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterUpgradeProgressObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterUpgradeProgressObject</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['CodeVersion'] && !(typeof data['CodeVersion'] === 'string' || data['CodeVersion'] instanceof String)) {
            throw new Error("Expected the field `CodeVersion` to be a primitive type in the JSON string but got " + data['CodeVersion']);
        }
        // ensure the json data is a string
        if (data['ConfigVersion'] && !(typeof data['ConfigVersion'] === 'string' || data['ConfigVersion'] instanceof String)) {
            throw new Error("Expected the field `ConfigVersion` to be a primitive type in the JSON string but got " + data['ConfigVersion']);
        }
        // validate the optional field `CurrentUpgradeDomainProgress`
        if (data['CurrentUpgradeDomainProgress']) { // data not null
          CurrentUpgradeDomainProgressInfo.validateJSON(data['CurrentUpgradeDomainProgress']);
        }
        // ensure the json data is a string
        if (data['FailureTimestampUtc'] && !(typeof data['FailureTimestampUtc'] === 'string' || data['FailureTimestampUtc'] instanceof String)) {
            throw new Error("Expected the field `FailureTimestampUtc` to be a primitive type in the JSON string but got " + data['FailureTimestampUtc']);
        }
        // ensure the json data is a string
        if (data['NextUpgradeDomain'] && !(typeof data['NextUpgradeDomain'] === 'string' || data['NextUpgradeDomain'] instanceof String)) {
            throw new Error("Expected the field `NextUpgradeDomain` to be a primitive type in the JSON string but got " + data['NextUpgradeDomain']);
        }
        // ensure the json data is a string
        if (data['StartTimestampUtc'] && !(typeof data['StartTimestampUtc'] === 'string' || data['StartTimestampUtc'] instanceof String)) {
            throw new Error("Expected the field `StartTimestampUtc` to be a primitive type in the JSON string but got " + data['StartTimestampUtc']);
        }
        if (data['UnhealthyEvaluations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['UnhealthyEvaluations'])) {
                throw new Error("Expected the field `UnhealthyEvaluations` to be an array in the JSON data but got " + data['UnhealthyEvaluations']);
            }
            // validate the optional field `UnhealthyEvaluations` (array)
            for (const item of data['UnhealthyEvaluations']) {
                HealthEvaluationWrapper.validateJSON(item);
            };
        }
        // validate the optional field `UpgradeDescription`
        if (data['UpgradeDescription']) { // data not null
          ClusterUpgradeDescriptionObject.validateJSON(data['UpgradeDescription']);
        }
        // ensure the json data is a string
        if (data['UpgradeDomainDurationInMilliseconds'] && !(typeof data['UpgradeDomainDurationInMilliseconds'] === 'string' || data['UpgradeDomainDurationInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `UpgradeDomainDurationInMilliseconds` to be a primitive type in the JSON string but got " + data['UpgradeDomainDurationInMilliseconds']);
        }
        // validate the optional field `UpgradeDomainProgressAtFailure`
        if (data['UpgradeDomainProgressAtFailure']) { // data not null
          FailedUpgradeDomainProgressObject.validateJSON(data['UpgradeDomainProgressAtFailure']);
        }
        if (data['UpgradeDomains']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['UpgradeDomains'])) {
                throw new Error("Expected the field `UpgradeDomains` to be an array in the JSON data but got " + data['UpgradeDomains']);
            }
            // validate the optional field `UpgradeDomains` (array)
            for (const item of data['UpgradeDomains']) {
                UpgradeDomainInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['UpgradeDurationInMilliseconds'] && !(typeof data['UpgradeDurationInMilliseconds'] === 'string' || data['UpgradeDurationInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `UpgradeDurationInMilliseconds` to be a primitive type in the JSON string but got " + data['UpgradeDurationInMilliseconds']);
        }

        return true;
    }


}



/**
 * The ServiceFabric code version of the cluster.
 * @member {String} CodeVersion
 */
ClusterUpgradeProgressObject.prototype['CodeVersion'] = undefined;

/**
 * The cluster configuration version (specified in the cluster manifest).
 * @member {String} ConfigVersion
 */
ClusterUpgradeProgressObject.prototype['ConfigVersion'] = undefined;

/**
 * @member {module:model/CurrentUpgradeDomainProgressInfo} CurrentUpgradeDomainProgress
 */
ClusterUpgradeProgressObject.prototype['CurrentUpgradeDomainProgress'] = undefined;

/**
 * @member {module:model/FailureReason} FailureReason
 */
ClusterUpgradeProgressObject.prototype['FailureReason'] = undefined;

/**
 * The failure time of the upgrade in UTC.
 * @member {String} FailureTimestampUtc
 */
ClusterUpgradeProgressObject.prototype['FailureTimestampUtc'] = undefined;

/**
 * The name of the next upgrade domain to be processed.
 * @member {String} NextUpgradeDomain
 */
ClusterUpgradeProgressObject.prototype['NextUpgradeDomain'] = undefined;

/**
 * @member {module:model/UpgradeMode} RollingUpgradeMode
 */
ClusterUpgradeProgressObject.prototype['RollingUpgradeMode'] = undefined;

/**
 * The start time of the upgrade in UTC.
 * @member {String} StartTimestampUtc
 */
ClusterUpgradeProgressObject.prototype['StartTimestampUtc'] = undefined;

/**
 * List of health evaluations that resulted in the current aggregated health state.
 * @member {Array.<module:model/HealthEvaluationWrapper>} UnhealthyEvaluations
 */
ClusterUpgradeProgressObject.prototype['UnhealthyEvaluations'] = undefined;

/**
 * @member {module:model/ClusterUpgradeDescriptionObject} UpgradeDescription
 */
ClusterUpgradeProgressObject.prototype['UpgradeDescription'] = undefined;

/**
 * The estimated elapsed time spent processing the current upgrade domain.
 * @member {String} UpgradeDomainDurationInMilliseconds
 */
ClusterUpgradeProgressObject.prototype['UpgradeDomainDurationInMilliseconds'] = undefined;

/**
 * @member {module:model/FailedUpgradeDomainProgressObject} UpgradeDomainProgressAtFailure
 */
ClusterUpgradeProgressObject.prototype['UpgradeDomainProgressAtFailure'] = undefined;

/**
 * List of upgrade domains and their statuses.
 * @member {Array.<module:model/UpgradeDomainInfo>} UpgradeDomains
 */
ClusterUpgradeProgressObject.prototype['UpgradeDomains'] = undefined;

/**
 * The estimated elapsed time spent processing the current overall upgrade.
 * @member {String} UpgradeDurationInMilliseconds
 */
ClusterUpgradeProgressObject.prototype['UpgradeDurationInMilliseconds'] = undefined;

/**
 * @member {module:model/UpgradeState} UpgradeState
 */
ClusterUpgradeProgressObject.prototype['UpgradeState'] = undefined;






export default ClusterUpgradeProgressObject;

