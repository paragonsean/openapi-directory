/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResourceLimits from './ResourceLimits';
import ResourceRequests from './ResourceRequests';

/**
 * The ResourceRequirements model module.
 * @module model/ResourceRequirements
 * @version 7.0.0.42
 */
class ResourceRequirements {
    /**
     * Constructs a new <code>ResourceRequirements</code>.
     * This type describes the resource requirements for a container or a service.
     * @alias module:model/ResourceRequirements
     * @param requests {module:model/ResourceRequests} 
     */
    constructor(requests) { 
        
        ResourceRequirements.initialize(this, requests);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, requests) { 
        obj['requests'] = requests;
    }

    /**
     * Constructs a <code>ResourceRequirements</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceRequirements} obj Optional instance to populate.
     * @return {module:model/ResourceRequirements} The populated <code>ResourceRequirements</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceRequirements();

            if (data.hasOwnProperty('limits')) {
                obj['limits'] = ResourceLimits.constructFromObject(data['limits']);
            }
            if (data.hasOwnProperty('requests')) {
                obj['requests'] = ResourceRequests.constructFromObject(data['requests']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceRequirements</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceRequirements</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResourceRequirements.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `limits`
        if (data['limits']) { // data not null
          ResourceLimits.validateJSON(data['limits']);
        }
        // validate the optional field `requests`
        if (data['requests']) { // data not null
          ResourceRequests.validateJSON(data['requests']);
        }

        return true;
    }


}

ResourceRequirements.RequiredProperties = ["requests"];

/**
 * @member {module:model/ResourceLimits} limits
 */
ResourceRequirements.prototype['limits'] = undefined;

/**
 * @member {module:model/ResourceRequests} requests
 */
ResourceRequirements.prototype['requests'] = undefined;






export default ResourceRequirements;

