/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GatewayDestination from './GatewayDestination';
import HttpRouteMatchRule from './HttpRouteMatchRule';

/**
 * The HttpRouteConfig model module.
 * @module model/HttpRouteConfig
 * @version 7.0.0.42
 */
class HttpRouteConfig {
    /**
     * Constructs a new <code>HttpRouteConfig</code>.
     * Describes the hostname properties for http routing.
     * @alias module:model/HttpRouteConfig
     * @param destination {module:model/GatewayDestination} 
     * @param match {module:model/HttpRouteMatchRule} 
     * @param name {String} http route name.
     */
    constructor(destination, match, name) { 
        
        HttpRouteConfig.initialize(this, destination, match, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destination, match, name) { 
        obj['destination'] = destination;
        obj['match'] = match;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>HttpRouteConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HttpRouteConfig} obj Optional instance to populate.
     * @return {module:model/HttpRouteConfig} The populated <code>HttpRouteConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HttpRouteConfig();

            if (data.hasOwnProperty('destination')) {
                obj['destination'] = GatewayDestination.constructFromObject(data['destination']);
            }
            if (data.hasOwnProperty('match')) {
                obj['match'] = HttpRouteMatchRule.constructFromObject(data['match']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HttpRouteConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HttpRouteConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HttpRouteConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `destination`
        if (data['destination']) { // data not null
          GatewayDestination.validateJSON(data['destination']);
        }
        // validate the optional field `match`
        if (data['match']) { // data not null
          HttpRouteMatchRule.validateJSON(data['match']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

HttpRouteConfig.RequiredProperties = ["destination", "match", "name"];

/**
 * @member {module:model/GatewayDestination} destination
 */
HttpRouteConfig.prototype['destination'] = undefined;

/**
 * @member {module:model/HttpRouteMatchRule} match
 */
HttpRouteConfig.prototype['match'] = undefined;

/**
 * http route name.
 * @member {String} name
 */
HttpRouteConfig.prototype['name'] = undefined;






export default HttpRouteConfig;

