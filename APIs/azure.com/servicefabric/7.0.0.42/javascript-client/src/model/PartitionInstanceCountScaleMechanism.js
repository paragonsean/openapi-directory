/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScalingMechanismDescription from './ScalingMechanismDescription';
import ScalingMechanismKind from './ScalingMechanismKind';

/**
 * The PartitionInstanceCountScaleMechanism model module.
 * @module model/PartitionInstanceCountScaleMechanism
 * @version 7.0.0.42
 */
class PartitionInstanceCountScaleMechanism {
    /**
     * Constructs a new <code>PartitionInstanceCountScaleMechanism</code>.
     * Represents a scaling mechanism for adding or removing instances of stateless service partition.
     * @alias module:model/PartitionInstanceCountScaleMechanism
     * @extends module:model/ScalingMechanismDescription
     * @implements module:model/ScalingMechanismDescription
     * @param kind {module:model/ScalingMechanismKind} 
     */
    constructor(kind) { 
        ScalingMechanismDescription.initialize(this, kind);
        PartitionInstanceCountScaleMechanism.initialize(this, kind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind) { 
        obj['MaxInstanceCount'] = maxInstanceCount;
        obj['MinInstanceCount'] = minInstanceCount;
        obj['ScaleIncrement'] = scaleIncrement;
    }

    /**
     * Constructs a <code>PartitionInstanceCountScaleMechanism</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PartitionInstanceCountScaleMechanism} obj Optional instance to populate.
     * @return {module:model/PartitionInstanceCountScaleMechanism} The populated <code>PartitionInstanceCountScaleMechanism</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PartitionInstanceCountScaleMechanism();
            ScalingMechanismDescription.constructFromObject(data, obj);
            ScalingMechanismDescription.constructFromObject(data, obj);

            if (data.hasOwnProperty('MaxInstanceCount')) {
                obj['MaxInstanceCount'] = ApiClient.convertToType(data['MaxInstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('MinInstanceCount')) {
                obj['MinInstanceCount'] = ApiClient.convertToType(data['MinInstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('ScaleIncrement')) {
                obj['ScaleIncrement'] = ApiClient.convertToType(data['ScaleIncrement'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PartitionInstanceCountScaleMechanism</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PartitionInstanceCountScaleMechanism</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PartitionInstanceCountScaleMechanism.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

PartitionInstanceCountScaleMechanism.RequiredProperties = ["MaxInstanceCount", "MinInstanceCount", "ScaleIncrement", "Kind"];

/**
 * Maximum number of instances of the partition.
 * @member {Number} MaxInstanceCount
 */
PartitionInstanceCountScaleMechanism.prototype['MaxInstanceCount'] = undefined;

/**
 * Minimum number of instances of the partition.
 * @member {Number} MinInstanceCount
 */
PartitionInstanceCountScaleMechanism.prototype['MinInstanceCount'] = undefined;

/**
 * The number of instances to add or remove during a scaling operation.
 * @member {Number} ScaleIncrement
 */
PartitionInstanceCountScaleMechanism.prototype['ScaleIncrement'] = undefined;


// Implement ScalingMechanismDescription interface:
/**
 * @member {module:model/ScalingMechanismKind} Kind
 */
ScalingMechanismDescription.prototype['Kind'] = undefined;




export default PartitionInstanceCountScaleMechanism;

