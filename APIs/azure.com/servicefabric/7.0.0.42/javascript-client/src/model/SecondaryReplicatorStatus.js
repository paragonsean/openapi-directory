/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReplicaRole from './ReplicaRole';
import ReplicatorQueueStatus from './ReplicatorQueueStatus';
import ReplicatorStatus from './ReplicatorStatus';

/**
 * The SecondaryReplicatorStatus model module.
 * @module model/SecondaryReplicatorStatus
 * @version 7.0.0.42
 */
class SecondaryReplicatorStatus {
    /**
     * Constructs a new <code>SecondaryReplicatorStatus</code>.
     * Provides statistics about the Service Fabric Replicator, when it is functioning in a ActiveSecondary role.
     * @alias module:model/SecondaryReplicatorStatus
     * @extends module:model/ReplicatorStatus
     * @implements module:model/ReplicatorStatus
     * @param kind {module:model/ReplicaRole} 
     */
    constructor(kind) { 
        ReplicatorStatus.initialize(this, kind);
        SecondaryReplicatorStatus.initialize(this, kind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind) { 
    }

    /**
     * Constructs a <code>SecondaryReplicatorStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecondaryReplicatorStatus} obj Optional instance to populate.
     * @return {module:model/SecondaryReplicatorStatus} The populated <code>SecondaryReplicatorStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecondaryReplicatorStatus();
            ReplicatorStatus.constructFromObject(data, obj);
            ReplicatorStatus.constructFromObject(data, obj);

            if (data.hasOwnProperty('CopyQueueStatus')) {
                obj['CopyQueueStatus'] = ReplicatorQueueStatus.constructFromObject(data['CopyQueueStatus']);
            }
            if (data.hasOwnProperty('IsInBuild')) {
                obj['IsInBuild'] = ApiClient.convertToType(data['IsInBuild'], 'Boolean');
            }
            if (data.hasOwnProperty('LastAcknowledgementSentTimeUtc')) {
                obj['LastAcknowledgementSentTimeUtc'] = ApiClient.convertToType(data['LastAcknowledgementSentTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('LastCopyOperationReceivedTimeUtc')) {
                obj['LastCopyOperationReceivedTimeUtc'] = ApiClient.convertToType(data['LastCopyOperationReceivedTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('LastReplicationOperationReceivedTimeUtc')) {
                obj['LastReplicationOperationReceivedTimeUtc'] = ApiClient.convertToType(data['LastReplicationOperationReceivedTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('ReplicationQueueStatus')) {
                obj['ReplicationQueueStatus'] = ReplicatorQueueStatus.constructFromObject(data['ReplicationQueueStatus']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SecondaryReplicatorStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SecondaryReplicatorStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SecondaryReplicatorStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CopyQueueStatus`
        if (data['CopyQueueStatus']) { // data not null
          ReplicatorQueueStatus.validateJSON(data['CopyQueueStatus']);
        }
        // validate the optional field `ReplicationQueueStatus`
        if (data['ReplicationQueueStatus']) { // data not null
          ReplicatorQueueStatus.validateJSON(data['ReplicationQueueStatus']);
        }

        return true;
    }


}

SecondaryReplicatorStatus.RequiredProperties = ["Kind"];

/**
 * @member {module:model/ReplicatorQueueStatus} CopyQueueStatus
 */
SecondaryReplicatorStatus.prototype['CopyQueueStatus'] = undefined;

/**
 * Value that indicates whether the replica is currently being built.
 * @member {Boolean} IsInBuild
 */
SecondaryReplicatorStatus.prototype['IsInBuild'] = undefined;

/**
 * The last time-stamp (UTC) at which an acknowledgment was sent to the primary replicator. UTC 0 represents an invalid value, indicating that an acknowledgment message was never sent.
 * @member {Date} LastAcknowledgementSentTimeUtc
 */
SecondaryReplicatorStatus.prototype['LastAcknowledgementSentTimeUtc'] = undefined;

/**
 * The last time-stamp (UTC) at which a copy operation was received from the primary. UTC 0 represents an invalid value, indicating that a copy operation message was never received.
 * @member {Date} LastCopyOperationReceivedTimeUtc
 */
SecondaryReplicatorStatus.prototype['LastCopyOperationReceivedTimeUtc'] = undefined;

/**
 * The last time-stamp (UTC) at which a replication operation was received from the primary. UTC 0 represents an invalid value, indicating that a replication operation message was never received.
 * @member {Date} LastReplicationOperationReceivedTimeUtc
 */
SecondaryReplicatorStatus.prototype['LastReplicationOperationReceivedTimeUtc'] = undefined;

/**
 * @member {module:model/ReplicatorQueueStatus} ReplicationQueueStatus
 */
SecondaryReplicatorStatus.prototype['ReplicationQueueStatus'] = undefined;


// Implement ReplicatorStatus interface:
/**
 * @member {module:model/ReplicaRole} Kind
 */
ReplicatorStatus.prototype['Kind'] = undefined;




export default SecondaryReplicatorStatus;

