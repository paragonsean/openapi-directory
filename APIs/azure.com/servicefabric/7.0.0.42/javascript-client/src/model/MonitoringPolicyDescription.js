/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FailureAction from './FailureAction';

/**
 * The MonitoringPolicyDescription model module.
 * @module model/MonitoringPolicyDescription
 * @version 7.0.0.42
 */
class MonitoringPolicyDescription {
    /**
     * Constructs a new <code>MonitoringPolicyDescription</code>.
     * Describes the parameters for monitoring an upgrade in Monitored mode.
     * @alias module:model/MonitoringPolicyDescription
     */
    constructor() { 
        
        MonitoringPolicyDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['HealthCheckRetryTimeoutInMilliseconds'] = 'PT0H10M0S';
        obj['HealthCheckStableDurationInMilliseconds'] = 'PT0H2M0S';
        obj['HealthCheckWaitDurationInMilliseconds'] = '0';
        obj['UpgradeDomainTimeoutInMilliseconds'] = 'P10675199DT02H48M05.4775807S';
        obj['UpgradeTimeoutInMilliseconds'] = 'P10675199DT02H48M05.4775807S';
    }

    /**
     * Constructs a <code>MonitoringPolicyDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MonitoringPolicyDescription} obj Optional instance to populate.
     * @return {module:model/MonitoringPolicyDescription} The populated <code>MonitoringPolicyDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MonitoringPolicyDescription();

            if (data.hasOwnProperty('FailureAction')) {
                obj['FailureAction'] = FailureAction.constructFromObject(data['FailureAction']);
            }
            if (data.hasOwnProperty('HealthCheckRetryTimeoutInMilliseconds')) {
                obj['HealthCheckRetryTimeoutInMilliseconds'] = ApiClient.convertToType(data['HealthCheckRetryTimeoutInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('HealthCheckStableDurationInMilliseconds')) {
                obj['HealthCheckStableDurationInMilliseconds'] = ApiClient.convertToType(data['HealthCheckStableDurationInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('HealthCheckWaitDurationInMilliseconds')) {
                obj['HealthCheckWaitDurationInMilliseconds'] = ApiClient.convertToType(data['HealthCheckWaitDurationInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('UpgradeDomainTimeoutInMilliseconds')) {
                obj['UpgradeDomainTimeoutInMilliseconds'] = ApiClient.convertToType(data['UpgradeDomainTimeoutInMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('UpgradeTimeoutInMilliseconds')) {
                obj['UpgradeTimeoutInMilliseconds'] = ApiClient.convertToType(data['UpgradeTimeoutInMilliseconds'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MonitoringPolicyDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MonitoringPolicyDescription</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['HealthCheckRetryTimeoutInMilliseconds'] && !(typeof data['HealthCheckRetryTimeoutInMilliseconds'] === 'string' || data['HealthCheckRetryTimeoutInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `HealthCheckRetryTimeoutInMilliseconds` to be a primitive type in the JSON string but got " + data['HealthCheckRetryTimeoutInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['HealthCheckStableDurationInMilliseconds'] && !(typeof data['HealthCheckStableDurationInMilliseconds'] === 'string' || data['HealthCheckStableDurationInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `HealthCheckStableDurationInMilliseconds` to be a primitive type in the JSON string but got " + data['HealthCheckStableDurationInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['HealthCheckWaitDurationInMilliseconds'] && !(typeof data['HealthCheckWaitDurationInMilliseconds'] === 'string' || data['HealthCheckWaitDurationInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `HealthCheckWaitDurationInMilliseconds` to be a primitive type in the JSON string but got " + data['HealthCheckWaitDurationInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['UpgradeDomainTimeoutInMilliseconds'] && !(typeof data['UpgradeDomainTimeoutInMilliseconds'] === 'string' || data['UpgradeDomainTimeoutInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `UpgradeDomainTimeoutInMilliseconds` to be a primitive type in the JSON string but got " + data['UpgradeDomainTimeoutInMilliseconds']);
        }
        // ensure the json data is a string
        if (data['UpgradeTimeoutInMilliseconds'] && !(typeof data['UpgradeTimeoutInMilliseconds'] === 'string' || data['UpgradeTimeoutInMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `UpgradeTimeoutInMilliseconds` to be a primitive type in the JSON string but got " + data['UpgradeTimeoutInMilliseconds']);
        }

        return true;
    }


}



/**
 * @member {module:model/FailureAction} FailureAction
 */
MonitoringPolicyDescription.prototype['FailureAction'] = undefined;

/**
 * The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
 * @member {String} HealthCheckRetryTimeoutInMilliseconds
 * @default 'PT0H10M0S'
 */
MonitoringPolicyDescription.prototype['HealthCheckRetryTimeoutInMilliseconds'] = 'PT0H10M0S';

/**
 * The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
 * @member {String} HealthCheckStableDurationInMilliseconds
 * @default 'PT0H2M0S'
 */
MonitoringPolicyDescription.prototype['HealthCheckStableDurationInMilliseconds'] = 'PT0H2M0S';

/**
 * The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
 * @member {String} HealthCheckWaitDurationInMilliseconds
 * @default '0'
 */
MonitoringPolicyDescription.prototype['HealthCheckWaitDurationInMilliseconds'] = '0';

/**
 * The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
 * @member {String} UpgradeDomainTimeoutInMilliseconds
 * @default 'P10675199DT02H48M05.4775807S'
 */
MonitoringPolicyDescription.prototype['UpgradeDomainTimeoutInMilliseconds'] = 'P10675199DT02H48M05.4775807S';

/**
 * The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
 * @member {String} UpgradeTimeoutInMilliseconds
 * @default 'P10675199DT02H48M05.4775807S'
 */
MonitoringPolicyDescription.prototype['UpgradeTimeoutInMilliseconds'] = 'P10675199DT02H48M05.4775807S';






export default MonitoringPolicyDescription;

