/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PartitionHealthStateChunk from './PartitionHealthStateChunk';

/**
 * The PartitionHealthStateChunkList model module.
 * @module model/PartitionHealthStateChunkList
 * @version 7.0.0.42
 */
class PartitionHealthStateChunkList {
    /**
     * Constructs a new <code>PartitionHealthStateChunkList</code>.
     * The list of partition health state chunks that respect the input filters in the chunk query description. Returned by get cluster health state chunks query as part of the parent application hierarchy.
     * @alias module:model/PartitionHealthStateChunkList
     */
    constructor() { 
        
        PartitionHealthStateChunkList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PartitionHealthStateChunkList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PartitionHealthStateChunkList} obj Optional instance to populate.
     * @return {module:model/PartitionHealthStateChunkList} The populated <code>PartitionHealthStateChunkList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PartitionHealthStateChunkList();

            if (data.hasOwnProperty('Items')) {
                obj['Items'] = ApiClient.convertToType(data['Items'], [PartitionHealthStateChunk]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PartitionHealthStateChunkList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PartitionHealthStateChunkList</code>.
     */
    static validateJSON(data) {
        if (data['Items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Items'])) {
                throw new Error("Expected the field `Items` to be an array in the JSON data but got " + data['Items']);
            }
            // validate the optional field `Items` (array)
            for (const item of data['Items']) {
                PartitionHealthStateChunk.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The list of partition health state chunks that respect the input filters in the chunk query.
 * @member {Array.<module:model/PartitionHealthStateChunk>} Items
 */
PartitionHealthStateChunkList.prototype['Items'] = undefined;






export default PartitionHealthStateChunkList;

