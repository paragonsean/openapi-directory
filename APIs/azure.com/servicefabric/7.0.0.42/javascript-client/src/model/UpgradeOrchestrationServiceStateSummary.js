/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpgradeOrchestrationServiceStateSummary model module.
 * @module model/UpgradeOrchestrationServiceStateSummary
 * @version 7.0.0.42
 */
class UpgradeOrchestrationServiceStateSummary {
    /**
     * Constructs a new <code>UpgradeOrchestrationServiceStateSummary</code>.
     * Service state summary of Service Fabric Upgrade Orchestration Service.
     * @alias module:model/UpgradeOrchestrationServiceStateSummary
     */
    constructor() { 
        
        UpgradeOrchestrationServiceStateSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpgradeOrchestrationServiceStateSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpgradeOrchestrationServiceStateSummary} obj Optional instance to populate.
     * @return {module:model/UpgradeOrchestrationServiceStateSummary} The populated <code>UpgradeOrchestrationServiceStateSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpgradeOrchestrationServiceStateSummary();

            if (data.hasOwnProperty('CurrentCodeVersion')) {
                obj['CurrentCodeVersion'] = ApiClient.convertToType(data['CurrentCodeVersion'], 'String');
            }
            if (data.hasOwnProperty('CurrentManifestVersion')) {
                obj['CurrentManifestVersion'] = ApiClient.convertToType(data['CurrentManifestVersion'], 'String');
            }
            if (data.hasOwnProperty('PendingUpgradeType')) {
                obj['PendingUpgradeType'] = ApiClient.convertToType(data['PendingUpgradeType'], 'String');
            }
            if (data.hasOwnProperty('TargetCodeVersion')) {
                obj['TargetCodeVersion'] = ApiClient.convertToType(data['TargetCodeVersion'], 'String');
            }
            if (data.hasOwnProperty('TargetManifestVersion')) {
                obj['TargetManifestVersion'] = ApiClient.convertToType(data['TargetManifestVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpgradeOrchestrationServiceStateSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpgradeOrchestrationServiceStateSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['CurrentCodeVersion'] && !(typeof data['CurrentCodeVersion'] === 'string' || data['CurrentCodeVersion'] instanceof String)) {
            throw new Error("Expected the field `CurrentCodeVersion` to be a primitive type in the JSON string but got " + data['CurrentCodeVersion']);
        }
        // ensure the json data is a string
        if (data['CurrentManifestVersion'] && !(typeof data['CurrentManifestVersion'] === 'string' || data['CurrentManifestVersion'] instanceof String)) {
            throw new Error("Expected the field `CurrentManifestVersion` to be a primitive type in the JSON string but got " + data['CurrentManifestVersion']);
        }
        // ensure the json data is a string
        if (data['PendingUpgradeType'] && !(typeof data['PendingUpgradeType'] === 'string' || data['PendingUpgradeType'] instanceof String)) {
            throw new Error("Expected the field `PendingUpgradeType` to be a primitive type in the JSON string but got " + data['PendingUpgradeType']);
        }
        // ensure the json data is a string
        if (data['TargetCodeVersion'] && !(typeof data['TargetCodeVersion'] === 'string' || data['TargetCodeVersion'] instanceof String)) {
            throw new Error("Expected the field `TargetCodeVersion` to be a primitive type in the JSON string but got " + data['TargetCodeVersion']);
        }
        // ensure the json data is a string
        if (data['TargetManifestVersion'] && !(typeof data['TargetManifestVersion'] === 'string' || data['TargetManifestVersion'] instanceof String)) {
            throw new Error("Expected the field `TargetManifestVersion` to be a primitive type in the JSON string but got " + data['TargetManifestVersion']);
        }

        return true;
    }


}



/**
 * The current code version of the cluster.
 * @member {String} CurrentCodeVersion
 */
UpgradeOrchestrationServiceStateSummary.prototype['CurrentCodeVersion'] = undefined;

/**
 * The current manifest version of the cluster.
 * @member {String} CurrentManifestVersion
 */
UpgradeOrchestrationServiceStateSummary.prototype['CurrentManifestVersion'] = undefined;

/**
 * The type of the pending upgrade of the cluster.
 * @member {String} PendingUpgradeType
 */
UpgradeOrchestrationServiceStateSummary.prototype['PendingUpgradeType'] = undefined;

/**
 * The target code version of  the cluster.
 * @member {String} TargetCodeVersion
 */
UpgradeOrchestrationServiceStateSummary.prototype['TargetCodeVersion'] = undefined;

/**
 * The target manifest version of the cluster.
 * @member {String} TargetManifestVersion
 */
UpgradeOrchestrationServiceStateSummary.prototype['TargetManifestVersion'] = undefined;






export default UpgradeOrchestrationServiceStateSummary;

