/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DiskInfo from './DiskInfo';
import UsageInfo from './UsageInfo';

/**
 * The ImageStoreInfo model module.
 * @module model/ImageStoreInfo
 * @version 7.0.0.42
 */
class ImageStoreInfo {
    /**
     * Constructs a new <code>ImageStoreInfo</code>.
     * Information about the ImageStore&#39;s resource usage
     * @alias module:model/ImageStoreInfo
     */
    constructor() { 
        
        ImageStoreInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageStoreInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageStoreInfo} obj Optional instance to populate.
     * @return {module:model/ImageStoreInfo} The populated <code>ImageStoreInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageStoreInfo();

            if (data.hasOwnProperty('DiskInfo')) {
                obj['DiskInfo'] = DiskInfo.constructFromObject(data['DiskInfo']);
            }
            if (data.hasOwnProperty('UsedByCopy')) {
                obj['UsedByCopy'] = UsageInfo.constructFromObject(data['UsedByCopy']);
            }
            if (data.hasOwnProperty('UsedByMetadata')) {
                obj['UsedByMetadata'] = UsageInfo.constructFromObject(data['UsedByMetadata']);
            }
            if (data.hasOwnProperty('UsedByRegister')) {
                obj['UsedByRegister'] = UsageInfo.constructFromObject(data['UsedByRegister']);
            }
            if (data.hasOwnProperty('UsedByStaging')) {
                obj['UsedByStaging'] = UsageInfo.constructFromObject(data['UsedByStaging']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageStoreInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageStoreInfo</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DiskInfo`
        if (data['DiskInfo']) { // data not null
          DiskInfo.validateJSON(data['DiskInfo']);
        }
        // validate the optional field `UsedByCopy`
        if (data['UsedByCopy']) { // data not null
          UsageInfo.validateJSON(data['UsedByCopy']);
        }
        // validate the optional field `UsedByMetadata`
        if (data['UsedByMetadata']) { // data not null
          UsageInfo.validateJSON(data['UsedByMetadata']);
        }
        // validate the optional field `UsedByRegister`
        if (data['UsedByRegister']) { // data not null
          UsageInfo.validateJSON(data['UsedByRegister']);
        }
        // validate the optional field `UsedByStaging`
        if (data['UsedByStaging']) { // data not null
          UsageInfo.validateJSON(data['UsedByStaging']);
        }

        return true;
    }


}



/**
 * @member {module:model/DiskInfo} DiskInfo
 */
ImageStoreInfo.prototype['DiskInfo'] = undefined;

/**
 * @member {module:model/UsageInfo} UsedByCopy
 */
ImageStoreInfo.prototype['UsedByCopy'] = undefined;

/**
 * @member {module:model/UsageInfo} UsedByMetadata
 */
ImageStoreInfo.prototype['UsedByMetadata'] = undefined;

/**
 * @member {module:model/UsageInfo} UsedByRegister
 */
ImageStoreInfo.prototype['UsedByRegister'] = undefined;

/**
 * @member {module:model/UsageInfo} UsedByStaging
 */
ImageStoreInfo.prototype['UsedByStaging'] = undefined;






export default ImageStoreInfo;

