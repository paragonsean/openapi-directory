/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceUpgradeProgress model module.
 * @module model/ServiceUpgradeProgress
 * @version 7.0.0.42
 */
class ServiceUpgradeProgress {
    /**
     * Constructs a new <code>ServiceUpgradeProgress</code>.
     * Information about how many replicas are completed or pending for a specific service during upgrade.
     * @alias module:model/ServiceUpgradeProgress
     */
    constructor() { 
        
        ServiceUpgradeProgress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceUpgradeProgress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceUpgradeProgress} obj Optional instance to populate.
     * @return {module:model/ServiceUpgradeProgress} The populated <code>ServiceUpgradeProgress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceUpgradeProgress();

            if (data.hasOwnProperty('CompletedReplicaCount')) {
                obj['CompletedReplicaCount'] = ApiClient.convertToType(data['CompletedReplicaCount'], 'String');
            }
            if (data.hasOwnProperty('PendingReplicaCount')) {
                obj['PendingReplicaCount'] = ApiClient.convertToType(data['PendingReplicaCount'], 'String');
            }
            if (data.hasOwnProperty('ServiceName')) {
                obj['ServiceName'] = ApiClient.convertToType(data['ServiceName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceUpgradeProgress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceUpgradeProgress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['CompletedReplicaCount'] && !(typeof data['CompletedReplicaCount'] === 'string' || data['CompletedReplicaCount'] instanceof String)) {
            throw new Error("Expected the field `CompletedReplicaCount` to be a primitive type in the JSON string but got " + data['CompletedReplicaCount']);
        }
        // ensure the json data is a string
        if (data['PendingReplicaCount'] && !(typeof data['PendingReplicaCount'] === 'string' || data['PendingReplicaCount'] instanceof String)) {
            throw new Error("Expected the field `PendingReplicaCount` to be a primitive type in the JSON string but got " + data['PendingReplicaCount']);
        }
        // ensure the json data is a string
        if (data['ServiceName'] && !(typeof data['ServiceName'] === 'string' || data['ServiceName'] instanceof String)) {
            throw new Error("Expected the field `ServiceName` to be a primitive type in the JSON string but got " + data['ServiceName']);
        }

        return true;
    }


}



/**
 * The number of replicas that completes the upgrade in the service.
 * @member {String} CompletedReplicaCount
 */
ServiceUpgradeProgress.prototype['CompletedReplicaCount'] = undefined;

/**
 * The number of replicas that are waiting to be upgraded in the service.
 * @member {String} PendingReplicaCount
 */
ServiceUpgradeProgress.prototype['PendingReplicaCount'] = undefined;

/**
 * Name of the Service resource.
 * @member {String} ServiceName
 */
ServiceUpgradeProgress.prototype['ServiceName'] = undefined;






export default ServiceUpgradeProgress;

