/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RegistryCredential from './RegistryCredential';

/**
 * The CreateComposeDeploymentDescription model module.
 * @module model/CreateComposeDeploymentDescription
 * @version 7.0.0.42
 */
class CreateComposeDeploymentDescription {
    /**
     * Constructs a new <code>CreateComposeDeploymentDescription</code>.
     * Defines description for creating a Service Fabric compose deployment.
     * @alias module:model/CreateComposeDeploymentDescription
     * @param composeFileContent {String} The content of the compose file that describes the deployment to create.
     * @param deploymentName {String} The name of the deployment.
     */
    constructor(composeFileContent, deploymentName) { 
        
        CreateComposeDeploymentDescription.initialize(this, composeFileContent, deploymentName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, composeFileContent, deploymentName) { 
        obj['ComposeFileContent'] = composeFileContent;
        obj['DeploymentName'] = deploymentName;
    }

    /**
     * Constructs a <code>CreateComposeDeploymentDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateComposeDeploymentDescription} obj Optional instance to populate.
     * @return {module:model/CreateComposeDeploymentDescription} The populated <code>CreateComposeDeploymentDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateComposeDeploymentDescription();

            if (data.hasOwnProperty('ComposeFileContent')) {
                obj['ComposeFileContent'] = ApiClient.convertToType(data['ComposeFileContent'], 'String');
            }
            if (data.hasOwnProperty('DeploymentName')) {
                obj['DeploymentName'] = ApiClient.convertToType(data['DeploymentName'], 'String');
            }
            if (data.hasOwnProperty('RegistryCredential')) {
                obj['RegistryCredential'] = RegistryCredential.constructFromObject(data['RegistryCredential']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateComposeDeploymentDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateComposeDeploymentDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateComposeDeploymentDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ComposeFileContent'] && !(typeof data['ComposeFileContent'] === 'string' || data['ComposeFileContent'] instanceof String)) {
            throw new Error("Expected the field `ComposeFileContent` to be a primitive type in the JSON string but got " + data['ComposeFileContent']);
        }
        // ensure the json data is a string
        if (data['DeploymentName'] && !(typeof data['DeploymentName'] === 'string' || data['DeploymentName'] instanceof String)) {
            throw new Error("Expected the field `DeploymentName` to be a primitive type in the JSON string but got " + data['DeploymentName']);
        }
        // validate the optional field `RegistryCredential`
        if (data['RegistryCredential']) { // data not null
          RegistryCredential.validateJSON(data['RegistryCredential']);
        }

        return true;
    }


}

CreateComposeDeploymentDescription.RequiredProperties = ["ComposeFileContent", "DeploymentName"];

/**
 * The content of the compose file that describes the deployment to create.
 * @member {String} ComposeFileContent
 */
CreateComposeDeploymentDescription.prototype['ComposeFileContent'] = undefined;

/**
 * The name of the deployment.
 * @member {String} DeploymentName
 */
CreateComposeDeploymentDescription.prototype['DeploymentName'] = undefined;

/**
 * @member {module:model/RegistryCredential} RegistryCredential
 */
CreateComposeDeploymentDescription.prototype['RegistryCredential'] = undefined;






export default CreateComposeDeploymentDescription;

