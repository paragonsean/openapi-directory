/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RemoteReplicatorStatus from './RemoteReplicatorStatus';
import ReplicaRole from './ReplicaRole';
import ReplicatorQueueStatus from './ReplicatorQueueStatus';
import ReplicatorStatus from './ReplicatorStatus';

/**
 * The PrimaryReplicatorStatus model module.
 * @module model/PrimaryReplicatorStatus
 * @version 7.0.0.42
 */
class PrimaryReplicatorStatus {
    /**
     * Constructs a new <code>PrimaryReplicatorStatus</code>.
     * Provides statistics about the Service Fabric Replicator, when it is functioning in a Primary role.
     * @alias module:model/PrimaryReplicatorStatus
     * @extends module:model/ReplicatorStatus
     * @implements module:model/ReplicatorStatus
     * @param kind {module:model/ReplicaRole} 
     */
    constructor(kind) { 
        ReplicatorStatus.initialize(this, kind);
        PrimaryReplicatorStatus.initialize(this, kind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind) { 
    }

    /**
     * Constructs a <code>PrimaryReplicatorStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrimaryReplicatorStatus} obj Optional instance to populate.
     * @return {module:model/PrimaryReplicatorStatus} The populated <code>PrimaryReplicatorStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrimaryReplicatorStatus();
            ReplicatorStatus.constructFromObject(data, obj);
            ReplicatorStatus.constructFromObject(data, obj);

            if (data.hasOwnProperty('RemoteReplicators')) {
                obj['RemoteReplicators'] = ApiClient.convertToType(data['RemoteReplicators'], [RemoteReplicatorStatus]);
            }
            if (data.hasOwnProperty('ReplicationQueueStatus')) {
                obj['ReplicationQueueStatus'] = ReplicatorQueueStatus.constructFromObject(data['ReplicationQueueStatus']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PrimaryReplicatorStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PrimaryReplicatorStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PrimaryReplicatorStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['RemoteReplicators']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['RemoteReplicators'])) {
                throw new Error("Expected the field `RemoteReplicators` to be an array in the JSON data but got " + data['RemoteReplicators']);
            }
            // validate the optional field `RemoteReplicators` (array)
            for (const item of data['RemoteReplicators']) {
                RemoteReplicatorStatus.validateJSON(item);
            };
        }
        // validate the optional field `ReplicationQueueStatus`
        if (data['ReplicationQueueStatus']) { // data not null
          ReplicatorQueueStatus.validateJSON(data['ReplicationQueueStatus']);
        }

        return true;
    }


}

PrimaryReplicatorStatus.RequiredProperties = ["Kind"];

/**
 * List of remote replicator status
 * @member {Array.<module:model/RemoteReplicatorStatus>} RemoteReplicators
 */
PrimaryReplicatorStatus.prototype['RemoteReplicators'] = undefined;

/**
 * @member {module:model/ReplicatorQueueStatus} ReplicationQueueStatus
 */
PrimaryReplicatorStatus.prototype['ReplicationQueueStatus'] = undefined;


// Implement ReplicatorStatus interface:
/**
 * @member {module:model/ReplicaRole} Kind
 */
ReplicatorStatus.prototype['Kind'] = undefined;




export default PrimaryReplicatorStatus;

