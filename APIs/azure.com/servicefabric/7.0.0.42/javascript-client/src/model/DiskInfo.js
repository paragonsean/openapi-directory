/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DiskInfo model module.
 * @module model/DiskInfo
 * @version 7.0.0.42
 */
class DiskInfo {
    /**
     * Constructs a new <code>DiskInfo</code>.
     * Information about the disk
     * @alias module:model/DiskInfo
     */
    constructor() { 
        
        DiskInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiskInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiskInfo} obj Optional instance to populate.
     * @return {module:model/DiskInfo} The populated <code>DiskInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiskInfo();

            if (data.hasOwnProperty('AvailableSpace')) {
                obj['AvailableSpace'] = ApiClient.convertToType(data['AvailableSpace'], 'String');
            }
            if (data.hasOwnProperty('Capacity')) {
                obj['Capacity'] = ApiClient.convertToType(data['Capacity'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiskInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiskInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AvailableSpace'] && !(typeof data['AvailableSpace'] === 'string' || data['AvailableSpace'] instanceof String)) {
            throw new Error("Expected the field `AvailableSpace` to be a primitive type in the JSON string but got " + data['AvailableSpace']);
        }
        // ensure the json data is a string
        if (data['Capacity'] && !(typeof data['Capacity'] === 'string' || data['Capacity'] instanceof String)) {
            throw new Error("Expected the field `Capacity` to be a primitive type in the JSON string but got " + data['Capacity']);
        }

        return true;
    }


}



/**
 * the available disk space in bytes
 * @member {String} AvailableSpace
 */
DiskInfo.prototype['AvailableSpace'] = undefined;

/**
 * the disk size in bytes
 * @member {String} Capacity
 */
DiskInfo.prototype['Capacity'] = undefined;






export default DiskInfo;

