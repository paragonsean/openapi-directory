/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthState from './HealthState';
import PartitionInformation from './PartitionInformation';
import ServiceKind from './ServiceKind';
import ServicePartitionInfo from './ServicePartitionInfo';
import ServicePartitionStatus from './ServicePartitionStatus';

/**
 * The StatelessServicePartitionInfo model module.
 * @module model/StatelessServicePartitionInfo
 * @version 7.0.0.42
 */
class StatelessServicePartitionInfo {
    /**
     * Constructs a new <code>StatelessServicePartitionInfo</code>.
     * Information about a partition of a stateless Service Fabric service.
     * @alias module:model/StatelessServicePartitionInfo
     * @extends module:model/ServicePartitionInfo
     * @implements module:model/ServicePartitionInfo
     * @param serviceKind {module:model/ServiceKind} 
     */
    constructor(serviceKind) { 
        ServicePartitionInfo.initialize(this, serviceKind);
        StatelessServicePartitionInfo.initialize(this, serviceKind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serviceKind) { 
        obj['MinInstanceCount'] = 1;
        obj['MinInstancePercentage'] = 0;
    }

    /**
     * Constructs a <code>StatelessServicePartitionInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatelessServicePartitionInfo} obj Optional instance to populate.
     * @return {module:model/StatelessServicePartitionInfo} The populated <code>StatelessServicePartitionInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatelessServicePartitionInfo();
            ServicePartitionInfo.constructFromObject(data, obj);
            ServicePartitionInfo.constructFromObject(data, obj);

            if (data.hasOwnProperty('InstanceCount')) {
                obj['InstanceCount'] = ApiClient.convertToType(data['InstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('MinInstanceCount')) {
                obj['MinInstanceCount'] = ApiClient.convertToType(data['MinInstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('MinInstancePercentage')) {
                obj['MinInstancePercentage'] = ApiClient.convertToType(data['MinInstancePercentage'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StatelessServicePartitionInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StatelessServicePartitionInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StatelessServicePartitionInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

StatelessServicePartitionInfo.RequiredProperties = ["ServiceKind"];

/**
 * Number of instances of this partition.
 * @member {Number} InstanceCount
 */
StatelessServicePartitionInfo.prototype['InstanceCount'] = undefined;

/**
 * MinInstanceCount is the minimum number of instances that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstanceCount computation -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service.
 * @member {Number} MinInstanceCount
 * @default 1
 */
StatelessServicePartitionInfo.prototype['MinInstanceCount'] = 1;

/**
 * MinInstancePercentage is the minimum percentage of InstanceCount that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstancePercentage computation, -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service.
 * @member {Number} MinInstancePercentage
 * @default 0
 */
StatelessServicePartitionInfo.prototype['MinInstancePercentage'] = 0;


// Implement ServicePartitionInfo interface:
/**
 * @member {module:model/HealthState} HealthState
 */
ServicePartitionInfo.prototype['HealthState'] = undefined;
/**
 * @member {module:model/PartitionInformation} PartitionInformation
 */
ServicePartitionInfo.prototype['PartitionInformation'] = undefined;
/**
 * @member {module:model/ServicePartitionStatus} PartitionStatus
 */
ServicePartitionInfo.prototype['PartitionStatus'] = undefined;
/**
 * @member {module:model/ServiceKind} ServiceKind
 */
ServicePartitionInfo.prototype['ServiceKind'] = undefined;




export default StatelessServicePartitionInfo;

