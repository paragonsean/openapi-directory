/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NodeTransitionResult from './NodeTransitionResult';
import OperationState from './OperationState';

/**
 * The NodeTransitionProgress model module.
 * @module model/NodeTransitionProgress
 * @version 7.0.0.42
 */
class NodeTransitionProgress {
    /**
     * Constructs a new <code>NodeTransitionProgress</code>.
     * Information about an NodeTransition operation.  This class contains an OperationState and a NodeTransitionResult.  The NodeTransitionResult is not valid until OperationState is Completed or Faulted.
     * @alias module:model/NodeTransitionProgress
     */
    constructor() { 
        
        NodeTransitionProgress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NodeTransitionProgress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeTransitionProgress} obj Optional instance to populate.
     * @return {module:model/NodeTransitionProgress} The populated <code>NodeTransitionProgress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeTransitionProgress();

            if (data.hasOwnProperty('NodeTransitionResult')) {
                obj['NodeTransitionResult'] = NodeTransitionResult.constructFromObject(data['NodeTransitionResult']);
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = OperationState.constructFromObject(data['State']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodeTransitionProgress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodeTransitionProgress</code>.
     */
    static validateJSON(data) {
        // validate the optional field `NodeTransitionResult`
        if (data['NodeTransitionResult']) { // data not null
          NodeTransitionResult.validateJSON(data['NodeTransitionResult']);
        }

        return true;
    }


}



/**
 * @member {module:model/NodeTransitionResult} NodeTransitionResult
 */
NodeTransitionProgress.prototype['NodeTransitionResult'] = undefined;

/**
 * @member {module:model/OperationState} State
 */
NodeTransitionProgress.prototype['State'] = undefined;






export default NodeTransitionProgress;

