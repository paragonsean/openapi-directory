/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MoveCost;
import org.openapitools.client.model.ScalingPolicyDescription;
import org.openapitools.client.model.ServiceCorrelationDescription;
import org.openapitools.client.model.ServiceKind;
import org.openapitools.client.model.ServiceLoadMetricDescription;
import org.openapitools.client.model.ServicePlacementPolicyDescription;
import org.openapitools.client.model.ServiceUpdateDescription;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes an update for a stateful service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:56:34.135207-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StatefulServiceUpdateDescription extends ServiceUpdateDescription {
  public static final String SERIALIZED_NAME_MIN_REPLICA_SET_SIZE = "MinReplicaSetSize";
  @SerializedName(SERIALIZED_NAME_MIN_REPLICA_SET_SIZE)
  private Integer minReplicaSetSize;

  public static final String SERIALIZED_NAME_QUORUM_LOSS_WAIT_DURATION_SECONDS = "QuorumLossWaitDurationSeconds";
  @SerializedName(SERIALIZED_NAME_QUORUM_LOSS_WAIT_DURATION_SECONDS)
  private String quorumLossWaitDurationSeconds;

  public static final String SERIALIZED_NAME_REPLICA_RESTART_WAIT_DURATION_SECONDS = "ReplicaRestartWaitDurationSeconds";
  @SerializedName(SERIALIZED_NAME_REPLICA_RESTART_WAIT_DURATION_SECONDS)
  private String replicaRestartWaitDurationSeconds;

  public static final String SERIALIZED_NAME_SERVICE_PLACEMENT_TIME_LIMIT_SECONDS = "ServicePlacementTimeLimitSeconds";
  @SerializedName(SERIALIZED_NAME_SERVICE_PLACEMENT_TIME_LIMIT_SECONDS)
  private String servicePlacementTimeLimitSeconds;

  public static final String SERIALIZED_NAME_STAND_BY_REPLICA_KEEP_DURATION_SECONDS = "StandByReplicaKeepDurationSeconds";
  @SerializedName(SERIALIZED_NAME_STAND_BY_REPLICA_KEEP_DURATION_SECONDS)
  private String standByReplicaKeepDurationSeconds;

  public static final String SERIALIZED_NAME_TARGET_REPLICA_SET_SIZE = "TargetReplicaSetSize";
  @SerializedName(SERIALIZED_NAME_TARGET_REPLICA_SET_SIZE)
  private Integer targetReplicaSetSize;

  public StatefulServiceUpdateDescription() {
    this.serviceKind = this.getClass().getSimpleName();
  }

  public StatefulServiceUpdateDescription minReplicaSetSize(Integer minReplicaSetSize) {
    this.minReplicaSetSize = minReplicaSetSize;
    return this;
  }

  /**
   * The minimum replica set size as a number.
   * minimum: 1
   * @return minReplicaSetSize
   */
  @javax.annotation.Nullable
  public Integer getMinReplicaSetSize() {
    return minReplicaSetSize;
  }

  public void setMinReplicaSetSize(Integer minReplicaSetSize) {
    this.minReplicaSetSize = minReplicaSetSize;
  }


  public StatefulServiceUpdateDescription quorumLossWaitDurationSeconds(String quorumLossWaitDurationSeconds) {
    this.quorumLossWaitDurationSeconds = quorumLossWaitDurationSeconds;
    return this;
  }

  /**
   * The maximum duration, in seconds, for which a partition is allowed to be in a state of quorum loss.
   * @return quorumLossWaitDurationSeconds
   */
  @javax.annotation.Nullable
  public String getQuorumLossWaitDurationSeconds() {
    return quorumLossWaitDurationSeconds;
  }

  public void setQuorumLossWaitDurationSeconds(String quorumLossWaitDurationSeconds) {
    this.quorumLossWaitDurationSeconds = quorumLossWaitDurationSeconds;
  }


  public StatefulServiceUpdateDescription replicaRestartWaitDurationSeconds(String replicaRestartWaitDurationSeconds) {
    this.replicaRestartWaitDurationSeconds = replicaRestartWaitDurationSeconds;
    return this;
  }

  /**
   * The duration, in seconds, between when a replica goes down and when a new replica is created.
   * @return replicaRestartWaitDurationSeconds
   */
  @javax.annotation.Nullable
  public String getReplicaRestartWaitDurationSeconds() {
    return replicaRestartWaitDurationSeconds;
  }

  public void setReplicaRestartWaitDurationSeconds(String replicaRestartWaitDurationSeconds) {
    this.replicaRestartWaitDurationSeconds = replicaRestartWaitDurationSeconds;
  }


  public StatefulServiceUpdateDescription servicePlacementTimeLimitSeconds(String servicePlacementTimeLimitSeconds) {
    this.servicePlacementTimeLimitSeconds = servicePlacementTimeLimitSeconds;
    return this;
  }

  /**
   * The duration for which replicas can stay InBuild before reporting that build is stuck.
   * @return servicePlacementTimeLimitSeconds
   */
  @javax.annotation.Nullable
  public String getServicePlacementTimeLimitSeconds() {
    return servicePlacementTimeLimitSeconds;
  }

  public void setServicePlacementTimeLimitSeconds(String servicePlacementTimeLimitSeconds) {
    this.servicePlacementTimeLimitSeconds = servicePlacementTimeLimitSeconds;
  }


  public StatefulServiceUpdateDescription standByReplicaKeepDurationSeconds(String standByReplicaKeepDurationSeconds) {
    this.standByReplicaKeepDurationSeconds = standByReplicaKeepDurationSeconds;
    return this;
  }

  /**
   * The definition on how long StandBy replicas should be maintained before being removed.
   * @return standByReplicaKeepDurationSeconds
   */
  @javax.annotation.Nullable
  public String getStandByReplicaKeepDurationSeconds() {
    return standByReplicaKeepDurationSeconds;
  }

  public void setStandByReplicaKeepDurationSeconds(String standByReplicaKeepDurationSeconds) {
    this.standByReplicaKeepDurationSeconds = standByReplicaKeepDurationSeconds;
  }


  public StatefulServiceUpdateDescription targetReplicaSetSize(Integer targetReplicaSetSize) {
    this.targetReplicaSetSize = targetReplicaSetSize;
    return this;
  }

  /**
   * The target replica set size as a number.
   * minimum: 1
   * @return targetReplicaSetSize
   */
  @javax.annotation.Nullable
  public Integer getTargetReplicaSetSize() {
    return targetReplicaSetSize;
  }

  public void setTargetReplicaSetSize(Integer targetReplicaSetSize) {
    this.targetReplicaSetSize = targetReplicaSetSize;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatefulServiceUpdateDescription statefulServiceUpdateDescription = (StatefulServiceUpdateDescription) o;
    return Objects.equals(this.minReplicaSetSize, statefulServiceUpdateDescription.minReplicaSetSize) &&
        Objects.equals(this.quorumLossWaitDurationSeconds, statefulServiceUpdateDescription.quorumLossWaitDurationSeconds) &&
        Objects.equals(this.replicaRestartWaitDurationSeconds, statefulServiceUpdateDescription.replicaRestartWaitDurationSeconds) &&
        Objects.equals(this.servicePlacementTimeLimitSeconds, statefulServiceUpdateDescription.servicePlacementTimeLimitSeconds) &&
        Objects.equals(this.standByReplicaKeepDurationSeconds, statefulServiceUpdateDescription.standByReplicaKeepDurationSeconds) &&
        Objects.equals(this.targetReplicaSetSize, statefulServiceUpdateDescription.targetReplicaSetSize) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minReplicaSetSize, quorumLossWaitDurationSeconds, replicaRestartWaitDurationSeconds, servicePlacementTimeLimitSeconds, standByReplicaKeepDurationSeconds, targetReplicaSetSize, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatefulServiceUpdateDescription {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    minReplicaSetSize: ").append(toIndentedString(minReplicaSetSize)).append("\n");
    sb.append("    quorumLossWaitDurationSeconds: ").append(toIndentedString(quorumLossWaitDurationSeconds)).append("\n");
    sb.append("    replicaRestartWaitDurationSeconds: ").append(toIndentedString(replicaRestartWaitDurationSeconds)).append("\n");
    sb.append("    servicePlacementTimeLimitSeconds: ").append(toIndentedString(servicePlacementTimeLimitSeconds)).append("\n");
    sb.append("    standByReplicaKeepDurationSeconds: ").append(toIndentedString(standByReplicaKeepDurationSeconds)).append("\n");
    sb.append("    targetReplicaSetSize: ").append(toIndentedString(targetReplicaSetSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CorrelationScheme");
    openapiFields.add("DefaultMoveCost");
    openapiFields.add("Flags");
    openapiFields.add("LoadMetrics");
    openapiFields.add("PlacementConstraints");
    openapiFields.add("ScalingPolicies");
    openapiFields.add("ServiceKind");
    openapiFields.add("ServicePlacementPolicies");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ServiceKind");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StatefulServiceUpdateDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StatefulServiceUpdateDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StatefulServiceUpdateDescription is not found in the empty JSON string", StatefulServiceUpdateDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StatefulServiceUpdateDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StatefulServiceUpdateDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StatefulServiceUpdateDescription.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StatefulServiceUpdateDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StatefulServiceUpdateDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StatefulServiceUpdateDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StatefulServiceUpdateDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<StatefulServiceUpdateDescription>() {
           @Override
           public void write(JsonWriter out, StatefulServiceUpdateDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StatefulServiceUpdateDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StatefulServiceUpdateDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StatefulServiceUpdateDescription
   * @throws IOException if the JSON string is invalid with respect to StatefulServiceUpdateDescription
   */
  public static StatefulServiceUpdateDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StatefulServiceUpdateDescription.class);
  }

  /**
   * Convert an instance of StatefulServiceUpdateDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

