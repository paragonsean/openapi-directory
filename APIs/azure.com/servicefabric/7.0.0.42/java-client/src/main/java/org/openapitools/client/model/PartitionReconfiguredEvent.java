/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.client.model.FabricEventKind;
import org.openapitools.client.model.PartitionEvent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Partition Reconfiguration event.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:56:34.135207-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PartitionReconfiguredEvent extends PartitionEvent {
  public static final String SERIALIZED_NAME_CC_EPOCH_CONFIG_VERSION = "CcEpochConfigVersion";
  @SerializedName(SERIALIZED_NAME_CC_EPOCH_CONFIG_VERSION)
  private Long ccEpochConfigVersion;

  public static final String SERIALIZED_NAME_CC_EPOCH_DATA_LOSS_VERSION = "CcEpochDataLossVersion";
  @SerializedName(SERIALIZED_NAME_CC_EPOCH_DATA_LOSS_VERSION)
  private Long ccEpochDataLossVersion;

  public static final String SERIALIZED_NAME_NODE_INSTANCE_ID = "NodeInstanceId";
  @SerializedName(SERIALIZED_NAME_NODE_INSTANCE_ID)
  private String nodeInstanceId;

  public static final String SERIALIZED_NAME_NODE_NAME = "NodeName";
  @SerializedName(SERIALIZED_NAME_NODE_NAME)
  private String nodeName;

  public static final String SERIALIZED_NAME_PHASE0_DURATION_MS = "Phase0DurationMs";
  @SerializedName(SERIALIZED_NAME_PHASE0_DURATION_MS)
  private Double phase0DurationMs;

  public static final String SERIALIZED_NAME_PHASE1_DURATION_MS = "Phase1DurationMs";
  @SerializedName(SERIALIZED_NAME_PHASE1_DURATION_MS)
  private Double phase1DurationMs;

  public static final String SERIALIZED_NAME_PHASE2_DURATION_MS = "Phase2DurationMs";
  @SerializedName(SERIALIZED_NAME_PHASE2_DURATION_MS)
  private Double phase2DurationMs;

  public static final String SERIALIZED_NAME_PHASE3_DURATION_MS = "Phase3DurationMs";
  @SerializedName(SERIALIZED_NAME_PHASE3_DURATION_MS)
  private Double phase3DurationMs;

  public static final String SERIALIZED_NAME_PHASE4_DURATION_MS = "Phase4DurationMs";
  @SerializedName(SERIALIZED_NAME_PHASE4_DURATION_MS)
  private Double phase4DurationMs;

  public static final String SERIALIZED_NAME_RECONFIG_TYPE = "ReconfigType";
  @SerializedName(SERIALIZED_NAME_RECONFIG_TYPE)
  private String reconfigType;

  public static final String SERIALIZED_NAME_RESULT = "Result";
  @SerializedName(SERIALIZED_NAME_RESULT)
  private String result;

  public static final String SERIALIZED_NAME_SERVICE_TYPE = "ServiceType";
  @SerializedName(SERIALIZED_NAME_SERVICE_TYPE)
  private String serviceType;

  public static final String SERIALIZED_NAME_TOTAL_DURATION_MS = "TotalDurationMs";
  @SerializedName(SERIALIZED_NAME_TOTAL_DURATION_MS)
  private Double totalDurationMs;

  public PartitionReconfiguredEvent() {
    this.kind = this.getClass().getSimpleName();
  }

  public PartitionReconfiguredEvent ccEpochConfigVersion(Long ccEpochConfigVersion) {
    this.ccEpochConfigVersion = ccEpochConfigVersion;
    return this;
  }

  /**
   * CcEpochConfig version.
   * @return ccEpochConfigVersion
   */
  @javax.annotation.Nonnull
  public Long getCcEpochConfigVersion() {
    return ccEpochConfigVersion;
  }

  public void setCcEpochConfigVersion(Long ccEpochConfigVersion) {
    this.ccEpochConfigVersion = ccEpochConfigVersion;
  }


  public PartitionReconfiguredEvent ccEpochDataLossVersion(Long ccEpochDataLossVersion) {
    this.ccEpochDataLossVersion = ccEpochDataLossVersion;
    return this;
  }

  /**
   * CcEpochDataLoss version.
   * @return ccEpochDataLossVersion
   */
  @javax.annotation.Nonnull
  public Long getCcEpochDataLossVersion() {
    return ccEpochDataLossVersion;
  }

  public void setCcEpochDataLossVersion(Long ccEpochDataLossVersion) {
    this.ccEpochDataLossVersion = ccEpochDataLossVersion;
  }


  public PartitionReconfiguredEvent nodeInstanceId(String nodeInstanceId) {
    this.nodeInstanceId = nodeInstanceId;
    return this;
  }

  /**
   * Id of Node instance.
   * @return nodeInstanceId
   */
  @javax.annotation.Nonnull
  public String getNodeInstanceId() {
    return nodeInstanceId;
  }

  public void setNodeInstanceId(String nodeInstanceId) {
    this.nodeInstanceId = nodeInstanceId;
  }


  public PartitionReconfiguredEvent nodeName(String nodeName) {
    this.nodeName = nodeName;
    return this;
  }

  /**
   * The name of a Service Fabric node.
   * @return nodeName
   */
  @javax.annotation.Nonnull
  public String getNodeName() {
    return nodeName;
  }

  public void setNodeName(String nodeName) {
    this.nodeName = nodeName;
  }


  public PartitionReconfiguredEvent phase0DurationMs(Double phase0DurationMs) {
    this.phase0DurationMs = phase0DurationMs;
    return this;
  }

  /**
   * Duration of Phase0 in milli-seconds.
   * @return phase0DurationMs
   */
  @javax.annotation.Nonnull
  public Double getPhase0DurationMs() {
    return phase0DurationMs;
  }

  public void setPhase0DurationMs(Double phase0DurationMs) {
    this.phase0DurationMs = phase0DurationMs;
  }


  public PartitionReconfiguredEvent phase1DurationMs(Double phase1DurationMs) {
    this.phase1DurationMs = phase1DurationMs;
    return this;
  }

  /**
   * Duration of Phase1 in milli-seconds.
   * @return phase1DurationMs
   */
  @javax.annotation.Nonnull
  public Double getPhase1DurationMs() {
    return phase1DurationMs;
  }

  public void setPhase1DurationMs(Double phase1DurationMs) {
    this.phase1DurationMs = phase1DurationMs;
  }


  public PartitionReconfiguredEvent phase2DurationMs(Double phase2DurationMs) {
    this.phase2DurationMs = phase2DurationMs;
    return this;
  }

  /**
   * Duration of Phase2 in milli-seconds.
   * @return phase2DurationMs
   */
  @javax.annotation.Nonnull
  public Double getPhase2DurationMs() {
    return phase2DurationMs;
  }

  public void setPhase2DurationMs(Double phase2DurationMs) {
    this.phase2DurationMs = phase2DurationMs;
  }


  public PartitionReconfiguredEvent phase3DurationMs(Double phase3DurationMs) {
    this.phase3DurationMs = phase3DurationMs;
    return this;
  }

  /**
   * Duration of Phase3 in milli-seconds.
   * @return phase3DurationMs
   */
  @javax.annotation.Nonnull
  public Double getPhase3DurationMs() {
    return phase3DurationMs;
  }

  public void setPhase3DurationMs(Double phase3DurationMs) {
    this.phase3DurationMs = phase3DurationMs;
  }


  public PartitionReconfiguredEvent phase4DurationMs(Double phase4DurationMs) {
    this.phase4DurationMs = phase4DurationMs;
    return this;
  }

  /**
   * Duration of Phase4 in milli-seconds.
   * @return phase4DurationMs
   */
  @javax.annotation.Nonnull
  public Double getPhase4DurationMs() {
    return phase4DurationMs;
  }

  public void setPhase4DurationMs(Double phase4DurationMs) {
    this.phase4DurationMs = phase4DurationMs;
  }


  public PartitionReconfiguredEvent reconfigType(String reconfigType) {
    this.reconfigType = reconfigType;
    return this;
  }

  /**
   * Type of reconfiguration.
   * @return reconfigType
   */
  @javax.annotation.Nonnull
  public String getReconfigType() {
    return reconfigType;
  }

  public void setReconfigType(String reconfigType) {
    this.reconfigType = reconfigType;
  }


  public PartitionReconfiguredEvent result(String result) {
    this.result = result;
    return this;
  }

  /**
   * Describes reconfiguration result.
   * @return result
   */
  @javax.annotation.Nonnull
  public String getResult() {
    return result;
  }

  public void setResult(String result) {
    this.result = result;
  }


  public PartitionReconfiguredEvent serviceType(String serviceType) {
    this.serviceType = serviceType;
    return this;
  }

  /**
   * Type of Service.
   * @return serviceType
   */
  @javax.annotation.Nonnull
  public String getServiceType() {
    return serviceType;
  }

  public void setServiceType(String serviceType) {
    this.serviceType = serviceType;
  }


  public PartitionReconfiguredEvent totalDurationMs(Double totalDurationMs) {
    this.totalDurationMs = totalDurationMs;
    return this;
  }

  /**
   * Total duration in milli-seconds.
   * @return totalDurationMs
   */
  @javax.annotation.Nonnull
  public Double getTotalDurationMs() {
    return totalDurationMs;
  }

  public void setTotalDurationMs(Double totalDurationMs) {
    this.totalDurationMs = totalDurationMs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartitionReconfiguredEvent partitionReconfiguredEvent = (PartitionReconfiguredEvent) o;
    return Objects.equals(this.ccEpochConfigVersion, partitionReconfiguredEvent.ccEpochConfigVersion) &&
        Objects.equals(this.ccEpochDataLossVersion, partitionReconfiguredEvent.ccEpochDataLossVersion) &&
        Objects.equals(this.nodeInstanceId, partitionReconfiguredEvent.nodeInstanceId) &&
        Objects.equals(this.nodeName, partitionReconfiguredEvent.nodeName) &&
        Objects.equals(this.phase0DurationMs, partitionReconfiguredEvent.phase0DurationMs) &&
        Objects.equals(this.phase1DurationMs, partitionReconfiguredEvent.phase1DurationMs) &&
        Objects.equals(this.phase2DurationMs, partitionReconfiguredEvent.phase2DurationMs) &&
        Objects.equals(this.phase3DurationMs, partitionReconfiguredEvent.phase3DurationMs) &&
        Objects.equals(this.phase4DurationMs, partitionReconfiguredEvent.phase4DurationMs) &&
        Objects.equals(this.reconfigType, partitionReconfiguredEvent.reconfigType) &&
        Objects.equals(this.result, partitionReconfiguredEvent.result) &&
        Objects.equals(this.serviceType, partitionReconfiguredEvent.serviceType) &&
        Objects.equals(this.totalDurationMs, partitionReconfiguredEvent.totalDurationMs) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ccEpochConfigVersion, ccEpochDataLossVersion, nodeInstanceId, nodeName, phase0DurationMs, phase1DurationMs, phase2DurationMs, phase3DurationMs, phase4DurationMs, reconfigType, result, serviceType, totalDurationMs, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartitionReconfiguredEvent {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    ccEpochConfigVersion: ").append(toIndentedString(ccEpochConfigVersion)).append("\n");
    sb.append("    ccEpochDataLossVersion: ").append(toIndentedString(ccEpochDataLossVersion)).append("\n");
    sb.append("    nodeInstanceId: ").append(toIndentedString(nodeInstanceId)).append("\n");
    sb.append("    nodeName: ").append(toIndentedString(nodeName)).append("\n");
    sb.append("    phase0DurationMs: ").append(toIndentedString(phase0DurationMs)).append("\n");
    sb.append("    phase1DurationMs: ").append(toIndentedString(phase1DurationMs)).append("\n");
    sb.append("    phase2DurationMs: ").append(toIndentedString(phase2DurationMs)).append("\n");
    sb.append("    phase3DurationMs: ").append(toIndentedString(phase3DurationMs)).append("\n");
    sb.append("    phase4DurationMs: ").append(toIndentedString(phase4DurationMs)).append("\n");
    sb.append("    reconfigType: ").append(toIndentedString(reconfigType)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    totalDurationMs: ").append(toIndentedString(totalDurationMs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("PartitionId");
    openapiFields.add("Category");
    openapiFields.add("EventInstanceId");
    openapiFields.add("HasCorrelatedEvents");
    openapiFields.add("Kind");
    openapiFields.add("TimeStamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CcEpochConfigVersion");
    openapiRequiredFields.add("CcEpochDataLossVersion");
    openapiRequiredFields.add("NodeInstanceId");
    openapiRequiredFields.add("NodeName");
    openapiRequiredFields.add("Phase0DurationMs");
    openapiRequiredFields.add("Phase1DurationMs");
    openapiRequiredFields.add("Phase2DurationMs");
    openapiRequiredFields.add("Phase3DurationMs");
    openapiRequiredFields.add("Phase4DurationMs");
    openapiRequiredFields.add("ReconfigType");
    openapiRequiredFields.add("Result");
    openapiRequiredFields.add("ServiceType");
    openapiRequiredFields.add("TotalDurationMs");
    openapiRequiredFields.add("PartitionId");
    openapiRequiredFields.add("EventInstanceId");
    openapiRequiredFields.add("Kind");
    openapiRequiredFields.add("TimeStamp");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PartitionReconfiguredEvent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PartitionReconfiguredEvent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PartitionReconfiguredEvent is not found in the empty JSON string", PartitionReconfiguredEvent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PartitionReconfiguredEvent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PartitionReconfiguredEvent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PartitionReconfiguredEvent.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PartitionReconfiguredEvent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PartitionReconfiguredEvent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PartitionReconfiguredEvent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PartitionReconfiguredEvent.class));

       return (TypeAdapter<T>) new TypeAdapter<PartitionReconfiguredEvent>() {
           @Override
           public void write(JsonWriter out, PartitionReconfiguredEvent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PartitionReconfiguredEvent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PartitionReconfiguredEvent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PartitionReconfiguredEvent
   * @throws IOException if the JSON string is invalid with respect to PartitionReconfiguredEvent
   */
  public static PartitionReconfiguredEvent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PartitionReconfiguredEvent.class);
  }

  /**
   * Convert an instance of PartitionReconfiguredEvent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

