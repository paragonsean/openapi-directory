/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.BackupEntity;
import org.openapitools.client.model.BackupStorageDescription;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetBackupByStorageQueryDescription
 */
public class GetBackupByStorageQueryDescriptionTest {
    private final GetBackupByStorageQueryDescription model = new GetBackupByStorageQueryDescription();

    /**
     * Model tests for GetBackupByStorageQueryDescription
     */
    @Test
    public void testGetBackupByStorageQueryDescription() {
        // TODO: test GetBackupByStorageQueryDescription
    }

    /**
     * Test the property 'backupEntity'
     */
    @Test
    public void backupEntityTest() {
        // TODO: test backupEntity
    }

    /**
     * Test the property 'endDateTimeFilter'
     */
    @Test
    public void endDateTimeFilterTest() {
        // TODO: test endDateTimeFilter
    }

    /**
     * Test the property 'latest'
     */
    @Test
    public void latestTest() {
        // TODO: test latest
    }

    /**
     * Test the property 'startDateTimeFilter'
     */
    @Test
    public void startDateTimeFilterTest() {
        // TODO: test startDateTimeFilter
    }

    /**
     * Test the property 'storage'
     */
    @Test
    public void storageTest() {
        // TODO: test storage
    }

}
