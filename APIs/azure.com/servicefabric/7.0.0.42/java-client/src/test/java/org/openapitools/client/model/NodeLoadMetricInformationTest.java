/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NodeLoadMetricInformation
 */
public class NodeLoadMetricInformationTest {
    private final NodeLoadMetricInformation model = new NodeLoadMetricInformation();

    /**
     * Model tests for NodeLoadMetricInformation
     */
    @Test
    public void testNodeLoadMetricInformation() {
        // TODO: test NodeLoadMetricInformation
    }

    /**
     * Test the property 'bufferedNodeCapacityRemaining'
     */
    @Test
    public void bufferedNodeCapacityRemainingTest() {
        // TODO: test bufferedNodeCapacityRemaining
    }

    /**
     * Test the property 'currentNodeLoad'
     */
    @Test
    public void currentNodeLoadTest() {
        // TODO: test currentNodeLoad
    }

    /**
     * Test the property 'isCapacityViolation'
     */
    @Test
    public void isCapacityViolationTest() {
        // TODO: test isCapacityViolation
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nodeBufferedCapacity'
     */
    @Test
    public void nodeBufferedCapacityTest() {
        // TODO: test nodeBufferedCapacity
    }

    /**
     * Test the property 'nodeCapacity'
     */
    @Test
    public void nodeCapacityTest() {
        // TODO: test nodeCapacity
    }

    /**
     * Test the property 'nodeCapacityRemaining'
     */
    @Test
    public void nodeCapacityRemainingTest() {
        // TODO: test nodeCapacityRemaining
    }

    /**
     * Test the property 'nodeLoad'
     */
    @Test
    public void nodeLoadTest() {
        // TODO: test nodeLoad
    }

    /**
     * Test the property 'nodeRemainingBufferedCapacity'
     */
    @Test
    public void nodeRemainingBufferedCapacityTest() {
        // TODO: test nodeRemainingBufferedCapacity
    }

    /**
     * Test the property 'nodeRemainingCapacity'
     */
    @Test
    public void nodeRemainingCapacityTest() {
        // TODO: test nodeRemainingCapacity
    }

    /**
     * Test the property 'plannedNodeLoadRemoval'
     */
    @Test
    public void plannedNodeLoadRemovalTest() {
        // TODO: test plannedNodeLoadRemoval
    }

}
