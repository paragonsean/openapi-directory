/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.FabricError;
import org.openapitools.client.model.PagedSecretValueResourceDescriptionList;
import org.openapitools.client.model.SecretValue;
import org.openapitools.client.model.SecretValueResourceDescription;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MeshSecretValuesApi
 */
@Disabled
public class MeshSecretValuesApiTest {

    private final MeshSecretValuesApi api = new MeshSecretValuesApi();

    /**
     * Adds the specified value as a new version of the specified secret resource.
     *
     * Creates a new value of the specified secret resource. The name of the value is typically the version identifier. Once created the value cannot be changed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void meshSecretValueAddValueTest() throws ApiException {
        String apiVersion = null;
        String secretResourceName = null;
        String secretValueResourceName = null;
        SecretValueResourceDescription secretValueResourceDescription = null;
        SecretValueResourceDescription response = api.meshSecretValueAddValue(apiVersion, secretResourceName, secretValueResourceName, secretValueResourceDescription);
        // TODO: test validations
    }

    /**
     * Deletes the specified  value of the named secret resource.
     *
     * Deletes the secret value resource identified by the name. The name of the resource is typically the version associated with that value. Deletion will fail if the specified value is in use.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void meshSecretValueDeleteTest() throws ApiException {
        String apiVersion = null;
        String secretResourceName = null;
        String secretValueResourceName = null;
        api.meshSecretValueDelete(apiVersion, secretResourceName, secretValueResourceName);
        // TODO: test validations
    }

    /**
     * Gets the specified secret value resource.
     *
     * Get the information about the specified named secret value resources. The information does not include the actual value of the secret.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void meshSecretValueGetTest() throws ApiException {
        String apiVersion = null;
        String secretResourceName = null;
        String secretValueResourceName = null;
        SecretValueResourceDescription response = api.meshSecretValueGet(apiVersion, secretResourceName, secretValueResourceName);
        // TODO: test validations
    }

    /**
     * List names of all values of the specified secret resource.
     *
     * Gets information about all secret value resources of the specified secret resource. The information includes the names of the secret value resources, but not the actual values.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void meshSecretValueListTest() throws ApiException {
        String apiVersion = null;
        String secretResourceName = null;
        PagedSecretValueResourceDescriptionList response = api.meshSecretValueList(apiVersion, secretResourceName);
        // TODO: test validations
    }

    /**
     * Lists the specified value of the secret resource.
     *
     * Lists the decrypted value of the specified named value of the secret resource. This is a privileged operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void meshSecretValueShowTest() throws ApiException {
        String apiVersion = null;
        String secretResourceName = null;
        String secretValueResourceName = null;
        SecretValue response = api.meshSecretValueShow(apiVersion, secretResourceName, secretValueResourceName);
        // TODO: test validations
    }

}
