# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.managed_application_identity import ManagedApplicationIdentity
from openapi_server import util


class ManagedApplicationIdentityDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, managed_identities: List[ManagedApplicationIdentity]=None, token_service_endpoint: str=None):
        """ManagedApplicationIdentityDescription - a model defined in OpenAPI

        :param managed_identities: The managed_identities of this ManagedApplicationIdentityDescription.
        :param token_service_endpoint: The token_service_endpoint of this ManagedApplicationIdentityDescription.
        """
        self.openapi_types = {
            'managed_identities': List[ManagedApplicationIdentity],
            'token_service_endpoint': str
        }

        self.attribute_map = {
            'managed_identities': 'ManagedIdentities',
            'token_service_endpoint': 'TokenServiceEndpoint'
        }

        self._managed_identities = managed_identities
        self._token_service_endpoint = token_service_endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedApplicationIdentityDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedApplicationIdentityDescription of this ManagedApplicationIdentityDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def managed_identities(self):
        """Gets the managed_identities of this ManagedApplicationIdentityDescription.

        A list of managed application identity objects.

        :return: The managed_identities of this ManagedApplicationIdentityDescription.
        :rtype: List[ManagedApplicationIdentity]
        """
        return self._managed_identities

    @managed_identities.setter
    def managed_identities(self, managed_identities):
        """Sets the managed_identities of this ManagedApplicationIdentityDescription.

        A list of managed application identity objects.

        :param managed_identities: The managed_identities of this ManagedApplicationIdentityDescription.
        :type managed_identities: List[ManagedApplicationIdentity]
        """

        self._managed_identities = managed_identities

    @property
    def token_service_endpoint(self):
        """Gets the token_service_endpoint of this ManagedApplicationIdentityDescription.

        Token service endpoint.

        :return: The token_service_endpoint of this ManagedApplicationIdentityDescription.
        :rtype: str
        """
        return self._token_service_endpoint

    @token_service_endpoint.setter
    def token_service_endpoint(self, token_service_endpoint):
        """Sets the token_service_endpoint of this ManagedApplicationIdentityDescription.

        Token service endpoint.

        :param token_service_endpoint: The token_service_endpoint of this ManagedApplicationIdentityDescription.
        :type token_service_endpoint: str
        """

        self._token_service_endpoint = token_service_endpoint
