# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_scaling_policy import AutoScalingPolicy
from openapi_server.models.execution_policy import ExecutionPolicy
from openapi_server.models.health_state import HealthState
from openapi_server.models.resource_status import ResourceStatus
from openapi_server.models.service_identity import ServiceIdentity
from openapi_server import util


class ServiceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_scaling_policies: List[AutoScalingPolicy]=None, description: str=None, dns_name: str=None, execution_policy: ExecutionPolicy=None, health_state: HealthState=None, identity_refs: List[ServiceIdentity]=None, replica_count: int=None, status: ResourceStatus=None, status_details: str=None, unhealthy_evaluation: str=None):
        """ServiceProperties - a model defined in OpenAPI

        :param auto_scaling_policies: The auto_scaling_policies of this ServiceProperties.
        :param description: The description of this ServiceProperties.
        :param dns_name: The dns_name of this ServiceProperties.
        :param execution_policy: The execution_policy of this ServiceProperties.
        :param health_state: The health_state of this ServiceProperties.
        :param identity_refs: The identity_refs of this ServiceProperties.
        :param replica_count: The replica_count of this ServiceProperties.
        :param status: The status of this ServiceProperties.
        :param status_details: The status_details of this ServiceProperties.
        :param unhealthy_evaluation: The unhealthy_evaluation of this ServiceProperties.
        """
        self.openapi_types = {
            'auto_scaling_policies': List[AutoScalingPolicy],
            'description': str,
            'dns_name': str,
            'execution_policy': ExecutionPolicy,
            'health_state': HealthState,
            'identity_refs': List[ServiceIdentity],
            'replica_count': int,
            'status': ResourceStatus,
            'status_details': str,
            'unhealthy_evaluation': str
        }

        self.attribute_map = {
            'auto_scaling_policies': 'autoScalingPolicies',
            'description': 'description',
            'dns_name': 'dnsName',
            'execution_policy': 'executionPolicy',
            'health_state': 'healthState',
            'identity_refs': 'identityRefs',
            'replica_count': 'replicaCount',
            'status': 'status',
            'status_details': 'statusDetails',
            'unhealthy_evaluation': 'unhealthyEvaluation'
        }

        self._auto_scaling_policies = auto_scaling_policies
        self._description = description
        self._dns_name = dns_name
        self._execution_policy = execution_policy
        self._health_state = health_state
        self._identity_refs = identity_refs
        self._replica_count = replica_count
        self._status = status
        self._status_details = status_details
        self._unhealthy_evaluation = unhealthy_evaluation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceProperties of this ServiceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_scaling_policies(self):
        """Gets the auto_scaling_policies of this ServiceProperties.

        Auto scaling policies

        :return: The auto_scaling_policies of this ServiceProperties.
        :rtype: List[AutoScalingPolicy]
        """
        return self._auto_scaling_policies

    @auto_scaling_policies.setter
    def auto_scaling_policies(self, auto_scaling_policies):
        """Sets the auto_scaling_policies of this ServiceProperties.

        Auto scaling policies

        :param auto_scaling_policies: The auto_scaling_policies of this ServiceProperties.
        :type auto_scaling_policies: List[AutoScalingPolicy]
        """

        self._auto_scaling_policies = auto_scaling_policies

    @property
    def description(self):
        """Gets the description of this ServiceProperties.

        User readable description of the service.

        :return: The description of this ServiceProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ServiceProperties.

        User readable description of the service.

        :param description: The description of this ServiceProperties.
        :type description: str
        """

        self._description = description

    @property
    def dns_name(self):
        """Gets the dns_name of this ServiceProperties.

        Dns name of the service.

        :return: The dns_name of this ServiceProperties.
        :rtype: str
        """
        return self._dns_name

    @dns_name.setter
    def dns_name(self, dns_name):
        """Sets the dns_name of this ServiceProperties.

        Dns name of the service.

        :param dns_name: The dns_name of this ServiceProperties.
        :type dns_name: str
        """

        self._dns_name = dns_name

    @property
    def execution_policy(self):
        """Gets the execution_policy of this ServiceProperties.


        :return: The execution_policy of this ServiceProperties.
        :rtype: ExecutionPolicy
        """
        return self._execution_policy

    @execution_policy.setter
    def execution_policy(self, execution_policy):
        """Sets the execution_policy of this ServiceProperties.


        :param execution_policy: The execution_policy of this ServiceProperties.
        :type execution_policy: ExecutionPolicy
        """

        self._execution_policy = execution_policy

    @property
    def health_state(self):
        """Gets the health_state of this ServiceProperties.


        :return: The health_state of this ServiceProperties.
        :rtype: HealthState
        """
        return self._health_state

    @health_state.setter
    def health_state(self, health_state):
        """Sets the health_state of this ServiceProperties.


        :param health_state: The health_state of this ServiceProperties.
        :type health_state: HealthState
        """

        self._health_state = health_state

    @property
    def identity_refs(self):
        """Gets the identity_refs of this ServiceProperties.

        The service identity list.

        :return: The identity_refs of this ServiceProperties.
        :rtype: List[ServiceIdentity]
        """
        return self._identity_refs

    @identity_refs.setter
    def identity_refs(self, identity_refs):
        """Sets the identity_refs of this ServiceProperties.

        The service identity list.

        :param identity_refs: The identity_refs of this ServiceProperties.
        :type identity_refs: List[ServiceIdentity]
        """

        self._identity_refs = identity_refs

    @property
    def replica_count(self):
        """Gets the replica_count of this ServiceProperties.

        The number of replicas of the service to create. Defaults to 1 if not specified.

        :return: The replica_count of this ServiceProperties.
        :rtype: int
        """
        return self._replica_count

    @replica_count.setter
    def replica_count(self, replica_count):
        """Sets the replica_count of this ServiceProperties.

        The number of replicas of the service to create. Defaults to 1 if not specified.

        :param replica_count: The replica_count of this ServiceProperties.
        :type replica_count: int
        """

        self._replica_count = replica_count

    @property
    def status(self):
        """Gets the status of this ServiceProperties.


        :return: The status of this ServiceProperties.
        :rtype: ResourceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ServiceProperties.


        :param status: The status of this ServiceProperties.
        :type status: ResourceStatus
        """

        self._status = status

    @property
    def status_details(self):
        """Gets the status_details of this ServiceProperties.

        Gives additional information about the current status of the service.

        :return: The status_details of this ServiceProperties.
        :rtype: str
        """
        return self._status_details

    @status_details.setter
    def status_details(self, status_details):
        """Sets the status_details of this ServiceProperties.

        Gives additional information about the current status of the service.

        :param status_details: The status_details of this ServiceProperties.
        :type status_details: str
        """

        self._status_details = status_details

    @property
    def unhealthy_evaluation(self):
        """Gets the unhealthy_evaluation of this ServiceProperties.

        When the service's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the service is marked unhealthy.

        :return: The unhealthy_evaluation of this ServiceProperties.
        :rtype: str
        """
        return self._unhealthy_evaluation

    @unhealthy_evaluation.setter
    def unhealthy_evaluation(self, unhealthy_evaluation):
        """Sets the unhealthy_evaluation of this ServiceProperties.

        When the service's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the service is marked unhealthy.

        :param unhealthy_evaluation: The unhealthy_evaluation of this ServiceProperties.
        :type unhealthy_evaluation: str
        """

        self._unhealthy_evaluation = unhealthy_evaluation
