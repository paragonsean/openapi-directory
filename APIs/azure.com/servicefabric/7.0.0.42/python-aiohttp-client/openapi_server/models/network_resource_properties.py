# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_kind import NetworkKind
from openapi_server.models.network_resource_properties_base import NetworkResourcePropertiesBase
from openapi_server.models.resource_status import ResourceStatus
from openapi_server import util


class NetworkResourceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, status: ResourceStatus=None, status_details: str=None, kind: NetworkKind=None):
        """NetworkResourceProperties - a model defined in OpenAPI

        :param description: The description of this NetworkResourceProperties.
        :param status: The status of this NetworkResourceProperties.
        :param status_details: The status_details of this NetworkResourceProperties.
        :param kind: The kind of this NetworkResourceProperties.
        """
        self.openapi_types = {
            'description': str,
            'status': ResourceStatus,
            'status_details': str,
            'kind': NetworkKind
        }

        self.attribute_map = {
            'description': 'description',
            'status': 'status',
            'status_details': 'statusDetails',
            'kind': 'kind'
        }

        self._description = description
        self._status = status
        self._status_details = status_details
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkResourceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkResourceProperties of this NetworkResourceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this NetworkResourceProperties.

        User readable description of the network.

        :return: The description of this NetworkResourceProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this NetworkResourceProperties.

        User readable description of the network.

        :param description: The description of this NetworkResourceProperties.
        :type description: str
        """

        self._description = description

    @property
    def status(self):
        """Gets the status of this NetworkResourceProperties.


        :return: The status of this NetworkResourceProperties.
        :rtype: ResourceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this NetworkResourceProperties.


        :param status: The status of this NetworkResourceProperties.
        :type status: ResourceStatus
        """

        self._status = status

    @property
    def status_details(self):
        """Gets the status_details of this NetworkResourceProperties.

        Gives additional information about the current status of the network.

        :return: The status_details of this NetworkResourceProperties.
        :rtype: str
        """
        return self._status_details

    @status_details.setter
    def status_details(self, status_details):
        """Sets the status_details of this NetworkResourceProperties.

        Gives additional information about the current status of the network.

        :param status_details: The status_details of this NetworkResourceProperties.
        :type status_details: str
        """

        self._status_details = status_details

    @property
    def kind(self):
        """Gets the kind of this NetworkResourceProperties.


        :return: The kind of this NetworkResourceProperties.
        :rtype: NetworkKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this NetworkResourceProperties.


        :param kind: The kind of this NetworkResourceProperties.
        :type kind: NetworkKind
        """
        if kind is None:
            raise ValueError("Invalid value for `kind`, must not be `None`")

        self._kind = kind
