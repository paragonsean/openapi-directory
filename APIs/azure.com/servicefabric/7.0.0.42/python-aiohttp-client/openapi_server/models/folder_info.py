# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FolderInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_count: str=None, store_relative_path: str=None):
        """FolderInfo - a model defined in OpenAPI

        :param file_count: The file_count of this FolderInfo.
        :param store_relative_path: The store_relative_path of this FolderInfo.
        """
        self.openapi_types = {
            'file_count': str,
            'store_relative_path': str
        }

        self.attribute_map = {
            'file_count': 'FileCount',
            'store_relative_path': 'StoreRelativePath'
        }

        self._file_count = file_count
        self._store_relative_path = store_relative_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FolderInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FolderInfo of this FolderInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_count(self):
        """Gets the file_count of this FolderInfo.

        The number of files from within the image store folder.

        :return: The file_count of this FolderInfo.
        :rtype: str
        """
        return self._file_count

    @file_count.setter
    def file_count(self, file_count):
        """Sets the file_count of this FolderInfo.

        The number of files from within the image store folder.

        :param file_count: The file_count of this FolderInfo.
        :type file_count: str
        """

        self._file_count = file_count

    @property
    def store_relative_path(self):
        """Gets the store_relative_path of this FolderInfo.

        The remote location within image store. This path is relative to the image store root.

        :return: The store_relative_path of this FolderInfo.
        :rtype: str
        """
        return self._store_relative_path

    @store_relative_path.setter
    def store_relative_path(self, store_relative_path):
        """Sets the store_relative_path of this FolderInfo.

        The remote location within image store. This path is relative to the image store root.

        :param store_relative_path: The store_relative_path of this FolderInfo.
        :type store_relative_path: str
        """

        self._store_relative_path = store_relative_path
