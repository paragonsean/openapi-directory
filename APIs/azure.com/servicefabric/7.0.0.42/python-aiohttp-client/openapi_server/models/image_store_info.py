# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.disk_info import DiskInfo
from openapi_server.models.usage_info import UsageInfo
from openapi_server import util


class ImageStoreInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk_info: DiskInfo=None, used_by_copy: UsageInfo=None, used_by_metadata: UsageInfo=None, used_by_register: UsageInfo=None, used_by_staging: UsageInfo=None):
        """ImageStoreInfo - a model defined in OpenAPI

        :param disk_info: The disk_info of this ImageStoreInfo.
        :param used_by_copy: The used_by_copy of this ImageStoreInfo.
        :param used_by_metadata: The used_by_metadata of this ImageStoreInfo.
        :param used_by_register: The used_by_register of this ImageStoreInfo.
        :param used_by_staging: The used_by_staging of this ImageStoreInfo.
        """
        self.openapi_types = {
            'disk_info': DiskInfo,
            'used_by_copy': UsageInfo,
            'used_by_metadata': UsageInfo,
            'used_by_register': UsageInfo,
            'used_by_staging': UsageInfo
        }

        self.attribute_map = {
            'disk_info': 'DiskInfo',
            'used_by_copy': 'UsedByCopy',
            'used_by_metadata': 'UsedByMetadata',
            'used_by_register': 'UsedByRegister',
            'used_by_staging': 'UsedByStaging'
        }

        self._disk_info = disk_info
        self._used_by_copy = used_by_copy
        self._used_by_metadata = used_by_metadata
        self._used_by_register = used_by_register
        self._used_by_staging = used_by_staging

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageStoreInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageStoreInfo of this ImageStoreInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk_info(self):
        """Gets the disk_info of this ImageStoreInfo.


        :return: The disk_info of this ImageStoreInfo.
        :rtype: DiskInfo
        """
        return self._disk_info

    @disk_info.setter
    def disk_info(self, disk_info):
        """Sets the disk_info of this ImageStoreInfo.


        :param disk_info: The disk_info of this ImageStoreInfo.
        :type disk_info: DiskInfo
        """

        self._disk_info = disk_info

    @property
    def used_by_copy(self):
        """Gets the used_by_copy of this ImageStoreInfo.


        :return: The used_by_copy of this ImageStoreInfo.
        :rtype: UsageInfo
        """
        return self._used_by_copy

    @used_by_copy.setter
    def used_by_copy(self, used_by_copy):
        """Sets the used_by_copy of this ImageStoreInfo.


        :param used_by_copy: The used_by_copy of this ImageStoreInfo.
        :type used_by_copy: UsageInfo
        """

        self._used_by_copy = used_by_copy

    @property
    def used_by_metadata(self):
        """Gets the used_by_metadata of this ImageStoreInfo.


        :return: The used_by_metadata of this ImageStoreInfo.
        :rtype: UsageInfo
        """
        return self._used_by_metadata

    @used_by_metadata.setter
    def used_by_metadata(self, used_by_metadata):
        """Sets the used_by_metadata of this ImageStoreInfo.


        :param used_by_metadata: The used_by_metadata of this ImageStoreInfo.
        :type used_by_metadata: UsageInfo
        """

        self._used_by_metadata = used_by_metadata

    @property
    def used_by_register(self):
        """Gets the used_by_register of this ImageStoreInfo.


        :return: The used_by_register of this ImageStoreInfo.
        :rtype: UsageInfo
        """
        return self._used_by_register

    @used_by_register.setter
    def used_by_register(self, used_by_register):
        """Sets the used_by_register of this ImageStoreInfo.


        :param used_by_register: The used_by_register of this ImageStoreInfo.
        :type used_by_register: UsageInfo
        """

        self._used_by_register = used_by_register

    @property
    def used_by_staging(self):
        """Gets the used_by_staging of this ImageStoreInfo.


        :return: The used_by_staging of this ImageStoreInfo.
        :rtype: UsageInfo
        """
        return self._used_by_staging

    @used_by_staging.setter
    def used_by_staging(self, used_by_staging):
        """Sets the used_by_staging of this ImageStoreInfo.


        :param used_by_staging: The used_by_staging of this ImageStoreInfo.
        :type used_by_staging: UsageInfo
        """

        self._used_by_staging = used_by_staging
