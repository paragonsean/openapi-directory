# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chaos_event import ChaosEvent
from openapi_server import util


class ChaosEventWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chaos_event: ChaosEvent=None):
        """ChaosEventWrapper - a model defined in OpenAPI

        :param chaos_event: The chaos_event of this ChaosEventWrapper.
        """
        self.openapi_types = {
            'chaos_event': ChaosEvent
        }

        self.attribute_map = {
            'chaos_event': 'ChaosEvent'
        }

        self._chaos_event = chaos_event

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChaosEventWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChaosEventWrapper of this ChaosEventWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chaos_event(self):
        """Gets the chaos_event of this ChaosEventWrapper.


        :return: The chaos_event of this ChaosEventWrapper.
        :rtype: ChaosEvent
        """
        return self._chaos_event

    @chaos_event.setter
    def chaos_event(self, chaos_event):
        """Sets the chaos_event of this ChaosEventWrapper.


        :param chaos_event: The chaos_event of this ChaosEventWrapper.
        :type chaos_event: ChaosEvent
        """

        self._chaos_event = chaos_event
