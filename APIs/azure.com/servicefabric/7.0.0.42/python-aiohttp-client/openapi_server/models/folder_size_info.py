# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FolderSizeInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, folder_size: str=None, store_relative_path: str=None):
        """FolderSizeInfo - a model defined in OpenAPI

        :param folder_size: The folder_size of this FolderSizeInfo.
        :param store_relative_path: The store_relative_path of this FolderSizeInfo.
        """
        self.openapi_types = {
            'folder_size': str,
            'store_relative_path': str
        }

        self.attribute_map = {
            'folder_size': 'FolderSize',
            'store_relative_path': 'StoreRelativePath'
        }

        self._folder_size = folder_size
        self._store_relative_path = store_relative_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FolderSizeInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FolderSizeInfo of this FolderSizeInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def folder_size(self):
        """Gets the folder_size of this FolderSizeInfo.

        The size of folder in bytes.

        :return: The folder_size of this FolderSizeInfo.
        :rtype: str
        """
        return self._folder_size

    @folder_size.setter
    def folder_size(self, folder_size):
        """Sets the folder_size of this FolderSizeInfo.

        The size of folder in bytes.

        :param folder_size: The folder_size of this FolderSizeInfo.
        :type folder_size: str
        """

        self._folder_size = folder_size

    @property
    def store_relative_path(self):
        """Gets the store_relative_path of this FolderSizeInfo.

        The remote location within image store. This path is relative to the image store root.

        :return: The store_relative_path of this FolderSizeInfo.
        :rtype: str
        """
        return self._store_relative_path

    @store_relative_path.setter
    def store_relative_path(self, store_relative_path):
        """Sets the store_relative_path of this FolderSizeInfo.

        The remote location within image store. This path is relative to the image store root.

        :param store_relative_path: The store_relative_path of this FolderSizeInfo.
        :type store_relative_path: str
        """

        self._store_relative_path = store_relative_path
