# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.partition_information import PartitionInformation
from openapi_server.models.service_partition_kind import ServicePartitionKind
from openapi_server import util


class NamedPartitionInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, id: str=None, service_partition_kind: ServicePartitionKind=None):
        """NamedPartitionInformation - a model defined in OpenAPI

        :param name: The name of this NamedPartitionInformation.
        :param id: The id of this NamedPartitionInformation.
        :param service_partition_kind: The service_partition_kind of this NamedPartitionInformation.
        """
        self.openapi_types = {
            'name': str,
            'id': str,
            'service_partition_kind': ServicePartitionKind
        }

        self.attribute_map = {
            'name': 'Name',
            'id': 'Id',
            'service_partition_kind': 'ServicePartitionKind'
        }

        self._name = name
        self._id = id
        self._service_partition_kind = service_partition_kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NamedPartitionInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NamedPartitionInformation of this NamedPartitionInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this NamedPartitionInformation.

        Name of the partition.

        :return: The name of this NamedPartitionInformation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NamedPartitionInformation.

        Name of the partition.

        :param name: The name of this NamedPartitionInformation.
        :type name: str
        """

        self._name = name

    @property
    def id(self):
        """Gets the id of this NamedPartitionInformation.

        An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.

        :return: The id of this NamedPartitionInformation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NamedPartitionInformation.

        An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.

        :param id: The id of this NamedPartitionInformation.
        :type id: str
        """

        self._id = id

    @property
    def service_partition_kind(self):
        """Gets the service_partition_kind of this NamedPartitionInformation.


        :return: The service_partition_kind of this NamedPartitionInformation.
        :rtype: ServicePartitionKind
        """
        return self._service_partition_kind

    @service_partition_kind.setter
    def service_partition_kind(self, service_partition_kind):
        """Sets the service_partition_kind of this NamedPartitionInformation.


        :param service_partition_kind: The service_partition_kind of this NamedPartitionInformation.
        :type service_partition_kind: ServicePartitionKind
        """
        if service_partition_kind is None:
            raise ValueError("Invalid value for `service_partition_kind`, must not be `None`")

        self._service_partition_kind = service_partition_kind
