# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClusterManifest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, manifest: str=None):
        """ClusterManifest - a model defined in OpenAPI

        :param manifest: The manifest of this ClusterManifest.
        """
        self.openapi_types = {
            'manifest': str
        }

        self.attribute_map = {
            'manifest': 'Manifest'
        }

        self._manifest = manifest

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterManifest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterManifest of this ClusterManifest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def manifest(self):
        """Gets the manifest of this ClusterManifest.

        The contents of the cluster manifest file.

        :return: The manifest of this ClusterManifest.
        :rtype: str
        """
        return self._manifest

    @manifest.setter
    def manifest(self, manifest):
        """Sets the manifest of this ClusterManifest.

        The contents of the cluster manifest file.

        :param manifest: The manifest of this ClusterManifest.
        :type manifest: str
        """

        self._manifest = manifest
