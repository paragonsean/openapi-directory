# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_state import HealthState
from openapi_server.models.partition_health_state_chunk_list import PartitionHealthStateChunkList
from openapi_server import util


class ServiceHealthStateChunk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, partition_health_state_chunks: PartitionHealthStateChunkList=None, service_name: str=None, health_state: HealthState=None):
        """ServiceHealthStateChunk - a model defined in OpenAPI

        :param partition_health_state_chunks: The partition_health_state_chunks of this ServiceHealthStateChunk.
        :param service_name: The service_name of this ServiceHealthStateChunk.
        :param health_state: The health_state of this ServiceHealthStateChunk.
        """
        self.openapi_types = {
            'partition_health_state_chunks': PartitionHealthStateChunkList,
            'service_name': str,
            'health_state': HealthState
        }

        self.attribute_map = {
            'partition_health_state_chunks': 'PartitionHealthStateChunks',
            'service_name': 'ServiceName',
            'health_state': 'HealthState'
        }

        self._partition_health_state_chunks = partition_health_state_chunks
        self._service_name = service_name
        self._health_state = health_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceHealthStateChunk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceHealthStateChunk of this ServiceHealthStateChunk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def partition_health_state_chunks(self):
        """Gets the partition_health_state_chunks of this ServiceHealthStateChunk.


        :return: The partition_health_state_chunks of this ServiceHealthStateChunk.
        :rtype: PartitionHealthStateChunkList
        """
        return self._partition_health_state_chunks

    @partition_health_state_chunks.setter
    def partition_health_state_chunks(self, partition_health_state_chunks):
        """Sets the partition_health_state_chunks of this ServiceHealthStateChunk.


        :param partition_health_state_chunks: The partition_health_state_chunks of this ServiceHealthStateChunk.
        :type partition_health_state_chunks: PartitionHealthStateChunkList
        """

        self._partition_health_state_chunks = partition_health_state_chunks

    @property
    def service_name(self):
        """Gets the service_name of this ServiceHealthStateChunk.

        The full name of the service with 'fabric:' URI scheme.

        :return: The service_name of this ServiceHealthStateChunk.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ServiceHealthStateChunk.

        The full name of the service with 'fabric:' URI scheme.

        :param service_name: The service_name of this ServiceHealthStateChunk.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def health_state(self):
        """Gets the health_state of this ServiceHealthStateChunk.


        :return: The health_state of this ServiceHealthStateChunk.
        :rtype: HealthState
        """
        return self._health_state

    @health_state.setter
    def health_state(self, health_state):
        """Sets the health_state of this ServiceHealthStateChunk.


        :param health_state: The health_state of this ServiceHealthStateChunk.
        :type health_state: HealthState
        """

        self._health_state = health_state
