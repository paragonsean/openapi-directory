# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployed_service_replica_detail_info import DeployedServiceReplicaDetailInfo
from openapi_server.models.deployed_stateless_service_instance_info import DeployedStatelessServiceInstanceInfo
from openapi_server.models.load_metric_report_info import LoadMetricReportInfo
from openapi_server.models.service_kind import ServiceKind
from openapi_server.models.service_operation_name import ServiceOperationName
from openapi_server import util


class DeployedStatelessServiceInstanceDetailInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployed_service_replica_query_result: DeployedStatelessServiceInstanceInfo=None, instance_id: str=None, current_service_operation: ServiceOperationName=None, current_service_operation_start_time_utc: datetime=None, partition_id: str=None, reported_load: List[LoadMetricReportInfo]=None, service_kind: ServiceKind=None, service_name: str=None):
        """DeployedStatelessServiceInstanceDetailInfo - a model defined in OpenAPI

        :param deployed_service_replica_query_result: The deployed_service_replica_query_result of this DeployedStatelessServiceInstanceDetailInfo.
        :param instance_id: The instance_id of this DeployedStatelessServiceInstanceDetailInfo.
        :param current_service_operation: The current_service_operation of this DeployedStatelessServiceInstanceDetailInfo.
        :param current_service_operation_start_time_utc: The current_service_operation_start_time_utc of this DeployedStatelessServiceInstanceDetailInfo.
        :param partition_id: The partition_id of this DeployedStatelessServiceInstanceDetailInfo.
        :param reported_load: The reported_load of this DeployedStatelessServiceInstanceDetailInfo.
        :param service_kind: The service_kind of this DeployedStatelessServiceInstanceDetailInfo.
        :param service_name: The service_name of this DeployedStatelessServiceInstanceDetailInfo.
        """
        self.openapi_types = {
            'deployed_service_replica_query_result': DeployedStatelessServiceInstanceInfo,
            'instance_id': str,
            'current_service_operation': ServiceOperationName,
            'current_service_operation_start_time_utc': datetime,
            'partition_id': str,
            'reported_load': List[LoadMetricReportInfo],
            'service_kind': ServiceKind,
            'service_name': str
        }

        self.attribute_map = {
            'deployed_service_replica_query_result': 'DeployedServiceReplicaQueryResult',
            'instance_id': 'InstanceId',
            'current_service_operation': 'CurrentServiceOperation',
            'current_service_operation_start_time_utc': 'CurrentServiceOperationStartTimeUtc',
            'partition_id': 'PartitionId',
            'reported_load': 'ReportedLoad',
            'service_kind': 'ServiceKind',
            'service_name': 'ServiceName'
        }

        self._deployed_service_replica_query_result = deployed_service_replica_query_result
        self._instance_id = instance_id
        self._current_service_operation = current_service_operation
        self._current_service_operation_start_time_utc = current_service_operation_start_time_utc
        self._partition_id = partition_id
        self._reported_load = reported_load
        self._service_kind = service_kind
        self._service_name = service_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeployedStatelessServiceInstanceDetailInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeployedStatelessServiceInstanceDetailInfo of this DeployedStatelessServiceInstanceDetailInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployed_service_replica_query_result(self):
        """Gets the deployed_service_replica_query_result of this DeployedStatelessServiceInstanceDetailInfo.


        :return: The deployed_service_replica_query_result of this DeployedStatelessServiceInstanceDetailInfo.
        :rtype: DeployedStatelessServiceInstanceInfo
        """
        return self._deployed_service_replica_query_result

    @deployed_service_replica_query_result.setter
    def deployed_service_replica_query_result(self, deployed_service_replica_query_result):
        """Sets the deployed_service_replica_query_result of this DeployedStatelessServiceInstanceDetailInfo.


        :param deployed_service_replica_query_result: The deployed_service_replica_query_result of this DeployedStatelessServiceInstanceDetailInfo.
        :type deployed_service_replica_query_result: DeployedStatelessServiceInstanceInfo
        """

        self._deployed_service_replica_query_result = deployed_service_replica_query_result

    @property
    def instance_id(self):
        """Gets the instance_id of this DeployedStatelessServiceInstanceDetailInfo.

        Id of a stateless service instance. InstanceId is used by Service Fabric to uniquely identify an instance of a partition of a stateless service. It is unique within a partition and does not change for the lifetime of the instance. If the instance has failed over on the same or different node, it will get a different value for the InstanceId.

        :return: The instance_id of this DeployedStatelessServiceInstanceDetailInfo.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this DeployedStatelessServiceInstanceDetailInfo.

        Id of a stateless service instance. InstanceId is used by Service Fabric to uniquely identify an instance of a partition of a stateless service. It is unique within a partition and does not change for the lifetime of the instance. If the instance has failed over on the same or different node, it will get a different value for the InstanceId.

        :param instance_id: The instance_id of this DeployedStatelessServiceInstanceDetailInfo.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def current_service_operation(self):
        """Gets the current_service_operation of this DeployedStatelessServiceInstanceDetailInfo.


        :return: The current_service_operation of this DeployedStatelessServiceInstanceDetailInfo.
        :rtype: ServiceOperationName
        """
        return self._current_service_operation

    @current_service_operation.setter
    def current_service_operation(self, current_service_operation):
        """Sets the current_service_operation of this DeployedStatelessServiceInstanceDetailInfo.


        :param current_service_operation: The current_service_operation of this DeployedStatelessServiceInstanceDetailInfo.
        :type current_service_operation: ServiceOperationName
        """

        self._current_service_operation = current_service_operation

    @property
    def current_service_operation_start_time_utc(self):
        """Gets the current_service_operation_start_time_utc of this DeployedStatelessServiceInstanceDetailInfo.

        The start time of the current service operation in UTC format.

        :return: The current_service_operation_start_time_utc of this DeployedStatelessServiceInstanceDetailInfo.
        :rtype: datetime
        """
        return self._current_service_operation_start_time_utc

    @current_service_operation_start_time_utc.setter
    def current_service_operation_start_time_utc(self, current_service_operation_start_time_utc):
        """Sets the current_service_operation_start_time_utc of this DeployedStatelessServiceInstanceDetailInfo.

        The start time of the current service operation in UTC format.

        :param current_service_operation_start_time_utc: The current_service_operation_start_time_utc of this DeployedStatelessServiceInstanceDetailInfo.
        :type current_service_operation_start_time_utc: datetime
        """

        self._current_service_operation_start_time_utc = current_service_operation_start_time_utc

    @property
    def partition_id(self):
        """Gets the partition_id of this DeployedStatelessServiceInstanceDetailInfo.

        An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.

        :return: The partition_id of this DeployedStatelessServiceInstanceDetailInfo.
        :rtype: str
        """
        return self._partition_id

    @partition_id.setter
    def partition_id(self, partition_id):
        """Sets the partition_id of this DeployedStatelessServiceInstanceDetailInfo.

        An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.

        :param partition_id: The partition_id of this DeployedStatelessServiceInstanceDetailInfo.
        :type partition_id: str
        """

        self._partition_id = partition_id

    @property
    def reported_load(self):
        """Gets the reported_load of this DeployedStatelessServiceInstanceDetailInfo.

        List of load reported by replica.

        :return: The reported_load of this DeployedStatelessServiceInstanceDetailInfo.
        :rtype: List[LoadMetricReportInfo]
        """
        return self._reported_load

    @reported_load.setter
    def reported_load(self, reported_load):
        """Sets the reported_load of this DeployedStatelessServiceInstanceDetailInfo.

        List of load reported by replica.

        :param reported_load: The reported_load of this DeployedStatelessServiceInstanceDetailInfo.
        :type reported_load: List[LoadMetricReportInfo]
        """

        self._reported_load = reported_load

    @property
    def service_kind(self):
        """Gets the service_kind of this DeployedStatelessServiceInstanceDetailInfo.


        :return: The service_kind of this DeployedStatelessServiceInstanceDetailInfo.
        :rtype: ServiceKind
        """
        return self._service_kind

    @service_kind.setter
    def service_kind(self, service_kind):
        """Sets the service_kind of this DeployedStatelessServiceInstanceDetailInfo.


        :param service_kind: The service_kind of this DeployedStatelessServiceInstanceDetailInfo.
        :type service_kind: ServiceKind
        """
        if service_kind is None:
            raise ValueError("Invalid value for `service_kind`, must not be `None`")

        self._service_kind = service_kind

    @property
    def service_name(self):
        """Gets the service_name of this DeployedStatelessServiceInstanceDetailInfo.

        The full name of the service with 'fabric:' URI scheme.

        :return: The service_name of this DeployedStatelessServiceInstanceDetailInfo.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this DeployedStatelessServiceInstanceDetailInfo.

        The full name of the service with 'fabric:' URI scheme.

        :param service_name: The service_name of this DeployedStatelessServiceInstanceDetailInfo.
        :type service_name: str
        """

        self._service_name = service_name
