# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpgradeOrchestrationServiceState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_state: str=None):
        """UpgradeOrchestrationServiceState - a model defined in OpenAPI

        :param service_state: The service_state of this UpgradeOrchestrationServiceState.
        """
        self.openapi_types = {
            'service_state': str
        }

        self.attribute_map = {
            'service_state': 'ServiceState'
        }

        self._service_state = service_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpgradeOrchestrationServiceState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpgradeOrchestrationServiceState of this UpgradeOrchestrationServiceState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_state(self):
        """Gets the service_state of this UpgradeOrchestrationServiceState.

        The state of Service Fabric Upgrade Orchestration Service.

        :return: The service_state of this UpgradeOrchestrationServiceState.
        :rtype: str
        """
        return self._service_state

    @service_state.setter
    def service_state(self, service_state):
        """Sets the service_state of this UpgradeOrchestrationServiceState.

        The state of Service Fabric Upgrade Orchestration Service.

        :param service_state: The service_state of this UpgradeOrchestrationServiceState.
        :type service_state: str
        """

        self._service_state = service_state
