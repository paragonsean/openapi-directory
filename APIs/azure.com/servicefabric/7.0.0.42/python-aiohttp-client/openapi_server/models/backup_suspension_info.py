# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.backup_suspension_scope import BackupSuspensionScope
from openapi_server import util


class BackupSuspensionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_suspended: bool=None, suspension_inherited_from: BackupSuspensionScope=None):
        """BackupSuspensionInfo - a model defined in OpenAPI

        :param is_suspended: The is_suspended of this BackupSuspensionInfo.
        :param suspension_inherited_from: The suspension_inherited_from of this BackupSuspensionInfo.
        """
        self.openapi_types = {
            'is_suspended': bool,
            'suspension_inherited_from': BackupSuspensionScope
        }

        self.attribute_map = {
            'is_suspended': 'IsSuspended',
            'suspension_inherited_from': 'SuspensionInheritedFrom'
        }

        self._is_suspended = is_suspended
        self._suspension_inherited_from = suspension_inherited_from

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackupSuspensionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackupSuspensionInfo of this BackupSuspensionInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_suspended(self):
        """Gets the is_suspended of this BackupSuspensionInfo.

        Indicates whether periodic backup is suspended at this level or not.

        :return: The is_suspended of this BackupSuspensionInfo.
        :rtype: bool
        """
        return self._is_suspended

    @is_suspended.setter
    def is_suspended(self, is_suspended):
        """Sets the is_suspended of this BackupSuspensionInfo.

        Indicates whether periodic backup is suspended at this level or not.

        :param is_suspended: The is_suspended of this BackupSuspensionInfo.
        :type is_suspended: bool
        """

        self._is_suspended = is_suspended

    @property
    def suspension_inherited_from(self):
        """Gets the suspension_inherited_from of this BackupSuspensionInfo.


        :return: The suspension_inherited_from of this BackupSuspensionInfo.
        :rtype: BackupSuspensionScope
        """
        return self._suspension_inherited_from

    @suspension_inherited_from.setter
    def suspension_inherited_from(self, suspension_inherited_from):
        """Sets the suspension_inherited_from of this BackupSuspensionInfo.


        :param suspension_inherited_from: The suspension_inherited_from of this BackupSuspensionInfo.
        :type suspension_inherited_from: BackupSuspensionScope
        """

        self._suspension_inherited_from = suspension_inherited_from
