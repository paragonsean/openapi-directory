/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpgradeSortOrder.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpgradeSortOrder::OAIUpgradeSortOrder(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpgradeSortOrder::OAIUpgradeSortOrder() {
    this->initializeModel();
}

OAIUpgradeSortOrder::~OAIUpgradeSortOrder() {}

void OAIUpgradeSortOrder::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUpgradeSortOrder::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUpgradeSortOrder::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Invalid", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpgradeSortOrder::INVALID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Default", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpgradeSortOrder::DEFAULT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Numeric", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpgradeSortOrder::NUMERIC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Lexicographical", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpgradeSortOrder::LEXICOGRAPHICAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ReverseNumeric", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpgradeSortOrder::REVERSENUMERIC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ReverseLexicographical", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpgradeSortOrder::REVERSELEXICOGRAPHICAL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUpgradeSortOrder::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUpgradeSortOrder::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUpgradeSortOrder::INVALID:
            val = "Invalid";
            break;
        case eOAIUpgradeSortOrder::DEFAULT:
            val = "Default";
            break;
        case eOAIUpgradeSortOrder::NUMERIC:
            val = "Numeric";
            break;
        case eOAIUpgradeSortOrder::LEXICOGRAPHICAL:
            val = "Lexicographical";
            break;
        case eOAIUpgradeSortOrder::REVERSENUMERIC:
            val = "ReverseNumeric";
            break;
        case eOAIUpgradeSortOrder::REVERSELEXICOGRAPHICAL:
            val = "ReverseLexicographical";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUpgradeSortOrder::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUpgradeSortOrder::eOAIUpgradeSortOrder OAIUpgradeSortOrder::getValue() const {
    return m_value;
}

void OAIUpgradeSortOrder::setValue(const OAIUpgradeSortOrder::eOAIUpgradeSortOrder& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUpgradeSortOrder::isSet() const {
    
    return m_value_isSet;
}

bool OAIUpgradeSortOrder::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
