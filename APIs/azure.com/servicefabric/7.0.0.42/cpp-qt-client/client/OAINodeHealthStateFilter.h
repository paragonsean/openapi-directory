/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINodeHealthStateFilter.h
 *
 * Defines matching criteria to determine whether a node should be included in the returned cluster health chunk. One filter can match zero, one or multiple nodes, depending on its properties. Can be specified in the cluster health chunk query description.
 */

#ifndef OAINodeHealthStateFilter_H
#define OAINodeHealthStateFilter_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINodeHealthStateFilter : public OAIObject {
public:
    OAINodeHealthStateFilter();
    OAINodeHealthStateFilter(QString json);
    ~OAINodeHealthStateFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getHealthStateFilter() const;
    void setHealthStateFilter(const qint32 &health_state_filter);
    bool is_health_state_filter_Set() const;
    bool is_health_state_filter_Valid() const;

    QString getNodeNameFilter() const;
    void setNodeNameFilter(const QString &node_name_filter);
    bool is_node_name_filter_Set() const;
    bool is_node_name_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_health_state_filter;
    bool m_health_state_filter_isSet;
    bool m_health_state_filter_isValid;

    QString m_node_name_filter;
    bool m_node_name_filter_isSet;
    bool m_node_name_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINodeHealthStateFilter)

#endif // OAINodeHealthStateFilter_H
