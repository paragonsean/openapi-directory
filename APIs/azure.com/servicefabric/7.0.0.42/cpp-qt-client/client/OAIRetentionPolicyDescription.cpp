/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRetentionPolicyDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRetentionPolicyDescription::OAIRetentionPolicyDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRetentionPolicyDescription::OAIRetentionPolicyDescription() {
    this->initializeModel();
}

OAIRetentionPolicyDescription::~OAIRetentionPolicyDescription() {}

void OAIRetentionPolicyDescription::initializeModel() {

    m_retention_policy_type_isSet = false;
    m_retention_policy_type_isValid = false;
}

void OAIRetentionPolicyDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRetentionPolicyDescription::fromJsonObject(QJsonObject json) {

    m_retention_policy_type_isValid = ::OpenAPI::fromJsonValue(m_retention_policy_type, json[QString("RetentionPolicyType")]);
    m_retention_policy_type_isSet = !json[QString("RetentionPolicyType")].isNull() && m_retention_policy_type_isValid;
}

QString OAIRetentionPolicyDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRetentionPolicyDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_retention_policy_type.isSet()) {
        obj.insert(QString("RetentionPolicyType"), ::OpenAPI::toJsonValue(m_retention_policy_type));
    }
    return obj;
}

OAIRetentionPolicyType OAIRetentionPolicyDescription::getRetentionPolicyType() const {
    return m_retention_policy_type;
}
void OAIRetentionPolicyDescription::setRetentionPolicyType(const OAIRetentionPolicyType &retention_policy_type) {
    m_retention_policy_type = retention_policy_type;
    m_retention_policy_type_isSet = true;
}

bool OAIRetentionPolicyDescription::is_retention_policy_type_Set() const{
    return m_retention_policy_type_isSet;
}

bool OAIRetentionPolicyDescription::is_retention_policy_type_Valid() const{
    return m_retention_policy_type_isValid;
}

bool OAIRetentionPolicyDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_retention_policy_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRetentionPolicyDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_retention_policy_type_isValid && true;
}

} // namespace OpenAPI
