/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChaosEventWrapper.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChaosEventWrapper::OAIChaosEventWrapper(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChaosEventWrapper::OAIChaosEventWrapper() {
    this->initializeModel();
}

OAIChaosEventWrapper::~OAIChaosEventWrapper() {}

void OAIChaosEventWrapper::initializeModel() {

    m_chaos_event_isSet = false;
    m_chaos_event_isValid = false;
}

void OAIChaosEventWrapper::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChaosEventWrapper::fromJsonObject(QJsonObject json) {

    m_chaos_event_isValid = ::OpenAPI::fromJsonValue(m_chaos_event, json[QString("ChaosEvent")]);
    m_chaos_event_isSet = !json[QString("ChaosEvent")].isNull() && m_chaos_event_isValid;
}

QString OAIChaosEventWrapper::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChaosEventWrapper::asJsonObject() const {
    QJsonObject obj;
    if (m_chaos_event.isSet()) {
        obj.insert(QString("ChaosEvent"), ::OpenAPI::toJsonValue(m_chaos_event));
    }
    return obj;
}

OAIChaosEvent OAIChaosEventWrapper::getChaosEvent() const {
    return m_chaos_event;
}
void OAIChaosEventWrapper::setChaosEvent(const OAIChaosEvent &chaos_event) {
    m_chaos_event = chaos_event;
    m_chaos_event_isSet = true;
}

bool OAIChaosEventWrapper::is_chaos_event_Set() const{
    return m_chaos_event_isSet;
}

bool OAIChaosEventWrapper::is_chaos_event_Valid() const{
    return m_chaos_event_isValid;
}

bool OAIChaosEventWrapper::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_chaos_event.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChaosEventWrapper::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
