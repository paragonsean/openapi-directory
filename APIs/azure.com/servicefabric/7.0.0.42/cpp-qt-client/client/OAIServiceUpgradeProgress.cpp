/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceUpgradeProgress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceUpgradeProgress::OAIServiceUpgradeProgress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceUpgradeProgress::OAIServiceUpgradeProgress() {
    this->initializeModel();
}

OAIServiceUpgradeProgress::~OAIServiceUpgradeProgress() {}

void OAIServiceUpgradeProgress::initializeModel() {

    m_completed_replica_count_isSet = false;
    m_completed_replica_count_isValid = false;

    m_pending_replica_count_isSet = false;
    m_pending_replica_count_isValid = false;

    m_service_name_isSet = false;
    m_service_name_isValid = false;
}

void OAIServiceUpgradeProgress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceUpgradeProgress::fromJsonObject(QJsonObject json) {

    m_completed_replica_count_isValid = ::OpenAPI::fromJsonValue(m_completed_replica_count, json[QString("CompletedReplicaCount")]);
    m_completed_replica_count_isSet = !json[QString("CompletedReplicaCount")].isNull() && m_completed_replica_count_isValid;

    m_pending_replica_count_isValid = ::OpenAPI::fromJsonValue(m_pending_replica_count, json[QString("PendingReplicaCount")]);
    m_pending_replica_count_isSet = !json[QString("PendingReplicaCount")].isNull() && m_pending_replica_count_isValid;

    m_service_name_isValid = ::OpenAPI::fromJsonValue(m_service_name, json[QString("ServiceName")]);
    m_service_name_isSet = !json[QString("ServiceName")].isNull() && m_service_name_isValid;
}

QString OAIServiceUpgradeProgress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceUpgradeProgress::asJsonObject() const {
    QJsonObject obj;
    if (m_completed_replica_count_isSet) {
        obj.insert(QString("CompletedReplicaCount"), ::OpenAPI::toJsonValue(m_completed_replica_count));
    }
    if (m_pending_replica_count_isSet) {
        obj.insert(QString("PendingReplicaCount"), ::OpenAPI::toJsonValue(m_pending_replica_count));
    }
    if (m_service_name_isSet) {
        obj.insert(QString("ServiceName"), ::OpenAPI::toJsonValue(m_service_name));
    }
    return obj;
}

QString OAIServiceUpgradeProgress::getCompletedReplicaCount() const {
    return m_completed_replica_count;
}
void OAIServiceUpgradeProgress::setCompletedReplicaCount(const QString &completed_replica_count) {
    m_completed_replica_count = completed_replica_count;
    m_completed_replica_count_isSet = true;
}

bool OAIServiceUpgradeProgress::is_completed_replica_count_Set() const{
    return m_completed_replica_count_isSet;
}

bool OAIServiceUpgradeProgress::is_completed_replica_count_Valid() const{
    return m_completed_replica_count_isValid;
}

QString OAIServiceUpgradeProgress::getPendingReplicaCount() const {
    return m_pending_replica_count;
}
void OAIServiceUpgradeProgress::setPendingReplicaCount(const QString &pending_replica_count) {
    m_pending_replica_count = pending_replica_count;
    m_pending_replica_count_isSet = true;
}

bool OAIServiceUpgradeProgress::is_pending_replica_count_Set() const{
    return m_pending_replica_count_isSet;
}

bool OAIServiceUpgradeProgress::is_pending_replica_count_Valid() const{
    return m_pending_replica_count_isValid;
}

QString OAIServiceUpgradeProgress::getServiceName() const {
    return m_service_name;
}
void OAIServiceUpgradeProgress::setServiceName(const QString &service_name) {
    m_service_name = service_name;
    m_service_name_isSet = true;
}

bool OAIServiceUpgradeProgress::is_service_name_Set() const{
    return m_service_name_isSet;
}

bool OAIServiceUpgradeProgress::is_service_name_Valid() const{
    return m_service_name_isValid;
}

bool OAIServiceUpgradeProgress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_completed_replica_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pending_replica_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceUpgradeProgress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
