/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPartitionSchemeDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPartitionSchemeDescription::OAIPartitionSchemeDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPartitionSchemeDescription::OAIPartitionSchemeDescription() {
    this->initializeModel();
}

OAIPartitionSchemeDescription::~OAIPartitionSchemeDescription() {}

void OAIPartitionSchemeDescription::initializeModel() {

    m_partition_scheme_isSet = false;
    m_partition_scheme_isValid = false;
}

void OAIPartitionSchemeDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPartitionSchemeDescription::fromJsonObject(QJsonObject json) {

    m_partition_scheme_isValid = ::OpenAPI::fromJsonValue(m_partition_scheme, json[QString("PartitionScheme")]);
    m_partition_scheme_isSet = !json[QString("PartitionScheme")].isNull() && m_partition_scheme_isValid;
}

QString OAIPartitionSchemeDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPartitionSchemeDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_partition_scheme.isSet()) {
        obj.insert(QString("PartitionScheme"), ::OpenAPI::toJsonValue(m_partition_scheme));
    }
    return obj;
}

OAIPartitionScheme OAIPartitionSchemeDescription::getPartitionScheme() const {
    return m_partition_scheme;
}
void OAIPartitionSchemeDescription::setPartitionScheme(const OAIPartitionScheme &partition_scheme) {
    m_partition_scheme = partition_scheme;
    m_partition_scheme_isSet = true;
}

bool OAIPartitionSchemeDescription::is_partition_scheme_Set() const{
    return m_partition_scheme_isSet;
}

bool OAIPartitionSchemeDescription::is_partition_scheme_Valid() const{
    return m_partition_scheme_isValid;
}

bool OAIPartitionSchemeDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_partition_scheme.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPartitionSchemeDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_partition_scheme_isValid && true;
}

} // namespace OpenAPI
