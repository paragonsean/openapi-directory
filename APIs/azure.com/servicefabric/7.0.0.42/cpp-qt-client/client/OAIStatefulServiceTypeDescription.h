/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStatefulServiceTypeDescription.h
 *
 * Describes a stateful service type defined in the service manifest of a provisioned application type.
 */

#ifndef OAIStatefulServiceTypeDescription_H
#define OAIStatefulServiceTypeDescription_H

#include <QJsonObject>

#include "OAIServiceKind.h"
#include "OAIServiceLoadMetricDescription.h"
#include "OAIServicePlacementPolicyDescription.h"
#include "OAIServiceTypeDescription.h"
#include "OAIServiceTypeExtensionDescription.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIServiceTypeExtensionDescription;
class OAIServiceLoadMetricDescription;
class OAIServicePlacementPolicyDescription;

class OAIStatefulServiceTypeDescription : public OAIObject {
public:
    OAIStatefulServiceTypeDescription();
    OAIStatefulServiceTypeDescription(QString json);
    ~OAIStatefulServiceTypeDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isHasPersistedState() const;
    void setHasPersistedState(const bool &has_persisted_state);
    bool is_has_persisted_state_Set() const;
    bool is_has_persisted_state_Valid() const;

    QList<OAIServiceTypeExtensionDescription> getExtensions() const;
    void setExtensions(const QList<OAIServiceTypeExtensionDescription> &extensions);
    bool is_extensions_Set() const;
    bool is_extensions_Valid() const;

    bool isIsStateful() const;
    void setIsStateful(const bool &is_stateful);
    bool is_is_stateful_Set() const;
    bool is_is_stateful_Valid() const;

    OAIServiceKind getKind() const;
    void setKind(const OAIServiceKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QList<OAIServiceLoadMetricDescription> getLoadMetrics() const;
    void setLoadMetrics(const QList<OAIServiceLoadMetricDescription> &load_metrics);
    bool is_load_metrics_Set() const;
    bool is_load_metrics_Valid() const;

    QString getPlacementConstraints() const;
    void setPlacementConstraints(const QString &placement_constraints);
    bool is_placement_constraints_Set() const;
    bool is_placement_constraints_Valid() const;

    QList<OAIServicePlacementPolicyDescription> getServicePlacementPolicies() const;
    void setServicePlacementPolicies(const QList<OAIServicePlacementPolicyDescription> &service_placement_policies);
    bool is_service_placement_policies_Set() const;
    bool is_service_placement_policies_Valid() const;

    QString getServiceTypeName() const;
    void setServiceTypeName(const QString &service_type_name);
    bool is_service_type_name_Set() const;
    bool is_service_type_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_has_persisted_state;
    bool m_has_persisted_state_isSet;
    bool m_has_persisted_state_isValid;

    QList<OAIServiceTypeExtensionDescription> m_extensions;
    bool m_extensions_isSet;
    bool m_extensions_isValid;

    bool m_is_stateful;
    bool m_is_stateful_isSet;
    bool m_is_stateful_isValid;

    OAIServiceKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QList<OAIServiceLoadMetricDescription> m_load_metrics;
    bool m_load_metrics_isSet;
    bool m_load_metrics_isValid;

    QString m_placement_constraints;
    bool m_placement_constraints_isSet;
    bool m_placement_constraints_isValid;

    QList<OAIServicePlacementPolicyDescription> m_service_placement_policies;
    bool m_service_placement_policies_isSet;
    bool m_service_placement_policies_isValid;

    QString m_service_type_name;
    bool m_service_type_name_isSet;
    bool m_service_type_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStatefulServiceTypeDescription)

#endif // OAIStatefulServiceTypeDescription_H
