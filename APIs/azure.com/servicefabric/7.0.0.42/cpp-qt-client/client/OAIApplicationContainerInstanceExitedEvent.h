/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationContainerInstanceExitedEvent.h
 *
 * Container Exited event.
 */

#ifndef OAIApplicationContainerInstanceExitedEvent_H
#define OAIApplicationContainerInstanceExitedEvent_H

#include <QJsonObject>

#include "OAIApplicationEvent.h"
#include "OAIFabricEventKind.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplicationContainerInstanceExitedEvent : public OAIObject {
public:
    OAIApplicationContainerInstanceExitedEvent();
    OAIApplicationContainerInstanceExitedEvent(QString json);
    ~OAIApplicationContainerInstanceExitedEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCodePackageName() const;
    void setCodePackageName(const QString &code_package_name);
    bool is_code_package_name_Set() const;
    bool is_code_package_name_Valid() const;

    QString getContainerName() const;
    void setContainerName(const QString &container_name);
    bool is_container_name_Set() const;
    bool is_container_name_Valid() const;

    QString getEntryPointType() const;
    void setEntryPointType(const QString &entry_point_type);
    bool is_entry_point_type_Set() const;
    bool is_entry_point_type_Valid() const;

    qint64 getExitCode() const;
    void setExitCode(const qint64 &exit_code);
    bool is_exit_code_Set() const;
    bool is_exit_code_Valid() const;

    QString getHostId() const;
    void setHostId(const QString &host_id);
    bool is_host_id_Set() const;
    bool is_host_id_Valid() const;

    QString getImageName() const;
    void setImageName(const QString &image_name);
    bool is_image_name_Set() const;
    bool is_image_name_Valid() const;

    bool isIsExclusive() const;
    void setIsExclusive(const bool &is_exclusive);
    bool is_is_exclusive_Set() const;
    bool is_is_exclusive_Valid() const;

    QString getServiceName() const;
    void setServiceName(const QString &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    QString getServicePackageActivationId() const;
    void setServicePackageActivationId(const QString &service_package_activation_id);
    bool is_service_package_activation_id_Set() const;
    bool is_service_package_activation_id_Valid() const;

    QString getServicePackageName() const;
    void setServicePackageName(const QString &service_package_name);
    bool is_service_package_name_Set() const;
    bool is_service_package_name_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    bool isUnexpectedTermination() const;
    void setUnexpectedTermination(const bool &unexpected_termination);
    bool is_unexpected_termination_Set() const;
    bool is_unexpected_termination_Valid() const;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getEventInstanceId() const;
    void setEventInstanceId(const QString &event_instance_id);
    bool is_event_instance_id_Set() const;
    bool is_event_instance_id_Valid() const;

    bool isHasCorrelatedEvents() const;
    void setHasCorrelatedEvents(const bool &has_correlated_events);
    bool is_has_correlated_events_Set() const;
    bool is_has_correlated_events_Valid() const;

    OAIFabricEventKind getKind() const;
    void setKind(const OAIFabricEventKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QDateTime getTimeStamp() const;
    void setTimeStamp(const QDateTime &time_stamp);
    bool is_time_stamp_Set() const;
    bool is_time_stamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code_package_name;
    bool m_code_package_name_isSet;
    bool m_code_package_name_isValid;

    QString m_container_name;
    bool m_container_name_isSet;
    bool m_container_name_isValid;

    QString m_entry_point_type;
    bool m_entry_point_type_isSet;
    bool m_entry_point_type_isValid;

    qint64 m_exit_code;
    bool m_exit_code_isSet;
    bool m_exit_code_isValid;

    QString m_host_id;
    bool m_host_id_isSet;
    bool m_host_id_isValid;

    QString m_image_name;
    bool m_image_name_isSet;
    bool m_image_name_isValid;

    bool m_is_exclusive;
    bool m_is_exclusive_isSet;
    bool m_is_exclusive_isValid;

    QString m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;

    QString m_service_package_activation_id;
    bool m_service_package_activation_id_isSet;
    bool m_service_package_activation_id_isValid;

    QString m_service_package_name;
    bool m_service_package_name_isSet;
    bool m_service_package_name_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    bool m_unexpected_termination;
    bool m_unexpected_termination_isSet;
    bool m_unexpected_termination_isValid;

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_event_instance_id;
    bool m_event_instance_id_isSet;
    bool m_event_instance_id_isValid;

    bool m_has_correlated_events;
    bool m_has_correlated_events_isSet;
    bool m_has_correlated_events_isValid;

    OAIFabricEventKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QDateTime m_time_stamp;
    bool m_time_stamp_isSet;
    bool m_time_stamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationContainerInstanceExitedEvent)

#endif // OAIApplicationContainerInstanceExitedEvent_H
