/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterUpgradeStartedEvent.h
 *
 * Cluster Upgrade Started event.
 */

#ifndef OAIClusterUpgradeStartedEvent_H
#define OAIClusterUpgradeStartedEvent_H

#include <QJsonObject>

#include "OAIClusterEvent.h"
#include "OAIFabricEventKind.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIClusterUpgradeStartedEvent : public OAIObject {
public:
    OAIClusterUpgradeStartedEvent();
    OAIClusterUpgradeStartedEvent(QString json);
    ~OAIClusterUpgradeStartedEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrentClusterVersion() const;
    void setCurrentClusterVersion(const QString &current_cluster_version);
    bool is_current_cluster_version_Set() const;
    bool is_current_cluster_version_Valid() const;

    QString getFailureAction() const;
    void setFailureAction(const QString &failure_action);
    bool is_failure_action_Set() const;
    bool is_failure_action_Valid() const;

    QString getRollingUpgradeMode() const;
    void setRollingUpgradeMode(const QString &rolling_upgrade_mode);
    bool is_rolling_upgrade_mode_Set() const;
    bool is_rolling_upgrade_mode_Valid() const;

    QString getTargetClusterVersion() const;
    void setTargetClusterVersion(const QString &target_cluster_version);
    bool is_target_cluster_version_Set() const;
    bool is_target_cluster_version_Valid() const;

    QString getUpgradeType() const;
    void setUpgradeType(const QString &upgrade_type);
    bool is_upgrade_type_Set() const;
    bool is_upgrade_type_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getEventInstanceId() const;
    void setEventInstanceId(const QString &event_instance_id);
    bool is_event_instance_id_Set() const;
    bool is_event_instance_id_Valid() const;

    bool isHasCorrelatedEvents() const;
    void setHasCorrelatedEvents(const bool &has_correlated_events);
    bool is_has_correlated_events_Set() const;
    bool is_has_correlated_events_Valid() const;

    OAIFabricEventKind getKind() const;
    void setKind(const OAIFabricEventKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QDateTime getTimeStamp() const;
    void setTimeStamp(const QDateTime &time_stamp);
    bool is_time_stamp_Set() const;
    bool is_time_stamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_current_cluster_version;
    bool m_current_cluster_version_isSet;
    bool m_current_cluster_version_isValid;

    QString m_failure_action;
    bool m_failure_action_isSet;
    bool m_failure_action_isValid;

    QString m_rolling_upgrade_mode;
    bool m_rolling_upgrade_mode_isSet;
    bool m_rolling_upgrade_mode_isValid;

    QString m_target_cluster_version;
    bool m_target_cluster_version_isSet;
    bool m_target_cluster_version_isValid;

    QString m_upgrade_type;
    bool m_upgrade_type_isSet;
    bool m_upgrade_type_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_event_instance_id;
    bool m_event_instance_id_isSet;
    bool m_event_instance_id_isValid;

    bool m_has_correlated_events;
    bool m_has_correlated_events_isSet;
    bool m_has_correlated_events_isValid;

    OAIFabricEventKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QDateTime m_time_stamp;
    bool m_time_stamp_isSet;
    bool m_time_stamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterUpgradeStartedEvent)

#endif // OAIClusterUpgradeStartedEvent_H
