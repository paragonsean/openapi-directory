/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterLoadInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterLoadInfo::OAIClusterLoadInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterLoadInfo::OAIClusterLoadInfo() {
    this->initializeModel();
}

OAIClusterLoadInfo::~OAIClusterLoadInfo() {}

void OAIClusterLoadInfo::initializeModel() {

    m_last_balancing_end_time_utc_isSet = false;
    m_last_balancing_end_time_utc_isValid = false;

    m_last_balancing_start_time_utc_isSet = false;
    m_last_balancing_start_time_utc_isValid = false;

    m_load_metric_information_isSet = false;
    m_load_metric_information_isValid = false;
}

void OAIClusterLoadInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterLoadInfo::fromJsonObject(QJsonObject json) {

    m_last_balancing_end_time_utc_isValid = ::OpenAPI::fromJsonValue(m_last_balancing_end_time_utc, json[QString("LastBalancingEndTimeUtc")]);
    m_last_balancing_end_time_utc_isSet = !json[QString("LastBalancingEndTimeUtc")].isNull() && m_last_balancing_end_time_utc_isValid;

    m_last_balancing_start_time_utc_isValid = ::OpenAPI::fromJsonValue(m_last_balancing_start_time_utc, json[QString("LastBalancingStartTimeUtc")]);
    m_last_balancing_start_time_utc_isSet = !json[QString("LastBalancingStartTimeUtc")].isNull() && m_last_balancing_start_time_utc_isValid;

    m_load_metric_information_isValid = ::OpenAPI::fromJsonValue(m_load_metric_information, json[QString("LoadMetricInformation")]);
    m_load_metric_information_isSet = !json[QString("LoadMetricInformation")].isNull() && m_load_metric_information_isValid;
}

QString OAIClusterLoadInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterLoadInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_last_balancing_end_time_utc_isSet) {
        obj.insert(QString("LastBalancingEndTimeUtc"), ::OpenAPI::toJsonValue(m_last_balancing_end_time_utc));
    }
    if (m_last_balancing_start_time_utc_isSet) {
        obj.insert(QString("LastBalancingStartTimeUtc"), ::OpenAPI::toJsonValue(m_last_balancing_start_time_utc));
    }
    if (m_load_metric_information.size() > 0) {
        obj.insert(QString("LoadMetricInformation"), ::OpenAPI::toJsonValue(m_load_metric_information));
    }
    return obj;
}

QDateTime OAIClusterLoadInfo::getLastBalancingEndTimeUtc() const {
    return m_last_balancing_end_time_utc;
}
void OAIClusterLoadInfo::setLastBalancingEndTimeUtc(const QDateTime &last_balancing_end_time_utc) {
    m_last_balancing_end_time_utc = last_balancing_end_time_utc;
    m_last_balancing_end_time_utc_isSet = true;
}

bool OAIClusterLoadInfo::is_last_balancing_end_time_utc_Set() const{
    return m_last_balancing_end_time_utc_isSet;
}

bool OAIClusterLoadInfo::is_last_balancing_end_time_utc_Valid() const{
    return m_last_balancing_end_time_utc_isValid;
}

QDateTime OAIClusterLoadInfo::getLastBalancingStartTimeUtc() const {
    return m_last_balancing_start_time_utc;
}
void OAIClusterLoadInfo::setLastBalancingStartTimeUtc(const QDateTime &last_balancing_start_time_utc) {
    m_last_balancing_start_time_utc = last_balancing_start_time_utc;
    m_last_balancing_start_time_utc_isSet = true;
}

bool OAIClusterLoadInfo::is_last_balancing_start_time_utc_Set() const{
    return m_last_balancing_start_time_utc_isSet;
}

bool OAIClusterLoadInfo::is_last_balancing_start_time_utc_Valid() const{
    return m_last_balancing_start_time_utc_isValid;
}

QList<OAILoadMetricInformation> OAIClusterLoadInfo::getLoadMetricInformation() const {
    return m_load_metric_information;
}
void OAIClusterLoadInfo::setLoadMetricInformation(const QList<OAILoadMetricInformation> &load_metric_information) {
    m_load_metric_information = load_metric_information;
    m_load_metric_information_isSet = true;
}

bool OAIClusterLoadInfo::is_load_metric_information_Set() const{
    return m_load_metric_information_isSet;
}

bool OAIClusterLoadInfo::is_load_metric_information_Valid() const{
    return m_load_metric_information_isValid;
}

bool OAIClusterLoadInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_balancing_end_time_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_balancing_start_time_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_load_metric_information.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterLoadInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
