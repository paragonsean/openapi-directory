/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResolvedServicePartition.h
 *
 * Information about a service partition and its associated endpoints.
 */

#ifndef OAIResolvedServicePartition_H
#define OAIResolvedServicePartition_H

#include <QJsonObject>

#include "OAIPartitionInformation.h"
#include "OAIResolvedServiceEndpoint.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResolvedServiceEndpoint;
class OAIPartitionInformation;

class OAIResolvedServicePartition : public OAIObject {
public:
    OAIResolvedServicePartition();
    OAIResolvedServicePartition(QString json);
    ~OAIResolvedServicePartition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIResolvedServiceEndpoint> getEndpoints() const;
    void setEndpoints(const QList<OAIResolvedServiceEndpoint> &endpoints);
    bool is_endpoints_Set() const;
    bool is_endpoints_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIPartitionInformation getPartitionInformation() const;
    void setPartitionInformation(const OAIPartitionInformation &partition_information);
    bool is_partition_information_Set() const;
    bool is_partition_information_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIResolvedServiceEndpoint> m_endpoints;
    bool m_endpoints_isSet;
    bool m_endpoints_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIPartitionInformation m_partition_information;
    bool m_partition_information_isSet;
    bool m_partition_information_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResolvedServicePartition)

#endif // OAIResolvedServicePartition_H
