/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContainerApiResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContainerApiResponse::OAIContainerApiResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContainerApiResponse::OAIContainerApiResponse() {
    this->initializeModel();
}

OAIContainerApiResponse::~OAIContainerApiResponse() {}

void OAIContainerApiResponse::initializeModel() {

    m_container_api_result_isSet = false;
    m_container_api_result_isValid = false;
}

void OAIContainerApiResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContainerApiResponse::fromJsonObject(QJsonObject json) {

    m_container_api_result_isValid = ::OpenAPI::fromJsonValue(m_container_api_result, json[QString("ContainerApiResult")]);
    m_container_api_result_isSet = !json[QString("ContainerApiResult")].isNull() && m_container_api_result_isValid;
}

QString OAIContainerApiResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContainerApiResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_container_api_result.isSet()) {
        obj.insert(QString("ContainerApiResult"), ::OpenAPI::toJsonValue(m_container_api_result));
    }
    return obj;
}

OAIContainerApiResult OAIContainerApiResponse::getContainerApiResult() const {
    return m_container_api_result;
}
void OAIContainerApiResponse::setContainerApiResult(const OAIContainerApiResult &container_api_result) {
    m_container_api_result = container_api_result;
    m_container_api_result_isSet = true;
}

bool OAIContainerApiResponse::is_container_api_result_Set() const{
    return m_container_api_result_isSet;
}

bool OAIContainerApiResponse::is_container_api_result_Valid() const{
    return m_container_api_result_isValid;
}

bool OAIContainerApiResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_container_api_result.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContainerApiResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_container_api_result_isValid && true;
}

} // namespace OpenAPI
