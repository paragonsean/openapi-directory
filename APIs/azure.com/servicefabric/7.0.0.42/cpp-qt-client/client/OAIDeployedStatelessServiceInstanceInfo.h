/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeployedStatelessServiceInstanceInfo.h
 *
 * Information about a stateless service instance deployed on a node.
 */

#ifndef OAIDeployedStatelessServiceInstanceInfo_H
#define OAIDeployedStatelessServiceInstanceInfo_H

#include <QJsonObject>

#include "OAIDeployedServiceReplicaInfo.h"
#include "OAIReplicaStatus.h"
#include "OAIServiceKind.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeployedStatelessServiceInstanceInfo : public OAIObject {
public:
    OAIDeployedStatelessServiceInstanceInfo();
    OAIDeployedStatelessServiceInstanceInfo(QString json);
    ~OAIDeployedStatelessServiceInstanceInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getCodePackageName() const;
    void setCodePackageName(const QString &code_package_name);
    bool is_code_package_name_Set() const;
    bool is_code_package_name_Valid() const;

    QString getHostProcessId() const;
    void setHostProcessId(const QString &host_process_id);
    bool is_host_process_id_Set() const;
    bool is_host_process_id_Valid() const;

    QString getPartitionId() const;
    void setPartitionId(const QString &partition_id);
    bool is_partition_id_Set() const;
    bool is_partition_id_Valid() const;

    OAIReplicaStatus getReplicaStatus() const;
    void setReplicaStatus(const OAIReplicaStatus &replica_status);
    bool is_replica_status_Set() const;
    bool is_replica_status_Valid() const;

    OAIServiceKind getServiceKind() const;
    void setServiceKind(const OAIServiceKind &service_kind);
    bool is_service_kind_Set() const;
    bool is_service_kind_Valid() const;

    QString getServiceManifestName() const;
    void setServiceManifestName(const QString &service_manifest_name);
    bool is_service_manifest_name_Set() const;
    bool is_service_manifest_name_Valid() const;

    QString getServiceName() const;
    void setServiceName(const QString &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    QString getServicePackageActivationId() const;
    void setServicePackageActivationId(const QString &service_package_activation_id);
    bool is_service_package_activation_id_Set() const;
    bool is_service_package_activation_id_Valid() const;

    QString getServiceTypeName() const;
    void setServiceTypeName(const QString &service_type_name);
    bool is_service_type_name_Set() const;
    bool is_service_type_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_code_package_name;
    bool m_code_package_name_isSet;
    bool m_code_package_name_isValid;

    QString m_host_process_id;
    bool m_host_process_id_isSet;
    bool m_host_process_id_isValid;

    QString m_partition_id;
    bool m_partition_id_isSet;
    bool m_partition_id_isValid;

    OAIReplicaStatus m_replica_status;
    bool m_replica_status_isSet;
    bool m_replica_status_isValid;

    OAIServiceKind m_service_kind;
    bool m_service_kind_isSet;
    bool m_service_kind_isValid;

    QString m_service_manifest_name;
    bool m_service_manifest_name_isSet;
    bool m_service_manifest_name_isValid;

    QString m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;

    QString m_service_package_activation_id;
    bool m_service_package_activation_id_isSet;
    bool m_service_package_activation_id_isValid;

    QString m_service_type_name;
    bool m_service_type_name_isSet;
    bool m_service_type_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeployedStatelessServiceInstanceInfo)

#endif // OAIDeployedStatelessServiceInstanceInfo_H
