/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScalingPolicyDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScalingPolicyDescription::OAIScalingPolicyDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScalingPolicyDescription::OAIScalingPolicyDescription() {
    this->initializeModel();
}

OAIScalingPolicyDescription::~OAIScalingPolicyDescription() {}

void OAIScalingPolicyDescription::initializeModel() {

    m_scaling_mechanism_isSet = false;
    m_scaling_mechanism_isValid = false;

    m_scaling_trigger_isSet = false;
    m_scaling_trigger_isValid = false;
}

void OAIScalingPolicyDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScalingPolicyDescription::fromJsonObject(QJsonObject json) {

    m_scaling_mechanism_isValid = ::OpenAPI::fromJsonValue(m_scaling_mechanism, json[QString("ScalingMechanism")]);
    m_scaling_mechanism_isSet = !json[QString("ScalingMechanism")].isNull() && m_scaling_mechanism_isValid;

    m_scaling_trigger_isValid = ::OpenAPI::fromJsonValue(m_scaling_trigger, json[QString("ScalingTrigger")]);
    m_scaling_trigger_isSet = !json[QString("ScalingTrigger")].isNull() && m_scaling_trigger_isValid;
}

QString OAIScalingPolicyDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScalingPolicyDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_scaling_mechanism.isSet()) {
        obj.insert(QString("ScalingMechanism"), ::OpenAPI::toJsonValue(m_scaling_mechanism));
    }
    if (m_scaling_trigger.isSet()) {
        obj.insert(QString("ScalingTrigger"), ::OpenAPI::toJsonValue(m_scaling_trigger));
    }
    return obj;
}

OAIScalingMechanismDescription OAIScalingPolicyDescription::getScalingMechanism() const {
    return m_scaling_mechanism;
}
void OAIScalingPolicyDescription::setScalingMechanism(const OAIScalingMechanismDescription &scaling_mechanism) {
    m_scaling_mechanism = scaling_mechanism;
    m_scaling_mechanism_isSet = true;
}

bool OAIScalingPolicyDescription::is_scaling_mechanism_Set() const{
    return m_scaling_mechanism_isSet;
}

bool OAIScalingPolicyDescription::is_scaling_mechanism_Valid() const{
    return m_scaling_mechanism_isValid;
}

OAIScalingTriggerDescription OAIScalingPolicyDescription::getScalingTrigger() const {
    return m_scaling_trigger;
}
void OAIScalingPolicyDescription::setScalingTrigger(const OAIScalingTriggerDescription &scaling_trigger) {
    m_scaling_trigger = scaling_trigger;
    m_scaling_trigger_isSet = true;
}

bool OAIScalingPolicyDescription::is_scaling_trigger_Set() const{
    return m_scaling_trigger_isSet;
}

bool OAIScalingPolicyDescription::is_scaling_trigger_Valid() const{
    return m_scaling_trigger_isValid;
}

bool OAIScalingPolicyDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scaling_mechanism.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scaling_trigger.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScalingPolicyDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_scaling_mechanism_isValid && m_scaling_trigger_isValid && true;
}

} // namespace OpenAPI
