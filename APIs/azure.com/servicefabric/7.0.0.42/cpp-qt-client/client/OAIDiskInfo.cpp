/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiskInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiskInfo::OAIDiskInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiskInfo::OAIDiskInfo() {
    this->initializeModel();
}

OAIDiskInfo::~OAIDiskInfo() {}

void OAIDiskInfo::initializeModel() {

    m_available_space_isSet = false;
    m_available_space_isValid = false;

    m_capacity_isSet = false;
    m_capacity_isValid = false;
}

void OAIDiskInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiskInfo::fromJsonObject(QJsonObject json) {

    m_available_space_isValid = ::OpenAPI::fromJsonValue(m_available_space, json[QString("AvailableSpace")]);
    m_available_space_isSet = !json[QString("AvailableSpace")].isNull() && m_available_space_isValid;

    m_capacity_isValid = ::OpenAPI::fromJsonValue(m_capacity, json[QString("Capacity")]);
    m_capacity_isSet = !json[QString("Capacity")].isNull() && m_capacity_isValid;
}

QString OAIDiskInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiskInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_available_space_isSet) {
        obj.insert(QString("AvailableSpace"), ::OpenAPI::toJsonValue(m_available_space));
    }
    if (m_capacity_isSet) {
        obj.insert(QString("Capacity"), ::OpenAPI::toJsonValue(m_capacity));
    }
    return obj;
}

QString OAIDiskInfo::getAvailableSpace() const {
    return m_available_space;
}
void OAIDiskInfo::setAvailableSpace(const QString &available_space) {
    m_available_space = available_space;
    m_available_space_isSet = true;
}

bool OAIDiskInfo::is_available_space_Set() const{
    return m_available_space_isSet;
}

bool OAIDiskInfo::is_available_space_Valid() const{
    return m_available_space_isValid;
}

QString OAIDiskInfo::getCapacity() const {
    return m_capacity;
}
void OAIDiskInfo::setCapacity(const QString &capacity) {
    m_capacity = capacity;
    m_capacity_isSet = true;
}

bool OAIDiskInfo::is_capacity_Set() const{
    return m_capacity_isSet;
}

bool OAIDiskInfo::is_capacity_Valid() const{
    return m_capacity_isValid;
}

bool OAIDiskInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_available_space_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_capacity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiskInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
