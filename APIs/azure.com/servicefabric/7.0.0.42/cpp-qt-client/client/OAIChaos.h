/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChaos.h
 *
 * Contains a description of Chaos.
 */

#ifndef OAIChaos_H
#define OAIChaos_H

#include <QJsonObject>

#include "OAIChaosParameters.h"
#include "OAIChaosScheduleStatus.h"
#include "OAIChaosStatus.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChaosParameters;

class OAIChaos : public OAIObject {
public:
    OAIChaos();
    OAIChaos(QString json);
    ~OAIChaos() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChaosParameters getChaosParameters() const;
    void setChaosParameters(const OAIChaosParameters &chaos_parameters);
    bool is_chaos_parameters_Set() const;
    bool is_chaos_parameters_Valid() const;

    OAIChaosScheduleStatus getScheduleStatus() const;
    void setScheduleStatus(const OAIChaosScheduleStatus &schedule_status);
    bool is_schedule_status_Set() const;
    bool is_schedule_status_Valid() const;

    OAIChaosStatus getStatus() const;
    void setStatus(const OAIChaosStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChaosParameters m_chaos_parameters;
    bool m_chaos_parameters_isSet;
    bool m_chaos_parameters_isValid;

    OAIChaosScheduleStatus m_schedule_status;
    bool m_schedule_status_isSet;
    bool m_schedule_status_isValid;

    OAIChaosStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChaos)

#endif // OAIChaos_H
