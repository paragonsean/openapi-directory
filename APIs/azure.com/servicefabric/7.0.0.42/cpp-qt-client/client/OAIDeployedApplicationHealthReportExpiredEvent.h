/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeployedApplicationHealthReportExpiredEvent.h
 *
 * Deployed Application Health Report Expired event.
 */

#ifndef OAIDeployedApplicationHealthReportExpiredEvent_H
#define OAIDeployedApplicationHealthReportExpiredEvent_H

#include <QJsonObject>

#include "OAIApplicationEvent.h"
#include "OAIFabricEventKind.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeployedApplicationHealthReportExpiredEvent : public OAIObject {
public:
    OAIDeployedApplicationHealthReportExpiredEvent();
    OAIDeployedApplicationHealthReportExpiredEvent(QString json);
    ~OAIDeployedApplicationHealthReportExpiredEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getApplicationInstanceId() const;
    void setApplicationInstanceId(const qint64 &application_instance_id);
    bool is_application_instance_id_Set() const;
    bool is_application_instance_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getHealthState() const;
    void setHealthState(const QString &health_state);
    bool is_health_state_Set() const;
    bool is_health_state_Valid() const;

    QString getNodeName() const;
    void setNodeName(const QString &node_name);
    bool is_node_name_Set() const;
    bool is_node_name_Valid() const;

    QString getProperty() const;
    void setProperty(const QString &property);
    bool is_property_Set() const;
    bool is_property_Valid() const;

    bool isRemoveWhenExpired() const;
    void setRemoveWhenExpired(const bool &remove_when_expired);
    bool is_remove_when_expired_Set() const;
    bool is_remove_when_expired_Valid() const;

    qint64 getSequenceNumber() const;
    void setSequenceNumber(const qint64 &sequence_number);
    bool is_sequence_number_Set() const;
    bool is_sequence_number_Valid() const;

    QString getSourceId() const;
    void setSourceId(const QString &source_id);
    bool is_source_id_Set() const;
    bool is_source_id_Valid() const;

    QDateTime getSourceUtcTimestamp() const;
    void setSourceUtcTimestamp(const QDateTime &source_utc_timestamp);
    bool is_source_utc_timestamp_Set() const;
    bool is_source_utc_timestamp_Valid() const;

    qint64 getTimeToLiveMs() const;
    void setTimeToLiveMs(const qint64 &time_to_live_ms);
    bool is_time_to_live_ms_Set() const;
    bool is_time_to_live_ms_Valid() const;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getEventInstanceId() const;
    void setEventInstanceId(const QString &event_instance_id);
    bool is_event_instance_id_Set() const;
    bool is_event_instance_id_Valid() const;

    bool isHasCorrelatedEvents() const;
    void setHasCorrelatedEvents(const bool &has_correlated_events);
    bool is_has_correlated_events_Set() const;
    bool is_has_correlated_events_Valid() const;

    OAIFabricEventKind getKind() const;
    void setKind(const OAIFabricEventKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QDateTime getTimeStamp() const;
    void setTimeStamp(const QDateTime &time_stamp);
    bool is_time_stamp_Set() const;
    bool is_time_stamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_application_instance_id;
    bool m_application_instance_id_isSet;
    bool m_application_instance_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_health_state;
    bool m_health_state_isSet;
    bool m_health_state_isValid;

    QString m_node_name;
    bool m_node_name_isSet;
    bool m_node_name_isValid;

    QString m_property;
    bool m_property_isSet;
    bool m_property_isValid;

    bool m_remove_when_expired;
    bool m_remove_when_expired_isSet;
    bool m_remove_when_expired_isValid;

    qint64 m_sequence_number;
    bool m_sequence_number_isSet;
    bool m_sequence_number_isValid;

    QString m_source_id;
    bool m_source_id_isSet;
    bool m_source_id_isValid;

    QDateTime m_source_utc_timestamp;
    bool m_source_utc_timestamp_isSet;
    bool m_source_utc_timestamp_isValid;

    qint64 m_time_to_live_ms;
    bool m_time_to_live_ms_isSet;
    bool m_time_to_live_ms_isValid;

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_event_instance_id;
    bool m_event_instance_id_isSet;
    bool m_event_instance_id_isValid;

    bool m_has_correlated_events;
    bool m_has_correlated_events_isSet;
    bool m_has_correlated_events_isValid;

    OAIFabricEventKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QDateTime m_time_stamp;
    bool m_time_stamp_isSet;
    bool m_time_stamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeployedApplicationHealthReportExpiredEvent)

#endif // OAIDeployedApplicationHealthReportExpiredEvent_H
