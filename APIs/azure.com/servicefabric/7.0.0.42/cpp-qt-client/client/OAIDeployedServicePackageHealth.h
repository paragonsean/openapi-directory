/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeployedServicePackageHealth.h
 *
 * Information about the health of a service package for a specific application deployed on a Service Fabric node.
 */

#ifndef OAIDeployedServicePackageHealth_H
#define OAIDeployedServicePackageHealth_H

#include <QJsonObject>

#include "OAIHealthEvaluationWrapper.h"
#include "OAIHealthEvent.h"
#include "OAIHealthState.h"
#include "OAIHealthStatistics.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHealthEvent;
class OAIHealthStatistics;
class OAIHealthEvaluationWrapper;

class OAIDeployedServicePackageHealth : public OAIObject {
public:
    OAIDeployedServicePackageHealth();
    OAIDeployedServicePackageHealth(QString json);
    ~OAIDeployedServicePackageHealth() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    QString getNodeName() const;
    void setNodeName(const QString &node_name);
    bool is_node_name_Set() const;
    bool is_node_name_Valid() const;

    QString getServiceManifestName() const;
    void setServiceManifestName(const QString &service_manifest_name);
    bool is_service_manifest_name_Set() const;
    bool is_service_manifest_name_Valid() const;

    OAIHealthState getAggregatedHealthState() const;
    void setAggregatedHealthState(const OAIHealthState &aggregated_health_state);
    bool is_aggregated_health_state_Set() const;
    bool is_aggregated_health_state_Valid() const;

    QList<OAIHealthEvent> getHealthEvents() const;
    void setHealthEvents(const QList<OAIHealthEvent> &health_events);
    bool is_health_events_Set() const;
    bool is_health_events_Valid() const;

    OAIHealthStatistics getHealthStatistics() const;
    void setHealthStatistics(const OAIHealthStatistics &health_statistics);
    bool is_health_statistics_Set() const;
    bool is_health_statistics_Valid() const;

    QList<OAIHealthEvaluationWrapper> getUnhealthyEvaluations() const;
    void setUnhealthyEvaluations(const QList<OAIHealthEvaluationWrapper> &unhealthy_evaluations);
    bool is_unhealthy_evaluations_Set() const;
    bool is_unhealthy_evaluations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    QString m_node_name;
    bool m_node_name_isSet;
    bool m_node_name_isValid;

    QString m_service_manifest_name;
    bool m_service_manifest_name_isSet;
    bool m_service_manifest_name_isValid;

    OAIHealthState m_aggregated_health_state;
    bool m_aggregated_health_state_isSet;
    bool m_aggregated_health_state_isValid;

    QList<OAIHealthEvent> m_health_events;
    bool m_health_events_isSet;
    bool m_health_events_isValid;

    OAIHealthStatistics m_health_statistics;
    bool m_health_statistics_isSet;
    bool m_health_statistics_isValid;

    QList<OAIHealthEvaluationWrapper> m_unhealthy_evaluations;
    bool m_unhealthy_evaluations_isSet;
    bool m_unhealthy_evaluations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeployedServicePackageHealth)

#endif // OAIDeployedServicePackageHealth_H
