/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHttpRouteConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHttpRouteConfig::OAIHttpRouteConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHttpRouteConfig::OAIHttpRouteConfig() {
    this->initializeModel();
}

OAIHttpRouteConfig::~OAIHttpRouteConfig() {}

void OAIHttpRouteConfig::initializeModel() {

    m_destination_isSet = false;
    m_destination_isValid = false;

    m_match_isSet = false;
    m_match_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIHttpRouteConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHttpRouteConfig::fromJsonObject(QJsonObject json) {

    m_destination_isValid = ::OpenAPI::fromJsonValue(m_destination, json[QString("destination")]);
    m_destination_isSet = !json[QString("destination")].isNull() && m_destination_isValid;

    m_match_isValid = ::OpenAPI::fromJsonValue(m_match, json[QString("match")]);
    m_match_isSet = !json[QString("match")].isNull() && m_match_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIHttpRouteConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHttpRouteConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_destination.isSet()) {
        obj.insert(QString("destination"), ::OpenAPI::toJsonValue(m_destination));
    }
    if (m_match.isSet()) {
        obj.insert(QString("match"), ::OpenAPI::toJsonValue(m_match));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIGatewayDestination OAIHttpRouteConfig::getDestination() const {
    return m_destination;
}
void OAIHttpRouteConfig::setDestination(const OAIGatewayDestination &destination) {
    m_destination = destination;
    m_destination_isSet = true;
}

bool OAIHttpRouteConfig::is_destination_Set() const{
    return m_destination_isSet;
}

bool OAIHttpRouteConfig::is_destination_Valid() const{
    return m_destination_isValid;
}

OAIHttpRouteMatchRule OAIHttpRouteConfig::getMatch() const {
    return m_match;
}
void OAIHttpRouteConfig::setMatch(const OAIHttpRouteMatchRule &match) {
    m_match = match;
    m_match_isSet = true;
}

bool OAIHttpRouteConfig::is_match_Set() const{
    return m_match_isSet;
}

bool OAIHttpRouteConfig::is_match_Valid() const{
    return m_match_isValid;
}

QString OAIHttpRouteConfig::getName() const {
    return m_name;
}
void OAIHttpRouteConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIHttpRouteConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIHttpRouteConfig::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIHttpRouteConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_match.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHttpRouteConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_destination_isValid && m_match_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
