/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPartitionHealthStateChunk.h
 *
 * Represents the health state chunk of a partition, which contains the partition ID, its aggregated health state and any replicas that respect the filters in the cluster health chunk query description.
 */

#ifndef OAIPartitionHealthStateChunk_H
#define OAIPartitionHealthStateChunk_H

#include <QJsonObject>

#include "OAIHealthState.h"
#include "OAIReplicaHealthStateChunkList.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReplicaHealthStateChunkList;

class OAIPartitionHealthStateChunk : public OAIObject {
public:
    OAIPartitionHealthStateChunk();
    OAIPartitionHealthStateChunk(QString json);
    ~OAIPartitionHealthStateChunk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPartitionId() const;
    void setPartitionId(const QString &partition_id);
    bool is_partition_id_Set() const;
    bool is_partition_id_Valid() const;

    OAIReplicaHealthStateChunkList getReplicaHealthStateChunks() const;
    void setReplicaHealthStateChunks(const OAIReplicaHealthStateChunkList &replica_health_state_chunks);
    bool is_replica_health_state_chunks_Set() const;
    bool is_replica_health_state_chunks_Valid() const;

    OAIHealthState getHealthState() const;
    void setHealthState(const OAIHealthState &health_state);
    bool is_health_state_Set() const;
    bool is_health_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_partition_id;
    bool m_partition_id_isSet;
    bool m_partition_id_isValid;

    OAIReplicaHealthStateChunkList m_replica_health_state_chunks;
    bool m_replica_health_state_chunks_isSet;
    bool m_replica_health_state_chunks_isValid;

    OAIHealthState m_health_state;
    bool m_health_state_isSet;
    bool m_health_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPartitionHealthStateChunk)

#endif // OAIPartitionHealthStateChunk_H
