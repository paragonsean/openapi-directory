/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceReplicaDescription.h
 *
 * Describes a replica of a service resource.
 */

#ifndef OAIServiceReplicaDescription_H
#define OAIServiceReplicaDescription_H

#include <QJsonObject>

#include "OAIContainerCodePackageProperties.h"
#include "OAIDiagnosticsRef.h"
#include "OAINetworkRef.h"
#include "OAIOperatingSystemType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContainerCodePackageProperties;
class OAIDiagnosticsRef;
class OAINetworkRef;

class OAIServiceReplicaDescription : public OAIObject {
public:
    OAIServiceReplicaDescription();
    OAIServiceReplicaDescription(QString json);
    ~OAIServiceReplicaDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReplicaName() const;
    void setReplicaName(const QString &replica_name);
    bool is_replica_name_Set() const;
    bool is_replica_name_Valid() const;

    QList<OAIContainerCodePackageProperties> getCodePackages() const;
    void setCodePackages(const QList<OAIContainerCodePackageProperties> &code_packages);
    bool is_code_packages_Set() const;
    bool is_code_packages_Valid() const;

    OAIDiagnosticsRef getDiagnostics() const;
    void setDiagnostics(const OAIDiagnosticsRef &diagnostics);
    bool is_diagnostics_Set() const;
    bool is_diagnostics_Valid() const;

    QList<OAINetworkRef> getNetworkRefs() const;
    void setNetworkRefs(const QList<OAINetworkRef> &network_refs);
    bool is_network_refs_Set() const;
    bool is_network_refs_Valid() const;

    OAIOperatingSystemType getOsType() const;
    void setOsType(const OAIOperatingSystemType &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_replica_name;
    bool m_replica_name_isSet;
    bool m_replica_name_isValid;

    QList<OAIContainerCodePackageProperties> m_code_packages;
    bool m_code_packages_isSet;
    bool m_code_packages_isValid;

    OAIDiagnosticsRef m_diagnostics;
    bool m_diagnostics_isSet;
    bool m_diagnostics_isValid;

    QList<OAINetworkRef> m_network_refs;
    bool m_network_refs_isSet;
    bool m_network_refs_isValid;

    OAIOperatingSystemType m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceReplicaDescription)

#endif // OAIServiceReplicaDescription_H
