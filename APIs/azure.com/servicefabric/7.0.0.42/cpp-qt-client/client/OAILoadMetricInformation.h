/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoadMetricInformation.h
 *
 * Represents data structure that contains load information for a certain metric in a cluster.
 */

#ifndef OAILoadMetricInformation_H
#define OAILoadMetricInformation_H

#include <QJsonObject>

#include "OAINodeId.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINodeId;

class OAILoadMetricInformation : public OAIObject {
public:
    OAILoadMetricInformation();
    OAILoadMetricInformation(QString json);
    ~OAILoadMetricInformation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getActivityThreshold() const;
    void setActivityThreshold(const QString &activity_threshold);
    bool is_activity_threshold_Set() const;
    bool is_activity_threshold_Valid() const;

    QString getBalancingThreshold() const;
    void setBalancingThreshold(const QString &balancing_threshold);
    bool is_balancing_threshold_Set() const;
    bool is_balancing_threshold_Valid() const;

    QString getBufferedClusterCapacityRemaining() const;
    void setBufferedClusterCapacityRemaining(const QString &buffered_cluster_capacity_remaining);
    bool is_buffered_cluster_capacity_remaining_Set() const;
    bool is_buffered_cluster_capacity_remaining_Valid() const;

    QString getClusterBufferedCapacity() const;
    void setClusterBufferedCapacity(const QString &cluster_buffered_capacity);
    bool is_cluster_buffered_capacity_Set() const;
    bool is_cluster_buffered_capacity_Valid() const;

    QString getClusterCapacity() const;
    void setClusterCapacity(const QString &cluster_capacity);
    bool is_cluster_capacity_Set() const;
    bool is_cluster_capacity_Valid() const;

    QString getClusterCapacityRemaining() const;
    void setClusterCapacityRemaining(const QString &cluster_capacity_remaining);
    bool is_cluster_capacity_remaining_Set() const;
    bool is_cluster_capacity_remaining_Valid() const;

    QString getClusterLoad() const;
    void setClusterLoad(const QString &cluster_load);
    bool is_cluster_load_Set() const;
    bool is_cluster_load_Valid() const;

    QString getClusterRemainingBufferedCapacity() const;
    void setClusterRemainingBufferedCapacity(const QString &cluster_remaining_buffered_capacity);
    bool is_cluster_remaining_buffered_capacity_Set() const;
    bool is_cluster_remaining_buffered_capacity_Valid() const;

    QString getClusterRemainingCapacity() const;
    void setClusterRemainingCapacity(const QString &cluster_remaining_capacity);
    bool is_cluster_remaining_capacity_Set() const;
    bool is_cluster_remaining_capacity_Valid() const;

    QString getCurrentClusterLoad() const;
    void setCurrentClusterLoad(const QString &current_cluster_load);
    bool is_current_cluster_load_Set() const;
    bool is_current_cluster_load_Valid() const;

    QString getDeviationAfter() const;
    void setDeviationAfter(const QString &deviation_after);
    bool is_deviation_after_Set() const;
    bool is_deviation_after_Valid() const;

    QString getDeviationBefore() const;
    void setDeviationBefore(const QString &deviation_before);
    bool is_deviation_before_Set() const;
    bool is_deviation_before_Valid() const;

    bool isIsBalancedAfter() const;
    void setIsBalancedAfter(const bool &is_balanced_after);
    bool is_is_balanced_after_Set() const;
    bool is_is_balanced_after_Valid() const;

    bool isIsBalancedBefore() const;
    void setIsBalancedBefore(const bool &is_balanced_before);
    bool is_is_balanced_before_Set() const;
    bool is_is_balanced_before_Valid() const;

    bool isIsClusterCapacityViolation() const;
    void setIsClusterCapacityViolation(const bool &is_cluster_capacity_violation);
    bool is_is_cluster_capacity_violation_Set() const;
    bool is_is_cluster_capacity_violation_Valid() const;

    OAINodeId getMaxNodeLoadNodeId() const;
    void setMaxNodeLoadNodeId(const OAINodeId &max_node_load_node_id);
    bool is_max_node_load_node_id_Set() const;
    bool is_max_node_load_node_id_Valid() const;

    QString getMaxNodeLoadValue() const;
    void setMaxNodeLoadValue(const QString &max_node_load_value);
    bool is_max_node_load_value_Set() const;
    bool is_max_node_load_value_Valid() const;

    QString getMaximumNodeLoad() const;
    void setMaximumNodeLoad(const QString &maximum_node_load);
    bool is_maximum_node_load_Set() const;
    bool is_maximum_node_load_Valid() const;

    OAINodeId getMinNodeLoadNodeId() const;
    void setMinNodeLoadNodeId(const OAINodeId &min_node_load_node_id);
    bool is_min_node_load_node_id_Set() const;
    bool is_min_node_load_node_id_Valid() const;

    QString getMinNodeLoadValue() const;
    void setMinNodeLoadValue(const QString &min_node_load_value);
    bool is_min_node_load_value_Set() const;
    bool is_min_node_load_value_Valid() const;

    QString getMinimumNodeLoad() const;
    void setMinimumNodeLoad(const QString &minimum_node_load);
    bool is_minimum_node_load_Set() const;
    bool is_minimum_node_load_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNodeBufferPercentage() const;
    void setNodeBufferPercentage(const QString &node_buffer_percentage);
    bool is_node_buffer_percentage_Set() const;
    bool is_node_buffer_percentage_Valid() const;

    QString getPlannedLoadRemoval() const;
    void setPlannedLoadRemoval(const QString &planned_load_removal);
    bool is_planned_load_removal_Set() const;
    bool is_planned_load_removal_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_activity_threshold;
    bool m_activity_threshold_isSet;
    bool m_activity_threshold_isValid;

    QString m_balancing_threshold;
    bool m_balancing_threshold_isSet;
    bool m_balancing_threshold_isValid;

    QString m_buffered_cluster_capacity_remaining;
    bool m_buffered_cluster_capacity_remaining_isSet;
    bool m_buffered_cluster_capacity_remaining_isValid;

    QString m_cluster_buffered_capacity;
    bool m_cluster_buffered_capacity_isSet;
    bool m_cluster_buffered_capacity_isValid;

    QString m_cluster_capacity;
    bool m_cluster_capacity_isSet;
    bool m_cluster_capacity_isValid;

    QString m_cluster_capacity_remaining;
    bool m_cluster_capacity_remaining_isSet;
    bool m_cluster_capacity_remaining_isValid;

    QString m_cluster_load;
    bool m_cluster_load_isSet;
    bool m_cluster_load_isValid;

    QString m_cluster_remaining_buffered_capacity;
    bool m_cluster_remaining_buffered_capacity_isSet;
    bool m_cluster_remaining_buffered_capacity_isValid;

    QString m_cluster_remaining_capacity;
    bool m_cluster_remaining_capacity_isSet;
    bool m_cluster_remaining_capacity_isValid;

    QString m_current_cluster_load;
    bool m_current_cluster_load_isSet;
    bool m_current_cluster_load_isValid;

    QString m_deviation_after;
    bool m_deviation_after_isSet;
    bool m_deviation_after_isValid;

    QString m_deviation_before;
    bool m_deviation_before_isSet;
    bool m_deviation_before_isValid;

    bool m_is_balanced_after;
    bool m_is_balanced_after_isSet;
    bool m_is_balanced_after_isValid;

    bool m_is_balanced_before;
    bool m_is_balanced_before_isSet;
    bool m_is_balanced_before_isValid;

    bool m_is_cluster_capacity_violation;
    bool m_is_cluster_capacity_violation_isSet;
    bool m_is_cluster_capacity_violation_isValid;

    OAINodeId m_max_node_load_node_id;
    bool m_max_node_load_node_id_isSet;
    bool m_max_node_load_node_id_isValid;

    QString m_max_node_load_value;
    bool m_max_node_load_value_isSet;
    bool m_max_node_load_value_isValid;

    QString m_maximum_node_load;
    bool m_maximum_node_load_isSet;
    bool m_maximum_node_load_isValid;

    OAINodeId m_min_node_load_node_id;
    bool m_min_node_load_node_id_isSet;
    bool m_min_node_load_node_id_isValid;

    QString m_min_node_load_value;
    bool m_min_node_load_value_isSet;
    bool m_min_node_load_value_isValid;

    QString m_minimum_node_load;
    bool m_minimum_node_load_isSet;
    bool m_minimum_node_load_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_node_buffer_percentage;
    bool m_node_buffer_percentage_isSet;
    bool m_node_buffer_percentage_isValid;

    QString m_planned_load_removal;
    bool m_planned_load_removal_isSet;
    bool m_planned_load_removal_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoadMetricInformation)

#endif // OAILoadMetricInformation_H
