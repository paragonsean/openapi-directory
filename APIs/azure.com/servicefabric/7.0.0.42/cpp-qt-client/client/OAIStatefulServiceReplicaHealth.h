/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStatefulServiceReplicaHealth.h
 *
 * Represents the health of the stateful service replica. Contains the replica aggregated health state, the health events and the unhealthy evaluations.
 */

#ifndef OAIStatefulServiceReplicaHealth_H
#define OAIStatefulServiceReplicaHealth_H

#include <QJsonObject>

#include "OAIHealthEvaluationWrapper.h"
#include "OAIHealthEvent.h"
#include "OAIHealthState.h"
#include "OAIHealthStatistics.h"
#include "OAIServiceKind.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHealthEvent;
class OAIHealthStatistics;
class OAIHealthEvaluationWrapper;

class OAIStatefulServiceReplicaHealth : public OAIObject {
public:
    OAIStatefulServiceReplicaHealth();
    OAIStatefulServiceReplicaHealth(QString json);
    ~OAIStatefulServiceReplicaHealth() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReplicaId() const;
    void setReplicaId(const QString &replica_id);
    bool is_replica_id_Set() const;
    bool is_replica_id_Valid() const;

    QString getPartitionId() const;
    void setPartitionId(const QString &partition_id);
    bool is_partition_id_Set() const;
    bool is_partition_id_Valid() const;

    OAIServiceKind getServiceKind() const;
    void setServiceKind(const OAIServiceKind &service_kind);
    bool is_service_kind_Set() const;
    bool is_service_kind_Valid() const;

    OAIHealthState getAggregatedHealthState() const;
    void setAggregatedHealthState(const OAIHealthState &aggregated_health_state);
    bool is_aggregated_health_state_Set() const;
    bool is_aggregated_health_state_Valid() const;

    QList<OAIHealthEvent> getHealthEvents() const;
    void setHealthEvents(const QList<OAIHealthEvent> &health_events);
    bool is_health_events_Set() const;
    bool is_health_events_Valid() const;

    OAIHealthStatistics getHealthStatistics() const;
    void setHealthStatistics(const OAIHealthStatistics &health_statistics);
    bool is_health_statistics_Set() const;
    bool is_health_statistics_Valid() const;

    QList<OAIHealthEvaluationWrapper> getUnhealthyEvaluations() const;
    void setUnhealthyEvaluations(const QList<OAIHealthEvaluationWrapper> &unhealthy_evaluations);
    bool is_unhealthy_evaluations_Set() const;
    bool is_unhealthy_evaluations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_replica_id;
    bool m_replica_id_isSet;
    bool m_replica_id_isValid;

    QString m_partition_id;
    bool m_partition_id_isSet;
    bool m_partition_id_isValid;

    OAIServiceKind m_service_kind;
    bool m_service_kind_isSet;
    bool m_service_kind_isValid;

    OAIHealthState m_aggregated_health_state;
    bool m_aggregated_health_state_isSet;
    bool m_aggregated_health_state_isValid;

    QList<OAIHealthEvent> m_health_events;
    bool m_health_events_isSet;
    bool m_health_events_isValid;

    OAIHealthStatistics m_health_statistics;
    bool m_health_statistics_isSet;
    bool m_health_statistics_isValid;

    QList<OAIHealthEvaluationWrapper> m_unhealthy_evaluations;
    bool m_unhealthy_evaluations_isSet;
    bool m_unhealthy_evaluations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStatefulServiceReplicaHealth)

#endif // OAIStatefulServiceReplicaHealth_H
