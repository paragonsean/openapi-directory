/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFailureReason.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFailureReason::OAIFailureReason(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFailureReason::OAIFailureReason() {
    this->initializeModel();
}

OAIFailureReason::~OAIFailureReason() {}

void OAIFailureReason::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFailureReason::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFailureReason::fromJson(QString jsonString) {
    
    if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFailureReason::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Interrupted", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFailureReason::INTERRUPTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HealthCheck", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFailureReason::HEALTHCHECK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UpgradeDomainTimeout", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFailureReason::UPGRADEDOMAINTIMEOUT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OverallUpgradeTimeout", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFailureReason::OVERALLUPGRADETIMEOUT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFailureReason::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFailureReason::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFailureReason::NONE:
            val = "None";
            break;
        case eOAIFailureReason::INTERRUPTED:
            val = "Interrupted";
            break;
        case eOAIFailureReason::HEALTHCHECK:
            val = "HealthCheck";
            break;
        case eOAIFailureReason::UPGRADEDOMAINTIMEOUT:
            val = "UpgradeDomainTimeout";
            break;
        case eOAIFailureReason::OVERALLUPGRADETIMEOUT:
            val = "OverallUpgradeTimeout";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFailureReason::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFailureReason::eOAIFailureReason OAIFailureReason::getValue() const {
    return m_value;
}

void OAIFailureReason::setValue(const OAIFailureReason::eOAIFailureReason& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFailureReason::isSet() const {
    
    return m_value_isSet;
}

bool OAIFailureReason::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
