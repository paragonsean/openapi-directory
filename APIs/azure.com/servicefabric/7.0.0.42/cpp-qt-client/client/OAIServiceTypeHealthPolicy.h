/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceTypeHealthPolicy.h
 *
 * Represents the health policy used to evaluate the health of services belonging to a service type.
 */

#ifndef OAIServiceTypeHealthPolicy_H
#define OAIServiceTypeHealthPolicy_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServiceTypeHealthPolicy : public OAIObject {
public:
    OAIServiceTypeHealthPolicy();
    OAIServiceTypeHealthPolicy(QString json);
    ~OAIServiceTypeHealthPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxPercentUnhealthyPartitionsPerService() const;
    void setMaxPercentUnhealthyPartitionsPerService(const qint32 &max_percent_unhealthy_partitions_per_service);
    bool is_max_percent_unhealthy_partitions_per_service_Set() const;
    bool is_max_percent_unhealthy_partitions_per_service_Valid() const;

    qint32 getMaxPercentUnhealthyReplicasPerPartition() const;
    void setMaxPercentUnhealthyReplicasPerPartition(const qint32 &max_percent_unhealthy_replicas_per_partition);
    bool is_max_percent_unhealthy_replicas_per_partition_Set() const;
    bool is_max_percent_unhealthy_replicas_per_partition_Valid() const;

    qint32 getMaxPercentUnhealthyServices() const;
    void setMaxPercentUnhealthyServices(const qint32 &max_percent_unhealthy_services);
    bool is_max_percent_unhealthy_services_Set() const;
    bool is_max_percent_unhealthy_services_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_percent_unhealthy_partitions_per_service;
    bool m_max_percent_unhealthy_partitions_per_service_isSet;
    bool m_max_percent_unhealthy_partitions_per_service_isValid;

    qint32 m_max_percent_unhealthy_replicas_per_partition;
    bool m_max_percent_unhealthy_replicas_per_partition_isSet;
    bool m_max_percent_unhealthy_replicas_per_partition_isValid;

    qint32 m_max_percent_unhealthy_services;
    bool m_max_percent_unhealthy_services_isSet;
    bool m_max_percent_unhealthy_services_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceTypeHealthPolicy)

#endif // OAIServiceTypeHealthPolicy_H
