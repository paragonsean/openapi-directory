/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProbeHttpGet.h
 *
 * Http probe for the container.
 */

#ifndef OAIProbeHttpGet_H
#define OAIProbeHttpGet_H

#include <QJsonObject>

#include "OAIProbeHttpGetHeaders.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProbeHttpGetHeaders;

class OAIProbeHttpGet : public OAIObject {
public:
    OAIProbeHttpGet();
    OAIProbeHttpGet(QString json);
    ~OAIProbeHttpGet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    QList<OAIProbeHttpGetHeaders> getHttpHeaders() const;
    void setHttpHeaders(const QList<OAIProbeHttpGetHeaders> &http_headers);
    bool is_http_headers_Set() const;
    bool is_http_headers_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    qint32 getPort() const;
    void setPort(const qint32 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    QString getScheme() const;
    void setScheme(const QString &scheme);
    bool is_scheme_Set() const;
    bool is_scheme_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    QList<OAIProbeHttpGetHeaders> m_http_headers;
    bool m_http_headers_isSet;
    bool m_http_headers_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    qint32 m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    QString m_scheme;
    bool m_scheme_isSet;
    bool m_scheme_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProbeHttpGet)

#endif // OAIProbeHttpGet_H
