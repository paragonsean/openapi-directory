/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterConfigurationUpgradeDescription.h
 *
 * Describes the parameters for a standalone cluster configuration upgrade.
 */

#ifndef OAIClusterConfigurationUpgradeDescription_H
#define OAIClusterConfigurationUpgradeDescription_H

#include <QJsonObject>

#include "OAIApplicationHealthPolicies.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationHealthPolicies;

class OAIClusterConfigurationUpgradeDescription : public OAIObject {
public:
    OAIClusterConfigurationUpgradeDescription();
    OAIClusterConfigurationUpgradeDescription(QString json);
    ~OAIClusterConfigurationUpgradeDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApplicationHealthPolicies getApplicationHealthPolicies() const;
    void setApplicationHealthPolicies(const OAIApplicationHealthPolicies &application_health_policies);
    bool is_application_health_policies_Set() const;
    bool is_application_health_policies_Valid() const;

    QString getClusterConfig() const;
    void setClusterConfig(const QString &cluster_config);
    bool is_cluster_config_Set() const;
    bool is_cluster_config_Valid() const;

    QString getHealthCheckRetryTimeout() const;
    void setHealthCheckRetryTimeout(const QString &health_check_retry_timeout);
    bool is_health_check_retry_timeout_Set() const;
    bool is_health_check_retry_timeout_Valid() const;

    QString getHealthCheckStableDurationInSeconds() const;
    void setHealthCheckStableDurationInSeconds(const QString &health_check_stable_duration_in_seconds);
    bool is_health_check_stable_duration_in_seconds_Set() const;
    bool is_health_check_stable_duration_in_seconds_Valid() const;

    QString getHealthCheckWaitDurationInSeconds() const;
    void setHealthCheckWaitDurationInSeconds(const QString &health_check_wait_duration_in_seconds);
    bool is_health_check_wait_duration_in_seconds_Set() const;
    bool is_health_check_wait_duration_in_seconds_Valid() const;

    qint32 getMaxPercentDeltaUnhealthyNodes() const;
    void setMaxPercentDeltaUnhealthyNodes(const qint32 &max_percent_delta_unhealthy_nodes);
    bool is_max_percent_delta_unhealthy_nodes_Set() const;
    bool is_max_percent_delta_unhealthy_nodes_Valid() const;

    qint32 getMaxPercentUnhealthyApplications() const;
    void setMaxPercentUnhealthyApplications(const qint32 &max_percent_unhealthy_applications);
    bool is_max_percent_unhealthy_applications_Set() const;
    bool is_max_percent_unhealthy_applications_Valid() const;

    qint32 getMaxPercentUnhealthyNodes() const;
    void setMaxPercentUnhealthyNodes(const qint32 &max_percent_unhealthy_nodes);
    bool is_max_percent_unhealthy_nodes_Set() const;
    bool is_max_percent_unhealthy_nodes_Valid() const;

    qint32 getMaxPercentUpgradeDomainDeltaUnhealthyNodes() const;
    void setMaxPercentUpgradeDomainDeltaUnhealthyNodes(const qint32 &max_percent_upgrade_domain_delta_unhealthy_nodes);
    bool is_max_percent_upgrade_domain_delta_unhealthy_nodes_Set() const;
    bool is_max_percent_upgrade_domain_delta_unhealthy_nodes_Valid() const;

    QString getUpgradeDomainTimeoutInSeconds() const;
    void setUpgradeDomainTimeoutInSeconds(const QString &upgrade_domain_timeout_in_seconds);
    bool is_upgrade_domain_timeout_in_seconds_Set() const;
    bool is_upgrade_domain_timeout_in_seconds_Valid() const;

    QString getUpgradeTimeoutInSeconds() const;
    void setUpgradeTimeoutInSeconds(const QString &upgrade_timeout_in_seconds);
    bool is_upgrade_timeout_in_seconds_Set() const;
    bool is_upgrade_timeout_in_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApplicationHealthPolicies m_application_health_policies;
    bool m_application_health_policies_isSet;
    bool m_application_health_policies_isValid;

    QString m_cluster_config;
    bool m_cluster_config_isSet;
    bool m_cluster_config_isValid;

    QString m_health_check_retry_timeout;
    bool m_health_check_retry_timeout_isSet;
    bool m_health_check_retry_timeout_isValid;

    QString m_health_check_stable_duration_in_seconds;
    bool m_health_check_stable_duration_in_seconds_isSet;
    bool m_health_check_stable_duration_in_seconds_isValid;

    QString m_health_check_wait_duration_in_seconds;
    bool m_health_check_wait_duration_in_seconds_isSet;
    bool m_health_check_wait_duration_in_seconds_isValid;

    qint32 m_max_percent_delta_unhealthy_nodes;
    bool m_max_percent_delta_unhealthy_nodes_isSet;
    bool m_max_percent_delta_unhealthy_nodes_isValid;

    qint32 m_max_percent_unhealthy_applications;
    bool m_max_percent_unhealthy_applications_isSet;
    bool m_max_percent_unhealthy_applications_isValid;

    qint32 m_max_percent_unhealthy_nodes;
    bool m_max_percent_unhealthy_nodes_isSet;
    bool m_max_percent_unhealthy_nodes_isValid;

    qint32 m_max_percent_upgrade_domain_delta_unhealthy_nodes;
    bool m_max_percent_upgrade_domain_delta_unhealthy_nodes_isSet;
    bool m_max_percent_upgrade_domain_delta_unhealthy_nodes_isValid;

    QString m_upgrade_domain_timeout_in_seconds;
    bool m_upgrade_domain_timeout_in_seconds_isSet;
    bool m_upgrade_domain_timeout_in_seconds_isValid;

    QString m_upgrade_timeout_in_seconds;
    bool m_upgrade_timeout_in_seconds_isSet;
    bool m_upgrade_timeout_in_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterConfigurationUpgradeDescription)

#endif // OAIClusterConfigurationUpgradeDescription_H
