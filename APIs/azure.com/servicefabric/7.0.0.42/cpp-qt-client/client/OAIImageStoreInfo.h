/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageStoreInfo.h
 *
 * Information about the ImageStore&#39;s resource usage
 */

#ifndef OAIImageStoreInfo_H
#define OAIImageStoreInfo_H

#include <QJsonObject>

#include "OAIDiskInfo.h"
#include "OAIUsageInfo.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiskInfo;
class OAIUsageInfo;

class OAIImageStoreInfo : public OAIObject {
public:
    OAIImageStoreInfo();
    OAIImageStoreInfo(QString json);
    ~OAIImageStoreInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDiskInfo getDiskInfo() const;
    void setDiskInfo(const OAIDiskInfo &disk_info);
    bool is_disk_info_Set() const;
    bool is_disk_info_Valid() const;

    OAIUsageInfo getUsedByCopy() const;
    void setUsedByCopy(const OAIUsageInfo &used_by_copy);
    bool is_used_by_copy_Set() const;
    bool is_used_by_copy_Valid() const;

    OAIUsageInfo getUsedByMetadata() const;
    void setUsedByMetadata(const OAIUsageInfo &used_by_metadata);
    bool is_used_by_metadata_Set() const;
    bool is_used_by_metadata_Valid() const;

    OAIUsageInfo getUsedByRegister() const;
    void setUsedByRegister(const OAIUsageInfo &used_by_register);
    bool is_used_by_register_Set() const;
    bool is_used_by_register_Valid() const;

    OAIUsageInfo getUsedByStaging() const;
    void setUsedByStaging(const OAIUsageInfo &used_by_staging);
    bool is_used_by_staging_Set() const;
    bool is_used_by_staging_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDiskInfo m_disk_info;
    bool m_disk_info_isSet;
    bool m_disk_info_isValid;

    OAIUsageInfo m_used_by_copy;
    bool m_used_by_copy_isSet;
    bool m_used_by_copy_isValid;

    OAIUsageInfo m_used_by_metadata;
    bool m_used_by_metadata_isSet;
    bool m_used_by_metadata_isValid;

    OAIUsageInfo m_used_by_register;
    bool m_used_by_register_isSet;
    bool m_used_by_register_isValid;

    OAIUsageInfo m_used_by_staging;
    bool m_used_by_staging_isSet;
    bool m_used_by_staging_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageStoreInfo)

#endif // OAIImageStoreInfo_H
