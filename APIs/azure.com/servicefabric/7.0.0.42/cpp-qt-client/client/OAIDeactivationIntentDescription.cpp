/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeactivationIntentDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeactivationIntentDescription::OAIDeactivationIntentDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeactivationIntentDescription::OAIDeactivationIntentDescription() {
    this->initializeModel();
}

OAIDeactivationIntentDescription::~OAIDeactivationIntentDescription() {}

void OAIDeactivationIntentDescription::initializeModel() {

    m_deactivation_intent_isSet = false;
    m_deactivation_intent_isValid = false;
}

void OAIDeactivationIntentDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeactivationIntentDescription::fromJsonObject(QJsonObject json) {

    m_deactivation_intent_isValid = ::OpenAPI::fromJsonValue(m_deactivation_intent, json[QString("DeactivationIntent")]);
    m_deactivation_intent_isSet = !json[QString("DeactivationIntent")].isNull() && m_deactivation_intent_isValid;
}

QString OAIDeactivationIntentDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeactivationIntentDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_deactivation_intent_isSet) {
        obj.insert(QString("DeactivationIntent"), ::OpenAPI::toJsonValue(m_deactivation_intent));
    }
    return obj;
}

QString OAIDeactivationIntentDescription::getDeactivationIntent() const {
    return m_deactivation_intent;
}
void OAIDeactivationIntentDescription::setDeactivationIntent(const QString &deactivation_intent) {
    m_deactivation_intent = deactivation_intent;
    m_deactivation_intent_isSet = true;
}

bool OAIDeactivationIntentDescription::is_deactivation_intent_Set() const{
    return m_deactivation_intent_isSet;
}

bool OAIDeactivationIntentDescription::is_deactivation_intent_Valid() const{
    return m_deactivation_intent_isValid;
}

bool OAIDeactivationIntentDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deactivation_intent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeactivationIntentDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
