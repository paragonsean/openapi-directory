/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeployServicePackageToNodeDescription.h
 *
 * Defines description for downloading packages associated with a service manifest to image cache on a Service Fabric node.
 */

#ifndef OAIDeployServicePackageToNodeDescription_H
#define OAIDeployServicePackageToNodeDescription_H

#include <QJsonObject>

#include "OAIPackageSharingPolicyInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPackageSharingPolicyInfo;

class OAIDeployServicePackageToNodeDescription : public OAIObject {
public:
    OAIDeployServicePackageToNodeDescription();
    OAIDeployServicePackageToNodeDescription(QString json);
    ~OAIDeployServicePackageToNodeDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationTypeName() const;
    void setApplicationTypeName(const QString &application_type_name);
    bool is_application_type_name_Set() const;
    bool is_application_type_name_Valid() const;

    QString getApplicationTypeVersion() const;
    void setApplicationTypeVersion(const QString &application_type_version);
    bool is_application_type_version_Set() const;
    bool is_application_type_version_Valid() const;

    QString getNodeName() const;
    void setNodeName(const QString &node_name);
    bool is_node_name_Set() const;
    bool is_node_name_Valid() const;

    QList<OAIPackageSharingPolicyInfo> getPackageSharingPolicy() const;
    void setPackageSharingPolicy(const QList<OAIPackageSharingPolicyInfo> &package_sharing_policy);
    bool is_package_sharing_policy_Set() const;
    bool is_package_sharing_policy_Valid() const;

    QString getServiceManifestName() const;
    void setServiceManifestName(const QString &service_manifest_name);
    bool is_service_manifest_name_Set() const;
    bool is_service_manifest_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_type_name;
    bool m_application_type_name_isSet;
    bool m_application_type_name_isValid;

    QString m_application_type_version;
    bool m_application_type_version_isSet;
    bool m_application_type_version_isValid;

    QString m_node_name;
    bool m_node_name_isSet;
    bool m_node_name_isValid;

    QList<OAIPackageSharingPolicyInfo> m_package_sharing_policy;
    bool m_package_sharing_policy_isSet;
    bool m_package_sharing_policy_isValid;

    QString m_service_manifest_name;
    bool m_service_manifest_name_isSet;
    bool m_service_manifest_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeployServicePackageToNodeDescription)

#endif // OAIDeployServicePackageToNodeDescription_H
