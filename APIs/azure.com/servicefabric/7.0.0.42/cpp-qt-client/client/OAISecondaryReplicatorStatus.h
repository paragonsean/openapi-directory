/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 7.0.0.42
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISecondaryReplicatorStatus.h
 *
 * Provides statistics about the Service Fabric Replicator, when it is functioning in a ActiveSecondary role.
 */

#ifndef OAISecondaryReplicatorStatus_H
#define OAISecondaryReplicatorStatus_H

#include <QJsonObject>

#include "OAIReplicaRole.h"
#include "OAIReplicatorQueueStatus.h"
#include "OAIReplicatorStatus.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReplicatorQueueStatus;

class OAISecondaryReplicatorStatus : public OAIObject {
public:
    OAISecondaryReplicatorStatus();
    OAISecondaryReplicatorStatus(QString json);
    ~OAISecondaryReplicatorStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReplicatorQueueStatus getCopyQueueStatus() const;
    void setCopyQueueStatus(const OAIReplicatorQueueStatus &copy_queue_status);
    bool is_copy_queue_status_Set() const;
    bool is_copy_queue_status_Valid() const;

    bool isIsInBuild() const;
    void setIsInBuild(const bool &is_in_build);
    bool is_is_in_build_Set() const;
    bool is_is_in_build_Valid() const;

    QDateTime getLastAcknowledgementSentTimeUtc() const;
    void setLastAcknowledgementSentTimeUtc(const QDateTime &last_acknowledgement_sent_time_utc);
    bool is_last_acknowledgement_sent_time_utc_Set() const;
    bool is_last_acknowledgement_sent_time_utc_Valid() const;

    QDateTime getLastCopyOperationReceivedTimeUtc() const;
    void setLastCopyOperationReceivedTimeUtc(const QDateTime &last_copy_operation_received_time_utc);
    bool is_last_copy_operation_received_time_utc_Set() const;
    bool is_last_copy_operation_received_time_utc_Valid() const;

    QDateTime getLastReplicationOperationReceivedTimeUtc() const;
    void setLastReplicationOperationReceivedTimeUtc(const QDateTime &last_replication_operation_received_time_utc);
    bool is_last_replication_operation_received_time_utc_Set() const;
    bool is_last_replication_operation_received_time_utc_Valid() const;

    OAIReplicatorQueueStatus getReplicationQueueStatus() const;
    void setReplicationQueueStatus(const OAIReplicatorQueueStatus &replication_queue_status);
    bool is_replication_queue_status_Set() const;
    bool is_replication_queue_status_Valid() const;

    OAIReplicaRole getKind() const;
    void setKind(const OAIReplicaRole &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReplicatorQueueStatus m_copy_queue_status;
    bool m_copy_queue_status_isSet;
    bool m_copy_queue_status_isValid;

    bool m_is_in_build;
    bool m_is_in_build_isSet;
    bool m_is_in_build_isValid;

    QDateTime m_last_acknowledgement_sent_time_utc;
    bool m_last_acknowledgement_sent_time_utc_isSet;
    bool m_last_acknowledgement_sent_time_utc_isValid;

    QDateTime m_last_copy_operation_received_time_utc;
    bool m_last_copy_operation_received_time_utc_isSet;
    bool m_last_copy_operation_received_time_utc_isValid;

    QDateTime m_last_replication_operation_received_time_utc;
    bool m_last_replication_operation_received_time_utc_isSet;
    bool m_last_replication_operation_received_time_utc_isValid;

    OAIReplicatorQueueStatus m_replication_queue_status;
    bool m_replication_queue_status_isSet;
    bool m_replication_queue_status_isValid;

    OAIReplicaRole m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISecondaryReplicatorStatus)

#endif // OAISecondaryReplicatorStatus_H
