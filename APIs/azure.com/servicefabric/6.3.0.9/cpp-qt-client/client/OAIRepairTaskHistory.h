/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRepairTaskHistory.h
 *
 * A record of the times when the repair task entered each state.  This type supports the Service Fabric platform; it is not meant to be used directly from your code.
 */

#ifndef OAIRepairTaskHistory_H
#define OAIRepairTaskHistory_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRepairTaskHistory : public OAIObject {
public:
    OAIRepairTaskHistory();
    OAIRepairTaskHistory(QString json);
    ~OAIRepairTaskHistory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getApprovedUtcTimestamp() const;
    void setApprovedUtcTimestamp(const QDateTime &approved_utc_timestamp);
    bool is_approved_utc_timestamp_Set() const;
    bool is_approved_utc_timestamp_Valid() const;

    QDateTime getClaimedUtcTimestamp() const;
    void setClaimedUtcTimestamp(const QDateTime &claimed_utc_timestamp);
    bool is_claimed_utc_timestamp_Set() const;
    bool is_claimed_utc_timestamp_Valid() const;

    QDateTime getCompletedUtcTimestamp() const;
    void setCompletedUtcTimestamp(const QDateTime &completed_utc_timestamp);
    bool is_completed_utc_timestamp_Set() const;
    bool is_completed_utc_timestamp_Valid() const;

    QDateTime getCreatedUtcTimestamp() const;
    void setCreatedUtcTimestamp(const QDateTime &created_utc_timestamp);
    bool is_created_utc_timestamp_Set() const;
    bool is_created_utc_timestamp_Valid() const;

    QDateTime getExecutingUtcTimestamp() const;
    void setExecutingUtcTimestamp(const QDateTime &executing_utc_timestamp);
    bool is_executing_utc_timestamp_Set() const;
    bool is_executing_utc_timestamp_Valid() const;

    QDateTime getPreparingHealthCheckEndUtcTimestamp() const;
    void setPreparingHealthCheckEndUtcTimestamp(const QDateTime &preparing_health_check_end_utc_timestamp);
    bool is_preparing_health_check_end_utc_timestamp_Set() const;
    bool is_preparing_health_check_end_utc_timestamp_Valid() const;

    QDateTime getPreparingHealthCheckStartUtcTimestamp() const;
    void setPreparingHealthCheckStartUtcTimestamp(const QDateTime &preparing_health_check_start_utc_timestamp);
    bool is_preparing_health_check_start_utc_timestamp_Set() const;
    bool is_preparing_health_check_start_utc_timestamp_Valid() const;

    QDateTime getPreparingUtcTimestamp() const;
    void setPreparingUtcTimestamp(const QDateTime &preparing_utc_timestamp);
    bool is_preparing_utc_timestamp_Set() const;
    bool is_preparing_utc_timestamp_Valid() const;

    QDateTime getRestoringHealthCheckEndUtcTimestamp() const;
    void setRestoringHealthCheckEndUtcTimestamp(const QDateTime &restoring_health_check_end_utc_timestamp);
    bool is_restoring_health_check_end_utc_timestamp_Set() const;
    bool is_restoring_health_check_end_utc_timestamp_Valid() const;

    QDateTime getRestoringHealthCheckStartUtcTimestamp() const;
    void setRestoringHealthCheckStartUtcTimestamp(const QDateTime &restoring_health_check_start_utc_timestamp);
    bool is_restoring_health_check_start_utc_timestamp_Set() const;
    bool is_restoring_health_check_start_utc_timestamp_Valid() const;

    QDateTime getRestoringUtcTimestamp() const;
    void setRestoringUtcTimestamp(const QDateTime &restoring_utc_timestamp);
    bool is_restoring_utc_timestamp_Set() const;
    bool is_restoring_utc_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_approved_utc_timestamp;
    bool m_approved_utc_timestamp_isSet;
    bool m_approved_utc_timestamp_isValid;

    QDateTime m_claimed_utc_timestamp;
    bool m_claimed_utc_timestamp_isSet;
    bool m_claimed_utc_timestamp_isValid;

    QDateTime m_completed_utc_timestamp;
    bool m_completed_utc_timestamp_isSet;
    bool m_completed_utc_timestamp_isValid;

    QDateTime m_created_utc_timestamp;
    bool m_created_utc_timestamp_isSet;
    bool m_created_utc_timestamp_isValid;

    QDateTime m_executing_utc_timestamp;
    bool m_executing_utc_timestamp_isSet;
    bool m_executing_utc_timestamp_isValid;

    QDateTime m_preparing_health_check_end_utc_timestamp;
    bool m_preparing_health_check_end_utc_timestamp_isSet;
    bool m_preparing_health_check_end_utc_timestamp_isValid;

    QDateTime m_preparing_health_check_start_utc_timestamp;
    bool m_preparing_health_check_start_utc_timestamp_isSet;
    bool m_preparing_health_check_start_utc_timestamp_isValid;

    QDateTime m_preparing_utc_timestamp;
    bool m_preparing_utc_timestamp_isSet;
    bool m_preparing_utc_timestamp_isValid;

    QDateTime m_restoring_health_check_end_utc_timestamp;
    bool m_restoring_health_check_end_utc_timestamp_isSet;
    bool m_restoring_health_check_end_utc_timestamp_isValid;

    QDateTime m_restoring_health_check_start_utc_timestamp;
    bool m_restoring_health_check_start_utc_timestamp_isSet;
    bool m_restoring_health_check_start_utc_timestamp_isValid;

    QDateTime m_restoring_utc_timestamp;
    bool m_restoring_utc_timestamp_isSet;
    bool m_restoring_utc_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRepairTaskHistory)

#endif // OAIRepairTaskHistory_H
