/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPropertyDescription.h
 *
 * Description of a Service Fabric property.
 */

#ifndef OAIPropertyDescription_H
#define OAIPropertyDescription_H

#include <QJsonObject>

#include "OAIPropertyValue.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPropertyValue;

class OAIPropertyDescription : public OAIObject {
public:
    OAIPropertyDescription();
    OAIPropertyDescription(QString json);
    ~OAIPropertyDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCustomTypeId() const;
    void setCustomTypeId(const QString &custom_type_id);
    bool is_custom_type_id_Set() const;
    bool is_custom_type_id_Valid() const;

    QString getPropertyName() const;
    void setPropertyName(const QString &property_name);
    bool is_property_name_Set() const;
    bool is_property_name_Valid() const;

    OAIPropertyValue getValue() const;
    void setValue(const OAIPropertyValue &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_custom_type_id;
    bool m_custom_type_id_isSet;
    bool m_custom_type_id_isValid;

    QString m_property_name;
    bool m_property_name_isSet;
    bool m_property_name_isValid;

    OAIPropertyValue m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPropertyDescription)

#endif // OAIPropertyDescription_H
