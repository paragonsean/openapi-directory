/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationHealthState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationHealthState::OAIApplicationHealthState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationHealthState::OAIApplicationHealthState() {
    this->initializeModel();
}

OAIApplicationHealthState::~OAIApplicationHealthState() {}

void OAIApplicationHealthState::initializeModel() {

    m_aggregated_health_state_isSet = false;
    m_aggregated_health_state_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIApplicationHealthState::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationHealthState::fromJsonObject(QJsonObject json) {

    m_aggregated_health_state_isValid = ::OpenAPI::fromJsonValue(m_aggregated_health_state, json[QString("AggregatedHealthState")]);
    m_aggregated_health_state_isSet = !json[QString("AggregatedHealthState")].isNull() && m_aggregated_health_state_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAIApplicationHealthState::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationHealthState::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregated_health_state.isSet()) {
        obj.insert(QString("AggregatedHealthState"), ::OpenAPI::toJsonValue(m_aggregated_health_state));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIHealthState OAIApplicationHealthState::getAggregatedHealthState() const {
    return m_aggregated_health_state;
}
void OAIApplicationHealthState::setAggregatedHealthState(const OAIHealthState &aggregated_health_state) {
    m_aggregated_health_state = aggregated_health_state;
    m_aggregated_health_state_isSet = true;
}

bool OAIApplicationHealthState::is_aggregated_health_state_Set() const{
    return m_aggregated_health_state_isSet;
}

bool OAIApplicationHealthState::is_aggregated_health_state_Valid() const{
    return m_aggregated_health_state_isValid;
}

QString OAIApplicationHealthState::getName() const {
    return m_name;
}
void OAIApplicationHealthState::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApplicationHealthState::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApplicationHealthState::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIApplicationHealthState::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregated_health_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationHealthState::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
