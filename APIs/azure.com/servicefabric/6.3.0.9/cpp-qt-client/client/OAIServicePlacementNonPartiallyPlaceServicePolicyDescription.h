/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServicePlacementNonPartiallyPlaceServicePolicyDescription.h
 *
 * Describes the policy to be used for placement of a Service Fabric service where all replicas must be able to be placed in order for any replicas to be created.
 */

#ifndef OAIServicePlacementNonPartiallyPlaceServicePolicyDescription_H
#define OAIServicePlacementNonPartiallyPlaceServicePolicyDescription_H

#include <QJsonObject>

#include "OAIServicePlacementPolicyDescription.h"
#include "OAIServicePlacementPolicyType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServicePlacementNonPartiallyPlaceServicePolicyDescription : public OAIObject {
public:
    OAIServicePlacementNonPartiallyPlaceServicePolicyDescription();
    OAIServicePlacementNonPartiallyPlaceServicePolicyDescription(QString json);
    ~OAIServicePlacementNonPartiallyPlaceServicePolicyDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIServicePlacementPolicyType getType() const;
    void setType(const OAIServicePlacementPolicyType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIServicePlacementPolicyType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServicePlacementNonPartiallyPlaceServicePolicyDescription)

#endif // OAIServicePlacementNonPartiallyPlaceServicePolicyDescription_H
