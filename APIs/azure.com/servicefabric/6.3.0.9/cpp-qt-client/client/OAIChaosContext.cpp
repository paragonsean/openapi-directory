/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChaosContext.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChaosContext::OAIChaosContext(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChaosContext::OAIChaosContext() {
    this->initializeModel();
}

OAIChaosContext::~OAIChaosContext() {}

void OAIChaosContext::initializeModel() {

    m_map_isSet = false;
    m_map_isValid = false;
}

void OAIChaosContext::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChaosContext::fromJsonObject(QJsonObject json) {

    m_map_isValid = ::OpenAPI::fromJsonValue(m_map, json[QString("Map")]);
    m_map_isSet = !json[QString("Map")].isNull() && m_map_isValid;
}

QString OAIChaosContext::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChaosContext::asJsonObject() const {
    QJsonObject obj;
    if (m_map.size() > 0) {
        obj.insert(QString("Map"), ::OpenAPI::toJsonValue(m_map));
    }
    return obj;
}

QMap<QString, QString> OAIChaosContext::getMap() const {
    return m_map;
}
void OAIChaosContext::setMap(const QMap<QString, QString> &map) {
    m_map = map;
    m_map_isSet = true;
}

bool OAIChaosContext::is_map_Set() const{
    return m_map_isSet;
}

bool OAIChaosContext::is_map_Valid() const{
    return m_map_isValid;
}

bool OAIChaosContext::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_map.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChaosContext::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
