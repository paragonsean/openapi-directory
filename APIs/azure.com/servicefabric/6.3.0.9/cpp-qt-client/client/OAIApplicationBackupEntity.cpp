/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationBackupEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationBackupEntity::OAIApplicationBackupEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationBackupEntity::OAIApplicationBackupEntity() {
    this->initializeModel();
}

OAIApplicationBackupEntity::~OAIApplicationBackupEntity() {}

void OAIApplicationBackupEntity::initializeModel() {

    m_entity_kind_isSet = false;
    m_entity_kind_isValid = false;

    m_application_name_isSet = false;
    m_application_name_isValid = false;
}

void OAIApplicationBackupEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationBackupEntity::fromJsonObject(QJsonObject json) {

    m_entity_kind_isValid = ::OpenAPI::fromJsonValue(m_entity_kind, json[QString("EntityKind")]);
    m_entity_kind_isSet = !json[QString("EntityKind")].isNull() && m_entity_kind_isValid;

    m_application_name_isValid = ::OpenAPI::fromJsonValue(m_application_name, json[QString("ApplicationName")]);
    m_application_name_isSet = !json[QString("ApplicationName")].isNull() && m_application_name_isValid;
}

QString OAIApplicationBackupEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationBackupEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_kind.isSet()) {
        obj.insert(QString("EntityKind"), ::OpenAPI::toJsonValue(m_entity_kind));
    }
    if (m_application_name_isSet) {
        obj.insert(QString("ApplicationName"), ::OpenAPI::toJsonValue(m_application_name));
    }
    return obj;
}

OAIBackupEntityKind OAIApplicationBackupEntity::getEntityKind() const {
    return m_entity_kind;
}
void OAIApplicationBackupEntity::setEntityKind(const OAIBackupEntityKind &entity_kind) {
    m_entity_kind = entity_kind;
    m_entity_kind_isSet = true;
}

bool OAIApplicationBackupEntity::is_entity_kind_Set() const{
    return m_entity_kind_isSet;
}

bool OAIApplicationBackupEntity::is_entity_kind_Valid() const{
    return m_entity_kind_isValid;
}

QString OAIApplicationBackupEntity::getApplicationName() const {
    return m_application_name;
}
void OAIApplicationBackupEntity::setApplicationName(const QString &application_name) {
    m_application_name = application_name;
    m_application_name_isSet = true;
}

bool OAIApplicationBackupEntity::is_application_name_Set() const{
    return m_application_name_isSet;
}

bool OAIApplicationBackupEntity::is_application_name_Valid() const{
    return m_application_name_isValid;
}

bool OAIApplicationBackupEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_kind.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_application_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationBackupEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_entity_kind_isValid && true;
}

} // namespace OpenAPI
