/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerInstanceView.h
 *
 * Runtime information of a container instance.
 */

#ifndef OAIContainerInstanceView_H
#define OAIContainerInstanceView_H

#include <QJsonObject>

#include "OAIContainerEvent.h"
#include "OAIContainerState.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContainerState;
class OAIContainerEvent;

class OAIContainerInstanceView : public OAIObject {
public:
    OAIContainerInstanceView();
    OAIContainerInstanceView(QString json);
    ~OAIContainerInstanceView() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContainerState getCurrentState() const;
    void setCurrentState(const OAIContainerState &current_state);
    bool is_current_state_Set() const;
    bool is_current_state_Valid() const;

    QList<OAIContainerEvent> getEvents() const;
    void setEvents(const QList<OAIContainerEvent> &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    OAIContainerState getPreviousState() const;
    void setPreviousState(const OAIContainerState &previous_state);
    bool is_previous_state_Set() const;
    bool is_previous_state_Valid() const;

    qint32 getRestartCount() const;
    void setRestartCount(const qint32 &restart_count);
    bool is_restart_count_Set() const;
    bool is_restart_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContainerState m_current_state;
    bool m_current_state_isSet;
    bool m_current_state_isValid;

    QList<OAIContainerEvent> m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    OAIContainerState m_previous_state;
    bool m_previous_state_isSet;
    bool m_previous_state_isValid;

    qint32 m_restart_count;
    bool m_restart_count_isSet;
    bool m_restart_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerInstanceView)

#endif // OAIContainerInstanceView_H
