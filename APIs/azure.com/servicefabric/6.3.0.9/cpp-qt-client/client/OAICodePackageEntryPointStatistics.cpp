/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICodePackageEntryPointStatistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICodePackageEntryPointStatistics::OAICodePackageEntryPointStatistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICodePackageEntryPointStatistics::OAICodePackageEntryPointStatistics() {
    this->initializeModel();
}

OAICodePackageEntryPointStatistics::~OAICodePackageEntryPointStatistics() {}

void OAICodePackageEntryPointStatistics::initializeModel() {

    m_activation_count_isSet = false;
    m_activation_count_isValid = false;

    m_activation_failure_count_isSet = false;
    m_activation_failure_count_isValid = false;

    m_continuous_activation_failure_count_isSet = false;
    m_continuous_activation_failure_count_isValid = false;

    m_continuous_exit_failure_count_isSet = false;
    m_continuous_exit_failure_count_isValid = false;

    m_exit_count_isSet = false;
    m_exit_count_isValid = false;

    m_exit_failure_count_isSet = false;
    m_exit_failure_count_isValid = false;

    m_last_activation_time_isSet = false;
    m_last_activation_time_isValid = false;

    m_last_exit_code_isSet = false;
    m_last_exit_code_isValid = false;

    m_last_exit_time_isSet = false;
    m_last_exit_time_isValid = false;

    m_last_successful_activation_time_isSet = false;
    m_last_successful_activation_time_isValid = false;

    m_last_successful_exit_time_isSet = false;
    m_last_successful_exit_time_isValid = false;
}

void OAICodePackageEntryPointStatistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICodePackageEntryPointStatistics::fromJsonObject(QJsonObject json) {

    m_activation_count_isValid = ::OpenAPI::fromJsonValue(m_activation_count, json[QString("ActivationCount")]);
    m_activation_count_isSet = !json[QString("ActivationCount")].isNull() && m_activation_count_isValid;

    m_activation_failure_count_isValid = ::OpenAPI::fromJsonValue(m_activation_failure_count, json[QString("ActivationFailureCount")]);
    m_activation_failure_count_isSet = !json[QString("ActivationFailureCount")].isNull() && m_activation_failure_count_isValid;

    m_continuous_activation_failure_count_isValid = ::OpenAPI::fromJsonValue(m_continuous_activation_failure_count, json[QString("ContinuousActivationFailureCount")]);
    m_continuous_activation_failure_count_isSet = !json[QString("ContinuousActivationFailureCount")].isNull() && m_continuous_activation_failure_count_isValid;

    m_continuous_exit_failure_count_isValid = ::OpenAPI::fromJsonValue(m_continuous_exit_failure_count, json[QString("ContinuousExitFailureCount")]);
    m_continuous_exit_failure_count_isSet = !json[QString("ContinuousExitFailureCount")].isNull() && m_continuous_exit_failure_count_isValid;

    m_exit_count_isValid = ::OpenAPI::fromJsonValue(m_exit_count, json[QString("ExitCount")]);
    m_exit_count_isSet = !json[QString("ExitCount")].isNull() && m_exit_count_isValid;

    m_exit_failure_count_isValid = ::OpenAPI::fromJsonValue(m_exit_failure_count, json[QString("ExitFailureCount")]);
    m_exit_failure_count_isSet = !json[QString("ExitFailureCount")].isNull() && m_exit_failure_count_isValid;

    m_last_activation_time_isValid = ::OpenAPI::fromJsonValue(m_last_activation_time, json[QString("LastActivationTime")]);
    m_last_activation_time_isSet = !json[QString("LastActivationTime")].isNull() && m_last_activation_time_isValid;

    m_last_exit_code_isValid = ::OpenAPI::fromJsonValue(m_last_exit_code, json[QString("LastExitCode")]);
    m_last_exit_code_isSet = !json[QString("LastExitCode")].isNull() && m_last_exit_code_isValid;

    m_last_exit_time_isValid = ::OpenAPI::fromJsonValue(m_last_exit_time, json[QString("LastExitTime")]);
    m_last_exit_time_isSet = !json[QString("LastExitTime")].isNull() && m_last_exit_time_isValid;

    m_last_successful_activation_time_isValid = ::OpenAPI::fromJsonValue(m_last_successful_activation_time, json[QString("LastSuccessfulActivationTime")]);
    m_last_successful_activation_time_isSet = !json[QString("LastSuccessfulActivationTime")].isNull() && m_last_successful_activation_time_isValid;

    m_last_successful_exit_time_isValid = ::OpenAPI::fromJsonValue(m_last_successful_exit_time, json[QString("LastSuccessfulExitTime")]);
    m_last_successful_exit_time_isSet = !json[QString("LastSuccessfulExitTime")].isNull() && m_last_successful_exit_time_isValid;
}

QString OAICodePackageEntryPointStatistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICodePackageEntryPointStatistics::asJsonObject() const {
    QJsonObject obj;
    if (m_activation_count_isSet) {
        obj.insert(QString("ActivationCount"), ::OpenAPI::toJsonValue(m_activation_count));
    }
    if (m_activation_failure_count_isSet) {
        obj.insert(QString("ActivationFailureCount"), ::OpenAPI::toJsonValue(m_activation_failure_count));
    }
    if (m_continuous_activation_failure_count_isSet) {
        obj.insert(QString("ContinuousActivationFailureCount"), ::OpenAPI::toJsonValue(m_continuous_activation_failure_count));
    }
    if (m_continuous_exit_failure_count_isSet) {
        obj.insert(QString("ContinuousExitFailureCount"), ::OpenAPI::toJsonValue(m_continuous_exit_failure_count));
    }
    if (m_exit_count_isSet) {
        obj.insert(QString("ExitCount"), ::OpenAPI::toJsonValue(m_exit_count));
    }
    if (m_exit_failure_count_isSet) {
        obj.insert(QString("ExitFailureCount"), ::OpenAPI::toJsonValue(m_exit_failure_count));
    }
    if (m_last_activation_time_isSet) {
        obj.insert(QString("LastActivationTime"), ::OpenAPI::toJsonValue(m_last_activation_time));
    }
    if (m_last_exit_code_isSet) {
        obj.insert(QString("LastExitCode"), ::OpenAPI::toJsonValue(m_last_exit_code));
    }
    if (m_last_exit_time_isSet) {
        obj.insert(QString("LastExitTime"), ::OpenAPI::toJsonValue(m_last_exit_time));
    }
    if (m_last_successful_activation_time_isSet) {
        obj.insert(QString("LastSuccessfulActivationTime"), ::OpenAPI::toJsonValue(m_last_successful_activation_time));
    }
    if (m_last_successful_exit_time_isSet) {
        obj.insert(QString("LastSuccessfulExitTime"), ::OpenAPI::toJsonValue(m_last_successful_exit_time));
    }
    return obj;
}

QString OAICodePackageEntryPointStatistics::getActivationCount() const {
    return m_activation_count;
}
void OAICodePackageEntryPointStatistics::setActivationCount(const QString &activation_count) {
    m_activation_count = activation_count;
    m_activation_count_isSet = true;
}

bool OAICodePackageEntryPointStatistics::is_activation_count_Set() const{
    return m_activation_count_isSet;
}

bool OAICodePackageEntryPointStatistics::is_activation_count_Valid() const{
    return m_activation_count_isValid;
}

QString OAICodePackageEntryPointStatistics::getActivationFailureCount() const {
    return m_activation_failure_count;
}
void OAICodePackageEntryPointStatistics::setActivationFailureCount(const QString &activation_failure_count) {
    m_activation_failure_count = activation_failure_count;
    m_activation_failure_count_isSet = true;
}

bool OAICodePackageEntryPointStatistics::is_activation_failure_count_Set() const{
    return m_activation_failure_count_isSet;
}

bool OAICodePackageEntryPointStatistics::is_activation_failure_count_Valid() const{
    return m_activation_failure_count_isValid;
}

QString OAICodePackageEntryPointStatistics::getContinuousActivationFailureCount() const {
    return m_continuous_activation_failure_count;
}
void OAICodePackageEntryPointStatistics::setContinuousActivationFailureCount(const QString &continuous_activation_failure_count) {
    m_continuous_activation_failure_count = continuous_activation_failure_count;
    m_continuous_activation_failure_count_isSet = true;
}

bool OAICodePackageEntryPointStatistics::is_continuous_activation_failure_count_Set() const{
    return m_continuous_activation_failure_count_isSet;
}

bool OAICodePackageEntryPointStatistics::is_continuous_activation_failure_count_Valid() const{
    return m_continuous_activation_failure_count_isValid;
}

QString OAICodePackageEntryPointStatistics::getContinuousExitFailureCount() const {
    return m_continuous_exit_failure_count;
}
void OAICodePackageEntryPointStatistics::setContinuousExitFailureCount(const QString &continuous_exit_failure_count) {
    m_continuous_exit_failure_count = continuous_exit_failure_count;
    m_continuous_exit_failure_count_isSet = true;
}

bool OAICodePackageEntryPointStatistics::is_continuous_exit_failure_count_Set() const{
    return m_continuous_exit_failure_count_isSet;
}

bool OAICodePackageEntryPointStatistics::is_continuous_exit_failure_count_Valid() const{
    return m_continuous_exit_failure_count_isValid;
}

QString OAICodePackageEntryPointStatistics::getExitCount() const {
    return m_exit_count;
}
void OAICodePackageEntryPointStatistics::setExitCount(const QString &exit_count) {
    m_exit_count = exit_count;
    m_exit_count_isSet = true;
}

bool OAICodePackageEntryPointStatistics::is_exit_count_Set() const{
    return m_exit_count_isSet;
}

bool OAICodePackageEntryPointStatistics::is_exit_count_Valid() const{
    return m_exit_count_isValid;
}

QString OAICodePackageEntryPointStatistics::getExitFailureCount() const {
    return m_exit_failure_count;
}
void OAICodePackageEntryPointStatistics::setExitFailureCount(const QString &exit_failure_count) {
    m_exit_failure_count = exit_failure_count;
    m_exit_failure_count_isSet = true;
}

bool OAICodePackageEntryPointStatistics::is_exit_failure_count_Set() const{
    return m_exit_failure_count_isSet;
}

bool OAICodePackageEntryPointStatistics::is_exit_failure_count_Valid() const{
    return m_exit_failure_count_isValid;
}

QDateTime OAICodePackageEntryPointStatistics::getLastActivationTime() const {
    return m_last_activation_time;
}
void OAICodePackageEntryPointStatistics::setLastActivationTime(const QDateTime &last_activation_time) {
    m_last_activation_time = last_activation_time;
    m_last_activation_time_isSet = true;
}

bool OAICodePackageEntryPointStatistics::is_last_activation_time_Set() const{
    return m_last_activation_time_isSet;
}

bool OAICodePackageEntryPointStatistics::is_last_activation_time_Valid() const{
    return m_last_activation_time_isValid;
}

QString OAICodePackageEntryPointStatistics::getLastExitCode() const {
    return m_last_exit_code;
}
void OAICodePackageEntryPointStatistics::setLastExitCode(const QString &last_exit_code) {
    m_last_exit_code = last_exit_code;
    m_last_exit_code_isSet = true;
}

bool OAICodePackageEntryPointStatistics::is_last_exit_code_Set() const{
    return m_last_exit_code_isSet;
}

bool OAICodePackageEntryPointStatistics::is_last_exit_code_Valid() const{
    return m_last_exit_code_isValid;
}

QDateTime OAICodePackageEntryPointStatistics::getLastExitTime() const {
    return m_last_exit_time;
}
void OAICodePackageEntryPointStatistics::setLastExitTime(const QDateTime &last_exit_time) {
    m_last_exit_time = last_exit_time;
    m_last_exit_time_isSet = true;
}

bool OAICodePackageEntryPointStatistics::is_last_exit_time_Set() const{
    return m_last_exit_time_isSet;
}

bool OAICodePackageEntryPointStatistics::is_last_exit_time_Valid() const{
    return m_last_exit_time_isValid;
}

QDateTime OAICodePackageEntryPointStatistics::getLastSuccessfulActivationTime() const {
    return m_last_successful_activation_time;
}
void OAICodePackageEntryPointStatistics::setLastSuccessfulActivationTime(const QDateTime &last_successful_activation_time) {
    m_last_successful_activation_time = last_successful_activation_time;
    m_last_successful_activation_time_isSet = true;
}

bool OAICodePackageEntryPointStatistics::is_last_successful_activation_time_Set() const{
    return m_last_successful_activation_time_isSet;
}

bool OAICodePackageEntryPointStatistics::is_last_successful_activation_time_Valid() const{
    return m_last_successful_activation_time_isValid;
}

QDateTime OAICodePackageEntryPointStatistics::getLastSuccessfulExitTime() const {
    return m_last_successful_exit_time;
}
void OAICodePackageEntryPointStatistics::setLastSuccessfulExitTime(const QDateTime &last_successful_exit_time) {
    m_last_successful_exit_time = last_successful_exit_time;
    m_last_successful_exit_time_isSet = true;
}

bool OAICodePackageEntryPointStatistics::is_last_successful_exit_time_Set() const{
    return m_last_successful_exit_time_isSet;
}

bool OAICodePackageEntryPointStatistics::is_last_successful_exit_time_Valid() const{
    return m_last_successful_exit_time_isValid;
}

bool OAICodePackageEntryPointStatistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activation_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_activation_failure_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_continuous_activation_failure_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_continuous_exit_failure_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exit_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exit_failure_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_activation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_exit_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_exit_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_successful_activation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_successful_exit_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICodePackageEntryPointStatistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
