/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeployedApplicationHealthStateFilter.h
 *
 * Defines matching criteria to determine whether a deployed application should be included as a child of an application in the cluster health chunk. The deployed applications are only returned if the parent application matches a filter specified in the cluster health chunk query description. One filter can match zero, one or multiple deployed applications, depending on its properties.
 */

#ifndef OAIDeployedApplicationHealthStateFilter_H
#define OAIDeployedApplicationHealthStateFilter_H

#include <QJsonObject>

#include "OAIDeployedServicePackageHealthStateFilter.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeployedServicePackageHealthStateFilter;

class OAIDeployedApplicationHealthStateFilter : public OAIObject {
public:
    OAIDeployedApplicationHealthStateFilter();
    OAIDeployedApplicationHealthStateFilter(QString json);
    ~OAIDeployedApplicationHealthStateFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDeployedServicePackageHealthStateFilter> getDeployedServicePackageFilters() const;
    void setDeployedServicePackageFilters(const QList<OAIDeployedServicePackageHealthStateFilter> &deployed_service_package_filters);
    bool is_deployed_service_package_filters_Set() const;
    bool is_deployed_service_package_filters_Valid() const;

    qint32 getHealthStateFilter() const;
    void setHealthStateFilter(const qint32 &health_state_filter);
    bool is_health_state_filter_Set() const;
    bool is_health_state_filter_Valid() const;

    QString getNodeNameFilter() const;
    void setNodeNameFilter(const QString &node_name_filter);
    bool is_node_name_filter_Set() const;
    bool is_node_name_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDeployedServicePackageHealthStateFilter> m_deployed_service_package_filters;
    bool m_deployed_service_package_filters_isSet;
    bool m_deployed_service_package_filters_isValid;

    qint32 m_health_state_filter;
    bool m_health_state_filter_isSet;
    bool m_health_state_filter_isValid;

    QString m_node_name_filter;
    bool m_node_name_filter_isSet;
    bool m_node_name_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeployedApplicationHealthStateFilter)

#endif // OAIDeployedApplicationHealthStateFilter_H
