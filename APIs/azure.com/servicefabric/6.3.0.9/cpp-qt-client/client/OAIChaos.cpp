/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChaos.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChaos::OAIChaos(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChaos::OAIChaos() {
    this->initializeModel();
}

OAIChaos::~OAIChaos() {}

void OAIChaos::initializeModel() {

    m_chaos_parameters_isSet = false;
    m_chaos_parameters_isValid = false;

    m_schedule_status_isSet = false;
    m_schedule_status_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIChaos::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChaos::fromJsonObject(QJsonObject json) {

    m_chaos_parameters_isValid = ::OpenAPI::fromJsonValue(m_chaos_parameters, json[QString("ChaosParameters")]);
    m_chaos_parameters_isSet = !json[QString("ChaosParameters")].isNull() && m_chaos_parameters_isValid;

    m_schedule_status_isValid = ::OpenAPI::fromJsonValue(m_schedule_status, json[QString("ScheduleStatus")]);
    m_schedule_status_isSet = !json[QString("ScheduleStatus")].isNull() && m_schedule_status_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIChaos::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChaos::asJsonObject() const {
    QJsonObject obj;
    if (m_chaos_parameters.isSet()) {
        obj.insert(QString("ChaosParameters"), ::OpenAPI::toJsonValue(m_chaos_parameters));
    }
    if (m_schedule_status.isSet()) {
        obj.insert(QString("ScheduleStatus"), ::OpenAPI::toJsonValue(m_schedule_status));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIChaosParameters OAIChaos::getChaosParameters() const {
    return m_chaos_parameters;
}
void OAIChaos::setChaosParameters(const OAIChaosParameters &chaos_parameters) {
    m_chaos_parameters = chaos_parameters;
    m_chaos_parameters_isSet = true;
}

bool OAIChaos::is_chaos_parameters_Set() const{
    return m_chaos_parameters_isSet;
}

bool OAIChaos::is_chaos_parameters_Valid() const{
    return m_chaos_parameters_isValid;
}

OAIChaosScheduleStatus OAIChaos::getScheduleStatus() const {
    return m_schedule_status;
}
void OAIChaos::setScheduleStatus(const OAIChaosScheduleStatus &schedule_status) {
    m_schedule_status = schedule_status;
    m_schedule_status_isSet = true;
}

bool OAIChaos::is_schedule_status_Set() const{
    return m_schedule_status_isSet;
}

bool OAIChaos::is_schedule_status_Valid() const{
    return m_schedule_status_isValid;
}

OAIChaosStatus OAIChaos::getStatus() const {
    return m_status;
}
void OAIChaos::setStatus(const OAIChaosStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIChaos::is_status_Set() const{
    return m_status_isSet;
}

bool OAIChaos::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIChaos::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_chaos_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChaos::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
