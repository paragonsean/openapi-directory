/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBackupProgressInfo.h
 *
 * Describes the progress of a partition&#39;s backup.
 */

#ifndef OAIBackupProgressInfo_H
#define OAIBackupProgressInfo_H

#include <QJsonObject>

#include "OAIBackupEpoch.h"
#include "OAIBackupState.h"
#include "OAIFabricErrorError.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBackupEpoch;
class OAIFabricErrorError;

class OAIBackupProgressInfo : public OAIObject {
public:
    OAIBackupProgressInfo();
    OAIBackupProgressInfo(QString json);
    ~OAIBackupProgressInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackupId() const;
    void setBackupId(const QString &backup_id);
    bool is_backup_id_Set() const;
    bool is_backup_id_Valid() const;

    QString getBackupLocation() const;
    void setBackupLocation(const QString &backup_location);
    bool is_backup_location_Set() const;
    bool is_backup_location_Valid() const;

    OAIBackupState getBackupState() const;
    void setBackupState(const OAIBackupState &backup_state);
    bool is_backup_state_Set() const;
    bool is_backup_state_Valid() const;

    OAIBackupEpoch getEpochOfLastBackupRecord() const;
    void setEpochOfLastBackupRecord(const OAIBackupEpoch &epoch_of_last_backup_record);
    bool is_epoch_of_last_backup_record_Set() const;
    bool is_epoch_of_last_backup_record_Valid() const;

    OAIFabricErrorError getFailureError() const;
    void setFailureError(const OAIFabricErrorError &failure_error);
    bool is_failure_error_Set() const;
    bool is_failure_error_Valid() const;

    QString getLsnOfLastBackupRecord() const;
    void setLsnOfLastBackupRecord(const QString &lsn_of_last_backup_record);
    bool is_lsn_of_last_backup_record_Set() const;
    bool is_lsn_of_last_backup_record_Valid() const;

    QDateTime getTimeStampUtc() const;
    void setTimeStampUtc(const QDateTime &time_stamp_utc);
    bool is_time_stamp_utc_Set() const;
    bool is_time_stamp_utc_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_backup_id;
    bool m_backup_id_isSet;
    bool m_backup_id_isValid;

    QString m_backup_location;
    bool m_backup_location_isSet;
    bool m_backup_location_isValid;

    OAIBackupState m_backup_state;
    bool m_backup_state_isSet;
    bool m_backup_state_isValid;

    OAIBackupEpoch m_epoch_of_last_backup_record;
    bool m_epoch_of_last_backup_record_isSet;
    bool m_epoch_of_last_backup_record_isValid;

    OAIFabricErrorError m_failure_error;
    bool m_failure_error_isSet;
    bool m_failure_error_isValid;

    QString m_lsn_of_last_backup_record;
    bool m_lsn_of_last_backup_record_isSet;
    bool m_lsn_of_last_backup_record_isValid;

    QDateTime m_time_stamp_utc;
    bool m_time_stamp_utc_isSet;
    bool m_time_stamp_utc_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBackupProgressInfo)

#endif // OAIBackupProgressInfo_H
