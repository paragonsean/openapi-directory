/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProvisionApplicationTypeDescription.h
 *
 * Describes the operation to register or provision an application type using an application package uploaded to the Service Fabric image store.
 */

#ifndef OAIProvisionApplicationTypeDescription_H
#define OAIProvisionApplicationTypeDescription_H

#include <QJsonObject>

#include "OAIApplicationPackageCleanupPolicy.h"
#include "OAIProvisionApplicationTypeDescriptionBase.h"
#include "OAIProvisionApplicationTypeKind.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProvisionApplicationTypeDescription : public OAIObject {
public:
    OAIProvisionApplicationTypeDescription();
    OAIProvisionApplicationTypeDescription(QString json);
    ~OAIProvisionApplicationTypeDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAsync() const;
    void setAsync(const bool &async);
    bool is_async_Set() const;
    bool is_async_Valid() const;

    OAIProvisionApplicationTypeKind getKind() const;
    void setKind(const OAIProvisionApplicationTypeKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAIApplicationPackageCleanupPolicy getApplicationPackageCleanupPolicy() const;
    void setApplicationPackageCleanupPolicy(const OAIApplicationPackageCleanupPolicy &application_package_cleanup_policy);
    bool is_application_package_cleanup_policy_Set() const;
    bool is_application_package_cleanup_policy_Valid() const;

    QString getApplicationTypeBuildPath() const;
    void setApplicationTypeBuildPath(const QString &application_type_build_path);
    bool is_application_type_build_path_Set() const;
    bool is_application_type_build_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_async;
    bool m_async_isSet;
    bool m_async_isValid;

    OAIProvisionApplicationTypeKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAIApplicationPackageCleanupPolicy m_application_package_cleanup_policy;
    bool m_application_package_cleanup_policy_isSet;
    bool m_application_package_cleanup_policy_isValid;

    QString m_application_type_build_path;
    bool m_application_type_build_path_isSet;
    bool m_application_type_build_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProvisionApplicationTypeDescription)

#endif // OAIProvisionApplicationTypeDescription_H
