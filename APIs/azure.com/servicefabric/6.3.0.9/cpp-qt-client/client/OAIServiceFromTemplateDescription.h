/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceFromTemplateDescription.h
 *
 * Defines description for creating a Service Fabric service from a template defined in the application manifest.
 */

#ifndef OAIServiceFromTemplateDescription_H
#define OAIServiceFromTemplateDescription_H

#include <QJsonObject>

#include "OAIServicePackageActivationMode.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServiceFromTemplateDescription : public OAIObject {
public:
    OAIServiceFromTemplateDescription();
    OAIServiceFromTemplateDescription(QString json);
    ~OAIServiceFromTemplateDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    QList<qint32> getInitializationData() const;
    void setInitializationData(const QList<qint32> &initialization_data);
    bool is_initialization_data_Set() const;
    bool is_initialization_data_Valid() const;

    QString getServiceDnsName() const;
    void setServiceDnsName(const QString &service_dns_name);
    bool is_service_dns_name_Set() const;
    bool is_service_dns_name_Valid() const;

    QString getServiceName() const;
    void setServiceName(const QString &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    OAIServicePackageActivationMode getServicePackageActivationMode() const;
    void setServicePackageActivationMode(const OAIServicePackageActivationMode &service_package_activation_mode);
    bool is_service_package_activation_mode_Set() const;
    bool is_service_package_activation_mode_Valid() const;

    QString getServiceTypeName() const;
    void setServiceTypeName(const QString &service_type_name);
    bool is_service_type_name_Set() const;
    bool is_service_type_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    QList<qint32> m_initialization_data;
    bool m_initialization_data_isSet;
    bool m_initialization_data_isValid;

    QString m_service_dns_name;
    bool m_service_dns_name_isSet;
    bool m_service_dns_name_isValid;

    QString m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;

    OAIServicePackageActivationMode m_service_package_activation_mode;
    bool m_service_package_activation_mode_isSet;
    bool m_service_package_activation_mode_isValid;

    QString m_service_type_name;
    bool m_service_type_name_isSet;
    bool m_service_type_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceFromTemplateDescription)

#endif // OAIServiceFromTemplateDescription_H
