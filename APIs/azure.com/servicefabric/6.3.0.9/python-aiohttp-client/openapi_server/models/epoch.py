# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Epoch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_version: str=None, data_loss_version: str=None):
        """Epoch - a model defined in OpenAPI

        :param configuration_version: The configuration_version of this Epoch.
        :param data_loss_version: The data_loss_version of this Epoch.
        """
        self.openapi_types = {
            'configuration_version': str,
            'data_loss_version': str
        }

        self.attribute_map = {
            'configuration_version': 'ConfigurationVersion',
            'data_loss_version': 'DataLossVersion'
        }

        self._configuration_version = configuration_version
        self._data_loss_version = data_loss_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Epoch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Epoch of this Epoch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_version(self):
        """Gets the configuration_version of this Epoch.

        The current configuration number of this Epoch. The configuration number is an increasing value that is updated whenever the configuration of this replica set changes.

        :return: The configuration_version of this Epoch.
        :rtype: str
        """
        return self._configuration_version

    @configuration_version.setter
    def configuration_version(self, configuration_version):
        """Sets the configuration_version of this Epoch.

        The current configuration number of this Epoch. The configuration number is an increasing value that is updated whenever the configuration of this replica set changes.

        :param configuration_version: The configuration_version of this Epoch.
        :type configuration_version: str
        """

        self._configuration_version = configuration_version

    @property
    def data_loss_version(self):
        """Gets the data_loss_version of this Epoch.

        The current data loss number of this Epoch. The data loss number property is an increasing value which is updated whenever data loss is suspected, as when loss of a quorum of replicas in the replica set that includes the Primary replica.

        :return: The data_loss_version of this Epoch.
        :rtype: str
        """
        return self._data_loss_version

    @data_loss_version.setter
    def data_loss_version(self, data_loss_version):
        """Sets the data_loss_version of this Epoch.

        The current data loss number of this Epoch. The data loss number property is an increasing value which is updated whenever data loss is suspected, as when loss of a quorum of replicas in the replica set that includes the Primary replica.

        :param data_loss_version: The data_loss_version of this Epoch.
        :type data_loss_version: str
        """

        self._data_loss_version = data_loss_version
