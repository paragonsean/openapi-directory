# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.remote_replicator_acknowledgement_detail import RemoteReplicatorAcknowledgementDetail
from openapi_server import util


class RemoteReplicatorAcknowledgementStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, copy_stream_acknowledgement_detail: RemoteReplicatorAcknowledgementDetail=None, replication_stream_acknowledgement_detail: RemoteReplicatorAcknowledgementDetail=None):
        """RemoteReplicatorAcknowledgementStatus - a model defined in OpenAPI

        :param copy_stream_acknowledgement_detail: The copy_stream_acknowledgement_detail of this RemoteReplicatorAcknowledgementStatus.
        :param replication_stream_acknowledgement_detail: The replication_stream_acknowledgement_detail of this RemoteReplicatorAcknowledgementStatus.
        """
        self.openapi_types = {
            'copy_stream_acknowledgement_detail': RemoteReplicatorAcknowledgementDetail,
            'replication_stream_acknowledgement_detail': RemoteReplicatorAcknowledgementDetail
        }

        self.attribute_map = {
            'copy_stream_acknowledgement_detail': 'CopyStreamAcknowledgementDetail',
            'replication_stream_acknowledgement_detail': 'ReplicationStreamAcknowledgementDetail'
        }

        self._copy_stream_acknowledgement_detail = copy_stream_acknowledgement_detail
        self._replication_stream_acknowledgement_detail = replication_stream_acknowledgement_detail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoteReplicatorAcknowledgementStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoteReplicatorAcknowledgementStatus of this RemoteReplicatorAcknowledgementStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def copy_stream_acknowledgement_detail(self):
        """Gets the copy_stream_acknowledgement_detail of this RemoteReplicatorAcknowledgementStatus.


        :return: The copy_stream_acknowledgement_detail of this RemoteReplicatorAcknowledgementStatus.
        :rtype: RemoteReplicatorAcknowledgementDetail
        """
        return self._copy_stream_acknowledgement_detail

    @copy_stream_acknowledgement_detail.setter
    def copy_stream_acknowledgement_detail(self, copy_stream_acknowledgement_detail):
        """Sets the copy_stream_acknowledgement_detail of this RemoteReplicatorAcknowledgementStatus.


        :param copy_stream_acknowledgement_detail: The copy_stream_acknowledgement_detail of this RemoteReplicatorAcknowledgementStatus.
        :type copy_stream_acknowledgement_detail: RemoteReplicatorAcknowledgementDetail
        """

        self._copy_stream_acknowledgement_detail = copy_stream_acknowledgement_detail

    @property
    def replication_stream_acknowledgement_detail(self):
        """Gets the replication_stream_acknowledgement_detail of this RemoteReplicatorAcknowledgementStatus.


        :return: The replication_stream_acknowledgement_detail of this RemoteReplicatorAcknowledgementStatus.
        :rtype: RemoteReplicatorAcknowledgementDetail
        """
        return self._replication_stream_acknowledgement_detail

    @replication_stream_acknowledgement_detail.setter
    def replication_stream_acknowledgement_detail(self, replication_stream_acknowledgement_detail):
        """Sets the replication_stream_acknowledgement_detail of this RemoteReplicatorAcknowledgementStatus.


        :param replication_stream_acknowledgement_detail: The replication_stream_acknowledgement_detail of this RemoteReplicatorAcknowledgementStatus.
        :type replication_stream_acknowledgement_detail: RemoteReplicatorAcknowledgementDetail
        """

        self._replication_stream_acknowledgement_detail = replication_stream_acknowledgement_detail
