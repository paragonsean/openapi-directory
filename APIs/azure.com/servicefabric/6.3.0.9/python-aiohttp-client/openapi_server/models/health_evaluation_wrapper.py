# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_evaluation import HealthEvaluation
from openapi_server import util


class HealthEvaluationWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, health_evaluation: HealthEvaluation=None):
        """HealthEvaluationWrapper - a model defined in OpenAPI

        :param health_evaluation: The health_evaluation of this HealthEvaluationWrapper.
        """
        self.openapi_types = {
            'health_evaluation': HealthEvaluation
        }

        self.attribute_map = {
            'health_evaluation': 'HealthEvaluation'
        }

        self._health_evaluation = health_evaluation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HealthEvaluationWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HealthEvaluationWrapper of this HealthEvaluationWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def health_evaluation(self):
        """Gets the health_evaluation of this HealthEvaluationWrapper.


        :return: The health_evaluation of this HealthEvaluationWrapper.
        :rtype: HealthEvaluation
        """
        return self._health_evaluation

    @health_evaluation.setter
    def health_evaluation(self, health_evaluation):
        """Sets the health_evaluation of this HealthEvaluationWrapper.


        :param health_evaluation: The health_evaluation of this HealthEvaluationWrapper.
        :type health_evaluation: HealthEvaluation
        """

        self._health_evaluation = health_evaluation
