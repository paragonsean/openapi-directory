# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResumeApplicationUpgradeDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, upgrade_domain_name: str=None):
        """ResumeApplicationUpgradeDescription - a model defined in OpenAPI

        :param upgrade_domain_name: The upgrade_domain_name of this ResumeApplicationUpgradeDescription.
        """
        self.openapi_types = {
            'upgrade_domain_name': str
        }

        self.attribute_map = {
            'upgrade_domain_name': 'UpgradeDomainName'
        }

        self._upgrade_domain_name = upgrade_domain_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResumeApplicationUpgradeDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResumeApplicationUpgradeDescription of this ResumeApplicationUpgradeDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def upgrade_domain_name(self):
        """Gets the upgrade_domain_name of this ResumeApplicationUpgradeDescription.

        The name of the upgrade domain in which to resume the upgrade.

        :return: The upgrade_domain_name of this ResumeApplicationUpgradeDescription.
        :rtype: str
        """
        return self._upgrade_domain_name

    @upgrade_domain_name.setter
    def upgrade_domain_name(self, upgrade_domain_name):
        """Sets the upgrade_domain_name of this ResumeApplicationUpgradeDescription.

        The name of the upgrade domain in which to resume the upgrade.

        :param upgrade_domain_name: The upgrade_domain_name of this ResumeApplicationUpgradeDescription.
        :type upgrade_domain_name: str
        """
        if upgrade_domain_name is None:
            raise ValueError("Invalid value for `upgrade_domain_name`, must not be `None`")

        self._upgrade_domain_name = upgrade_domain_name
