# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VolumeProviderParametersAzureFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_key: str=None, account_name: str=None, share_name: str=None):
        """VolumeProviderParametersAzureFile - a model defined in OpenAPI

        :param account_key: The account_key of this VolumeProviderParametersAzureFile.
        :param account_name: The account_name of this VolumeProviderParametersAzureFile.
        :param share_name: The share_name of this VolumeProviderParametersAzureFile.
        """
        self.openapi_types = {
            'account_key': str,
            'account_name': str,
            'share_name': str
        }

        self.attribute_map = {
            'account_key': 'accountKey',
            'account_name': 'accountName',
            'share_name': 'shareName'
        }

        self._account_key = account_key
        self._account_name = account_name
        self._share_name = share_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VolumeProviderParametersAzureFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VolumeProviderParametersAzureFile of this VolumeProviderParametersAzureFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_key(self):
        """Gets the account_key of this VolumeProviderParametersAzureFile.

        Access key of the Azure storage account for the File Share.

        :return: The account_key of this VolumeProviderParametersAzureFile.
        :rtype: str
        """
        return self._account_key

    @account_key.setter
    def account_key(self, account_key):
        """Sets the account_key of this VolumeProviderParametersAzureFile.

        Access key of the Azure storage account for the File Share.

        :param account_key: The account_key of this VolumeProviderParametersAzureFile.
        :type account_key: str
        """

        self._account_key = account_key

    @property
    def account_name(self):
        """Gets the account_name of this VolumeProviderParametersAzureFile.

        Name of the Azure storage account for the File Share.

        :return: The account_name of this VolumeProviderParametersAzureFile.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this VolumeProviderParametersAzureFile.

        Name of the Azure storage account for the File Share.

        :param account_name: The account_name of this VolumeProviderParametersAzureFile.
        :type account_name: str
        """
        if account_name is None:
            raise ValueError("Invalid value for `account_name`, must not be `None`")

        self._account_name = account_name

    @property
    def share_name(self):
        """Gets the share_name of this VolumeProviderParametersAzureFile.

        Name of the Azure Files file share that provides storage for the volume.

        :return: The share_name of this VolumeProviderParametersAzureFile.
        :rtype: str
        """
        return self._share_name

    @share_name.setter
    def share_name(self, share_name):
        """Sets the share_name of this VolumeProviderParametersAzureFile.

        Name of the Azure Files file share that provides storage for the volume.

        :param share_name: The share_name of this VolumeProviderParametersAzureFile.
        :type share_name: str
        """
        if share_name is None:
            raise ValueError("Invalid value for `share_name`, must not be `None`")

        self._share_name = share_name
