# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reconfiguration_phase import ReconfigurationPhase
from openapi_server.models.reconfiguration_type import ReconfigurationType
from openapi_server.models.replica_role import ReplicaRole
from openapi_server import util


class ReconfigurationInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, previous_configuration_role: ReplicaRole=None, reconfiguration_phase: ReconfigurationPhase=None, reconfiguration_start_time_utc: datetime=None, reconfiguration_type: ReconfigurationType=None):
        """ReconfigurationInformation - a model defined in OpenAPI

        :param previous_configuration_role: The previous_configuration_role of this ReconfigurationInformation.
        :param reconfiguration_phase: The reconfiguration_phase of this ReconfigurationInformation.
        :param reconfiguration_start_time_utc: The reconfiguration_start_time_utc of this ReconfigurationInformation.
        :param reconfiguration_type: The reconfiguration_type of this ReconfigurationInformation.
        """
        self.openapi_types = {
            'previous_configuration_role': ReplicaRole,
            'reconfiguration_phase': ReconfigurationPhase,
            'reconfiguration_start_time_utc': datetime,
            'reconfiguration_type': ReconfigurationType
        }

        self.attribute_map = {
            'previous_configuration_role': 'PreviousConfigurationRole',
            'reconfiguration_phase': 'ReconfigurationPhase',
            'reconfiguration_start_time_utc': 'ReconfigurationStartTimeUtc',
            'reconfiguration_type': 'ReconfigurationType'
        }

        self._previous_configuration_role = previous_configuration_role
        self._reconfiguration_phase = reconfiguration_phase
        self._reconfiguration_start_time_utc = reconfiguration_start_time_utc
        self._reconfiguration_type = reconfiguration_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReconfigurationInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReconfigurationInformation of this ReconfigurationInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def previous_configuration_role(self):
        """Gets the previous_configuration_role of this ReconfigurationInformation.


        :return: The previous_configuration_role of this ReconfigurationInformation.
        :rtype: ReplicaRole
        """
        return self._previous_configuration_role

    @previous_configuration_role.setter
    def previous_configuration_role(self, previous_configuration_role):
        """Sets the previous_configuration_role of this ReconfigurationInformation.


        :param previous_configuration_role: The previous_configuration_role of this ReconfigurationInformation.
        :type previous_configuration_role: ReplicaRole
        """

        self._previous_configuration_role = previous_configuration_role

    @property
    def reconfiguration_phase(self):
        """Gets the reconfiguration_phase of this ReconfigurationInformation.


        :return: The reconfiguration_phase of this ReconfigurationInformation.
        :rtype: ReconfigurationPhase
        """
        return self._reconfiguration_phase

    @reconfiguration_phase.setter
    def reconfiguration_phase(self, reconfiguration_phase):
        """Sets the reconfiguration_phase of this ReconfigurationInformation.


        :param reconfiguration_phase: The reconfiguration_phase of this ReconfigurationInformation.
        :type reconfiguration_phase: ReconfigurationPhase
        """

        self._reconfiguration_phase = reconfiguration_phase

    @property
    def reconfiguration_start_time_utc(self):
        """Gets the reconfiguration_start_time_utc of this ReconfigurationInformation.

        Start time (in UTC) of the ongoing reconfiguration. If no reconfiguration is taking place then this value will be zero date-time.

        :return: The reconfiguration_start_time_utc of this ReconfigurationInformation.
        :rtype: datetime
        """
        return self._reconfiguration_start_time_utc

    @reconfiguration_start_time_utc.setter
    def reconfiguration_start_time_utc(self, reconfiguration_start_time_utc):
        """Sets the reconfiguration_start_time_utc of this ReconfigurationInformation.

        Start time (in UTC) of the ongoing reconfiguration. If no reconfiguration is taking place then this value will be zero date-time.

        :param reconfiguration_start_time_utc: The reconfiguration_start_time_utc of this ReconfigurationInformation.
        :type reconfiguration_start_time_utc: datetime
        """

        self._reconfiguration_start_time_utc = reconfiguration_start_time_utc

    @property
    def reconfiguration_type(self):
        """Gets the reconfiguration_type of this ReconfigurationInformation.


        :return: The reconfiguration_type of this ReconfigurationInformation.
        :rtype: ReconfigurationType
        """
        return self._reconfiguration_type

    @reconfiguration_type.setter
    def reconfiguration_type(self, reconfiguration_type):
        """Sets the reconfiguration_type of this ReconfigurationInformation.


        :param reconfiguration_type: The reconfiguration_type of this ReconfigurationInformation.
        :type reconfiguration_type: ReconfigurationType
        """

        self._reconfiguration_type = reconfiguration_type
