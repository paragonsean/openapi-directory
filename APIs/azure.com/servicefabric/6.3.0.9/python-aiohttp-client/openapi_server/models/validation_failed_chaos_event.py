# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chaos_event import ChaosEvent
from openapi_server.models.chaos_event_kind import ChaosEventKind
from openapi_server import util


class ValidationFailedChaosEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: ChaosEventKind=None, time_stamp_utc: datetime=None, reason: str=None):
        """ValidationFailedChaosEvent - a model defined in OpenAPI

        :param kind: The kind of this ValidationFailedChaosEvent.
        :param time_stamp_utc: The time_stamp_utc of this ValidationFailedChaosEvent.
        :param reason: The reason of this ValidationFailedChaosEvent.
        """
        self.openapi_types = {
            'kind': ChaosEventKind,
            'time_stamp_utc': datetime,
            'reason': str
        }

        self.attribute_map = {
            'kind': 'Kind',
            'time_stamp_utc': 'TimeStampUtc',
            'reason': 'Reason'
        }

        self._kind = kind
        self._time_stamp_utc = time_stamp_utc
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ValidationFailedChaosEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ValidationFailedChaosEvent of this ValidationFailedChaosEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this ValidationFailedChaosEvent.


        :return: The kind of this ValidationFailedChaosEvent.
        :rtype: ChaosEventKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ValidationFailedChaosEvent.


        :param kind: The kind of this ValidationFailedChaosEvent.
        :type kind: ChaosEventKind
        """
        if kind is None:
            raise ValueError("Invalid value for `kind`, must not be `None`")

        self._kind = kind

    @property
    def time_stamp_utc(self):
        """Gets the time_stamp_utc of this ValidationFailedChaosEvent.

        The UTC timestamp when this Chaos event was generated.

        :return: The time_stamp_utc of this ValidationFailedChaosEvent.
        :rtype: datetime
        """
        return self._time_stamp_utc

    @time_stamp_utc.setter
    def time_stamp_utc(self, time_stamp_utc):
        """Sets the time_stamp_utc of this ValidationFailedChaosEvent.

        The UTC timestamp when this Chaos event was generated.

        :param time_stamp_utc: The time_stamp_utc of this ValidationFailedChaosEvent.
        :type time_stamp_utc: datetime
        """
        if time_stamp_utc is None:
            raise ValueError("Invalid value for `time_stamp_utc`, must not be `None`")

        self._time_stamp_utc = time_stamp_utc

    @property
    def reason(self):
        """Gets the reason of this ValidationFailedChaosEvent.

        Describes why the ValidationFailedChaosEvent was generated. This may happen because more than MaxPercentUnhealthyNodes are unhealthy for more than MaxClusterStabilizationTimeout. This reason will be in the Reason property of the ValidationFailedChaosEvent as a string.

        :return: The reason of this ValidationFailedChaosEvent.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this ValidationFailedChaosEvent.

        Describes why the ValidationFailedChaosEvent was generated. This may happen because more than MaxPercentUnhealthyNodes are unhealthy for more than MaxClusterStabilizationTimeout. This reason will be in the Reason property of the ValidationFailedChaosEvent as a string.

        :param reason: The reason of this ValidationFailedChaosEvent.
        :type reason: str
        """

        self._reason = reason
