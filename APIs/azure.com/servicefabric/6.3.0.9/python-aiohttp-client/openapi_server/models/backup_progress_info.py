# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.backup_epoch import BackupEpoch
from openapi_server.models.backup_state import BackupState
from openapi_server.models.fabric_error_error import FabricErrorError
from openapi_server import util


class BackupProgressInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_id: str=None, backup_location: str=None, backup_state: BackupState=None, epoch_of_last_backup_record: BackupEpoch=None, failure_error: FabricErrorError=None, lsn_of_last_backup_record: str=None, time_stamp_utc: datetime=None):
        """BackupProgressInfo - a model defined in OpenAPI

        :param backup_id: The backup_id of this BackupProgressInfo.
        :param backup_location: The backup_location of this BackupProgressInfo.
        :param backup_state: The backup_state of this BackupProgressInfo.
        :param epoch_of_last_backup_record: The epoch_of_last_backup_record of this BackupProgressInfo.
        :param failure_error: The failure_error of this BackupProgressInfo.
        :param lsn_of_last_backup_record: The lsn_of_last_backup_record of this BackupProgressInfo.
        :param time_stamp_utc: The time_stamp_utc of this BackupProgressInfo.
        """
        self.openapi_types = {
            'backup_id': str,
            'backup_location': str,
            'backup_state': BackupState,
            'epoch_of_last_backup_record': BackupEpoch,
            'failure_error': FabricErrorError,
            'lsn_of_last_backup_record': str,
            'time_stamp_utc': datetime
        }

        self.attribute_map = {
            'backup_id': 'BackupId',
            'backup_location': 'BackupLocation',
            'backup_state': 'BackupState',
            'epoch_of_last_backup_record': 'EpochOfLastBackupRecord',
            'failure_error': 'FailureError',
            'lsn_of_last_backup_record': 'LsnOfLastBackupRecord',
            'time_stamp_utc': 'TimeStampUtc'
        }

        self._backup_id = backup_id
        self._backup_location = backup_location
        self._backup_state = backup_state
        self._epoch_of_last_backup_record = epoch_of_last_backup_record
        self._failure_error = failure_error
        self._lsn_of_last_backup_record = lsn_of_last_backup_record
        self._time_stamp_utc = time_stamp_utc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackupProgressInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackupProgressInfo of this BackupProgressInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_id(self):
        """Gets the backup_id of this BackupProgressInfo.

        Unique ID of the newly created backup.

        :return: The backup_id of this BackupProgressInfo.
        :rtype: str
        """
        return self._backup_id

    @backup_id.setter
    def backup_id(self, backup_id):
        """Sets the backup_id of this BackupProgressInfo.

        Unique ID of the newly created backup.

        :param backup_id: The backup_id of this BackupProgressInfo.
        :type backup_id: str
        """

        self._backup_id = backup_id

    @property
    def backup_location(self):
        """Gets the backup_location of this BackupProgressInfo.

        Location, relative to the backup store, of the newly created backup.

        :return: The backup_location of this BackupProgressInfo.
        :rtype: str
        """
        return self._backup_location

    @backup_location.setter
    def backup_location(self, backup_location):
        """Sets the backup_location of this BackupProgressInfo.

        Location, relative to the backup store, of the newly created backup.

        :param backup_location: The backup_location of this BackupProgressInfo.
        :type backup_location: str
        """

        self._backup_location = backup_location

    @property
    def backup_state(self):
        """Gets the backup_state of this BackupProgressInfo.


        :return: The backup_state of this BackupProgressInfo.
        :rtype: BackupState
        """
        return self._backup_state

    @backup_state.setter
    def backup_state(self, backup_state):
        """Sets the backup_state of this BackupProgressInfo.


        :param backup_state: The backup_state of this BackupProgressInfo.
        :type backup_state: BackupState
        """

        self._backup_state = backup_state

    @property
    def epoch_of_last_backup_record(self):
        """Gets the epoch_of_last_backup_record of this BackupProgressInfo.


        :return: The epoch_of_last_backup_record of this BackupProgressInfo.
        :rtype: BackupEpoch
        """
        return self._epoch_of_last_backup_record

    @epoch_of_last_backup_record.setter
    def epoch_of_last_backup_record(self, epoch_of_last_backup_record):
        """Sets the epoch_of_last_backup_record of this BackupProgressInfo.


        :param epoch_of_last_backup_record: The epoch_of_last_backup_record of this BackupProgressInfo.
        :type epoch_of_last_backup_record: BackupEpoch
        """

        self._epoch_of_last_backup_record = epoch_of_last_backup_record

    @property
    def failure_error(self):
        """Gets the failure_error of this BackupProgressInfo.


        :return: The failure_error of this BackupProgressInfo.
        :rtype: FabricErrorError
        """
        return self._failure_error

    @failure_error.setter
    def failure_error(self, failure_error):
        """Sets the failure_error of this BackupProgressInfo.


        :param failure_error: The failure_error of this BackupProgressInfo.
        :type failure_error: FabricErrorError
        """

        self._failure_error = failure_error

    @property
    def lsn_of_last_backup_record(self):
        """Gets the lsn_of_last_backup_record of this BackupProgressInfo.

        The LSN of last record included in backup.

        :return: The lsn_of_last_backup_record of this BackupProgressInfo.
        :rtype: str
        """
        return self._lsn_of_last_backup_record

    @lsn_of_last_backup_record.setter
    def lsn_of_last_backup_record(self, lsn_of_last_backup_record):
        """Sets the lsn_of_last_backup_record of this BackupProgressInfo.

        The LSN of last record included in backup.

        :param lsn_of_last_backup_record: The lsn_of_last_backup_record of this BackupProgressInfo.
        :type lsn_of_last_backup_record: str
        """

        self._lsn_of_last_backup_record = lsn_of_last_backup_record

    @property
    def time_stamp_utc(self):
        """Gets the time_stamp_utc of this BackupProgressInfo.

        TimeStamp in UTC when operation succeeded or failed.

        :return: The time_stamp_utc of this BackupProgressInfo.
        :rtype: datetime
        """
        return self._time_stamp_utc

    @time_stamp_utc.setter
    def time_stamp_utc(self, time_stamp_utc):
        """Sets the time_stamp_utc of this BackupProgressInfo.

        TimeStamp in UTC when operation succeeded or failed.

        :param time_stamp_utc: The time_stamp_utc of this BackupProgressInfo.
        :type time_stamp_utc: datetime
        """

        self._time_stamp_utc = time_stamp_utc
