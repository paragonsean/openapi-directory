# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scaling_mechanism_description import ScalingMechanismDescription
from openapi_server.models.scaling_trigger_description import ScalingTriggerDescription
from openapi_server import util


class ScalingPolicyDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scaling_mechanism: ScalingMechanismDescription=None, scaling_trigger: ScalingTriggerDescription=None):
        """ScalingPolicyDescription - a model defined in OpenAPI

        :param scaling_mechanism: The scaling_mechanism of this ScalingPolicyDescription.
        :param scaling_trigger: The scaling_trigger of this ScalingPolicyDescription.
        """
        self.openapi_types = {
            'scaling_mechanism': ScalingMechanismDescription,
            'scaling_trigger': ScalingTriggerDescription
        }

        self.attribute_map = {
            'scaling_mechanism': 'ScalingMechanism',
            'scaling_trigger': 'ScalingTrigger'
        }

        self._scaling_mechanism = scaling_mechanism
        self._scaling_trigger = scaling_trigger

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScalingPolicyDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScalingPolicyDescription of this ScalingPolicyDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scaling_mechanism(self):
        """Gets the scaling_mechanism of this ScalingPolicyDescription.


        :return: The scaling_mechanism of this ScalingPolicyDescription.
        :rtype: ScalingMechanismDescription
        """
        return self._scaling_mechanism

    @scaling_mechanism.setter
    def scaling_mechanism(self, scaling_mechanism):
        """Sets the scaling_mechanism of this ScalingPolicyDescription.


        :param scaling_mechanism: The scaling_mechanism of this ScalingPolicyDescription.
        :type scaling_mechanism: ScalingMechanismDescription
        """
        if scaling_mechanism is None:
            raise ValueError("Invalid value for `scaling_mechanism`, must not be `None`")

        self._scaling_mechanism = scaling_mechanism

    @property
    def scaling_trigger(self):
        """Gets the scaling_trigger of this ScalingPolicyDescription.


        :return: The scaling_trigger of this ScalingPolicyDescription.
        :rtype: ScalingTriggerDescription
        """
        return self._scaling_trigger

    @scaling_trigger.setter
    def scaling_trigger(self, scaling_trigger):
        """Sets the scaling_trigger of this ScalingPolicyDescription.


        :param scaling_trigger: The scaling_trigger of this ScalingPolicyDescription.
        :type scaling_trigger: ScalingTriggerDescription
        """
        if scaling_trigger is None:
            raise ValueError("Invalid value for `scaling_trigger`, must not be `None`")

        self._scaling_trigger = scaling_trigger
