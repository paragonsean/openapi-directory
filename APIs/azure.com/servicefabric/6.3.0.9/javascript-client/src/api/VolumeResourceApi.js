/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FabricError from '../model/FabricError';
import VolumeResourceDescription from '../model/VolumeResourceDescription';

/**
* VolumeResource service.
* @module api/VolumeResourceApi
* @version 6.3.0.9
*/
export default class VolumeResourceApi {

    /**
    * Constructs a new VolumeResourceApi. 
    * @alias module:api/VolumeResourceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createVolumeResource operation.
     * @callback module:api/VolumeResourceApi~createVolumeResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a volume resource.
     * Creates a volume resource with the specified name and description. If a volume with the same name already exists, then its description is updated to the one indicated in this request.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.3-preview'.
     * @param {String} volumeResourceName Service Fabric volume resource name.
     * @param {module:model/VolumeResourceDescription} volumeResourceDescription Description for creating a volume resource.
     * @param {module:api/VolumeResourceApi~createVolumeResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    createVolumeResource(apiVersion, volumeResourceName, volumeResourceDescription, callback) {
      let postBody = volumeResourceDescription;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling createVolumeResource");
      }
      // verify the required parameter 'volumeResourceName' is set
      if (volumeResourceName === undefined || volumeResourceName === null) {
        throw new Error("Missing the required parameter 'volumeResourceName' when calling createVolumeResource");
      }
      // verify the required parameter 'volumeResourceDescription' is set
      if (volumeResourceDescription === undefined || volumeResourceDescription === null) {
        throw new Error("Missing the required parameter 'volumeResourceDescription' when calling createVolumeResource");
      }

      let pathParams = {
        'volumeResourceName': volumeResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Resources/Volumes/{volumeResourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVolumeResource operation.
     * @callback module:api/VolumeResourceApi~deleteVolumeResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the volume resource.
     * Deletes the volume identified by the name.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.3-preview'.
     * @param {String} volumeResourceName Service Fabric volume resource name.
     * @param {module:api/VolumeResourceApi~deleteVolumeResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteVolumeResource(apiVersion, volumeResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling deleteVolumeResource");
      }
      // verify the required parameter 'volumeResourceName' is set
      if (volumeResourceName === undefined || volumeResourceName === null) {
        throw new Error("Missing the required parameter 'volumeResourceName' when calling deleteVolumeResource");
      }

      let pathParams = {
        'volumeResourceName': volumeResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Resources/Volumes/{volumeResourceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVolumeResource operation.
     * @callback module:api/VolumeResourceApi~getVolumeResourceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VolumeResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the volume resource.
     * Gets the information about the volume resource with a given name. This information includes the volume description and other runtime information.
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be '6.3-preview'.
     * @param {String} volumeResourceName Service Fabric volume resource name.
     * @param {module:api/VolumeResourceApi~getVolumeResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VolumeResourceDescription}
     */
    getVolumeResource(apiVersion, volumeResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getVolumeResource");
      }
      // verify the required parameter 'volumeResourceName' is set
      if (volumeResourceName === undefined || volumeResourceName === null) {
        throw new Error("Missing the required parameter 'volumeResourceName' when calling getVolumeResource");
      }

      let pathParams = {
        'volumeResourceName': volumeResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VolumeResourceDescription;
      return this.apiClient.callApi(
        '/Resources/Volumes/{volumeResourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
