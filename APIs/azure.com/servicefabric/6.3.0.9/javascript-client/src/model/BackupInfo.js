/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BackupEpoch from './BackupEpoch';
import BackupType from './BackupType';
import FabricErrorError from './FabricErrorError';
import PartitionInformation from './PartitionInformation';

/**
 * The BackupInfo model module.
 * @module model/BackupInfo
 * @version 6.3.0.9
 */
class BackupInfo {
    /**
     * Constructs a new <code>BackupInfo</code>.
     * Represents a backup point which can be used to trigger a restore.
     * @alias module:model/BackupInfo
     */
    constructor() { 
        
        BackupInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BackupInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupInfo} obj Optional instance to populate.
     * @return {module:model/BackupInfo} The populated <code>BackupInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupInfo();

            if (data.hasOwnProperty('ApplicationName')) {
                obj['ApplicationName'] = ApiClient.convertToType(data['ApplicationName'], 'String');
            }
            if (data.hasOwnProperty('BackupChainId')) {
                obj['BackupChainId'] = ApiClient.convertToType(data['BackupChainId'], 'String');
            }
            if (data.hasOwnProperty('BackupId')) {
                obj['BackupId'] = ApiClient.convertToType(data['BackupId'], 'String');
            }
            if (data.hasOwnProperty('BackupLocation')) {
                obj['BackupLocation'] = ApiClient.convertToType(data['BackupLocation'], 'String');
            }
            if (data.hasOwnProperty('BackupType')) {
                obj['BackupType'] = BackupType.constructFromObject(data['BackupType']);
            }
            if (data.hasOwnProperty('CreationTimeUtc')) {
                obj['CreationTimeUtc'] = ApiClient.convertToType(data['CreationTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('EpochOfLastBackupRecord')) {
                obj['EpochOfLastBackupRecord'] = BackupEpoch.constructFromObject(data['EpochOfLastBackupRecord']);
            }
            if (data.hasOwnProperty('FailureError')) {
                obj['FailureError'] = FabricErrorError.constructFromObject(data['FailureError']);
            }
            if (data.hasOwnProperty('LsnOfLastBackupRecord')) {
                obj['LsnOfLastBackupRecord'] = ApiClient.convertToType(data['LsnOfLastBackupRecord'], 'String');
            }
            if (data.hasOwnProperty('PartitionInformation')) {
                obj['PartitionInformation'] = PartitionInformation.constructFromObject(data['PartitionInformation']);
            }
            if (data.hasOwnProperty('ServiceName')) {
                obj['ServiceName'] = ApiClient.convertToType(data['ServiceName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ApplicationName'] && !(typeof data['ApplicationName'] === 'string' || data['ApplicationName'] instanceof String)) {
            throw new Error("Expected the field `ApplicationName` to be a primitive type in the JSON string but got " + data['ApplicationName']);
        }
        // ensure the json data is a string
        if (data['BackupChainId'] && !(typeof data['BackupChainId'] === 'string' || data['BackupChainId'] instanceof String)) {
            throw new Error("Expected the field `BackupChainId` to be a primitive type in the JSON string but got " + data['BackupChainId']);
        }
        // ensure the json data is a string
        if (data['BackupId'] && !(typeof data['BackupId'] === 'string' || data['BackupId'] instanceof String)) {
            throw new Error("Expected the field `BackupId` to be a primitive type in the JSON string but got " + data['BackupId']);
        }
        // ensure the json data is a string
        if (data['BackupLocation'] && !(typeof data['BackupLocation'] === 'string' || data['BackupLocation'] instanceof String)) {
            throw new Error("Expected the field `BackupLocation` to be a primitive type in the JSON string but got " + data['BackupLocation']);
        }
        // validate the optional field `EpochOfLastBackupRecord`
        if (data['EpochOfLastBackupRecord']) { // data not null
          BackupEpoch.validateJSON(data['EpochOfLastBackupRecord']);
        }
        // validate the optional field `FailureError`
        if (data['FailureError']) { // data not null
          FabricErrorError.validateJSON(data['FailureError']);
        }
        // ensure the json data is a string
        if (data['LsnOfLastBackupRecord'] && !(typeof data['LsnOfLastBackupRecord'] === 'string' || data['LsnOfLastBackupRecord'] instanceof String)) {
            throw new Error("Expected the field `LsnOfLastBackupRecord` to be a primitive type in the JSON string but got " + data['LsnOfLastBackupRecord']);
        }
        // validate the optional field `PartitionInformation`
        if (data['PartitionInformation']) { // data not null
          PartitionInformation.validateJSON(data['PartitionInformation']);
        }
        // ensure the json data is a string
        if (data['ServiceName'] && !(typeof data['ServiceName'] === 'string' || data['ServiceName'] instanceof String)) {
            throw new Error("Expected the field `ServiceName` to be a primitive type in the JSON string but got " + data['ServiceName']);
        }

        return true;
    }


}



/**
 * Name of the Service Fabric application this partition backup belongs to.
 * @member {String} ApplicationName
 */
BackupInfo.prototype['ApplicationName'] = undefined;

/**
 * Unique backup chain ID. All backups part of the same chain has the same backup chain id. A backup chain is comprised of 1 full backup and multiple incremental backups.
 * @member {String} BackupChainId
 */
BackupInfo.prototype['BackupChainId'] = undefined;

/**
 * Unique backup ID .
 * @member {String} BackupId
 */
BackupInfo.prototype['BackupId'] = undefined;

/**
 * Location of the backup, relative to the backup store.
 * @member {String} BackupLocation
 */
BackupInfo.prototype['BackupLocation'] = undefined;

/**
 * @member {module:model/BackupType} BackupType
 */
BackupInfo.prototype['BackupType'] = undefined;

/**
 * The date time when this backup was taken.
 * @member {Date} CreationTimeUtc
 */
BackupInfo.prototype['CreationTimeUtc'] = undefined;

/**
 * @member {module:model/BackupEpoch} EpochOfLastBackupRecord
 */
BackupInfo.prototype['EpochOfLastBackupRecord'] = undefined;

/**
 * @member {module:model/FabricErrorError} FailureError
 */
BackupInfo.prototype['FailureError'] = undefined;

/**
 * LSN of the last record in this backup.
 * @member {String} LsnOfLastBackupRecord
 */
BackupInfo.prototype['LsnOfLastBackupRecord'] = undefined;

/**
 * @member {module:model/PartitionInformation} PartitionInformation
 */
BackupInfo.prototype['PartitionInformation'] = undefined;

/**
 * Name of the Service Fabric service this partition backup belongs to.
 * @member {String} ServiceName
 */
BackupInfo.prototype['ServiceName'] = undefined;






export default BackupInfo;

