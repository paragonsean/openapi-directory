/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RestartNodeDescription model module.
 * @module model/RestartNodeDescription
 * @version 6.3.0.9
 */
class RestartNodeDescription {
    /**
     * Constructs a new <code>RestartNodeDescription</code>.
     * Describes the parameters to restart a Service Fabric node.
     * @alias module:model/RestartNodeDescription
     * @param nodeInstanceId {String} The instance ID of the target node. If instance ID is specified the node is restarted only if it matches with the current instance of the node. A default value of \"0\" would match any instance ID. The instance ID can be obtained using get node query.
     */
    constructor(nodeInstanceId) { 
        
        RestartNodeDescription.initialize(this, nodeInstanceId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nodeInstanceId) { 
        obj['CreateFabricDump'] = 'False';
        obj['NodeInstanceId'] = nodeInstanceId || '0';
    }

    /**
     * Constructs a <code>RestartNodeDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RestartNodeDescription} obj Optional instance to populate.
     * @return {module:model/RestartNodeDescription} The populated <code>RestartNodeDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RestartNodeDescription();

            if (data.hasOwnProperty('CreateFabricDump')) {
                obj['CreateFabricDump'] = ApiClient.convertToType(data['CreateFabricDump'], 'String');
            }
            if (data.hasOwnProperty('NodeInstanceId')) {
                obj['NodeInstanceId'] = ApiClient.convertToType(data['NodeInstanceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RestartNodeDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RestartNodeDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RestartNodeDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['CreateFabricDump'] && !(typeof data['CreateFabricDump'] === 'string' || data['CreateFabricDump'] instanceof String)) {
            throw new Error("Expected the field `CreateFabricDump` to be a primitive type in the JSON string but got " + data['CreateFabricDump']);
        }
        // ensure the json data is a string
        if (data['NodeInstanceId'] && !(typeof data['NodeInstanceId'] === 'string' || data['NodeInstanceId'] instanceof String)) {
            throw new Error("Expected the field `NodeInstanceId` to be a primitive type in the JSON string but got " + data['NodeInstanceId']);
        }

        return true;
    }


}

RestartNodeDescription.RequiredProperties = ["NodeInstanceId"];

/**
 * Specify True to create a dump of the fabric node process. This is case-sensitive.
 * @member {module:model/RestartNodeDescription.CreateFabricDumpEnum} CreateFabricDump
 * @default 'False'
 */
RestartNodeDescription.prototype['CreateFabricDump'] = 'False';

/**
 * The instance ID of the target node. If instance ID is specified the node is restarted only if it matches with the current instance of the node. A default value of \"0\" would match any instance ID. The instance ID can be obtained using get node query.
 * @member {String} NodeInstanceId
 * @default '0'
 */
RestartNodeDescription.prototype['NodeInstanceId'] = '0';





/**
 * Allowed values for the <code>CreateFabricDump</code> property.
 * @enum {String}
 * @readonly
 */
RestartNodeDescription['CreateFabricDumpEnum'] = {

    /**
     * value: "False"
     * @const
     */
    "False": "False",

    /**
     * value: "True"
     * @const
     */
    "True": "True"
};



export default RestartNodeDescription;

