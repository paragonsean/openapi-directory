/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class FabricEventKind.
* @enum {}
* @readonly
*/
export default class FabricEventKind {
    
        /**
         * value: "ClusterEvent"
         * @const
         */
        "ClusterEvent" = "ClusterEvent";

    
        /**
         * value: "ContainerInstanceEvent"
         * @const
         */
        "ContainerInstanceEvent" = "ContainerInstanceEvent";

    
        /**
         * value: "NodeEvent"
         * @const
         */
        "NodeEvent" = "NodeEvent";

    
        /**
         * value: "ApplicationEvent"
         * @const
         */
        "ApplicationEvent" = "ApplicationEvent";

    
        /**
         * value: "ServiceEvent"
         * @const
         */
        "ServiceEvent" = "ServiceEvent";

    
        /**
         * value: "PartitionEvent"
         * @const
         */
        "PartitionEvent" = "PartitionEvent";

    
        /**
         * value: "ReplicaEvent"
         * @const
         */
        "ReplicaEvent" = "ReplicaEvent";

    
        /**
         * value: "PartitionAnalysisEvent"
         * @const
         */
        "PartitionAnalysisEvent" = "PartitionAnalysisEvent";

    
        /**
         * value: "ApplicationCreated"
         * @const
         */
        "ApplicationCreated" = "ApplicationCreated";

    
        /**
         * value: "ApplicationDeleted"
         * @const
         */
        "ApplicationDeleted" = "ApplicationDeleted";

    
        /**
         * value: "ApplicationHealthReportCreated"
         * @const
         */
        "ApplicationHealthReportCreated" = "ApplicationHealthReportCreated";

    
        /**
         * value: "ApplicationHealthReportExpired"
         * @const
         */
        "ApplicationHealthReportExpired" = "ApplicationHealthReportExpired";

    
        /**
         * value: "ApplicationUpgradeComplete"
         * @const
         */
        "ApplicationUpgradeComplete" = "ApplicationUpgradeComplete";

    
        /**
         * value: "ApplicationUpgradeDomainComplete"
         * @const
         */
        "ApplicationUpgradeDomainComplete" = "ApplicationUpgradeDomainComplete";

    
        /**
         * value: "ApplicationUpgradeRollbackComplete"
         * @const
         */
        "ApplicationUpgradeRollbackComplete" = "ApplicationUpgradeRollbackComplete";

    
        /**
         * value: "ApplicationUpgradeRollbackStart"
         * @const
         */
        "ApplicationUpgradeRollbackStart" = "ApplicationUpgradeRollbackStart";

    
        /**
         * value: "ApplicationUpgradeStart"
         * @const
         */
        "ApplicationUpgradeStart" = "ApplicationUpgradeStart";

    
        /**
         * value: "DeployedApplicationHealthReportCreated"
         * @const
         */
        "DeployedApplicationHealthReportCreated" = "DeployedApplicationHealthReportCreated";

    
        /**
         * value: "DeployedApplicationHealthReportExpired"
         * @const
         */
        "DeployedApplicationHealthReportExpired" = "DeployedApplicationHealthReportExpired";

    
        /**
         * value: "ProcessDeactivated"
         * @const
         */
        "ProcessDeactivated" = "ProcessDeactivated";

    
        /**
         * value: "ContainerDeactivated"
         * @const
         */
        "ContainerDeactivated" = "ContainerDeactivated";

    
        /**
         * value: "NodeAborted"
         * @const
         */
        "NodeAborted" = "NodeAborted";

    
        /**
         * value: "NodeAborting"
         * @const
         */
        "NodeAborting" = "NodeAborting";

    
        /**
         * value: "NodeAdded"
         * @const
         */
        "NodeAdded" = "NodeAdded";

    
        /**
         * value: "NodeClose"
         * @const
         */
        "NodeClose" = "NodeClose";

    
        /**
         * value: "NodeClosing"
         * @const
         */
        "NodeClosing" = "NodeClosing";

    
        /**
         * value: "NodeDeactivateComplete"
         * @const
         */
        "NodeDeactivateComplete" = "NodeDeactivateComplete";

    
        /**
         * value: "NodeDeactivateStart"
         * @const
         */
        "NodeDeactivateStart" = "NodeDeactivateStart";

    
        /**
         * value: "NodeDown"
         * @const
         */
        "NodeDown" = "NodeDown";

    
        /**
         * value: "NodeHealthReportCreated"
         * @const
         */
        "NodeHealthReportCreated" = "NodeHealthReportCreated";

    
        /**
         * value: "NodeHealthReportExpired"
         * @const
         */
        "NodeHealthReportExpired" = "NodeHealthReportExpired";

    
        /**
         * value: "NodeOpenedSuccess"
         * @const
         */
        "NodeOpenedSuccess" = "NodeOpenedSuccess";

    
        /**
         * value: "NodeOpenFailed"
         * @const
         */
        "NodeOpenFailed" = "NodeOpenFailed";

    
        /**
         * value: "NodeOpening"
         * @const
         */
        "NodeOpening" = "NodeOpening";

    
        /**
         * value: "NodeRemoved"
         * @const
         */
        "NodeRemoved" = "NodeRemoved";

    
        /**
         * value: "NodeUp"
         * @const
         */
        "NodeUp" = "NodeUp";

    
        /**
         * value: "PartitionHealthReportCreated"
         * @const
         */
        "PartitionHealthReportCreated" = "PartitionHealthReportCreated";

    
        /**
         * value: "PartitionHealthReportExpired"
         * @const
         */
        "PartitionHealthReportExpired" = "PartitionHealthReportExpired";

    
        /**
         * value: "PartitionReconfigurationCompleted"
         * @const
         */
        "PartitionReconfigurationCompleted" = "PartitionReconfigurationCompleted";

    
        /**
         * value: "PartitionPrimaryMoveAnalysis"
         * @const
         */
        "PartitionPrimaryMoveAnalysis" = "PartitionPrimaryMoveAnalysis";

    
        /**
         * value: "ServiceCreated"
         * @const
         */
        "ServiceCreated" = "ServiceCreated";

    
        /**
         * value: "ServiceDeleted"
         * @const
         */
        "ServiceDeleted" = "ServiceDeleted";

    
        /**
         * value: "ServiceHealthReportCreated"
         * @const
         */
        "ServiceHealthReportCreated" = "ServiceHealthReportCreated";

    
        /**
         * value: "ServiceHealthReportExpired"
         * @const
         */
        "ServiceHealthReportExpired" = "ServiceHealthReportExpired";

    
        /**
         * value: "DeployedServiceHealthReportCreated"
         * @const
         */
        "DeployedServiceHealthReportCreated" = "DeployedServiceHealthReportCreated";

    
        /**
         * value: "DeployedServiceHealthReportExpired"
         * @const
         */
        "DeployedServiceHealthReportExpired" = "DeployedServiceHealthReportExpired";

    
        /**
         * value: "StatefulReplicaHealthReportCreated"
         * @const
         */
        "StatefulReplicaHealthReportCreated" = "StatefulReplicaHealthReportCreated";

    
        /**
         * value: "StatefulReplicaHealthReportExpired"
         * @const
         */
        "StatefulReplicaHealthReportExpired" = "StatefulReplicaHealthReportExpired";

    
        /**
         * value: "StatelessReplicaHealthReportCreated"
         * @const
         */
        "StatelessReplicaHealthReportCreated" = "StatelessReplicaHealthReportCreated";

    
        /**
         * value: "StatelessReplicaHealthReportExpired"
         * @const
         */
        "StatelessReplicaHealthReportExpired" = "StatelessReplicaHealthReportExpired";

    
        /**
         * value: "ClusterHealthReportCreated"
         * @const
         */
        "ClusterHealthReportCreated" = "ClusterHealthReportCreated";

    
        /**
         * value: "ClusterHealthReportExpired"
         * @const
         */
        "ClusterHealthReportExpired" = "ClusterHealthReportExpired";

    
        /**
         * value: "ClusterUpgradeComplete"
         * @const
         */
        "ClusterUpgradeComplete" = "ClusterUpgradeComplete";

    
        /**
         * value: "ClusterUpgradeDomainComplete"
         * @const
         */
        "ClusterUpgradeDomainComplete" = "ClusterUpgradeDomainComplete";

    
        /**
         * value: "ClusterUpgradeRollbackComplete"
         * @const
         */
        "ClusterUpgradeRollbackComplete" = "ClusterUpgradeRollbackComplete";

    
        /**
         * value: "ClusterUpgradeRollbackStart"
         * @const
         */
        "ClusterUpgradeRollbackStart" = "ClusterUpgradeRollbackStart";

    
        /**
         * value: "ClusterUpgradeStart"
         * @const
         */
        "ClusterUpgradeStart" = "ClusterUpgradeStart";

    
        /**
         * value: "ChaosStopped"
         * @const
         */
        "ChaosStopped" = "ChaosStopped";

    
        /**
         * value: "ChaosStarted"
         * @const
         */
        "ChaosStarted" = "ChaosStarted";

    
        /**
         * value: "ChaosRestartNodeFaultCompleted"
         * @const
         */
        "ChaosRestartNodeFaultCompleted" = "ChaosRestartNodeFaultCompleted";

    
        /**
         * value: "ChaosRestartCodePackageFaultScheduled"
         * @const
         */
        "ChaosRestartCodePackageFaultScheduled" = "ChaosRestartCodePackageFaultScheduled";

    
        /**
         * value: "ChaosRestartCodePackageFaultCompleted"
         * @const
         */
        "ChaosRestartCodePackageFaultCompleted" = "ChaosRestartCodePackageFaultCompleted";

    
        /**
         * value: "ChaosRemoveReplicaFaultScheduled"
         * @const
         */
        "ChaosRemoveReplicaFaultScheduled" = "ChaosRemoveReplicaFaultScheduled";

    
        /**
         * value: "ChaosRemoveReplicaFaultCompleted"
         * @const
         */
        "ChaosRemoveReplicaFaultCompleted" = "ChaosRemoveReplicaFaultCompleted";

    
        /**
         * value: "ChaosMoveSecondaryFaultScheduled"
         * @const
         */
        "ChaosMoveSecondaryFaultScheduled" = "ChaosMoveSecondaryFaultScheduled";

    
        /**
         * value: "ChaosMovePrimaryFaultScheduled"
         * @const
         */
        "ChaosMovePrimaryFaultScheduled" = "ChaosMovePrimaryFaultScheduled";

    
        /**
         * value: "ChaosRestartReplicaFaultScheduled"
         * @const
         */
        "ChaosRestartReplicaFaultScheduled" = "ChaosRestartReplicaFaultScheduled";

    
        /**
         * value: "ChaosRestartNodeFaultScheduled"
         * @const
         */
        "ChaosRestartNodeFaultScheduled" = "ChaosRestartNodeFaultScheduled";

    

    /**
    * Returns a <code>FabricEventKind</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/FabricEventKind} The enum <code>FabricEventKind</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

