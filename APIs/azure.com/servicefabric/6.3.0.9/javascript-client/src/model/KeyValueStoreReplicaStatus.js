/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReplicaKind from './ReplicaKind';
import ReplicaStatusBase from './ReplicaStatusBase';

/**
 * The KeyValueStoreReplicaStatus model module.
 * @module model/KeyValueStoreReplicaStatus
 * @version 6.3.0.9
 */
class KeyValueStoreReplicaStatus {
    /**
     * Constructs a new <code>KeyValueStoreReplicaStatus</code>.
     * Key value store related information for the replica.
     * @alias module:model/KeyValueStoreReplicaStatus
     * @extends module:model/ReplicaStatusBase
     * @implements module:model/ReplicaStatusBase
     * @param kind {module:model/ReplicaKind} 
     */
    constructor(kind) { 
        ReplicaStatusBase.initialize(this, kind);
        KeyValueStoreReplicaStatus.initialize(this, kind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind) { 
    }

    /**
     * Constructs a <code>KeyValueStoreReplicaStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeyValueStoreReplicaStatus} obj Optional instance to populate.
     * @return {module:model/KeyValueStoreReplicaStatus} The populated <code>KeyValueStoreReplicaStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeyValueStoreReplicaStatus();
            ReplicaStatusBase.constructFromObject(data, obj);
            ReplicaStatusBase.constructFromObject(data, obj);

            if (data.hasOwnProperty('CopyNotificationCurrentKeyFilter')) {
                obj['CopyNotificationCurrentKeyFilter'] = ApiClient.convertToType(data['CopyNotificationCurrentKeyFilter'], 'String');
            }
            if (data.hasOwnProperty('CopyNotificationCurrentProgress')) {
                obj['CopyNotificationCurrentProgress'] = ApiClient.convertToType(data['CopyNotificationCurrentProgress'], 'String');
            }
            if (data.hasOwnProperty('DatabaseLogicalSizeEstimate')) {
                obj['DatabaseLogicalSizeEstimate'] = ApiClient.convertToType(data['DatabaseLogicalSizeEstimate'], 'String');
            }
            if (data.hasOwnProperty('DatabaseRowCountEstimate')) {
                obj['DatabaseRowCountEstimate'] = ApiClient.convertToType(data['DatabaseRowCountEstimate'], 'String');
            }
            if (data.hasOwnProperty('StatusDetails')) {
                obj['StatusDetails'] = ApiClient.convertToType(data['StatusDetails'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeyValueStoreReplicaStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeyValueStoreReplicaStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of KeyValueStoreReplicaStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['CopyNotificationCurrentKeyFilter'] && !(typeof data['CopyNotificationCurrentKeyFilter'] === 'string' || data['CopyNotificationCurrentKeyFilter'] instanceof String)) {
            throw new Error("Expected the field `CopyNotificationCurrentKeyFilter` to be a primitive type in the JSON string but got " + data['CopyNotificationCurrentKeyFilter']);
        }
        // ensure the json data is a string
        if (data['CopyNotificationCurrentProgress'] && !(typeof data['CopyNotificationCurrentProgress'] === 'string' || data['CopyNotificationCurrentProgress'] instanceof String)) {
            throw new Error("Expected the field `CopyNotificationCurrentProgress` to be a primitive type in the JSON string but got " + data['CopyNotificationCurrentProgress']);
        }
        // ensure the json data is a string
        if (data['DatabaseLogicalSizeEstimate'] && !(typeof data['DatabaseLogicalSizeEstimate'] === 'string' || data['DatabaseLogicalSizeEstimate'] instanceof String)) {
            throw new Error("Expected the field `DatabaseLogicalSizeEstimate` to be a primitive type in the JSON string but got " + data['DatabaseLogicalSizeEstimate']);
        }
        // ensure the json data is a string
        if (data['DatabaseRowCountEstimate'] && !(typeof data['DatabaseRowCountEstimate'] === 'string' || data['DatabaseRowCountEstimate'] instanceof String)) {
            throw new Error("Expected the field `DatabaseRowCountEstimate` to be a primitive type in the JSON string but got " + data['DatabaseRowCountEstimate']);
        }
        // ensure the json data is a string
        if (data['StatusDetails'] && !(typeof data['StatusDetails'] === 'string' || data['StatusDetails'] instanceof String)) {
            throw new Error("Expected the field `StatusDetails` to be a primitive type in the JSON string but got " + data['StatusDetails']);
        }

        return true;
    }


}

KeyValueStoreReplicaStatus.RequiredProperties = ["Kind"];

/**
 * Value indicating the latest key-prefix filter applied to enumeration during the callback. Null if there is no pending callback.
 * @member {String} CopyNotificationCurrentKeyFilter
 */
KeyValueStoreReplicaStatus.prototype['CopyNotificationCurrentKeyFilter'] = undefined;

/**
 * Value indicating the latest number of keys enumerated during the callback. 0 if there is no pending callback.
 * @member {String} CopyNotificationCurrentProgress
 */
KeyValueStoreReplicaStatus.prototype['CopyNotificationCurrentProgress'] = undefined;

/**
 * Value indicating the estimated size of the underlying database.
 * @member {String} DatabaseLogicalSizeEstimate
 */
KeyValueStoreReplicaStatus.prototype['DatabaseLogicalSizeEstimate'] = undefined;

/**
 * Value indicating the estimated number of rows in the underlying database.
 * @member {String} DatabaseRowCountEstimate
 */
KeyValueStoreReplicaStatus.prototype['DatabaseRowCountEstimate'] = undefined;

/**
 * Value indicating the current status details of the replica.
 * @member {String} StatusDetails
 */
KeyValueStoreReplicaStatus.prototype['StatusDetails'] = undefined;


// Implement ReplicaStatusBase interface:
/**
 * @member {module:model/ReplicaKind} Kind
 */
ReplicaStatusBase.prototype['Kind'] = undefined;




export default KeyValueStoreReplicaStatus;

