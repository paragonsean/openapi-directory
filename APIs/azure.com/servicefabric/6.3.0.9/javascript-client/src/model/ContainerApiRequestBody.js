/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContainerApiRequestBody model module.
 * @module model/ContainerApiRequestBody
 * @version 6.3.0.9
 */
class ContainerApiRequestBody {
    /**
     * Constructs a new <code>ContainerApiRequestBody</code>.
     * parameters for making container API call.
     * @alias module:model/ContainerApiRequestBody
     * @param uriPath {String} URI path of container REST API
     */
    constructor(uriPath) { 
        
        ContainerApiRequestBody.initialize(this, uriPath);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, uriPath) { 
        obj['UriPath'] = uriPath;
    }

    /**
     * Constructs a <code>ContainerApiRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContainerApiRequestBody} obj Optional instance to populate.
     * @return {module:model/ContainerApiRequestBody} The populated <code>ContainerApiRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerApiRequestBody();

            if (data.hasOwnProperty('Body')) {
                obj['Body'] = ApiClient.convertToType(data['Body'], 'String');
            }
            if (data.hasOwnProperty('Content-Type')) {
                obj['Content-Type'] = ApiClient.convertToType(data['Content-Type'], 'String');
            }
            if (data.hasOwnProperty('HttpVerb')) {
                obj['HttpVerb'] = ApiClient.convertToType(data['HttpVerb'], 'String');
            }
            if (data.hasOwnProperty('UriPath')) {
                obj['UriPath'] = ApiClient.convertToType(data['UriPath'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContainerApiRequestBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContainerApiRequestBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContainerApiRequestBody.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Body'] && !(typeof data['Body'] === 'string' || data['Body'] instanceof String)) {
            throw new Error("Expected the field `Body` to be a primitive type in the JSON string but got " + data['Body']);
        }
        // ensure the json data is a string
        if (data['Content-Type'] && !(typeof data['Content-Type'] === 'string' || data['Content-Type'] instanceof String)) {
            throw new Error("Expected the field `Content-Type` to be a primitive type in the JSON string but got " + data['Content-Type']);
        }
        // ensure the json data is a string
        if (data['HttpVerb'] && !(typeof data['HttpVerb'] === 'string' || data['HttpVerb'] instanceof String)) {
            throw new Error("Expected the field `HttpVerb` to be a primitive type in the JSON string but got " + data['HttpVerb']);
        }
        // ensure the json data is a string
        if (data['UriPath'] && !(typeof data['UriPath'] === 'string' || data['UriPath'] instanceof String)) {
            throw new Error("Expected the field `UriPath` to be a primitive type in the JSON string but got " + data['UriPath']);
        }

        return true;
    }


}

ContainerApiRequestBody.RequiredProperties = ["UriPath"];

/**
 * HTTP request body of container REST API
 * @member {String} Body
 */
ContainerApiRequestBody.prototype['Body'] = undefined;

/**
 * Content type of container REST API request, defaults to \"application/json\"
 * @member {String} Content-Type
 */
ContainerApiRequestBody.prototype['Content-Type'] = undefined;

/**
 * HTTP verb of container REST API, defaults to \"GET\"
 * @member {String} HttpVerb
 */
ContainerApiRequestBody.prototype['HttpVerb'] = undefined;

/**
 * URI path of container REST API
 * @member {String} UriPath
 */
ContainerApiRequestBody.prototype['UriPath'] = undefined;






export default ContainerApiRequestBody;

