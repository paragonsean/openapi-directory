/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChaosParametersDictionaryItem from './ChaosParametersDictionaryItem';
import ChaosScheduleJob from './ChaosScheduleJob';

/**
 * The ChaosSchedule model module.
 * @module model/ChaosSchedule
 * @version 6.3.0.9
 */
class ChaosSchedule {
    /**
     * Constructs a new <code>ChaosSchedule</code>.
     * Defines the schedule used by Chaos.
     * @alias module:model/ChaosSchedule
     */
    constructor() { 
        
        ChaosSchedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChaosSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChaosSchedule} obj Optional instance to populate.
     * @return {module:model/ChaosSchedule} The populated <code>ChaosSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChaosSchedule();

            if (data.hasOwnProperty('ChaosParametersDictionary')) {
                obj['ChaosParametersDictionary'] = ApiClient.convertToType(data['ChaosParametersDictionary'], [ChaosParametersDictionaryItem]);
            }
            if (data.hasOwnProperty('ExpiryDate')) {
                obj['ExpiryDate'] = ApiClient.convertToType(data['ExpiryDate'], 'Date');
            }
            if (data.hasOwnProperty('Jobs')) {
                obj['Jobs'] = ApiClient.convertToType(data['Jobs'], [ChaosScheduleJob]);
            }
            if (data.hasOwnProperty('StartDate')) {
                obj['StartDate'] = ApiClient.convertToType(data['StartDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChaosSchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChaosSchedule</code>.
     */
    static validateJSON(data) {
        if (data['ChaosParametersDictionary']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ChaosParametersDictionary'])) {
                throw new Error("Expected the field `ChaosParametersDictionary` to be an array in the JSON data but got " + data['ChaosParametersDictionary']);
            }
            // validate the optional field `ChaosParametersDictionary` (array)
            for (const item of data['ChaosParametersDictionary']) {
                ChaosParametersDictionaryItem.validateJSON(item);
            };
        }
        if (data['Jobs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Jobs'])) {
                throw new Error("Expected the field `Jobs` to be an array in the JSON data but got " + data['Jobs']);
            }
            // validate the optional field `Jobs` (array)
            for (const item of data['Jobs']) {
                ChaosScheduleJob.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A mapping of string names to Chaos Parameters to be referenced by Chaos Schedule Jobs.
 * @member {Array.<module:model/ChaosParametersDictionaryItem>} ChaosParametersDictionary
 */
ChaosSchedule.prototype['ChaosParametersDictionary'] = undefined;

/**
 * The date and time Chaos will continue to use this schedule until.
 * @member {Date} ExpiryDate
 */
ChaosSchedule.prototype['ExpiryDate'] = undefined;

/**
 * A list of all Chaos Schedule Jobs that will be automated by the schedule.
 * @member {Array.<module:model/ChaosScheduleJob>} Jobs
 */
ChaosSchedule.prototype['Jobs'] = undefined;

/**
 * The date and time Chaos will start using this schedule.
 * @member {Date} StartDate
 */
ChaosSchedule.prototype['StartDate'] = undefined;






export default ChaosSchedule;

