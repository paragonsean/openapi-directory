/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LoadMetricReportInfo from './LoadMetricReportInfo';
import ServiceKind from './ServiceKind';
import ServiceOperationName from './ServiceOperationName';

/**
 * The DeployedServiceReplicaDetailInfo model module.
 * @module model/DeployedServiceReplicaDetailInfo
 * @version 6.3.0.9
 */
class DeployedServiceReplicaDetailInfo {
    /**
     * Constructs a new <code>DeployedServiceReplicaDetailInfo</code>.
     * Information about a Service Fabric service replica deployed on a node.
     * @alias module:model/DeployedServiceReplicaDetailInfo
     * @param serviceKind {module:model/ServiceKind} 
     */
    constructor(serviceKind) { 
        
        DeployedServiceReplicaDetailInfo.initialize(this, serviceKind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serviceKind) { 
        obj['ServiceKind'] = serviceKind;
    }

    /**
     * Constructs a <code>DeployedServiceReplicaDetailInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeployedServiceReplicaDetailInfo} obj Optional instance to populate.
     * @return {module:model/DeployedServiceReplicaDetailInfo} The populated <code>DeployedServiceReplicaDetailInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeployedServiceReplicaDetailInfo();

            if (data.hasOwnProperty('CurrentServiceOperation')) {
                obj['CurrentServiceOperation'] = ServiceOperationName.constructFromObject(data['CurrentServiceOperation']);
            }
            if (data.hasOwnProperty('CurrentServiceOperationStartTimeUtc')) {
                obj['CurrentServiceOperationStartTimeUtc'] = ApiClient.convertToType(data['CurrentServiceOperationStartTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('PartitionId')) {
                obj['PartitionId'] = ApiClient.convertToType(data['PartitionId'], 'String');
            }
            if (data.hasOwnProperty('ReportedLoad')) {
                obj['ReportedLoad'] = ApiClient.convertToType(data['ReportedLoad'], [LoadMetricReportInfo]);
            }
            if (data.hasOwnProperty('ServiceKind')) {
                obj['ServiceKind'] = ServiceKind.constructFromObject(data['ServiceKind']);
            }
            if (data.hasOwnProperty('ServiceName')) {
                obj['ServiceName'] = ApiClient.convertToType(data['ServiceName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeployedServiceReplicaDetailInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeployedServiceReplicaDetailInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeployedServiceReplicaDetailInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['PartitionId'] && !(typeof data['PartitionId'] === 'string' || data['PartitionId'] instanceof String)) {
            throw new Error("Expected the field `PartitionId` to be a primitive type in the JSON string but got " + data['PartitionId']);
        }
        if (data['ReportedLoad']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ReportedLoad'])) {
                throw new Error("Expected the field `ReportedLoad` to be an array in the JSON data but got " + data['ReportedLoad']);
            }
            // validate the optional field `ReportedLoad` (array)
            for (const item of data['ReportedLoad']) {
                LoadMetricReportInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['ServiceName'] && !(typeof data['ServiceName'] === 'string' || data['ServiceName'] instanceof String)) {
            throw new Error("Expected the field `ServiceName` to be a primitive type in the JSON string but got " + data['ServiceName']);
        }

        return true;
    }


}

DeployedServiceReplicaDetailInfo.RequiredProperties = ["ServiceKind"];

/**
 * @member {module:model/ServiceOperationName} CurrentServiceOperation
 */
DeployedServiceReplicaDetailInfo.prototype['CurrentServiceOperation'] = undefined;

/**
 * The start time of the current service operation in UTC format.
 * @member {Date} CurrentServiceOperationStartTimeUtc
 */
DeployedServiceReplicaDetailInfo.prototype['CurrentServiceOperationStartTimeUtc'] = undefined;

/**
 * An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
 * @member {String} PartitionId
 */
DeployedServiceReplicaDetailInfo.prototype['PartitionId'] = undefined;

/**
 * List of load reported by replica.
 * @member {Array.<module:model/LoadMetricReportInfo>} ReportedLoad
 */
DeployedServiceReplicaDetailInfo.prototype['ReportedLoad'] = undefined;

/**
 * @member {module:model/ServiceKind} ServiceKind
 */
DeployedServiceReplicaDetailInfo.prototype['ServiceKind'] = undefined;

/**
 * The full name of the service with 'fabric:' URI scheme.
 * @member {String} ServiceName
 */
DeployedServiceReplicaDetailInfo.prototype['ServiceName'] = undefined;






export default DeployedServiceReplicaDetailInfo;

