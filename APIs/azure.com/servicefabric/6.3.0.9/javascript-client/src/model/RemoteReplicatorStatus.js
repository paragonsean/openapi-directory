/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RemoteReplicatorAcknowledgementStatus from './RemoteReplicatorAcknowledgementStatus';

/**
 * The RemoteReplicatorStatus model module.
 * @module model/RemoteReplicatorStatus
 * @version 6.3.0.9
 */
class RemoteReplicatorStatus {
    /**
     * Constructs a new <code>RemoteReplicatorStatus</code>.
     * Represents the state of the secondary replicator from the primary replicatorâ€™s point of view.
     * @alias module:model/RemoteReplicatorStatus
     */
    constructor() { 
        
        RemoteReplicatorStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RemoteReplicatorStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoteReplicatorStatus} obj Optional instance to populate.
     * @return {module:model/RemoteReplicatorStatus} The populated <code>RemoteReplicatorStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemoteReplicatorStatus();

            if (data.hasOwnProperty('IsInBuild')) {
                obj['IsInBuild'] = ApiClient.convertToType(data['IsInBuild'], 'Boolean');
            }
            if (data.hasOwnProperty('LastAcknowledgementProcessedTimeUtc')) {
                obj['LastAcknowledgementProcessedTimeUtc'] = ApiClient.convertToType(data['LastAcknowledgementProcessedTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('LastAppliedCopySequenceNumber')) {
                obj['LastAppliedCopySequenceNumber'] = ApiClient.convertToType(data['LastAppliedCopySequenceNumber'], 'String');
            }
            if (data.hasOwnProperty('LastAppliedReplicationSequenceNumber')) {
                obj['LastAppliedReplicationSequenceNumber'] = ApiClient.convertToType(data['LastAppliedReplicationSequenceNumber'], 'String');
            }
            if (data.hasOwnProperty('LastReceivedCopySequenceNumber')) {
                obj['LastReceivedCopySequenceNumber'] = ApiClient.convertToType(data['LastReceivedCopySequenceNumber'], 'String');
            }
            if (data.hasOwnProperty('LastReceivedReplicationSequenceNumber')) {
                obj['LastReceivedReplicationSequenceNumber'] = ApiClient.convertToType(data['LastReceivedReplicationSequenceNumber'], 'String');
            }
            if (data.hasOwnProperty('RemoteReplicatorAcknowledgementStatus')) {
                obj['RemoteReplicatorAcknowledgementStatus'] = RemoteReplicatorAcknowledgementStatus.constructFromObject(data['RemoteReplicatorAcknowledgementStatus']);
            }
            if (data.hasOwnProperty('ReplicaId')) {
                obj['ReplicaId'] = ApiClient.convertToType(data['ReplicaId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RemoteReplicatorStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RemoteReplicatorStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['LastAppliedCopySequenceNumber'] && !(typeof data['LastAppliedCopySequenceNumber'] === 'string' || data['LastAppliedCopySequenceNumber'] instanceof String)) {
            throw new Error("Expected the field `LastAppliedCopySequenceNumber` to be a primitive type in the JSON string but got " + data['LastAppliedCopySequenceNumber']);
        }
        // ensure the json data is a string
        if (data['LastAppliedReplicationSequenceNumber'] && !(typeof data['LastAppliedReplicationSequenceNumber'] === 'string' || data['LastAppliedReplicationSequenceNumber'] instanceof String)) {
            throw new Error("Expected the field `LastAppliedReplicationSequenceNumber` to be a primitive type in the JSON string but got " + data['LastAppliedReplicationSequenceNumber']);
        }
        // ensure the json data is a string
        if (data['LastReceivedCopySequenceNumber'] && !(typeof data['LastReceivedCopySequenceNumber'] === 'string' || data['LastReceivedCopySequenceNumber'] instanceof String)) {
            throw new Error("Expected the field `LastReceivedCopySequenceNumber` to be a primitive type in the JSON string but got " + data['LastReceivedCopySequenceNumber']);
        }
        // ensure the json data is a string
        if (data['LastReceivedReplicationSequenceNumber'] && !(typeof data['LastReceivedReplicationSequenceNumber'] === 'string' || data['LastReceivedReplicationSequenceNumber'] instanceof String)) {
            throw new Error("Expected the field `LastReceivedReplicationSequenceNumber` to be a primitive type in the JSON string but got " + data['LastReceivedReplicationSequenceNumber']);
        }
        // validate the optional field `RemoteReplicatorAcknowledgementStatus`
        if (data['RemoteReplicatorAcknowledgementStatus']) { // data not null
          RemoteReplicatorAcknowledgementStatus.validateJSON(data['RemoteReplicatorAcknowledgementStatus']);
        }
        // ensure the json data is a string
        if (data['ReplicaId'] && !(typeof data['ReplicaId'] === 'string' || data['ReplicaId'] instanceof String)) {
            throw new Error("Expected the field `ReplicaId` to be a primitive type in the JSON string but got " + data['ReplicaId']);
        }

        return true;
    }


}



/**
 * A value that indicates whether the secondary replica is in the process of being built.
 * @member {Boolean} IsInBuild
 */
RemoteReplicatorStatus.prototype['IsInBuild'] = undefined;

/**
 * The last timestamp (in UTC) when an acknowledgement from the secondary replicator was processed on the primary. UTC 0 represents an invalid value, indicating that no acknowledgement messages were ever processed.
 * @member {Date} LastAcknowledgementProcessedTimeUtc
 */
RemoteReplicatorStatus.prototype['LastAcknowledgementProcessedTimeUtc'] = undefined;

/**
 * The highest copy operation sequence number that the secondary has applied to its state. A value of -1 implies that the secondary has applied all copy operations and the copy process is complete.
 * @member {String} LastAppliedCopySequenceNumber
 */
RemoteReplicatorStatus.prototype['LastAppliedCopySequenceNumber'] = undefined;

/**
 * The highest replication operation sequence number that the secondary has applied to its state.
 * @member {String} LastAppliedReplicationSequenceNumber
 */
RemoteReplicatorStatus.prototype['LastAppliedReplicationSequenceNumber'] = undefined;

/**
 * The highest copy operation sequence number that the secondary has received from the primary. A value of -1 implies that the secondary has received all copy operations.
 * @member {String} LastReceivedCopySequenceNumber
 */
RemoteReplicatorStatus.prototype['LastReceivedCopySequenceNumber'] = undefined;

/**
 * The highest replication operation sequence number that the secondary has received from the primary.
 * @member {String} LastReceivedReplicationSequenceNumber
 */
RemoteReplicatorStatus.prototype['LastReceivedReplicationSequenceNumber'] = undefined;

/**
 * @member {module:model/RemoteReplicatorAcknowledgementStatus} RemoteReplicatorAcknowledgementStatus
 */
RemoteReplicatorStatus.prototype['RemoteReplicatorAcknowledgementStatus'] = undefined;

/**
 * Id of a stateful service replica. ReplicaId is used by Service Fabric to uniquely identify a replica of a partition. It is unique within a partition and does not change for the lifetime of the replica. If a replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. Sometimes the id of a stateless service instance is also referred as a replica id.
 * @member {String} ReplicaId
 */
RemoteReplicatorStatus.prototype['ReplicaId'] = undefined;






export default RemoteReplicatorStatus;

