/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Epoch from './Epoch';
import HealthState from './HealthState';
import PartitionInformation from './PartitionInformation';
import ServiceKind from './ServiceKind';
import ServicePartitionInfo from './ServicePartitionInfo';
import ServicePartitionStatus from './ServicePartitionStatus';

/**
 * The StatefulServicePartitionInfo model module.
 * @module model/StatefulServicePartitionInfo
 * @version 6.3.0.9
 */
class StatefulServicePartitionInfo {
    /**
     * Constructs a new <code>StatefulServicePartitionInfo</code>.
     * Information about a partition of a stateful Service Fabric service..
     * @alias module:model/StatefulServicePartitionInfo
     * @extends module:model/ServicePartitionInfo
     * @implements module:model/ServicePartitionInfo
     * @param serviceKind {module:model/ServiceKind} 
     */
    constructor(serviceKind) { 
        ServicePartitionInfo.initialize(this, serviceKind);
        StatefulServicePartitionInfo.initialize(this, serviceKind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serviceKind) { 
    }

    /**
     * Constructs a <code>StatefulServicePartitionInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatefulServicePartitionInfo} obj Optional instance to populate.
     * @return {module:model/StatefulServicePartitionInfo} The populated <code>StatefulServicePartitionInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatefulServicePartitionInfo();
            ServicePartitionInfo.constructFromObject(data, obj);
            ServicePartitionInfo.constructFromObject(data, obj);

            if (data.hasOwnProperty('CurrentConfigurationEpoch')) {
                obj['CurrentConfigurationEpoch'] = Epoch.constructFromObject(data['CurrentConfigurationEpoch']);
            }
            if (data.hasOwnProperty('LastQuorumLossDuration')) {
                obj['LastQuorumLossDuration'] = ApiClient.convertToType(data['LastQuorumLossDuration'], 'String');
            }
            if (data.hasOwnProperty('MinReplicaSetSize')) {
                obj['MinReplicaSetSize'] = ApiClient.convertToType(data['MinReplicaSetSize'], 'Number');
            }
            if (data.hasOwnProperty('TargetReplicaSetSize')) {
                obj['TargetReplicaSetSize'] = ApiClient.convertToType(data['TargetReplicaSetSize'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StatefulServicePartitionInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StatefulServicePartitionInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StatefulServicePartitionInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CurrentConfigurationEpoch`
        if (data['CurrentConfigurationEpoch']) { // data not null
          Epoch.validateJSON(data['CurrentConfigurationEpoch']);
        }
        // ensure the json data is a string
        if (data['LastQuorumLossDuration'] && !(typeof data['LastQuorumLossDuration'] === 'string' || data['LastQuorumLossDuration'] instanceof String)) {
            throw new Error("Expected the field `LastQuorumLossDuration` to be a primitive type in the JSON string but got " + data['LastQuorumLossDuration']);
        }

        return true;
    }


}

StatefulServicePartitionInfo.RequiredProperties = ["ServiceKind"];

/**
 * @member {module:model/Epoch} CurrentConfigurationEpoch
 */
StatefulServicePartitionInfo.prototype['CurrentConfigurationEpoch'] = undefined;

/**
 * The duration for which this partition was in quorum loss. If the partition is currently in quorum loss, it returns the duration since it has been in that state. This field is using ISO8601 format for specifying the duration.
 * @member {String} LastQuorumLossDuration
 */
StatefulServicePartitionInfo.prototype['LastQuorumLossDuration'] = undefined;

/**
 * The minimum replica set size as a number.
 * @member {Number} MinReplicaSetSize
 */
StatefulServicePartitionInfo.prototype['MinReplicaSetSize'] = undefined;

/**
 * The target replica set size as a number.
 * @member {Number} TargetReplicaSetSize
 */
StatefulServicePartitionInfo.prototype['TargetReplicaSetSize'] = undefined;


// Implement ServicePartitionInfo interface:
/**
 * @member {module:model/HealthState} HealthState
 */
ServicePartitionInfo.prototype['HealthState'] = undefined;
/**
 * @member {module:model/PartitionInformation} PartitionInformation
 */
ServicePartitionInfo.prototype['PartitionInformation'] = undefined;
/**
 * @member {module:model/ServicePartitionStatus} PartitionStatus
 */
ServicePartitionInfo.prototype['PartitionStatus'] = undefined;
/**
 * @member {module:model/ServiceKind} ServiceKind
 */
ServicePartitionInfo.prototype['ServiceKind'] = undefined;




export default StatefulServicePartitionInfo;

