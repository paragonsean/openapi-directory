/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NodeDeactivationIntent from './NodeDeactivationIntent';
import NodeDeactivationStatus from './NodeDeactivationStatus';
import NodeDeactivationTask from './NodeDeactivationTask';
import SafetyCheckWrapper from './SafetyCheckWrapper';

/**
 * The NodeDeactivationInfo model module.
 * @module model/NodeDeactivationInfo
 * @version 6.3.0.9
 */
class NodeDeactivationInfo {
    /**
     * Constructs a new <code>NodeDeactivationInfo</code>.
     * Information about the node deactivation. This information is valid for a node that is undergoing deactivation or has already been deactivated.
     * @alias module:model/NodeDeactivationInfo
     */
    constructor() { 
        
        NodeDeactivationInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NodeDeactivationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeDeactivationInfo} obj Optional instance to populate.
     * @return {module:model/NodeDeactivationInfo} The populated <code>NodeDeactivationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeDeactivationInfo();

            if (data.hasOwnProperty('NodeDeactivationIntent')) {
                obj['NodeDeactivationIntent'] = NodeDeactivationIntent.constructFromObject(data['NodeDeactivationIntent']);
            }
            if (data.hasOwnProperty('NodeDeactivationStatus')) {
                obj['NodeDeactivationStatus'] = NodeDeactivationStatus.constructFromObject(data['NodeDeactivationStatus']);
            }
            if (data.hasOwnProperty('NodeDeactivationTask')) {
                obj['NodeDeactivationTask'] = ApiClient.convertToType(data['NodeDeactivationTask'], [NodeDeactivationTask]);
            }
            if (data.hasOwnProperty('PendingSafetyChecks')) {
                obj['PendingSafetyChecks'] = ApiClient.convertToType(data['PendingSafetyChecks'], [SafetyCheckWrapper]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodeDeactivationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodeDeactivationInfo</code>.
     */
    static validateJSON(data) {
        if (data['NodeDeactivationTask']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['NodeDeactivationTask'])) {
                throw new Error("Expected the field `NodeDeactivationTask` to be an array in the JSON data but got " + data['NodeDeactivationTask']);
            }
            // validate the optional field `NodeDeactivationTask` (array)
            for (const item of data['NodeDeactivationTask']) {
                NodeDeactivationTask.validateJSON(item);
            };
        }
        if (data['PendingSafetyChecks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['PendingSafetyChecks'])) {
                throw new Error("Expected the field `PendingSafetyChecks` to be an array in the JSON data but got " + data['PendingSafetyChecks']);
            }
            // validate the optional field `PendingSafetyChecks` (array)
            for (const item of data['PendingSafetyChecks']) {
                SafetyCheckWrapper.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/NodeDeactivationIntent} NodeDeactivationIntent
 */
NodeDeactivationInfo.prototype['NodeDeactivationIntent'] = undefined;

/**
 * @member {module:model/NodeDeactivationStatus} NodeDeactivationStatus
 */
NodeDeactivationInfo.prototype['NodeDeactivationStatus'] = undefined;

/**
 * List of tasks representing the deactivation operation on the node.
 * @member {Array.<module:model/NodeDeactivationTask>} NodeDeactivationTask
 */
NodeDeactivationInfo.prototype['NodeDeactivationTask'] = undefined;

/**
 * List of pending safety checks
 * @member {Array.<module:model/SafetyCheckWrapper>} PendingSafetyChecks
 */
NodeDeactivationInfo.prototype['PendingSafetyChecks'] = undefined;






export default NodeDeactivationInfo;

