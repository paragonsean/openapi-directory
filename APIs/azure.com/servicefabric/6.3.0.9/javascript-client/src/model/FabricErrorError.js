/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FabricErrorCodes from './FabricErrorCodes';

/**
 * The FabricErrorError model module.
 * @module model/FabricErrorError
 * @version 6.3.0.9
 */
class FabricErrorError {
    /**
     * Constructs a new <code>FabricErrorError</code>.
     * Error object containing error code and error message.
     * @alias module:model/FabricErrorError
     * @param code {module:model/FabricErrorCodes} 
     */
    constructor(code) { 
        
        FabricErrorError.initialize(this, code);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code) { 
        obj['Code'] = code;
    }

    /**
     * Constructs a <code>FabricErrorError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FabricErrorError} obj Optional instance to populate.
     * @return {module:model/FabricErrorError} The populated <code>FabricErrorError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FabricErrorError();

            if (data.hasOwnProperty('Code')) {
                obj['Code'] = FabricErrorCodes.constructFromObject(data['Code']);
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FabricErrorError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FabricErrorError</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FabricErrorError.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Message'] && !(typeof data['Message'] === 'string' || data['Message'] instanceof String)) {
            throw new Error("Expected the field `Message` to be a primitive type in the JSON string but got " + data['Message']);
        }

        return true;
    }


}

FabricErrorError.RequiredProperties = ["Code"];

/**
 * @member {module:model/FabricErrorCodes} Code
 */
FabricErrorError.prototype['Code'] = undefined;

/**
 * Error message.
 * @member {String} Message
 */
FabricErrorError.prototype['Message'] = undefined;






export default FabricErrorError;

