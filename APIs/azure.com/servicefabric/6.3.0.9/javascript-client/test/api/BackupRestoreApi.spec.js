/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServiceFabricClientApis);
  }
}(this, function(expect, ServiceFabricClientApis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServiceFabricClientApis.BackupRestoreApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BackupRestoreApi', function() {
    describe('backupPartition', function() {
      it('should call backupPartition successfully', function(done) {
        //uncomment below and update the code to test backupPartition
        //instance.backupPartition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBackupPolicy', function() {
      it('should call createBackupPolicy successfully', function(done) {
        //uncomment below and update the code to test createBackupPolicy
        //instance.createBackupPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBackupPolicy', function() {
      it('should call deleteBackupPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteBackupPolicy
        //instance.deleteBackupPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableApplicationBackup', function() {
      it('should call disableApplicationBackup successfully', function(done) {
        //uncomment below and update the code to test disableApplicationBackup
        //instance.disableApplicationBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disablePartitionBackup', function() {
      it('should call disablePartitionBackup successfully', function(done) {
        //uncomment below and update the code to test disablePartitionBackup
        //instance.disablePartitionBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableServiceBackup', function() {
      it('should call disableServiceBackup successfully', function(done) {
        //uncomment below and update the code to test disableServiceBackup
        //instance.disableServiceBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableApplicationBackup', function() {
      it('should call enableApplicationBackup successfully', function(done) {
        //uncomment below and update the code to test enableApplicationBackup
        //instance.enableApplicationBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enablePartitionBackup', function() {
      it('should call enablePartitionBackup successfully', function(done) {
        //uncomment below and update the code to test enablePartitionBackup
        //instance.enablePartitionBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableServiceBackup', function() {
      it('should call enableServiceBackup successfully', function(done) {
        //uncomment below and update the code to test enableServiceBackup
        //instance.enableServiceBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllEntitiesBackedUpByPolicy', function() {
      it('should call getAllEntitiesBackedUpByPolicy successfully', function(done) {
        //uncomment below and update the code to test getAllEntitiesBackedUpByPolicy
        //instance.getAllEntitiesBackedUpByPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApplicationBackupConfigurationInfo', function() {
      it('should call getApplicationBackupConfigurationInfo successfully', function(done) {
        //uncomment below and update the code to test getApplicationBackupConfigurationInfo
        //instance.getApplicationBackupConfigurationInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApplicationBackupList', function() {
      it('should call getApplicationBackupList successfully', function(done) {
        //uncomment below and update the code to test getApplicationBackupList
        //instance.getApplicationBackupList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackupPolicyByName', function() {
      it('should call getBackupPolicyByName successfully', function(done) {
        //uncomment below and update the code to test getBackupPolicyByName
        //instance.getBackupPolicyByName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackupPolicyList', function() {
      it('should call getBackupPolicyList successfully', function(done) {
        //uncomment below and update the code to test getBackupPolicyList
        //instance.getBackupPolicyList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackupsFromBackupLocation', function() {
      it('should call getBackupsFromBackupLocation successfully', function(done) {
        //uncomment below and update the code to test getBackupsFromBackupLocation
        //instance.getBackupsFromBackupLocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPartitionBackupConfigurationInfo', function() {
      it('should call getPartitionBackupConfigurationInfo successfully', function(done) {
        //uncomment below and update the code to test getPartitionBackupConfigurationInfo
        //instance.getPartitionBackupConfigurationInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPartitionBackupList', function() {
      it('should call getPartitionBackupList successfully', function(done) {
        //uncomment below and update the code to test getPartitionBackupList
        //instance.getPartitionBackupList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPartitionBackupProgress', function() {
      it('should call getPartitionBackupProgress successfully', function(done) {
        //uncomment below and update the code to test getPartitionBackupProgress
        //instance.getPartitionBackupProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPartitionRestoreProgress', function() {
      it('should call getPartitionRestoreProgress successfully', function(done) {
        //uncomment below and update the code to test getPartitionRestoreProgress
        //instance.getPartitionRestoreProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServiceBackupConfigurationInfo', function() {
      it('should call getServiceBackupConfigurationInfo successfully', function(done) {
        //uncomment below and update the code to test getServiceBackupConfigurationInfo
        //instance.getServiceBackupConfigurationInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServiceBackupList', function() {
      it('should call getServiceBackupList successfully', function(done) {
        //uncomment below and update the code to test getServiceBackupList
        //instance.getServiceBackupList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restorePartition', function() {
      it('should call restorePartition successfully', function(done) {
        //uncomment below and update the code to test restorePartition
        //instance.restorePartition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resumeApplicationBackup', function() {
      it('should call resumeApplicationBackup successfully', function(done) {
        //uncomment below and update the code to test resumeApplicationBackup
        //instance.resumeApplicationBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resumePartitionBackup', function() {
      it('should call resumePartitionBackup successfully', function(done) {
        //uncomment below and update the code to test resumePartitionBackup
        //instance.resumePartitionBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resumeServiceBackup', function() {
      it('should call resumeServiceBackup successfully', function(done) {
        //uncomment below and update the code to test resumeServiceBackup
        //instance.resumeServiceBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suspendApplicationBackup', function() {
      it('should call suspendApplicationBackup successfully', function(done) {
        //uncomment below and update the code to test suspendApplicationBackup
        //instance.suspendApplicationBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suspendPartitionBackup', function() {
      it('should call suspendPartitionBackup successfully', function(done) {
        //uncomment below and update the code to test suspendPartitionBackup
        //instance.suspendPartitionBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suspendServiceBackup', function() {
      it('should call suspendServiceBackup successfully', function(done) {
        //uncomment below and update the code to test suspendServiceBackup
        //instance.suspendServiceBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBackupPolicy', function() {
      it('should call updateBackupPolicy successfully', function(done) {
        //uncomment below and update the code to test updateBackupPolicy
        //instance.updateBackupPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
