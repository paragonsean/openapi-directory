/**
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServiceFabricClientApis);
  }
}(this, function(expect, ServiceFabricClientApis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServiceFabricClientApis.ReplicaApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReplicaApi', function() {
    describe('getDeployedServiceReplicaDetailInfo', function() {
      it('should call getDeployedServiceReplicaDetailInfo successfully', function(done) {
        //uncomment below and update the code to test getDeployedServiceReplicaDetailInfo
        //instance.getDeployedServiceReplicaDetailInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeployedServiceReplicaDetailInfoByPartitionId', function() {
      it('should call getDeployedServiceReplicaDetailInfoByPartitionId successfully', function(done) {
        //uncomment below and update the code to test getDeployedServiceReplicaDetailInfoByPartitionId
        //instance.getDeployedServiceReplicaDetailInfoByPartitionId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeployedServiceReplicaInfoList', function() {
      it('should call getDeployedServiceReplicaInfoList successfully', function(done) {
        //uncomment below and update the code to test getDeployedServiceReplicaInfoList
        //instance.getDeployedServiceReplicaInfoList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReplicaHealth', function() {
      it('should call getReplicaHealth successfully', function(done) {
        //uncomment below and update the code to test getReplicaHealth
        //instance.getReplicaHealth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReplicaHealthUsingPolicy', function() {
      it('should call getReplicaHealthUsingPolicy successfully', function(done) {
        //uncomment below and update the code to test getReplicaHealthUsingPolicy
        //instance.getReplicaHealthUsingPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReplicaInfo', function() {
      it('should call getReplicaInfo successfully', function(done) {
        //uncomment below and update the code to test getReplicaInfo
        //instance.getReplicaInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReplicaInfoList', function() {
      it('should call getReplicaInfoList successfully', function(done) {
        //uncomment below and update the code to test getReplicaInfoList
        //instance.getReplicaInfoList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeReplica', function() {
      it('should call removeReplica successfully', function(done) {
        //uncomment below and update the code to test removeReplica
        //instance.removeReplica(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportReplicaHealth', function() {
      it('should call reportReplicaHealth successfully', function(done) {
        //uncomment below and update the code to test reportReplicaHealth
        //instance.reportReplicaHealth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restartReplica', function() {
      it('should call restartReplica successfully', function(done) {
        //uncomment below and update the code to test restartReplica
        //instance.restartReplica(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
