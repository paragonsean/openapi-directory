/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.FabricError;
import org.openapitools.client.model.VolumeResourceDescription;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VolumeResourceApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VolumeResourceApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VolumeResourceApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createVolumeResource
     * @param apiVersion The version of the API. This parameter is required and its value must be &#39;6.3-preview&#39;. (required)
     * @param volumeResourceName Service Fabric volume resource name. (required)
     * @param volumeResourceDescription Description for creating a volume resource. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createVolumeResourceCall(String apiVersion, String volumeResourceName, VolumeResourceDescription volumeResourceDescription, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = volumeResourceDescription;

        // create path and map variables
        String localVarPath = "/Resources/Volumes/{volumeResourceName}"
            .replace("{" + "volumeResourceName" + "}", localVarApiClient.escapeString(volumeResourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createVolumeResourceValidateBeforeCall(String apiVersion, String volumeResourceName, VolumeResourceDescription volumeResourceDescription, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling createVolumeResource(Async)");
        }

        // verify the required parameter 'volumeResourceName' is set
        if (volumeResourceName == null) {
            throw new ApiException("Missing the required parameter 'volumeResourceName' when calling createVolumeResource(Async)");
        }

        // verify the required parameter 'volumeResourceDescription' is set
        if (volumeResourceDescription == null) {
            throw new ApiException("Missing the required parameter 'volumeResourceDescription' when calling createVolumeResource(Async)");
        }

        return createVolumeResourceCall(apiVersion, volumeResourceName, volumeResourceDescription, _callback);

    }

    /**
     * Creates or updates a volume resource.
     * Creates a volume resource with the specified name and description. If a volume with the same name already exists, then its description is updated to the one indicated in this request.
     * @param apiVersion The version of the API. This parameter is required and its value must be &#39;6.3-preview&#39;. (required)
     * @param volumeResourceName Service Fabric volume resource name. (required)
     * @param volumeResourceDescription Description for creating a volume resource. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public void createVolumeResource(String apiVersion, String volumeResourceName, VolumeResourceDescription volumeResourceDescription) throws ApiException {
        createVolumeResourceWithHttpInfo(apiVersion, volumeResourceName, volumeResourceDescription);
    }

    /**
     * Creates or updates a volume resource.
     * Creates a volume resource with the specified name and description. If a volume with the same name already exists, then its description is updated to the one indicated in this request.
     * @param apiVersion The version of the API. This parameter is required and its value must be &#39;6.3-preview&#39;. (required)
     * @param volumeResourceName Service Fabric volume resource name. (required)
     * @param volumeResourceDescription Description for creating a volume resource. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> createVolumeResourceWithHttpInfo(String apiVersion, String volumeResourceName, VolumeResourceDescription volumeResourceDescription) throws ApiException {
        okhttp3.Call localVarCall = createVolumeResourceValidateBeforeCall(apiVersion, volumeResourceName, volumeResourceDescription, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Creates or updates a volume resource. (asynchronously)
     * Creates a volume resource with the specified name and description. If a volume with the same name already exists, then its description is updated to the one indicated in this request.
     * @param apiVersion The version of the API. This parameter is required and its value must be &#39;6.3-preview&#39;. (required)
     * @param volumeResourceName Service Fabric volume resource name. (required)
     * @param volumeResourceDescription Description for creating a volume resource. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createVolumeResourceAsync(String apiVersion, String volumeResourceName, VolumeResourceDescription volumeResourceDescription, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = createVolumeResourceValidateBeforeCall(apiVersion, volumeResourceName, volumeResourceDescription, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteVolumeResource
     * @param apiVersion The version of the API. This parameter is required and its value must be &#39;6.3-preview&#39;. (required)
     * @param volumeResourceName Service Fabric volume resource name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content - the specified volume was not found. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteVolumeResourceCall(String apiVersion, String volumeResourceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/Resources/Volumes/{volumeResourceName}"
            .replace("{" + "volumeResourceName" + "}", localVarApiClient.escapeString(volumeResourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteVolumeResourceValidateBeforeCall(String apiVersion, String volumeResourceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling deleteVolumeResource(Async)");
        }

        // verify the required parameter 'volumeResourceName' is set
        if (volumeResourceName == null) {
            throw new ApiException("Missing the required parameter 'volumeResourceName' when calling deleteVolumeResource(Async)");
        }

        return deleteVolumeResourceCall(apiVersion, volumeResourceName, _callback);

    }

    /**
     * Deletes the volume resource.
     * Deletes the volume identified by the name.
     * @param apiVersion The version of the API. This parameter is required and its value must be &#39;6.3-preview&#39;. (required)
     * @param volumeResourceName Service Fabric volume resource name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content - the specified volume was not found. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public void deleteVolumeResource(String apiVersion, String volumeResourceName) throws ApiException {
        deleteVolumeResourceWithHttpInfo(apiVersion, volumeResourceName);
    }

    /**
     * Deletes the volume resource.
     * Deletes the volume identified by the name.
     * @param apiVersion The version of the API. This parameter is required and its value must be &#39;6.3-preview&#39;. (required)
     * @param volumeResourceName Service Fabric volume resource name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content - the specified volume was not found. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> deleteVolumeResourceWithHttpInfo(String apiVersion, String volumeResourceName) throws ApiException {
        okhttp3.Call localVarCall = deleteVolumeResourceValidateBeforeCall(apiVersion, volumeResourceName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Deletes the volume resource. (asynchronously)
     * Deletes the volume identified by the name.
     * @param apiVersion The version of the API. This parameter is required and its value must be &#39;6.3-preview&#39;. (required)
     * @param volumeResourceName Service Fabric volume resource name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content - the specified volume was not found. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteVolumeResourceAsync(String apiVersion, String volumeResourceName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteVolumeResourceValidateBeforeCall(apiVersion, volumeResourceName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for getVolumeResource
     * @param apiVersion The version of the API. This parameter is required and its value must be &#39;6.3-preview&#39;. (required)
     * @param volumeResourceName Service Fabric volume resource name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVolumeResourceCall(String apiVersion, String volumeResourceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/Resources/Volumes/{volumeResourceName}"
            .replace("{" + "volumeResourceName" + "}", localVarApiClient.escapeString(volumeResourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getVolumeResourceValidateBeforeCall(String apiVersion, String volumeResourceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling getVolumeResource(Async)");
        }

        // verify the required parameter 'volumeResourceName' is set
        if (volumeResourceName == null) {
            throw new ApiException("Missing the required parameter 'volumeResourceName' when calling getVolumeResource(Async)");
        }

        return getVolumeResourceCall(apiVersion, volumeResourceName, _callback);

    }

    /**
     * Gets the volume resource.
     * Gets the information about the volume resource with a given name. This information includes the volume description and other runtime information.
     * @param apiVersion The version of the API. This parameter is required and its value must be &#39;6.3-preview&#39;. (required)
     * @param volumeResourceName Service Fabric volume resource name. (required)
     * @return VolumeResourceDescription
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public VolumeResourceDescription getVolumeResource(String apiVersion, String volumeResourceName) throws ApiException {
        ApiResponse<VolumeResourceDescription> localVarResp = getVolumeResourceWithHttpInfo(apiVersion, volumeResourceName);
        return localVarResp.getData();
    }

    /**
     * Gets the volume resource.
     * Gets the information about the volume resource with a given name. This information includes the volume description and other runtime information.
     * @param apiVersion The version of the API. This parameter is required and its value must be &#39;6.3-preview&#39;. (required)
     * @param volumeResourceName Service Fabric volume resource name. (required)
     * @return ApiResponse&lt;VolumeResourceDescription&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VolumeResourceDescription> getVolumeResourceWithHttpInfo(String apiVersion, String volumeResourceName) throws ApiException {
        okhttp3.Call localVarCall = getVolumeResourceValidateBeforeCall(apiVersion, volumeResourceName, null);
        Type localVarReturnType = new TypeToken<VolumeResourceDescription>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Gets the volume resource. (asynchronously)
     * Gets the information about the volume resource with a given name. This information includes the volume description and other runtime information.
     * @param apiVersion The version of the API. This parameter is required and its value must be &#39;6.3-preview&#39;. (required)
     * @param volumeResourceName Service Fabric volume resource name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVolumeResourceAsync(String apiVersion, String volumeResourceName, final ApiCallback<VolumeResourceDescription> _callback) throws ApiException {

        okhttp3.Call localVarCall = getVolumeResourceValidateBeforeCall(apiVersion, volumeResourceName, _callback);
        Type localVarReturnType = new TypeToken<VolumeResourceDescription>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
