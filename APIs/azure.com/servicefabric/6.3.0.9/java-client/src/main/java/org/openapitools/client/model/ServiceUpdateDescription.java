/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MoveCost;
import org.openapitools.client.model.ScalingPolicyDescription;
import org.openapitools.client.model.ServiceCorrelationDescription;
import org.openapitools.client.model.ServiceKind;
import org.openapitools.client.model.ServiceLoadMetricDescription;
import org.openapitools.client.model.ServicePlacementPolicyDescription;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A ServiceUpdateDescription contains all of the information necessary to update a service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:56:48.965186-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ServiceUpdateDescription {
  public static final String SERIALIZED_NAME_CORRELATION_SCHEME = "CorrelationScheme";
  @SerializedName(SERIALIZED_NAME_CORRELATION_SCHEME)
  private List<ServiceCorrelationDescription> correlationScheme = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_MOVE_COST = "DefaultMoveCost";
  @SerializedName(SERIALIZED_NAME_DEFAULT_MOVE_COST)
  private MoveCost defaultMoveCost;

  public static final String SERIALIZED_NAME_FLAGS = "Flags";
  @SerializedName(SERIALIZED_NAME_FLAGS)
  private String flags;

  public static final String SERIALIZED_NAME_LOAD_METRICS = "LoadMetrics";
  @SerializedName(SERIALIZED_NAME_LOAD_METRICS)
  private List<ServiceLoadMetricDescription> loadMetrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_PLACEMENT_CONSTRAINTS = "PlacementConstraints";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_CONSTRAINTS)
  private String placementConstraints;

  public static final String SERIALIZED_NAME_SCALING_POLICIES = "ScalingPolicies";
  @SerializedName(SERIALIZED_NAME_SCALING_POLICIES)
  private List<ScalingPolicyDescription> scalingPolicies = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVICE_KIND = "ServiceKind";
  @SerializedName(SERIALIZED_NAME_SERVICE_KIND)
  protected ServiceKind serviceKind;

  public static final String SERIALIZED_NAME_SERVICE_PLACEMENT_POLICIES = "ServicePlacementPolicies";
  @SerializedName(SERIALIZED_NAME_SERVICE_PLACEMENT_POLICIES)
  private List<ServicePlacementPolicyDescription> servicePlacementPolicies = new ArrayList<>();

  public ServiceUpdateDescription() {
    this.serviceKind = this.getClass().getSimpleName();
  }

  public ServiceUpdateDescription correlationScheme(List<ServiceCorrelationDescription> correlationScheme) {
    this.correlationScheme = correlationScheme;
    return this;
  }

  public ServiceUpdateDescription addCorrelationSchemeItem(ServiceCorrelationDescription correlationSchemeItem) {
    if (this.correlationScheme == null) {
      this.correlationScheme = new ArrayList<>();
    }
    this.correlationScheme.add(correlationSchemeItem);
    return this;
  }

  /**
   * A list that describes the correlation of the service with other services.
   * @return correlationScheme
   */
  @javax.annotation.Nullable
  public List<ServiceCorrelationDescription> getCorrelationScheme() {
    return correlationScheme;
  }

  public void setCorrelationScheme(List<ServiceCorrelationDescription> correlationScheme) {
    this.correlationScheme = correlationScheme;
  }


  public ServiceUpdateDescription defaultMoveCost(MoveCost defaultMoveCost) {
    this.defaultMoveCost = defaultMoveCost;
    return this;
  }

  /**
   * Get defaultMoveCost
   * @return defaultMoveCost
   */
  @javax.annotation.Nullable
  public MoveCost getDefaultMoveCost() {
    return defaultMoveCost;
  }

  public void setDefaultMoveCost(MoveCost defaultMoveCost) {
    this.defaultMoveCost = defaultMoveCost;
  }


  public ServiceUpdateDescription flags(String flags) {
    this.flags = flags;
    return this;
  }

  /**
   * Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified. This property can be a combination of those flags obtained using bitwise &#39;OR&#39; operator. For example, if the provided value is 6 then the flags for ReplicaRestartWaitDuration (2) and QuorumLossWaitDuration (4) are set.  - None - Does not indicate any other properties are set. The value is zero. - TargetReplicaSetSize/InstanceCount - Indicates whether the TargetReplicaSetSize property (for Stateful services) or the InstanceCount property (for Stateless services) is set. The value is 1. - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is  2. - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 4. - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 8. - MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The value is 16. - PlacementConstraints - Indicates the PlacementConstraints property is set. The value is 32. - PlacementPolicyList - Indicates the ServicePlacementPolicies property is set. The value is 64. - Correlation - Indicates the CorrelationScheme property is set. The value is 128. - Metrics - Indicates the ServiceLoadMetrics property is set. The value is 256. - DefaultMoveCost - Indicates the DefaultMoveCost property is set. The value is 512. - ScalingPolicy - Indicates the ScalingPolicies property is set. The value is 1024.
   * @return flags
   */
  @javax.annotation.Nullable
  public String getFlags() {
    return flags;
  }

  public void setFlags(String flags) {
    this.flags = flags;
  }


  public ServiceUpdateDescription loadMetrics(List<ServiceLoadMetricDescription> loadMetrics) {
    this.loadMetrics = loadMetrics;
    return this;
  }

  public ServiceUpdateDescription addLoadMetricsItem(ServiceLoadMetricDescription loadMetricsItem) {
    if (this.loadMetrics == null) {
      this.loadMetrics = new ArrayList<>();
    }
    this.loadMetrics.add(loadMetricsItem);
    return this;
  }

  /**
   * The service load metrics is given as an array of ServiceLoadMetricDescription objects.
   * @return loadMetrics
   */
  @javax.annotation.Nullable
  public List<ServiceLoadMetricDescription> getLoadMetrics() {
    return loadMetrics;
  }

  public void setLoadMetrics(List<ServiceLoadMetricDescription> loadMetrics) {
    this.loadMetrics = loadMetrics;
  }


  public ServiceUpdateDescription placementConstraints(String placementConstraints) {
    this.placementConstraints = placementConstraints;
    return this;
  }

  /**
   * The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \&quot;NodeColor &#x3D;&#x3D; blue)\&quot;.
   * @return placementConstraints
   */
  @javax.annotation.Nullable
  public String getPlacementConstraints() {
    return placementConstraints;
  }

  public void setPlacementConstraints(String placementConstraints) {
    this.placementConstraints = placementConstraints;
  }


  public ServiceUpdateDescription scalingPolicies(List<ScalingPolicyDescription> scalingPolicies) {
    this.scalingPolicies = scalingPolicies;
    return this;
  }

  public ServiceUpdateDescription addScalingPoliciesItem(ScalingPolicyDescription scalingPoliciesItem) {
    if (this.scalingPolicies == null) {
      this.scalingPolicies = new ArrayList<>();
    }
    this.scalingPolicies.add(scalingPoliciesItem);
    return this;
  }

  /**
   * A list that describes the scaling policies.
   * @return scalingPolicies
   */
  @javax.annotation.Nullable
  public List<ScalingPolicyDescription> getScalingPolicies() {
    return scalingPolicies;
  }

  public void setScalingPolicies(List<ScalingPolicyDescription> scalingPolicies) {
    this.scalingPolicies = scalingPolicies;
  }


  public ServiceUpdateDescription serviceKind(ServiceKind serviceKind) {
    this.serviceKind = serviceKind;
    return this;
  }

  /**
   * Get serviceKind
   * @return serviceKind
   */
  @javax.annotation.Nonnull
  public ServiceKind getServiceKind() {
    return serviceKind;
  }

  public void setServiceKind(ServiceKind serviceKind) {
    this.serviceKind = serviceKind;
  }


  public ServiceUpdateDescription servicePlacementPolicies(List<ServicePlacementPolicyDescription> servicePlacementPolicies) {
    this.servicePlacementPolicies = servicePlacementPolicies;
    return this;
  }

  public ServiceUpdateDescription addServicePlacementPoliciesItem(ServicePlacementPolicyDescription servicePlacementPoliciesItem) {
    if (this.servicePlacementPolicies == null) {
      this.servicePlacementPolicies = new ArrayList<>();
    }
    this.servicePlacementPolicies.add(servicePlacementPoliciesItem);
    return this;
  }

  /**
   * A list that describes the correlation of the service with other services.
   * @return servicePlacementPolicies
   */
  @javax.annotation.Nullable
  public List<ServicePlacementPolicyDescription> getServicePlacementPolicies() {
    return servicePlacementPolicies;
  }

  public void setServicePlacementPolicies(List<ServicePlacementPolicyDescription> servicePlacementPolicies) {
    this.servicePlacementPolicies = servicePlacementPolicies;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceUpdateDescription serviceUpdateDescription = (ServiceUpdateDescription) o;
    return Objects.equals(this.correlationScheme, serviceUpdateDescription.correlationScheme) &&
        Objects.equals(this.defaultMoveCost, serviceUpdateDescription.defaultMoveCost) &&
        Objects.equals(this.flags, serviceUpdateDescription.flags) &&
        Objects.equals(this.loadMetrics, serviceUpdateDescription.loadMetrics) &&
        Objects.equals(this.placementConstraints, serviceUpdateDescription.placementConstraints) &&
        Objects.equals(this.scalingPolicies, serviceUpdateDescription.scalingPolicies) &&
        Objects.equals(this.serviceKind, serviceUpdateDescription.serviceKind) &&
        Objects.equals(this.servicePlacementPolicies, serviceUpdateDescription.servicePlacementPolicies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(correlationScheme, defaultMoveCost, flags, loadMetrics, placementConstraints, scalingPolicies, serviceKind, servicePlacementPolicies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceUpdateDescription {\n");
    sb.append("    correlationScheme: ").append(toIndentedString(correlationScheme)).append("\n");
    sb.append("    defaultMoveCost: ").append(toIndentedString(defaultMoveCost)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    loadMetrics: ").append(toIndentedString(loadMetrics)).append("\n");
    sb.append("    placementConstraints: ").append(toIndentedString(placementConstraints)).append("\n");
    sb.append("    scalingPolicies: ").append(toIndentedString(scalingPolicies)).append("\n");
    sb.append("    serviceKind: ").append(toIndentedString(serviceKind)).append("\n");
    sb.append("    servicePlacementPolicies: ").append(toIndentedString(servicePlacementPolicies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CorrelationScheme");
    openapiFields.add("DefaultMoveCost");
    openapiFields.add("Flags");
    openapiFields.add("LoadMetrics");
    openapiFields.add("PlacementConstraints");
    openapiFields.add("ScalingPolicies");
    openapiFields.add("ServiceKind");
    openapiFields.add("ServicePlacementPolicies");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ServiceKind");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceUpdateDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceUpdateDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceUpdateDescription is not found in the empty JSON string", ServiceUpdateDescription.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("ServiceKind").getAsString();
      switch (discriminatorValue) {
        case "StatefulServiceUpdateDescription":
          StatefulServiceUpdateDescription.validateJsonElement(jsonElement);
          break;
        case "StatelessServiceUpdateDescription":
          StatelessServiceUpdateDescription.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `ServiceKind` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of ServiceUpdateDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceUpdateDescription
   * @throws IOException if the JSON string is invalid with respect to ServiceUpdateDescription
   */
  public static ServiceUpdateDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceUpdateDescription.class);
  }

  /**
   * Convert an instance of ServiceUpdateDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

