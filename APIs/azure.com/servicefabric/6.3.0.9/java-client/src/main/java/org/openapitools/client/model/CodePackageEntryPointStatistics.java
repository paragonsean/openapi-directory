/*
 * Service Fabric Client APIs
 * Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.
 *
 * The version of the OpenAPI document: 6.3.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Statistics about setup or main entry point  of a code package deployed on a Service Fabric node.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:56:48.965186-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CodePackageEntryPointStatistics {
  public static final String SERIALIZED_NAME_ACTIVATION_COUNT = "ActivationCount";
  @SerializedName(SERIALIZED_NAME_ACTIVATION_COUNT)
  private String activationCount;

  public static final String SERIALIZED_NAME_ACTIVATION_FAILURE_COUNT = "ActivationFailureCount";
  @SerializedName(SERIALIZED_NAME_ACTIVATION_FAILURE_COUNT)
  private String activationFailureCount;

  public static final String SERIALIZED_NAME_CONTINUOUS_ACTIVATION_FAILURE_COUNT = "ContinuousActivationFailureCount";
  @SerializedName(SERIALIZED_NAME_CONTINUOUS_ACTIVATION_FAILURE_COUNT)
  private String continuousActivationFailureCount;

  public static final String SERIALIZED_NAME_CONTINUOUS_EXIT_FAILURE_COUNT = "ContinuousExitFailureCount";
  @SerializedName(SERIALIZED_NAME_CONTINUOUS_EXIT_FAILURE_COUNT)
  private String continuousExitFailureCount;

  public static final String SERIALIZED_NAME_EXIT_COUNT = "ExitCount";
  @SerializedName(SERIALIZED_NAME_EXIT_COUNT)
  private String exitCount;

  public static final String SERIALIZED_NAME_EXIT_FAILURE_COUNT = "ExitFailureCount";
  @SerializedName(SERIALIZED_NAME_EXIT_FAILURE_COUNT)
  private String exitFailureCount;

  public static final String SERIALIZED_NAME_LAST_ACTIVATION_TIME = "LastActivationTime";
  @SerializedName(SERIALIZED_NAME_LAST_ACTIVATION_TIME)
  private OffsetDateTime lastActivationTime;

  public static final String SERIALIZED_NAME_LAST_EXIT_CODE = "LastExitCode";
  @SerializedName(SERIALIZED_NAME_LAST_EXIT_CODE)
  private String lastExitCode;

  public static final String SERIALIZED_NAME_LAST_EXIT_TIME = "LastExitTime";
  @SerializedName(SERIALIZED_NAME_LAST_EXIT_TIME)
  private OffsetDateTime lastExitTime;

  public static final String SERIALIZED_NAME_LAST_SUCCESSFUL_ACTIVATION_TIME = "LastSuccessfulActivationTime";
  @SerializedName(SERIALIZED_NAME_LAST_SUCCESSFUL_ACTIVATION_TIME)
  private OffsetDateTime lastSuccessfulActivationTime;

  public static final String SERIALIZED_NAME_LAST_SUCCESSFUL_EXIT_TIME = "LastSuccessfulExitTime";
  @SerializedName(SERIALIZED_NAME_LAST_SUCCESSFUL_EXIT_TIME)
  private OffsetDateTime lastSuccessfulExitTime;

  public CodePackageEntryPointStatistics() {
  }

  public CodePackageEntryPointStatistics activationCount(String activationCount) {
    this.activationCount = activationCount;
    return this;
  }

  /**
   * Number of times the entry point has run.
   * @return activationCount
   */
  @javax.annotation.Nullable
  public String getActivationCount() {
    return activationCount;
  }

  public void setActivationCount(String activationCount) {
    this.activationCount = activationCount;
  }


  public CodePackageEntryPointStatistics activationFailureCount(String activationFailureCount) {
    this.activationFailureCount = activationFailureCount;
    return this;
  }

  /**
   * Number of times the entry point failed to run.
   * @return activationFailureCount
   */
  @javax.annotation.Nullable
  public String getActivationFailureCount() {
    return activationFailureCount;
  }

  public void setActivationFailureCount(String activationFailureCount) {
    this.activationFailureCount = activationFailureCount;
  }


  public CodePackageEntryPointStatistics continuousActivationFailureCount(String continuousActivationFailureCount) {
    this.continuousActivationFailureCount = continuousActivationFailureCount;
    return this;
  }

  /**
   * Number of times the entry point continuously failed to run.
   * @return continuousActivationFailureCount
   */
  @javax.annotation.Nullable
  public String getContinuousActivationFailureCount() {
    return continuousActivationFailureCount;
  }

  public void setContinuousActivationFailureCount(String continuousActivationFailureCount) {
    this.continuousActivationFailureCount = continuousActivationFailureCount;
  }


  public CodePackageEntryPointStatistics continuousExitFailureCount(String continuousExitFailureCount) {
    this.continuousExitFailureCount = continuousExitFailureCount;
    return this;
  }

  /**
   * Number of times the entry point continuously failed to exit gracefully.
   * @return continuousExitFailureCount
   */
  @javax.annotation.Nullable
  public String getContinuousExitFailureCount() {
    return continuousExitFailureCount;
  }

  public void setContinuousExitFailureCount(String continuousExitFailureCount) {
    this.continuousExitFailureCount = continuousExitFailureCount;
  }


  public CodePackageEntryPointStatistics exitCount(String exitCount) {
    this.exitCount = exitCount;
    return this;
  }

  /**
   * Number of times the entry point finished running.
   * @return exitCount
   */
  @javax.annotation.Nullable
  public String getExitCount() {
    return exitCount;
  }

  public void setExitCount(String exitCount) {
    this.exitCount = exitCount;
  }


  public CodePackageEntryPointStatistics exitFailureCount(String exitFailureCount) {
    this.exitFailureCount = exitFailureCount;
    return this;
  }

  /**
   * Number of times the entry point failed to exit gracefully.
   * @return exitFailureCount
   */
  @javax.annotation.Nullable
  public String getExitFailureCount() {
    return exitFailureCount;
  }

  public void setExitFailureCount(String exitFailureCount) {
    this.exitFailureCount = exitFailureCount;
  }


  public CodePackageEntryPointStatistics lastActivationTime(OffsetDateTime lastActivationTime) {
    this.lastActivationTime = lastActivationTime;
    return this;
  }

  /**
   * The last time (in UTC) when Service Fabric attempted to run the entry point.
   * @return lastActivationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastActivationTime() {
    return lastActivationTime;
  }

  public void setLastActivationTime(OffsetDateTime lastActivationTime) {
    this.lastActivationTime = lastActivationTime;
  }


  public CodePackageEntryPointStatistics lastExitCode(String lastExitCode) {
    this.lastExitCode = lastExitCode;
    return this;
  }

  /**
   * The last exit code of the entry point.
   * @return lastExitCode
   */
  @javax.annotation.Nullable
  public String getLastExitCode() {
    return lastExitCode;
  }

  public void setLastExitCode(String lastExitCode) {
    this.lastExitCode = lastExitCode;
  }


  public CodePackageEntryPointStatistics lastExitTime(OffsetDateTime lastExitTime) {
    this.lastExitTime = lastExitTime;
    return this;
  }

  /**
   * The last time (in UTC) when the entry point finished running.
   * @return lastExitTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastExitTime() {
    return lastExitTime;
  }

  public void setLastExitTime(OffsetDateTime lastExitTime) {
    this.lastExitTime = lastExitTime;
  }


  public CodePackageEntryPointStatistics lastSuccessfulActivationTime(OffsetDateTime lastSuccessfulActivationTime) {
    this.lastSuccessfulActivationTime = lastSuccessfulActivationTime;
    return this;
  }

  /**
   * The last time (in UTC) when the entry point ran successfully.
   * @return lastSuccessfulActivationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastSuccessfulActivationTime() {
    return lastSuccessfulActivationTime;
  }

  public void setLastSuccessfulActivationTime(OffsetDateTime lastSuccessfulActivationTime) {
    this.lastSuccessfulActivationTime = lastSuccessfulActivationTime;
  }


  public CodePackageEntryPointStatistics lastSuccessfulExitTime(OffsetDateTime lastSuccessfulExitTime) {
    this.lastSuccessfulExitTime = lastSuccessfulExitTime;
    return this;
  }

  /**
   * The last time (in UTC) when the entry point finished running gracefully.
   * @return lastSuccessfulExitTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastSuccessfulExitTime() {
    return lastSuccessfulExitTime;
  }

  public void setLastSuccessfulExitTime(OffsetDateTime lastSuccessfulExitTime) {
    this.lastSuccessfulExitTime = lastSuccessfulExitTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CodePackageEntryPointStatistics codePackageEntryPointStatistics = (CodePackageEntryPointStatistics) o;
    return Objects.equals(this.activationCount, codePackageEntryPointStatistics.activationCount) &&
        Objects.equals(this.activationFailureCount, codePackageEntryPointStatistics.activationFailureCount) &&
        Objects.equals(this.continuousActivationFailureCount, codePackageEntryPointStatistics.continuousActivationFailureCount) &&
        Objects.equals(this.continuousExitFailureCount, codePackageEntryPointStatistics.continuousExitFailureCount) &&
        Objects.equals(this.exitCount, codePackageEntryPointStatistics.exitCount) &&
        Objects.equals(this.exitFailureCount, codePackageEntryPointStatistics.exitFailureCount) &&
        Objects.equals(this.lastActivationTime, codePackageEntryPointStatistics.lastActivationTime) &&
        Objects.equals(this.lastExitCode, codePackageEntryPointStatistics.lastExitCode) &&
        Objects.equals(this.lastExitTime, codePackageEntryPointStatistics.lastExitTime) &&
        Objects.equals(this.lastSuccessfulActivationTime, codePackageEntryPointStatistics.lastSuccessfulActivationTime) &&
        Objects.equals(this.lastSuccessfulExitTime, codePackageEntryPointStatistics.lastSuccessfulExitTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activationCount, activationFailureCount, continuousActivationFailureCount, continuousExitFailureCount, exitCount, exitFailureCount, lastActivationTime, lastExitCode, lastExitTime, lastSuccessfulActivationTime, lastSuccessfulExitTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CodePackageEntryPointStatistics {\n");
    sb.append("    activationCount: ").append(toIndentedString(activationCount)).append("\n");
    sb.append("    activationFailureCount: ").append(toIndentedString(activationFailureCount)).append("\n");
    sb.append("    continuousActivationFailureCount: ").append(toIndentedString(continuousActivationFailureCount)).append("\n");
    sb.append("    continuousExitFailureCount: ").append(toIndentedString(continuousExitFailureCount)).append("\n");
    sb.append("    exitCount: ").append(toIndentedString(exitCount)).append("\n");
    sb.append("    exitFailureCount: ").append(toIndentedString(exitFailureCount)).append("\n");
    sb.append("    lastActivationTime: ").append(toIndentedString(lastActivationTime)).append("\n");
    sb.append("    lastExitCode: ").append(toIndentedString(lastExitCode)).append("\n");
    sb.append("    lastExitTime: ").append(toIndentedString(lastExitTime)).append("\n");
    sb.append("    lastSuccessfulActivationTime: ").append(toIndentedString(lastSuccessfulActivationTime)).append("\n");
    sb.append("    lastSuccessfulExitTime: ").append(toIndentedString(lastSuccessfulExitTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ActivationCount");
    openapiFields.add("ActivationFailureCount");
    openapiFields.add("ContinuousActivationFailureCount");
    openapiFields.add("ContinuousExitFailureCount");
    openapiFields.add("ExitCount");
    openapiFields.add("ExitFailureCount");
    openapiFields.add("LastActivationTime");
    openapiFields.add("LastExitCode");
    openapiFields.add("LastExitTime");
    openapiFields.add("LastSuccessfulActivationTime");
    openapiFields.add("LastSuccessfulExitTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CodePackageEntryPointStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CodePackageEntryPointStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CodePackageEntryPointStatistics is not found in the empty JSON string", CodePackageEntryPointStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CodePackageEntryPointStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CodePackageEntryPointStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ActivationCount") != null && !jsonObj.get("ActivationCount").isJsonNull()) && !jsonObj.get("ActivationCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ActivationCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ActivationCount").toString()));
      }
      if ((jsonObj.get("ActivationFailureCount") != null && !jsonObj.get("ActivationFailureCount").isJsonNull()) && !jsonObj.get("ActivationFailureCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ActivationFailureCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ActivationFailureCount").toString()));
      }
      if ((jsonObj.get("ContinuousActivationFailureCount") != null && !jsonObj.get("ContinuousActivationFailureCount").isJsonNull()) && !jsonObj.get("ContinuousActivationFailureCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ContinuousActivationFailureCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ContinuousActivationFailureCount").toString()));
      }
      if ((jsonObj.get("ContinuousExitFailureCount") != null && !jsonObj.get("ContinuousExitFailureCount").isJsonNull()) && !jsonObj.get("ContinuousExitFailureCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ContinuousExitFailureCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ContinuousExitFailureCount").toString()));
      }
      if ((jsonObj.get("ExitCount") != null && !jsonObj.get("ExitCount").isJsonNull()) && !jsonObj.get("ExitCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ExitCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ExitCount").toString()));
      }
      if ((jsonObj.get("ExitFailureCount") != null && !jsonObj.get("ExitFailureCount").isJsonNull()) && !jsonObj.get("ExitFailureCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ExitFailureCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ExitFailureCount").toString()));
      }
      if ((jsonObj.get("LastExitCode") != null && !jsonObj.get("LastExitCode").isJsonNull()) && !jsonObj.get("LastExitCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LastExitCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LastExitCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CodePackageEntryPointStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CodePackageEntryPointStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CodePackageEntryPointStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CodePackageEntryPointStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<CodePackageEntryPointStatistics>() {
           @Override
           public void write(JsonWriter out, CodePackageEntryPointStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CodePackageEntryPointStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CodePackageEntryPointStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CodePackageEntryPointStatistics
   * @throws IOException if the JSON string is invalid with respect to CodePackageEntryPointStatistics
   */
  public static CodePackageEntryPointStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CodePackageEntryPointStatistics.class);
  }

  /**
   * Convert an instance of CodePackageEntryPointStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

