/*
 * Azure ML Web Services Management Client
 * These APIs allow end users to operate on Azure Machine Learning Web Services resources. They support the following operations:<ul><li>Create or update a web service</li><li>Get a web service</li><li>Patch a web service</li><li>Delete a web service</li><li>Get All Web Services in a Resource Group </li><li>Get All Web Services in a Subscription</li><li>Get Web Services Keys</li></ul>
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.PaginatedWebServicesList;
import org.openapitools.client.model.WebService;
import org.openapitools.client.model.WebServiceKeys;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class WebServicesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public WebServicesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public WebServicesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for webServicesCreateOrUpdate
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param createOrUpdatePayload The payload that is used to create or update the web service. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. This response is returned for an update web service operation. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. This response is returned for a create web service operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesCreateOrUpdateCall(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, WebService createOrUpdatePayload, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createOrUpdatePayload;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "webServiceName" + "}", localVarApiClient.escapeString(webServiceName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "text/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call webServicesCreateOrUpdateValidateBeforeCall(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, WebService createOrUpdatePayload, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling webServicesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'webServiceName' is set
        if (webServiceName == null) {
            throw new ApiException("Missing the required parameter 'webServiceName' when calling webServicesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling webServicesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling webServicesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'createOrUpdatePayload' is set
        if (createOrUpdatePayload == null) {
            throw new ApiException("Missing the required parameter 'createOrUpdatePayload' when calling webServicesCreateOrUpdate(Async)");
        }

        return webServicesCreateOrUpdateCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, createOrUpdatePayload, _callback);

    }

    /**
     * 
     * Create or update a web service. This call will overwrite an existing web service. Note that there is no warning or confirmation. This is a nonrecoverable operation. If your intent is to create a new web service, call the Get operation first to verify that it does not exist.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param createOrUpdatePayload The payload that is used to create or update the web service. (required)
     * @return WebService
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. This response is returned for an update web service operation. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. This response is returned for a create web service operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
     </table>
     */
    public WebService webServicesCreateOrUpdate(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, WebService createOrUpdatePayload) throws ApiException {
        ApiResponse<WebService> localVarResp = webServicesCreateOrUpdateWithHttpInfo(resourceGroupName, webServiceName, apiVersion, subscriptionId, createOrUpdatePayload);
        return localVarResp.getData();
    }

    /**
     * 
     * Create or update a web service. This call will overwrite an existing web service. Note that there is no warning or confirmation. This is a nonrecoverable operation. If your intent is to create a new web service, call the Get operation first to verify that it does not exist.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param createOrUpdatePayload The payload that is used to create or update the web service. (required)
     * @return ApiResponse&lt;WebService&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. This response is returned for an update web service operation. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. This response is returned for a create web service operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WebService> webServicesCreateOrUpdateWithHttpInfo(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, WebService createOrUpdatePayload) throws ApiException {
        okhttp3.Call localVarCall = webServicesCreateOrUpdateValidateBeforeCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, createOrUpdatePayload, null);
        Type localVarReturnType = new TypeToken<WebService>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create or update a web service. This call will overwrite an existing web service. Note that there is no warning or confirmation. This is a nonrecoverable operation. If your intent is to create a new web service, call the Get operation first to verify that it does not exist.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param createOrUpdatePayload The payload that is used to create or update the web service. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. This response is returned for an update web service operation. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. This response is returned for a create web service operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesCreateOrUpdateAsync(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, WebService createOrUpdatePayload, final ApiCallback<WebService> _callback) throws ApiException {

        okhttp3.Call localVarCall = webServicesCreateOrUpdateValidateBeforeCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, createOrUpdatePayload, _callback);
        Type localVarReturnType = new TypeToken<WebService>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for webServicesGet
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success.  The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more informationFor more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesGetCall(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "webServiceName" + "}", localVarApiClient.escapeString(webServiceName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call webServicesGetValidateBeforeCall(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling webServicesGet(Async)");
        }

        // verify the required parameter 'webServiceName' is set
        if (webServiceName == null) {
            throw new ApiException("Missing the required parameter 'webServiceName' when calling webServicesGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling webServicesGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling webServicesGet(Async)");
        }

        return webServicesGetCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets the Web Service Definition as specified by a subscription, resource group, and name. Note that the storage credentials and web service keys are not returned by this call. To get the web service access keys, call List Keys.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @return WebService
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success.  The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more informationFor more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
     </table>
     */
    public WebService webServicesGet(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<WebService> localVarResp = webServicesGetWithHttpInfo(resourceGroupName, webServiceName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the Web Service Definition as specified by a subscription, resource group, and name. Note that the storage credentials and web service keys are not returned by this call. To get the web service access keys, call List Keys.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @return ApiResponse&lt;WebService&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success.  The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more informationFor more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WebService> webServicesGetWithHttpInfo(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = webServicesGetValidateBeforeCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<WebService>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the Web Service Definition as specified by a subscription, resource group, and name. Note that the storage credentials and web service keys are not returned by this call. To get the web service access keys, call List Keys.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success.  The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more informationFor more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesGetAsync(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, final ApiCallback<WebService> _callback) throws ApiException {

        okhttp3.Call localVarCall = webServicesGetValidateBeforeCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<WebService>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for webServicesList
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. The response includes a paginated array of web service objects and a URI to the next set of results, if any. Note that the web service objects are sparsely populated to conserve space in the response content. To get the full web service object, call the GET operation on the web service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesListCall(String apiVersion, String subscriptionId, String $skiptoken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearning/webServices"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call webServicesListValidateBeforeCall(String apiVersion, String subscriptionId, String $skiptoken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling webServicesList(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling webServicesList(Async)");
        }

        return webServicesListCall(apiVersion, subscriptionId, $skiptoken, _callback);

    }

    /**
     * 
     * Gets the web services in the specified subscription.
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return PaginatedWebServicesList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. The response includes a paginated array of web service objects and a URI to the next set of results, if any. Note that the web service objects are sparsely populated to conserve space in the response content. To get the full web service object, call the GET operation on the web service. </td><td>  -  </td></tr>
     </table>
     */
    public PaginatedWebServicesList webServicesList(String apiVersion, String subscriptionId, String $skiptoken) throws ApiException {
        ApiResponse<PaginatedWebServicesList> localVarResp = webServicesListWithHttpInfo(apiVersion, subscriptionId, $skiptoken);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the web services in the specified subscription.
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return ApiResponse&lt;PaginatedWebServicesList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. The response includes a paginated array of web service objects and a URI to the next set of results, if any. Note that the web service objects are sparsely populated to conserve space in the response content. To get the full web service object, call the GET operation on the web service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PaginatedWebServicesList> webServicesListWithHttpInfo(String apiVersion, String subscriptionId, String $skiptoken) throws ApiException {
        okhttp3.Call localVarCall = webServicesListValidateBeforeCall(apiVersion, subscriptionId, $skiptoken, null);
        Type localVarReturnType = new TypeToken<PaginatedWebServicesList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the web services in the specified subscription.
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. The response includes a paginated array of web service objects and a URI to the next set of results, if any. Note that the web service objects are sparsely populated to conserve space in the response content. To get the full web service object, call the GET operation on the web service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesListAsync(String apiVersion, String subscriptionId, String $skiptoken, final ApiCallback<PaginatedWebServicesList> _callback) throws ApiException {

        okhttp3.Call localVarCall = webServicesListValidateBeforeCall(apiVersion, subscriptionId, $skiptoken, _callback);
        Type localVarReturnType = new TypeToken<PaginatedWebServicesList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for webServicesListByResourceGroup
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. The response includes a paginated array of web service objects and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. Note that the web service objects are sparsely populated to conserve space in the response content. To get the full web service object, call the GET operation on the web service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesListByResourceGroupCall(String resourceGroupName, String apiVersion, String subscriptionId, String $skiptoken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call webServicesListByResourceGroupValidateBeforeCall(String resourceGroupName, String apiVersion, String subscriptionId, String $skiptoken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling webServicesListByResourceGroup(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling webServicesListByResourceGroup(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling webServicesListByResourceGroup(Async)");
        }

        return webServicesListByResourceGroupCall(resourceGroupName, apiVersion, subscriptionId, $skiptoken, _callback);

    }

    /**
     * 
     * Gets the web services in the specified resource group.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return PaginatedWebServicesList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. The response includes a paginated array of web service objects and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. Note that the web service objects are sparsely populated to conserve space in the response content. To get the full web service object, call the GET operation on the web service. </td><td>  -  </td></tr>
     </table>
     */
    public PaginatedWebServicesList webServicesListByResourceGroup(String resourceGroupName, String apiVersion, String subscriptionId, String $skiptoken) throws ApiException {
        ApiResponse<PaginatedWebServicesList> localVarResp = webServicesListByResourceGroupWithHttpInfo(resourceGroupName, apiVersion, subscriptionId, $skiptoken);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the web services in the specified resource group.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return ApiResponse&lt;PaginatedWebServicesList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. The response includes a paginated array of web service objects and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. Note that the web service objects are sparsely populated to conserve space in the response content. To get the full web service object, call the GET operation on the web service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PaginatedWebServicesList> webServicesListByResourceGroupWithHttpInfo(String resourceGroupName, String apiVersion, String subscriptionId, String $skiptoken) throws ApiException {
        okhttp3.Call localVarCall = webServicesListByResourceGroupValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, $skiptoken, null);
        Type localVarReturnType = new TypeToken<PaginatedWebServicesList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the web services in the specified resource group.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. The response includes a paginated array of web service objects and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. Note that the web service objects are sparsely populated to conserve space in the response content. To get the full web service object, call the GET operation on the web service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesListByResourceGroupAsync(String resourceGroupName, String apiVersion, String subscriptionId, String $skiptoken, final ApiCallback<PaginatedWebServicesList> _callback) throws ApiException {

        okhttp3.Call localVarCall = webServicesListByResourceGroupValidateBeforeCall(resourceGroupName, apiVersion, subscriptionId, $skiptoken, _callback);
        Type localVarReturnType = new TypeToken<PaginatedWebServicesList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for webServicesListKeys
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesListKeysCall(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}/listKeys"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "webServiceName" + "}", localVarApiClient.escapeString(webServiceName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call webServicesListKeysValidateBeforeCall(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling webServicesListKeys(Async)");
        }

        // verify the required parameter 'webServiceName' is set
        if (webServiceName == null) {
            throw new ApiException("Missing the required parameter 'webServiceName' when calling webServicesListKeys(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling webServicesListKeys(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling webServicesListKeys(Async)");
        }

        return webServicesListKeysCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets the access keys for the specified web service.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @return WebServiceKeys
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. </td><td>  -  </td></tr>
     </table>
     */
    public WebServiceKeys webServicesListKeys(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<WebServiceKeys> localVarResp = webServicesListKeysWithHttpInfo(resourceGroupName, webServiceName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the access keys for the specified web service.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @return ApiResponse&lt;WebServiceKeys&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WebServiceKeys> webServicesListKeysWithHttpInfo(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = webServicesListKeysValidateBeforeCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<WebServiceKeys>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the access keys for the specified web service.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesListKeysAsync(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, final ApiCallback<WebServiceKeys> _callback) throws ApiException {

        okhttp3.Call localVarCall = webServicesListKeysValidateBeforeCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<WebServiceKeys>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for webServicesPatch
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param patchPayload The payload to use to patch the web service. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesPatchCall(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, WebService patchPayload, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = patchPayload;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "webServiceName" + "}", localVarApiClient.escapeString(webServiceName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "text/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call webServicesPatchValidateBeforeCall(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, WebService patchPayload, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling webServicesPatch(Async)");
        }

        // verify the required parameter 'webServiceName' is set
        if (webServiceName == null) {
            throw new ApiException("Missing the required parameter 'webServiceName' when calling webServicesPatch(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling webServicesPatch(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling webServicesPatch(Async)");
        }

        // verify the required parameter 'patchPayload' is set
        if (patchPayload == null) {
            throw new ApiException("Missing the required parameter 'patchPayload' when calling webServicesPatch(Async)");
        }

        return webServicesPatchCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, patchPayload, _callback);

    }

    /**
     * 
     * Modifies an existing web service resource. The PATCH API call is an asynchronous operation. To determine whether it has completed successfully, you must perform a Get operation.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param patchPayload The payload to use to patch the web service. (required)
     * @return WebService
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
     </table>
     */
    public WebService webServicesPatch(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, WebService patchPayload) throws ApiException {
        ApiResponse<WebService> localVarResp = webServicesPatchWithHttpInfo(resourceGroupName, webServiceName, apiVersion, subscriptionId, patchPayload);
        return localVarResp.getData();
    }

    /**
     * 
     * Modifies an existing web service resource. The PATCH API call is an asynchronous operation. To determine whether it has completed successfully, you must perform a Get operation.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param patchPayload The payload to use to patch the web service. (required)
     * @return ApiResponse&lt;WebService&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WebService> webServicesPatchWithHttpInfo(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, WebService patchPayload) throws ApiException {
        okhttp3.Call localVarCall = webServicesPatchValidateBeforeCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, patchPayload, null);
        Type localVarReturnType = new TypeToken<WebService>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Modifies an existing web service resource. The PATCH API call is an asynchronous operation. To determine whether it has completed successfully, you must perform a Get operation.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param patchPayload The payload to use to patch the web service. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesPatchAsync(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, WebService patchPayload, final ApiCallback<WebService> _callback) throws ApiException {

        okhttp3.Call localVarCall = webServicesPatchValidateBeforeCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, patchPayload, _callback);
        Type localVarReturnType = new TypeToken<WebService>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for webServicesRemove
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Accepted. Note that a 202 status is returned even if the service did not exist. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesRemoveCall(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "webServiceName" + "}", localVarApiClient.escapeString(webServiceName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call webServicesRemoveValidateBeforeCall(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling webServicesRemove(Async)");
        }

        // verify the required parameter 'webServiceName' is set
        if (webServiceName == null) {
            throw new ApiException("Missing the required parameter 'webServiceName' when calling webServicesRemove(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling webServicesRemove(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling webServicesRemove(Async)");
        }

        return webServicesRemoveCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Deletes the specified web service.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Accepted. Note that a 202 status is returned even if the service did not exist. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content. </td><td>  -  </td></tr>
     </table>
     */
    public void webServicesRemove(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId) throws ApiException {
        webServicesRemoveWithHttpInfo(resourceGroupName, webServiceName, apiVersion, subscriptionId);
    }

    /**
     * 
     * Deletes the specified web service.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Accepted. Note that a 202 status is returned even if the service did not exist. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> webServicesRemoveWithHttpInfo(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = webServicesRemoveValidateBeforeCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes the specified web service.
     * @param resourceGroupName Name of the resource group in which the web service is located. (required)
     * @param webServiceName The name of the web service. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Accepted. Note that a 202 status is returned even if the service did not exist. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call webServicesRemoveAsync(String resourceGroupName, String webServiceName, String apiVersion, String subscriptionId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = webServicesRemoveValidateBeforeCall(resourceGroupName, webServiceName, apiVersion, subscriptionId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
