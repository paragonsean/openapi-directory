/*
 * Azure ML Web Services Management Client
 * These APIs allow end users to operate on Azure Machine Learning Web Services resources. They support the following operations:<ul><li>Create or update a web service</li><li>Get a web service</li><li>Patch a web service</li><li>Delete a web service</li><li>Get All Web Services in a Resource Group </li><li>Get All Web Services in a Subscription</li><li>Get Web Services Keys</li></ul>
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.AssetItem;
import org.openapitools.client.model.CommitmentPlan;
import org.openapitools.client.model.DiagnosticsConfiguration;
import org.openapitools.client.model.ExampleRequest;
import org.openapitools.client.model.MachineLearningWorkspace;
import org.openapitools.client.model.RealtimeConfiguration;
import org.openapitools.client.model.ServiceInputOutputSpecification;
import org.openapitools.client.model.StorageAccount;
import org.openapitools.client.model.WebServiceKeys;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The set of properties specific to the Azure ML web service resource.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:27:31.595037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WebServiceProperties {
  public static final String SERIALIZED_NAME_ASSETS = "assets";
  @SerializedName(SERIALIZED_NAME_ASSETS)
  private Map<String, AssetItem> assets = new HashMap<>();

  public static final String SERIALIZED_NAME_COMMITMENT_PLAN = "commitmentPlan";
  @SerializedName(SERIALIZED_NAME_COMMITMENT_PLAN)
  private CommitmentPlan commitmentPlan;

  public static final String SERIALIZED_NAME_CREATED_ON = "createdOn";
  @SerializedName(SERIALIZED_NAME_CREATED_ON)
  private OffsetDateTime createdOn;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DIAGNOSTICS = "diagnostics";
  @SerializedName(SERIALIZED_NAME_DIAGNOSTICS)
  private DiagnosticsConfiguration diagnostics;

  public static final String SERIALIZED_NAME_EXAMPLE_REQUEST = "exampleRequest";
  @SerializedName(SERIALIZED_NAME_EXAMPLE_REQUEST)
  private ExampleRequest exampleRequest;

  public static final String SERIALIZED_NAME_EXPOSE_SAMPLE_DATA = "exposeSampleData";
  @SerializedName(SERIALIZED_NAME_EXPOSE_SAMPLE_DATA)
  private Boolean exposeSampleData;

  public static final String SERIALIZED_NAME_INPUT = "input";
  @SerializedName(SERIALIZED_NAME_INPUT)
  private ServiceInputOutputSpecification input;

  public static final String SERIALIZED_NAME_KEYS = "keys";
  @SerializedName(SERIALIZED_NAME_KEYS)
  private WebServiceKeys keys;

  public static final String SERIALIZED_NAME_MACHINE_LEARNING_WORKSPACE = "machineLearningWorkspace";
  @SerializedName(SERIALIZED_NAME_MACHINE_LEARNING_WORKSPACE)
  private MachineLearningWorkspace machineLearningWorkspace;

  public static final String SERIALIZED_NAME_MODIFIED_ON = "modifiedOn";
  @SerializedName(SERIALIZED_NAME_MODIFIED_ON)
  private OffsetDateTime modifiedOn;

  public static final String SERIALIZED_NAME_OUTPUT = "output";
  @SerializedName(SERIALIZED_NAME_OUTPUT)
  private ServiceInputOutputSpecification output;

  /**
   * Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
   */
  @JsonAdapter(PackageTypeEnum.Adapter.class)
  public enum PackageTypeEnum {
    GRAPH("Graph");

    private String value;

    PackageTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PackageTypeEnum fromValue(String value) {
      for (PackageTypeEnum b : PackageTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PackageTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PackageTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PackageTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PackageTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PackageTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PACKAGE_TYPE = "packageType";
  @SerializedName(SERIALIZED_NAME_PACKAGE_TYPE)
  protected PackageTypeEnum packageType;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Map<String, String> parameters = new HashMap<>();

  /**
   * Read Only: The provision state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.
   */
  @JsonAdapter(ProvisioningStateEnum.Adapter.class)
  public enum ProvisioningStateEnum {
    UNKNOWN("Unknown"),
    
    PROVISIONING("Provisioning"),
    
    SUCCEEDED("Succeeded"),
    
    FAILED("Failed");

    private String value;

    ProvisioningStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProvisioningStateEnum fromValue(String value) {
      for (ProvisioningStateEnum b : ProvisioningStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProvisioningStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProvisioningStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProvisioningStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProvisioningStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProvisioningStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private ProvisioningStateEnum provisioningState;

  public static final String SERIALIZED_NAME_READ_ONLY = "readOnly";
  @SerializedName(SERIALIZED_NAME_READ_ONLY)
  private Boolean readOnly;

  public static final String SERIALIZED_NAME_REALTIME_CONFIGURATION = "realtimeConfiguration";
  @SerializedName(SERIALIZED_NAME_REALTIME_CONFIGURATION)
  private RealtimeConfiguration realtimeConfiguration;

  public static final String SERIALIZED_NAME_STORAGE_ACCOUNT = "storageAccount";
  @SerializedName(SERIALIZED_NAME_STORAGE_ACCOUNT)
  private StorageAccount storageAccount;

  public static final String SERIALIZED_NAME_SWAGGER_LOCATION = "swaggerLocation";
  @SerializedName(SERIALIZED_NAME_SWAGGER_LOCATION)
  private String swaggerLocation;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public WebServiceProperties() {
  }

  public WebServiceProperties(
     OffsetDateTime createdOn, 
     OffsetDateTime modifiedOn, 
     ProvisioningStateEnum provisioningState, 
     String swaggerLocation
  ) {
    this();
    this.createdOn = createdOn;
    this.modifiedOn = modifiedOn;
    this.provisioningState = provisioningState;
    this.swaggerLocation = swaggerLocation;
  }

  public WebServiceProperties assets(Map<String, AssetItem> assets) {
    this.assets = assets;
    return this;
  }

  public WebServiceProperties putAssetsItem(String key, AssetItem assetsItem) {
    if (this.assets == null) {
      this.assets = new HashMap<>();
    }
    this.assets.put(key, assetsItem);
    return this;
  }

  /**
   * Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
   * @return assets
   */
  @javax.annotation.Nullable
  public Map<String, AssetItem> getAssets() {
    return assets;
  }

  public void setAssets(Map<String, AssetItem> assets) {
    this.assets = assets;
  }


  public WebServiceProperties commitmentPlan(CommitmentPlan commitmentPlan) {
    this.commitmentPlan = commitmentPlan;
    return this;
  }

  /**
   * Get commitmentPlan
   * @return commitmentPlan
   */
  @javax.annotation.Nullable
  public CommitmentPlan getCommitmentPlan() {
    return commitmentPlan;
  }

  public void setCommitmentPlan(CommitmentPlan commitmentPlan) {
    this.commitmentPlan = commitmentPlan;
  }


  /**
   * Read Only: The date and time when the web service was created.
   * @return createdOn
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }



  public WebServiceProperties description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the web service.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public WebServiceProperties diagnostics(DiagnosticsConfiguration diagnostics) {
    this.diagnostics = diagnostics;
    return this;
  }

  /**
   * Get diagnostics
   * @return diagnostics
   */
  @javax.annotation.Nullable
  public DiagnosticsConfiguration getDiagnostics() {
    return diagnostics;
  }

  public void setDiagnostics(DiagnosticsConfiguration diagnostics) {
    this.diagnostics = diagnostics;
  }


  public WebServiceProperties exampleRequest(ExampleRequest exampleRequest) {
    this.exampleRequest = exampleRequest;
    return this;
  }

  /**
   * Get exampleRequest
   * @return exampleRequest
   */
  @javax.annotation.Nullable
  public ExampleRequest getExampleRequest() {
    return exampleRequest;
  }

  public void setExampleRequest(ExampleRequest exampleRequest) {
    this.exampleRequest = exampleRequest;
  }


  public WebServiceProperties exposeSampleData(Boolean exposeSampleData) {
    this.exposeSampleData = exposeSampleData;
    return this;
  }

  /**
   * When set to true, sample data is included in the web service&#39;s swagger definition. The default value is true.
   * @return exposeSampleData
   */
  @javax.annotation.Nullable
  public Boolean getExposeSampleData() {
    return exposeSampleData;
  }

  public void setExposeSampleData(Boolean exposeSampleData) {
    this.exposeSampleData = exposeSampleData;
  }


  public WebServiceProperties input(ServiceInputOutputSpecification input) {
    this.input = input;
    return this;
  }

  /**
   * Get input
   * @return input
   */
  @javax.annotation.Nullable
  public ServiceInputOutputSpecification getInput() {
    return input;
  }

  public void setInput(ServiceInputOutputSpecification input) {
    this.input = input;
  }


  public WebServiceProperties keys(WebServiceKeys keys) {
    this.keys = keys;
    return this;
  }

  /**
   * Get keys
   * @return keys
   */
  @javax.annotation.Nullable
  public WebServiceKeys getKeys() {
    return keys;
  }

  public void setKeys(WebServiceKeys keys) {
    this.keys = keys;
  }


  public WebServiceProperties machineLearningWorkspace(MachineLearningWorkspace machineLearningWorkspace) {
    this.machineLearningWorkspace = machineLearningWorkspace;
    return this;
  }

  /**
   * Get machineLearningWorkspace
   * @return machineLearningWorkspace
   */
  @javax.annotation.Nullable
  public MachineLearningWorkspace getMachineLearningWorkspace() {
    return machineLearningWorkspace;
  }

  public void setMachineLearningWorkspace(MachineLearningWorkspace machineLearningWorkspace) {
    this.machineLearningWorkspace = machineLearningWorkspace;
  }


  /**
   * Read Only: The date and time when the web service was last modified.
   * @return modifiedOn
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModifiedOn() {
    return modifiedOn;
  }



  public WebServiceProperties output(ServiceInputOutputSpecification output) {
    this.output = output;
    return this;
  }

  /**
   * Get output
   * @return output
   */
  @javax.annotation.Nullable
  public ServiceInputOutputSpecification getOutput() {
    return output;
  }

  public void setOutput(ServiceInputOutputSpecification output) {
    this.output = output;
  }


  public WebServiceProperties packageType(PackageTypeEnum packageType) {
    this.packageType = packageType;
    return this;
  }

  /**
   * Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
   * @return packageType
   */
  @javax.annotation.Nonnull
  public PackageTypeEnum getPackageType() {
    return packageType;
  }

  public void setPackageType(PackageTypeEnum packageType) {
    this.packageType = packageType;
  }


  public WebServiceProperties parameters(Map<String, String> parameters) {
    this.parameters = parameters;
    return this;
  }

  public WebServiceProperties putParametersItem(String key, String parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

  /**
   * The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.
   * @return parameters
   */
  @javax.annotation.Nullable
  public Map<String, String> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, String> parameters) {
    this.parameters = parameters;
  }


  /**
   * Read Only: The provision state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public ProvisioningStateEnum getProvisioningState() {
    return provisioningState;
  }



  public WebServiceProperties readOnly(Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

  /**
   * When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.
   * @return readOnly
   */
  @javax.annotation.Nullable
  public Boolean getReadOnly() {
    return readOnly;
  }

  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }


  public WebServiceProperties realtimeConfiguration(RealtimeConfiguration realtimeConfiguration) {
    this.realtimeConfiguration = realtimeConfiguration;
    return this;
  }

  /**
   * Get realtimeConfiguration
   * @return realtimeConfiguration
   */
  @javax.annotation.Nullable
  public RealtimeConfiguration getRealtimeConfiguration() {
    return realtimeConfiguration;
  }

  public void setRealtimeConfiguration(RealtimeConfiguration realtimeConfiguration) {
    this.realtimeConfiguration = realtimeConfiguration;
  }


  public WebServiceProperties storageAccount(StorageAccount storageAccount) {
    this.storageAccount = storageAccount;
    return this;
  }

  /**
   * Get storageAccount
   * @return storageAccount
   */
  @javax.annotation.Nullable
  public StorageAccount getStorageAccount() {
    return storageAccount;
  }

  public void setStorageAccount(StorageAccount storageAccount) {
    this.storageAccount = storageAccount;
  }


  /**
   * Read Only: Contains the URI of the swagger spec associated with this web service.
   * @return swaggerLocation
   */
  @javax.annotation.Nullable
  public String getSwaggerLocation() {
    return swaggerLocation;
  }



  public WebServiceProperties title(String title) {
    this.title = title;
    return this;
  }

  /**
   * The title of the web service.
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebServiceProperties webServiceProperties = (WebServiceProperties) o;
    return Objects.equals(this.assets, webServiceProperties.assets) &&
        Objects.equals(this.commitmentPlan, webServiceProperties.commitmentPlan) &&
        Objects.equals(this.createdOn, webServiceProperties.createdOn) &&
        Objects.equals(this.description, webServiceProperties.description) &&
        Objects.equals(this.diagnostics, webServiceProperties.diagnostics) &&
        Objects.equals(this.exampleRequest, webServiceProperties.exampleRequest) &&
        Objects.equals(this.exposeSampleData, webServiceProperties.exposeSampleData) &&
        Objects.equals(this.input, webServiceProperties.input) &&
        Objects.equals(this.keys, webServiceProperties.keys) &&
        Objects.equals(this.machineLearningWorkspace, webServiceProperties.machineLearningWorkspace) &&
        Objects.equals(this.modifiedOn, webServiceProperties.modifiedOn) &&
        Objects.equals(this.output, webServiceProperties.output) &&
        Objects.equals(this.packageType, webServiceProperties.packageType) &&
        Objects.equals(this.parameters, webServiceProperties.parameters) &&
        Objects.equals(this.provisioningState, webServiceProperties.provisioningState) &&
        Objects.equals(this.readOnly, webServiceProperties.readOnly) &&
        Objects.equals(this.realtimeConfiguration, webServiceProperties.realtimeConfiguration) &&
        Objects.equals(this.storageAccount, webServiceProperties.storageAccount) &&
        Objects.equals(this.swaggerLocation, webServiceProperties.swaggerLocation) &&
        Objects.equals(this.title, webServiceProperties.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assets, commitmentPlan, createdOn, description, diagnostics, exampleRequest, exposeSampleData, input, keys, machineLearningWorkspace, modifiedOn, output, packageType, parameters, provisioningState, readOnly, realtimeConfiguration, storageAccount, swaggerLocation, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebServiceProperties {\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    commitmentPlan: ").append(toIndentedString(commitmentPlan)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    diagnostics: ").append(toIndentedString(diagnostics)).append("\n");
    sb.append("    exampleRequest: ").append(toIndentedString(exampleRequest)).append("\n");
    sb.append("    exposeSampleData: ").append(toIndentedString(exposeSampleData)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    keys: ").append(toIndentedString(keys)).append("\n");
    sb.append("    machineLearningWorkspace: ").append(toIndentedString(machineLearningWorkspace)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    sb.append("    packageType: ").append(toIndentedString(packageType)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    realtimeConfiguration: ").append(toIndentedString(realtimeConfiguration)).append("\n");
    sb.append("    storageAccount: ").append(toIndentedString(storageAccount)).append("\n");
    sb.append("    swaggerLocation: ").append(toIndentedString(swaggerLocation)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assets");
    openapiFields.add("commitmentPlan");
    openapiFields.add("createdOn");
    openapiFields.add("description");
    openapiFields.add("diagnostics");
    openapiFields.add("exampleRequest");
    openapiFields.add("exposeSampleData");
    openapiFields.add("input");
    openapiFields.add("keys");
    openapiFields.add("machineLearningWorkspace");
    openapiFields.add("modifiedOn");
    openapiFields.add("output");
    openapiFields.add("packageType");
    openapiFields.add("parameters");
    openapiFields.add("provisioningState");
    openapiFields.add("readOnly");
    openapiFields.add("realtimeConfiguration");
    openapiFields.add("storageAccount");
    openapiFields.add("swaggerLocation");
    openapiFields.add("title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("packageType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WebServiceProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WebServiceProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebServiceProperties is not found in the empty JSON string", WebServiceProperties.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("packageType").getAsString();
      switch (discriminatorValue) {
        case "WebServicePropertiesForGraph":
          WebServicePropertiesForGraph.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `packageType` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of WebServiceProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WebServiceProperties
   * @throws IOException if the JSON string is invalid with respect to WebServiceProperties
   */
  public static WebServiceProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebServiceProperties.class);
  }

  /**
   * Convert an instance of WebServiceProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

