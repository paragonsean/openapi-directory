/**
 * Azure ML Web Services Management Client
 * These APIs allow end users to operate on Azure Machine Learning Web Services resources. They support the following operations:<ul><li>Create or update a web service</li><li>Get a web service</li><li>Patch a web service</li><li>Delete a web service</li><li>Get All Web Services in a Resource Group </li><li>Get All Web Services in a Subscription</li><li>Get Web Services Keys</li></ul>
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GraphParameterLink model module.
 * @module model/GraphParameterLink
 * @version 2016-05-01-preview
 */
class GraphParameterLink {
    /**
     * Constructs a new <code>GraphParameterLink</code>.
     * Association link for a graph global parameter to a node in the graph.
     * @alias module:model/GraphParameterLink
     * @param nodeId {String} The graph node's identifier
     * @param parameterKey {String} The identifier of the node parameter that the global parameter maps to.
     */
    constructor(nodeId, parameterKey) { 
        
        GraphParameterLink.initialize(this, nodeId, parameterKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nodeId, parameterKey) { 
        obj['nodeId'] = nodeId;
        obj['parameterKey'] = parameterKey;
    }

    /**
     * Constructs a <code>GraphParameterLink</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GraphParameterLink} obj Optional instance to populate.
     * @return {module:model/GraphParameterLink} The populated <code>GraphParameterLink</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GraphParameterLink();

            if (data.hasOwnProperty('nodeId')) {
                obj['nodeId'] = ApiClient.convertToType(data['nodeId'], 'String');
            }
            if (data.hasOwnProperty('parameterKey')) {
                obj['parameterKey'] = ApiClient.convertToType(data['parameterKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GraphParameterLink</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GraphParameterLink</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GraphParameterLink.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['nodeId'] && !(typeof data['nodeId'] === 'string' || data['nodeId'] instanceof String)) {
            throw new Error("Expected the field `nodeId` to be a primitive type in the JSON string but got " + data['nodeId']);
        }
        // ensure the json data is a string
        if (data['parameterKey'] && !(typeof data['parameterKey'] === 'string' || data['parameterKey'] instanceof String)) {
            throw new Error("Expected the field `parameterKey` to be a primitive type in the JSON string but got " + data['parameterKey']);
        }

        return true;
    }


}

GraphParameterLink.RequiredProperties = ["nodeId", "parameterKey"];

/**
 * The graph node's identifier
 * @member {String} nodeId
 */
GraphParameterLink.prototype['nodeId'] = undefined;

/**
 * The identifier of the node parameter that the global parameter maps to.
 * @member {String} parameterKey
 */
GraphParameterLink.prototype['parameterKey'] = undefined;






export default GraphParameterLink;

