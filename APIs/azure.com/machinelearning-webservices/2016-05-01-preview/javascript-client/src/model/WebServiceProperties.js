/**
 * Azure ML Web Services Management Client
 * These APIs allow end users to operate on Azure Machine Learning Web Services resources. They support the following operations:<ul><li>Create or update a web service</li><li>Get a web service</li><li>Patch a web service</li><li>Delete a web service</li><li>Get All Web Services in a Resource Group </li><li>Get All Web Services in a Subscription</li><li>Get Web Services Keys</li></ul>
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetItem from './AssetItem';
import CommitmentPlan from './CommitmentPlan';
import DiagnosticsConfiguration from './DiagnosticsConfiguration';
import ExampleRequest from './ExampleRequest';
import MachineLearningWorkspace from './MachineLearningWorkspace';
import RealtimeConfiguration from './RealtimeConfiguration';
import ServiceInputOutputSpecification from './ServiceInputOutputSpecification';
import StorageAccount from './StorageAccount';
import WebServiceKeys from './WebServiceKeys';

/**
 * The WebServiceProperties model module.
 * @module model/WebServiceProperties
 * @version 2016-05-01-preview
 */
class WebServiceProperties {
    /**
     * Constructs a new <code>WebServiceProperties</code>.
     * The set of properties specific to the Azure ML web service resource.
     * @alias module:model/WebServiceProperties
     * @param packageType {module:model/WebServiceProperties.PackageTypeEnum} Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
     */
    constructor(packageType) { 
        
        WebServiceProperties.initialize(this, packageType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, packageType) { 
        obj['packageType'] = packageType;
    }

    /**
     * Constructs a <code>WebServiceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebServiceProperties} obj Optional instance to populate.
     * @return {module:model/WebServiceProperties} The populated <code>WebServiceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebServiceProperties();

            if (data.hasOwnProperty('assets')) {
                obj['assets'] = ApiClient.convertToType(data['assets'], {'String': AssetItem});
            }
            if (data.hasOwnProperty('commitmentPlan')) {
                obj['commitmentPlan'] = CommitmentPlan.constructFromObject(data['commitmentPlan']);
            }
            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('diagnostics')) {
                obj['diagnostics'] = DiagnosticsConfiguration.constructFromObject(data['diagnostics']);
            }
            if (data.hasOwnProperty('exampleRequest')) {
                obj['exampleRequest'] = ExampleRequest.constructFromObject(data['exampleRequest']);
            }
            if (data.hasOwnProperty('exposeSampleData')) {
                obj['exposeSampleData'] = ApiClient.convertToType(data['exposeSampleData'], 'Boolean');
            }
            if (data.hasOwnProperty('input')) {
                obj['input'] = ServiceInputOutputSpecification.constructFromObject(data['input']);
            }
            if (data.hasOwnProperty('keys')) {
                obj['keys'] = WebServiceKeys.constructFromObject(data['keys']);
            }
            if (data.hasOwnProperty('machineLearningWorkspace')) {
                obj['machineLearningWorkspace'] = MachineLearningWorkspace.constructFromObject(data['machineLearningWorkspace']);
            }
            if (data.hasOwnProperty('modifiedOn')) {
                obj['modifiedOn'] = ApiClient.convertToType(data['modifiedOn'], 'Date');
            }
            if (data.hasOwnProperty('output')) {
                obj['output'] = ServiceInputOutputSpecification.constructFromObject(data['output']);
            }
            if (data.hasOwnProperty('packageType')) {
                obj['packageType'] = ApiClient.convertToType(data['packageType'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('readOnly')) {
                obj['readOnly'] = ApiClient.convertToType(data['readOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('realtimeConfiguration')) {
                obj['realtimeConfiguration'] = RealtimeConfiguration.constructFromObject(data['realtimeConfiguration']);
            }
            if (data.hasOwnProperty('storageAccount')) {
                obj['storageAccount'] = StorageAccount.constructFromObject(data['storageAccount']);
            }
            if (data.hasOwnProperty('swaggerLocation')) {
                obj['swaggerLocation'] = ApiClient.convertToType(data['swaggerLocation'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebServiceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebServiceProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebServiceProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `commitmentPlan`
        if (data['commitmentPlan']) { // data not null
          CommitmentPlan.validateJSON(data['commitmentPlan']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `diagnostics`
        if (data['diagnostics']) { // data not null
          DiagnosticsConfiguration.validateJSON(data['diagnostics']);
        }
        // validate the optional field `exampleRequest`
        if (data['exampleRequest']) { // data not null
          ExampleRequest.validateJSON(data['exampleRequest']);
        }
        // validate the optional field `input`
        if (data['input']) { // data not null
          ServiceInputOutputSpecification.validateJSON(data['input']);
        }
        // validate the optional field `keys`
        if (data['keys']) { // data not null
          WebServiceKeys.validateJSON(data['keys']);
        }
        // validate the optional field `machineLearningWorkspace`
        if (data['machineLearningWorkspace']) { // data not null
          MachineLearningWorkspace.validateJSON(data['machineLearningWorkspace']);
        }
        // validate the optional field `output`
        if (data['output']) { // data not null
          ServiceInputOutputSpecification.validateJSON(data['output']);
        }
        // ensure the json data is a string
        if (data['packageType'] && !(typeof data['packageType'] === 'string' || data['packageType'] instanceof String)) {
            throw new Error("Expected the field `packageType` to be a primitive type in the JSON string but got " + data['packageType']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `realtimeConfiguration`
        if (data['realtimeConfiguration']) { // data not null
          RealtimeConfiguration.validateJSON(data['realtimeConfiguration']);
        }
        // validate the optional field `storageAccount`
        if (data['storageAccount']) { // data not null
          StorageAccount.validateJSON(data['storageAccount']);
        }
        // ensure the json data is a string
        if (data['swaggerLocation'] && !(typeof data['swaggerLocation'] === 'string' || data['swaggerLocation'] instanceof String)) {
            throw new Error("Expected the field `swaggerLocation` to be a primitive type in the JSON string but got " + data['swaggerLocation']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

WebServiceProperties.RequiredProperties = ["packageType"];

/**
 * Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
 * @member {Object.<String, module:model/AssetItem>} assets
 */
WebServiceProperties.prototype['assets'] = undefined;

/**
 * @member {module:model/CommitmentPlan} commitmentPlan
 */
WebServiceProperties.prototype['commitmentPlan'] = undefined;

/**
 * Read Only: The date and time when the web service was created.
 * @member {Date} createdOn
 */
WebServiceProperties.prototype['createdOn'] = undefined;

/**
 * The description of the web service.
 * @member {String} description
 */
WebServiceProperties.prototype['description'] = undefined;

/**
 * @member {module:model/DiagnosticsConfiguration} diagnostics
 */
WebServiceProperties.prototype['diagnostics'] = undefined;

/**
 * @member {module:model/ExampleRequest} exampleRequest
 */
WebServiceProperties.prototype['exampleRequest'] = undefined;

/**
 * When set to true, sample data is included in the web service's swagger definition. The default value is true.
 * @member {Boolean} exposeSampleData
 */
WebServiceProperties.prototype['exposeSampleData'] = undefined;

/**
 * @member {module:model/ServiceInputOutputSpecification} input
 */
WebServiceProperties.prototype['input'] = undefined;

/**
 * @member {module:model/WebServiceKeys} keys
 */
WebServiceProperties.prototype['keys'] = undefined;

/**
 * @member {module:model/MachineLearningWorkspace} machineLearningWorkspace
 */
WebServiceProperties.prototype['machineLearningWorkspace'] = undefined;

/**
 * Read Only: The date and time when the web service was last modified.
 * @member {Date} modifiedOn
 */
WebServiceProperties.prototype['modifiedOn'] = undefined;

/**
 * @member {module:model/ServiceInputOutputSpecification} output
 */
WebServiceProperties.prototype['output'] = undefined;

/**
 * Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
 * @member {module:model/WebServiceProperties.PackageTypeEnum} packageType
 */
WebServiceProperties.prototype['packageType'] = undefined;

/**
 * The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.
 * @member {Object.<String, String>} parameters
 */
WebServiceProperties.prototype['parameters'] = undefined;

/**
 * Read Only: The provision state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.
 * @member {module:model/WebServiceProperties.ProvisioningStateEnum} provisioningState
 */
WebServiceProperties.prototype['provisioningState'] = undefined;

/**
 * When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.
 * @member {Boolean} readOnly
 */
WebServiceProperties.prototype['readOnly'] = undefined;

/**
 * @member {module:model/RealtimeConfiguration} realtimeConfiguration
 */
WebServiceProperties.prototype['realtimeConfiguration'] = undefined;

/**
 * @member {module:model/StorageAccount} storageAccount
 */
WebServiceProperties.prototype['storageAccount'] = undefined;

/**
 * Read Only: Contains the URI of the swagger spec associated with this web service.
 * @member {String} swaggerLocation
 */
WebServiceProperties.prototype['swaggerLocation'] = undefined;

/**
 * The title of the web service.
 * @member {String} title
 */
WebServiceProperties.prototype['title'] = undefined;





/**
 * Allowed values for the <code>packageType</code> property.
 * @enum {String}
 * @readonly
 */
WebServiceProperties['PackageTypeEnum'] = {

    /**
     * value: "Graph"
     * @const
     */
    "Graph": "Graph"
};


/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
WebServiceProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "Provisioning"
     * @const
     */
    "Provisioning": "Provisioning",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed"
};



export default WebServiceProperties;

