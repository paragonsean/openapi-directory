/**
 * Azure ML Web Services Management Client
 * These APIs allow end users to operate on Azure Machine Learning Web Services resources. They support the following operations:<ul><li>Create or update a web service</li><li>Get a web service</li><li>Patch a web service</li><li>Delete a web service</li><li>Get All Web Services in a Resource Group </li><li>Get All Web Services in a Subscription</li><li>Get Web Services Keys</li></ul>
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MachineLearningWorkspace model module.
 * @module model/MachineLearningWorkspace
 * @version 2016-05-01-preview
 */
class MachineLearningWorkspace {
    /**
     * Constructs a new <code>MachineLearningWorkspace</code>.
     * Information about the machine learning workspace containing the experiment that is source for the web service.
     * @alias module:model/MachineLearningWorkspace
     * @param id {String} Specifies the workspace ID of the machine learning workspace associated with the web service
     */
    constructor(id) { 
        
        MachineLearningWorkspace.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>MachineLearningWorkspace</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MachineLearningWorkspace} obj Optional instance to populate.
     * @return {module:model/MachineLearningWorkspace} The populated <code>MachineLearningWorkspace</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MachineLearningWorkspace();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MachineLearningWorkspace</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MachineLearningWorkspace</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MachineLearningWorkspace.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}

MachineLearningWorkspace.RequiredProperties = ["id"];

/**
 * Specifies the workspace ID of the machine learning workspace associated with the web service
 * @member {String} id
 */
MachineLearningWorkspace.prototype['id'] = undefined;






export default MachineLearningWorkspace;

