/**
 * Azure ML Web Services Management Client
 * These APIs allow end users to operate on Azure Machine Learning Web Services resources. They support the following operations:<ul><li>Create or update a web service</li><li>Get a web service</li><li>Patch a web service</li><li>Delete a web service</li><li>Get All Web Services in a Resource Group </li><li>Get All Web Services in a Subscription</li><li>Get Web Services Keys</li></ul>
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureMlWebServicesManagementClient);
  }
}(this, function(expect, AzureMlWebServicesManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WebServiceProperties', function() {
    it('should create an instance of WebServiceProperties', function() {
      // uncomment below and update the code to test WebServiceProperties
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be.a(AzureMlWebServicesManagementClient.WebServiceProperties);
    });

    it('should have the property assets (base name: "assets")', function() {
      // uncomment below and update the code to test the property assets
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property commitmentPlan (base name: "commitmentPlan")', function() {
      // uncomment below and update the code to test the property commitmentPlan
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property createdOn (base name: "createdOn")', function() {
      // uncomment below and update the code to test the property createdOn
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property diagnostics (base name: "diagnostics")', function() {
      // uncomment below and update the code to test the property diagnostics
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property exampleRequest (base name: "exampleRequest")', function() {
      // uncomment below and update the code to test the property exampleRequest
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property exposeSampleData (base name: "exposeSampleData")', function() {
      // uncomment below and update the code to test the property exposeSampleData
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property input (base name: "input")', function() {
      // uncomment below and update the code to test the property input
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property keys (base name: "keys")', function() {
      // uncomment below and update the code to test the property keys
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property machineLearningWorkspace (base name: "machineLearningWorkspace")', function() {
      // uncomment below and update the code to test the property machineLearningWorkspace
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property modifiedOn (base name: "modifiedOn")', function() {
      // uncomment below and update the code to test the property modifiedOn
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property output (base name: "output")', function() {
      // uncomment below and update the code to test the property output
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property packageType (base name: "packageType")', function() {
      // uncomment below and update the code to test the property packageType
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property parameters (base name: "parameters")', function() {
      // uncomment below and update the code to test the property parameters
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property provisioningState (base name: "provisioningState")', function() {
      // uncomment below and update the code to test the property provisioningState
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property readOnly (base name: "readOnly")', function() {
      // uncomment below and update the code to test the property readOnly
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property realtimeConfiguration (base name: "realtimeConfiguration")', function() {
      // uncomment below and update the code to test the property realtimeConfiguration
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property storageAccount (base name: "storageAccount")', function() {
      // uncomment below and update the code to test the property storageAccount
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property swaggerLocation (base name: "swaggerLocation")', function() {
      // uncomment below and update the code to test the property swaggerLocation
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new AzureMlWebServicesManagementClient.WebServiceProperties();
      //expect(instance).to.be();
    });

  });

}));
