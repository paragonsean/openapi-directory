# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebServiceParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_thumbprint: str=None, value: object=None):
        """WebServiceParameter - a model defined in OpenAPI

        :param certificate_thumbprint: The certificate_thumbprint of this WebServiceParameter.
        :param value: The value of this WebServiceParameter.
        """
        self.openapi_types = {
            'certificate_thumbprint': str,
            'value': object
        }

        self.attribute_map = {
            'certificate_thumbprint': 'certificateThumbprint',
            'value': 'value'
        }

        self._certificate_thumbprint = certificate_thumbprint
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebServiceParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebServiceParameter of this WebServiceParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_thumbprint(self):
        """Gets the certificate_thumbprint of this WebServiceParameter.

        If the parameter value in 'value' field is encrypted, the thumbprint of the certificate should be put here.

        :return: The certificate_thumbprint of this WebServiceParameter.
        :rtype: str
        """
        return self._certificate_thumbprint

    @certificate_thumbprint.setter
    def certificate_thumbprint(self, certificate_thumbprint):
        """Sets the certificate_thumbprint of this WebServiceParameter.

        If the parameter value in 'value' field is encrypted, the thumbprint of the certificate should be put here.

        :param certificate_thumbprint: The certificate_thumbprint of this WebServiceParameter.
        :type certificate_thumbprint: str
        """

        self._certificate_thumbprint = certificate_thumbprint

    @property
    def value(self):
        """Gets the value of this WebServiceParameter.

        The parameter value

        :return: The value of this WebServiceParameter.
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this WebServiceParameter.

        The parameter value

        :param value: The value of this WebServiceParameter.
        :type value: object
        """

        self._value = value
