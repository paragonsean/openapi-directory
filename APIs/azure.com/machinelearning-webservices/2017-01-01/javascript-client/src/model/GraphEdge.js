/**
 * Azure ML Web Services Management Client
 * These APIs allow end users to operate on Azure Machine Learning Web Services resources. They support the following operations:<ul><li>Create or update a web service</li><li>Get a web service</li><li>Patch a web service</li><li>Delete a web service</li><li>Get All Web Services in a Resource Group </li><li>Get All Web Services in a Subscription</li><li>Get Web Services Keys</li></ul>
 *
 * The version of the OpenAPI document: 2017-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GraphEdge model module.
 * @module model/GraphEdge
 * @version 2017-01-01
 */
class GraphEdge {
    /**
     * Constructs a new <code>GraphEdge</code>.
     * Defines an edge within the web service&#39;s graph.
     * @alias module:model/GraphEdge
     */
    constructor() { 
        
        GraphEdge.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GraphEdge</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GraphEdge} obj Optional instance to populate.
     * @return {module:model/GraphEdge} The populated <code>GraphEdge</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GraphEdge();

            if (data.hasOwnProperty('sourceNodeId')) {
                obj['sourceNodeId'] = ApiClient.convertToType(data['sourceNodeId'], 'String');
            }
            if (data.hasOwnProperty('sourcePortId')) {
                obj['sourcePortId'] = ApiClient.convertToType(data['sourcePortId'], 'String');
            }
            if (data.hasOwnProperty('targetNodeId')) {
                obj['targetNodeId'] = ApiClient.convertToType(data['targetNodeId'], 'String');
            }
            if (data.hasOwnProperty('targetPortId')) {
                obj['targetPortId'] = ApiClient.convertToType(data['targetPortId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GraphEdge</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GraphEdge</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['sourceNodeId'] && !(typeof data['sourceNodeId'] === 'string' || data['sourceNodeId'] instanceof String)) {
            throw new Error("Expected the field `sourceNodeId` to be a primitive type in the JSON string but got " + data['sourceNodeId']);
        }
        // ensure the json data is a string
        if (data['sourcePortId'] && !(typeof data['sourcePortId'] === 'string' || data['sourcePortId'] instanceof String)) {
            throw new Error("Expected the field `sourcePortId` to be a primitive type in the JSON string but got " + data['sourcePortId']);
        }
        // ensure the json data is a string
        if (data['targetNodeId'] && !(typeof data['targetNodeId'] === 'string' || data['targetNodeId'] instanceof String)) {
            throw new Error("Expected the field `targetNodeId` to be a primitive type in the JSON string but got " + data['targetNodeId']);
        }
        // ensure the json data is a string
        if (data['targetPortId'] && !(typeof data['targetPortId'] === 'string' || data['targetPortId'] instanceof String)) {
            throw new Error("Expected the field `targetPortId` to be a primitive type in the JSON string but got " + data['targetPortId']);
        }

        return true;
    }


}



/**
 * The source graph node's identifier.
 * @member {String} sourceNodeId
 */
GraphEdge.prototype['sourceNodeId'] = undefined;

/**
 * The identifier of the source node's port that the edge connects from.
 * @member {String} sourcePortId
 */
GraphEdge.prototype['sourcePortId'] = undefined;

/**
 * The destination graph node's identifier.
 * @member {String} targetNodeId
 */
GraphEdge.prototype['targetNodeId'] = undefined;

/**
 * The identifier of the destination node's port that the edge connects into.
 * @member {String} targetPortId
 */
GraphEdge.prototype['targetPortId'] = undefined;






export default GraphEdge;

