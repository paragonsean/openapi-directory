/**
 * Domains API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DomainAvailabilityCheckResult model module.
 * @module model/DomainAvailabilityCheckResult
 * @version 2019-08-01
 */
class DomainAvailabilityCheckResult {
    /**
     * Constructs a new <code>DomainAvailabilityCheckResult</code>.
     * Domain availability check result.
     * @alias module:model/DomainAvailabilityCheckResult
     */
    constructor() { 
        
        DomainAvailabilityCheckResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DomainAvailabilityCheckResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DomainAvailabilityCheckResult} obj Optional instance to populate.
     * @return {module:model/DomainAvailabilityCheckResult} The populated <code>DomainAvailabilityCheckResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DomainAvailabilityCheckResult();

            if (data.hasOwnProperty('available')) {
                obj['available'] = ApiClient.convertToType(data['available'], 'Boolean');
            }
            if (data.hasOwnProperty('domainType')) {
                obj['domainType'] = ApiClient.convertToType(data['domainType'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DomainAvailabilityCheckResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DomainAvailabilityCheckResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['domainType'] && !(typeof data['domainType'] === 'string' || data['domainType'] instanceof String)) {
            throw new Error("Expected the field `domainType` to be a primitive type in the JSON string but got " + data['domainType']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * <code>true</code> if domain can be purchased using CreateDomain API; otherwise, <code>false</code>.
 * @member {Boolean} available
 */
DomainAvailabilityCheckResult.prototype['available'] = undefined;

/**
 * Valid values are Regular domain: Azure will charge the full price of domain registration, SoftDeleted: Purchasing this domain will simply restore it and this operation will not cost anything.
 * @member {module:model/DomainAvailabilityCheckResult.DomainTypeEnum} domainType
 */
DomainAvailabilityCheckResult.prototype['domainType'] = undefined;

/**
 * Name of the domain.
 * @member {String} name
 */
DomainAvailabilityCheckResult.prototype['name'] = undefined;





/**
 * Allowed values for the <code>domainType</code> property.
 * @enum {String}
 * @readonly
 */
DomainAvailabilityCheckResult['DomainTypeEnum'] = {

    /**
     * value: "Regular"
     * @const
     */
    "Regular": "Regular",

    /**
     * value: "SoftDeleted"
     * @const
     */
    "SoftDeleted": "SoftDeleted"
};



export default DomainAvailabilityCheckResult;

