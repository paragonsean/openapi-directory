/**
 * Domains API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Address from './model/Address';
import Contact from './model/Contact';
import Domain from './model/Domain';
import DomainAvailablilityCheckResult from './model/DomainAvailablilityCheckResult';
import DomainCollection from './model/DomainCollection';
import DomainControlCenterSsoRequest from './model/DomainControlCenterSsoRequest';
import DomainOwnershipIdentifier from './model/DomainOwnershipIdentifier';
import DomainOwnershipIdentifierCollection from './model/DomainOwnershipIdentifierCollection';
import DomainPatchResource from './model/DomainPatchResource';
import DomainPurchaseConsent from './model/DomainPurchaseConsent';
import DomainRecommendationSearchParameters from './model/DomainRecommendationSearchParameters';
import DomainsCheckAvailabilityRequest from './model/DomainsCheckAvailabilityRequest';
import ErrorResponse from './model/ErrorResponse';
import HostName from './model/HostName';
import NameIdentifierCollection from './model/NameIdentifierCollection';
import DomainsApi from './api/DomainsApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var DomainsApiClient = require('index'); // See note below*.
* var xxxSvc = new DomainsApiClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new DomainsApiClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new DomainsApiClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new DomainsApiClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-04-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact,

    /**
     * The Domain model constructor.
     * @property {module:model/Domain}
     */
    Domain,

    /**
     * The DomainAvailablilityCheckResult model constructor.
     * @property {module:model/DomainAvailablilityCheckResult}
     */
    DomainAvailablilityCheckResult,

    /**
     * The DomainCollection model constructor.
     * @property {module:model/DomainCollection}
     */
    DomainCollection,

    /**
     * The DomainControlCenterSsoRequest model constructor.
     * @property {module:model/DomainControlCenterSsoRequest}
     */
    DomainControlCenterSsoRequest,

    /**
     * The DomainOwnershipIdentifier model constructor.
     * @property {module:model/DomainOwnershipIdentifier}
     */
    DomainOwnershipIdentifier,

    /**
     * The DomainOwnershipIdentifierCollection model constructor.
     * @property {module:model/DomainOwnershipIdentifierCollection}
     */
    DomainOwnershipIdentifierCollection,

    /**
     * The DomainPatchResource model constructor.
     * @property {module:model/DomainPatchResource}
     */
    DomainPatchResource,

    /**
     * The DomainPurchaseConsent model constructor.
     * @property {module:model/DomainPurchaseConsent}
     */
    DomainPurchaseConsent,

    /**
     * The DomainRecommendationSearchParameters model constructor.
     * @property {module:model/DomainRecommendationSearchParameters}
     */
    DomainRecommendationSearchParameters,

    /**
     * The DomainsCheckAvailabilityRequest model constructor.
     * @property {module:model/DomainsCheckAvailabilityRequest}
     */
    DomainsCheckAvailabilityRequest,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The HostName model constructor.
     * @property {module:model/HostName}
     */
    HostName,

    /**
     * The NameIdentifierCollection model constructor.
     * @property {module:model/NameIdentifierCollection}
     */
    NameIdentifierCollection,

    /**
    * The DomainsApi service constructor.
    * @property {module:api/DomainsApi}
    */
    DomainsApi
};
