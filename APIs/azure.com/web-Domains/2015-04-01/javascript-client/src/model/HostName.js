/**
 * Domains API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HostName model module.
 * @module model/HostName
 * @version 2015-04-01
 */
class HostName {
    /**
     * Constructs a new <code>HostName</code>.
     * Details of a hostname derived from a domain.
     * @alias module:model/HostName
     */
    constructor() { 
        
        HostName.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HostName</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HostName} obj Optional instance to populate.
     * @return {module:model/HostName} The populated <code>HostName</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HostName();

            if (data.hasOwnProperty('azureResourceName')) {
                obj['azureResourceName'] = ApiClient.convertToType(data['azureResourceName'], 'String');
            }
            if (data.hasOwnProperty('azureResourceType')) {
                obj['azureResourceType'] = ApiClient.convertToType(data['azureResourceType'], 'String');
            }
            if (data.hasOwnProperty('customHostNameDnsRecordType')) {
                obj['customHostNameDnsRecordType'] = ApiClient.convertToType(data['customHostNameDnsRecordType'], 'String');
            }
            if (data.hasOwnProperty('hostNameType')) {
                obj['hostNameType'] = ApiClient.convertToType(data['hostNameType'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('siteNames')) {
                obj['siteNames'] = ApiClient.convertToType(data['siteNames'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HostName</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HostName</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['azureResourceName'] && !(typeof data['azureResourceName'] === 'string' || data['azureResourceName'] instanceof String)) {
            throw new Error("Expected the field `azureResourceName` to be a primitive type in the JSON string but got " + data['azureResourceName']);
        }
        // ensure the json data is a string
        if (data['azureResourceType'] && !(typeof data['azureResourceType'] === 'string' || data['azureResourceType'] instanceof String)) {
            throw new Error("Expected the field `azureResourceType` to be a primitive type in the JSON string but got " + data['azureResourceType']);
        }
        // ensure the json data is a string
        if (data['customHostNameDnsRecordType'] && !(typeof data['customHostNameDnsRecordType'] === 'string' || data['customHostNameDnsRecordType'] instanceof String)) {
            throw new Error("Expected the field `customHostNameDnsRecordType` to be a primitive type in the JSON string but got " + data['customHostNameDnsRecordType']);
        }
        // ensure the json data is a string
        if (data['hostNameType'] && !(typeof data['hostNameType'] === 'string' || data['hostNameType'] instanceof String)) {
            throw new Error("Expected the field `hostNameType` to be a primitive type in the JSON string but got " + data['hostNameType']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['siteNames'])) {
            throw new Error("Expected the field `siteNames` to be an array in the JSON data but got " + data['siteNames']);
        }

        return true;
    }


}



/**
 * Name of the Azure resource the hostname is assigned to. If it is assigned to a Traffic Manager then it will be the Traffic Manager name otherwise it will be the app name.
 * @member {String} azureResourceName
 */
HostName.prototype['azureResourceName'] = undefined;

/**
 * Type of the Azure resource the hostname is assigned to.
 * @member {module:model/HostName.AzureResourceTypeEnum} azureResourceType
 */
HostName.prototype['azureResourceType'] = undefined;

/**
 * Type of the DNS record.
 * @member {module:model/HostName.CustomHostNameDnsRecordTypeEnum} customHostNameDnsRecordType
 */
HostName.prototype['customHostNameDnsRecordType'] = undefined;

/**
 * Type of the hostname.
 * @member {module:model/HostName.HostNameTypeEnum} hostNameType
 */
HostName.prototype['hostNameType'] = undefined;

/**
 * Name of the hostname.
 * @member {String} name
 */
HostName.prototype['name'] = undefined;

/**
 * List of apps the hostname is assigned to. This list will have more than one app only if the hostname is pointing to a Traffic Manager.
 * @member {Array.<String>} siteNames
 */
HostName.prototype['siteNames'] = undefined;





/**
 * Allowed values for the <code>azureResourceType</code> property.
 * @enum {String}
 * @readonly
 */
HostName['AzureResourceTypeEnum'] = {

    /**
     * value: "Website"
     * @const
     */
    "Website": "Website",

    /**
     * value: "TrafficManager"
     * @const
     */
    "TrafficManager": "TrafficManager"
};


/**
 * Allowed values for the <code>customHostNameDnsRecordType</code> property.
 * @enum {String}
 * @readonly
 */
HostName['CustomHostNameDnsRecordTypeEnum'] = {

    /**
     * value: "CName"
     * @const
     */
    "CName": "CName",

    /**
     * value: "A"
     * @const
     */
    "A": "A"
};


/**
 * Allowed values for the <code>hostNameType</code> property.
 * @enum {String}
 * @readonly
 */
HostName['HostNameTypeEnum'] = {

    /**
     * value: "Verified"
     * @const
     */
    "Verified": "Verified",

    /**
     * value: "Managed"
     * @const
     */
    "Managed": "Managed"
};



export default HostName;

