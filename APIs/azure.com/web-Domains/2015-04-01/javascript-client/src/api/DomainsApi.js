/**
 * Domains API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Domain from '../model/Domain';
import DomainAvailablilityCheckResult from '../model/DomainAvailablilityCheckResult';
import DomainCollection from '../model/DomainCollection';
import DomainControlCenterSsoRequest from '../model/DomainControlCenterSsoRequest';
import DomainOwnershipIdentifier from '../model/DomainOwnershipIdentifier';
import DomainOwnershipIdentifierCollection from '../model/DomainOwnershipIdentifierCollection';
import DomainPatchResource from '../model/DomainPatchResource';
import DomainRecommendationSearchParameters from '../model/DomainRecommendationSearchParameters';
import DomainsCheckAvailabilityRequest from '../model/DomainsCheckAvailabilityRequest';
import ErrorResponse from '../model/ErrorResponse';
import NameIdentifierCollection from '../model/NameIdentifierCollection';

/**
* Domains service.
* @module api/DomainsApi
* @version 2015-04-01
*/
export default class DomainsApi {

    /**
    * Constructs a new DomainsApi. 
    * @alias module:api/DomainsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the domainsCheckAvailability operation.
     * @callback module:api/DomainsApi~domainsCheckAvailabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainAvailablilityCheckResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check if a domain is available for registration.
     * Check if a domain is available for registration.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:model/DomainsCheckAvailabilityRequest} identifier Name of the domain.
     * @param {module:api/DomainsApi~domainsCheckAvailabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainAvailablilityCheckResult}
     */
    domainsCheckAvailability(subscriptionId, apiVersion, identifier, callback) {
      let postBody = identifier;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsCheckAvailability");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsCheckAvailability");
      }
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling domainsCheckAvailability");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DomainAvailablilityCheckResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/checkDomainAvailability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsCreateOrUpdate operation.
     * @callback module:api/DomainsApi~domainsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Domain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a domain.
     * Creates or updates a domain.
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} domainName Name of the domain.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:model/Domain} domain Domain registration information.
     * @param {module:api/DomainsApi~domainsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Domain}
     */
    domainsCreateOrUpdate(resourceGroupName, domainName, subscriptionId, apiVersion, domain, callback) {
      let postBody = domain;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsCreateOrUpdate");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsCreateOrUpdate");
      }
      // verify the required parameter 'domain' is set
      if (domain === undefined || domain === null) {
        throw new Error("Missing the required parameter 'domain' when calling domainsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'domainName': domainName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Domain;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsCreateOrUpdateOwnershipIdentifier operation.
     * @callback module:api/DomainsApi~domainsCreateOrUpdateOwnershipIdentifierCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainOwnershipIdentifier} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an ownership identifier for a domain or updates identifier details for an existing identifer
     * Creates an ownership identifier for a domain or updates identifier details for an existing identifer
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} domainName Name of domain.
     * @param {String} name Name of identifier.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:model/DomainOwnershipIdentifier} domainOwnershipIdentifier A JSON representation of the domain ownership properties.
     * @param {module:api/DomainsApi~domainsCreateOrUpdateOwnershipIdentifierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainOwnershipIdentifier}
     */
    domainsCreateOrUpdateOwnershipIdentifier(resourceGroupName, domainName, name, subscriptionId, apiVersion, domainOwnershipIdentifier, callback) {
      let postBody = domainOwnershipIdentifier;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsCreateOrUpdateOwnershipIdentifier");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsCreateOrUpdateOwnershipIdentifier");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling domainsCreateOrUpdateOwnershipIdentifier");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsCreateOrUpdateOwnershipIdentifier");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsCreateOrUpdateOwnershipIdentifier");
      }
      // verify the required parameter 'domainOwnershipIdentifier' is set
      if (domainOwnershipIdentifier === undefined || domainOwnershipIdentifier === null) {
        throw new Error("Missing the required parameter 'domainOwnershipIdentifier' when calling domainsCreateOrUpdateOwnershipIdentifier");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'domainName': domainName,
        'name': name,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DomainOwnershipIdentifier;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsDelete operation.
     * @callback module:api/DomainsApi~domainsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a domain.
     * Delete a domain.
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} domainName Name of the domain.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {Object} opts Optional parameters
     * @param {Boolean} [forceHardDeleteDomain] Specify <code>true</code> to delete the domain immediately. The default is <code>false</code> which deletes the domain after 24 hours.
     * @param {module:api/DomainsApi~domainsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    domainsDelete(resourceGroupName, domainName, subscriptionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsDelete");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'domainName': domainName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'forceHardDeleteDomain': opts['forceHardDeleteDomain'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsDeleteOwnershipIdentifier operation.
     * @callback module:api/DomainsApi~domainsDeleteOwnershipIdentifierCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete ownership identifier for domain
     * Delete ownership identifier for domain
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} domainName Name of domain.
     * @param {String} name Name of identifier.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/DomainsApi~domainsDeleteOwnershipIdentifierCallback} callback The callback function, accepting three arguments: error, data, response
     */
    domainsDeleteOwnershipIdentifier(resourceGroupName, domainName, name, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsDeleteOwnershipIdentifier");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsDeleteOwnershipIdentifier");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling domainsDeleteOwnershipIdentifier");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsDeleteOwnershipIdentifier");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsDeleteOwnershipIdentifier");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'domainName': domainName,
        'name': name,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsGet operation.
     * @callback module:api/DomainsApi~domainsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Domain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a domain.
     * Get a domain.
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} domainName Name of the domain.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/DomainsApi~domainsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Domain}
     */
    domainsGet(resourceGroupName, domainName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsGet");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'domainName': domainName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Domain;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsGetControlCenterSsoRequest operation.
     * @callback module:api/DomainsApi~domainsGetControlCenterSsoRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainControlCenterSsoRequest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate a single sign-on request for the domain management portal.
     * Generate a single sign-on request for the domain management portal.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/DomainsApi~domainsGetControlCenterSsoRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainControlCenterSsoRequest}
     */
    domainsGetControlCenterSsoRequest(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsGetControlCenterSsoRequest");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsGetControlCenterSsoRequest");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainControlCenterSsoRequest;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/generateSsoRequest', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsGetOwnershipIdentifier operation.
     * @callback module:api/DomainsApi~domainsGetOwnershipIdentifierCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainOwnershipIdentifier} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ownership identifier for domain
     * Get ownership identifier for domain
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} domainName Name of domain.
     * @param {String} name Name of identifier.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/DomainsApi~domainsGetOwnershipIdentifierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainOwnershipIdentifier}
     */
    domainsGetOwnershipIdentifier(resourceGroupName, domainName, name, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsGetOwnershipIdentifier");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsGetOwnershipIdentifier");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling domainsGetOwnershipIdentifier");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsGetOwnershipIdentifier");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsGetOwnershipIdentifier");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'domainName': domainName,
        'name': name,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainOwnershipIdentifier;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsList operation.
     * @callback module:api/DomainsApi~domainsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all domains in a subscription.
     * Get all domains in a subscription.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/DomainsApi~domainsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainCollection}
     */
    domainsList(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/domains', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsListByResourceGroup operation.
     * @callback module:api/DomainsApi~domainsListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all domains in a resource group.
     * Get all domains in a resource group.
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/DomainsApi~domainsListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainCollection}
     */
    domainsListByResourceGroup(resourceGroupName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsListOwnershipIdentifiers operation.
     * @callback module:api/DomainsApi~domainsListOwnershipIdentifiersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainOwnershipIdentifierCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists domain ownership identifiers.
     * Lists domain ownership identifiers.
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} domainName Name of domain.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/DomainsApi~domainsListOwnershipIdentifiersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainOwnershipIdentifierCollection}
     */
    domainsListOwnershipIdentifiers(resourceGroupName, domainName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsListOwnershipIdentifiers");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsListOwnershipIdentifiers");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsListOwnershipIdentifiers");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsListOwnershipIdentifiers");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'domainName': domainName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainOwnershipIdentifierCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsListRecommendations operation.
     * @callback module:api/DomainsApi~domainsListRecommendationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NameIdentifierCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get domain name recommendations based on keywords.
     * Get domain name recommendations based on keywords.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:model/DomainRecommendationSearchParameters} parameters Search parameters for domain name recommendations.
     * @param {module:api/DomainsApi~domainsListRecommendationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NameIdentifierCollection}
     */
    domainsListRecommendations(subscriptionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsListRecommendations");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsListRecommendations");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling domainsListRecommendations");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = NameIdentifierCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/listDomainRecommendations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsRenew operation.
     * @callback module:api/DomainsApi~domainsRenewCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Renew a domain.
     * Renew a domain.
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} domainName Name of the domain.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:api/DomainsApi~domainsRenewCallback} callback The callback function, accepting three arguments: error, data, response
     */
    domainsRenew(resourceGroupName, domainName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsRenew");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsRenew");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsRenew");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsRenew");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'domainName': domainName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/renew', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsUpdate operation.
     * @callback module:api/DomainsApi~domainsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Domain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a domain.
     * Creates or updates a domain.
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} domainName Name of the domain.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:model/DomainPatchResource} domain Domain registration information.
     * @param {module:api/DomainsApi~domainsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Domain}
     */
    domainsUpdate(resourceGroupName, domainName, subscriptionId, apiVersion, domain, callback) {
      let postBody = domain;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsUpdate");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsUpdate");
      }
      // verify the required parameter 'domain' is set
      if (domain === undefined || domain === null) {
        throw new Error("Missing the required parameter 'domain' when calling domainsUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'domainName': domainName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Domain;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainsUpdateOwnershipIdentifier operation.
     * @callback module:api/DomainsApi~domainsUpdateOwnershipIdentifierCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainOwnershipIdentifier} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an ownership identifier for a domain or updates identifier details for an existing identifer
     * Creates an ownership identifier for a domain or updates identifier details for an existing identifer
     * @param {String} resourceGroupName Name of the resource group to which the resource belongs.
     * @param {String} domainName Name of domain.
     * @param {String} name Name of identifier.
     * @param {String} subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API Version
     * @param {module:model/DomainOwnershipIdentifier} domainOwnershipIdentifier A JSON representation of the domain ownership properties.
     * @param {module:api/DomainsApi~domainsUpdateOwnershipIdentifierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainOwnershipIdentifier}
     */
    domainsUpdateOwnershipIdentifier(resourceGroupName, domainName, name, subscriptionId, apiVersion, domainOwnershipIdentifier, callback) {
      let postBody = domainOwnershipIdentifier;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainsUpdateOwnershipIdentifier");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling domainsUpdateOwnershipIdentifier");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling domainsUpdateOwnershipIdentifier");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainsUpdateOwnershipIdentifier");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainsUpdateOwnershipIdentifier");
      }
      // verify the required parameter 'domainOwnershipIdentifier' is set
      if (domainOwnershipIdentifier === undefined || domainOwnershipIdentifier === null) {
        throw new Error("Missing the required parameter 'domainOwnershipIdentifier' when calling domainsUpdateOwnershipIdentifier");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'domainName': domainName,
        'name': name,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DomainOwnershipIdentifier;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
