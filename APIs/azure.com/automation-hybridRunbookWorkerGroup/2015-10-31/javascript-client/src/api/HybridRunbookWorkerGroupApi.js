/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HybridRunbookWorkerGroup from '../model/HybridRunbookWorkerGroup';
import HybridRunbookWorkerGroupListByAutomationAccountDefaultResponse from '../model/HybridRunbookWorkerGroupListByAutomationAccountDefaultResponse';
import HybridRunbookWorkerGroupUpdateParameters from '../model/HybridRunbookWorkerGroupUpdateParameters';
import HybridRunbookWorkerGroupsListResult from '../model/HybridRunbookWorkerGroupsListResult';

/**
* HybridRunbookWorkerGroup service.
* @module api/HybridRunbookWorkerGroupApi
* @version 2015-10-31
*/
export default class HybridRunbookWorkerGroupApi {

    /**
    * Constructs a new HybridRunbookWorkerGroupApi. 
    * @alias module:api/HybridRunbookWorkerGroupApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the hybridRunbookWorkerGroupDelete operation.
     * @callback module:api/HybridRunbookWorkerGroupApi~hybridRunbookWorkerGroupDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a hybrid runbook worker group.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} hybridRunbookWorkerGroupName The hybrid runbook worker group name
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/HybridRunbookWorkerGroupApi~hybridRunbookWorkerGroupDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    hybridRunbookWorkerGroupDelete(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling hybridRunbookWorkerGroupDelete");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling hybridRunbookWorkerGroupDelete");
      }
      // verify the required parameter 'hybridRunbookWorkerGroupName' is set
      if (hybridRunbookWorkerGroupName === undefined || hybridRunbookWorkerGroupName === null) {
        throw new Error("Missing the required parameter 'hybridRunbookWorkerGroupName' when calling hybridRunbookWorkerGroupDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling hybridRunbookWorkerGroupDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling hybridRunbookWorkerGroupDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'hybridRunbookWorkerGroupName': hybridRunbookWorkerGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the hybridRunbookWorkerGroupGet operation.
     * @callback module:api/HybridRunbookWorkerGroupApi~hybridRunbookWorkerGroupGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HybridRunbookWorkerGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a hybrid runbook worker group.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} hybridRunbookWorkerGroupName The hybrid runbook worker group name
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/HybridRunbookWorkerGroupApi~hybridRunbookWorkerGroupGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HybridRunbookWorkerGroup}
     */
    hybridRunbookWorkerGroupGet(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling hybridRunbookWorkerGroupGet");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling hybridRunbookWorkerGroupGet");
      }
      // verify the required parameter 'hybridRunbookWorkerGroupName' is set
      if (hybridRunbookWorkerGroupName === undefined || hybridRunbookWorkerGroupName === null) {
        throw new Error("Missing the required parameter 'hybridRunbookWorkerGroupName' when calling hybridRunbookWorkerGroupGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling hybridRunbookWorkerGroupGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling hybridRunbookWorkerGroupGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'hybridRunbookWorkerGroupName': hybridRunbookWorkerGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = HybridRunbookWorkerGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the hybridRunbookWorkerGroupListByAutomationAccount operation.
     * @callback module:api/HybridRunbookWorkerGroupApi~hybridRunbookWorkerGroupListByAutomationAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HybridRunbookWorkerGroupsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of hybrid runbook worker groups.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] The filter to apply on the operation.
     * @param {module:api/HybridRunbookWorkerGroupApi~hybridRunbookWorkerGroupListByAutomationAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HybridRunbookWorkerGroupsListResult}
     */
    hybridRunbookWorkerGroupListByAutomationAccount(resourceGroupName, automationAccountName, subscriptionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling hybridRunbookWorkerGroupListByAutomationAccount");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling hybridRunbookWorkerGroupListByAutomationAccount");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling hybridRunbookWorkerGroupListByAutomationAccount");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling hybridRunbookWorkerGroupListByAutomationAccount");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$filter': opts['filter'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = HybridRunbookWorkerGroupsListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the hybridRunbookWorkerGroupUpdate operation.
     * @callback module:api/HybridRunbookWorkerGroupApi~hybridRunbookWorkerGroupUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HybridRunbookWorkerGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a hybrid runbook worker group.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} hybridRunbookWorkerGroupName The hybrid runbook worker group name
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/HybridRunbookWorkerGroupUpdateParameters} parameters The hybrid runbook worker group
     * @param {module:api/HybridRunbookWorkerGroupApi~hybridRunbookWorkerGroupUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HybridRunbookWorkerGroup}
     */
    hybridRunbookWorkerGroupUpdate(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, subscriptionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling hybridRunbookWorkerGroupUpdate");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling hybridRunbookWorkerGroupUpdate");
      }
      // verify the required parameter 'hybridRunbookWorkerGroupName' is set
      if (hybridRunbookWorkerGroupName === undefined || hybridRunbookWorkerGroupName === null) {
        throw new Error("Missing the required parameter 'hybridRunbookWorkerGroupName' when calling hybridRunbookWorkerGroupUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling hybridRunbookWorkerGroupUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling hybridRunbookWorkerGroupUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling hybridRunbookWorkerGroupUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'hybridRunbookWorkerGroupName': hybridRunbookWorkerGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = HybridRunbookWorkerGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
