/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HybridRunbookWorker from './HybridRunbookWorker';
import RunAsCredentialAssociationProperty from './RunAsCredentialAssociationProperty';

/**
 * The HybridRunbookWorkerGroup model module.
 * @module model/HybridRunbookWorkerGroup
 * @version 2015-10-31
 */
class HybridRunbookWorkerGroup {
    /**
     * Constructs a new <code>HybridRunbookWorkerGroup</code>.
     * Definition of hybrid runbook worker group.
     * @alias module:model/HybridRunbookWorkerGroup
     */
    constructor() { 
        
        HybridRunbookWorkerGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HybridRunbookWorkerGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HybridRunbookWorkerGroup} obj Optional instance to populate.
     * @return {module:model/HybridRunbookWorkerGroup} The populated <code>HybridRunbookWorkerGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HybridRunbookWorkerGroup();

            if (data.hasOwnProperty('credential')) {
                obj['credential'] = RunAsCredentialAssociationProperty.constructFromObject(data['credential']);
            }
            if (data.hasOwnProperty('groupType')) {
                obj['groupType'] = ApiClient.convertToType(data['groupType'], 'String');
            }
            if (data.hasOwnProperty('hybridRunbookWorkers')) {
                obj['hybridRunbookWorkers'] = ApiClient.convertToType(data['hybridRunbookWorkers'], [HybridRunbookWorker]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HybridRunbookWorkerGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HybridRunbookWorkerGroup</code>.
     */
    static validateJSON(data) {
        // validate the optional field `credential`
        if (data['credential']) { // data not null
          RunAsCredentialAssociationProperty.validateJSON(data['credential']);
        }
        // ensure the json data is a string
        if (data['groupType'] && !(typeof data['groupType'] === 'string' || data['groupType'] instanceof String)) {
            throw new Error("Expected the field `groupType` to be a primitive type in the JSON string but got " + data['groupType']);
        }
        if (data['hybridRunbookWorkers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['hybridRunbookWorkers'])) {
                throw new Error("Expected the field `hybridRunbookWorkers` to be an array in the JSON data but got " + data['hybridRunbookWorkers']);
            }
            // validate the optional field `hybridRunbookWorkers` (array)
            for (const item of data['hybridRunbookWorkers']) {
                HybridRunbookWorker.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/RunAsCredentialAssociationProperty} credential
 */
HybridRunbookWorkerGroup.prototype['credential'] = undefined;

/**
 * Type of the HybridWorkerGroup.
 * @member {module:model/HybridRunbookWorkerGroup.GroupTypeEnum} groupType
 */
HybridRunbookWorkerGroup.prototype['groupType'] = undefined;

/**
 * Gets or sets the list of hybrid runbook workers.
 * @member {Array.<module:model/HybridRunbookWorker>} hybridRunbookWorkers
 */
HybridRunbookWorkerGroup.prototype['hybridRunbookWorkers'] = undefined;

/**
 * Gets or sets the id of the resource.
 * @member {String} id
 */
HybridRunbookWorkerGroup.prototype['id'] = undefined;

/**
 * Gets or sets the name of the group.
 * @member {String} name
 */
HybridRunbookWorkerGroup.prototype['name'] = undefined;





/**
 * Allowed values for the <code>groupType</code> property.
 * @enum {String}
 * @readonly
 */
HybridRunbookWorkerGroup['GroupTypeEnum'] = {

    /**
     * value: "User"
     * @const
     */
    "User": "User",

    /**
     * value: "System"
     * @const
     */
    "System": "System"
};



export default HybridRunbookWorkerGroup;

