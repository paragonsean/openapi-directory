/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHybridRunbookWorkerGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHybridRunbookWorkerGroup::OAIHybridRunbookWorkerGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHybridRunbookWorkerGroup::OAIHybridRunbookWorkerGroup() {
    this->initializeModel();
}

OAIHybridRunbookWorkerGroup::~OAIHybridRunbookWorkerGroup() {}

void OAIHybridRunbookWorkerGroup::initializeModel() {

    m_credential_isSet = false;
    m_credential_isValid = false;

    m_group_type_isSet = false;
    m_group_type_isValid = false;

    m_hybrid_runbook_workers_isSet = false;
    m_hybrid_runbook_workers_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIHybridRunbookWorkerGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHybridRunbookWorkerGroup::fromJsonObject(QJsonObject json) {

    m_credential_isValid = ::OpenAPI::fromJsonValue(m_credential, json[QString("credential")]);
    m_credential_isSet = !json[QString("credential")].isNull() && m_credential_isValid;

    m_group_type_isValid = ::OpenAPI::fromJsonValue(m_group_type, json[QString("groupType")]);
    m_group_type_isSet = !json[QString("groupType")].isNull() && m_group_type_isValid;

    m_hybrid_runbook_workers_isValid = ::OpenAPI::fromJsonValue(m_hybrid_runbook_workers, json[QString("hybridRunbookWorkers")]);
    m_hybrid_runbook_workers_isSet = !json[QString("hybridRunbookWorkers")].isNull() && m_hybrid_runbook_workers_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIHybridRunbookWorkerGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHybridRunbookWorkerGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_credential.isSet()) {
        obj.insert(QString("credential"), ::OpenAPI::toJsonValue(m_credential));
    }
    if (m_group_type_isSet) {
        obj.insert(QString("groupType"), ::OpenAPI::toJsonValue(m_group_type));
    }
    if (m_hybrid_runbook_workers.size() > 0) {
        obj.insert(QString("hybridRunbookWorkers"), ::OpenAPI::toJsonValue(m_hybrid_runbook_workers));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIRunAsCredentialAssociationProperty OAIHybridRunbookWorkerGroup::getCredential() const {
    return m_credential;
}
void OAIHybridRunbookWorkerGroup::setCredential(const OAIRunAsCredentialAssociationProperty &credential) {
    m_credential = credential;
    m_credential_isSet = true;
}

bool OAIHybridRunbookWorkerGroup::is_credential_Set() const{
    return m_credential_isSet;
}

bool OAIHybridRunbookWorkerGroup::is_credential_Valid() const{
    return m_credential_isValid;
}

QString OAIHybridRunbookWorkerGroup::getGroupType() const {
    return m_group_type;
}
void OAIHybridRunbookWorkerGroup::setGroupType(const QString &group_type) {
    m_group_type = group_type;
    m_group_type_isSet = true;
}

bool OAIHybridRunbookWorkerGroup::is_group_type_Set() const{
    return m_group_type_isSet;
}

bool OAIHybridRunbookWorkerGroup::is_group_type_Valid() const{
    return m_group_type_isValid;
}

QList<OAIHybridRunbookWorker> OAIHybridRunbookWorkerGroup::getHybridRunbookWorkers() const {
    return m_hybrid_runbook_workers;
}
void OAIHybridRunbookWorkerGroup::setHybridRunbookWorkers(const QList<OAIHybridRunbookWorker> &hybrid_runbook_workers) {
    m_hybrid_runbook_workers = hybrid_runbook_workers;
    m_hybrid_runbook_workers_isSet = true;
}

bool OAIHybridRunbookWorkerGroup::is_hybrid_runbook_workers_Set() const{
    return m_hybrid_runbook_workers_isSet;
}

bool OAIHybridRunbookWorkerGroup::is_hybrid_runbook_workers_Valid() const{
    return m_hybrid_runbook_workers_isValid;
}

QString OAIHybridRunbookWorkerGroup::getId() const {
    return m_id;
}
void OAIHybridRunbookWorkerGroup::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIHybridRunbookWorkerGroup::is_id_Set() const{
    return m_id_isSet;
}

bool OAIHybridRunbookWorkerGroup::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIHybridRunbookWorkerGroup::getName() const {
    return m_name;
}
void OAIHybridRunbookWorkerGroup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIHybridRunbookWorkerGroup::is_name_Set() const{
    return m_name_isSet;
}

bool OAIHybridRunbookWorkerGroup::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIHybridRunbookWorkerGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_credential.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hybrid_runbook_workers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHybridRunbookWorkerGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
