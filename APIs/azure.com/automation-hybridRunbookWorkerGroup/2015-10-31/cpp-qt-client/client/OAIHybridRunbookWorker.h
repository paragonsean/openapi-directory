/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHybridRunbookWorker.h
 *
 * Definition of hybrid runbook worker.
 */

#ifndef OAIHybridRunbookWorker_H
#define OAIHybridRunbookWorker_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHybridRunbookWorker : public OAIObject {
public:
    OAIHybridRunbookWorker();
    OAIHybridRunbookWorker(QString json);
    ~OAIHybridRunbookWorker() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QDateTime getLastSeenDateTime() const;
    void setLastSeenDateTime(const QDateTime &last_seen_date_time);
    bool is_last_seen_date_time_Set() const;
    bool is_last_seen_date_time_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDateTime getRegistrationTime() const;
    void setRegistrationTime(const QDateTime &registration_time);
    bool is_registration_time_Set() const;
    bool is_registration_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QDateTime m_last_seen_date_time;
    bool m_last_seen_date_time_isSet;
    bool m_last_seen_date_time_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDateTime m_registration_time;
    bool m_registration_time_isSet;
    bool m_registration_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHybridRunbookWorker)

#endif // OAIHybridRunbookWorker_H
