/**
 * portal
 * Allows creation and deletion of Azure Shared Dashboards.
 *
 * The version of the OpenAPI document: 2018-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Dashboard from './model/Dashboard';
import DashboardLens from './model/DashboardLens';
import DashboardListResult from './model/DashboardListResult';
import DashboardParts from './model/DashboardParts';
import DashboardPartsPosition from './model/DashboardPartsPosition';
import DashboardProperties from './model/DashboardProperties';
import ErrorDefinition from './model/ErrorDefinition';
import ErrorResponse from './model/ErrorResponse';
import PatchableDashboard from './model/PatchableDashboard';
import ResourceProviderOperation from './model/ResourceProviderOperation';
import ResourceProviderOperationDisplay from './model/ResourceProviderOperationDisplay';
import ResourceProviderOperationList from './model/ResourceProviderOperationList';
import DashboardApi from './api/DashboardApi';
import OperationsApi from './api/OperationsApi';


/**
* Allows creation and deletion of Azure Shared Dashboards..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Portal = require('index'); // See note below*.
* var xxxSvc = new Portal.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Portal.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Portal.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Portal.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-10-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Dashboard model constructor.
     * @property {module:model/Dashboard}
     */
    Dashboard,

    /**
     * The DashboardLens model constructor.
     * @property {module:model/DashboardLens}
     */
    DashboardLens,

    /**
     * The DashboardListResult model constructor.
     * @property {module:model/DashboardListResult}
     */
    DashboardListResult,

    /**
     * The DashboardParts model constructor.
     * @property {module:model/DashboardParts}
     */
    DashboardParts,

    /**
     * The DashboardPartsPosition model constructor.
     * @property {module:model/DashboardPartsPosition}
     */
    DashboardPartsPosition,

    /**
     * The DashboardProperties model constructor.
     * @property {module:model/DashboardProperties}
     */
    DashboardProperties,

    /**
     * The ErrorDefinition model constructor.
     * @property {module:model/ErrorDefinition}
     */
    ErrorDefinition,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The PatchableDashboard model constructor.
     * @property {module:model/PatchableDashboard}
     */
    PatchableDashboard,

    /**
     * The ResourceProviderOperation model constructor.
     * @property {module:model/ResourceProviderOperation}
     */
    ResourceProviderOperation,

    /**
     * The ResourceProviderOperationDisplay model constructor.
     * @property {module:model/ResourceProviderOperationDisplay}
     */
    ResourceProviderOperationDisplay,

    /**
     * The ResourceProviderOperationList model constructor.
     * @property {module:model/ResourceProviderOperationList}
     */
    ResourceProviderOperationList,

    /**
    * The DashboardApi service constructor.
    * @property {module:api/DashboardApi}
    */
    DashboardApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi
};
