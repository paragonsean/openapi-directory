/*
 * portal
 * Allows creation and deletion of Azure Shared Dashboards.
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Dashboard;
import org.openapitools.client.model.DashboardListResult;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.PatchableDashboard;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DashboardApi
 */
@Disabled
public class DashboardApiTest {

    private final DashboardApi api = new DashboardApi();

    /**
     * Creates or updates a Dashboard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dashboardsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String dashboardName = null;
        String apiVersion = null;
        Dashboard dashboard = null;
        Dashboard response = api.dashboardsCreateOrUpdate(subscriptionId, resourceGroupName, dashboardName, apiVersion, dashboard);
        // TODO: test validations
    }

    /**
     * Deletes the Dashboard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dashboardsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String dashboardName = null;
        String apiVersion = null;
        api.dashboardsDelete(subscriptionId, resourceGroupName, dashboardName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the Dashboard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dashboardsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String dashboardName = null;
        String apiVersion = null;
        Dashboard response = api.dashboardsGet(subscriptionId, resourceGroupName, dashboardName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all the Dashboards within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dashboardsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        DashboardListResult response = api.dashboardsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all the dashboards within a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dashboardsListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        DashboardListResult response = api.dashboardsListBySubscription(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates an existing Dashboard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dashboardsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String dashboardName = null;
        String apiVersion = null;
        PatchableDashboard dashboard = null;
        Dashboard response = api.dashboardsUpdate(subscriptionId, resourceGroupName, dashboardName, apiVersion, dashboard);
        // TODO: test validations
    }

}
