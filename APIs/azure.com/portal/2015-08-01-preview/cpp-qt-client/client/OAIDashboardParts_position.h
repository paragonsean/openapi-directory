/**
 * portal
 * Allows creation and deletion of Azure Shared Dashboards.
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDashboardParts_position.h
 *
 * The dashboard&#39;s part position.
 */

#ifndef OAIDashboardParts_position_H
#define OAIDashboardParts_position_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDashboardParts_position : public OAIObject {
public:
    OAIDashboardParts_position();
    OAIDashboardParts_position(QString json);
    ~OAIDashboardParts_position() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getColSpan() const;
    void setColSpan(const double &col_span);
    bool is_col_span_Set() const;
    bool is_col_span_Valid() const;

    QMap<QString, OAIObject> getMetadata() const;
    void setMetadata(const QMap<QString, OAIObject> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    double getRowSpan() const;
    void setRowSpan(const double &row_span);
    bool is_row_span_Set() const;
    bool is_row_span_Valid() const;

    double getX() const;
    void setX(const double &x);
    bool is_x_Set() const;
    bool is_x_Valid() const;

    double getY() const;
    void setY(const double &y);
    bool is_y_Set() const;
    bool is_y_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_col_span;
    bool m_col_span_isSet;
    bool m_col_span_isValid;

    QMap<QString, OAIObject> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    double m_row_span;
    bool m_row_span_isSet;
    bool m_row_span_isValid;

    double m_x;
    bool m_x_isSet;
    bool m_x_isValid;

    double m_y;
    bool m_y_isSet;
    bool m_y_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDashboardParts_position)

#endif // OAIDashboardParts_position_H
