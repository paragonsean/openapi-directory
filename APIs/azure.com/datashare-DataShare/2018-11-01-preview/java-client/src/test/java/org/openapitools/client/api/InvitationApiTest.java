/*
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataShareError;
import org.openapitools.client.model.Invitation;
import org.openapitools.client.model.InvitationList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InvitationApi
 */
@Disabled
public class InvitationApiTest {

    private final InvitationApi api = new InvitationApi();

    /**
     * Sends a new invitation to a recipient to access a share.
     *
     * Create an invitation 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invitationsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String invitationName = null;
        String apiVersion = null;
        Invitation invitation = null;
        Invitation response = api.invitationsCreate(subscriptionId, resourceGroupName, accountName, shareName, invitationName, apiVersion, invitation);
        // TODO: test validations
    }

    /**
     * Delete Invitation in a share.
     *
     * Delete an invitation in a share
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invitationsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String invitationName = null;
        String apiVersion = null;
        api.invitationsDelete(subscriptionId, resourceGroupName, accountName, shareName, invitationName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get Invitation in a share.
     *
     * Get an invitation in a share
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invitationsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String invitationName = null;
        String apiVersion = null;
        Invitation response = api.invitationsGet(subscriptionId, resourceGroupName, accountName, shareName, invitationName, apiVersion);
        // TODO: test validations
    }

    /**
     * List all Invitations in a share.
     *
     * List invitations in a share
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invitationsListByShareTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String apiVersion = null;
        String $skipToken = null;
        InvitationList response = api.invitationsListByShare(subscriptionId, resourceGroupName, accountName, shareName, apiVersion, $skipToken);
        // TODO: test validations
    }

}
