/*
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataShareError;
import org.openapitools.client.model.OperationResponse;
import org.openapitools.client.model.Trigger;
import org.openapitools.client.model.TriggerList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TriggerApi
 */
@Disabled
public class TriggerApiTest {

    private final TriggerApi api = new TriggerApi();

    /**
     * This method creates a trigger for a share subscription
     *
     * Create a Trigger 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void triggersCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareSubscriptionName = null;
        String triggerName = null;
        String apiVersion = null;
        Trigger trigger = null;
        Trigger response = api.triggersCreate(subscriptionId, resourceGroupName, accountName, shareSubscriptionName, triggerName, apiVersion, trigger);
        // TODO: test validations
    }

    /**
     * Delete Trigger in a shareSubscription.
     *
     * Delete a Trigger in a shareSubscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void triggersDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareSubscriptionName = null;
        String triggerName = null;
        String apiVersion = null;
        OperationResponse response = api.triggersDelete(subscriptionId, resourceGroupName, accountName, shareSubscriptionName, triggerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get Trigger in a shareSubscription.
     *
     * Get a Trigger in a shareSubscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void triggersGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareSubscriptionName = null;
        String triggerName = null;
        String apiVersion = null;
        Trigger response = api.triggersGet(subscriptionId, resourceGroupName, accountName, shareSubscriptionName, triggerName, apiVersion);
        // TODO: test validations
    }

    /**
     * List Triggers in a share subscription.
     *
     * List Triggers in a share subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void triggersListByShareSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareSubscriptionName = null;
        String apiVersion = null;
        String $skipToken = null;
        TriggerList response = api.triggersListByShareSubscription(subscriptionId, resourceGroupName, accountName, shareSubscriptionName, apiVersion, $skipToken);
        // TODO: test validations
    }

}
