/*
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataSetMapping;
import org.openapitools.client.model.DataSetMappingList;
import org.openapitools.client.model.DataShareError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataSetMappingApi
 */
@Disabled
public class DataSetMappingApiTest {

    private final DataSetMappingApi api = new DataSetMappingApi();

    /**
     * Maps a source data set in the source share to a sink data set in the share subscription.  Enables copying the data set from source to destination.
     *
     * Create a DataSetMapping 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataSetMappingsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareSubscriptionName = null;
        String dataSetMappingName = null;
        String apiVersion = null;
        DataSetMapping dataSetMapping = null;
        DataSetMapping response = api.dataSetMappingsCreate(subscriptionId, resourceGroupName, accountName, shareSubscriptionName, dataSetMappingName, apiVersion, dataSetMapping);
        // TODO: test validations
    }

    /**
     * Delete DataSetMapping in a shareSubscription.
     *
     * Delete a DataSetMapping in a shareSubscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataSetMappingsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareSubscriptionName = null;
        String dataSetMappingName = null;
        String apiVersion = null;
        api.dataSetMappingsDelete(subscriptionId, resourceGroupName, accountName, shareSubscriptionName, dataSetMappingName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get DataSetMapping in a shareSubscription.
     *
     * Get a DataSetMapping in a shareSubscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataSetMappingsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareSubscriptionName = null;
        String dataSetMappingName = null;
        String apiVersion = null;
        DataSetMapping response = api.dataSetMappingsGet(subscriptionId, resourceGroupName, accountName, shareSubscriptionName, dataSetMappingName, apiVersion);
        // TODO: test validations
    }

    /**
     * List DataSetMappings in a share subscription.
     *
     * List DataSetMappings in a share subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataSetMappingsListByShareSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareSubscriptionName = null;
        String apiVersion = null;
        String $skipToken = null;
        DataSetMappingList response = api.dataSetMappingsListByShareSubscription(subscriptionId, resourceGroupName, accountName, shareSubscriptionName, apiVersion, $skipToken);
        // TODO: test validations
    }

}
