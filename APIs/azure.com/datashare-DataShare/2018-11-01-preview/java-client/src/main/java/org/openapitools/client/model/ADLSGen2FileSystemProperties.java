/*
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Properties of the ADLS Gen2 file system data set.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:37:06.041141-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ADLSGen2FileSystemProperties {
  public static final String SERIALIZED_NAME_DATA_SET_ID = "dataSetId";
  @SerializedName(SERIALIZED_NAME_DATA_SET_ID)
  private String dataSetId;

  public static final String SERIALIZED_NAME_FILE_SYSTEM = "fileSystem";
  @SerializedName(SERIALIZED_NAME_FILE_SYSTEM)
  private String fileSystem;

  public static final String SERIALIZED_NAME_RESOURCE_GROUP = "resourceGroup";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GROUP)
  private String resourceGroup;

  public static final String SERIALIZED_NAME_STORAGE_ACCOUNT_NAME = "storageAccountName";
  @SerializedName(SERIALIZED_NAME_STORAGE_ACCOUNT_NAME)
  private String storageAccountName;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_ID = "subscriptionId";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_ID)
  private String subscriptionId;

  public ADLSGen2FileSystemProperties() {
  }

  public ADLSGen2FileSystemProperties(
     String dataSetId
  ) {
    this();
    this.dataSetId = dataSetId;
  }

  /**
   * Unique id for identifying a data set resource
   * @return dataSetId
   */
  @javax.annotation.Nullable
  public String getDataSetId() {
    return dataSetId;
  }



  public ADLSGen2FileSystemProperties fileSystem(String fileSystem) {
    this.fileSystem = fileSystem;
    return this;
  }

  /**
   * The file system name.
   * @return fileSystem
   */
  @javax.annotation.Nonnull
  public String getFileSystem() {
    return fileSystem;
  }

  public void setFileSystem(String fileSystem) {
    this.fileSystem = fileSystem;
  }


  public ADLSGen2FileSystemProperties resourceGroup(String resourceGroup) {
    this.resourceGroup = resourceGroup;
    return this;
  }

  /**
   * Resource group of storage account
   * @return resourceGroup
   */
  @javax.annotation.Nonnull
  public String getResourceGroup() {
    return resourceGroup;
  }

  public void setResourceGroup(String resourceGroup) {
    this.resourceGroup = resourceGroup;
  }


  public ADLSGen2FileSystemProperties storageAccountName(String storageAccountName) {
    this.storageAccountName = storageAccountName;
    return this;
  }

  /**
   * Storage account name of the source data set
   * @return storageAccountName
   */
  @javax.annotation.Nonnull
  public String getStorageAccountName() {
    return storageAccountName;
  }

  public void setStorageAccountName(String storageAccountName) {
    this.storageAccountName = storageAccountName;
  }


  public ADLSGen2FileSystemProperties subscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

  /**
   * Subscription id of storage account
   * @return subscriptionId
   */
  @javax.annotation.Nonnull
  public String getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ADLSGen2FileSystemProperties adLSGen2FileSystemProperties = (ADLSGen2FileSystemProperties) o;
    return Objects.equals(this.dataSetId, adLSGen2FileSystemProperties.dataSetId) &&
        Objects.equals(this.fileSystem, adLSGen2FileSystemProperties.fileSystem) &&
        Objects.equals(this.resourceGroup, adLSGen2FileSystemProperties.resourceGroup) &&
        Objects.equals(this.storageAccountName, adLSGen2FileSystemProperties.storageAccountName) &&
        Objects.equals(this.subscriptionId, adLSGen2FileSystemProperties.subscriptionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataSetId, fileSystem, resourceGroup, storageAccountName, subscriptionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ADLSGen2FileSystemProperties {\n");
    sb.append("    dataSetId: ").append(toIndentedString(dataSetId)).append("\n");
    sb.append("    fileSystem: ").append(toIndentedString(fileSystem)).append("\n");
    sb.append("    resourceGroup: ").append(toIndentedString(resourceGroup)).append("\n");
    sb.append("    storageAccountName: ").append(toIndentedString(storageAccountName)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataSetId");
    openapiFields.add("fileSystem");
    openapiFields.add("resourceGroup");
    openapiFields.add("storageAccountName");
    openapiFields.add("subscriptionId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fileSystem");
    openapiRequiredFields.add("resourceGroup");
    openapiRequiredFields.add("storageAccountName");
    openapiRequiredFields.add("subscriptionId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ADLSGen2FileSystemProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ADLSGen2FileSystemProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ADLSGen2FileSystemProperties is not found in the empty JSON string", ADLSGen2FileSystemProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ADLSGen2FileSystemProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ADLSGen2FileSystemProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ADLSGen2FileSystemProperties.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dataSetId") != null && !jsonObj.get("dataSetId").isJsonNull()) && !jsonObj.get("dataSetId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataSetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataSetId").toString()));
      }
      if (!jsonObj.get("fileSystem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fileSystem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fileSystem").toString()));
      }
      if (!jsonObj.get("resourceGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceGroup").toString()));
      }
      if (!jsonObj.get("storageAccountName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storageAccountName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storageAccountName").toString()));
      }
      if (!jsonObj.get("subscriptionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptionId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ADLSGen2FileSystemProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ADLSGen2FileSystemProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ADLSGen2FileSystemProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ADLSGen2FileSystemProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ADLSGen2FileSystemProperties>() {
           @Override
           public void write(JsonWriter out, ADLSGen2FileSystemProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ADLSGen2FileSystemProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ADLSGen2FileSystemProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ADLSGen2FileSystemProperties
   * @throws IOException if the JSON string is invalid with respect to ADLSGen2FileSystemProperties
   */
  public static ADLSGen2FileSystemProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ADLSGen2FileSystemProperties.class);
  }

  /**
   * Convert an instance of ADLSGen2FileSystemProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

