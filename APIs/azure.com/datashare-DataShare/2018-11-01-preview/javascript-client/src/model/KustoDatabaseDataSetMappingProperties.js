/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The KustoDatabaseDataSetMappingProperties model module.
 * @module model/KustoDatabaseDataSetMappingProperties
 * @version 2018-11-01-preview
 */
class KustoDatabaseDataSetMappingProperties {
    /**
     * Constructs a new <code>KustoDatabaseDataSetMappingProperties</code>.
     * Properties of the Kusto database data set mapping
     * @alias module:model/KustoDatabaseDataSetMappingProperties
     * @param dataSetId {String} The id of the source data set.
     * @param kustoClusterResourceId {String} Resource id of the sink kusto cluster.
     */
    constructor(dataSetId, kustoClusterResourceId) { 
        
        KustoDatabaseDataSetMappingProperties.initialize(this, dataSetId, kustoClusterResourceId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dataSetId, kustoClusterResourceId) { 
        obj['dataSetId'] = dataSetId;
        obj['kustoClusterResourceId'] = kustoClusterResourceId;
    }

    /**
     * Constructs a <code>KustoDatabaseDataSetMappingProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KustoDatabaseDataSetMappingProperties} obj Optional instance to populate.
     * @return {module:model/KustoDatabaseDataSetMappingProperties} The populated <code>KustoDatabaseDataSetMappingProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KustoDatabaseDataSetMappingProperties();

            if (data.hasOwnProperty('dataSetId')) {
                obj['dataSetId'] = ApiClient.convertToType(data['dataSetId'], 'String');
            }
            if (data.hasOwnProperty('dataSetMappingStatus')) {
                obj['dataSetMappingStatus'] = ApiClient.convertToType(data['dataSetMappingStatus'], 'String');
            }
            if (data.hasOwnProperty('kustoClusterResourceId')) {
                obj['kustoClusterResourceId'] = ApiClient.convertToType(data['kustoClusterResourceId'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KustoDatabaseDataSetMappingProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KustoDatabaseDataSetMappingProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of KustoDatabaseDataSetMappingProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dataSetId'] && !(typeof data['dataSetId'] === 'string' || data['dataSetId'] instanceof String)) {
            throw new Error("Expected the field `dataSetId` to be a primitive type in the JSON string but got " + data['dataSetId']);
        }
        // ensure the json data is a string
        if (data['dataSetMappingStatus'] && !(typeof data['dataSetMappingStatus'] === 'string' || data['dataSetMappingStatus'] instanceof String)) {
            throw new Error("Expected the field `dataSetMappingStatus` to be a primitive type in the JSON string but got " + data['dataSetMappingStatus']);
        }
        // ensure the json data is a string
        if (data['kustoClusterResourceId'] && !(typeof data['kustoClusterResourceId'] === 'string' || data['kustoClusterResourceId'] instanceof String)) {
            throw new Error("Expected the field `kustoClusterResourceId` to be a primitive type in the JSON string but got " + data['kustoClusterResourceId']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}

KustoDatabaseDataSetMappingProperties.RequiredProperties = ["dataSetId", "kustoClusterResourceId"];

/**
 * The id of the source data set.
 * @member {String} dataSetId
 */
KustoDatabaseDataSetMappingProperties.prototype['dataSetId'] = undefined;

/**
 * Gets the status of the data set mapping.
 * @member {module:model/KustoDatabaseDataSetMappingProperties.DataSetMappingStatusEnum} dataSetMappingStatus
 */
KustoDatabaseDataSetMappingProperties.prototype['dataSetMappingStatus'] = undefined;

/**
 * Resource id of the sink kusto cluster.
 * @member {String} kustoClusterResourceId
 */
KustoDatabaseDataSetMappingProperties.prototype['kustoClusterResourceId'] = undefined;

/**
 * Location of the sink kusto cluster.
 * @member {String} location
 */
KustoDatabaseDataSetMappingProperties.prototype['location'] = undefined;

/**
 * Provisioning state of the data set mapping.
 * @member {module:model/KustoDatabaseDataSetMappingProperties.ProvisioningStateEnum} provisioningState
 */
KustoDatabaseDataSetMappingProperties.prototype['provisioningState'] = undefined;





/**
 * Allowed values for the <code>dataSetMappingStatus</code> property.
 * @enum {String}
 * @readonly
 */
KustoDatabaseDataSetMappingProperties['DataSetMappingStatusEnum'] = {

    /**
     * value: "Ok"
     * @const
     */
    "Ok": "Ok",

    /**
     * value: "Broken"
     * @const
     */
    "Broken": "Broken"
};


/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
KustoDatabaseDataSetMappingProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Moving"
     * @const
     */
    "Moving": "Moving",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed"
};



export default KustoDatabaseDataSetMappingProperties;

