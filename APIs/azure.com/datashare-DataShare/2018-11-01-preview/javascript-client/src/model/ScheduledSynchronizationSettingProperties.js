/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScheduledSynchronizationSettingProperties model module.
 * @module model/ScheduledSynchronizationSettingProperties
 * @version 2018-11-01-preview
 */
class ScheduledSynchronizationSettingProperties {
    /**
     * Constructs a new <code>ScheduledSynchronizationSettingProperties</code>.
     * A Scheduled synchronization setting data transfer object.
     * @alias module:model/ScheduledSynchronizationSettingProperties
     * @param recurrenceInterval {module:model/ScheduledSynchronizationSettingProperties.RecurrenceIntervalEnum} Recurrence Interval
     * @param synchronizationTime {Date} Synchronization time
     */
    constructor(recurrenceInterval, synchronizationTime) { 
        
        ScheduledSynchronizationSettingProperties.initialize(this, recurrenceInterval, synchronizationTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, recurrenceInterval, synchronizationTime) { 
        obj['recurrenceInterval'] = recurrenceInterval;
        obj['synchronizationTime'] = synchronizationTime;
    }

    /**
     * Constructs a <code>ScheduledSynchronizationSettingProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduledSynchronizationSettingProperties} obj Optional instance to populate.
     * @return {module:model/ScheduledSynchronizationSettingProperties} The populated <code>ScheduledSynchronizationSettingProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScheduledSynchronizationSettingProperties();

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('recurrenceInterval')) {
                obj['recurrenceInterval'] = ApiClient.convertToType(data['recurrenceInterval'], 'String');
            }
            if (data.hasOwnProperty('synchronizationTime')) {
                obj['synchronizationTime'] = ApiClient.convertToType(data['synchronizationTime'], 'Date');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScheduledSynchronizationSettingProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScheduledSynchronizationSettingProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ScheduledSynchronizationSettingProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['recurrenceInterval'] && !(typeof data['recurrenceInterval'] === 'string' || data['recurrenceInterval'] instanceof String)) {
            throw new Error("Expected the field `recurrenceInterval` to be a primitive type in the JSON string but got " + data['recurrenceInterval']);
        }
        // ensure the json data is a string
        if (data['userName'] && !(typeof data['userName'] === 'string' || data['userName'] instanceof String)) {
            throw new Error("Expected the field `userName` to be a primitive type in the JSON string but got " + data['userName']);
        }

        return true;
    }


}

ScheduledSynchronizationSettingProperties.RequiredProperties = ["recurrenceInterval", "synchronizationTime"];

/**
 * Time at which the synchronization setting was created.
 * @member {Date} createdAt
 */
ScheduledSynchronizationSettingProperties.prototype['createdAt'] = undefined;

/**
 * Gets or sets the provisioning state
 * @member {module:model/ScheduledSynchronizationSettingProperties.ProvisioningStateEnum} provisioningState
 */
ScheduledSynchronizationSettingProperties.prototype['provisioningState'] = undefined;

/**
 * Recurrence Interval
 * @member {module:model/ScheduledSynchronizationSettingProperties.RecurrenceIntervalEnum} recurrenceInterval
 */
ScheduledSynchronizationSettingProperties.prototype['recurrenceInterval'] = undefined;

/**
 * Synchronization time
 * @member {Date} synchronizationTime
 */
ScheduledSynchronizationSettingProperties.prototype['synchronizationTime'] = undefined;

/**
 * Name of the user who created the synchronization setting.
 * @member {String} userName
 */
ScheduledSynchronizationSettingProperties.prototype['userName'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
ScheduledSynchronizationSettingProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Moving"
     * @const
     */
    "Moving": "Moving",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed"
};


/**
 * Allowed values for the <code>recurrenceInterval</code> property.
 * @enum {String}
 * @readonly
 */
ScheduledSynchronizationSettingProperties['RecurrenceIntervalEnum'] = {

    /**
     * value: "Hour"
     * @const
     */
    "Hour": "Hour",

    /**
     * value: "Day"
     * @const
     */
    "Day": "Day"
};



export default ScheduledSynchronizationSettingProperties;

