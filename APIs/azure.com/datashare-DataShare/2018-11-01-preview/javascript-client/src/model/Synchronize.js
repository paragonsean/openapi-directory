/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Synchronize model module.
 * @module model/Synchronize
 * @version 2018-11-01-preview
 */
class Synchronize {
    /**
     * Constructs a new <code>Synchronize</code>.
     * Payload for the synchronizing the data.
     * @alias module:model/Synchronize
     */
    constructor() { 
        
        Synchronize.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Synchronize</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Synchronize} obj Optional instance to populate.
     * @return {module:model/Synchronize} The populated <code>Synchronize</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Synchronize();

            if (data.hasOwnProperty('synchronizationMode')) {
                obj['synchronizationMode'] = ApiClient.convertToType(data['synchronizationMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Synchronize</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Synchronize</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['synchronizationMode'] && !(typeof data['synchronizationMode'] === 'string' || data['synchronizationMode'] instanceof String)) {
            throw new Error("Expected the field `synchronizationMode` to be a primitive type in the JSON string but got " + data['synchronizationMode']);
        }

        return true;
    }


}



/**
 * Mode of synchronization used in triggers and snapshot sync. Incremental by default
 * @member {module:model/Synchronize.SynchronizationModeEnum} synchronizationMode
 */
Synchronize.prototype['synchronizationMode'] = undefined;





/**
 * Allowed values for the <code>synchronizationMode</code> property.
 * @enum {String}
 * @readonly
 */
Synchronize['SynchronizationModeEnum'] = {

    /**
     * value: "Incremental"
     * @const
     */
    "Incremental": "Incremental",

    /**
     * value: "FullSync"
     * @const
     */
    "FullSync": "FullSync"
};



export default Synchronize;

