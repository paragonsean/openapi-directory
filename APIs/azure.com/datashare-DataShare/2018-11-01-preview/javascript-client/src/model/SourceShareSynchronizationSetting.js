/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SourceShareSynchronizationSetting model module.
 * @module model/SourceShareSynchronizationSetting
 * @version 2018-11-01-preview
 */
class SourceShareSynchronizationSetting {
    /**
     * Constructs a new <code>SourceShareSynchronizationSetting</code>.
     * A view of synchronization setting added by the provider
     * @alias module:model/SourceShareSynchronizationSetting
     * @param kind {module:model/SourceShareSynchronizationSetting.KindEnum} Kind of synchronization
     */
    constructor(kind) { 
        
        SourceShareSynchronizationSetting.initialize(this, kind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind) { 
        obj['kind'] = kind;
    }

    /**
     * Constructs a <code>SourceShareSynchronizationSetting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceShareSynchronizationSetting} obj Optional instance to populate.
     * @return {module:model/SourceShareSynchronizationSetting} The populated <code>SourceShareSynchronizationSetting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceShareSynchronizationSetting();

            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceShareSynchronizationSetting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceShareSynchronizationSetting</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SourceShareSynchronizationSetting.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}

SourceShareSynchronizationSetting.RequiredProperties = ["kind"];

/**
 * Kind of synchronization
 * @member {module:model/SourceShareSynchronizationSetting.KindEnum} kind
 */
SourceShareSynchronizationSetting.prototype['kind'] = undefined;





/**
 * Allowed values for the <code>kind</code> property.
 * @enum {String}
 * @readonly
 */
SourceShareSynchronizationSetting['KindEnum'] = {

    /**
     * value: "ScheduleBased"
     * @const
     */
    "ScheduleBased": "ScheduleBased"
};



export default SourceShareSynchronizationSetting;

