/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISqlDBTableDataSetMappingProperties.h
 *
 * Properties of the SQL DB table data set mapping.
 */

#ifndef OAISqlDBTableDataSetMappingProperties_H
#define OAISqlDBTableDataSetMappingProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISqlDBTableDataSetMappingProperties : public OAIObject {
public:
    OAISqlDBTableDataSetMappingProperties();
    OAISqlDBTableDataSetMappingProperties(QString json);
    ~OAISqlDBTableDataSetMappingProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSetId() const;
    void setDataSetId(const QString &data_set_id);
    bool is_data_set_id_Set() const;
    bool is_data_set_id_Valid() const;

    QString getDataSetMappingStatus() const;
    void setDataSetMappingStatus(const QString &data_set_mapping_status);
    bool is_data_set_mapping_status_Set() const;
    bool is_data_set_mapping_status_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getSchemaName() const;
    void setSchemaName(const QString &schema_name);
    bool is_schema_name_Set() const;
    bool is_schema_name_Valid() const;

    QString getSqlServerResourceId() const;
    void setSqlServerResourceId(const QString &sql_server_resource_id);
    bool is_sql_server_resource_id_Set() const;
    bool is_sql_server_resource_id_Valid() const;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_set_id;
    bool m_data_set_id_isSet;
    bool m_data_set_id_isValid;

    QString m_data_set_mapping_status;
    bool m_data_set_mapping_status_isSet;
    bool m_data_set_mapping_status_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_schema_name;
    bool m_schema_name_isSet;
    bool m_schema_name_isValid;

    QString m_sql_server_resource_id;
    bool m_sql_server_resource_id_isSet;
    bool m_sql_server_resource_id_isValid;

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISqlDBTableDataSetMappingProperties)

#endif // OAISqlDBTableDataSetMappingProperties_H
