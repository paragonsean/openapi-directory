/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShareSynchronization.h
 *
 * A ShareSynchronization data transfer object.
 */

#ifndef OAIShareSynchronization_H
#define OAIShareSynchronization_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIShareSynchronization : public OAIObject {
public:
    OAIShareSynchronization();
    OAIShareSynchronization(QString json);
    ~OAIShareSynchronization() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConsumerEmail() const;
    void setConsumerEmail(const QString &consumer_email);
    bool is_consumer_email_Set() const;
    bool is_consumer_email_Valid() const;

    QString getConsumerName() const;
    void setConsumerName(const QString &consumer_name);
    bool is_consumer_name_Set() const;
    bool is_consumer_name_Valid() const;

    QString getConsumerTenantName() const;
    void setConsumerTenantName(const QString &consumer_tenant_name);
    bool is_consumer_tenant_name_Set() const;
    bool is_consumer_tenant_name_Valid() const;

    qint32 getDurationMs() const;
    void setDurationMs(const qint32 &duration_ms);
    bool is_duration_ms_Set() const;
    bool is_duration_ms_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSynchronizationId() const;
    void setSynchronizationId(const QString &synchronization_id);
    bool is_synchronization_id_Set() const;
    bool is_synchronization_id_Valid() const;

    QString getSynchronizationMode() const;
    void setSynchronizationMode(const QString &synchronization_mode);
    bool is_synchronization_mode_Set() const;
    bool is_synchronization_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_consumer_email;
    bool m_consumer_email_isSet;
    bool m_consumer_email_isValid;

    QString m_consumer_name;
    bool m_consumer_name_isSet;
    bool m_consumer_name_isValid;

    QString m_consumer_tenant_name;
    bool m_consumer_tenant_name_isSet;
    bool m_consumer_tenant_name_isValid;

    qint32 m_duration_ms;
    bool m_duration_ms_isSet;
    bool m_duration_ms_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_synchronization_id;
    bool m_synchronization_id_isSet;
    bool m_synchronization_id_isValid;

    QString m_synchronization_mode;
    bool m_synchronization_mode_isSet;
    bool m_synchronization_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShareSynchronization)

#endif // OAIShareSynchronization_H
