/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIADLSGen1FileProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIADLSGen1FileProperties::OAIADLSGen1FileProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIADLSGen1FileProperties::OAIADLSGen1FileProperties() {
    this->initializeModel();
}

OAIADLSGen1FileProperties::~OAIADLSGen1FileProperties() {}

void OAIADLSGen1FileProperties::initializeModel() {

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_data_set_id_isSet = false;
    m_data_set_id_isValid = false;

    m_file_name_isSet = false;
    m_file_name_isValid = false;

    m_folder_path_isSet = false;
    m_folder_path_isValid = false;

    m_resource_group_isSet = false;
    m_resource_group_isValid = false;

    m_subscription_id_isSet = false;
    m_subscription_id_isValid = false;
}

void OAIADLSGen1FileProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIADLSGen1FileProperties::fromJsonObject(QJsonObject json) {

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("accountName")]);
    m_account_name_isSet = !json[QString("accountName")].isNull() && m_account_name_isValid;

    m_data_set_id_isValid = ::OpenAPI::fromJsonValue(m_data_set_id, json[QString("dataSetId")]);
    m_data_set_id_isSet = !json[QString("dataSetId")].isNull() && m_data_set_id_isValid;

    m_file_name_isValid = ::OpenAPI::fromJsonValue(m_file_name, json[QString("fileName")]);
    m_file_name_isSet = !json[QString("fileName")].isNull() && m_file_name_isValid;

    m_folder_path_isValid = ::OpenAPI::fromJsonValue(m_folder_path, json[QString("folderPath")]);
    m_folder_path_isSet = !json[QString("folderPath")].isNull() && m_folder_path_isValid;

    m_resource_group_isValid = ::OpenAPI::fromJsonValue(m_resource_group, json[QString("resourceGroup")]);
    m_resource_group_isSet = !json[QString("resourceGroup")].isNull() && m_resource_group_isValid;

    m_subscription_id_isValid = ::OpenAPI::fromJsonValue(m_subscription_id, json[QString("subscriptionId")]);
    m_subscription_id_isSet = !json[QString("subscriptionId")].isNull() && m_subscription_id_isValid;
}

QString OAIADLSGen1FileProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIADLSGen1FileProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_account_name_isSet) {
        obj.insert(QString("accountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_data_set_id_isSet) {
        obj.insert(QString("dataSetId"), ::OpenAPI::toJsonValue(m_data_set_id));
    }
    if (m_file_name_isSet) {
        obj.insert(QString("fileName"), ::OpenAPI::toJsonValue(m_file_name));
    }
    if (m_folder_path_isSet) {
        obj.insert(QString("folderPath"), ::OpenAPI::toJsonValue(m_folder_path));
    }
    if (m_resource_group_isSet) {
        obj.insert(QString("resourceGroup"), ::OpenAPI::toJsonValue(m_resource_group));
    }
    if (m_subscription_id_isSet) {
        obj.insert(QString("subscriptionId"), ::OpenAPI::toJsonValue(m_subscription_id));
    }
    return obj;
}

QString OAIADLSGen1FileProperties::getAccountName() const {
    return m_account_name;
}
void OAIADLSGen1FileProperties::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIADLSGen1FileProperties::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIADLSGen1FileProperties::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAIADLSGen1FileProperties::getDataSetId() const {
    return m_data_set_id;
}
void OAIADLSGen1FileProperties::setDataSetId(const QString &data_set_id) {
    m_data_set_id = data_set_id;
    m_data_set_id_isSet = true;
}

bool OAIADLSGen1FileProperties::is_data_set_id_Set() const{
    return m_data_set_id_isSet;
}

bool OAIADLSGen1FileProperties::is_data_set_id_Valid() const{
    return m_data_set_id_isValid;
}

QString OAIADLSGen1FileProperties::getFileName() const {
    return m_file_name;
}
void OAIADLSGen1FileProperties::setFileName(const QString &file_name) {
    m_file_name = file_name;
    m_file_name_isSet = true;
}

bool OAIADLSGen1FileProperties::is_file_name_Set() const{
    return m_file_name_isSet;
}

bool OAIADLSGen1FileProperties::is_file_name_Valid() const{
    return m_file_name_isValid;
}

QString OAIADLSGen1FileProperties::getFolderPath() const {
    return m_folder_path;
}
void OAIADLSGen1FileProperties::setFolderPath(const QString &folder_path) {
    m_folder_path = folder_path;
    m_folder_path_isSet = true;
}

bool OAIADLSGen1FileProperties::is_folder_path_Set() const{
    return m_folder_path_isSet;
}

bool OAIADLSGen1FileProperties::is_folder_path_Valid() const{
    return m_folder_path_isValid;
}

QString OAIADLSGen1FileProperties::getResourceGroup() const {
    return m_resource_group;
}
void OAIADLSGen1FileProperties::setResourceGroup(const QString &resource_group) {
    m_resource_group = resource_group;
    m_resource_group_isSet = true;
}

bool OAIADLSGen1FileProperties::is_resource_group_Set() const{
    return m_resource_group_isSet;
}

bool OAIADLSGen1FileProperties::is_resource_group_Valid() const{
    return m_resource_group_isValid;
}

QString OAIADLSGen1FileProperties::getSubscriptionId() const {
    return m_subscription_id;
}
void OAIADLSGen1FileProperties::setSubscriptionId(const QString &subscription_id) {
    m_subscription_id = subscription_id;
    m_subscription_id_isSet = true;
}

bool OAIADLSGen1FileProperties::is_subscription_id_Set() const{
    return m_subscription_id_isSet;
}

bool OAIADLSGen1FileProperties::is_subscription_id_Valid() const{
    return m_subscription_id_isValid;
}

bool OAIADLSGen1FileProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_set_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_folder_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIADLSGen1FileProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_name_isValid && m_file_name_isValid && m_folder_path_isValid && m_resource_group_isValid && m_subscription_id_isValid && true;
}

} // namespace OpenAPI
