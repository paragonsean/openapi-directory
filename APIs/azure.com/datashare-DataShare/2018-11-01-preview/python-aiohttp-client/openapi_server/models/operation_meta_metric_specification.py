# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_properties import DimensionProperties
from openapi_server import util


class OperationMetaMetricSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregation_type: str=None, dimensions: List[DimensionProperties]=None, display_description: str=None, display_name: str=None, enable_regional_mdm_account: str=None, internal_metric_name: str=None, name: str=None, resource_id_dimension_name_override: str=None, supported_aggregation_types: List[str]=None, supported_time_grain_types: List[str]=None, unit: str=None):
        """OperationMetaMetricSpecification - a model defined in OpenAPI

        :param aggregation_type: The aggregation_type of this OperationMetaMetricSpecification.
        :param dimensions: The dimensions of this OperationMetaMetricSpecification.
        :param display_description: The display_description of this OperationMetaMetricSpecification.
        :param display_name: The display_name of this OperationMetaMetricSpecification.
        :param enable_regional_mdm_account: The enable_regional_mdm_account of this OperationMetaMetricSpecification.
        :param internal_metric_name: The internal_metric_name of this OperationMetaMetricSpecification.
        :param name: The name of this OperationMetaMetricSpecification.
        :param resource_id_dimension_name_override: The resource_id_dimension_name_override of this OperationMetaMetricSpecification.
        :param supported_aggregation_types: The supported_aggregation_types of this OperationMetaMetricSpecification.
        :param supported_time_grain_types: The supported_time_grain_types of this OperationMetaMetricSpecification.
        :param unit: The unit of this OperationMetaMetricSpecification.
        """
        self.openapi_types = {
            'aggregation_type': str,
            'dimensions': List[DimensionProperties],
            'display_description': str,
            'display_name': str,
            'enable_regional_mdm_account': str,
            'internal_metric_name': str,
            'name': str,
            'resource_id_dimension_name_override': str,
            'supported_aggregation_types': List[str],
            'supported_time_grain_types': List[str],
            'unit': str
        }

        self.attribute_map = {
            'aggregation_type': 'aggregationType',
            'dimensions': 'dimensions',
            'display_description': 'displayDescription',
            'display_name': 'displayName',
            'enable_regional_mdm_account': 'enableRegionalMdmAccount',
            'internal_metric_name': 'internalMetricName',
            'name': 'name',
            'resource_id_dimension_name_override': 'resourceIdDimensionNameOverride',
            'supported_aggregation_types': 'supportedAggregationTypes',
            'supported_time_grain_types': 'supportedTimeGrainTypes',
            'unit': 'unit'
        }

        self._aggregation_type = aggregation_type
        self._dimensions = dimensions
        self._display_description = display_description
        self._display_name = display_name
        self._enable_regional_mdm_account = enable_regional_mdm_account
        self._internal_metric_name = internal_metric_name
        self._name = name
        self._resource_id_dimension_name_override = resource_id_dimension_name_override
        self._supported_aggregation_types = supported_aggregation_types
        self._supported_time_grain_types = supported_time_grain_types
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OperationMetaMetricSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OperationMetaMetricSpecification of this OperationMetaMetricSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregation_type(self):
        """Gets the aggregation_type of this OperationMetaMetricSpecification.

        aggregation type of metric

        :return: The aggregation_type of this OperationMetaMetricSpecification.
        :rtype: str
        """
        return self._aggregation_type

    @aggregation_type.setter
    def aggregation_type(self, aggregation_type):
        """Sets the aggregation_type of this OperationMetaMetricSpecification.

        aggregation type of metric

        :param aggregation_type: The aggregation_type of this OperationMetaMetricSpecification.
        :type aggregation_type: str
        """

        self._aggregation_type = aggregation_type

    @property
    def dimensions(self):
        """Gets the dimensions of this OperationMetaMetricSpecification.

        properties for dimension

        :return: The dimensions of this OperationMetaMetricSpecification.
        :rtype: List[DimensionProperties]
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this OperationMetaMetricSpecification.

        properties for dimension

        :param dimensions: The dimensions of this OperationMetaMetricSpecification.
        :type dimensions: List[DimensionProperties]
        """

        self._dimensions = dimensions

    @property
    def display_description(self):
        """Gets the display_description of this OperationMetaMetricSpecification.

        description of the metric

        :return: The display_description of this OperationMetaMetricSpecification.
        :rtype: str
        """
        return self._display_description

    @display_description.setter
    def display_description(self, display_description):
        """Sets the display_description of this OperationMetaMetricSpecification.

        description of the metric

        :param display_description: The display_description of this OperationMetaMetricSpecification.
        :type display_description: str
        """

        self._display_description = display_description

    @property
    def display_name(self):
        """Gets the display_name of this OperationMetaMetricSpecification.

        localized name of the metric

        :return: The display_name of this OperationMetaMetricSpecification.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this OperationMetaMetricSpecification.

        localized name of the metric

        :param display_name: The display_name of this OperationMetaMetricSpecification.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def enable_regional_mdm_account(self):
        """Gets the enable_regional_mdm_account of this OperationMetaMetricSpecification.

        enable regional mdm account

        :return: The enable_regional_mdm_account of this OperationMetaMetricSpecification.
        :rtype: str
        """
        return self._enable_regional_mdm_account

    @enable_regional_mdm_account.setter
    def enable_regional_mdm_account(self, enable_regional_mdm_account):
        """Sets the enable_regional_mdm_account of this OperationMetaMetricSpecification.

        enable regional mdm account

        :param enable_regional_mdm_account: The enable_regional_mdm_account of this OperationMetaMetricSpecification.
        :type enable_regional_mdm_account: str
        """

        self._enable_regional_mdm_account = enable_regional_mdm_account

    @property
    def internal_metric_name(self):
        """Gets the internal_metric_name of this OperationMetaMetricSpecification.

        internal metric name

        :return: The internal_metric_name of this OperationMetaMetricSpecification.
        :rtype: str
        """
        return self._internal_metric_name

    @internal_metric_name.setter
    def internal_metric_name(self, internal_metric_name):
        """Sets the internal_metric_name of this OperationMetaMetricSpecification.

        internal metric name

        :param internal_metric_name: The internal_metric_name of this OperationMetaMetricSpecification.
        :type internal_metric_name: str
        """

        self._internal_metric_name = internal_metric_name

    @property
    def name(self):
        """Gets the name of this OperationMetaMetricSpecification.

        name of the metric

        :return: The name of this OperationMetaMetricSpecification.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OperationMetaMetricSpecification.

        name of the metric

        :param name: The name of this OperationMetaMetricSpecification.
        :type name: str
        """

        self._name = name

    @property
    def resource_id_dimension_name_override(self):
        """Gets the resource_id_dimension_name_override of this OperationMetaMetricSpecification.

        dimension name use to replace resource id if specified

        :return: The resource_id_dimension_name_override of this OperationMetaMetricSpecification.
        :rtype: str
        """
        return self._resource_id_dimension_name_override

    @resource_id_dimension_name_override.setter
    def resource_id_dimension_name_override(self, resource_id_dimension_name_override):
        """Sets the resource_id_dimension_name_override of this OperationMetaMetricSpecification.

        dimension name use to replace resource id if specified

        :param resource_id_dimension_name_override: The resource_id_dimension_name_override of this OperationMetaMetricSpecification.
        :type resource_id_dimension_name_override: str
        """

        self._resource_id_dimension_name_override = resource_id_dimension_name_override

    @property
    def supported_aggregation_types(self):
        """Gets the supported_aggregation_types of this OperationMetaMetricSpecification.

        supported aggregation types

        :return: The supported_aggregation_types of this OperationMetaMetricSpecification.
        :rtype: List[str]
        """
        return self._supported_aggregation_types

    @supported_aggregation_types.setter
    def supported_aggregation_types(self, supported_aggregation_types):
        """Sets the supported_aggregation_types of this OperationMetaMetricSpecification.

        supported aggregation types

        :param supported_aggregation_types: The supported_aggregation_types of this OperationMetaMetricSpecification.
        :type supported_aggregation_types: List[str]
        """

        self._supported_aggregation_types = supported_aggregation_types

    @property
    def supported_time_grain_types(self):
        """Gets the supported_time_grain_types of this OperationMetaMetricSpecification.

        supported time grain types

        :return: The supported_time_grain_types of this OperationMetaMetricSpecification.
        :rtype: List[str]
        """
        return self._supported_time_grain_types

    @supported_time_grain_types.setter
    def supported_time_grain_types(self, supported_time_grain_types):
        """Sets the supported_time_grain_types of this OperationMetaMetricSpecification.

        supported time grain types

        :param supported_time_grain_types: The supported_time_grain_types of this OperationMetaMetricSpecification.
        :type supported_time_grain_types: List[str]
        """

        self._supported_time_grain_types = supported_time_grain_types

    @property
    def unit(self):
        """Gets the unit of this OperationMetaMetricSpecification.

        units for the metric

        :return: The unit of this OperationMetaMetricSpecification.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this OperationMetaMetricSpecification.

        units for the metric

        :param unit: The unit of this OperationMetaMetricSpecification.
        :type unit: str
        """

        self._unit = unit
