/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccountProperties model module.
 * @module model/AccountProperties
 * @version 2019-11-01
 */
class AccountProperties {
    /**
     * Constructs a new <code>AccountProperties</code>.
     * Account property bag.
     * @alias module:model/AccountProperties
     */
    constructor() { 
        
        AccountProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountProperties} obj Optional instance to populate.
     * @return {module:model/AccountProperties} The populated <code>AccountProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountProperties();

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('userEmail')) {
                obj['userEmail'] = ApiClient.convertToType(data['userEmail'], 'String');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['userEmail'] && !(typeof data['userEmail'] === 'string' || data['userEmail'] instanceof String)) {
            throw new Error("Expected the field `userEmail` to be a primitive type in the JSON string but got " + data['userEmail']);
        }
        // ensure the json data is a string
        if (data['userName'] && !(typeof data['userName'] === 'string' || data['userName'] instanceof String)) {
            throw new Error("Expected the field `userName` to be a primitive type in the JSON string but got " + data['userName']);
        }

        return true;
    }


}



/**
 * Time at which the account was created.
 * @member {Date} createdAt
 */
AccountProperties.prototype['createdAt'] = undefined;

/**
 * Provisioning state of the Account
 * @member {module:model/AccountProperties.ProvisioningStateEnum} provisioningState
 */
AccountProperties.prototype['provisioningState'] = undefined;

/**
 * Email of the user who created the resource
 * @member {String} userEmail
 */
AccountProperties.prototype['userEmail'] = undefined;

/**
 * Name of the user who created the resource
 * @member {String} userName
 */
AccountProperties.prototype['userName'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
AccountProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Moving"
     * @const
     */
    "Moving": "Moving",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed"
};



export default AccountProperties;

