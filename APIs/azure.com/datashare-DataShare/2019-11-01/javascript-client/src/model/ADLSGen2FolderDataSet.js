/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ADLSGen2FolderProperties from './ADLSGen2FolderProperties';
import DataSet from './DataSet';

/**
 * The ADLSGen2FolderDataSet model module.
 * @module model/ADLSGen2FolderDataSet
 * @version 2019-11-01
 */
class ADLSGen2FolderDataSet {
    /**
     * Constructs a new <code>ADLSGen2FolderDataSet</code>.
     * An ADLS Gen 2 folder data set.
     * @alias module:model/ADLSGen2FolderDataSet
     * @implements module:model/DataSet
     * @param kind {module:model/ADLSGen2FolderDataSet.KindEnum} Kind of data set.
     */
    constructor(kind) { 
        DataSet.initialize(this);
        ADLSGen2FolderDataSet.initialize(this, kind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind) { 
        obj['properties'] = properties;
        obj['kind'] = kind;
    }

    /**
     * Constructs a <code>ADLSGen2FolderDataSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ADLSGen2FolderDataSet} obj Optional instance to populate.
     * @return {module:model/ADLSGen2FolderDataSet} The populated <code>ADLSGen2FolderDataSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ADLSGen2FolderDataSet();
            DataSet.constructFromObject(data, obj);

            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ADLSGen2FolderProperties.constructFromObject(data['properties']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ADLSGen2FolderDataSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ADLSGen2FolderDataSet</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ADLSGen2FolderDataSet.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          ADLSGen2FolderProperties.validateJSON(data['properties']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

ADLSGen2FolderDataSet.RequiredProperties = ["properties", "kind"];

/**
 * @member {module:model/ADLSGen2FolderProperties} properties
 */
ADLSGen2FolderDataSet.prototype['properties'] = undefined;

/**
 * Kind of data set.
 * @member {module:model/ADLSGen2FolderDataSet.KindEnum} kind
 */
ADLSGen2FolderDataSet.prototype['kind'] = undefined;

/**
 * The resource id of the azure resource
 * @member {String} id
 */
ADLSGen2FolderDataSet.prototype['id'] = undefined;

/**
 * Name of the azure resource
 * @member {String} name
 */
ADLSGen2FolderDataSet.prototype['name'] = undefined;

/**
 * Type of the azure resource
 * @member {String} type
 */
ADLSGen2FolderDataSet.prototype['type'] = undefined;


// Implement DataSet interface:
/**
 * The resource id of the azure resource
 * @member {String} id
 */
DataSet.prototype['id'] = undefined;
/**
 * Name of the azure resource
 * @member {String} name
 */
DataSet.prototype['name'] = undefined;
/**
 * Type of the azure resource
 * @member {String} type
 */
DataSet.prototype['type'] = undefined;



/**
 * Allowed values for the <code>kind</code> property.
 * @enum {String}
 * @readonly
 */
ADLSGen2FolderDataSet['KindEnum'] = {

    /**
     * value: "Blob"
     * @const
     */
    "Blob": "Blob",

    /**
     * value: "Container"
     * @const
     */
    "Container": "Container",

    /**
     * value: "BlobFolder"
     * @const
     */
    "BlobFolder": "BlobFolder",

    /**
     * value: "AdlsGen2FileSystem"
     * @const
     */
    "AdlsGen2FileSystem": "AdlsGen2FileSystem",

    /**
     * value: "AdlsGen2Folder"
     * @const
     */
    "AdlsGen2Folder": "AdlsGen2Folder",

    /**
     * value: "AdlsGen2File"
     * @const
     */
    "AdlsGen2File": "AdlsGen2File",

    /**
     * value: "AdlsGen1Folder"
     * @const
     */
    "AdlsGen1Folder": "AdlsGen1Folder",

    /**
     * value: "AdlsGen1File"
     * @const
     */
    "AdlsGen1File": "AdlsGen1File",

    /**
     * value: "KustoCluster"
     * @const
     */
    "KustoCluster": "KustoCluster",

    /**
     * value: "KustoDatabase"
     * @const
     */
    "KustoDatabase": "KustoDatabase",

    /**
     * value: "SqlDBTable"
     * @const
     */
    "SqlDBTable": "SqlDBTable",

    /**
     * value: "SqlDWTable"
     * @const
     */
    "SqlDWTable": "SqlDWTable"
};



export default ADLSGen2FolderDataSet;

