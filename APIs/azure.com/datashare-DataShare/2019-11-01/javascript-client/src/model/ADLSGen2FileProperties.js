/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ADLSGen2FileProperties model module.
 * @module model/ADLSGen2FileProperties
 * @version 2019-11-01
 */
class ADLSGen2FileProperties {
    /**
     * Constructs a new <code>ADLSGen2FileProperties</code>.
     * Properties of the ADLS Gen2 file data set.
     * @alias module:model/ADLSGen2FileProperties
     * @param filePath {String} File path within the file system.
     * @param fileSystem {String} File system to which the file belongs.
     * @param resourceGroup {String} Resource group of storage account
     * @param storageAccountName {String} Storage account name of the source data set
     * @param subscriptionId {String} Subscription id of storage account
     */
    constructor(filePath, fileSystem, resourceGroup, storageAccountName, subscriptionId) { 
        
        ADLSGen2FileProperties.initialize(this, filePath, fileSystem, resourceGroup, storageAccountName, subscriptionId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, filePath, fileSystem, resourceGroup, storageAccountName, subscriptionId) { 
        obj['filePath'] = filePath;
        obj['fileSystem'] = fileSystem;
        obj['resourceGroup'] = resourceGroup;
        obj['storageAccountName'] = storageAccountName;
        obj['subscriptionId'] = subscriptionId;
    }

    /**
     * Constructs a <code>ADLSGen2FileProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ADLSGen2FileProperties} obj Optional instance to populate.
     * @return {module:model/ADLSGen2FileProperties} The populated <code>ADLSGen2FileProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ADLSGen2FileProperties();

            if (data.hasOwnProperty('dataSetId')) {
                obj['dataSetId'] = ApiClient.convertToType(data['dataSetId'], 'String');
            }
            if (data.hasOwnProperty('filePath')) {
                obj['filePath'] = ApiClient.convertToType(data['filePath'], 'String');
            }
            if (data.hasOwnProperty('fileSystem')) {
                obj['fileSystem'] = ApiClient.convertToType(data['fileSystem'], 'String');
            }
            if (data.hasOwnProperty('resourceGroup')) {
                obj['resourceGroup'] = ApiClient.convertToType(data['resourceGroup'], 'String');
            }
            if (data.hasOwnProperty('storageAccountName')) {
                obj['storageAccountName'] = ApiClient.convertToType(data['storageAccountName'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ADLSGen2FileProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ADLSGen2FileProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ADLSGen2FileProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dataSetId'] && !(typeof data['dataSetId'] === 'string' || data['dataSetId'] instanceof String)) {
            throw new Error("Expected the field `dataSetId` to be a primitive type in the JSON string but got " + data['dataSetId']);
        }
        // ensure the json data is a string
        if (data['filePath'] && !(typeof data['filePath'] === 'string' || data['filePath'] instanceof String)) {
            throw new Error("Expected the field `filePath` to be a primitive type in the JSON string but got " + data['filePath']);
        }
        // ensure the json data is a string
        if (data['fileSystem'] && !(typeof data['fileSystem'] === 'string' || data['fileSystem'] instanceof String)) {
            throw new Error("Expected the field `fileSystem` to be a primitive type in the JSON string but got " + data['fileSystem']);
        }
        // ensure the json data is a string
        if (data['resourceGroup'] && !(typeof data['resourceGroup'] === 'string' || data['resourceGroup'] instanceof String)) {
            throw new Error("Expected the field `resourceGroup` to be a primitive type in the JSON string but got " + data['resourceGroup']);
        }
        // ensure the json data is a string
        if (data['storageAccountName'] && !(typeof data['storageAccountName'] === 'string' || data['storageAccountName'] instanceof String)) {
            throw new Error("Expected the field `storageAccountName` to be a primitive type in the JSON string but got " + data['storageAccountName']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }

        return true;
    }


}

ADLSGen2FileProperties.RequiredProperties = ["filePath", "fileSystem", "resourceGroup", "storageAccountName", "subscriptionId"];

/**
 * Unique id for identifying a data set resource
 * @member {String} dataSetId
 */
ADLSGen2FileProperties.prototype['dataSetId'] = undefined;

/**
 * File path within the file system.
 * @member {String} filePath
 */
ADLSGen2FileProperties.prototype['filePath'] = undefined;

/**
 * File system to which the file belongs.
 * @member {String} fileSystem
 */
ADLSGen2FileProperties.prototype['fileSystem'] = undefined;

/**
 * Resource group of storage account
 * @member {String} resourceGroup
 */
ADLSGen2FileProperties.prototype['resourceGroup'] = undefined;

/**
 * Storage account name of the source data set
 * @member {String} storageAccountName
 */
ADLSGen2FileProperties.prototype['storageAccountName'] = undefined;

/**
 * Subscription id of storage account
 * @member {String} subscriptionId
 */
ADLSGen2FileProperties.prototype['subscriptionId'] = undefined;






export default ADLSGen2FileProperties;

