/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScheduledSourceShareSynchronizationSettingProperties model module.
 * @module model/ScheduledSourceShareSynchronizationSettingProperties
 * @version 2019-11-01
 */
class ScheduledSourceShareSynchronizationSettingProperties {
    /**
     * Constructs a new <code>ScheduledSourceShareSynchronizationSettingProperties</code>.
     * A Scheduled source synchronization setting data transfer object.
     * @alias module:model/ScheduledSourceShareSynchronizationSettingProperties
     */
    constructor() { 
        
        ScheduledSourceShareSynchronizationSettingProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScheduledSourceShareSynchronizationSettingProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduledSourceShareSynchronizationSettingProperties} obj Optional instance to populate.
     * @return {module:model/ScheduledSourceShareSynchronizationSettingProperties} The populated <code>ScheduledSourceShareSynchronizationSettingProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScheduledSourceShareSynchronizationSettingProperties();

            if (data.hasOwnProperty('recurrenceInterval')) {
                obj['recurrenceInterval'] = ApiClient.convertToType(data['recurrenceInterval'], 'String');
            }
            if (data.hasOwnProperty('synchronizationTime')) {
                obj['synchronizationTime'] = ApiClient.convertToType(data['synchronizationTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScheduledSourceShareSynchronizationSettingProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScheduledSourceShareSynchronizationSettingProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['recurrenceInterval'] && !(typeof data['recurrenceInterval'] === 'string' || data['recurrenceInterval'] instanceof String)) {
            throw new Error("Expected the field `recurrenceInterval` to be a primitive type in the JSON string but got " + data['recurrenceInterval']);
        }

        return true;
    }


}



/**
 * Recurrence Interval
 * @member {module:model/ScheduledSourceShareSynchronizationSettingProperties.RecurrenceIntervalEnum} recurrenceInterval
 */
ScheduledSourceShareSynchronizationSettingProperties.prototype['recurrenceInterval'] = undefined;

/**
 * Synchronization time
 * @member {Date} synchronizationTime
 */
ScheduledSourceShareSynchronizationSettingProperties.prototype['synchronizationTime'] = undefined;





/**
 * Allowed values for the <code>recurrenceInterval</code> property.
 * @enum {String}
 * @readonly
 */
ScheduledSourceShareSynchronizationSettingProperties['RecurrenceIntervalEnum'] = {

    /**
     * value: "Hour"
     * @const
     */
    "Hour": "Hour",

    /**
     * value: "Day"
     * @const
     */
    "Day": "Day"
};



export default ScheduledSourceShareSynchronizationSettingProperties;

