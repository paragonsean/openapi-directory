/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ShareSubscriptionSynchronization from './ShareSubscriptionSynchronization';

/**
 * The ShareSubscriptionSynchronizationList model module.
 * @module model/ShareSubscriptionSynchronizationList
 * @version 2019-11-01
 */
class ShareSubscriptionSynchronizationList {
    /**
     * Constructs a new <code>ShareSubscriptionSynchronizationList</code>.
     * A consumer side list of share subscription synchronizations
     * @alias module:model/ShareSubscriptionSynchronizationList
     * @param value {Array.<module:model/ShareSubscriptionSynchronization>} Collection of items of type DataTransferObjects.
     */
    constructor(value) { 
        
        ShareSubscriptionSynchronizationList.initialize(this, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, value) { 
        obj['value'] = value;
    }

    /**
     * Constructs a <code>ShareSubscriptionSynchronizationList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShareSubscriptionSynchronizationList} obj Optional instance to populate.
     * @return {module:model/ShareSubscriptionSynchronizationList} The populated <code>ShareSubscriptionSynchronizationList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShareSubscriptionSynchronizationList();

            if (data.hasOwnProperty('nextLink')) {
                obj['nextLink'] = ApiClient.convertToType(data['nextLink'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], [ShareSubscriptionSynchronization]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShareSubscriptionSynchronizationList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShareSubscriptionSynchronizationList</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ShareSubscriptionSynchronizationList.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['nextLink'] && !(typeof data['nextLink'] === 'string' || data['nextLink'] instanceof String)) {
            throw new Error("Expected the field `nextLink` to be a primitive type in the JSON string but got " + data['nextLink']);
        }
        if (data['value']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['value'])) {
                throw new Error("Expected the field `value` to be an array in the JSON data but got " + data['value']);
            }
            // validate the optional field `value` (array)
            for (const item of data['value']) {
                ShareSubscriptionSynchronization.validateJSON(item);
            };
        }

        return true;
    }


}

ShareSubscriptionSynchronizationList.RequiredProperties = ["value"];

/**
 * The Url of next result page.
 * @member {String} nextLink
 */
ShareSubscriptionSynchronizationList.prototype['nextLink'] = undefined;

/**
 * Collection of items of type DataTransferObjects.
 * @member {Array.<module:model/ShareSubscriptionSynchronization>} value
 */
ShareSubscriptionSynchronizationList.prototype['value'] = undefined;






export default ShareSubscriptionSynchronizationList;

