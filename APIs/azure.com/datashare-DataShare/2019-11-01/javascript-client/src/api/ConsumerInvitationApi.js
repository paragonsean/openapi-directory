/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConsumerInvitation from '../model/ConsumerInvitation';
import ConsumerInvitationList from '../model/ConsumerInvitationList';
import DataShareError from '../model/DataShareError';

/**
* ConsumerInvitation service.
* @module api/ConsumerInvitationApi
* @version 2019-11-01
*/
export default class ConsumerInvitationApi {

    /**
    * Constructs a new ConsumerInvitationApi. 
    * @alias module:api/ConsumerInvitationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the consumerInvitationsGet operation.
     * @callback module:api/ConsumerInvitationApi~consumerInvitationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConsumerInvitation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the invitation identified by invitationId
     * Get an invitation
     * @param {String} location Location of the invitation
     * @param {String} invitationId An invitation id
     * @param {String} apiVersion The api version to use.
     * @param {module:api/ConsumerInvitationApi~consumerInvitationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConsumerInvitation}
     */
    consumerInvitationsGet(location, invitationId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling consumerInvitationsGet");
      }
      // verify the required parameter 'invitationId' is set
      if (invitationId === undefined || invitationId === null) {
        throw new Error("Missing the required parameter 'invitationId' when calling consumerInvitationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling consumerInvitationsGet");
      }

      let pathParams = {
        'location': location,
        'invitationId': invitationId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConsumerInvitation;
      return this.apiClient.callApi(
        '/providers/Microsoft.DataShare/locations/{location}/consumerInvitations/{invitationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consumerInvitationsListInvitations operation.
     * @callback module:api/ConsumerInvitationApi~consumerInvitationsListInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConsumerInvitationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the invitations
     * Lists invitations
     * @param {String} apiVersion The api version to use.
     * @param {Object} opts Optional parameters
     * @param {String} [skipToken] The continuation token
     * @param {module:api/ConsumerInvitationApi~consumerInvitationsListInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConsumerInvitationList}
     */
    consumerInvitationsListInvitations(apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling consumerInvitationsListInvitations");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion,
        '$skipToken': opts['skipToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConsumerInvitationList;
      return this.apiClient.callApi(
        '/providers/Microsoft.DataShare/ListInvitations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consumerInvitationsRejectInvitation operation.
     * @callback module:api/ConsumerInvitationApi~consumerInvitationsRejectInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConsumerInvitation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Rejects the invitation identified by invitationId
     * Reject an invitation
     * @param {String} location Location of the invitation
     * @param {String} apiVersion The api version to use.
     * @param {module:model/ConsumerInvitation} invitation An invitation payload
     * @param {module:api/ConsumerInvitationApi~consumerInvitationsRejectInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConsumerInvitation}
     */
    consumerInvitationsRejectInvitation(location, apiVersion, invitation, callback) {
      let postBody = invitation;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling consumerInvitationsRejectInvitation");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling consumerInvitationsRejectInvitation");
      }
      // verify the required parameter 'invitation' is set
      if (invitation === undefined || invitation === null) {
        throw new Error("Missing the required parameter 'invitation' when calling consumerInvitationsRejectInvitation");
      }

      let pathParams = {
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConsumerInvitation;
      return this.apiClient.callApi(
        '/providers/Microsoft.DataShare/locations/{location}/RejectInvitation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
