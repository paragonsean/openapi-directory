# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScheduledSourceShareSynchronizationSettingProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recurrence_interval: str=None, synchronization_time: datetime=None):
        """ScheduledSourceShareSynchronizationSettingProperties - a model defined in OpenAPI

        :param recurrence_interval: The recurrence_interval of this ScheduledSourceShareSynchronizationSettingProperties.
        :param synchronization_time: The synchronization_time of this ScheduledSourceShareSynchronizationSettingProperties.
        """
        self.openapi_types = {
            'recurrence_interval': str,
            'synchronization_time': datetime
        }

        self.attribute_map = {
            'recurrence_interval': 'recurrenceInterval',
            'synchronization_time': 'synchronizationTime'
        }

        self._recurrence_interval = recurrence_interval
        self._synchronization_time = synchronization_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduledSourceShareSynchronizationSettingProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduledSourceShareSynchronizationSettingProperties of this ScheduledSourceShareSynchronizationSettingProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recurrence_interval(self):
        """Gets the recurrence_interval of this ScheduledSourceShareSynchronizationSettingProperties.

        Recurrence Interval

        :return: The recurrence_interval of this ScheduledSourceShareSynchronizationSettingProperties.
        :rtype: str
        """
        return self._recurrence_interval

    @recurrence_interval.setter
    def recurrence_interval(self, recurrence_interval):
        """Sets the recurrence_interval of this ScheduledSourceShareSynchronizationSettingProperties.

        Recurrence Interval

        :param recurrence_interval: The recurrence_interval of this ScheduledSourceShareSynchronizationSettingProperties.
        :type recurrence_interval: str
        """
        allowed_values = ["Hour", "Day"]  # noqa: E501
        if recurrence_interval not in allowed_values:
            raise ValueError(
                "Invalid value for `recurrence_interval` ({0}), must be one of {1}"
                .format(recurrence_interval, allowed_values)
            )

        self._recurrence_interval = recurrence_interval

    @property
    def synchronization_time(self):
        """Gets the synchronization_time of this ScheduledSourceShareSynchronizationSettingProperties.

        Synchronization time

        :return: The synchronization_time of this ScheduledSourceShareSynchronizationSettingProperties.
        :rtype: datetime
        """
        return self._synchronization_time

    @synchronization_time.setter
    def synchronization_time(self, synchronization_time):
        """Sets the synchronization_time of this ScheduledSourceShareSynchronizationSettingProperties.

        Synchronization time

        :param synchronization_time: The synchronization_time of this ScheduledSourceShareSynchronizationSettingProperties.
        :type synchronization_time: datetime
        """

        self._synchronization_time = synchronization_time
