# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ADLSGen2FileProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_set_id: str=None, file_path: str=None, file_system: str=None, resource_group: str=None, storage_account_name: str=None, subscription_id: str=None):
        """ADLSGen2FileProperties - a model defined in OpenAPI

        :param data_set_id: The data_set_id of this ADLSGen2FileProperties.
        :param file_path: The file_path of this ADLSGen2FileProperties.
        :param file_system: The file_system of this ADLSGen2FileProperties.
        :param resource_group: The resource_group of this ADLSGen2FileProperties.
        :param storage_account_name: The storage_account_name of this ADLSGen2FileProperties.
        :param subscription_id: The subscription_id of this ADLSGen2FileProperties.
        """
        self.openapi_types = {
            'data_set_id': str,
            'file_path': str,
            'file_system': str,
            'resource_group': str,
            'storage_account_name': str,
            'subscription_id': str
        }

        self.attribute_map = {
            'data_set_id': 'dataSetId',
            'file_path': 'filePath',
            'file_system': 'fileSystem',
            'resource_group': 'resourceGroup',
            'storage_account_name': 'storageAccountName',
            'subscription_id': 'subscriptionId'
        }

        self._data_set_id = data_set_id
        self._file_path = file_path
        self._file_system = file_system
        self._resource_group = resource_group
        self._storage_account_name = storage_account_name
        self._subscription_id = subscription_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ADLSGen2FileProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ADLSGen2FileProperties of this ADLSGen2FileProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_set_id(self):
        """Gets the data_set_id of this ADLSGen2FileProperties.

        Unique id for identifying a data set resource

        :return: The data_set_id of this ADLSGen2FileProperties.
        :rtype: str
        """
        return self._data_set_id

    @data_set_id.setter
    def data_set_id(self, data_set_id):
        """Sets the data_set_id of this ADLSGen2FileProperties.

        Unique id for identifying a data set resource

        :param data_set_id: The data_set_id of this ADLSGen2FileProperties.
        :type data_set_id: str
        """

        self._data_set_id = data_set_id

    @property
    def file_path(self):
        """Gets the file_path of this ADLSGen2FileProperties.

        File path within the file system.

        :return: The file_path of this ADLSGen2FileProperties.
        :rtype: str
        """
        return self._file_path

    @file_path.setter
    def file_path(self, file_path):
        """Sets the file_path of this ADLSGen2FileProperties.

        File path within the file system.

        :param file_path: The file_path of this ADLSGen2FileProperties.
        :type file_path: str
        """
        if file_path is None:
            raise ValueError("Invalid value for `file_path`, must not be `None`")

        self._file_path = file_path

    @property
    def file_system(self):
        """Gets the file_system of this ADLSGen2FileProperties.

        File system to which the file belongs.

        :return: The file_system of this ADLSGen2FileProperties.
        :rtype: str
        """
        return self._file_system

    @file_system.setter
    def file_system(self, file_system):
        """Sets the file_system of this ADLSGen2FileProperties.

        File system to which the file belongs.

        :param file_system: The file_system of this ADLSGen2FileProperties.
        :type file_system: str
        """
        if file_system is None:
            raise ValueError("Invalid value for `file_system`, must not be `None`")

        self._file_system = file_system

    @property
    def resource_group(self):
        """Gets the resource_group of this ADLSGen2FileProperties.

        Resource group of storage account

        :return: The resource_group of this ADLSGen2FileProperties.
        :rtype: str
        """
        return self._resource_group

    @resource_group.setter
    def resource_group(self, resource_group):
        """Sets the resource_group of this ADLSGen2FileProperties.

        Resource group of storage account

        :param resource_group: The resource_group of this ADLSGen2FileProperties.
        :type resource_group: str
        """
        if resource_group is None:
            raise ValueError("Invalid value for `resource_group`, must not be `None`")

        self._resource_group = resource_group

    @property
    def storage_account_name(self):
        """Gets the storage_account_name of this ADLSGen2FileProperties.

        Storage account name of the source data set

        :return: The storage_account_name of this ADLSGen2FileProperties.
        :rtype: str
        """
        return self._storage_account_name

    @storage_account_name.setter
    def storage_account_name(self, storage_account_name):
        """Sets the storage_account_name of this ADLSGen2FileProperties.

        Storage account name of the source data set

        :param storage_account_name: The storage_account_name of this ADLSGen2FileProperties.
        :type storage_account_name: str
        """
        if storage_account_name is None:
            raise ValueError("Invalid value for `storage_account_name`, must not be `None`")

        self._storage_account_name = storage_account_name

    @property
    def subscription_id(self):
        """Gets the subscription_id of this ADLSGen2FileProperties.

        Subscription id of storage account

        :return: The subscription_id of this ADLSGen2FileProperties.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this ADLSGen2FileProperties.

        Subscription id of storage account

        :param subscription_id: The subscription_id of this ADLSGen2FileProperties.
        :type subscription_id: str
        """
        if subscription_id is None:
            raise ValueError("Invalid value for `subscription_id`, must not be `None`")

        self._subscription_id = subscription_id
