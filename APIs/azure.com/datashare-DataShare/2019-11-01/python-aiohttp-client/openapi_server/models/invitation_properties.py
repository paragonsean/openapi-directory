# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InvitationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invitation_id: str=None, invitation_status: str=None, responded_at: datetime=None, sent_at: datetime=None, target_active_directory_id: str=None, target_email: str=None, target_object_id: str=None, user_email: str=None, user_name: str=None):
        """InvitationProperties - a model defined in OpenAPI

        :param invitation_id: The invitation_id of this InvitationProperties.
        :param invitation_status: The invitation_status of this InvitationProperties.
        :param responded_at: The responded_at of this InvitationProperties.
        :param sent_at: The sent_at of this InvitationProperties.
        :param target_active_directory_id: The target_active_directory_id of this InvitationProperties.
        :param target_email: The target_email of this InvitationProperties.
        :param target_object_id: The target_object_id of this InvitationProperties.
        :param user_email: The user_email of this InvitationProperties.
        :param user_name: The user_name of this InvitationProperties.
        """
        self.openapi_types = {
            'invitation_id': str,
            'invitation_status': str,
            'responded_at': datetime,
            'sent_at': datetime,
            'target_active_directory_id': str,
            'target_email': str,
            'target_object_id': str,
            'user_email': str,
            'user_name': str
        }

        self.attribute_map = {
            'invitation_id': 'invitationId',
            'invitation_status': 'invitationStatus',
            'responded_at': 'respondedAt',
            'sent_at': 'sentAt',
            'target_active_directory_id': 'targetActiveDirectoryId',
            'target_email': 'targetEmail',
            'target_object_id': 'targetObjectId',
            'user_email': 'userEmail',
            'user_name': 'userName'
        }

        self._invitation_id = invitation_id
        self._invitation_status = invitation_status
        self._responded_at = responded_at
        self._sent_at = sent_at
        self._target_active_directory_id = target_active_directory_id
        self._target_email = target_email
        self._target_object_id = target_object_id
        self._user_email = user_email
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvitationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InvitationProperties of this InvitationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invitation_id(self):
        """Gets the invitation_id of this InvitationProperties.

        unique invitation id

        :return: The invitation_id of this InvitationProperties.
        :rtype: str
        """
        return self._invitation_id

    @invitation_id.setter
    def invitation_id(self, invitation_id):
        """Sets the invitation_id of this InvitationProperties.

        unique invitation id

        :param invitation_id: The invitation_id of this InvitationProperties.
        :type invitation_id: str
        """

        self._invitation_id = invitation_id

    @property
    def invitation_status(self):
        """Gets the invitation_status of this InvitationProperties.

        The status of the invitation.

        :return: The invitation_status of this InvitationProperties.
        :rtype: str
        """
        return self._invitation_status

    @invitation_status.setter
    def invitation_status(self, invitation_status):
        """Sets the invitation_status of this InvitationProperties.

        The status of the invitation.

        :param invitation_status: The invitation_status of this InvitationProperties.
        :type invitation_status: str
        """
        allowed_values = ["Pending", "Accepted", "Rejected", "Withdrawn"]  # noqa: E501
        if invitation_status not in allowed_values:
            raise ValueError(
                "Invalid value for `invitation_status` ({0}), must be one of {1}"
                .format(invitation_status, allowed_values)
            )

        self._invitation_status = invitation_status

    @property
    def responded_at(self):
        """Gets the responded_at of this InvitationProperties.

        The time the recipient responded to the invitation.

        :return: The responded_at of this InvitationProperties.
        :rtype: datetime
        """
        return self._responded_at

    @responded_at.setter
    def responded_at(self, responded_at):
        """Sets the responded_at of this InvitationProperties.

        The time the recipient responded to the invitation.

        :param responded_at: The responded_at of this InvitationProperties.
        :type responded_at: datetime
        """

        self._responded_at = responded_at

    @property
    def sent_at(self):
        """Gets the sent_at of this InvitationProperties.

        Gets the time at which the invitation was sent.

        :return: The sent_at of this InvitationProperties.
        :rtype: datetime
        """
        return self._sent_at

    @sent_at.setter
    def sent_at(self, sent_at):
        """Sets the sent_at of this InvitationProperties.

        Gets the time at which the invitation was sent.

        :param sent_at: The sent_at of this InvitationProperties.
        :type sent_at: datetime
        """

        self._sent_at = sent_at

    @property
    def target_active_directory_id(self):
        """Gets the target_active_directory_id of this InvitationProperties.

        The target Azure AD Id. Can't be combined with email.

        :return: The target_active_directory_id of this InvitationProperties.
        :rtype: str
        """
        return self._target_active_directory_id

    @target_active_directory_id.setter
    def target_active_directory_id(self, target_active_directory_id):
        """Sets the target_active_directory_id of this InvitationProperties.

        The target Azure AD Id. Can't be combined with email.

        :param target_active_directory_id: The target_active_directory_id of this InvitationProperties.
        :type target_active_directory_id: str
        """

        self._target_active_directory_id = target_active_directory_id

    @property
    def target_email(self):
        """Gets the target_email of this InvitationProperties.

        The email the invitation is directed to.

        :return: The target_email of this InvitationProperties.
        :rtype: str
        """
        return self._target_email

    @target_email.setter
    def target_email(self, target_email):
        """Sets the target_email of this InvitationProperties.

        The email the invitation is directed to.

        :param target_email: The target_email of this InvitationProperties.
        :type target_email: str
        """

        self._target_email = target_email

    @property
    def target_object_id(self):
        """Gets the target_object_id of this InvitationProperties.

        The target user or application Id that invitation is being sent to.  Must be specified along TargetActiveDirectoryId. This enables sending  invitations to specific users or applications in an AD tenant.

        :return: The target_object_id of this InvitationProperties.
        :rtype: str
        """
        return self._target_object_id

    @target_object_id.setter
    def target_object_id(self, target_object_id):
        """Sets the target_object_id of this InvitationProperties.

        The target user or application Id that invitation is being sent to.  Must be specified along TargetActiveDirectoryId. This enables sending  invitations to specific users or applications in an AD tenant.

        :param target_object_id: The target_object_id of this InvitationProperties.
        :type target_object_id: str
        """

        self._target_object_id = target_object_id

    @property
    def user_email(self):
        """Gets the user_email of this InvitationProperties.

        Email of the user who created the resource

        :return: The user_email of this InvitationProperties.
        :rtype: str
        """
        return self._user_email

    @user_email.setter
    def user_email(self, user_email):
        """Sets the user_email of this InvitationProperties.

        Email of the user who created the resource

        :param user_email: The user_email of this InvitationProperties.
        :type user_email: str
        """

        self._user_email = user_email

    @property
    def user_name(self):
        """Gets the user_name of this InvitationProperties.

        Name of the user who created the resource

        :return: The user_name of this InvitationProperties.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this InvitationProperties.

        Name of the user who created the resource

        :param user_name: The user_name of this InvitationProperties.
        :type user_name: str
        """

        self._user_name = user_name
