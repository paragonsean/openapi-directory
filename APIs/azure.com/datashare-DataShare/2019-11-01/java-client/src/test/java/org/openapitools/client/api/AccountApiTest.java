/*
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Account;
import org.openapitools.client.model.AccountList;
import org.openapitools.client.model.AccountUpdateParameters;
import org.openapitools.client.model.DataShareError;
import org.openapitools.client.model.OperationResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountApi
 */
@Disabled
public class AccountApiTest {

    private final AccountApi api = new AccountApi();

    /**
     * Create an account in the given resource group
     *
     * Create an account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        Account account = null;
        Account response = api.accountsCreate(subscriptionId, resourceGroupName, accountName, apiVersion, account);
        // TODO: test validations
    }

    /**
     * Delete an account
     *
     * DeleteAccount
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        OperationResponse response = api.accountsDelete(subscriptionId, resourceGroupName, accountName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get an account under a resource group
     *
     * Get an account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        Account response = api.accountsGet(subscriptionId, resourceGroupName, accountName, apiVersion);
        // TODO: test validations
    }

    /**
     * List Accounts in a resource group
     *
     * List Accounts in ResourceGroup
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String $skipToken = null;
        AccountList response = api.accountsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, $skipToken);
        // TODO: test validations
    }

    /**
     * List Accounts in a subscription
     *
     * List Accounts in Subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String $skipToken = null;
        AccountList response = api.accountsListBySubscription(subscriptionId, apiVersion, $skipToken);
        // TODO: test validations
    }

    /**
     * Patch a given account
     *
     * Patch an account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        AccountUpdateParameters accountUpdateParameters = null;
        Account response = api.accountsUpdate(subscriptionId, resourceGroupName, accountName, apiVersion, accountUpdateParameters);
        // TODO: test validations
    }

}
