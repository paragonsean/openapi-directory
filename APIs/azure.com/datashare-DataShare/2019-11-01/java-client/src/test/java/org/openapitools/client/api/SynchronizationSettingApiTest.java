/*
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataShareError;
import org.openapitools.client.model.OperationResponse;
import org.openapitools.client.model.SynchronizationSetting;
import org.openapitools.client.model.SynchronizationSettingList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SynchronizationSettingApi
 */
@Disabled
public class SynchronizationSettingApiTest {

    private final SynchronizationSettingApi api = new SynchronizationSettingApi();

    /**
     * Adds a new synchronization setting to an existing share or updates it if existing.
     *
     * Create or update a synchronizationSetting 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void synchronizationSettingsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String synchronizationSettingName = null;
        String apiVersion = null;
        SynchronizationSetting synchronizationSetting = null;
        SynchronizationSetting response = api.synchronizationSettingsCreate(subscriptionId, resourceGroupName, accountName, shareName, synchronizationSettingName, apiVersion, synchronizationSetting);
        // TODO: test validations
    }

    /**
     * Delete synchronizationSetting in a share.
     *
     * Delete a synchronizationSetting in a share
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void synchronizationSettingsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String synchronizationSettingName = null;
        String apiVersion = null;
        OperationResponse response = api.synchronizationSettingsDelete(subscriptionId, resourceGroupName, accountName, shareName, synchronizationSettingName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get synchronizationSetting in a share.
     *
     * Get a synchronizationSetting in a share
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void synchronizationSettingsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String synchronizationSettingName = null;
        String apiVersion = null;
        SynchronizationSetting response = api.synchronizationSettingsGet(subscriptionId, resourceGroupName, accountName, shareName, synchronizationSettingName, apiVersion);
        // TODO: test validations
    }

    /**
     * List synchronizationSettings in a share.
     *
     * List synchronizationSettings in a share
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void synchronizationSettingsListByShareTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String apiVersion = null;
        String $skipToken = null;
        SynchronizationSettingList response = api.synchronizationSettingsListByShare(subscriptionId, resourceGroupName, accountName, shareName, apiVersion, $skipToken);
        // TODO: test validations
    }

}
