/*
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataSet;
import org.openapitools.client.model.DataSetList;
import org.openapitools.client.model.DataShareError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataSetApi
 */
@Disabled
public class DataSetApiTest {

    private final DataSetApi api = new DataSetApi();

    /**
     * Adds a new data set to an existing share or updates it if existing.
     *
     * Create a DataSet 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataSetsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String dataSetName = null;
        String apiVersion = null;
        DataSet dataSet = null;
        DataSet response = api.dataSetsCreate(subscriptionId, resourceGroupName, accountName, shareName, dataSetName, apiVersion, dataSet);
        // TODO: test validations
    }

    /**
     * Delete DataSet in a share.
     *
     * Delete a DataSet in a share
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataSetsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String dataSetName = null;
        String apiVersion = null;
        api.dataSetsDelete(subscriptionId, resourceGroupName, accountName, shareName, dataSetName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get DataSet in a share.
     *
     * Get a DataSet in a share
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataSetsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String dataSetName = null;
        String apiVersion = null;
        DataSet response = api.dataSetsGet(subscriptionId, resourceGroupName, accountName, shareName, dataSetName, apiVersion);
        // TODO: test validations
    }

    /**
     * List DataSets in a share.
     *
     * List DataSets in a share
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataSetsListByShareTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String shareName = null;
        String apiVersion = null;
        String $skipToken = null;
        DataSetList response = api.dataSetsListByShare(subscriptionId, resourceGroupName, accountName, shareName, apiVersion, $skipToken);
        // TODO: test validations
    }

}
