/**
 * DataShareManagementClient
 * Creates a Microsoft.DataShare management client.
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISynchronize.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISynchronize::OAISynchronize(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISynchronize::OAISynchronize() {
    this->initializeModel();
}

OAISynchronize::~OAISynchronize() {}

void OAISynchronize::initializeModel() {

    m_synchronization_mode_isSet = false;
    m_synchronization_mode_isValid = false;
}

void OAISynchronize::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISynchronize::fromJsonObject(QJsonObject json) {

    m_synchronization_mode_isValid = ::OpenAPI::fromJsonValue(m_synchronization_mode, json[QString("synchronizationMode")]);
    m_synchronization_mode_isSet = !json[QString("synchronizationMode")].isNull() && m_synchronization_mode_isValid;
}

QString OAISynchronize::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISynchronize::asJsonObject() const {
    QJsonObject obj;
    if (m_synchronization_mode_isSet) {
        obj.insert(QString("synchronizationMode"), ::OpenAPI::toJsonValue(m_synchronization_mode));
    }
    return obj;
}

QString OAISynchronize::getSynchronizationMode() const {
    return m_synchronization_mode;
}
void OAISynchronize::setSynchronizationMode(const QString &synchronization_mode) {
    m_synchronization_mode = synchronization_mode;
    m_synchronization_mode_isSet = true;
}

bool OAISynchronize::is_synchronization_mode_Set() const{
    return m_synchronization_mode_isSet;
}

bool OAISynchronize::is_synchronization_mode_Valid() const{
    return m_synchronization_mode_isValid;
}

bool OAISynchronize::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_synchronization_mode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISynchronize::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
