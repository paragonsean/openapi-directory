# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_type_health_policy import ServiceTypeHealthPolicy
from openapi_server import util


class ApplicationHealthPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_service_type_health_policy: ServiceTypeHealthPolicy=None, service_type_health_policies: Dict[str, ServiceTypeHealthPolicy]=None):
        """ApplicationHealthPolicy - a model defined in OpenAPI

        :param default_service_type_health_policy: The default_service_type_health_policy of this ApplicationHealthPolicy.
        :param service_type_health_policies: The service_type_health_policies of this ApplicationHealthPolicy.
        """
        self.openapi_types = {
            'default_service_type_health_policy': ServiceTypeHealthPolicy,
            'service_type_health_policies': Dict[str, ServiceTypeHealthPolicy]
        }

        self.attribute_map = {
            'default_service_type_health_policy': 'defaultServiceTypeHealthPolicy',
            'service_type_health_policies': 'serviceTypeHealthPolicies'
        }

        self._default_service_type_health_policy = default_service_type_health_policy
        self._service_type_health_policies = service_type_health_policies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationHealthPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationHealthPolicy of this ApplicationHealthPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_service_type_health_policy(self):
        """Gets the default_service_type_health_policy of this ApplicationHealthPolicy.


        :return: The default_service_type_health_policy of this ApplicationHealthPolicy.
        :rtype: ServiceTypeHealthPolicy
        """
        return self._default_service_type_health_policy

    @default_service_type_health_policy.setter
    def default_service_type_health_policy(self, default_service_type_health_policy):
        """Sets the default_service_type_health_policy of this ApplicationHealthPolicy.


        :param default_service_type_health_policy: The default_service_type_health_policy of this ApplicationHealthPolicy.
        :type default_service_type_health_policy: ServiceTypeHealthPolicy
        """

        self._default_service_type_health_policy = default_service_type_health_policy

    @property
    def service_type_health_policies(self):
        """Gets the service_type_health_policies of this ApplicationHealthPolicy.

        Defines a ServiceTypeHealthPolicy per service type name.  The entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.  If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation. 

        :return: The service_type_health_policies of this ApplicationHealthPolicy.
        :rtype: Dict[str, ServiceTypeHealthPolicy]
        """
        return self._service_type_health_policies

    @service_type_health_policies.setter
    def service_type_health_policies(self, service_type_health_policies):
        """Sets the service_type_health_policies of this ApplicationHealthPolicy.

        Defines a ServiceTypeHealthPolicy per service type name.  The entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.  If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation. 

        :param service_type_health_policies: The service_type_health_policies of this ApplicationHealthPolicy.
        :type service_type_health_policies: Dict[str, ServiceTypeHealthPolicy]
        """

        self._service_type_health_policies = service_type_health_policies
