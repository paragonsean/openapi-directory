/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServerCertificateCommonNames.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServerCertificateCommonNames::OAIServerCertificateCommonNames(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServerCertificateCommonNames::OAIServerCertificateCommonNames() {
    this->initializeModel();
}

OAIServerCertificateCommonNames::~OAIServerCertificateCommonNames() {}

void OAIServerCertificateCommonNames::initializeModel() {

    m_common_names_isSet = false;
    m_common_names_isValid = false;

    m_x509_store_name_isSet = false;
    m_x509_store_name_isValid = false;
}

void OAIServerCertificateCommonNames::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServerCertificateCommonNames::fromJsonObject(QJsonObject json) {

    m_common_names_isValid = ::OpenAPI::fromJsonValue(m_common_names, json[QString("commonNames")]);
    m_common_names_isSet = !json[QString("commonNames")].isNull() && m_common_names_isValid;

    m_x509_store_name_isValid = ::OpenAPI::fromJsonValue(m_x509_store_name, json[QString("x509StoreName")]);
    m_x509_store_name_isSet = !json[QString("x509StoreName")].isNull() && m_x509_store_name_isValid;
}

QString OAIServerCertificateCommonNames::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServerCertificateCommonNames::asJsonObject() const {
    QJsonObject obj;
    if (m_common_names.size() > 0) {
        obj.insert(QString("commonNames"), ::OpenAPI::toJsonValue(m_common_names));
    }
    if (m_x509_store_name.isSet()) {
        obj.insert(QString("x509StoreName"), ::OpenAPI::toJsonValue(m_x509_store_name));
    }
    return obj;
}

QList<OAIServerCertificateCommonName> OAIServerCertificateCommonNames::getCommonNames() const {
    return m_common_names;
}
void OAIServerCertificateCommonNames::setCommonNames(const QList<OAIServerCertificateCommonName> &common_names) {
    m_common_names = common_names;
    m_common_names_isSet = true;
}

bool OAIServerCertificateCommonNames::is_common_names_Set() const{
    return m_common_names_isSet;
}

bool OAIServerCertificateCommonNames::is_common_names_Valid() const{
    return m_common_names_isValid;
}

OAIStoreName OAIServerCertificateCommonNames::getX509StoreName() const {
    return m_x509_store_name;
}
void OAIServerCertificateCommonNames::setX509StoreName(const OAIStoreName &x509_store_name) {
    m_x509_store_name = x509_store_name;
    m_x509_store_name_isSet = true;
}

bool OAIServerCertificateCommonNames::is_x509_store_name_Set() const{
    return m_x509_store_name_isSet;
}

bool OAIServerCertificateCommonNames::is_x509_store_name_Valid() const{
    return m_x509_store_name_isValid;
}

bool OAIServerCertificateCommonNames::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_common_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_x509_store_name.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServerCertificateCommonNames::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
