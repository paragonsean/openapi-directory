/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterState.h
 *
 * The current state of the cluster.    - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.   - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.   - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.   - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.   - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.   - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to &#39;Automatic&#39;.   - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.   - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.   - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.   - Ready - Indicates that the cluster is in a stable state. 
 */

#ifndef OAIClusterState_H
#define OAIClusterState_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIClusterState : public OAIEnum {
public:
    OAIClusterState();
    OAIClusterState(QString json);
    ~OAIClusterState() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIClusterState {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        WAITINGFORNODES, 
        DEPLOYING, 
        BASELINEUPGRADE, 
        UPDATINGUSERCONFIGURATION, 
        UPDATINGUSERCERTIFICATE, 
        UPDATINGINFRASTRUCTURE, 
        ENFORCINGCLUSTERVERSION, 
        UPGRADESERVICEUNREACHABLE, 
        AUTOSCALE, 
        READY
    };
    OAIClusterState::eOAIClusterState getValue() const;
    void setValue(const OAIClusterState::eOAIClusterState& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIClusterState m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterState)

#endif // OAIClusterState_H
