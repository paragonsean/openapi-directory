/*
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The current state of the cluster.    - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.   - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.   - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.   - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.   - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.   - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to &#39;Automatic&#39;.   - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.   - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.   - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.   - Ready - Indicates that the cluster is in a stable state. 
 */
@JsonAdapter(ClusterState.Adapter.class)
public enum ClusterState {
  
  WAITING_FOR_NODES("WaitingForNodes"),
  
  DEPLOYING("Deploying"),
  
  BASELINE_UPGRADE("BaselineUpgrade"),
  
  UPDATING_USER_CONFIGURATION("UpdatingUserConfiguration"),
  
  UPDATING_USER_CERTIFICATE("UpdatingUserCertificate"),
  
  UPDATING_INFRASTRUCTURE("UpdatingInfrastructure"),
  
  ENFORCING_CLUSTER_VERSION("EnforcingClusterVersion"),
  
  UPGRADE_SERVICE_UNREACHABLE("UpgradeServiceUnreachable"),
  
  AUTO_SCALE("AutoScale"),
  
  READY("Ready");

  private String value;

  ClusterState(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ClusterState fromValue(String value) {
    for (ClusterState b : ClusterState.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ClusterState> {
    @Override
    public void write(final JsonWriter jsonWriter, final ClusterState enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ClusterState read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ClusterState.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ClusterState.fromValue(value);
  }
}

