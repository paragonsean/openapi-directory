/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StoreName from './StoreName';

/**
 * The CertificateDescription model module.
 * @module model/CertificateDescription
 * @version 2019-03-01-preview
 */
class CertificateDescription {
    /**
     * Constructs a new <code>CertificateDescription</code>.
     * Describes the certificate details.
     * @alias module:model/CertificateDescription
     * @param thumbprint {String} Thumbprint of the primary certificate.
     */
    constructor(thumbprint) { 
        
        CertificateDescription.initialize(this, thumbprint);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, thumbprint) { 
        obj['thumbprint'] = thumbprint;
    }

    /**
     * Constructs a <code>CertificateDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CertificateDescription} obj Optional instance to populate.
     * @return {module:model/CertificateDescription} The populated <code>CertificateDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CertificateDescription();

            if (data.hasOwnProperty('thumbprint')) {
                obj['thumbprint'] = ApiClient.convertToType(data['thumbprint'], 'String');
            }
            if (data.hasOwnProperty('thumbprintSecondary')) {
                obj['thumbprintSecondary'] = ApiClient.convertToType(data['thumbprintSecondary'], 'String');
            }
            if (data.hasOwnProperty('x509StoreName')) {
                obj['x509StoreName'] = StoreName.constructFromObject(data['x509StoreName']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CertificateDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CertificateDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CertificateDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['thumbprint'] && !(typeof data['thumbprint'] === 'string' || data['thumbprint'] instanceof String)) {
            throw new Error("Expected the field `thumbprint` to be a primitive type in the JSON string but got " + data['thumbprint']);
        }
        // ensure the json data is a string
        if (data['thumbprintSecondary'] && !(typeof data['thumbprintSecondary'] === 'string' || data['thumbprintSecondary'] instanceof String)) {
            throw new Error("Expected the field `thumbprintSecondary` to be a primitive type in the JSON string but got " + data['thumbprintSecondary']);
        }

        return true;
    }


}

CertificateDescription.RequiredProperties = ["thumbprint"];

/**
 * Thumbprint of the primary certificate.
 * @member {String} thumbprint
 */
CertificateDescription.prototype['thumbprint'] = undefined;

/**
 * Thumbprint of the secondary certificate.
 * @member {String} thumbprintSecondary
 */
CertificateDescription.prototype['thumbprintSecondary'] = undefined;

/**
 * @member {module:model/StoreName} x509StoreName
 */
CertificateDescription.prototype['x509StoreName'] = undefined;






export default CertificateDescription;

