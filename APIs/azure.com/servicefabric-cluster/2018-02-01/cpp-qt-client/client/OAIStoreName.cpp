/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2018-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStoreName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStoreName::OAIStoreName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStoreName::OAIStoreName() {
    this->initializeModel();
}

OAIStoreName::~OAIStoreName() {}

void OAIStoreName::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIStoreName::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIStoreName::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AddressBook", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStoreName::ADDRESSBOOK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AuthRoot", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStoreName::AUTHROOT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CertificateAuthority", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStoreName::CERTIFICATEAUTHORITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Disallowed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStoreName::DISALLOWED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("My", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStoreName::MY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Root", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStoreName::ROOT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TrustedPeople", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStoreName::TRUSTEDPEOPLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TrustedPublisher", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStoreName::TRUSTEDPUBLISHER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIStoreName::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIStoreName::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIStoreName::ADDRESSBOOK:
            val = "AddressBook";
            break;
        case eOAIStoreName::AUTHROOT:
            val = "AuthRoot";
            break;
        case eOAIStoreName::CERTIFICATEAUTHORITY:
            val = "CertificateAuthority";
            break;
        case eOAIStoreName::DISALLOWED:
            val = "Disallowed";
            break;
        case eOAIStoreName::MY:
            val = "My";
            break;
        case eOAIStoreName::ROOT:
            val = "Root";
            break;
        case eOAIStoreName::TRUSTEDPEOPLE:
            val = "TrustedPeople";
            break;
        case eOAIStoreName::TRUSTEDPUBLISHER:
            val = "TrustedPublisher";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIStoreName::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIStoreName::eOAIStoreName OAIStoreName::getValue() const {
    return m_value;
}

void OAIStoreName::setValue(const OAIStoreName::eOAIStoreName& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIStoreName::isSet() const {
    
    return m_value_isSet;
}

bool OAIStoreName::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
