/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2018-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpointRangeDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpointRangeDescription::OAIEndpointRangeDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpointRangeDescription::OAIEndpointRangeDescription() {
    this->initializeModel();
}

OAIEndpointRangeDescription::~OAIEndpointRangeDescription() {}

void OAIEndpointRangeDescription::initializeModel() {

    m_end_port_isSet = false;
    m_end_port_isValid = false;

    m_start_port_isSet = false;
    m_start_port_isValid = false;
}

void OAIEndpointRangeDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndpointRangeDescription::fromJsonObject(QJsonObject json) {

    m_end_port_isValid = ::OpenAPI::fromJsonValue(m_end_port, json[QString("endPort")]);
    m_end_port_isSet = !json[QString("endPort")].isNull() && m_end_port_isValid;

    m_start_port_isValid = ::OpenAPI::fromJsonValue(m_start_port, json[QString("startPort")]);
    m_start_port_isSet = !json[QString("startPort")].isNull() && m_start_port_isValid;
}

QString OAIEndpointRangeDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndpointRangeDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_end_port_isSet) {
        obj.insert(QString("endPort"), ::OpenAPI::toJsonValue(m_end_port));
    }
    if (m_start_port_isSet) {
        obj.insert(QString("startPort"), ::OpenAPI::toJsonValue(m_start_port));
    }
    return obj;
}

qint32 OAIEndpointRangeDescription::getEndPort() const {
    return m_end_port;
}
void OAIEndpointRangeDescription::setEndPort(const qint32 &end_port) {
    m_end_port = end_port;
    m_end_port_isSet = true;
}

bool OAIEndpointRangeDescription::is_end_port_Set() const{
    return m_end_port_isSet;
}

bool OAIEndpointRangeDescription::is_end_port_Valid() const{
    return m_end_port_isValid;
}

qint32 OAIEndpointRangeDescription::getStartPort() const {
    return m_start_port;
}
void OAIEndpointRangeDescription::setStartPort(const qint32 &start_port) {
    m_start_port = start_port;
    m_start_port_isSet = true;
}

bool OAIEndpointRangeDescription::is_start_port_Set() const{
    return m_start_port_isSet;
}

bool OAIEndpointRangeDescription::is_start_port_Valid() const{
    return m_start_port_isValid;
}

bool OAIEndpointRangeDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_port_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_port_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndpointRangeDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_end_port_isValid && m_start_port_isValid && true;
}

} // namespace OpenAPI
