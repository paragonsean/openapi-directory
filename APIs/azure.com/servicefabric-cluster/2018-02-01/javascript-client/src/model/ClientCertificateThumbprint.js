/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2018-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClientCertificateThumbprint model module.
 * @module model/ClientCertificateThumbprint
 * @version 2018-02-01
 */
class ClientCertificateThumbprint {
    /**
     * Constructs a new <code>ClientCertificateThumbprint</code>.
     * Describes the client certificate details using thumbprint.
     * @alias module:model/ClientCertificateThumbprint
     * @param certificateThumbprint {String} The thumbprint of the client certificate.
     * @param isAdmin {Boolean} Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
     */
    constructor(certificateThumbprint, isAdmin) { 
        
        ClientCertificateThumbprint.initialize(this, certificateThumbprint, isAdmin);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, certificateThumbprint, isAdmin) { 
        obj['certificateThumbprint'] = certificateThumbprint;
        obj['isAdmin'] = isAdmin;
    }

    /**
     * Constructs a <code>ClientCertificateThumbprint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientCertificateThumbprint} obj Optional instance to populate.
     * @return {module:model/ClientCertificateThumbprint} The populated <code>ClientCertificateThumbprint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientCertificateThumbprint();

            if (data.hasOwnProperty('certificateThumbprint')) {
                obj['certificateThumbprint'] = ApiClient.convertToType(data['certificateThumbprint'], 'String');
            }
            if (data.hasOwnProperty('isAdmin')) {
                obj['isAdmin'] = ApiClient.convertToType(data['isAdmin'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientCertificateThumbprint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientCertificateThumbprint</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ClientCertificateThumbprint.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['certificateThumbprint'] && !(typeof data['certificateThumbprint'] === 'string' || data['certificateThumbprint'] instanceof String)) {
            throw new Error("Expected the field `certificateThumbprint` to be a primitive type in the JSON string but got " + data['certificateThumbprint']);
        }

        return true;
    }


}

ClientCertificateThumbprint.RequiredProperties = ["certificateThumbprint", "isAdmin"];

/**
 * The thumbprint of the client certificate.
 * @member {String} certificateThumbprint
 */
ClientCertificateThumbprint.prototype['certificateThumbprint'] = undefined;

/**
 * Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
 * @member {Boolean} isAdmin
 */
ClientCertificateThumbprint.prototype['isAdmin'] = undefined;






export default ClientCertificateThumbprint;

