/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2018-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AzureActiveDirectory model module.
 * @module model/AzureActiveDirectory
 * @version 2018-02-01
 */
class AzureActiveDirectory {
    /**
     * Constructs a new <code>AzureActiveDirectory</code>.
     * The settings to enable AAD authentication on the cluster.
     * @alias module:model/AzureActiveDirectory
     */
    constructor() { 
        
        AzureActiveDirectory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AzureActiveDirectory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AzureActiveDirectory} obj Optional instance to populate.
     * @return {module:model/AzureActiveDirectory} The populated <code>AzureActiveDirectory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AzureActiveDirectory();

            if (data.hasOwnProperty('clientApplication')) {
                obj['clientApplication'] = ApiClient.convertToType(data['clientApplication'], 'String');
            }
            if (data.hasOwnProperty('clusterApplication')) {
                obj['clusterApplication'] = ApiClient.convertToType(data['clusterApplication'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AzureActiveDirectory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AzureActiveDirectory</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clientApplication'] && !(typeof data['clientApplication'] === 'string' || data['clientApplication'] instanceof String)) {
            throw new Error("Expected the field `clientApplication` to be a primitive type in the JSON string but got " + data['clientApplication']);
        }
        // ensure the json data is a string
        if (data['clusterApplication'] && !(typeof data['clusterApplication'] === 'string' || data['clusterApplication'] instanceof String)) {
            throw new Error("Expected the field `clusterApplication` to be a primitive type in the JSON string but got " + data['clusterApplication']);
        }
        // ensure the json data is a string
        if (data['tenantId'] && !(typeof data['tenantId'] === 'string' || data['tenantId'] instanceof String)) {
            throw new Error("Expected the field `tenantId` to be a primitive type in the JSON string but got " + data['tenantId']);
        }

        return true;
    }


}



/**
 * Azure active directory client application id.
 * @member {String} clientApplication
 */
AzureActiveDirectory.prototype['clientApplication'] = undefined;

/**
 * Azure active directory cluster application id.
 * @member {String} clusterApplication
 */
AzureActiveDirectory.prototype['clusterApplication'] = undefined;

/**
 * Azure active directory tenant id.
 * @member {String} tenantId
 */
AzureActiveDirectory.prototype['tenantId'] = undefined;






export default AzureActiveDirectory;

