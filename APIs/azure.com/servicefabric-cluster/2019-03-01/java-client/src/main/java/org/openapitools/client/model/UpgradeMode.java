/*
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The upgrade mode of the cluster when new Service Fabric runtime version is available.    - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.   - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource. 
 */
@JsonAdapter(UpgradeMode.Adapter.class)
public enum UpgradeMode {
  
  AUTOMATIC("Automatic"),
  
  MANUAL("Manual");

  private String value;

  UpgradeMode(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static UpgradeMode fromValue(String value) {
    for (UpgradeMode b : UpgradeMode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<UpgradeMode> {
    @Override
    public void write(final JsonWriter jsonWriter, final UpgradeMode enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public UpgradeMode read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return UpgradeMode.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    UpgradeMode.fromValue(value);
  }
}

