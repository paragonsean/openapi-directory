/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationHealthPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationHealthPolicy::OAIApplicationHealthPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationHealthPolicy::OAIApplicationHealthPolicy() {
    this->initializeModel();
}

OAIApplicationHealthPolicy::~OAIApplicationHealthPolicy() {}

void OAIApplicationHealthPolicy::initializeModel() {

    m_default_service_type_health_policy_isSet = false;
    m_default_service_type_health_policy_isValid = false;

    m_service_type_health_policies_isSet = false;
    m_service_type_health_policies_isValid = false;
}

void OAIApplicationHealthPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationHealthPolicy::fromJsonObject(QJsonObject json) {

    m_default_service_type_health_policy_isValid = ::OpenAPI::fromJsonValue(m_default_service_type_health_policy, json[QString("defaultServiceTypeHealthPolicy")]);
    m_default_service_type_health_policy_isSet = !json[QString("defaultServiceTypeHealthPolicy")].isNull() && m_default_service_type_health_policy_isValid;

    m_service_type_health_policies_isValid = ::OpenAPI::fromJsonValue(m_service_type_health_policies, json[QString("serviceTypeHealthPolicies")]);
    m_service_type_health_policies_isSet = !json[QString("serviceTypeHealthPolicies")].isNull() && m_service_type_health_policies_isValid;
}

QString OAIApplicationHealthPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationHealthPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_default_service_type_health_policy.isSet()) {
        obj.insert(QString("defaultServiceTypeHealthPolicy"), ::OpenAPI::toJsonValue(m_default_service_type_health_policy));
    }
    if (m_service_type_health_policies.size() > 0) {
        obj.insert(QString("serviceTypeHealthPolicies"), ::OpenAPI::toJsonValue(m_service_type_health_policies));
    }
    return obj;
}

OAIServiceTypeHealthPolicy OAIApplicationHealthPolicy::getDefaultServiceTypeHealthPolicy() const {
    return m_default_service_type_health_policy;
}
void OAIApplicationHealthPolicy::setDefaultServiceTypeHealthPolicy(const OAIServiceTypeHealthPolicy &default_service_type_health_policy) {
    m_default_service_type_health_policy = default_service_type_health_policy;
    m_default_service_type_health_policy_isSet = true;
}

bool OAIApplicationHealthPolicy::is_default_service_type_health_policy_Set() const{
    return m_default_service_type_health_policy_isSet;
}

bool OAIApplicationHealthPolicy::is_default_service_type_health_policy_Valid() const{
    return m_default_service_type_health_policy_isValid;
}

QMap<QString, OAIServiceTypeHealthPolicy> OAIApplicationHealthPolicy::getServiceTypeHealthPolicies() const {
    return m_service_type_health_policies;
}
void OAIApplicationHealthPolicy::setServiceTypeHealthPolicies(const QMap<QString, OAIServiceTypeHealthPolicy> &service_type_health_policies) {
    m_service_type_health_policies = service_type_health_policies;
    m_service_type_health_policies_isSet = true;
}

bool OAIApplicationHealthPolicy::is_service_type_health_policies_Set() const{
    return m_service_type_health_policies_isSet;
}

bool OAIApplicationHealthPolicy::is_service_type_health_policies_Valid() const{
    return m_service_type_health_policies_isValid;
}

bool OAIApplicationHealthPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_service_type_health_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_type_health_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationHealthPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
