/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterHealthPolicy.h
 *
 * Defines a health policy used to evaluate the health of the cluster or of a cluster node. 
 */

#ifndef OAIClusterHealthPolicy_H
#define OAIClusterHealthPolicy_H

#include <QJsonObject>

#include "OAIApplicationHealthPolicy.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationHealthPolicy;

class OAIClusterHealthPolicy : public OAIObject {
public:
    OAIClusterHealthPolicy();
    OAIClusterHealthPolicy(QString json);
    ~OAIClusterHealthPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, OAIApplicationHealthPolicy> getApplicationHealthPolicies() const;
    void setApplicationHealthPolicies(const QMap<QString, OAIApplicationHealthPolicy> &application_health_policies);
    bool is_application_health_policies_Set() const;
    bool is_application_health_policies_Valid() const;

    qint32 getMaxPercentUnhealthyApplications() const;
    void setMaxPercentUnhealthyApplications(const qint32 &max_percent_unhealthy_applications);
    bool is_max_percent_unhealthy_applications_Set() const;
    bool is_max_percent_unhealthy_applications_Valid() const;

    qint32 getMaxPercentUnhealthyNodes() const;
    void setMaxPercentUnhealthyNodes(const qint32 &max_percent_unhealthy_nodes);
    bool is_max_percent_unhealthy_nodes_Set() const;
    bool is_max_percent_unhealthy_nodes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, OAIApplicationHealthPolicy> m_application_health_policies;
    bool m_application_health_policies_isSet;
    bool m_application_health_policies_isValid;

    qint32 m_max_percent_unhealthy_applications;
    bool m_max_percent_unhealthy_applications_isSet;
    bool m_max_percent_unhealthy_applications_isValid;

    qint32 m_max_percent_unhealthy_nodes;
    bool m_max_percent_unhealthy_nodes_isSet;
    bool m_max_percent_unhealthy_nodes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterHealthPolicy)

#endif // OAIClusterHealthPolicy_H
