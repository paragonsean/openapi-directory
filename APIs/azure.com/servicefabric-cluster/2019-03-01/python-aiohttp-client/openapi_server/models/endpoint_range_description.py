# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EndpointRangeDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_port: int=None, start_port: int=None):
        """EndpointRangeDescription - a model defined in OpenAPI

        :param end_port: The end_port of this EndpointRangeDescription.
        :param start_port: The start_port of this EndpointRangeDescription.
        """
        self.openapi_types = {
            'end_port': int,
            'start_port': int
        }

        self.attribute_map = {
            'end_port': 'endPort',
            'start_port': 'startPort'
        }

        self._end_port = end_port
        self._start_port = start_port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointRangeDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndpointRangeDescription of this EndpointRangeDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_port(self):
        """Gets the end_port of this EndpointRangeDescription.

        End port of a range of ports

        :return: The end_port of this EndpointRangeDescription.
        :rtype: int
        """
        return self._end_port

    @end_port.setter
    def end_port(self, end_port):
        """Sets the end_port of this EndpointRangeDescription.

        End port of a range of ports

        :param end_port: The end_port of this EndpointRangeDescription.
        :type end_port: int
        """
        if end_port is None:
            raise ValueError("Invalid value for `end_port`, must not be `None`")

        self._end_port = end_port

    @property
    def start_port(self):
        """Gets the start_port of this EndpointRangeDescription.

        Starting port of a range of ports

        :return: The start_port of this EndpointRangeDescription.
        :rtype: int
        """
        return self._start_port

    @start_port.setter
    def start_port(self, start_port):
        """Sets the start_port of this EndpointRangeDescription.

        Starting port of a range of ports

        :param start_port: The start_port of this EndpointRangeDescription.
        :type start_port: int
        """
        if start_port is None:
            raise ValueError("Invalid value for `start_port`, must not be `None`")

        self._start_port = start_port
