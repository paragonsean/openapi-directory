/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServerCertificateCommonName from './ServerCertificateCommonName';
import StoreName from './StoreName';

/**
 * The ServerCertificateCommonNames model module.
 * @module model/ServerCertificateCommonNames
 * @version 2019-03-01
 */
class ServerCertificateCommonNames {
    /**
     * Constructs a new <code>ServerCertificateCommonNames</code>.
     * Describes a list of server certificates referenced by common name that are used to secure the cluster.
     * @alias module:model/ServerCertificateCommonNames
     */
    constructor() { 
        
        ServerCertificateCommonNames.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServerCertificateCommonNames</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerCertificateCommonNames} obj Optional instance to populate.
     * @return {module:model/ServerCertificateCommonNames} The populated <code>ServerCertificateCommonNames</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerCertificateCommonNames();

            if (data.hasOwnProperty('commonNames')) {
                obj['commonNames'] = ApiClient.convertToType(data['commonNames'], [ServerCertificateCommonName]);
            }
            if (data.hasOwnProperty('x509StoreName')) {
                obj['x509StoreName'] = StoreName.constructFromObject(data['x509StoreName']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServerCertificateCommonNames</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServerCertificateCommonNames</code>.
     */
    static validateJSON(data) {
        if (data['commonNames']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['commonNames'])) {
                throw new Error("Expected the field `commonNames` to be an array in the JSON data but got " + data['commonNames']);
            }
            // validate the optional field `commonNames` (array)
            for (const item of data['commonNames']) {
                ServerCertificateCommonName.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The list of server certificates referenced by common name that are used to secure the cluster.
 * @member {Array.<module:model/ServerCertificateCommonName>} commonNames
 */
ServerCertificateCommonNames.prototype['commonNames'] = undefined;

/**
 * @member {module:model/StoreName} x509StoreName
 */
ServerCertificateCommonNames.prototype['x509StoreName'] = undefined;






export default ServerCertificateCommonNames;

