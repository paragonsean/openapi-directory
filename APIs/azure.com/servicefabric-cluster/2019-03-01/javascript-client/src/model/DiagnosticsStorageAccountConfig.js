/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DiagnosticsStorageAccountConfig model module.
 * @module model/DiagnosticsStorageAccountConfig
 * @version 2019-03-01
 */
class DiagnosticsStorageAccountConfig {
    /**
     * Constructs a new <code>DiagnosticsStorageAccountConfig</code>.
     * The storage account information for storing Service Fabric diagnostic logs.
     * @alias module:model/DiagnosticsStorageAccountConfig
     * @param blobEndpoint {String} The blob endpoint of the azure storage account.
     * @param protectedAccountKeyName {String} The protected diagnostics storage key name.
     * @param queueEndpoint {String} The queue endpoint of the azure storage account.
     * @param storageAccountName {String} The Azure storage account name.
     * @param tableEndpoint {String} The table endpoint of the azure storage account.
     */
    constructor(blobEndpoint, protectedAccountKeyName, queueEndpoint, storageAccountName, tableEndpoint) { 
        
        DiagnosticsStorageAccountConfig.initialize(this, blobEndpoint, protectedAccountKeyName, queueEndpoint, storageAccountName, tableEndpoint);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, blobEndpoint, protectedAccountKeyName, queueEndpoint, storageAccountName, tableEndpoint) { 
        obj['blobEndpoint'] = blobEndpoint;
        obj['protectedAccountKeyName'] = protectedAccountKeyName;
        obj['queueEndpoint'] = queueEndpoint;
        obj['storageAccountName'] = storageAccountName;
        obj['tableEndpoint'] = tableEndpoint;
    }

    /**
     * Constructs a <code>DiagnosticsStorageAccountConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiagnosticsStorageAccountConfig} obj Optional instance to populate.
     * @return {module:model/DiagnosticsStorageAccountConfig} The populated <code>DiagnosticsStorageAccountConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiagnosticsStorageAccountConfig();

            if (data.hasOwnProperty('blobEndpoint')) {
                obj['blobEndpoint'] = ApiClient.convertToType(data['blobEndpoint'], 'String');
            }
            if (data.hasOwnProperty('protectedAccountKeyName')) {
                obj['protectedAccountKeyName'] = ApiClient.convertToType(data['protectedAccountKeyName'], 'String');
            }
            if (data.hasOwnProperty('queueEndpoint')) {
                obj['queueEndpoint'] = ApiClient.convertToType(data['queueEndpoint'], 'String');
            }
            if (data.hasOwnProperty('storageAccountName')) {
                obj['storageAccountName'] = ApiClient.convertToType(data['storageAccountName'], 'String');
            }
            if (data.hasOwnProperty('tableEndpoint')) {
                obj['tableEndpoint'] = ApiClient.convertToType(data['tableEndpoint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiagnosticsStorageAccountConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiagnosticsStorageAccountConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DiagnosticsStorageAccountConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['blobEndpoint'] && !(typeof data['blobEndpoint'] === 'string' || data['blobEndpoint'] instanceof String)) {
            throw new Error("Expected the field `blobEndpoint` to be a primitive type in the JSON string but got " + data['blobEndpoint']);
        }
        // ensure the json data is a string
        if (data['protectedAccountKeyName'] && !(typeof data['protectedAccountKeyName'] === 'string' || data['protectedAccountKeyName'] instanceof String)) {
            throw new Error("Expected the field `protectedAccountKeyName` to be a primitive type in the JSON string but got " + data['protectedAccountKeyName']);
        }
        // ensure the json data is a string
        if (data['queueEndpoint'] && !(typeof data['queueEndpoint'] === 'string' || data['queueEndpoint'] instanceof String)) {
            throw new Error("Expected the field `queueEndpoint` to be a primitive type in the JSON string but got " + data['queueEndpoint']);
        }
        // ensure the json data is a string
        if (data['storageAccountName'] && !(typeof data['storageAccountName'] === 'string' || data['storageAccountName'] instanceof String)) {
            throw new Error("Expected the field `storageAccountName` to be a primitive type in the JSON string but got " + data['storageAccountName']);
        }
        // ensure the json data is a string
        if (data['tableEndpoint'] && !(typeof data['tableEndpoint'] === 'string' || data['tableEndpoint'] instanceof String)) {
            throw new Error("Expected the field `tableEndpoint` to be a primitive type in the JSON string but got " + data['tableEndpoint']);
        }

        return true;
    }


}

DiagnosticsStorageAccountConfig.RequiredProperties = ["blobEndpoint", "protectedAccountKeyName", "queueEndpoint", "storageAccountName", "tableEndpoint"];

/**
 * The blob endpoint of the azure storage account.
 * @member {String} blobEndpoint
 */
DiagnosticsStorageAccountConfig.prototype['blobEndpoint'] = undefined;

/**
 * The protected diagnostics storage key name.
 * @member {String} protectedAccountKeyName
 */
DiagnosticsStorageAccountConfig.prototype['protectedAccountKeyName'] = undefined;

/**
 * The queue endpoint of the azure storage account.
 * @member {String} queueEndpoint
 */
DiagnosticsStorageAccountConfig.prototype['queueEndpoint'] = undefined;

/**
 * The Azure storage account name.
 * @member {String} storageAccountName
 */
DiagnosticsStorageAccountConfig.prototype['storageAccountName'] = undefined;

/**
 * The table endpoint of the azure storage account.
 * @member {String} tableEndpoint
 */
DiagnosticsStorageAccountConfig.prototype['tableEndpoint'] = undefined;






export default DiagnosticsStorageAccountConfig;

