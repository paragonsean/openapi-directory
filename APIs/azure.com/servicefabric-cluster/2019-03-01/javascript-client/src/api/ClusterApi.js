/**
 * ServiceFabricManagementClient
 * Azure Service Fabric Resource Provider API Client
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Cluster from '../model/Cluster';
import ClusterListResult from '../model/ClusterListResult';
import ClusterUpdateParameters from '../model/ClusterUpdateParameters';
import ErrorModel from '../model/ErrorModel';

/**
* Cluster service.
* @module api/ClusterApi
* @version 2019-03-01
*/
export default class ClusterApi {

    /**
    * Constructs a new ClusterApi. 
    * @alias module:api/ClusterApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the clustersCreateOrUpdate operation.
     * @callback module:api/ClusterApi~clustersCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Cluster} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a Service Fabric cluster resource.
     * Create or update a Service Fabric cluster resource with the specified name.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} clusterName The name of the cluster resource.
     * @param {module:model/String} apiVersion The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01\" for this specification.
     * @param {String} subscriptionId The customer subscription identifier.
     * @param {module:model/Cluster} parameters The cluster resource.
     * @param {module:api/ClusterApi~clustersCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Cluster}
     */
    clustersCreateOrUpdate(resourceGroupName, clusterName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling clustersCreateOrUpdate");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling clustersCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling clustersCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling clustersCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling clustersCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Cluster;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clustersDelete operation.
     * @callback module:api/ClusterApi~clustersDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Service Fabric cluster resource.
     * Delete a Service Fabric cluster resource with the specified name.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} clusterName The name of the cluster resource.
     * @param {module:model/String} apiVersion The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01\" for this specification.
     * @param {String} subscriptionId The customer subscription identifier.
     * @param {module:api/ClusterApi~clustersDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    clustersDelete(resourceGroupName, clusterName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling clustersDelete");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling clustersDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling clustersDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling clustersDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clustersGet operation.
     * @callback module:api/ClusterApi~clustersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Cluster} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a Service Fabric cluster resource.
     * Get a Service Fabric cluster resource created or in the process of being created in the specified resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} clusterName The name of the cluster resource.
     * @param {module:model/String} apiVersion The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01\" for this specification.
     * @param {String} subscriptionId The customer subscription identifier.
     * @param {module:api/ClusterApi~clustersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Cluster}
     */
    clustersGet(resourceGroupName, clusterName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling clustersGet");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling clustersGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling clustersGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling clustersGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Cluster;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clustersList operation.
     * @callback module:api/ClusterApi~clustersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClusterListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the list of Service Fabric cluster resources created in the specified subscription.
     * Gets all Service Fabric cluster resources created or in the process of being created in the subscription.
     * @param {module:model/String} apiVersion The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01\" for this specification.
     * @param {String} subscriptionId The customer subscription identifier.
     * @param {module:api/ClusterApi~clustersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClusterListResult}
     */
    clustersList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling clustersList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling clustersList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ClusterListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/clusters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clustersListByResourceGroup operation.
     * @callback module:api/ClusterApi~clustersListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClusterListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the list of Service Fabric cluster resources created in the specified resource group.
     * Gets all Service Fabric cluster resources created or in the process of being created in the resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {module:model/String} apiVersion The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01\" for this specification.
     * @param {String} subscriptionId The customer subscription identifier.
     * @param {module:api/ClusterApi~clustersListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClusterListResult}
     */
    clustersListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling clustersListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling clustersListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling clustersListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ClusterListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clustersUpdate operation.
     * @callback module:api/ClusterApi~clustersUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Cluster} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the configuration of a Service Fabric cluster resource.
     * Update the configuration of a Service Fabric cluster resource with the specified name.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} clusterName The name of the cluster resource.
     * @param {module:model/String} apiVersion The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01\" for this specification.
     * @param {String} subscriptionId The customer subscription identifier.
     * @param {module:model/ClusterUpdateParameters} parameters The parameters which contains the property value and property name which used to update the cluster configuration.
     * @param {module:api/ClusterApi~clustersUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Cluster}
     */
    clustersUpdate(resourceGroupName, clusterName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling clustersUpdate");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling clustersUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling clustersUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling clustersUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling clustersUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Cluster;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
