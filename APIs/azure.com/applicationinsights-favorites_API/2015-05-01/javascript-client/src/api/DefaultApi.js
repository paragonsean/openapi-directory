/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for favorites.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationInsightsComponentFavorite from '../model/ApplicationInsightsComponentFavorite';

/**
* Default service.
* @module api/DefaultApi
* @version 2015-05-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the favoritesAdd operation.
     * @callback module:api/DefaultApi~favoritesAddCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentFavorite} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a new favorites to an Application Insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {String} favoriteId The Id of a specific favorite defined in the Application Insights component
     * @param {module:model/ApplicationInsightsComponentFavorite} favoriteProperties Properties that need to be specified to create a new favorite and add it to an Application Insights component.
     * @param {module:api/DefaultApi~favoritesAddCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentFavorite}
     */
    favoritesAdd(resourceGroupName, apiVersion, subscriptionId, resourceName, favoriteId, favoriteProperties, callback) {
      let postBody = favoriteProperties;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling favoritesAdd");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling favoritesAdd");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling favoritesAdd");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling favoritesAdd");
      }
      // verify the required parameter 'favoriteId' is set
      if (favoriteId === undefined || favoriteId === null) {
        throw new Error("Missing the required parameter 'favoriteId' when calling favoritesAdd");
      }
      // verify the required parameter 'favoriteProperties' is set
      if (favoriteProperties === undefined || favoriteProperties === null) {
        throw new Error("Missing the required parameter 'favoriteProperties' when calling favoritesAdd");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName,
        'favoriteId': favoriteId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentFavorite;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/favorites/{favoriteId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the favoritesDelete operation.
     * @callback module:api/DefaultApi~favoritesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a favorite that is associated to an Application Insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {String} favoriteId The Id of a specific favorite defined in the Application Insights component
     * @param {module:api/DefaultApi~favoritesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    favoritesDelete(resourceGroupName, apiVersion, subscriptionId, resourceName, favoriteId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling favoritesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling favoritesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling favoritesDelete");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling favoritesDelete");
      }
      // verify the required parameter 'favoriteId' is set
      if (favoriteId === undefined || favoriteId === null) {
        throw new Error("Missing the required parameter 'favoriteId' when calling favoritesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName,
        'favoriteId': favoriteId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/favorites/{favoriteId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the favoritesGet operation.
     * @callback module:api/DefaultApi~favoritesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentFavorite} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a single favorite by its FavoriteId, defined within an Application Insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {String} favoriteId The Id of a specific favorite defined in the Application Insights component
     * @param {module:api/DefaultApi~favoritesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentFavorite}
     */
    favoritesGet(resourceGroupName, apiVersion, subscriptionId, resourceName, favoriteId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling favoritesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling favoritesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling favoritesGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling favoritesGet");
      }
      // verify the required parameter 'favoriteId' is set
      if (favoriteId === undefined || favoriteId === null) {
        throw new Error("Missing the required parameter 'favoriteId' when calling favoritesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName,
        'favoriteId': favoriteId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentFavorite;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/favorites/{favoriteId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the favoritesList operation.
     * @callback module:api/DefaultApi~favoritesListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ApplicationInsightsComponentFavorite>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of favorites defined within an Application Insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [favoriteType = 'shared')] The type of favorite. Value can be either shared or user.
     * @param {module:model/String} [sourceType] Source type of favorite to return. When left out, the source type defaults to 'other' (not present in this enum).
     * @param {Boolean} [canFetchContent] Flag indicating whether or not to return the full content for each applicable favorite. If false, only return summary content for favorites.
     * @param {Array.<String>} [tags] Tags that must be present on each favorite returned.
     * @param {module:api/DefaultApi~favoritesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ApplicationInsightsComponentFavorite>}
     */
    favoritesList(resourceGroupName, apiVersion, subscriptionId, resourceName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling favoritesList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling favoritesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling favoritesList");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling favoritesList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion,
        'favoriteType': opts['favoriteType'],
        'sourceType': opts['sourceType'],
        'canFetchContent': opts['canFetchContent'],
        'tags': this.apiClient.buildCollectionParam(opts['tags'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ApplicationInsightsComponentFavorite];
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/favorites', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the favoritesUpdate operation.
     * @callback module:api/DefaultApi~favoritesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentFavorite} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a favorite that has already been added to an Application Insights component.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {String} favoriteId The Id of a specific favorite defined in the Application Insights component
     * @param {module:model/ApplicationInsightsComponentFavorite} favoriteProperties Properties that need to be specified to update the existing favorite.
     * @param {module:api/DefaultApi~favoritesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentFavorite}
     */
    favoritesUpdate(resourceGroupName, apiVersion, subscriptionId, resourceName, favoriteId, favoriteProperties, callback) {
      let postBody = favoriteProperties;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling favoritesUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling favoritesUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling favoritesUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling favoritesUpdate");
      }
      // verify the required parameter 'favoriteId' is set
      if (favoriteId === undefined || favoriteId === null) {
        throw new Error("Missing the required parameter 'favoriteId' when calling favoritesUpdate");
      }
      // verify the required parameter 'favoriteProperties' is set
      if (favoriteProperties === undefined || favoriteProperties === null) {
        throw new Error("Missing the required parameter 'favoriteProperties' when calling favoritesUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'resourceName': resourceName,
        'favoriteId': favoriteId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentFavorite;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/favorites/{favoriteId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
