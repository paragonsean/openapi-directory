/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for favorites.
 *
 * The version of the OpenAPI document: 2015-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationInsightsComponentFavorite.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationInsightsComponentFavorite::OAIApplicationInsightsComponentFavorite(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationInsightsComponentFavorite::OAIApplicationInsightsComponentFavorite() {
    this->initializeModel();
}

OAIApplicationInsightsComponentFavorite::~OAIApplicationInsightsComponentFavorite() {}

void OAIApplicationInsightsComponentFavorite::initializeModel() {

    m_category_isSet = false;
    m_category_isValid = false;

    m_config_isSet = false;
    m_config_isValid = false;

    m_favorite_id_isSet = false;
    m_favorite_id_isValid = false;

    m_favorite_type_isSet = false;
    m_favorite_type_isValid = false;

    m_is_generated_from_template_isSet = false;
    m_is_generated_from_template_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_source_type_isSet = false;
    m_source_type_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_time_modified_isSet = false;
    m_time_modified_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIApplicationInsightsComponentFavorite::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationInsightsComponentFavorite::fromJsonObject(QJsonObject json) {

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("Category")]);
    m_category_isSet = !json[QString("Category")].isNull() && m_category_isValid;

    m_config_isValid = ::OpenAPI::fromJsonValue(m_config, json[QString("Config")]);
    m_config_isSet = !json[QString("Config")].isNull() && m_config_isValid;

    m_favorite_id_isValid = ::OpenAPI::fromJsonValue(m_favorite_id, json[QString("FavoriteId")]);
    m_favorite_id_isSet = !json[QString("FavoriteId")].isNull() && m_favorite_id_isValid;

    m_favorite_type_isValid = ::OpenAPI::fromJsonValue(m_favorite_type, json[QString("FavoriteType")]);
    m_favorite_type_isSet = !json[QString("FavoriteType")].isNull() && m_favorite_type_isValid;

    m_is_generated_from_template_isValid = ::OpenAPI::fromJsonValue(m_is_generated_from_template, json[QString("IsGeneratedFromTemplate")]);
    m_is_generated_from_template_isSet = !json[QString("IsGeneratedFromTemplate")].isNull() && m_is_generated_from_template_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_source_type_isValid = ::OpenAPI::fromJsonValue(m_source_type, json[QString("SourceType")]);
    m_source_type_isSet = !json[QString("SourceType")].isNull() && m_source_type_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_time_modified_isValid = ::OpenAPI::fromJsonValue(m_time_modified, json[QString("TimeModified")]);
    m_time_modified_isSet = !json[QString("TimeModified")].isNull() && m_time_modified_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("UserId")]);
    m_user_id_isSet = !json[QString("UserId")].isNull() && m_user_id_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("Version")]);
    m_version_isSet = !json[QString("Version")].isNull() && m_version_isValid;
}

QString OAIApplicationInsightsComponentFavorite::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationInsightsComponentFavorite::asJsonObject() const {
    QJsonObject obj;
    if (m_category_isSet) {
        obj.insert(QString("Category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_config_isSet) {
        obj.insert(QString("Config"), ::OpenAPI::toJsonValue(m_config));
    }
    if (m_favorite_id_isSet) {
        obj.insert(QString("FavoriteId"), ::OpenAPI::toJsonValue(m_favorite_id));
    }
    if (m_favorite_type_isSet) {
        obj.insert(QString("FavoriteType"), ::OpenAPI::toJsonValue(m_favorite_type));
    }
    if (m_is_generated_from_template_isSet) {
        obj.insert(QString("IsGeneratedFromTemplate"), ::OpenAPI::toJsonValue(m_is_generated_from_template));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_source_type_isSet) {
        obj.insert(QString("SourceType"), ::OpenAPI::toJsonValue(m_source_type));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_time_modified_isSet) {
        obj.insert(QString("TimeModified"), ::OpenAPI::toJsonValue(m_time_modified));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("UserId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_version_isSet) {
        obj.insert(QString("Version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAIApplicationInsightsComponentFavorite::getCategory() const {
    return m_category;
}
void OAIApplicationInsightsComponentFavorite::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIApplicationInsightsComponentFavorite::is_category_Set() const{
    return m_category_isSet;
}

bool OAIApplicationInsightsComponentFavorite::is_category_Valid() const{
    return m_category_isValid;
}

QString OAIApplicationInsightsComponentFavorite::getConfig() const {
    return m_config;
}
void OAIApplicationInsightsComponentFavorite::setConfig(const QString &config) {
    m_config = config;
    m_config_isSet = true;
}

bool OAIApplicationInsightsComponentFavorite::is_config_Set() const{
    return m_config_isSet;
}

bool OAIApplicationInsightsComponentFavorite::is_config_Valid() const{
    return m_config_isValid;
}

QString OAIApplicationInsightsComponentFavorite::getFavoriteId() const {
    return m_favorite_id;
}
void OAIApplicationInsightsComponentFavorite::setFavoriteId(const QString &favorite_id) {
    m_favorite_id = favorite_id;
    m_favorite_id_isSet = true;
}

bool OAIApplicationInsightsComponentFavorite::is_favorite_id_Set() const{
    return m_favorite_id_isSet;
}

bool OAIApplicationInsightsComponentFavorite::is_favorite_id_Valid() const{
    return m_favorite_id_isValid;
}

QString OAIApplicationInsightsComponentFavorite::getFavoriteType() const {
    return m_favorite_type;
}
void OAIApplicationInsightsComponentFavorite::setFavoriteType(const QString &favorite_type) {
    m_favorite_type = favorite_type;
    m_favorite_type_isSet = true;
}

bool OAIApplicationInsightsComponentFavorite::is_favorite_type_Set() const{
    return m_favorite_type_isSet;
}

bool OAIApplicationInsightsComponentFavorite::is_favorite_type_Valid() const{
    return m_favorite_type_isValid;
}

bool OAIApplicationInsightsComponentFavorite::isIsGeneratedFromTemplate() const {
    return m_is_generated_from_template;
}
void OAIApplicationInsightsComponentFavorite::setIsGeneratedFromTemplate(const bool &is_generated_from_template) {
    m_is_generated_from_template = is_generated_from_template;
    m_is_generated_from_template_isSet = true;
}

bool OAIApplicationInsightsComponentFavorite::is_is_generated_from_template_Set() const{
    return m_is_generated_from_template_isSet;
}

bool OAIApplicationInsightsComponentFavorite::is_is_generated_from_template_Valid() const{
    return m_is_generated_from_template_isValid;
}

QString OAIApplicationInsightsComponentFavorite::getName() const {
    return m_name;
}
void OAIApplicationInsightsComponentFavorite::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApplicationInsightsComponentFavorite::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApplicationInsightsComponentFavorite::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIApplicationInsightsComponentFavorite::getSourceType() const {
    return m_source_type;
}
void OAIApplicationInsightsComponentFavorite::setSourceType(const QString &source_type) {
    m_source_type = source_type;
    m_source_type_isSet = true;
}

bool OAIApplicationInsightsComponentFavorite::is_source_type_Set() const{
    return m_source_type_isSet;
}

bool OAIApplicationInsightsComponentFavorite::is_source_type_Valid() const{
    return m_source_type_isValid;
}

QList<QString> OAIApplicationInsightsComponentFavorite::getTags() const {
    return m_tags;
}
void OAIApplicationInsightsComponentFavorite::setTags(const QList<QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIApplicationInsightsComponentFavorite::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIApplicationInsightsComponentFavorite::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIApplicationInsightsComponentFavorite::getTimeModified() const {
    return m_time_modified;
}
void OAIApplicationInsightsComponentFavorite::setTimeModified(const QString &time_modified) {
    m_time_modified = time_modified;
    m_time_modified_isSet = true;
}

bool OAIApplicationInsightsComponentFavorite::is_time_modified_Set() const{
    return m_time_modified_isSet;
}

bool OAIApplicationInsightsComponentFavorite::is_time_modified_Valid() const{
    return m_time_modified_isValid;
}

QString OAIApplicationInsightsComponentFavorite::getUserId() const {
    return m_user_id;
}
void OAIApplicationInsightsComponentFavorite::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIApplicationInsightsComponentFavorite::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIApplicationInsightsComponentFavorite::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAIApplicationInsightsComponentFavorite::getVersion() const {
    return m_version;
}
void OAIApplicationInsightsComponentFavorite::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIApplicationInsightsComponentFavorite::is_version_Set() const{
    return m_version_isSet;
}

bool OAIApplicationInsightsComponentFavorite::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIApplicationInsightsComponentFavorite::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_favorite_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_favorite_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_generated_from_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationInsightsComponentFavorite::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
