/**
 * ML Team Account Management Client
 * These APIs allow end users to operate on Azure Machine Learning Team Account resources. They support CRUD operations for Azure Machine Learning Team Accounts.
 *
 * The version of the OpenAPI document: 2017-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StorageAccountProperties model module.
 * @module model/StorageAccountProperties
 * @version 2017-05-01-preview
 */
class StorageAccountProperties {
    /**
     * Constructs a new <code>StorageAccountProperties</code>.
     * The properties of a storage account for a machine learning team account.
     * @alias module:model/StorageAccountProperties
     * @param accessKey {String} The access key to the storage account.
     * @param storageAccountId {String} The fully qualified arm Id of the storage account.
     */
    constructor(accessKey, storageAccountId) { 
        
        StorageAccountProperties.initialize(this, accessKey, storageAccountId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessKey, storageAccountId) { 
        obj['accessKey'] = accessKey;
        obj['storageAccountId'] = storageAccountId;
    }

    /**
     * Constructs a <code>StorageAccountProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageAccountProperties} obj Optional instance to populate.
     * @return {module:model/StorageAccountProperties} The populated <code>StorageAccountProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageAccountProperties();

            if (data.hasOwnProperty('accessKey')) {
                obj['accessKey'] = ApiClient.convertToType(data['accessKey'], 'String');
            }
            if (data.hasOwnProperty('storageAccountId')) {
                obj['storageAccountId'] = ApiClient.convertToType(data['storageAccountId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageAccountProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageAccountProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StorageAccountProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accessKey'] && !(typeof data['accessKey'] === 'string' || data['accessKey'] instanceof String)) {
            throw new Error("Expected the field `accessKey` to be a primitive type in the JSON string but got " + data['accessKey']);
        }
        // ensure the json data is a string
        if (data['storageAccountId'] && !(typeof data['storageAccountId'] === 'string' || data['storageAccountId'] instanceof String)) {
            throw new Error("Expected the field `storageAccountId` to be a primitive type in the JSON string but got " + data['storageAccountId']);
        }

        return true;
    }


}

StorageAccountProperties.RequiredProperties = ["accessKey", "storageAccountId"];

/**
 * The access key to the storage account.
 * @member {String} accessKey
 */
StorageAccountProperties.prototype['accessKey'] = undefined;

/**
 * The fully qualified arm Id of the storage account.
 * @member {String} storageAccountId
 */
StorageAccountProperties.prototype['storageAccountId'] = undefined;






export default StorageAccountProperties;

