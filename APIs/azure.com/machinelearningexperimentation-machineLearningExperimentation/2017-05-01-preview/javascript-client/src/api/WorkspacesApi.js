/**
 * ML Team Account Management Client
 * These APIs allow end users to operate on Azure Machine Learning Team Account resources. They support CRUD operations for Azure Machine Learning Team Accounts.
 *
 * The version of the OpenAPI document: 2017-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Workspace from '../model/Workspace';
import WorkspaceListResult from '../model/WorkspaceListResult';
import WorkspaceUpdateParameters from '../model/WorkspaceUpdateParameters';

/**
* Workspaces service.
* @module api/WorkspacesApi
* @version 2017-05-01-preview
*/
export default class WorkspacesApi {

    /**
    * Constructs a new WorkspacesApi. 
    * @alias module:api/WorkspacesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the workspacesCreateOrUpdate operation.
     * @callback module:api/WorkspacesApi~workspacesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Workspace} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a machine learning workspace with the specified parameters.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId The Microsoft Azure subscription ID.
     * @param {String} resourceGroupName The name of the resource group to which the machine learning team account belongs.
     * @param {String} accountName The name of the machine learning team account.
     * @param {String} workspaceName The name of the machine learning team account workspace.
     * @param {module:model/Workspace} parameters The parameters for creating or updating a machine learning workspace.
     * @param {module:api/WorkspacesApi~workspacesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Workspace}
     */
    workspacesCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, accountName, workspaceName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspacesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspacesCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspacesCreateOrUpdate");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling workspacesCreateOrUpdate");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling workspacesCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling workspacesCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'accountName': accountName,
        'workspaceName': workspaceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Workspace;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces/{workspaceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspacesDelete operation.
     * @callback module:api/WorkspacesApi~workspacesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a machine learning workspace.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId The Microsoft Azure subscription ID.
     * @param {String} resourceGroupName The name of the resource group to which the machine learning team account belongs.
     * @param {String} accountName The name of the machine learning team account.
     * @param {String} workspaceName The name of the machine learning team account workspace.
     * @param {module:api/WorkspacesApi~workspacesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    workspacesDelete(apiVersion, subscriptionId, resourceGroupName, accountName, workspaceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspacesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspacesDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspacesDelete");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling workspacesDelete");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling workspacesDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'accountName': accountName,
        'workspaceName': workspaceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces/{workspaceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspacesGet operation.
     * @callback module:api/WorkspacesApi~workspacesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Workspace} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the properties of the specified machine learning workspace.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId The Microsoft Azure subscription ID.
     * @param {String} resourceGroupName The name of the resource group to which the machine learning team account belongs.
     * @param {String} accountName The name of the machine learning team account.
     * @param {String} workspaceName The name of the machine learning team account workspace.
     * @param {module:api/WorkspacesApi~workspacesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Workspace}
     */
    workspacesGet(apiVersion, subscriptionId, resourceGroupName, accountName, workspaceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspacesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspacesGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspacesGet");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling workspacesGet");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling workspacesGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'accountName': accountName,
        'workspaceName': workspaceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Workspace;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces/{workspaceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspacesListByAccounts operation.
     * @callback module:api/WorkspacesApi~workspacesListByAccountsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkspaceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the available machine learning workspaces under the specified team account.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId The Microsoft Azure subscription ID.
     * @param {String} accountName The name of the machine learning team account.
     * @param {String} resourceGroupName The name of the resource group to which the machine learning team account belongs.
     * @param {module:api/WorkspacesApi~workspacesListByAccountsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkspaceListResult}
     */
    workspacesListByAccounts(apiVersion, subscriptionId, accountName, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspacesListByAccounts");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspacesListByAccounts");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling workspacesListByAccounts");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspacesListByAccounts");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'accountName': accountName,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkspaceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspacesUpdate operation.
     * @callback module:api/WorkspacesApi~workspacesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Workspace} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a machine learning workspace with the specified parameters.
     * @param {String} apiVersion The client API version.
     * @param {String} subscriptionId The Microsoft Azure subscription ID.
     * @param {String} resourceGroupName The name of the resource group to which the machine learning team account belongs.
     * @param {String} accountName The name of the machine learning team account.
     * @param {String} workspaceName The name of the machine learning team account workspace.
     * @param {module:model/WorkspaceUpdateParameters} parameters The parameters for updating a machine learning workspace.
     * @param {module:api/WorkspacesApi~workspacesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Workspace}
     */
    workspacesUpdate(apiVersion, subscriptionId, resourceGroupName, accountName, workspaceName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspacesUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspacesUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspacesUpdate");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling workspacesUpdate");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling workspacesUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling workspacesUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'accountName': accountName,
        'workspaceName': workspaceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Workspace;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningExperimentation/accounts/{accountName}/workspaces/{workspaceName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
