# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountPropertiesUpdateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, friendly_name: str=None, seats: str=None, storage_account_key: str=None):
        """AccountPropertiesUpdateParameters - a model defined in OpenAPI

        :param description: The description of this AccountPropertiesUpdateParameters.
        :param friendly_name: The friendly_name of this AccountPropertiesUpdateParameters.
        :param seats: The seats of this AccountPropertiesUpdateParameters.
        :param storage_account_key: The storage_account_key of this AccountPropertiesUpdateParameters.
        """
        self.openapi_types = {
            'description': str,
            'friendly_name': str,
            'seats': str,
            'storage_account_key': str
        }

        self.attribute_map = {
            'description': 'description',
            'friendly_name': 'friendlyName',
            'seats': 'seats',
            'storage_account_key': 'storageAccountKey'
        }

        self._description = description
        self._friendly_name = friendly_name
        self._seats = seats
        self._storage_account_key = storage_account_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountPropertiesUpdateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountPropertiesUpdateParameters of this AccountPropertiesUpdateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this AccountPropertiesUpdateParameters.

        The description of this workspace.

        :return: The description of this AccountPropertiesUpdateParameters.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AccountPropertiesUpdateParameters.

        The description of this workspace.

        :param description: The description of this AccountPropertiesUpdateParameters.
        :type description: str
        """

        self._description = description

    @property
    def friendly_name(self):
        """Gets the friendly_name of this AccountPropertiesUpdateParameters.

        The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created

        :return: The friendly_name of this AccountPropertiesUpdateParameters.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this AccountPropertiesUpdateParameters.

        The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created

        :param friendly_name: The friendly_name of this AccountPropertiesUpdateParameters.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def seats(self):
        """Gets the seats of this AccountPropertiesUpdateParameters.

        The no of users/seats who can access this team account. This property defines the charge on the team account.

        :return: The seats of this AccountPropertiesUpdateParameters.
        :rtype: str
        """
        return self._seats

    @seats.setter
    def seats(self, seats):
        """Sets the seats of this AccountPropertiesUpdateParameters.

        The no of users/seats who can access this team account. This property defines the charge on the team account.

        :param seats: The seats of this AccountPropertiesUpdateParameters.
        :type seats: str
        """

        self._seats = seats

    @property
    def storage_account_key(self):
        """Gets the storage_account_key of this AccountPropertiesUpdateParameters.

        The key for storage account associated with this team account

        :return: The storage_account_key of this AccountPropertiesUpdateParameters.
        :rtype: str
        """
        return self._storage_account_key

    @storage_account_key.setter
    def storage_account_key(self, storage_account_key):
        """Sets the storage_account_key of this AccountPropertiesUpdateParameters.

        The key for storage account associated with this team account

        :param storage_account_key: The storage_account_key of this AccountPropertiesUpdateParameters.
        :type storage_account_key: str
        """

        self._storage_account_key = storage_account_key
