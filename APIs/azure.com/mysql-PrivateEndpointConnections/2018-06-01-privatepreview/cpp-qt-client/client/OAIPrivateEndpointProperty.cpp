/**
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2018-06-01-privatepreview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrivateEndpointProperty.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrivateEndpointProperty::OAIPrivateEndpointProperty(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrivateEndpointProperty::OAIPrivateEndpointProperty() {
    this->initializeModel();
}

OAIPrivateEndpointProperty::~OAIPrivateEndpointProperty() {}

void OAIPrivateEndpointProperty::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAIPrivateEndpointProperty::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrivateEndpointProperty::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAIPrivateEndpointProperty::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrivateEndpointProperty::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    return obj;
}

QString OAIPrivateEndpointProperty::getId() const {
    return m_id;
}
void OAIPrivateEndpointProperty::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPrivateEndpointProperty::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPrivateEndpointProperty::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIPrivateEndpointProperty::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrivateEndpointProperty::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
