/**
 * PolicyEventsClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-08-09-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPolicyEventsQueryResultsTable_metadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPolicyEventsQueryResultsTable_metadata::OAIPolicyEventsQueryResultsTable_metadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPolicyEventsQueryResultsTable_metadata::OAIPolicyEventsQueryResultsTable_metadata() {
    this->initializeModel();
}

OAIPolicyEventsQueryResultsTable_metadata::~OAIPolicyEventsQueryResultsTable_metadata() {}

void OAIPolicyEventsQueryResultsTable_metadata::initializeModel() {

    m_generated_query_isSet = false;
    m_generated_query_isValid = false;
}

void OAIPolicyEventsQueryResultsTable_metadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPolicyEventsQueryResultsTable_metadata::fromJsonObject(QJsonObject json) {

    m_generated_query_isValid = ::OpenAPI::fromJsonValue(m_generated_query, json[QString("generatedQuery")]);
    m_generated_query_isSet = !json[QString("generatedQuery")].isNull() && m_generated_query_isValid;
}

QString OAIPolicyEventsQueryResultsTable_metadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPolicyEventsQueryResultsTable_metadata::asJsonObject() const {
    QJsonObject obj;
    if (m_generated_query_isSet) {
        obj.insert(QString("generatedQuery"), ::OpenAPI::toJsonValue(m_generated_query));
    }
    return obj;
}

QString OAIPolicyEventsQueryResultsTable_metadata::getGeneratedQuery() const {
    return m_generated_query;
}
void OAIPolicyEventsQueryResultsTable_metadata::setGeneratedQuery(const QString &generated_query) {
    m_generated_query = generated_query;
    m_generated_query_isSet = true;
}

bool OAIPolicyEventsQueryResultsTable_metadata::is_generated_query_Set() const{
    return m_generated_query_isSet;
}

bool OAIPolicyEventsQueryResultsTable_metadata::is_generated_query_Valid() const{
    return m_generated_query_isValid;
}

bool OAIPolicyEventsQueryResultsTable_metadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_generated_query_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPolicyEventsQueryResultsTable_metadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
