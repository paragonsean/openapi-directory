/**
 * PolicyEventsClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-08-09-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PolicyEventsQueryResultsTableMetadata from './PolicyEventsQueryResultsTableMetadata';

/**
 * The PolicyEventsQueryResultsTable model module.
 * @module model/PolicyEventsQueryResultsTable
 * @version 2017-08-09-preview
 */
class PolicyEventsQueryResultsTable {
    /**
     * Constructs a new <code>PolicyEventsQueryResultsTable</code>.
     * Query results table.
     * @alias module:model/PolicyEventsQueryResultsTable
     */
    constructor() { 
        
        PolicyEventsQueryResultsTable.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PolicyEventsQueryResultsTable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PolicyEventsQueryResultsTable} obj Optional instance to populate.
     * @return {module:model/PolicyEventsQueryResultsTable} The populated <code>PolicyEventsQueryResultsTable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PolicyEventsQueryResultsTable();

            if (data.hasOwnProperty('columns')) {
                obj['columns'] = ApiClient.convertToType(data['columns'], {'String': Object});
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = PolicyEventsQueryResultsTableMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('rows')) {
                obj['rows'] = ApiClient.convertToType(data['rows'], [[Object]]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PolicyEventsQueryResultsTable</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PolicyEventsQueryResultsTable</code>.
     */
    static validateJSON(data) {
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          PolicyEventsQueryResultsTableMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['rows'])) {
            throw new Error("Expected the field `rows` to be an array in the JSON data but got " + data['rows']);
        }

        return true;
    }


}



/**
 * List of columns included in query results.
 * @member {Object.<String, Object>} columns
 */
PolicyEventsQueryResultsTable.prototype['columns'] = undefined;

/**
 * @member {module:model/PolicyEventsQueryResultsTableMetadata} metadata
 */
PolicyEventsQueryResultsTable.prototype['metadata'] = undefined;

/**
 * Query result rows, each representing a policy event record.
 * @member {Array.<Array.<Object>>} rows
 */
PolicyEventsQueryResultsTable.prototype['rows'] = undefined;






export default PolicyEventsQueryResultsTable;

