/*
 * DomainRegistrationProvider API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerAvailabilitiesInner;
import org.openapitools.client.model.DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerDimensionsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Definition of a single resource metric.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:08:32.637951-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner {
  public static final String SERIALIZED_NAME_AGGREGATION_TYPE = "aggregationType";
  @SerializedName(SERIALIZED_NAME_AGGREGATION_TYPE)
  private String aggregationType;

  public static final String SERIALIZED_NAME_AVAILABILITIES = "availabilities";
  @SerializedName(SERIALIZED_NAME_AVAILABILITIES)
  private List<DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerAvailabilitiesInner> availabilities = new ArrayList<>();

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_DIMENSIONS = "dimensions";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS)
  private List<DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerDimensionsInner> dimensions = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_DESCRIPTION = "displayDescription";
  @SerializedName(SERIALIZED_NAME_DISPLAY_DESCRIPTION)
  private String displayDescription;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENABLE_REGIONAL_MDM_ACCOUNT = "enableRegionalMdmAccount";
  @SerializedName(SERIALIZED_NAME_ENABLE_REGIONAL_MDM_ACCOUNT)
  private Boolean enableRegionalMdmAccount;

  public static final String SERIALIZED_NAME_FILL_GAP_WITH_ZERO = "fillGapWithZero";
  @SerializedName(SERIALIZED_NAME_FILL_GAP_WITH_ZERO)
  private Boolean fillGapWithZero;

  public static final String SERIALIZED_NAME_IS_INTERNAL = "isInternal";
  @SerializedName(SERIALIZED_NAME_IS_INTERNAL)
  private Boolean isInternal;

  public static final String SERIALIZED_NAME_METRIC_FILTER_PATTERN = "metricFilterPattern";
  @SerializedName(SERIALIZED_NAME_METRIC_FILTER_PATTERN)
  private String metricFilterPattern;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SOURCE_MDM_ACCOUNT = "sourceMdmAccount";
  @SerializedName(SERIALIZED_NAME_SOURCE_MDM_ACCOUNT)
  private String sourceMdmAccount;

  public static final String SERIALIZED_NAME_SOURCE_MDM_NAMESPACE = "sourceMdmNamespace";
  @SerializedName(SERIALIZED_NAME_SOURCE_MDM_NAMESPACE)
  private String sourceMdmNamespace;

  public static final String SERIALIZED_NAME_SUPPORTS_INSTANCE_LEVEL_AGGREGATION = "supportsInstanceLevelAggregation";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_INSTANCE_LEVEL_AGGREGATION)
  private Boolean supportsInstanceLevelAggregation;

  public static final String SERIALIZED_NAME_UNIT = "unit";
  @SerializedName(SERIALIZED_NAME_UNIT)
  private String unit;

  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner() {
  }

  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner aggregationType(String aggregationType) {
    this.aggregationType = aggregationType;
    return this;
  }

  /**
   * Get aggregationType
   * @return aggregationType
   */
  @javax.annotation.Nullable
  public String getAggregationType() {
    return aggregationType;
  }

  public void setAggregationType(String aggregationType) {
    this.aggregationType = aggregationType;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner availabilities(List<DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerAvailabilitiesInner> availabilities) {
    this.availabilities = availabilities;
    return this;
  }

  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner addAvailabilitiesItem(DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerAvailabilitiesInner availabilitiesItem) {
    if (this.availabilities == null) {
      this.availabilities = new ArrayList<>();
    }
    this.availabilities.add(availabilitiesItem);
    return this;
  }

  /**
   * Get availabilities
   * @return availabilities
   */
  @javax.annotation.Nullable
  public List<DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerAvailabilitiesInner> getAvailabilities() {
    return availabilities;
  }

  public void setAvailabilities(List<DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerAvailabilitiesInner> availabilities) {
    this.availabilities = availabilities;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner category(String category) {
    this.category = category;
    return this;
  }

  /**
   * Get category
   * @return category
   */
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner dimensions(List<DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerDimensionsInner> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner addDimensionsItem(DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerDimensionsInner dimensionsItem) {
    if (this.dimensions == null) {
      this.dimensions = new ArrayList<>();
    }
    this.dimensions.add(dimensionsItem);
    return this;
  }

  /**
   * Get dimensions
   * @return dimensions
   */
  @javax.annotation.Nullable
  public List<DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerDimensionsInner> getDimensions() {
    return dimensions;
  }

  public void setDimensions(List<DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerDimensionsInner> dimensions) {
    this.dimensions = dimensions;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner displayDescription(String displayDescription) {
    this.displayDescription = displayDescription;
    return this;
  }

  /**
   * Get displayDescription
   * @return displayDescription
   */
  @javax.annotation.Nullable
  public String getDisplayDescription() {
    return displayDescription;
  }

  public void setDisplayDescription(String displayDescription) {
    this.displayDescription = displayDescription;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner enableRegionalMdmAccount(Boolean enableRegionalMdmAccount) {
    this.enableRegionalMdmAccount = enableRegionalMdmAccount;
    return this;
  }

  /**
   * Get enableRegionalMdmAccount
   * @return enableRegionalMdmAccount
   */
  @javax.annotation.Nullable
  public Boolean getEnableRegionalMdmAccount() {
    return enableRegionalMdmAccount;
  }

  public void setEnableRegionalMdmAccount(Boolean enableRegionalMdmAccount) {
    this.enableRegionalMdmAccount = enableRegionalMdmAccount;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner fillGapWithZero(Boolean fillGapWithZero) {
    this.fillGapWithZero = fillGapWithZero;
    return this;
  }

  /**
   * Get fillGapWithZero
   * @return fillGapWithZero
   */
  @javax.annotation.Nullable
  public Boolean getFillGapWithZero() {
    return fillGapWithZero;
  }

  public void setFillGapWithZero(Boolean fillGapWithZero) {
    this.fillGapWithZero = fillGapWithZero;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner isInternal(Boolean isInternal) {
    this.isInternal = isInternal;
    return this;
  }

  /**
   * Get isInternal
   * @return isInternal
   */
  @javax.annotation.Nullable
  public Boolean getIsInternal() {
    return isInternal;
  }

  public void setIsInternal(Boolean isInternal) {
    this.isInternal = isInternal;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner metricFilterPattern(String metricFilterPattern) {
    this.metricFilterPattern = metricFilterPattern;
    return this;
  }

  /**
   * Get metricFilterPattern
   * @return metricFilterPattern
   */
  @javax.annotation.Nullable
  public String getMetricFilterPattern() {
    return metricFilterPattern;
  }

  public void setMetricFilterPattern(String metricFilterPattern) {
    this.metricFilterPattern = metricFilterPattern;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner sourceMdmAccount(String sourceMdmAccount) {
    this.sourceMdmAccount = sourceMdmAccount;
    return this;
  }

  /**
   * Get sourceMdmAccount
   * @return sourceMdmAccount
   */
  @javax.annotation.Nullable
  public String getSourceMdmAccount() {
    return sourceMdmAccount;
  }

  public void setSourceMdmAccount(String sourceMdmAccount) {
    this.sourceMdmAccount = sourceMdmAccount;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner sourceMdmNamespace(String sourceMdmNamespace) {
    this.sourceMdmNamespace = sourceMdmNamespace;
    return this;
  }

  /**
   * Get sourceMdmNamespace
   * @return sourceMdmNamespace
   */
  @javax.annotation.Nullable
  public String getSourceMdmNamespace() {
    return sourceMdmNamespace;
  }

  public void setSourceMdmNamespace(String sourceMdmNamespace) {
    this.sourceMdmNamespace = sourceMdmNamespace;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner supportsInstanceLevelAggregation(Boolean supportsInstanceLevelAggregation) {
    this.supportsInstanceLevelAggregation = supportsInstanceLevelAggregation;
    return this;
  }

  /**
   * Get supportsInstanceLevelAggregation
   * @return supportsInstanceLevelAggregation
   */
  @javax.annotation.Nullable
  public Boolean getSupportsInstanceLevelAggregation() {
    return supportsInstanceLevelAggregation;
  }

  public void setSupportsInstanceLevelAggregation(Boolean supportsInstanceLevelAggregation) {
    this.supportsInstanceLevelAggregation = supportsInstanceLevelAggregation;
  }


  public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner unit(String unit) {
    this.unit = unit;
    return this;
  }

  /**
   * Get unit
   * @return unit
   */
  @javax.annotation.Nullable
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner = (DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner) o;
    return Objects.equals(this.aggregationType, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.aggregationType) &&
        Objects.equals(this.availabilities, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.availabilities) &&
        Objects.equals(this.category, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.category) &&
        Objects.equals(this.dimensions, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.dimensions) &&
        Objects.equals(this.displayDescription, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.displayDescription) &&
        Objects.equals(this.displayName, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.displayName) &&
        Objects.equals(this.enableRegionalMdmAccount, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.enableRegionalMdmAccount) &&
        Objects.equals(this.fillGapWithZero, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.fillGapWithZero) &&
        Objects.equals(this.isInternal, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.isInternal) &&
        Objects.equals(this.metricFilterPattern, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.metricFilterPattern) &&
        Objects.equals(this.name, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.name) &&
        Objects.equals(this.sourceMdmAccount, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.sourceMdmAccount) &&
        Objects.equals(this.sourceMdmNamespace, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.sourceMdmNamespace) &&
        Objects.equals(this.supportsInstanceLevelAggregation, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.supportsInstanceLevelAggregation) &&
        Objects.equals(this.unit, domainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.unit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregationType, availabilities, category, dimensions, displayDescription, displayName, enableRegionalMdmAccount, fillGapWithZero, isInternal, metricFilterPattern, name, sourceMdmAccount, sourceMdmNamespace, supportsInstanceLevelAggregation, unit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner {\n");
    sb.append("    aggregationType: ").append(toIndentedString(aggregationType)).append("\n");
    sb.append("    availabilities: ").append(toIndentedString(availabilities)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    displayDescription: ").append(toIndentedString(displayDescription)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enableRegionalMdmAccount: ").append(toIndentedString(enableRegionalMdmAccount)).append("\n");
    sb.append("    fillGapWithZero: ").append(toIndentedString(fillGapWithZero)).append("\n");
    sb.append("    isInternal: ").append(toIndentedString(isInternal)).append("\n");
    sb.append("    metricFilterPattern: ").append(toIndentedString(metricFilterPattern)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sourceMdmAccount: ").append(toIndentedString(sourceMdmAccount)).append("\n");
    sb.append("    sourceMdmNamespace: ").append(toIndentedString(sourceMdmNamespace)).append("\n");
    sb.append("    supportsInstanceLevelAggregation: ").append(toIndentedString(supportsInstanceLevelAggregation)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aggregationType");
    openapiFields.add("availabilities");
    openapiFields.add("category");
    openapiFields.add("dimensions");
    openapiFields.add("displayDescription");
    openapiFields.add("displayName");
    openapiFields.add("enableRegionalMdmAccount");
    openapiFields.add("fillGapWithZero");
    openapiFields.add("isInternal");
    openapiFields.add("metricFilterPattern");
    openapiFields.add("name");
    openapiFields.add("sourceMdmAccount");
    openapiFields.add("sourceMdmNamespace");
    openapiFields.add("supportsInstanceLevelAggregation");
    openapiFields.add("unit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner is not found in the empty JSON string", DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("aggregationType") != null && !jsonObj.get("aggregationType").isJsonNull()) && !jsonObj.get("aggregationType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aggregationType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aggregationType").toString()));
      }
      if (jsonObj.get("availabilities") != null && !jsonObj.get("availabilities").isJsonNull()) {
        JsonArray jsonArrayavailabilities = jsonObj.getAsJsonArray("availabilities");
        if (jsonArrayavailabilities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("availabilities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `availabilities` to be an array in the JSON string but got `%s`", jsonObj.get("availabilities").toString()));
          }

          // validate the optional field `availabilities` (array)
          for (int i = 0; i < jsonArrayavailabilities.size(); i++) {
            DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerAvailabilitiesInner.validateJsonElement(jsonArrayavailabilities.get(i));
          };
        }
      }
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      if (jsonObj.get("dimensions") != null && !jsonObj.get("dimensions").isJsonNull()) {
        JsonArray jsonArraydimensions = jsonObj.getAsJsonArray("dimensions");
        if (jsonArraydimensions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("dimensions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `dimensions` to be an array in the JSON string but got `%s`", jsonObj.get("dimensions").toString()));
          }

          // validate the optional field `dimensions` (array)
          for (int i = 0; i < jsonArraydimensions.size(); i++) {
            DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInnerDimensionsInner.validateJsonElement(jsonArraydimensions.get(i));
          };
        }
      }
      if ((jsonObj.get("displayDescription") != null && !jsonObj.get("displayDescription").isJsonNull()) && !jsonObj.get("displayDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayDescription").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("metricFilterPattern") != null && !jsonObj.get("metricFilterPattern").isJsonNull()) && !jsonObj.get("metricFilterPattern").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metricFilterPattern` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metricFilterPattern").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("sourceMdmAccount") != null && !jsonObj.get("sourceMdmAccount").isJsonNull()) && !jsonObj.get("sourceMdmAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceMdmAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceMdmAccount").toString()));
      }
      if ((jsonObj.get("sourceMdmNamespace") != null && !jsonObj.get("sourceMdmNamespace").isJsonNull()) && !jsonObj.get("sourceMdmNamespace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceMdmNamespace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceMdmNamespace").toString()));
      }
      if ((jsonObj.get("unit") != null && !jsonObj.get("unit").isJsonNull()) && !jsonObj.get("unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unit").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner>() {
           @Override
           public void write(JsonWriter out, DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner
   * @throws IOException if the JSON string is invalid with respect to DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner
   */
  public static DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner.class);
  }

  /**
   * Convert an instance of DomainRegistrationProviderListOperations200ResponseValueInnerPropertiesServiceSpecificationMetricSpecificationsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

