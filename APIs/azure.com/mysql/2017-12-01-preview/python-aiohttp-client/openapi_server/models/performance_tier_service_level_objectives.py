# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PerformanceTierServiceLevelObjectives(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, edition: str=None, hardware_generation: str=None, id: str=None, max_backup_retention_days: int=None, max_storage_mb: int=None, min_backup_retention_days: int=None, min_storage_mb: int=None, v_core: int=None):
        """PerformanceTierServiceLevelObjectives - a model defined in OpenAPI

        :param edition: The edition of this PerformanceTierServiceLevelObjectives.
        :param hardware_generation: The hardware_generation of this PerformanceTierServiceLevelObjectives.
        :param id: The id of this PerformanceTierServiceLevelObjectives.
        :param max_backup_retention_days: The max_backup_retention_days of this PerformanceTierServiceLevelObjectives.
        :param max_storage_mb: The max_storage_mb of this PerformanceTierServiceLevelObjectives.
        :param min_backup_retention_days: The min_backup_retention_days of this PerformanceTierServiceLevelObjectives.
        :param min_storage_mb: The min_storage_mb of this PerformanceTierServiceLevelObjectives.
        :param v_core: The v_core of this PerformanceTierServiceLevelObjectives.
        """
        self.openapi_types = {
            'edition': str,
            'hardware_generation': str,
            'id': str,
            'max_backup_retention_days': int,
            'max_storage_mb': int,
            'min_backup_retention_days': int,
            'min_storage_mb': int,
            'v_core': int
        }

        self.attribute_map = {
            'edition': 'edition',
            'hardware_generation': 'hardwareGeneration',
            'id': 'id',
            'max_backup_retention_days': 'maxBackupRetentionDays',
            'max_storage_mb': 'maxStorageMB',
            'min_backup_retention_days': 'minBackupRetentionDays',
            'min_storage_mb': 'minStorageMB',
            'v_core': 'vCore'
        }

        self._edition = edition
        self._hardware_generation = hardware_generation
        self._id = id
        self._max_backup_retention_days = max_backup_retention_days
        self._max_storage_mb = max_storage_mb
        self._min_backup_retention_days = min_backup_retention_days
        self._min_storage_mb = min_storage_mb
        self._v_core = v_core

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PerformanceTierServiceLevelObjectives':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PerformanceTierServiceLevelObjectives of this PerformanceTierServiceLevelObjectives.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def edition(self):
        """Gets the edition of this PerformanceTierServiceLevelObjectives.

        Edition of the performance tier.

        :return: The edition of this PerformanceTierServiceLevelObjectives.
        :rtype: str
        """
        return self._edition

    @edition.setter
    def edition(self, edition):
        """Sets the edition of this PerformanceTierServiceLevelObjectives.

        Edition of the performance tier.

        :param edition: The edition of this PerformanceTierServiceLevelObjectives.
        :type edition: str
        """

        self._edition = edition

    @property
    def hardware_generation(self):
        """Gets the hardware_generation of this PerformanceTierServiceLevelObjectives.

        Hardware generation associated with the service level objective

        :return: The hardware_generation of this PerformanceTierServiceLevelObjectives.
        :rtype: str
        """
        return self._hardware_generation

    @hardware_generation.setter
    def hardware_generation(self, hardware_generation):
        """Sets the hardware_generation of this PerformanceTierServiceLevelObjectives.

        Hardware generation associated with the service level objective

        :param hardware_generation: The hardware_generation of this PerformanceTierServiceLevelObjectives.
        :type hardware_generation: str
        """

        self._hardware_generation = hardware_generation

    @property
    def id(self):
        """Gets the id of this PerformanceTierServiceLevelObjectives.

        ID for the service level objective.

        :return: The id of this PerformanceTierServiceLevelObjectives.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PerformanceTierServiceLevelObjectives.

        ID for the service level objective.

        :param id: The id of this PerformanceTierServiceLevelObjectives.
        :type id: str
        """

        self._id = id

    @property
    def max_backup_retention_days(self):
        """Gets the max_backup_retention_days of this PerformanceTierServiceLevelObjectives.

        Maximum Backup retention in days for the performance tier edition

        :return: The max_backup_retention_days of this PerformanceTierServiceLevelObjectives.
        :rtype: int
        """
        return self._max_backup_retention_days

    @max_backup_retention_days.setter
    def max_backup_retention_days(self, max_backup_retention_days):
        """Sets the max_backup_retention_days of this PerformanceTierServiceLevelObjectives.

        Maximum Backup retention in days for the performance tier edition

        :param max_backup_retention_days: The max_backup_retention_days of this PerformanceTierServiceLevelObjectives.
        :type max_backup_retention_days: int
        """

        self._max_backup_retention_days = max_backup_retention_days

    @property
    def max_storage_mb(self):
        """Gets the max_storage_mb of this PerformanceTierServiceLevelObjectives.

        Max storage allowed for a server.

        :return: The max_storage_mb of this PerformanceTierServiceLevelObjectives.
        :rtype: int
        """
        return self._max_storage_mb

    @max_storage_mb.setter
    def max_storage_mb(self, max_storage_mb):
        """Sets the max_storage_mb of this PerformanceTierServiceLevelObjectives.

        Max storage allowed for a server.

        :param max_storage_mb: The max_storage_mb of this PerformanceTierServiceLevelObjectives.
        :type max_storage_mb: int
        """

        self._max_storage_mb = max_storage_mb

    @property
    def min_backup_retention_days(self):
        """Gets the min_backup_retention_days of this PerformanceTierServiceLevelObjectives.

        Minimum Backup retention in days for the performance tier edition

        :return: The min_backup_retention_days of this PerformanceTierServiceLevelObjectives.
        :rtype: int
        """
        return self._min_backup_retention_days

    @min_backup_retention_days.setter
    def min_backup_retention_days(self, min_backup_retention_days):
        """Sets the min_backup_retention_days of this PerformanceTierServiceLevelObjectives.

        Minimum Backup retention in days for the performance tier edition

        :param min_backup_retention_days: The min_backup_retention_days of this PerformanceTierServiceLevelObjectives.
        :type min_backup_retention_days: int
        """

        self._min_backup_retention_days = min_backup_retention_days

    @property
    def min_storage_mb(self):
        """Gets the min_storage_mb of this PerformanceTierServiceLevelObjectives.

        Max storage allowed for a server.

        :return: The min_storage_mb of this PerformanceTierServiceLevelObjectives.
        :rtype: int
        """
        return self._min_storage_mb

    @min_storage_mb.setter
    def min_storage_mb(self, min_storage_mb):
        """Sets the min_storage_mb of this PerformanceTierServiceLevelObjectives.

        Max storage allowed for a server.

        :param min_storage_mb: The min_storage_mb of this PerformanceTierServiceLevelObjectives.
        :type min_storage_mb: int
        """

        self._min_storage_mb = min_storage_mb

    @property
    def v_core(self):
        """Gets the v_core of this PerformanceTierServiceLevelObjectives.

        vCore associated with the service level objective

        :return: The v_core of this PerformanceTierServiceLevelObjectives.
        :rtype: int
        """
        return self._v_core

    @v_core.setter
    def v_core(self, v_core):
        """Sets the v_core of this PerformanceTierServiceLevelObjectives.

        vCore associated with the service level objective

        :param v_core: The v_core of this PerformanceTierServiceLevelObjectives.
        :type v_core: int
        """

        self._v_core = v_core
