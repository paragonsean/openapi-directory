# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WaitStatisticsInputProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregation_window: str=None, observation_end_time: datetime=None, observation_start_time: datetime=None):
        """WaitStatisticsInputProperties - a model defined in OpenAPI

        :param aggregation_window: The aggregation_window of this WaitStatisticsInputProperties.
        :param observation_end_time: The observation_end_time of this WaitStatisticsInputProperties.
        :param observation_start_time: The observation_start_time of this WaitStatisticsInputProperties.
        """
        self.openapi_types = {
            'aggregation_window': str,
            'observation_end_time': datetime,
            'observation_start_time': datetime
        }

        self.attribute_map = {
            'aggregation_window': 'aggregationWindow',
            'observation_end_time': 'observationEndTime',
            'observation_start_time': 'observationStartTime'
        }

        self._aggregation_window = aggregation_window
        self._observation_end_time = observation_end_time
        self._observation_start_time = observation_start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WaitStatisticsInputProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WaitStatisticsInputProperties of this WaitStatisticsInputProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregation_window(self):
        """Gets the aggregation_window of this WaitStatisticsInputProperties.

        Aggregation interval type in ISO 8601 format.

        :return: The aggregation_window of this WaitStatisticsInputProperties.
        :rtype: str
        """
        return self._aggregation_window

    @aggregation_window.setter
    def aggregation_window(self, aggregation_window):
        """Sets the aggregation_window of this WaitStatisticsInputProperties.

        Aggregation interval type in ISO 8601 format.

        :param aggregation_window: The aggregation_window of this WaitStatisticsInputProperties.
        :type aggregation_window: str
        """
        if aggregation_window is None:
            raise ValueError("Invalid value for `aggregation_window`, must not be `None`")

        self._aggregation_window = aggregation_window

    @property
    def observation_end_time(self):
        """Gets the observation_end_time of this WaitStatisticsInputProperties.

        Observation end time.

        :return: The observation_end_time of this WaitStatisticsInputProperties.
        :rtype: datetime
        """
        return self._observation_end_time

    @observation_end_time.setter
    def observation_end_time(self, observation_end_time):
        """Sets the observation_end_time of this WaitStatisticsInputProperties.

        Observation end time.

        :param observation_end_time: The observation_end_time of this WaitStatisticsInputProperties.
        :type observation_end_time: datetime
        """
        if observation_end_time is None:
            raise ValueError("Invalid value for `observation_end_time`, must not be `None`")

        self._observation_end_time = observation_end_time

    @property
    def observation_start_time(self):
        """Gets the observation_start_time of this WaitStatisticsInputProperties.

        Observation start time.

        :return: The observation_start_time of this WaitStatisticsInputProperties.
        :rtype: datetime
        """
        return self._observation_start_time

    @observation_start_time.setter
    def observation_start_time(self, observation_start_time):
        """Sets the observation_start_time of this WaitStatisticsInputProperties.

        Observation start time.

        :param observation_start_time: The observation_start_time of this WaitStatisticsInputProperties.
        :type observation_start_time: datetime
        """
        if observation_start_time is None:
            raise ValueError("Invalid value for `observation_start_time`, must not be `None`")

        self._observation_start_time = observation_start_time
