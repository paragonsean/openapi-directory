# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecommendationActionProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_id: int=None, advisor_name: str=None, created_time: datetime=None, details: Dict[str, str]=None, expiration_time: datetime=None, reason: str=None, recommendation_type: str=None, session_id: str=None):
        """RecommendationActionProperties - a model defined in OpenAPI

        :param action_id: The action_id of this RecommendationActionProperties.
        :param advisor_name: The advisor_name of this RecommendationActionProperties.
        :param created_time: The created_time of this RecommendationActionProperties.
        :param details: The details of this RecommendationActionProperties.
        :param expiration_time: The expiration_time of this RecommendationActionProperties.
        :param reason: The reason of this RecommendationActionProperties.
        :param recommendation_type: The recommendation_type of this RecommendationActionProperties.
        :param session_id: The session_id of this RecommendationActionProperties.
        """
        self.openapi_types = {
            'action_id': int,
            'advisor_name': str,
            'created_time': datetime,
            'details': Dict[str, str],
            'expiration_time': datetime,
            'reason': str,
            'recommendation_type': str,
            'session_id': str
        }

        self.attribute_map = {
            'action_id': 'actionId',
            'advisor_name': 'advisorName',
            'created_time': 'createdTime',
            'details': 'details',
            'expiration_time': 'expirationTime',
            'reason': 'reason',
            'recommendation_type': 'recommendationType',
            'session_id': 'sessionId'
        }

        self._action_id = action_id
        self._advisor_name = advisor_name
        self._created_time = created_time
        self._details = details
        self._expiration_time = expiration_time
        self._reason = reason
        self._recommendation_type = recommendation_type
        self._session_id = session_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendationActionProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendationActionProperties of this RecommendationActionProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_id(self):
        """Gets the action_id of this RecommendationActionProperties.

        Recommendation action identifier.

        :return: The action_id of this RecommendationActionProperties.
        :rtype: int
        """
        return self._action_id

    @action_id.setter
    def action_id(self, action_id):
        """Sets the action_id of this RecommendationActionProperties.

        Recommendation action identifier.

        :param action_id: The action_id of this RecommendationActionProperties.
        :type action_id: int
        """

        self._action_id = action_id

    @property
    def advisor_name(self):
        """Gets the advisor_name of this RecommendationActionProperties.

        Advisor name.

        :return: The advisor_name of this RecommendationActionProperties.
        :rtype: str
        """
        return self._advisor_name

    @advisor_name.setter
    def advisor_name(self, advisor_name):
        """Sets the advisor_name of this RecommendationActionProperties.

        Advisor name.

        :param advisor_name: The advisor_name of this RecommendationActionProperties.
        :type advisor_name: str
        """

        self._advisor_name = advisor_name

    @property
    def created_time(self):
        """Gets the created_time of this RecommendationActionProperties.

        Recommendation action creation time.

        :return: The created_time of this RecommendationActionProperties.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this RecommendationActionProperties.

        Recommendation action creation time.

        :param created_time: The created_time of this RecommendationActionProperties.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def details(self):
        """Gets the details of this RecommendationActionProperties.

        Recommendation action details.

        :return: The details of this RecommendationActionProperties.
        :rtype: Dict[str, str]
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this RecommendationActionProperties.

        Recommendation action details.

        :param details: The details of this RecommendationActionProperties.
        :type details: Dict[str, str]
        """

        self._details = details

    @property
    def expiration_time(self):
        """Gets the expiration_time of this RecommendationActionProperties.

        Recommendation action expiration time.

        :return: The expiration_time of this RecommendationActionProperties.
        :rtype: datetime
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this RecommendationActionProperties.

        Recommendation action expiration time.

        :param expiration_time: The expiration_time of this RecommendationActionProperties.
        :type expiration_time: datetime
        """

        self._expiration_time = expiration_time

    @property
    def reason(self):
        """Gets the reason of this RecommendationActionProperties.

        Recommendation action reason.

        :return: The reason of this RecommendationActionProperties.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this RecommendationActionProperties.

        Recommendation action reason.

        :param reason: The reason of this RecommendationActionProperties.
        :type reason: str
        """

        self._reason = reason

    @property
    def recommendation_type(self):
        """Gets the recommendation_type of this RecommendationActionProperties.

        Recommendation action type.

        :return: The recommendation_type of this RecommendationActionProperties.
        :rtype: str
        """
        return self._recommendation_type

    @recommendation_type.setter
    def recommendation_type(self, recommendation_type):
        """Sets the recommendation_type of this RecommendationActionProperties.

        Recommendation action type.

        :param recommendation_type: The recommendation_type of this RecommendationActionProperties.
        :type recommendation_type: str
        """

        self._recommendation_type = recommendation_type

    @property
    def session_id(self):
        """Gets the session_id of this RecommendationActionProperties.

        Recommendation action session identifier.

        :return: The session_id of this RecommendationActionProperties.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this RecommendationActionProperties.

        Recommendation action session identifier.

        :param session_id: The session_id of this RecommendationActionProperties.
        :type session_id: str
        """

        self._session_id = session_id
