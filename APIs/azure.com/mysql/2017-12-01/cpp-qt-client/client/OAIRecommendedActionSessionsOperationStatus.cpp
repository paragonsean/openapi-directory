/**
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2017-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecommendedActionSessionsOperationStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecommendedActionSessionsOperationStatus::OAIRecommendedActionSessionsOperationStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecommendedActionSessionsOperationStatus::OAIRecommendedActionSessionsOperationStatus() {
    this->initializeModel();
}

OAIRecommendedActionSessionsOperationStatus::~OAIRecommendedActionSessionsOperationStatus() {}

void OAIRecommendedActionSessionsOperationStatus::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIRecommendedActionSessionsOperationStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecommendedActionSessionsOperationStatus::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIRecommendedActionSessionsOperationStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecommendedActionSessionsOperationStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIRecommendedActionSessionsOperationStatus::getName() const {
    return m_name;
}
void OAIRecommendedActionSessionsOperationStatus::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRecommendedActionSessionsOperationStatus::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRecommendedActionSessionsOperationStatus::is_name_Valid() const{
    return m_name_isValid;
}

QDateTime OAIRecommendedActionSessionsOperationStatus::getStartTime() const {
    return m_start_time;
}
void OAIRecommendedActionSessionsOperationStatus::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIRecommendedActionSessionsOperationStatus::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIRecommendedActionSessionsOperationStatus::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIRecommendedActionSessionsOperationStatus::getStatus() const {
    return m_status;
}
void OAIRecommendedActionSessionsOperationStatus::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIRecommendedActionSessionsOperationStatus::is_status_Set() const{
    return m_status_isSet;
}

bool OAIRecommendedActionSessionsOperationStatus::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIRecommendedActionSessionsOperationStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecommendedActionSessionsOperationStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
