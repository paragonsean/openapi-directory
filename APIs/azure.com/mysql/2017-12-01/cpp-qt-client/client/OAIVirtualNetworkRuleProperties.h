/**
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2017-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualNetworkRuleProperties.h
 *
 * Properties of a virtual network rule.
 */

#ifndef OAIVirtualNetworkRuleProperties_H
#define OAIVirtualNetworkRuleProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVirtualNetworkRuleProperties : public OAIObject {
public:
    OAIVirtualNetworkRuleProperties();
    OAIVirtualNetworkRuleProperties(QString json);
    ~OAIVirtualNetworkRuleProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIgnoreMissingVnetServiceEndpoint() const;
    void setIgnoreMissingVnetServiceEndpoint(const bool &ignore_missing_vnet_service_endpoint);
    bool is_ignore_missing_vnet_service_endpoint_Set() const;
    bool is_ignore_missing_vnet_service_endpoint_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getVirtualNetworkSubnetId() const;
    void setVirtualNetworkSubnetId(const QString &virtual_network_subnet_id);
    bool is_virtual_network_subnet_id_Set() const;
    bool is_virtual_network_subnet_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_ignore_missing_vnet_service_endpoint;
    bool m_ignore_missing_vnet_service_endpoint_isSet;
    bool m_ignore_missing_vnet_service_endpoint_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_virtual_network_subnet_id;
    bool m_virtual_network_subnet_id_isSet;
    bool m_virtual_network_subnet_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualNetworkRuleProperties)

#endif // OAIVirtualNetworkRuleProperties_H
