/**
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2017-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServerPropertiesForCreate.h
 *
 * The properties used to create a new server.
 */

#ifndef OAIServerPropertiesForCreate_H
#define OAIServerPropertiesForCreate_H

#include <QJsonObject>

#include "OAIServerVersion.h"
#include "OAISslEnforcement.h"
#include "OAIStorageProfile.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStorageProfile;

class OAIServerPropertiesForCreate : public OAIObject {
public:
    OAIServerPropertiesForCreate();
    OAIServerPropertiesForCreate(QString json);
    ~OAIServerPropertiesForCreate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateMode() const;
    void setCreateMode(const QString &create_mode);
    bool is_create_mode_Set() const;
    bool is_create_mode_Valid() const;

    OAISslEnforcement getSslEnforcement() const;
    void setSslEnforcement(const OAISslEnforcement &ssl_enforcement);
    bool is_ssl_enforcement_Set() const;
    bool is_ssl_enforcement_Valid() const;

    OAIStorageProfile getStorageProfile() const;
    void setStorageProfile(const OAIStorageProfile &storage_profile);
    bool is_storage_profile_Set() const;
    bool is_storage_profile_Valid() const;

    OAIServerVersion getVersion() const;
    void setVersion(const OAIServerVersion &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_mode;
    bool m_create_mode_isSet;
    bool m_create_mode_isValid;

    OAISslEnforcement m_ssl_enforcement;
    bool m_ssl_enforcement_isSet;
    bool m_ssl_enforcement_isValid;

    OAIStorageProfile m_storage_profile;
    bool m_storage_profile_isSet;
    bool m_storage_profile_isValid;

    OAIServerVersion m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServerPropertiesForCreate)

#endif // OAIServerPropertiesForCreate_H
