/*
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2017-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Service level objectives for performance tier.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:37:54.415032-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PerformanceTierServiceLevelObjectives {
  public static final String SERIALIZED_NAME_EDITION = "edition";
  @SerializedName(SERIALIZED_NAME_EDITION)
  private String edition;

  public static final String SERIALIZED_NAME_HARDWARE_GENERATION = "hardwareGeneration";
  @SerializedName(SERIALIZED_NAME_HARDWARE_GENERATION)
  private String hardwareGeneration;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_MAX_BACKUP_RETENTION_DAYS = "maxBackupRetentionDays";
  @SerializedName(SERIALIZED_NAME_MAX_BACKUP_RETENTION_DAYS)
  private Integer maxBackupRetentionDays;

  public static final String SERIALIZED_NAME_MAX_STORAGE_M_B = "maxStorageMB";
  @SerializedName(SERIALIZED_NAME_MAX_STORAGE_M_B)
  private Integer maxStorageMB;

  public static final String SERIALIZED_NAME_MIN_BACKUP_RETENTION_DAYS = "minBackupRetentionDays";
  @SerializedName(SERIALIZED_NAME_MIN_BACKUP_RETENTION_DAYS)
  private Integer minBackupRetentionDays;

  public static final String SERIALIZED_NAME_MIN_STORAGE_M_B = "minStorageMB";
  @SerializedName(SERIALIZED_NAME_MIN_STORAGE_M_B)
  private Integer minStorageMB;

  public static final String SERIALIZED_NAME_V_CORE = "vCore";
  @SerializedName(SERIALIZED_NAME_V_CORE)
  private Integer vCore;

  public PerformanceTierServiceLevelObjectives() {
  }

  public PerformanceTierServiceLevelObjectives edition(String edition) {
    this.edition = edition;
    return this;
  }

  /**
   * Edition of the performance tier.
   * @return edition
   */
  @javax.annotation.Nullable
  public String getEdition() {
    return edition;
  }

  public void setEdition(String edition) {
    this.edition = edition;
  }


  public PerformanceTierServiceLevelObjectives hardwareGeneration(String hardwareGeneration) {
    this.hardwareGeneration = hardwareGeneration;
    return this;
  }

  /**
   * Hardware generation associated with the service level objective
   * @return hardwareGeneration
   */
  @javax.annotation.Nullable
  public String getHardwareGeneration() {
    return hardwareGeneration;
  }

  public void setHardwareGeneration(String hardwareGeneration) {
    this.hardwareGeneration = hardwareGeneration;
  }


  public PerformanceTierServiceLevelObjectives id(String id) {
    this.id = id;
    return this;
  }

  /**
   * ID for the service level objective.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public PerformanceTierServiceLevelObjectives maxBackupRetentionDays(Integer maxBackupRetentionDays) {
    this.maxBackupRetentionDays = maxBackupRetentionDays;
    return this;
  }

  /**
   * Maximum Backup retention in days for the performance tier edition
   * @return maxBackupRetentionDays
   */
  @javax.annotation.Nullable
  public Integer getMaxBackupRetentionDays() {
    return maxBackupRetentionDays;
  }

  public void setMaxBackupRetentionDays(Integer maxBackupRetentionDays) {
    this.maxBackupRetentionDays = maxBackupRetentionDays;
  }


  public PerformanceTierServiceLevelObjectives maxStorageMB(Integer maxStorageMB) {
    this.maxStorageMB = maxStorageMB;
    return this;
  }

  /**
   * Max storage allowed for a server.
   * @return maxStorageMB
   */
  @javax.annotation.Nullable
  public Integer getMaxStorageMB() {
    return maxStorageMB;
  }

  public void setMaxStorageMB(Integer maxStorageMB) {
    this.maxStorageMB = maxStorageMB;
  }


  public PerformanceTierServiceLevelObjectives minBackupRetentionDays(Integer minBackupRetentionDays) {
    this.minBackupRetentionDays = minBackupRetentionDays;
    return this;
  }

  /**
   * Minimum Backup retention in days for the performance tier edition
   * @return minBackupRetentionDays
   */
  @javax.annotation.Nullable
  public Integer getMinBackupRetentionDays() {
    return minBackupRetentionDays;
  }

  public void setMinBackupRetentionDays(Integer minBackupRetentionDays) {
    this.minBackupRetentionDays = minBackupRetentionDays;
  }


  public PerformanceTierServiceLevelObjectives minStorageMB(Integer minStorageMB) {
    this.minStorageMB = minStorageMB;
    return this;
  }

  /**
   * Max storage allowed for a server.
   * @return minStorageMB
   */
  @javax.annotation.Nullable
  public Integer getMinStorageMB() {
    return minStorageMB;
  }

  public void setMinStorageMB(Integer minStorageMB) {
    this.minStorageMB = minStorageMB;
  }


  public PerformanceTierServiceLevelObjectives vCore(Integer vCore) {
    this.vCore = vCore;
    return this;
  }

  /**
   * vCore associated with the service level objective
   * @return vCore
   */
  @javax.annotation.Nullable
  public Integer getvCore() {
    return vCore;
  }

  public void setvCore(Integer vCore) {
    this.vCore = vCore;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerformanceTierServiceLevelObjectives performanceTierServiceLevelObjectives = (PerformanceTierServiceLevelObjectives) o;
    return Objects.equals(this.edition, performanceTierServiceLevelObjectives.edition) &&
        Objects.equals(this.hardwareGeneration, performanceTierServiceLevelObjectives.hardwareGeneration) &&
        Objects.equals(this.id, performanceTierServiceLevelObjectives.id) &&
        Objects.equals(this.maxBackupRetentionDays, performanceTierServiceLevelObjectives.maxBackupRetentionDays) &&
        Objects.equals(this.maxStorageMB, performanceTierServiceLevelObjectives.maxStorageMB) &&
        Objects.equals(this.minBackupRetentionDays, performanceTierServiceLevelObjectives.minBackupRetentionDays) &&
        Objects.equals(this.minStorageMB, performanceTierServiceLevelObjectives.minStorageMB) &&
        Objects.equals(this.vCore, performanceTierServiceLevelObjectives.vCore);
  }

  @Override
  public int hashCode() {
    return Objects.hash(edition, hardwareGeneration, id, maxBackupRetentionDays, maxStorageMB, minBackupRetentionDays, minStorageMB, vCore);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerformanceTierServiceLevelObjectives {\n");
    sb.append("    edition: ").append(toIndentedString(edition)).append("\n");
    sb.append("    hardwareGeneration: ").append(toIndentedString(hardwareGeneration)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    maxBackupRetentionDays: ").append(toIndentedString(maxBackupRetentionDays)).append("\n");
    sb.append("    maxStorageMB: ").append(toIndentedString(maxStorageMB)).append("\n");
    sb.append("    minBackupRetentionDays: ").append(toIndentedString(minBackupRetentionDays)).append("\n");
    sb.append("    minStorageMB: ").append(toIndentedString(minStorageMB)).append("\n");
    sb.append("    vCore: ").append(toIndentedString(vCore)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("edition");
    openapiFields.add("hardwareGeneration");
    openapiFields.add("id");
    openapiFields.add("maxBackupRetentionDays");
    openapiFields.add("maxStorageMB");
    openapiFields.add("minBackupRetentionDays");
    openapiFields.add("minStorageMB");
    openapiFields.add("vCore");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PerformanceTierServiceLevelObjectives
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PerformanceTierServiceLevelObjectives.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PerformanceTierServiceLevelObjectives is not found in the empty JSON string", PerformanceTierServiceLevelObjectives.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PerformanceTierServiceLevelObjectives.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PerformanceTierServiceLevelObjectives` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("edition") != null && !jsonObj.get("edition").isJsonNull()) && !jsonObj.get("edition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `edition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("edition").toString()));
      }
      if ((jsonObj.get("hardwareGeneration") != null && !jsonObj.get("hardwareGeneration").isJsonNull()) && !jsonObj.get("hardwareGeneration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hardwareGeneration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hardwareGeneration").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PerformanceTierServiceLevelObjectives.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PerformanceTierServiceLevelObjectives' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PerformanceTierServiceLevelObjectives> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PerformanceTierServiceLevelObjectives.class));

       return (TypeAdapter<T>) new TypeAdapter<PerformanceTierServiceLevelObjectives>() {
           @Override
           public void write(JsonWriter out, PerformanceTierServiceLevelObjectives value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PerformanceTierServiceLevelObjectives read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PerformanceTierServiceLevelObjectives given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PerformanceTierServiceLevelObjectives
   * @throws IOException if the JSON string is invalid with respect to PerformanceTierServiceLevelObjectives
   */
  public static PerformanceTierServiceLevelObjectives fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PerformanceTierServiceLevelObjectives.class);
  }

  /**
   * Convert an instance of PerformanceTierServiceLevelObjectives to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

