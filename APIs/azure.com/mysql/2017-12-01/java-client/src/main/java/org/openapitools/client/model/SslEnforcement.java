/*
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2017-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Enable ssl enforcement or not when connect to server.
 */
@JsonAdapter(SslEnforcement.Adapter.class)
public enum SslEnforcement {
  
  ENABLED("Enabled"),
  
  DISABLED("Disabled");

  private String value;

  SslEnforcement(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static SslEnforcement fromValue(String value) {
    for (SslEnforcement b : SslEnforcement.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<SslEnforcement> {
    @Override
    public void write(final JsonWriter jsonWriter, final SslEnforcement enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public SslEnforcement read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return SslEnforcement.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    SslEnforcement.fromValue(value);
  }
}

