/**
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2017-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MySqlManagementClient);
  }
}(this, function(expect, MySqlManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MySqlManagementClient.TopQueryStatisticsInputProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TopQueryStatisticsInputProperties', function() {
    it('should create an instance of TopQueryStatisticsInputProperties', function() {
      // uncomment below and update the code to test TopQueryStatisticsInputProperties
      //var instance = new MySqlManagementClient.TopQueryStatisticsInputProperties();
      //expect(instance).to.be.a(MySqlManagementClient.TopQueryStatisticsInputProperties);
    });

    it('should have the property aggregationFunction (base name: "aggregationFunction")', function() {
      // uncomment below and update the code to test the property aggregationFunction
      //var instance = new MySqlManagementClient.TopQueryStatisticsInputProperties();
      //expect(instance).to.be();
    });

    it('should have the property aggregationWindow (base name: "aggregationWindow")', function() {
      // uncomment below and update the code to test the property aggregationWindow
      //var instance = new MySqlManagementClient.TopQueryStatisticsInputProperties();
      //expect(instance).to.be();
    });

    it('should have the property numberOfTopQueries (base name: "numberOfTopQueries")', function() {
      // uncomment below and update the code to test the property numberOfTopQueries
      //var instance = new MySqlManagementClient.TopQueryStatisticsInputProperties();
      //expect(instance).to.be();
    });

    it('should have the property observationEndTime (base name: "observationEndTime")', function() {
      // uncomment below and update the code to test the property observationEndTime
      //var instance = new MySqlManagementClient.TopQueryStatisticsInputProperties();
      //expect(instance).to.be();
    });

    it('should have the property observationStartTime (base name: "observationStartTime")', function() {
      // uncomment below and update the code to test the property observationStartTime
      //var instance = new MySqlManagementClient.TopQueryStatisticsInputProperties();
      //expect(instance).to.be();
    });

    it('should have the property observedMetric (base name: "observedMetric")', function() {
      // uncomment below and update the code to test the property observedMetric
      //var instance = new MySqlManagementClient.TopQueryStatisticsInputProperties();
      //expect(instance).to.be();
    });

  });

}));
