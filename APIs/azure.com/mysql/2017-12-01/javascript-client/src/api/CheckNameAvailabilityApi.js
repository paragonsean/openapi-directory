/**
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2017-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import NameAvailability from '../model/NameAvailability';
import NameAvailabilityRequest from '../model/NameAvailabilityRequest';

/**
* CheckNameAvailability service.
* @module api/CheckNameAvailabilityApi
* @version 2017-12-01
*/
export default class CheckNameAvailabilityApi {

    /**
    * Constructs a new CheckNameAvailabilityApi. 
    * @alias module:api/CheckNameAvailabilityApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the checkNameAvailabilityExecute operation.
     * @callback module:api/CheckNameAvailabilityApi~checkNameAvailabilityExecuteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NameAvailability} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check the availability of name for resource
     * @param {String} apiVersion The API version to use for the request.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {module:model/NameAvailabilityRequest} nameAvailabilityRequest The required parameters for checking if resource name is available.
     * @param {module:api/CheckNameAvailabilityApi~checkNameAvailabilityExecuteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NameAvailability}
     */
    checkNameAvailabilityExecute(apiVersion, subscriptionId, nameAvailabilityRequest, callback) {
      let postBody = nameAvailabilityRequest;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling checkNameAvailabilityExecute");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling checkNameAvailabilityExecute");
      }
      // verify the required parameter 'nameAvailabilityRequest' is set
      if (nameAvailabilityRequest === undefined || nameAvailabilityRequest === null) {
        throw new Error("Missing the required parameter 'nameAvailabilityRequest' when calling checkNameAvailabilityExecute");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = NameAvailability;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/checkNameAvailability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
