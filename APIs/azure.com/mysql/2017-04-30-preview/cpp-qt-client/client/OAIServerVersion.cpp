/**
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, log files and configurations.
 *
 * The version of the OpenAPI document: 2017-04-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServerVersion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServerVersion::OAIServerVersion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServerVersion::OAIServerVersion() {
    this->initializeModel();
}

OAIServerVersion::~OAIServerVersion() {}

void OAIServerVersion::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIServerVersion::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIServerVersion::fromJson(QString jsonString) {
    
    if ( jsonString.compare("5.6", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServerVersion::_6;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("5.7", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServerVersion::_7;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIServerVersion::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIServerVersion::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIServerVersion::_6:
            val = "5.6";
            break;
        case eOAIServerVersion::_7:
            val = "5.7";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIServerVersion::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIServerVersion::eOAIServerVersion OAIServerVersion::getValue() const {
    return m_value;
}

void OAIServerVersion::setValue(const OAIServerVersion::eOAIServerVersion& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIServerVersion::isSet() const {
    
    return m_value_isSet;
}

bool OAIServerVersion::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
