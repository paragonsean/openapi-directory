# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.performance_tier_service_level_objectives import PerformanceTierServiceLevelObjectives
from openapi_server import util


class PerformanceTierProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_retention_days: int=None, id: str=None, service_level_objectives: List[PerformanceTierServiceLevelObjectives]=None):
        """PerformanceTierProperties - a model defined in OpenAPI

        :param backup_retention_days: The backup_retention_days of this PerformanceTierProperties.
        :param id: The id of this PerformanceTierProperties.
        :param service_level_objectives: The service_level_objectives of this PerformanceTierProperties.
        """
        self.openapi_types = {
            'backup_retention_days': int,
            'id': str,
            'service_level_objectives': List[PerformanceTierServiceLevelObjectives]
        }

        self.attribute_map = {
            'backup_retention_days': 'backupRetentionDays',
            'id': 'id',
            'service_level_objectives': 'serviceLevelObjectives'
        }

        self._backup_retention_days = backup_retention_days
        self._id = id
        self._service_level_objectives = service_level_objectives

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PerformanceTierProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PerformanceTierProperties of this PerformanceTierProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_retention_days(self):
        """Gets the backup_retention_days of this PerformanceTierProperties.

        Backup retention in days for the performance tier edition

        :return: The backup_retention_days of this PerformanceTierProperties.
        :rtype: int
        """
        return self._backup_retention_days

    @backup_retention_days.setter
    def backup_retention_days(self, backup_retention_days):
        """Sets the backup_retention_days of this PerformanceTierProperties.

        Backup retention in days for the performance tier edition

        :param backup_retention_days: The backup_retention_days of this PerformanceTierProperties.
        :type backup_retention_days: int
        """

        self._backup_retention_days = backup_retention_days

    @property
    def id(self):
        """Gets the id of this PerformanceTierProperties.

        ID of the performance tier.

        :return: The id of this PerformanceTierProperties.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PerformanceTierProperties.

        ID of the performance tier.

        :param id: The id of this PerformanceTierProperties.
        :type id: str
        """

        self._id = id

    @property
    def service_level_objectives(self):
        """Gets the service_level_objectives of this PerformanceTierProperties.

        Service level objectives associated with the performance tier

        :return: The service_level_objectives of this PerformanceTierProperties.
        :rtype: List[PerformanceTierServiceLevelObjectives]
        """
        return self._service_level_objectives

    @service_level_objectives.setter
    def service_level_objectives(self, service_level_objectives):
        """Sets the service_level_objectives of this PerformanceTierProperties.

        Service level objectives associated with the performance tier

        :param service_level_objectives: The service_level_objectives of this PerformanceTierProperties.
        :type service_level_objectives: List[PerformanceTierServiceLevelObjectives]
        """

        self._service_level_objectives = service_level_objectives
