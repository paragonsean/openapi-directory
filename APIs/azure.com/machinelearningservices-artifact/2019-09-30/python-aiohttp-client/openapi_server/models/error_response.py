# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.root_error import RootError
from openapi_server import util


class ErrorResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, correlation: Dict[str, str]=None, environment: str=None, error: RootError=None, location: str=None, time: datetime=None):
        """ErrorResponse - a model defined in OpenAPI

        :param correlation: The correlation of this ErrorResponse.
        :param environment: The environment of this ErrorResponse.
        :param error: The error of this ErrorResponse.
        :param location: The location of this ErrorResponse.
        :param time: The time of this ErrorResponse.
        """
        self.openapi_types = {
            'correlation': Dict[str, str],
            'environment': str,
            'error': RootError,
            'location': str,
            'time': datetime
        }

        self.attribute_map = {
            'correlation': 'correlation',
            'environment': 'environment',
            'error': 'error',
            'location': 'location',
            'time': 'time'
        }

        self._correlation = correlation
        self._environment = environment
        self._error = error
        self._location = location
        self._time = time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorResponse of this ErrorResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def correlation(self):
        """Gets the correlation of this ErrorResponse.

        Dictionary containing correlation details for the error.

        :return: The correlation of this ErrorResponse.
        :rtype: Dict[str, str]
        """
        return self._correlation

    @correlation.setter
    def correlation(self, correlation):
        """Sets the correlation of this ErrorResponse.

        Dictionary containing correlation details for the error.

        :param correlation: The correlation of this ErrorResponse.
        :type correlation: Dict[str, str]
        """

        self._correlation = correlation

    @property
    def environment(self):
        """Gets the environment of this ErrorResponse.

        The hosting environment.

        :return: The environment of this ErrorResponse.
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this ErrorResponse.

        The hosting environment.

        :param environment: The environment of this ErrorResponse.
        :type environment: str
        """

        self._environment = environment

    @property
    def error(self):
        """Gets the error of this ErrorResponse.


        :return: The error of this ErrorResponse.
        :rtype: RootError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ErrorResponse.


        :param error: The error of this ErrorResponse.
        :type error: RootError
        """

        self._error = error

    @property
    def location(self):
        """Gets the location of this ErrorResponse.

        The Azure region.

        :return: The location of this ErrorResponse.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ErrorResponse.

        The Azure region.

        :param location: The location of this ErrorResponse.
        :type location: str
        """

        self._location = location

    @property
    def time(self):
        """Gets the time of this ErrorResponse.

        The time in UTC.

        :return: The time of this ErrorResponse.
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this ErrorResponse.

        The time in UTC.

        :param time: The time of this ErrorResponse.
        :type time: datetime
        """

        self._time = time
