# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.artifact import Artifact
from openapi_server.models.artifact_content_information import ArtifactContentInformation
from openapi_server.models.error_response import ErrorResponse
from openapi_server import util


class BatchArtifactContentInformationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifact_content_information: Dict[str, ArtifactContentInformation]=None, artifacts: Dict[str, Artifact]=None, errors: Dict[str, ErrorResponse]=None):
        """BatchArtifactContentInformationResult - a model defined in OpenAPI

        :param artifact_content_information: The artifact_content_information of this BatchArtifactContentInformationResult.
        :param artifacts: The artifacts of this BatchArtifactContentInformationResult.
        :param errors: The errors of this BatchArtifactContentInformationResult.
        """
        self.openapi_types = {
            'artifact_content_information': Dict[str, ArtifactContentInformation],
            'artifacts': Dict[str, Artifact],
            'errors': Dict[str, ErrorResponse]
        }

        self.attribute_map = {
            'artifact_content_information': 'artifactContentInformation',
            'artifacts': 'artifacts',
            'errors': 'errors'
        }

        self._artifact_content_information = artifact_content_information
        self._artifacts = artifacts
        self._errors = errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchArtifactContentInformationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchArtifactContentInformationResult of this BatchArtifactContentInformationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifact_content_information(self):
        """Gets the artifact_content_information of this BatchArtifactContentInformationResult.

        Artifact Content Information details of the Artifact Ids requested.

        :return: The artifact_content_information of this BatchArtifactContentInformationResult.
        :rtype: Dict[str, ArtifactContentInformation]
        """
        return self._artifact_content_information

    @artifact_content_information.setter
    def artifact_content_information(self, artifact_content_information):
        """Sets the artifact_content_information of this BatchArtifactContentInformationResult.

        Artifact Content Information details of the Artifact Ids requested.

        :param artifact_content_information: The artifact_content_information of this BatchArtifactContentInformationResult.
        :type artifact_content_information: Dict[str, ArtifactContentInformation]
        """

        self._artifact_content_information = artifact_content_information

    @property
    def artifacts(self):
        """Gets the artifacts of this BatchArtifactContentInformationResult.

        Artifact details of the Artifact Ids requested.

        :return: The artifacts of this BatchArtifactContentInformationResult.
        :rtype: Dict[str, Artifact]
        """
        return self._artifacts

    @artifacts.setter
    def artifacts(self, artifacts):
        """Sets the artifacts of this BatchArtifactContentInformationResult.

        Artifact details of the Artifact Ids requested.

        :param artifacts: The artifacts of this BatchArtifactContentInformationResult.
        :type artifacts: Dict[str, Artifact]
        """

        self._artifacts = artifacts

    @property
    def errors(self):
        """Gets the errors of this BatchArtifactContentInformationResult.

        Errors occurred while fetching the requested Artifact Ids.

        :return: The errors of this BatchArtifactContentInformationResult.
        :rtype: Dict[str, ErrorResponse]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this BatchArtifactContentInformationResult.

        Errors occurred while fetching the requested Artifact Ids.

        :param errors: The errors of this BatchArtifactContentInformationResult.
        :type errors: Dict[str, ErrorResponse]
        """

        self._errors = errors
