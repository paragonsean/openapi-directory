/**
 * Artifact
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ArtifactContentInformation model module.
 * @module model/ArtifactContentInformation
 * @version 2019-09-30
 */
class ArtifactContentInformation {
    /**
     * Constructs a new <code>ArtifactContentInformation</code>.
     * Details of an Artifact Content Information.
     * @alias module:model/ArtifactContentInformation
     */
    constructor() { 
        
        ArtifactContentInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ArtifactContentInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ArtifactContentInformation} obj Optional instance to populate.
     * @return {module:model/ArtifactContentInformation} The populated <code>ArtifactContentInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ArtifactContentInformation();

            if (data.hasOwnProperty('container')) {
                obj['container'] = ApiClient.convertToType(data['container'], 'String');
            }
            if (data.hasOwnProperty('contentUri')) {
                obj['contentUri'] = ApiClient.convertToType(data['contentUri'], 'String');
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = ApiClient.convertToType(data['origin'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ArtifactContentInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ArtifactContentInformation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['container'] && !(typeof data['container'] === 'string' || data['container'] instanceof String)) {
            throw new Error("Expected the field `container` to be a primitive type in the JSON string but got " + data['container']);
        }
        // ensure the json data is a string
        if (data['contentUri'] && !(typeof data['contentUri'] === 'string' || data['contentUri'] instanceof String)) {
            throw new Error("Expected the field `contentUri` to be a primitive type in the JSON string but got " + data['contentUri']);
        }
        // ensure the json data is a string
        if (data['origin'] && !(typeof data['origin'] === 'string' || data['origin'] instanceof String)) {
            throw new Error("Expected the field `origin` to be a primitive type in the JSON string but got " + data['origin']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }

        return true;
    }


}



/**
 * The name of container. Artifacts can be grouped by container.
 * @member {String} container
 */
ArtifactContentInformation.prototype['container'] = undefined;

/**
 * The URI of the content.
 * @member {String} contentUri
 */
ArtifactContentInformation.prototype['contentUri'] = undefined;

/**
 * The origin of the Artifact creation request. Available origins are 'ExperimentRun', 'LocalUpload', 'WebUpload', 'Dataset', 'ComputeRecord', 'Metric', and 'Unknown'.
 * @member {String} origin
 */
ArtifactContentInformation.prototype['origin'] = undefined;

/**
 * The path to the Artifact in a container.
 * @member {String} path
 */
ArtifactContentInformation.prototype['path'] = undefined;






export default ArtifactContentInformation;

