# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LocalizableString(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, localized_value: str=None, value: str=None):
        """LocalizableString - a model defined in OpenAPI

        :param localized_value: The localized_value of this LocalizableString.
        :param value: The value of this LocalizableString.
        """
        self.openapi_types = {
            'localized_value': str,
            'value': str
        }

        self.attribute_map = {
            'localized_value': 'localizedValue',
            'value': 'value'
        }

        self._localized_value = localized_value
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocalizableString':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocalizableString of this LocalizableString.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def localized_value(self):
        """Gets the localized_value of this LocalizableString.

        the locale specific value.

        :return: The localized_value of this LocalizableString.
        :rtype: str
        """
        return self._localized_value

    @localized_value.setter
    def localized_value(self, localized_value):
        """Sets the localized_value of this LocalizableString.

        the locale specific value.

        :param localized_value: The localized_value of this LocalizableString.
        :type localized_value: str
        """

        self._localized_value = localized_value

    @property
    def value(self):
        """Gets the value of this LocalizableString.

        the invariant value.

        :return: The value of this LocalizableString.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this LocalizableString.

        the invariant value.

        :param value: The value of this LocalizableString.
        :type value: str
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")

        self._value = value
