/*
 * AttestationClient
 * Describes the interface for the per-tenant enclave service.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AttestationPolicy;
import org.openapitools.client.model.CloudError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PolicyApi
 */
@Disabled
public class PolicyApiTest {

    private final PolicyApi api = new PolicyApi();

    /**
     * Retrieves the current policy for a given kind of TEE.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyGetTest() throws ApiException {
        String apiVersion = null;
        String tee = null;
        AttestationPolicy response = api.policyGet(apiVersion, tee);
        // TODO: test validations
    }

    /**
     * Accepts a new policy document and returns a JWT which expresses  used in preparation to set attestation policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyPrepareToSetTest() throws ApiException {
        String apiVersion = null;
        String tee = null;
        String policyJws = null;
        String response = api.policyPrepareToSet(apiVersion, tee, policyJws);
        // TODO: test validations
    }

    /**
     * Resets the attestation policy for the specified tenant and reverts to the default policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policyResetTest() throws ApiException {
        String apiVersion = null;
        String tee = null;
        String policyJws = null;
        String response = api.policyReset(apiVersion, tee, policyJws);
        // TODO: test validations
    }

    /**
     * Sets the policy for a given kind of TEE.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policySetTest() throws ApiException {
        String apiVersion = null;
        String tee = null;
        String newAttestationPolicy = null;
        api.policySet(apiVersion, tee, newAttestationPolicy);
        // TODO: test validations
    }

}
