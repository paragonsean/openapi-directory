/**
 * Management Groups
 * The Azure Management Groups API enables consolidation of multiple subscriptions/resources into an organizational hierarchy and centrally manage access control, policies, alerting and reporting for those resources.
 *
 * The version of the OpenAPI document: 2018-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntityHierarchyItem from './EntityHierarchyItem';
import Permissions from './Permissions';

/**
 * The EntityHierarchyItemProperties model module.
 * @module model/EntityHierarchyItemProperties
 * @version 2018-03-01-preview
 */
class EntityHierarchyItemProperties {
    /**
     * Constructs a new <code>EntityHierarchyItemProperties</code>.
     * The generic properties of a management group.
     * @alias module:model/EntityHierarchyItemProperties
     */
    constructor() { 
        
        EntityHierarchyItemProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EntityHierarchyItemProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntityHierarchyItemProperties} obj Optional instance to populate.
     * @return {module:model/EntityHierarchyItemProperties} The populated <code>EntityHierarchyItemProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntityHierarchyItemProperties();

            if (data.hasOwnProperty('children')) {
                obj['children'] = ApiClient.convertToType(data['children'], [EntityHierarchyItem]);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = Permissions.constructFromObject(data['permissions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EntityHierarchyItemProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EntityHierarchyItemProperties</code>.
     */
    static validateJSON(data) {
        if (data['children']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['children'])) {
                throw new Error("Expected the field `children` to be an array in the JSON data but got " + data['children']);
            }
            // validate the optional field `children` (array)
            for (const item of data['children']) {
                EntityHierarchyItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }

        return true;
    }


}



/**
 * The list of children.
 * @member {Array.<module:model/EntityHierarchyItem>} children
 */
EntityHierarchyItemProperties.prototype['children'] = undefined;

/**
 * The friendly name of the management group.
 * @member {String} displayName
 */
EntityHierarchyItemProperties.prototype['displayName'] = undefined;

/**
 * @member {module:model/Permissions} permissions
 */
EntityHierarchyItemProperties.prototype['permissions'] = undefined;






export default EntityHierarchyItemProperties;

