/**
 * Management Groups
 * The Azure Management Groups API enables consolidation of multiple subscriptions/resources into an organizational hierarchy and centrally manage access control, policies, alerting and reporting for those resources.
 *
 * The version of the OpenAPI document: 2018-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CheckNameAvailabilityRequest from './model/CheckNameAvailabilityRequest';
import CheckNameAvailabilityResult from './model/CheckNameAvailabilityResult';
import CreateManagementGroupChildInfo from './model/CreateManagementGroupChildInfo';
import CreateManagementGroupDetails from './model/CreateManagementGroupDetails';
import CreateManagementGroupProperties from './model/CreateManagementGroupProperties';
import CreateManagementGroupRequest from './model/CreateManagementGroupRequest';
import CreateParentGroupInfo from './model/CreateParentGroupInfo';
import DescendantInfo from './model/DescendantInfo';
import DescendantInfoProperties from './model/DescendantInfoProperties';
import DescendantListResult from './model/DescendantListResult';
import DescendantParentGroupInfo from './model/DescendantParentGroupInfo';
import EntityHierarchyItem from './model/EntityHierarchyItem';
import EntityHierarchyItemProperties from './model/EntityHierarchyItemProperties';
import EntityInfo from './model/EntityInfo';
import EntityInfoProperties from './model/EntityInfoProperties';
import EntityListResult from './model/EntityListResult';
import EntityParentGroupInfo from './model/EntityParentGroupInfo';
import ErrorDetails from './model/ErrorDetails';
import ErrorResponse from './model/ErrorResponse';
import ManagementGroup from './model/ManagementGroup';
import ManagementGroupChildInfo from './model/ManagementGroupChildInfo';
import ManagementGroupChildType from './model/ManagementGroupChildType';
import ManagementGroupDetails from './model/ManagementGroupDetails';
import ManagementGroupInfo from './model/ManagementGroupInfo';
import ManagementGroupInfoProperties from './model/ManagementGroupInfoProperties';
import ManagementGroupListResult from './model/ManagementGroupListResult';
import ManagementGroupProperties from './model/ManagementGroupProperties';
import Operation from './model/Operation';
import OperationDisplayProperties from './model/OperationDisplayProperties';
import OperationListResult from './model/OperationListResult';
import OperationResults from './model/OperationResults';
import ParentGroupInfo from './model/ParentGroupInfo';
import PatchManagementGroupRequest from './model/PatchManagementGroupRequest';
import Permissions from './model/Permissions';
import Properties from './model/Properties';
import ProvisioningState from './model/ProvisioningState';
import TenantBackfillStatusResult from './model/TenantBackfillStatusResult';
import CheckNameAvailabilityApi from './api/CheckNameAvailabilityApi';
import EntitiesApi from './api/EntitiesApi';
import ManagementGroupsApi from './api/ManagementGroupsApi';
import ManagementGroupsDescendantsApi from './api/ManagementGroupsDescendantsApi';
import OperationsApi from './api/OperationsApi';
import TenantBackfillApi from './api/TenantBackfillApi';


/**
* The Azure Management Groups API enables consolidation of multiple subscriptions/resources into an organizational hierarchy and centrally manage access control, policies, alerting and reporting for those resources..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ManagementGroups = require('index'); // See note below*.
* var xxxSvc = new ManagementGroups.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ManagementGroups.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ManagementGroups.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ManagementGroups.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-03-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CheckNameAvailabilityRequest model constructor.
     * @property {module:model/CheckNameAvailabilityRequest}
     */
    CheckNameAvailabilityRequest,

    /**
     * The CheckNameAvailabilityResult model constructor.
     * @property {module:model/CheckNameAvailabilityResult}
     */
    CheckNameAvailabilityResult,

    /**
     * The CreateManagementGroupChildInfo model constructor.
     * @property {module:model/CreateManagementGroupChildInfo}
     */
    CreateManagementGroupChildInfo,

    /**
     * The CreateManagementGroupDetails model constructor.
     * @property {module:model/CreateManagementGroupDetails}
     */
    CreateManagementGroupDetails,

    /**
     * The CreateManagementGroupProperties model constructor.
     * @property {module:model/CreateManagementGroupProperties}
     */
    CreateManagementGroupProperties,

    /**
     * The CreateManagementGroupRequest model constructor.
     * @property {module:model/CreateManagementGroupRequest}
     */
    CreateManagementGroupRequest,

    /**
     * The CreateParentGroupInfo model constructor.
     * @property {module:model/CreateParentGroupInfo}
     */
    CreateParentGroupInfo,

    /**
     * The DescendantInfo model constructor.
     * @property {module:model/DescendantInfo}
     */
    DescendantInfo,

    /**
     * The DescendantInfoProperties model constructor.
     * @property {module:model/DescendantInfoProperties}
     */
    DescendantInfoProperties,

    /**
     * The DescendantListResult model constructor.
     * @property {module:model/DescendantListResult}
     */
    DescendantListResult,

    /**
     * The DescendantParentGroupInfo model constructor.
     * @property {module:model/DescendantParentGroupInfo}
     */
    DescendantParentGroupInfo,

    /**
     * The EntityHierarchyItem model constructor.
     * @property {module:model/EntityHierarchyItem}
     */
    EntityHierarchyItem,

    /**
     * The EntityHierarchyItemProperties model constructor.
     * @property {module:model/EntityHierarchyItemProperties}
     */
    EntityHierarchyItemProperties,

    /**
     * The EntityInfo model constructor.
     * @property {module:model/EntityInfo}
     */
    EntityInfo,

    /**
     * The EntityInfoProperties model constructor.
     * @property {module:model/EntityInfoProperties}
     */
    EntityInfoProperties,

    /**
     * The EntityListResult model constructor.
     * @property {module:model/EntityListResult}
     */
    EntityListResult,

    /**
     * The EntityParentGroupInfo model constructor.
     * @property {module:model/EntityParentGroupInfo}
     */
    EntityParentGroupInfo,

    /**
     * The ErrorDetails model constructor.
     * @property {module:model/ErrorDetails}
     */
    ErrorDetails,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ManagementGroup model constructor.
     * @property {module:model/ManagementGroup}
     */
    ManagementGroup,

    /**
     * The ManagementGroupChildInfo model constructor.
     * @property {module:model/ManagementGroupChildInfo}
     */
    ManagementGroupChildInfo,

    /**
     * The ManagementGroupChildType model constructor.
     * @property {module:model/ManagementGroupChildType}
     */
    ManagementGroupChildType,

    /**
     * The ManagementGroupDetails model constructor.
     * @property {module:model/ManagementGroupDetails}
     */
    ManagementGroupDetails,

    /**
     * The ManagementGroupInfo model constructor.
     * @property {module:model/ManagementGroupInfo}
     */
    ManagementGroupInfo,

    /**
     * The ManagementGroupInfoProperties model constructor.
     * @property {module:model/ManagementGroupInfoProperties}
     */
    ManagementGroupInfoProperties,

    /**
     * The ManagementGroupListResult model constructor.
     * @property {module:model/ManagementGroupListResult}
     */
    ManagementGroupListResult,

    /**
     * The ManagementGroupProperties model constructor.
     * @property {module:model/ManagementGroupProperties}
     */
    ManagementGroupProperties,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplayProperties model constructor.
     * @property {module:model/OperationDisplayProperties}
     */
    OperationDisplayProperties,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The OperationResults model constructor.
     * @property {module:model/OperationResults}
     */
    OperationResults,

    /**
     * The ParentGroupInfo model constructor.
     * @property {module:model/ParentGroupInfo}
     */
    ParentGroupInfo,

    /**
     * The PatchManagementGroupRequest model constructor.
     * @property {module:model/PatchManagementGroupRequest}
     */
    PatchManagementGroupRequest,

    /**
     * The Permissions model constructor.
     * @property {module:model/Permissions}
     */
    Permissions,

    /**
     * The Properties model constructor.
     * @property {module:model/Properties}
     */
    Properties,

    /**
     * The ProvisioningState model constructor.
     * @property {module:model/ProvisioningState}
     */
    ProvisioningState,

    /**
     * The TenantBackfillStatusResult model constructor.
     * @property {module:model/TenantBackfillStatusResult}
     */
    TenantBackfillStatusResult,

    /**
    * The CheckNameAvailabilityApi service constructor.
    * @property {module:api/CheckNameAvailabilityApi}
    */
    CheckNameAvailabilityApi,

    /**
    * The EntitiesApi service constructor.
    * @property {module:api/EntitiesApi}
    */
    EntitiesApi,

    /**
    * The ManagementGroupsApi service constructor.
    * @property {module:api/ManagementGroupsApi}
    */
    ManagementGroupsApi,

    /**
    * The ManagementGroupsDescendantsApi service constructor.
    * @property {module:api/ManagementGroupsDescendantsApi}
    */
    ManagementGroupsDescendantsApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi,

    /**
    * The TenantBackfillApi service constructor.
    * @property {module:api/TenantBackfillApi}
    */
    TenantBackfillApi
};
