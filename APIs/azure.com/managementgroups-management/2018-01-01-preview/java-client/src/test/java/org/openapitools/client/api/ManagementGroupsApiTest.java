/*
 * Management Groups
 * The Azure Management Groups API enables consolidation of multiple  subscriptions/resources into an organizational hierarchy and centrally  manage access control, policies, alerting and reporting for those resources. 
 *
 * The version of the OpenAPI document: 2018-01-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateManagementGroupRequest;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ManagementGroup;
import org.openapitools.client.model.ManagementGroupListResult;
import org.openapitools.client.model.OperationResults;
import org.openapitools.client.model.PatchManagementGroupRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementGroupsApi
 */
@Disabled
public class ManagementGroupsApiTest {

    private final ManagementGroupsApi api = new ManagementGroupsApi();

    /**
     * Associates existing subscription with the management group. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementGroupSubscriptionsCreateTest() throws ApiException {
        String groupId = null;
        String subscriptionId = null;
        String apiVersion = null;
        String cacheControl = null;
        api.managementGroupSubscriptionsCreate(groupId, subscriptionId, apiVersion, cacheControl);
        // TODO: test validations
    }

    /**
     * De-associates subscription from the management group. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementGroupSubscriptionsDeleteTest() throws ApiException {
        String groupId = null;
        String subscriptionId = null;
        String apiVersion = null;
        String cacheControl = null;
        api.managementGroupSubscriptionsDelete(groupId, subscriptionId, apiVersion, cacheControl);
        // TODO: test validations
    }

    /**
     * Create or update a management group. If a management group is already created and a subsequent create request is issued with different properties, the management group properties will be updated. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementGroupsCreateOrUpdateTest() throws ApiException {
        String groupId = null;
        String apiVersion = null;
        CreateManagementGroupRequest createManagementGroupRequest = null;
        String cacheControl = null;
        ManagementGroup response = api.managementGroupsCreateOrUpdate(groupId, apiVersion, createManagementGroupRequest, cacheControl);
        // TODO: test validations
    }

    /**
     * Delete management group. If a management group contains child resources, the request will fail. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementGroupsDeleteTest() throws ApiException {
        String groupId = null;
        String apiVersion = null;
        String cacheControl = null;
        OperationResults response = api.managementGroupsDelete(groupId, apiVersion, cacheControl);
        // TODO: test validations
    }

    /**
     * Get the details of the management group. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementGroupsGetTest() throws ApiException {
        String groupId = null;
        String apiVersion = null;
        String $expand = null;
        Boolean $recurse = null;
        String $filter = null;
        String cacheControl = null;
        ManagementGroup response = api.managementGroupsGet(groupId, apiVersion, $expand, $recurse, $filter, cacheControl);
        // TODO: test validations
    }

    /**
     * List management groups for the authenticated user. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementGroupsListTest() throws ApiException {
        String apiVersion = null;
        String cacheControl = null;
        String $skiptoken = null;
        ManagementGroupListResult response = api.managementGroupsList(apiVersion, cacheControl, $skiptoken);
        // TODO: test validations
    }

    /**
     * Update a management group. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementGroupsUpdateTest() throws ApiException {
        String groupId = null;
        String apiVersion = null;
        PatchManagementGroupRequest patchGroupRequest = null;
        String cacheControl = null;
        ManagementGroup response = api.managementGroupsUpdate(groupId, apiVersion, patchGroupRequest, cacheControl);
        // TODO: test validations
    }

}
