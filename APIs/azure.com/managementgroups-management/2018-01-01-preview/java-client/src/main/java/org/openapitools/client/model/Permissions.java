/*
 * Management Groups
 * The Azure Management Groups API enables consolidation of multiple  subscriptions/resources into an organizational hierarchy and centrally  manage access control, policies, alerting and reporting for those resources. 
 *
 * The version of the OpenAPI document: 2018-01-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The users specific permissions to this item.
 */
@JsonAdapter(Permissions.Adapter.class)
public enum Permissions {
  
  NOACCESS("noaccess"),
  
  VIEW("view"),
  
  EDIT("edit"),
  
  DELETE("delete");

  private String value;

  Permissions(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Permissions fromValue(String value) {
    for (Permissions b : Permissions.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Permissions> {
    @Override
    public void write(final JsonWriter jsonWriter, final Permissions enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Permissions read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Permissions.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    Permissions.fromValue(value);
  }
}

