/**
 * Management Groups
 * The Azure Management Groups API enables consolidation of multiple  subscriptions/resources into an organizational hierarchy and centrally  manage access control, policies, alerting and reporting for those resources. 
 *
 * The version of the OpenAPI document: 2018-01-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ParentGroupInfo from './ParentGroupInfo';

/**
 * The ManagementGroupDetails model module.
 * @module model/ManagementGroupDetails
 * @version 2018-01-01-preview
 */
class ManagementGroupDetails {
    /**
     * Constructs a new <code>ManagementGroupDetails</code>.
     * The details of a management group.
     * @alias module:model/ManagementGroupDetails
     */
    constructor() { 
        
        ManagementGroupDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagementGroupDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagementGroupDetails} obj Optional instance to populate.
     * @return {module:model/ManagementGroupDetails} The populated <code>ManagementGroupDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagementGroupDetails();

            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ParentGroupInfo.constructFromObject(data['parent']);
            }
            if (data.hasOwnProperty('updatedBy')) {
                obj['updatedBy'] = ApiClient.convertToType(data['updatedBy'], 'String');
            }
            if (data.hasOwnProperty('updatedTime')) {
                obj['updatedTime'] = ApiClient.convertToType(data['updatedTime'], 'Date');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagementGroupDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagementGroupDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `parent`
        if (data['parent']) { // data not null
          ParentGroupInfo.validateJSON(data['parent']);
        }
        // ensure the json data is a string
        if (data['updatedBy'] && !(typeof data['updatedBy'] === 'string' || data['updatedBy'] instanceof String)) {
            throw new Error("Expected the field `updatedBy` to be a primitive type in the JSON string but got " + data['updatedBy']);
        }

        return true;
    }


}



/**
 * @member {module:model/ParentGroupInfo} parent
 */
ManagementGroupDetails.prototype['parent'] = undefined;

/**
 * The identity of the principal or process that updated the object.
 * @member {String} updatedBy
 */
ManagementGroupDetails.prototype['updatedBy'] = undefined;

/**
 * The date and time when this object was last updated.
 * @member {Date} updatedTime
 */
ManagementGroupDetails.prototype['updatedTime'] = undefined;

/**
 * The version number of the object.
 * @member {Number} version
 */
ManagementGroupDetails.prototype['version'] = undefined;






export default ManagementGroupDetails;

