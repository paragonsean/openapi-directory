# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_management_group_child_info import CreateManagementGroupChildInfo
from openapi_server.models.create_management_group_details import CreateManagementGroupDetails
from openapi_server import util


class CreateManagementGroupProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, children: List[CreateManagementGroupChildInfo]=None, details: CreateManagementGroupDetails=None, display_name: str=None, roles: List[str]=None, tenant_id: str=None):
        """CreateManagementGroupProperties - a model defined in OpenAPI

        :param children: The children of this CreateManagementGroupProperties.
        :param details: The details of this CreateManagementGroupProperties.
        :param display_name: The display_name of this CreateManagementGroupProperties.
        :param roles: The roles of this CreateManagementGroupProperties.
        :param tenant_id: The tenant_id of this CreateManagementGroupProperties.
        """
        self.openapi_types = {
            'children': List[CreateManagementGroupChildInfo],
            'details': CreateManagementGroupDetails,
            'display_name': str,
            'roles': List[str],
            'tenant_id': str
        }

        self.attribute_map = {
            'children': 'children',
            'details': 'details',
            'display_name': 'displayName',
            'roles': 'roles',
            'tenant_id': 'tenantId'
        }

        self._children = children
        self._details = details
        self._display_name = display_name
        self._roles = roles
        self._tenant_id = tenant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateManagementGroupProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateManagementGroupProperties of this CreateManagementGroupProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def children(self):
        """Gets the children of this CreateManagementGroupProperties.

        The list of children.

        :return: The children of this CreateManagementGroupProperties.
        :rtype: List[CreateManagementGroupChildInfo]
        """
        return self._children

    @children.setter
    def children(self, children):
        """Sets the children of this CreateManagementGroupProperties.

        The list of children.

        :param children: The children of this CreateManagementGroupProperties.
        :type children: List[CreateManagementGroupChildInfo]
        """

        self._children = children

    @property
    def details(self):
        """Gets the details of this CreateManagementGroupProperties.


        :return: The details of this CreateManagementGroupProperties.
        :rtype: CreateManagementGroupDetails
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this CreateManagementGroupProperties.


        :param details: The details of this CreateManagementGroupProperties.
        :type details: CreateManagementGroupDetails
        """

        self._details = details

    @property
    def display_name(self):
        """Gets the display_name of this CreateManagementGroupProperties.

        The friendly name of the management group. If no value is passed then this  field will be set to the groupId.

        :return: The display_name of this CreateManagementGroupProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CreateManagementGroupProperties.

        The friendly name of the management group. If no value is passed then this  field will be set to the groupId.

        :param display_name: The display_name of this CreateManagementGroupProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def roles(self):
        """Gets the roles of this CreateManagementGroupProperties.

        The roles definitions associated with the management group.

        :return: The roles of this CreateManagementGroupProperties.
        :rtype: List[str]
        """
        return self._roles

    @roles.setter
    def roles(self, roles):
        """Sets the roles of this CreateManagementGroupProperties.

        The roles definitions associated with the management group.

        :param roles: The roles of this CreateManagementGroupProperties.
        :type roles: List[str]
        """

        self._roles = roles

    @property
    def tenant_id(self):
        """Gets the tenant_id of this CreateManagementGroupProperties.

        The AAD Tenant ID associated with the management group. For example, 00000000-0000-0000-0000-000000000000

        :return: The tenant_id of this CreateManagementGroupProperties.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this CreateManagementGroupProperties.

        The AAD Tenant ID associated with the management group. For example, 00000000-0000-0000-0000-000000000000

        :param tenant_id: The tenant_id of this CreateManagementGroupProperties.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id
