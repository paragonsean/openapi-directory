# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entity_parent_group_info import EntityParentGroupInfo
from openapi_server.models.permissions import Permissions
from openapi_server import util


class EntityInfoProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, parent: EntityParentGroupInfo=None, permissions: Permissions=None, tenant_id: str=None):
        """EntityInfoProperties - a model defined in OpenAPI

        :param display_name: The display_name of this EntityInfoProperties.
        :param parent: The parent of this EntityInfoProperties.
        :param permissions: The permissions of this EntityInfoProperties.
        :param tenant_id: The tenant_id of this EntityInfoProperties.
        """
        self.openapi_types = {
            'display_name': str,
            'parent': EntityParentGroupInfo,
            'permissions': Permissions,
            'tenant_id': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'parent': 'parent',
            'permissions': 'permissions',
            'tenant_id': 'tenantId'
        }

        self._display_name = display_name
        self._parent = parent
        self._permissions = permissions
        self._tenant_id = tenant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntityInfoProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntityInfoProperties of this EntityInfoProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this EntityInfoProperties.

        The friendly name of the management group.

        :return: The display_name of this EntityInfoProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this EntityInfoProperties.

        The friendly name of the management group.

        :param display_name: The display_name of this EntityInfoProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def parent(self):
        """Gets the parent of this EntityInfoProperties.


        :return: The parent of this EntityInfoProperties.
        :rtype: EntityParentGroupInfo
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this EntityInfoProperties.


        :param parent: The parent of this EntityInfoProperties.
        :type parent: EntityParentGroupInfo
        """

        self._parent = parent

    @property
    def permissions(self):
        """Gets the permissions of this EntityInfoProperties.


        :return: The permissions of this EntityInfoProperties.
        :rtype: Permissions
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this EntityInfoProperties.


        :param permissions: The permissions of this EntityInfoProperties.
        :type permissions: Permissions
        """

        self._permissions = permissions

    @property
    def tenant_id(self):
        """Gets the tenant_id of this EntityInfoProperties.

        The AAD Tenant ID associated with the entity. For example, 00000000-0000-0000-0000-000000000000

        :return: The tenant_id of this EntityInfoProperties.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this EntityInfoProperties.

        The AAD Tenant ID associated with the entity. For example, 00000000-0000-0000-0000-000000000000

        :param tenant_id: The tenant_id of this EntityInfoProperties.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id
