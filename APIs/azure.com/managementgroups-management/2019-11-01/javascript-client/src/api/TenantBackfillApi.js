/**
 * Management Groups
 * The Azure Management Groups API enables consolidation of multiple subscriptions/resources into an organizational hierarchy and centrally manage access control, policies, alerting and reporting for those resources.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import TenantBackfillStatusResult from '../model/TenantBackfillStatusResult';

/**
* TenantBackfill service.
* @module api/TenantBackfillApi
* @version 2019-11-01
*/
export default class TenantBackfillApi {

    /**
    * Constructs a new TenantBackfillApi. 
    * @alias module:api/TenantBackfillApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the startTenantBackfill operation.
     * @callback module:api/TenantBackfillApi~startTenantBackfillCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TenantBackfillStatusResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Starts backfilling subscriptions for the Tenant.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-01-01-preview.
     * @param {module:api/TenantBackfillApi~startTenantBackfillCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TenantBackfillStatusResult}
     */
    startTenantBackfill(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling startTenantBackfill");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TenantBackfillStatusResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/startTenantBackfill', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenantBackfillStatus operation.
     * @callback module:api/TenantBackfillApi~tenantBackfillStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TenantBackfillStatusResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets tenant backfill status
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-01-01-preview.
     * @param {module:api/TenantBackfillApi~tenantBackfillStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TenantBackfillStatusResult}
     */
    tenantBackfillStatus(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tenantBackfillStatus");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TenantBackfillStatusResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/tenantBackfillStatus', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
