/**
 * Management Groups
 * The Azure Management Groups API enables consolidation of multiple subscriptions/resources into an organizational hierarchy and centrally manage access control, policies, alerting and reporting for those resources.
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPermissions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPermissions::OAIPermissions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPermissions::OAIPermissions() {
    this->initializeModel();
}

OAIPermissions::~OAIPermissions() {}

void OAIPermissions::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPermissions::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPermissions::fromJson(QString jsonString) {
    
    if ( jsonString.compare("noaccess", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPermissions::NOACCESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("view", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPermissions::VIEW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("edit", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPermissions::EDIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("delete", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPermissions::DELETE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPermissions::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPermissions::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPermissions::NOACCESS:
            val = "noaccess";
            break;
        case eOAIPermissions::VIEW:
            val = "view";
            break;
        case eOAIPermissions::EDIT:
            val = "edit";
            break;
        case eOAIPermissions::DELETE:
            val = "delete";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPermissions::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPermissions::eOAIPermissions OAIPermissions::getValue() const {
    return m_value;
}

void OAIPermissions::setValue(const OAIPermissions::eOAIPermissions& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPermissions::isSet() const {
    
    return m_value_isSet;
}

bool OAIPermissions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
