# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.management_group_type import ManagementGroupType
from openapi_server import util


class ManagementGroupRecursiveChildInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, child_id: str=None, child_type: ManagementGroupType=None, children: List[ManagementGroupRecursiveChildInfo]=None, display_name: str=None, tenant_id: str=None):
        """ManagementGroupRecursiveChildInfo - a model defined in OpenAPI

        :param child_id: The child_id of this ManagementGroupRecursiveChildInfo.
        :param child_type: The child_type of this ManagementGroupRecursiveChildInfo.
        :param children: The children of this ManagementGroupRecursiveChildInfo.
        :param display_name: The display_name of this ManagementGroupRecursiveChildInfo.
        :param tenant_id: The tenant_id of this ManagementGroupRecursiveChildInfo.
        """
        self.openapi_types = {
            'child_id': str,
            'child_type': ManagementGroupType,
            'children': List[ManagementGroupRecursiveChildInfo],
            'display_name': str,
            'tenant_id': str
        }

        self.attribute_map = {
            'child_id': 'childId',
            'child_type': 'childType',
            'children': 'children',
            'display_name': 'displayName',
            'tenant_id': 'tenantId'
        }

        self._child_id = child_id
        self._child_type = child_type
        self._children = children
        self._display_name = display_name
        self._tenant_id = tenant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagementGroupRecursiveChildInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagementGroupRecursiveChildInfo of this ManagementGroupRecursiveChildInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def child_id(self):
        """Gets the child_id of this ManagementGroupRecursiveChildInfo.

        The ID of the child resource (management group or subscription). E.g. /providers/Microsoft.Management/managementGroups/40000000-0000-0000-0000-000000000000

        :return: The child_id of this ManagementGroupRecursiveChildInfo.
        :rtype: str
        """
        return self._child_id

    @child_id.setter
    def child_id(self, child_id):
        """Sets the child_id of this ManagementGroupRecursiveChildInfo.

        The ID of the child resource (management group or subscription). E.g. /providers/Microsoft.Management/managementGroups/40000000-0000-0000-0000-000000000000

        :param child_id: The child_id of this ManagementGroupRecursiveChildInfo.
        :type child_id: str
        """

        self._child_id = child_id

    @property
    def child_type(self):
        """Gets the child_type of this ManagementGroupRecursiveChildInfo.


        :return: The child_type of this ManagementGroupRecursiveChildInfo.
        :rtype: ManagementGroupType
        """
        return self._child_type

    @child_type.setter
    def child_type(self, child_type):
        """Sets the child_type of this ManagementGroupRecursiveChildInfo.


        :param child_type: The child_type of this ManagementGroupRecursiveChildInfo.
        :type child_type: ManagementGroupType
        """

        self._child_type = child_type

    @property
    def children(self):
        """Gets the children of this ManagementGroupRecursiveChildInfo.

        The list of children.

        :return: The children of this ManagementGroupRecursiveChildInfo.
        :rtype: List[ManagementGroupRecursiveChildInfo]
        """
        return self._children

    @children.setter
    def children(self, children):
        """Sets the children of this ManagementGroupRecursiveChildInfo.

        The list of children.

        :param children: The children of this ManagementGroupRecursiveChildInfo.
        :type children: List[ManagementGroupRecursiveChildInfo]
        """

        self._children = children

    @property
    def display_name(self):
        """Gets the display_name of this ManagementGroupRecursiveChildInfo.

        The friendly name of the child resource.

        :return: The display_name of this ManagementGroupRecursiveChildInfo.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ManagementGroupRecursiveChildInfo.

        The friendly name of the child resource.

        :param display_name: The display_name of this ManagementGroupRecursiveChildInfo.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def tenant_id(self):
        """Gets the tenant_id of this ManagementGroupRecursiveChildInfo.

        (Optional) The AAD Tenant ID associated with the child resource.

        :return: The tenant_id of this ManagementGroupRecursiveChildInfo.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this ManagementGroupRecursiveChildInfo.

        (Optional) The AAD Tenant ID associated with the child resource.

        :param tenant_id: The tenant_id of this ManagementGroupRecursiveChildInfo.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id
