/**
 * Management Groups
 * The Azure Management Groups API enables consolidation of multiple  subscriptions/resources into an organizational hierarchy and centrally  manage access control, policies, alerting and reporting for those resources. 
 *
 * The version of the OpenAPI document: 2017-08-31-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ManagementGroupType from './ManagementGroupType';

/**
 * The ManagementGroupRecursiveChildInfo model module.
 * @module model/ManagementGroupRecursiveChildInfo
 * @version 2017-08-31-preview
 */
class ManagementGroupRecursiveChildInfo {
    /**
     * Constructs a new <code>ManagementGroupRecursiveChildInfo</code>.
     * The unique identifier (ID) of a management group.
     * @alias module:model/ManagementGroupRecursiveChildInfo
     */
    constructor() { 
        
        ManagementGroupRecursiveChildInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagementGroupRecursiveChildInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagementGroupRecursiveChildInfo} obj Optional instance to populate.
     * @return {module:model/ManagementGroupRecursiveChildInfo} The populated <code>ManagementGroupRecursiveChildInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagementGroupRecursiveChildInfo();

            if (data.hasOwnProperty('childId')) {
                obj['childId'] = ApiClient.convertToType(data['childId'], 'String');
            }
            if (data.hasOwnProperty('childType')) {
                obj['childType'] = ManagementGroupType.constructFromObject(data['childType']);
            }
            if (data.hasOwnProperty('children')) {
                obj['children'] = ApiClient.convertToType(data['children'], [ManagementGroupRecursiveChildInfo]);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagementGroupRecursiveChildInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagementGroupRecursiveChildInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['childId'] && !(typeof data['childId'] === 'string' || data['childId'] instanceof String)) {
            throw new Error("Expected the field `childId` to be a primitive type in the JSON string but got " + data['childId']);
        }
        if (data['children']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['children'])) {
                throw new Error("Expected the field `children` to be an array in the JSON data but got " + data['children']);
            }
            // validate the optional field `children` (array)
            for (const item of data['children']) {
                ManagementGroupRecursiveChildInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['tenantId'] && !(typeof data['tenantId'] === 'string' || data['tenantId'] instanceof String)) {
            throw new Error("Expected the field `tenantId` to be a primitive type in the JSON string but got " + data['tenantId']);
        }

        return true;
    }


}



/**
 * The ID of the child resource (management group or subscription). E.g. /providers/Microsoft.Management/managementGroups/40000000-0000-0000-0000-000000000000
 * @member {String} childId
 */
ManagementGroupRecursiveChildInfo.prototype['childId'] = undefined;

/**
 * @member {module:model/ManagementGroupType} childType
 */
ManagementGroupRecursiveChildInfo.prototype['childType'] = undefined;

/**
 * The list of children.
 * @member {Array.<module:model/ManagementGroupRecursiveChildInfo>} children
 */
ManagementGroupRecursiveChildInfo.prototype['children'] = undefined;

/**
 * The friendly name of the child resource.
 * @member {String} displayName
 */
ManagementGroupRecursiveChildInfo.prototype['displayName'] = undefined;

/**
 * (Optional) The AAD Tenant ID associated with the child resource.
 * @member {String} tenantId
 */
ManagementGroupRecursiveChildInfo.prototype['tenantId'] = undefined;






export default ManagementGroupRecursiveChildInfo;

