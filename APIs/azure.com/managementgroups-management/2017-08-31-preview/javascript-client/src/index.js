/**
 * Management Groups
 * The Azure Management Groups API enables consolidation of multiple  subscriptions/resources into an organizational hierarchy and centrally  manage access control, policies, alerting and reporting for those resources. 
 *
 * The version of the OpenAPI document: 2017-08-31-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ErrorDetails from './model/ErrorDetails';
import ErrorResponse from './model/ErrorResponse';
import ManagementGroup from './model/ManagementGroup';
import ManagementGroupChildInfo from './model/ManagementGroupChildInfo';
import ManagementGroupDetailsProperties from './model/ManagementGroupDetailsProperties';
import ManagementGroupInfo from './model/ManagementGroupInfo';
import ManagementGroupInfoProperties from './model/ManagementGroupInfoProperties';
import ManagementGroupListResult from './model/ManagementGroupListResult';
import ManagementGroupProperties from './model/ManagementGroupProperties';
import ManagementGroupPropertiesWithChildren from './model/ManagementGroupPropertiesWithChildren';
import ManagementGroupPropertiesWithHierarchy from './model/ManagementGroupPropertiesWithHierarchy';
import ManagementGroupRecursiveChildInfo from './model/ManagementGroupRecursiveChildInfo';
import ManagementGroupType from './model/ManagementGroupType';
import ManagementGroupWithChildren from './model/ManagementGroupWithChildren';
import ManagementGroupWithHierarchy from './model/ManagementGroupWithHierarchy';
import Operation from './model/Operation';
import OperationDisplay from './model/OperationDisplay';
import OperationListResult from './model/OperationListResult';
import ParentGroupInfo from './model/ParentGroupInfo';
import ManagementGroupsApi from './api/ManagementGroupsApi';
import OperationsApi from './api/OperationsApi';


/**
* The Azure Management Groups API enables consolidation of multiple  subscriptions/resources into an organizational hierarchy and centrally  manage access control, policies, alerting and reporting for those resources. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ManagementGroups = require('index'); // See note below*.
* var xxxSvc = new ManagementGroups.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ManagementGroups.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ManagementGroups.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ManagementGroups.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-08-31-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ErrorDetails model constructor.
     * @property {module:model/ErrorDetails}
     */
    ErrorDetails,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ManagementGroup model constructor.
     * @property {module:model/ManagementGroup}
     */
    ManagementGroup,

    /**
     * The ManagementGroupChildInfo model constructor.
     * @property {module:model/ManagementGroupChildInfo}
     */
    ManagementGroupChildInfo,

    /**
     * The ManagementGroupDetailsProperties model constructor.
     * @property {module:model/ManagementGroupDetailsProperties}
     */
    ManagementGroupDetailsProperties,

    /**
     * The ManagementGroupInfo model constructor.
     * @property {module:model/ManagementGroupInfo}
     */
    ManagementGroupInfo,

    /**
     * The ManagementGroupInfoProperties model constructor.
     * @property {module:model/ManagementGroupInfoProperties}
     */
    ManagementGroupInfoProperties,

    /**
     * The ManagementGroupListResult model constructor.
     * @property {module:model/ManagementGroupListResult}
     */
    ManagementGroupListResult,

    /**
     * The ManagementGroupProperties model constructor.
     * @property {module:model/ManagementGroupProperties}
     */
    ManagementGroupProperties,

    /**
     * The ManagementGroupPropertiesWithChildren model constructor.
     * @property {module:model/ManagementGroupPropertiesWithChildren}
     */
    ManagementGroupPropertiesWithChildren,

    /**
     * The ManagementGroupPropertiesWithHierarchy model constructor.
     * @property {module:model/ManagementGroupPropertiesWithHierarchy}
     */
    ManagementGroupPropertiesWithHierarchy,

    /**
     * The ManagementGroupRecursiveChildInfo model constructor.
     * @property {module:model/ManagementGroupRecursiveChildInfo}
     */
    ManagementGroupRecursiveChildInfo,

    /**
     * The ManagementGroupType model constructor.
     * @property {module:model/ManagementGroupType}
     */
    ManagementGroupType,

    /**
     * The ManagementGroupWithChildren model constructor.
     * @property {module:model/ManagementGroupWithChildren}
     */
    ManagementGroupWithChildren,

    /**
     * The ManagementGroupWithHierarchy model constructor.
     * @property {module:model/ManagementGroupWithHierarchy}
     */
    ManagementGroupWithHierarchy,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The ParentGroupInfo model constructor.
     * @property {module:model/ParentGroupInfo}
     */
    ParentGroupInfo,

    /**
    * The ManagementGroupsApi service constructor.
    * @property {module:api/ManagementGroupsApi}
    */
    ManagementGroupsApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi
};
