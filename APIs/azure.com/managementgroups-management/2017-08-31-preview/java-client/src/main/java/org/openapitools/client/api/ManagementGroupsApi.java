/*
 * Management Groups
 * The Azure Management Groups API enables consolidation of multiple  subscriptions/resources into an organizational hierarchy and centrally  manage access control, policies, alerting and reporting for those resources. 
 *
 * The version of the OpenAPI document: 2017-08-31-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ManagementGroupListResult;
import org.openapitools.client.model.ManagementGroupWithHierarchy;
import java.util.UUID;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ManagementGroupsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ManagementGroupsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ManagementGroupsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for managementGroupsGet
     * @param groupId Management Group ID. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2017-08-31-preview. (required)
     * @param $expand The $expand&#x3D;children query string parameter allows clients to request inclusion of children in the response payload. (optional)
     * @param $recurse The $recurse&#x3D;true query string parameter allows clients to request inclusion of entire hierarchy in the response payload. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call managementGroupsGetCall(UUID groupId, String apiVersion, String $expand, Boolean $recurse, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Management/managementGroups/{groupId}"
            .replace("{" + "groupId" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if ($recurse != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$recurse", $recurse));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call managementGroupsGetValidateBeforeCall(UUID groupId, String apiVersion, String $expand, Boolean $recurse, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling managementGroupsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling managementGroupsGet(Async)");
        }

        return managementGroupsGetCall(groupId, apiVersion, $expand, $recurse, _callback);

    }

    /**
     * 
     * Get the details of the management group. 
     * @param groupId Management Group ID. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2017-08-31-preview. (required)
     * @param $expand The $expand&#x3D;children query string parameter allows clients to request inclusion of children in the response payload. (optional)
     * @param $recurse The $recurse&#x3D;true query string parameter allows clients to request inclusion of entire hierarchy in the response payload. (optional)
     * @return ManagementGroupWithHierarchy
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public ManagementGroupWithHierarchy managementGroupsGet(UUID groupId, String apiVersion, String $expand, Boolean $recurse) throws ApiException {
        ApiResponse<ManagementGroupWithHierarchy> localVarResp = managementGroupsGetWithHttpInfo(groupId, apiVersion, $expand, $recurse);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the details of the management group. 
     * @param groupId Management Group ID. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2017-08-31-preview. (required)
     * @param $expand The $expand&#x3D;children query string parameter allows clients to request inclusion of children in the response payload. (optional)
     * @param $recurse The $recurse&#x3D;true query string parameter allows clients to request inclusion of entire hierarchy in the response payload. (optional)
     * @return ApiResponse&lt;ManagementGroupWithHierarchy&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ManagementGroupWithHierarchy> managementGroupsGetWithHttpInfo(UUID groupId, String apiVersion, String $expand, Boolean $recurse) throws ApiException {
        okhttp3.Call localVarCall = managementGroupsGetValidateBeforeCall(groupId, apiVersion, $expand, $recurse, null);
        Type localVarReturnType = new TypeToken<ManagementGroupWithHierarchy>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the details of the management group. 
     * @param groupId Management Group ID. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2017-08-31-preview. (required)
     * @param $expand The $expand&#x3D;children query string parameter allows clients to request inclusion of children in the response payload. (optional)
     * @param $recurse The $recurse&#x3D;true query string parameter allows clients to request inclusion of entire hierarchy in the response payload. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call managementGroupsGetAsync(UUID groupId, String apiVersion, String $expand, Boolean $recurse, final ApiCallback<ManagementGroupWithHierarchy> _callback) throws ApiException {

        okhttp3.Call localVarCall = managementGroupsGetValidateBeforeCall(groupId, apiVersion, $expand, $recurse, _callback);
        Type localVarReturnType = new TypeToken<ManagementGroupWithHierarchy>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for managementGroupsList
     * @param apiVersion Version of the API to be used with the client request. The current version is 2017-08-31-preview. (required)
     * @param $skiptoken Page continuation token is only used if a previous operation returned a partial result.  If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call managementGroupsListCall(String apiVersion, String $skiptoken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Management/managementGroups";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call managementGroupsListValidateBeforeCall(String apiVersion, String $skiptoken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling managementGroupsList(Async)");
        }

        return managementGroupsListCall(apiVersion, $skiptoken, _callback);

    }

    /**
     * 
     * List management groups for the authenticated user. 
     * @param apiVersion Version of the API to be used with the client request. The current version is 2017-08-31-preview. (required)
     * @param $skiptoken Page continuation token is only used if a previous operation returned a partial result.  If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.  (optional)
     * @return ManagementGroupListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public ManagementGroupListResult managementGroupsList(String apiVersion, String $skiptoken) throws ApiException {
        ApiResponse<ManagementGroupListResult> localVarResp = managementGroupsListWithHttpInfo(apiVersion, $skiptoken);
        return localVarResp.getData();
    }

    /**
     * 
     * List management groups for the authenticated user. 
     * @param apiVersion Version of the API to be used with the client request. The current version is 2017-08-31-preview. (required)
     * @param $skiptoken Page continuation token is only used if a previous operation returned a partial result.  If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.  (optional)
     * @return ApiResponse&lt;ManagementGroupListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ManagementGroupListResult> managementGroupsListWithHttpInfo(String apiVersion, String $skiptoken) throws ApiException {
        okhttp3.Call localVarCall = managementGroupsListValidateBeforeCall(apiVersion, $skiptoken, null);
        Type localVarReturnType = new TypeToken<ManagementGroupListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * List management groups for the authenticated user. 
     * @param apiVersion Version of the API to be used with the client request. The current version is 2017-08-31-preview. (required)
     * @param $skiptoken Page continuation token is only used if a previous operation returned a partial result.  If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call managementGroupsListAsync(String apiVersion, String $skiptoken, final ApiCallback<ManagementGroupListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = managementGroupsListValidateBeforeCall(apiVersion, $skiptoken, _callback);
        Type localVarReturnType = new TypeToken<ManagementGroupListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
