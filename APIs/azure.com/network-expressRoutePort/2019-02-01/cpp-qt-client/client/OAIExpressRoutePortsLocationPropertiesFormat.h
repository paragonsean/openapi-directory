/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExpressRoutePortsLocationPropertiesFormat.h
 *
 * Properties specific to ExpressRoutePorts peering location resources.
 */

#ifndef OAIExpressRoutePortsLocationPropertiesFormat_H
#define OAIExpressRoutePortsLocationPropertiesFormat_H

#include <QJsonObject>

#include "OAIExpressRoutePortsLocationBandwidths.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExpressRoutePortsLocationBandwidths;

class OAIExpressRoutePortsLocationPropertiesFormat : public OAIObject {
public:
    OAIExpressRoutePortsLocationPropertiesFormat();
    OAIExpressRoutePortsLocationPropertiesFormat(QString json);
    ~OAIExpressRoutePortsLocationPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QList<OAIExpressRoutePortsLocationBandwidths> getAvailableBandwidths() const;
    void setAvailableBandwidths(const QList<OAIExpressRoutePortsLocationBandwidths> &available_bandwidths);
    bool is_available_bandwidths_Set() const;
    bool is_available_bandwidths_Valid() const;

    QString getContact() const;
    void setContact(const QString &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QList<OAIExpressRoutePortsLocationBandwidths> m_available_bandwidths;
    bool m_available_bandwidths_isSet;
    bool m_available_bandwidths_isValid;

    QString m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExpressRoutePortsLocationPropertiesFormat)

#endif // OAIExpressRoutePortsLocationPropertiesFormat_H
