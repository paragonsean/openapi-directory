/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExpressRoutePortPropertiesFormat_circuits_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExpressRoutePortPropertiesFormat_circuits_inner::OAIExpressRoutePortPropertiesFormat_circuits_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExpressRoutePortPropertiesFormat_circuits_inner::OAIExpressRoutePortPropertiesFormat_circuits_inner() {
    this->initializeModel();
}

OAIExpressRoutePortPropertiesFormat_circuits_inner::~OAIExpressRoutePortPropertiesFormat_circuits_inner() {}

void OAIExpressRoutePortPropertiesFormat_circuits_inner::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAIExpressRoutePortPropertiesFormat_circuits_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExpressRoutePortPropertiesFormat_circuits_inner::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAIExpressRoutePortPropertiesFormat_circuits_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExpressRoutePortPropertiesFormat_circuits_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    return obj;
}

QString OAIExpressRoutePortPropertiesFormat_circuits_inner::getId() const {
    return m_id;
}
void OAIExpressRoutePortPropertiesFormat_circuits_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIExpressRoutePortPropertiesFormat_circuits_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIExpressRoutePortPropertiesFormat_circuits_inner::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIExpressRoutePortPropertiesFormat_circuits_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExpressRoutePortPropertiesFormat_circuits_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
