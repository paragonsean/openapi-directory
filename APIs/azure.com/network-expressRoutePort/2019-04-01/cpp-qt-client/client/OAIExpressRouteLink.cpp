/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExpressRouteLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExpressRouteLink::OAIExpressRouteLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExpressRouteLink::OAIExpressRouteLink() {
    this->initializeModel();
}

OAIExpressRouteLink::~OAIExpressRouteLink() {}

void OAIExpressRouteLink::initializeModel() {

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAIExpressRouteLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExpressRouteLink::fromJsonObject(QJsonObject json) {

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAIExpressRouteLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExpressRouteLink::asJsonObject() const {
    QJsonObject obj;
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    return obj;
}

QString OAIExpressRouteLink::getEtag() const {
    return m_etag;
}
void OAIExpressRouteLink::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIExpressRouteLink::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIExpressRouteLink::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAIExpressRouteLink::getName() const {
    return m_name;
}
void OAIExpressRouteLink::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIExpressRouteLink::is_name_Set() const{
    return m_name_isSet;
}

bool OAIExpressRouteLink::is_name_Valid() const{
    return m_name_isValid;
}

OAIExpressRouteLinkPropertiesFormat OAIExpressRouteLink::getProperties() const {
    return m_properties;
}
void OAIExpressRouteLink::setProperties(const OAIExpressRouteLinkPropertiesFormat &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIExpressRouteLink::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIExpressRouteLink::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIExpressRouteLink::getId() const {
    return m_id;
}
void OAIExpressRouteLink::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIExpressRouteLink::is_id_Set() const{
    return m_id_isSet;
}

bool OAIExpressRouteLink::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIExpressRouteLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExpressRouteLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
