/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Real-time inventory of available ExpressRoute port bandwidths.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:21:31.836996-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ExpressRoutePortsLocationBandwidths {
  public static final String SERIALIZED_NAME_OFFER_NAME = "offerName";
  @SerializedName(SERIALIZED_NAME_OFFER_NAME)
  private String offerName;

  public static final String SERIALIZED_NAME_VALUE_IN_GBPS = "valueInGbps";
  @SerializedName(SERIALIZED_NAME_VALUE_IN_GBPS)
  private Integer valueInGbps;

  public ExpressRoutePortsLocationBandwidths() {
  }

  public ExpressRoutePortsLocationBandwidths(
     String offerName, 
     Integer valueInGbps
  ) {
    this();
    this.offerName = offerName;
    this.valueInGbps = valueInGbps;
  }

  /**
   * Bandwidth descriptive name.
   * @return offerName
   */
  @javax.annotation.Nullable
  public String getOfferName() {
    return offerName;
  }



  /**
   * Bandwidth value in Gbps.
   * @return valueInGbps
   */
  @javax.annotation.Nullable
  public Integer getValueInGbps() {
    return valueInGbps;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpressRoutePortsLocationBandwidths expressRoutePortsLocationBandwidths = (ExpressRoutePortsLocationBandwidths) o;
    return Objects.equals(this.offerName, expressRoutePortsLocationBandwidths.offerName) &&
        Objects.equals(this.valueInGbps, expressRoutePortsLocationBandwidths.valueInGbps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(offerName, valueInGbps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpressRoutePortsLocationBandwidths {\n");
    sb.append("    offerName: ").append(toIndentedString(offerName)).append("\n");
    sb.append("    valueInGbps: ").append(toIndentedString(valueInGbps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("offerName");
    openapiFields.add("valueInGbps");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ExpressRoutePortsLocationBandwidths
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExpressRoutePortsLocationBandwidths.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExpressRoutePortsLocationBandwidths is not found in the empty JSON string", ExpressRoutePortsLocationBandwidths.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExpressRoutePortsLocationBandwidths.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExpressRoutePortsLocationBandwidths` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("offerName") != null && !jsonObj.get("offerName").isJsonNull()) && !jsonObj.get("offerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offerName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExpressRoutePortsLocationBandwidths.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExpressRoutePortsLocationBandwidths' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExpressRoutePortsLocationBandwidths> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExpressRoutePortsLocationBandwidths.class));

       return (TypeAdapter<T>) new TypeAdapter<ExpressRoutePortsLocationBandwidths>() {
           @Override
           public void write(JsonWriter out, ExpressRoutePortsLocationBandwidths value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExpressRoutePortsLocationBandwidths read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ExpressRoutePortsLocationBandwidths given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ExpressRoutePortsLocationBandwidths
   * @throws IOException if the JSON string is invalid with respect to ExpressRoutePortsLocationBandwidths
   */
  public static ExpressRoutePortsLocationBandwidths fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExpressRoutePortsLocationBandwidths.class);
  }

  /**
   * Convert an instance of ExpressRoutePortsLocationBandwidths to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

