/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ExpressRouteLink from '../model/ExpressRouteLink';
import ExpressRouteLinkListResult from '../model/ExpressRouteLinkListResult';

/**
* ExpressRouteLinks service.
* @module api/ExpressRouteLinksApi
* @version 2018-11-01
*/
export default class ExpressRouteLinksApi {

    /**
    * Constructs a new ExpressRouteLinksApi. 
    * @alias module:api/ExpressRouteLinksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the expressRouteLinksGet operation.
     * @callback module:api/ExpressRouteLinksApi~expressRouteLinksGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpressRouteLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the specified ExpressRouteLink resource.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API version.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} expressRoutePortName The name of the ExpressRoutePort resource.
     * @param {String} linkName The name of the ExpressRouteLink resource.
     * @param {module:api/ExpressRouteLinksApi~expressRouteLinksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpressRouteLink}
     */
    expressRouteLinksGet(subscriptionId, apiVersion, resourceGroupName, expressRoutePortName, linkName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteLinksGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteLinksGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteLinksGet");
      }
      // verify the required parameter 'expressRoutePortName' is set
      if (expressRoutePortName === undefined || expressRoutePortName === null) {
        throw new Error("Missing the required parameter 'expressRoutePortName' when calling expressRouteLinksGet");
      }
      // verify the required parameter 'linkName' is set
      if (linkName === undefined || linkName === null) {
        throw new Error("Missing the required parameter 'linkName' when calling expressRouteLinksGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'expressRoutePortName': expressRoutePortName,
        'linkName': linkName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExpressRouteLink;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}/links/{linkName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the expressRouteLinksList operation.
     * @callback module:api/ExpressRouteLinksApi~expressRouteLinksListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExpressRouteLinkListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the ExpressRouteLink sub-resources of the specified ExpressRoutePort resource.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API version.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} expressRoutePortName The name of the ExpressRoutePort resource.
     * @param {module:api/ExpressRouteLinksApi~expressRouteLinksListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExpressRouteLinkListResult}
     */
    expressRouteLinksList(subscriptionId, apiVersion, resourceGroupName, expressRoutePortName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling expressRouteLinksList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling expressRouteLinksList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling expressRouteLinksList");
      }
      // verify the required parameter 'expressRoutePortName' is set
      if (expressRoutePortName === undefined || expressRoutePortName === null) {
        throw new Error("Missing the required parameter 'expressRoutePortName' when calling expressRouteLinksList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'expressRoutePortName': expressRoutePortName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExpressRouteLinkListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}/links', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
