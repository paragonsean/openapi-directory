/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ExpressRoutePortsLocation;
import org.openapitools.client.model.ExpressRoutePortsLocationListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExpressRoutePortsLocationsApi
 */
@Disabled
public class ExpressRoutePortsLocationsApiTest {

    private final ExpressRoutePortsLocationsApi api = new ExpressRoutePortsLocationsApi();

    /**
     * Retrieves a single ExpressRoutePort peering location, including the list of available bandwidths available at said peering location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRoutePortsLocationsGetTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String locationName = null;
        ExpressRoutePortsLocation response = api.expressRoutePortsLocationsGet(subscriptionId, apiVersion, locationName);
        // TODO: test validations
    }

    /**
     * Retrieves all ExpressRoutePort peering locations. Does not return available bandwidths for each location. Available bandwidths can only be obtained when retrieving a specific peering location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRoutePortsLocationsListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        ExpressRoutePortsLocationListResult response = api.expressRoutePortsLocationsList(subscriptionId, apiVersion);
        // TODO: test validations
    }

}
