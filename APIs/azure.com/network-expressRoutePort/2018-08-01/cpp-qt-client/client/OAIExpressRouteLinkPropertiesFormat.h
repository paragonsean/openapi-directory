/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExpressRouteLinkPropertiesFormat.h
 *
 * Properties specific to ExpressRouteLink resources.
 */

#ifndef OAIExpressRouteLinkPropertiesFormat_H
#define OAIExpressRouteLinkPropertiesFormat_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExpressRouteLinkPropertiesFormat : public OAIObject {
public:
    OAIExpressRouteLinkPropertiesFormat();
    OAIExpressRouteLinkPropertiesFormat(QString json);
    ~OAIExpressRouteLinkPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdminState() const;
    void setAdminState(const QString &admin_state);
    bool is_admin_state_Set() const;
    bool is_admin_state_Valid() const;

    QString getConnectorType() const;
    void setConnectorType(const QString &connector_type);
    bool is_connector_type_Set() const;
    bool is_connector_type_Valid() const;

    QString getInterfaceName() const;
    void setInterfaceName(const QString &interface_name);
    bool is_interface_name_Set() const;
    bool is_interface_name_Valid() const;

    QString getPatchPanelId() const;
    void setPatchPanelId(const QString &patch_panel_id);
    bool is_patch_panel_id_Set() const;
    bool is_patch_panel_id_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getRackId() const;
    void setRackId(const QString &rack_id);
    bool is_rack_id_Set() const;
    bool is_rack_id_Valid() const;

    QString getRouterName() const;
    void setRouterName(const QString &router_name);
    bool is_router_name_Set() const;
    bool is_router_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_admin_state;
    bool m_admin_state_isSet;
    bool m_admin_state_isValid;

    QString m_connector_type;
    bool m_connector_type_isSet;
    bool m_connector_type_isValid;

    QString m_interface_name;
    bool m_interface_name_isSet;
    bool m_interface_name_isValid;

    QString m_patch_panel_id;
    bool m_patch_panel_id_isSet;
    bool m_patch_panel_id_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_rack_id;
    bool m_rack_id_isSet;
    bool m_rack_id_isValid;

    QString m_router_name;
    bool m_router_name_isSet;
    bool m_router_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExpressRouteLinkPropertiesFormat)

#endif // OAIExpressRouteLinkPropertiesFormat_H
