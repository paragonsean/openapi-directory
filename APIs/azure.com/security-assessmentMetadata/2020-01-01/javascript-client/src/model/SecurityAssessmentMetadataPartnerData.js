/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SecurityAssessmentMetadataPartnerData model module.
 * @module model/SecurityAssessmentMetadataPartnerData
 * @version 2020-01-01
 */
class SecurityAssessmentMetadataPartnerData {
    /**
     * Constructs a new <code>SecurityAssessmentMetadataPartnerData</code>.
     * Describes the partner that created the assessment
     * @alias module:model/SecurityAssessmentMetadataPartnerData
     */
    constructor() { 
        
        SecurityAssessmentMetadataPartnerData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SecurityAssessmentMetadataPartnerData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecurityAssessmentMetadataPartnerData} obj Optional instance to populate.
     * @return {module:model/SecurityAssessmentMetadataPartnerData} The populated <code>SecurityAssessmentMetadataPartnerData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecurityAssessmentMetadataPartnerData();

            if (data.hasOwnProperty('partnerName')) {
                obj['partnerName'] = ApiClient.convertToType(data['partnerName'], 'String');
            }
            if (data.hasOwnProperty('productName')) {
                obj['productName'] = ApiClient.convertToType(data['productName'], 'String');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SecurityAssessmentMetadataPartnerData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SecurityAssessmentMetadataPartnerData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['partnerName'] && !(typeof data['partnerName'] === 'string' || data['partnerName'] instanceof String)) {
            throw new Error("Expected the field `partnerName` to be a primitive type in the JSON string but got " + data['partnerName']);
        }
        // ensure the json data is a string
        if (data['productName'] && !(typeof data['productName'] === 'string' || data['productName'] instanceof String)) {
            throw new Error("Expected the field `productName` to be a primitive type in the JSON string but got " + data['productName']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }

        return true;
    }


}



/**
 * Name of the company of the partner
 * @member {String} partnerName
 */
SecurityAssessmentMetadataPartnerData.prototype['partnerName'] = undefined;

/**
 * Name of the product of the partner that created the assessment
 * @member {String} productName
 */
SecurityAssessmentMetadataPartnerData.prototype['productName'] = undefined;

/**
 * Secret to authenticate the partner and verify it created the assessment - write only
 * @member {String} secret
 */
SecurityAssessmentMetadataPartnerData.prototype['secret'] = undefined;






export default SecurityAssessmentMetadataPartnerData;

