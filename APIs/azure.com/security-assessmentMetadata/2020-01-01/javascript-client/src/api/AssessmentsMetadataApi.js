/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AssessmentsMetadataListDefaultResponse from '../model/AssessmentsMetadataListDefaultResponse';
import SecurityAssessmentMetadata from '../model/SecurityAssessmentMetadata';
import SecurityAssessmentMetadataList from '../model/SecurityAssessmentMetadataList';

/**
* AssessmentsMetadata service.
* @module api/AssessmentsMetadataApi
* @version 2020-01-01
*/
export default class AssessmentsMetadataApi {

    /**
    * Constructs a new AssessmentsMetadataApi. 
    * @alias module:api/AssessmentsMetadataApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the assessmentsMetadataGet operation.
     * @callback module:api/AssessmentsMetadataApi~assessmentsMetadataGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityAssessmentMetadata} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get metadata information on an assessment type
     * @param {String} apiVersion API version for the operation
     * @param {String} assessmentMetadataName The Assessment Key - Unique key for the assessment type
     * @param {module:api/AssessmentsMetadataApi~assessmentsMetadataGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityAssessmentMetadata}
     */
    assessmentsMetadataGet(apiVersion, assessmentMetadataName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling assessmentsMetadataGet");
      }
      // verify the required parameter 'assessmentMetadataName' is set
      if (assessmentMetadataName === undefined || assessmentMetadataName === null) {
        throw new Error("Missing the required parameter 'assessmentMetadataName' when calling assessmentsMetadataGet");
      }

      let pathParams = {
        'assessmentMetadataName': assessmentMetadataName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SecurityAssessmentMetadata;
      return this.apiClient.callApi(
        '/providers/Microsoft.Security/assessmentMetadata/{assessmentMetadataName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assessmentsMetadataList operation.
     * @callback module:api/AssessmentsMetadataApi~assessmentsMetadataListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityAssessmentMetadataList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get metadata information on all assessment types
     * @param {String} apiVersion API version for the operation
     * @param {module:api/AssessmentsMetadataApi~assessmentsMetadataListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityAssessmentMetadataList}
     */
    assessmentsMetadataList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling assessmentsMetadataList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SecurityAssessmentMetadataList;
      return this.apiClient.callApi(
        '/providers/Microsoft.Security/assessmentMetadata', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assessmentsMetadataSubscriptionCreate operation.
     * @callback module:api/AssessmentsMetadataApi~assessmentsMetadataSubscriptionCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityAssessmentMetadata} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create metadata information on an assessment type in a specific subscription
     * @param {String} apiVersion API version for the operation
     * @param {String} assessmentMetadataName The Assessment Key - Unique key for the assessment type
     * @param {String} subscriptionId Azure subscription ID
     * @param {module:model/SecurityAssessmentMetadata} assessmentMetadata AssessmentMetadata object
     * @param {module:api/AssessmentsMetadataApi~assessmentsMetadataSubscriptionCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityAssessmentMetadata}
     */
    assessmentsMetadataSubscriptionCreate(apiVersion, assessmentMetadataName, subscriptionId, assessmentMetadata, callback) {
      let postBody = assessmentMetadata;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling assessmentsMetadataSubscriptionCreate");
      }
      // verify the required parameter 'assessmentMetadataName' is set
      if (assessmentMetadataName === undefined || assessmentMetadataName === null) {
        throw new Error("Missing the required parameter 'assessmentMetadataName' when calling assessmentsMetadataSubscriptionCreate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling assessmentsMetadataSubscriptionCreate");
      }
      // verify the required parameter 'assessmentMetadata' is set
      if (assessmentMetadata === undefined || assessmentMetadata === null) {
        throw new Error("Missing the required parameter 'assessmentMetadata' when calling assessmentsMetadataSubscriptionCreate");
      }

      let pathParams = {
        'assessmentMetadataName': assessmentMetadataName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SecurityAssessmentMetadata;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/assessmentMetadata/{assessmentMetadataName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assessmentsMetadataSubscriptionDelete operation.
     * @callback module:api/AssessmentsMetadataApi~assessmentsMetadataSubscriptionDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete metadata information on an assessment type in a specific subscription, will cause the deletion of all the assessments of that type in that subscription
     * @param {String} apiVersion API version for the operation
     * @param {String} assessmentMetadataName The Assessment Key - Unique key for the assessment type
     * @param {String} subscriptionId Azure subscription ID
     * @param {module:api/AssessmentsMetadataApi~assessmentsMetadataSubscriptionDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    assessmentsMetadataSubscriptionDelete(apiVersion, assessmentMetadataName, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling assessmentsMetadataSubscriptionDelete");
      }
      // verify the required parameter 'assessmentMetadataName' is set
      if (assessmentMetadataName === undefined || assessmentMetadataName === null) {
        throw new Error("Missing the required parameter 'assessmentMetadataName' when calling assessmentsMetadataSubscriptionDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling assessmentsMetadataSubscriptionDelete");
      }

      let pathParams = {
        'assessmentMetadataName': assessmentMetadataName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/assessmentMetadata/{assessmentMetadataName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assessmentsMetadataSubscriptionGet operation.
     * @callback module:api/AssessmentsMetadataApi~assessmentsMetadataSubscriptionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityAssessmentMetadata} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get metadata information on an assessment type in a specific subscription
     * @param {String} apiVersion API version for the operation
     * @param {String} assessmentMetadataName The Assessment Key - Unique key for the assessment type
     * @param {String} subscriptionId Azure subscription ID
     * @param {module:api/AssessmentsMetadataApi~assessmentsMetadataSubscriptionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityAssessmentMetadata}
     */
    assessmentsMetadataSubscriptionGet(apiVersion, assessmentMetadataName, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling assessmentsMetadataSubscriptionGet");
      }
      // verify the required parameter 'assessmentMetadataName' is set
      if (assessmentMetadataName === undefined || assessmentMetadataName === null) {
        throw new Error("Missing the required parameter 'assessmentMetadataName' when calling assessmentsMetadataSubscriptionGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling assessmentsMetadataSubscriptionGet");
      }

      let pathParams = {
        'assessmentMetadataName': assessmentMetadataName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SecurityAssessmentMetadata;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/assessmentMetadata/{assessmentMetadataName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assessmentsMetadataSubscriptionList operation.
     * @callback module:api/AssessmentsMetadataApi~assessmentsMetadataSubscriptionListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityAssessmentMetadataList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get metadata information on all assessment types in a specific subscription
     * @param {String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {module:api/AssessmentsMetadataApi~assessmentsMetadataSubscriptionListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityAssessmentMetadataList}
     */
    assessmentsMetadataSubscriptionList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling assessmentsMetadataSubscriptionList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling assessmentsMetadataSubscriptionList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SecurityAssessmentMetadataList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/assessmentMetadata', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
