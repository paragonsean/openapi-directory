/*
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AssessmentsMetadataListDefaultResponse;
import org.openapitools.client.model.SecurityAssessmentMetadata;
import org.openapitools.client.model.SecurityAssessmentMetadataList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AssessmentsMetadataApi
 */
@Disabled
public class AssessmentsMetadataApiTest {

    private final AssessmentsMetadataApi api = new AssessmentsMetadataApi();

    /**
     * Get metadata information on an assessment type
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assessmentsMetadataGetTest() throws ApiException {
        String apiVersion = null;
        String assessmentMetadataName = null;
        SecurityAssessmentMetadata response = api.assessmentsMetadataGet(apiVersion, assessmentMetadataName);
        // TODO: test validations
    }

    /**
     * Get metadata information on all assessment types
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assessmentsMetadataListTest() throws ApiException {
        String apiVersion = null;
        SecurityAssessmentMetadataList response = api.assessmentsMetadataList(apiVersion);
        // TODO: test validations
    }

    /**
     * Create metadata information on an assessment type in a specific subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assessmentsMetadataSubscriptionCreateTest() throws ApiException {
        String apiVersion = null;
        String assessmentMetadataName = null;
        String subscriptionId = null;
        SecurityAssessmentMetadata assessmentMetadata = null;
        SecurityAssessmentMetadata response = api.assessmentsMetadataSubscriptionCreate(apiVersion, assessmentMetadataName, subscriptionId, assessmentMetadata);
        // TODO: test validations
    }

    /**
     * Delete metadata information on an assessment type in a specific subscription, will cause the deletion of all the assessments of that type in that subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assessmentsMetadataSubscriptionDeleteTest() throws ApiException {
        String apiVersion = null;
        String assessmentMetadataName = null;
        String subscriptionId = null;
        api.assessmentsMetadataSubscriptionDelete(apiVersion, assessmentMetadataName, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get metadata information on an assessment type in a specific subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assessmentsMetadataSubscriptionGetTest() throws ApiException {
        String apiVersion = null;
        String assessmentMetadataName = null;
        String subscriptionId = null;
        SecurityAssessmentMetadata response = api.assessmentsMetadataSubscriptionGet(apiVersion, assessmentMetadataName, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get metadata information on all assessment types in a specific subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assessmentsMetadataSubscriptionListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        SecurityAssessmentMetadataList response = api.assessmentsMetadataSubscriptionList(apiVersion, subscriptionId);
        // TODO: test validations
    }

}
