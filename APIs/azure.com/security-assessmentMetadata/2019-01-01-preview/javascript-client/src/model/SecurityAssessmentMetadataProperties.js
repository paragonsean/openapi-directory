/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2019-01-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SecurityAssessmentMetadataProperties model module.
 * @module model/SecurityAssessmentMetadataProperties
 * @version 2019-01-01-preview
 */
class SecurityAssessmentMetadataProperties {
    /**
     * Constructs a new <code>SecurityAssessmentMetadataProperties</code>.
     * Describes properties of an assessment metadata.
     * @alias module:model/SecurityAssessmentMetadataProperties
     * @param assessmentType {module:model/SecurityAssessmentMetadataProperties.AssessmentTypeEnum} BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition
     * @param displayName {String} User friendly display name of the assessment
     * @param severity {module:model/SecurityAssessmentMetadataProperties.SeverityEnum} The severity level of the assessment
     */
    constructor(assessmentType, displayName, severity) { 
        
        SecurityAssessmentMetadataProperties.initialize(this, assessmentType, displayName, severity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, assessmentType, displayName, severity) { 
        obj['assessmentType'] = assessmentType;
        obj['displayName'] = displayName;
        obj['severity'] = severity;
    }

    /**
     * Constructs a <code>SecurityAssessmentMetadataProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecurityAssessmentMetadataProperties} obj Optional instance to populate.
     * @return {module:model/SecurityAssessmentMetadataProperties} The populated <code>SecurityAssessmentMetadataProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecurityAssessmentMetadataProperties();

            if (data.hasOwnProperty('assessmentType')) {
                obj['assessmentType'] = ApiClient.convertToType(data['assessmentType'], 'String');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], ['String']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('implementationEffort')) {
                obj['implementationEffort'] = ApiClient.convertToType(data['implementationEffort'], 'String');
            }
            if (data.hasOwnProperty('policyDefinitionId')) {
                obj['policyDefinitionId'] = ApiClient.convertToType(data['policyDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('preview')) {
                obj['preview'] = ApiClient.convertToType(data['preview'], 'Boolean');
            }
            if (data.hasOwnProperty('remediationDescription')) {
                obj['remediationDescription'] = ApiClient.convertToType(data['remediationDescription'], 'String');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('threats')) {
                obj['threats'] = ApiClient.convertToType(data['threats'], ['String']);
            }
            if (data.hasOwnProperty('userImpact')) {
                obj['userImpact'] = ApiClient.convertToType(data['userImpact'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SecurityAssessmentMetadataProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SecurityAssessmentMetadataProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SecurityAssessmentMetadataProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['assessmentType'] && !(typeof data['assessmentType'] === 'string' || data['assessmentType'] instanceof String)) {
            throw new Error("Expected the field `assessmentType` to be a primitive type in the JSON string but got " + data['assessmentType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['category'])) {
            throw new Error("Expected the field `category` to be an array in the JSON data but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['implementationEffort'] && !(typeof data['implementationEffort'] === 'string' || data['implementationEffort'] instanceof String)) {
            throw new Error("Expected the field `implementationEffort` to be a primitive type in the JSON string but got " + data['implementationEffort']);
        }
        // ensure the json data is a string
        if (data['policyDefinitionId'] && !(typeof data['policyDefinitionId'] === 'string' || data['policyDefinitionId'] instanceof String)) {
            throw new Error("Expected the field `policyDefinitionId` to be a primitive type in the JSON string but got " + data['policyDefinitionId']);
        }
        // ensure the json data is a string
        if (data['remediationDescription'] && !(typeof data['remediationDescription'] === 'string' || data['remediationDescription'] instanceof String)) {
            throw new Error("Expected the field `remediationDescription` to be a primitive type in the JSON string but got " + data['remediationDescription']);
        }
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['threats'])) {
            throw new Error("Expected the field `threats` to be an array in the JSON data but got " + data['threats']);
        }
        // ensure the json data is a string
        if (data['userImpact'] && !(typeof data['userImpact'] === 'string' || data['userImpact'] instanceof String)) {
            throw new Error("Expected the field `userImpact` to be a primitive type in the JSON string but got " + data['userImpact']);
        }

        return true;
    }


}

SecurityAssessmentMetadataProperties.RequiredProperties = ["assessmentType", "displayName", "severity"];

/**
 * BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition
 * @member {module:model/SecurityAssessmentMetadataProperties.AssessmentTypeEnum} assessmentType
 */
SecurityAssessmentMetadataProperties.prototype['assessmentType'] = undefined;

/**
 * @member {Array.<module:model/SecurityAssessmentMetadataProperties.CategoryEnum>} category
 */
SecurityAssessmentMetadataProperties.prototype['category'] = undefined;

/**
 * Human readable description of the assessment
 * @member {String} description
 */
SecurityAssessmentMetadataProperties.prototype['description'] = undefined;

/**
 * User friendly display name of the assessment
 * @member {String} displayName
 */
SecurityAssessmentMetadataProperties.prototype['displayName'] = undefined;

/**
 * The implementation effort required to remediate this assessment
 * @member {module:model/SecurityAssessmentMetadataProperties.ImplementationEffortEnum} implementationEffort
 */
SecurityAssessmentMetadataProperties.prototype['implementationEffort'] = undefined;

/**
 * Azure resource ID of the policy definition that turns this assessment calculation on
 * @member {String} policyDefinitionId
 */
SecurityAssessmentMetadataProperties.prototype['policyDefinitionId'] = undefined;

/**
 * True if this assessment is in preview release status
 * @member {Boolean} preview
 */
SecurityAssessmentMetadataProperties.prototype['preview'] = undefined;

/**
 * Human readable description of what you should do to mitigate this security issue
 * @member {String} remediationDescription
 */
SecurityAssessmentMetadataProperties.prototype['remediationDescription'] = undefined;

/**
 * The severity level of the assessment
 * @member {module:model/SecurityAssessmentMetadataProperties.SeverityEnum} severity
 */
SecurityAssessmentMetadataProperties.prototype['severity'] = undefined;

/**
 * @member {Array.<module:model/SecurityAssessmentMetadataProperties.ThreatsEnum>} threats
 */
SecurityAssessmentMetadataProperties.prototype['threats'] = undefined;

/**
 * The user impact of the assessment
 * @member {module:model/SecurityAssessmentMetadataProperties.UserImpactEnum} userImpact
 */
SecurityAssessmentMetadataProperties.prototype['userImpact'] = undefined;





/**
 * Allowed values for the <code>assessmentType</code> property.
 * @enum {String}
 * @readonly
 */
SecurityAssessmentMetadataProperties['AssessmentTypeEnum'] = {

    /**
     * value: "BuiltIn"
     * @const
     */
    "BuiltIn": "BuiltIn",

    /**
     * value: "CustomPolicy"
     * @const
     */
    "CustomPolicy": "CustomPolicy",

    /**
     * value: "CustomerManaged"
     * @const
     */
    "CustomerManaged": "CustomerManaged"
};


/**
 * Allowed values for the <code>category</code> property.
 * @enum {String}
 * @readonly
 */
SecurityAssessmentMetadataProperties['CategoryEnum'] = {

    /**
     * value: "Compute"
     * @const
     */
    "Compute": "Compute",

    /**
     * value: "Networking"
     * @const
     */
    "Networking": "Networking",

    /**
     * value: "Data"
     * @const
     */
    "Data": "Data",

    /**
     * value: "IdentityAndAccess"
     * @const
     */
    "IdentityAndAccess": "IdentityAndAccess",

    /**
     * value: "IoT"
     * @const
     */
    "IoT": "IoT"
};


/**
 * Allowed values for the <code>implementationEffort</code> property.
 * @enum {String}
 * @readonly
 */
SecurityAssessmentMetadataProperties['ImplementationEffortEnum'] = {

    /**
     * value: "Low"
     * @const
     */
    "Low": "Low",

    /**
     * value: "Moderate"
     * @const
     */
    "Moderate": "Moderate",

    /**
     * value: "High"
     * @const
     */
    "High": "High"
};


/**
 * Allowed values for the <code>severity</code> property.
 * @enum {String}
 * @readonly
 */
SecurityAssessmentMetadataProperties['SeverityEnum'] = {

    /**
     * value: "Low"
     * @const
     */
    "Low": "Low",

    /**
     * value: "Medium"
     * @const
     */
    "Medium": "Medium",

    /**
     * value: "High"
     * @const
     */
    "High": "High"
};


/**
 * Allowed values for the <code>threats</code> property.
 * @enum {String}
 * @readonly
 */
SecurityAssessmentMetadataProperties['ThreatsEnum'] = {

    /**
     * value: "accountBreach"
     * @const
     */
    "accountBreach": "accountBreach",

    /**
     * value: "dataExfiltration"
     * @const
     */
    "dataExfiltration": "dataExfiltration",

    /**
     * value: "dataSpillage"
     * @const
     */
    "dataSpillage": "dataSpillage",

    /**
     * value: "maliciousInsider"
     * @const
     */
    "maliciousInsider": "maliciousInsider",

    /**
     * value: "elevationOfPrivilege"
     * @const
     */
    "elevationOfPrivilege": "elevationOfPrivilege",

    /**
     * value: "threatResistance"
     * @const
     */
    "threatResistance": "threatResistance",

    /**
     * value: "missingCoverage"
     * @const
     */
    "missingCoverage": "missingCoverage",

    /**
     * value: "denialOfService"
     * @const
     */
    "denialOfService": "denialOfService"
};


/**
 * Allowed values for the <code>userImpact</code> property.
 * @enum {String}
 * @readonly
 */
SecurityAssessmentMetadataProperties['UserImpactEnum'] = {

    /**
     * value: "Low"
     * @const
     */
    "Low": "Low",

    /**
     * value: "Moderate"
     * @const
     */
    "Moderate": "Moderate",

    /**
     * value: "High"
     * @const
     */
    "High": "High"
};



export default SecurityAssessmentMetadataProperties;

