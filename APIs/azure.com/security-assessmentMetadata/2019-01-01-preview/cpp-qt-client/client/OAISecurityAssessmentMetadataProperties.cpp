/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2019-01-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISecurityAssessmentMetadataProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISecurityAssessmentMetadataProperties::OAISecurityAssessmentMetadataProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISecurityAssessmentMetadataProperties::OAISecurityAssessmentMetadataProperties() {
    this->initializeModel();
}

OAISecurityAssessmentMetadataProperties::~OAISecurityAssessmentMetadataProperties() {}

void OAISecurityAssessmentMetadataProperties::initializeModel() {

    m_assessment_type_isSet = false;
    m_assessment_type_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_implementation_effort_isSet = false;
    m_implementation_effort_isValid = false;

    m_policy_definition_id_isSet = false;
    m_policy_definition_id_isValid = false;

    m_preview_isSet = false;
    m_preview_isValid = false;

    m_remediation_description_isSet = false;
    m_remediation_description_isValid = false;

    m_severity_isSet = false;
    m_severity_isValid = false;

    m_threats_isSet = false;
    m_threats_isValid = false;

    m_user_impact_isSet = false;
    m_user_impact_isValid = false;
}

void OAISecurityAssessmentMetadataProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISecurityAssessmentMetadataProperties::fromJsonObject(QJsonObject json) {

    m_assessment_type_isValid = ::OpenAPI::fromJsonValue(m_assessment_type, json[QString("assessmentType")]);
    m_assessment_type_isSet = !json[QString("assessmentType")].isNull() && m_assessment_type_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_implementation_effort_isValid = ::OpenAPI::fromJsonValue(m_implementation_effort, json[QString("implementationEffort")]);
    m_implementation_effort_isSet = !json[QString("implementationEffort")].isNull() && m_implementation_effort_isValid;

    m_policy_definition_id_isValid = ::OpenAPI::fromJsonValue(m_policy_definition_id, json[QString("policyDefinitionId")]);
    m_policy_definition_id_isSet = !json[QString("policyDefinitionId")].isNull() && m_policy_definition_id_isValid;

    m_preview_isValid = ::OpenAPI::fromJsonValue(m_preview, json[QString("preview")]);
    m_preview_isSet = !json[QString("preview")].isNull() && m_preview_isValid;

    m_remediation_description_isValid = ::OpenAPI::fromJsonValue(m_remediation_description, json[QString("remediationDescription")]);
    m_remediation_description_isSet = !json[QString("remediationDescription")].isNull() && m_remediation_description_isValid;

    m_severity_isValid = ::OpenAPI::fromJsonValue(m_severity, json[QString("severity")]);
    m_severity_isSet = !json[QString("severity")].isNull() && m_severity_isValid;

    m_threats_isValid = ::OpenAPI::fromJsonValue(m_threats, json[QString("threats")]);
    m_threats_isSet = !json[QString("threats")].isNull() && m_threats_isValid;

    m_user_impact_isValid = ::OpenAPI::fromJsonValue(m_user_impact, json[QString("userImpact")]);
    m_user_impact_isSet = !json[QString("userImpact")].isNull() && m_user_impact_isValid;
}

QString OAISecurityAssessmentMetadataProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISecurityAssessmentMetadataProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_assessment_type_isSet) {
        obj.insert(QString("assessmentType"), ::OpenAPI::toJsonValue(m_assessment_type));
    }
    if (m_category.size() > 0) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_implementation_effort_isSet) {
        obj.insert(QString("implementationEffort"), ::OpenAPI::toJsonValue(m_implementation_effort));
    }
    if (m_policy_definition_id_isSet) {
        obj.insert(QString("policyDefinitionId"), ::OpenAPI::toJsonValue(m_policy_definition_id));
    }
    if (m_preview_isSet) {
        obj.insert(QString("preview"), ::OpenAPI::toJsonValue(m_preview));
    }
    if (m_remediation_description_isSet) {
        obj.insert(QString("remediationDescription"), ::OpenAPI::toJsonValue(m_remediation_description));
    }
    if (m_severity_isSet) {
        obj.insert(QString("severity"), ::OpenAPI::toJsonValue(m_severity));
    }
    if (m_threats.size() > 0) {
        obj.insert(QString("threats"), ::OpenAPI::toJsonValue(m_threats));
    }
    if (m_user_impact_isSet) {
        obj.insert(QString("userImpact"), ::OpenAPI::toJsonValue(m_user_impact));
    }
    return obj;
}

QString OAISecurityAssessmentMetadataProperties::getAssessmentType() const {
    return m_assessment_type;
}
void OAISecurityAssessmentMetadataProperties::setAssessmentType(const QString &assessment_type) {
    m_assessment_type = assessment_type;
    m_assessment_type_isSet = true;
}

bool OAISecurityAssessmentMetadataProperties::is_assessment_type_Set() const{
    return m_assessment_type_isSet;
}

bool OAISecurityAssessmentMetadataProperties::is_assessment_type_Valid() const{
    return m_assessment_type_isValid;
}

QList<QString> OAISecurityAssessmentMetadataProperties::getCategory() const {
    return m_category;
}
void OAISecurityAssessmentMetadataProperties::setCategory(const QList<QString> &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAISecurityAssessmentMetadataProperties::is_category_Set() const{
    return m_category_isSet;
}

bool OAISecurityAssessmentMetadataProperties::is_category_Valid() const{
    return m_category_isValid;
}

QString OAISecurityAssessmentMetadataProperties::getDescription() const {
    return m_description;
}
void OAISecurityAssessmentMetadataProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAISecurityAssessmentMetadataProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAISecurityAssessmentMetadataProperties::is_description_Valid() const{
    return m_description_isValid;
}

QString OAISecurityAssessmentMetadataProperties::getDisplayName() const {
    return m_display_name;
}
void OAISecurityAssessmentMetadataProperties::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAISecurityAssessmentMetadataProperties::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAISecurityAssessmentMetadataProperties::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAISecurityAssessmentMetadataProperties::getImplementationEffort() const {
    return m_implementation_effort;
}
void OAISecurityAssessmentMetadataProperties::setImplementationEffort(const QString &implementation_effort) {
    m_implementation_effort = implementation_effort;
    m_implementation_effort_isSet = true;
}

bool OAISecurityAssessmentMetadataProperties::is_implementation_effort_Set() const{
    return m_implementation_effort_isSet;
}

bool OAISecurityAssessmentMetadataProperties::is_implementation_effort_Valid() const{
    return m_implementation_effort_isValid;
}

QString OAISecurityAssessmentMetadataProperties::getPolicyDefinitionId() const {
    return m_policy_definition_id;
}
void OAISecurityAssessmentMetadataProperties::setPolicyDefinitionId(const QString &policy_definition_id) {
    m_policy_definition_id = policy_definition_id;
    m_policy_definition_id_isSet = true;
}

bool OAISecurityAssessmentMetadataProperties::is_policy_definition_id_Set() const{
    return m_policy_definition_id_isSet;
}

bool OAISecurityAssessmentMetadataProperties::is_policy_definition_id_Valid() const{
    return m_policy_definition_id_isValid;
}

bool OAISecurityAssessmentMetadataProperties::isPreview() const {
    return m_preview;
}
void OAISecurityAssessmentMetadataProperties::setPreview(const bool &preview) {
    m_preview = preview;
    m_preview_isSet = true;
}

bool OAISecurityAssessmentMetadataProperties::is_preview_Set() const{
    return m_preview_isSet;
}

bool OAISecurityAssessmentMetadataProperties::is_preview_Valid() const{
    return m_preview_isValid;
}

QString OAISecurityAssessmentMetadataProperties::getRemediationDescription() const {
    return m_remediation_description;
}
void OAISecurityAssessmentMetadataProperties::setRemediationDescription(const QString &remediation_description) {
    m_remediation_description = remediation_description;
    m_remediation_description_isSet = true;
}

bool OAISecurityAssessmentMetadataProperties::is_remediation_description_Set() const{
    return m_remediation_description_isSet;
}

bool OAISecurityAssessmentMetadataProperties::is_remediation_description_Valid() const{
    return m_remediation_description_isValid;
}

QString OAISecurityAssessmentMetadataProperties::getSeverity() const {
    return m_severity;
}
void OAISecurityAssessmentMetadataProperties::setSeverity(const QString &severity) {
    m_severity = severity;
    m_severity_isSet = true;
}

bool OAISecurityAssessmentMetadataProperties::is_severity_Set() const{
    return m_severity_isSet;
}

bool OAISecurityAssessmentMetadataProperties::is_severity_Valid() const{
    return m_severity_isValid;
}

QList<QString> OAISecurityAssessmentMetadataProperties::getThreats() const {
    return m_threats;
}
void OAISecurityAssessmentMetadataProperties::setThreats(const QList<QString> &threats) {
    m_threats = threats;
    m_threats_isSet = true;
}

bool OAISecurityAssessmentMetadataProperties::is_threats_Set() const{
    return m_threats_isSet;
}

bool OAISecurityAssessmentMetadataProperties::is_threats_Valid() const{
    return m_threats_isValid;
}

QString OAISecurityAssessmentMetadataProperties::getUserImpact() const {
    return m_user_impact;
}
void OAISecurityAssessmentMetadataProperties::setUserImpact(const QString &user_impact) {
    m_user_impact = user_impact;
    m_user_impact_isSet = true;
}

bool OAISecurityAssessmentMetadataProperties::is_user_impact_Set() const{
    return m_user_impact_isSet;
}

bool OAISecurityAssessmentMetadataProperties::is_user_impact_Valid() const{
    return m_user_impact_isValid;
}

bool OAISecurityAssessmentMetadataProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assessment_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_category.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_implementation_effort_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_definition_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_preview_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remediation_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_severity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_threats.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_impact_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISecurityAssessmentMetadataProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_assessment_type_isValid && m_display_name_isValid && m_severity_isValid && true;
}

} // namespace OpenAPI
