/*
 * Azure Metrics
 * A client for issuing REST requests to the Azure metrics service.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AzureMetricsDocument;
import org.openapitools.client.model.AzureMetricsResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MetricsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public MetricsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public MetricsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for metricsCreate
     * @param contentType Supports application/json and application/x-ndjson (required)
     * @param contentLength Content length of the payload (required)
     * @param authorization Authorization token issue for issued for audience \&quot;https:\\\\monitoring.azure.com\\\&quot; (required)
     * @param subscriptionId The azure subscription id (required)
     * @param resourceGroupName The ARM resource group name (required)
     * @param resourceProvider The ARM resource provider name (required)
     * @param resourceTypeName The ARM resource type name (required)
     * @param resourceName The ARM resource name (required)
     * @param body The Azure metrics document json payload (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The azure metrics publish succeeded </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error from the server. See response object for the reason </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call metricsCreateCall(String contentType, Integer contentLength, String authorization, String subscriptionId, String resourceGroupName, String resourceProvider, String resourceTypeName, String resourceName, AzureMetricsDocument body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProvider}/{resourceTypeName}/{resourceName}/metrics"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "resourceProvider" + "}", localVarApiClient.escapeString(resourceProvider.toString()))
            .replace("{" + "resourceTypeName" + "}", localVarApiClient.escapeString(resourceTypeName.toString()))
            .replace("{" + "resourceName" + "}", localVarApiClient.escapeString(resourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (contentLength != null) {
            localVarHeaderParams.put("Content-Length", localVarApiClient.parameterToString(contentLength));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call metricsCreateValidateBeforeCall(String contentType, Integer contentLength, String authorization, String subscriptionId, String resourceGroupName, String resourceProvider, String resourceTypeName, String resourceName, AzureMetricsDocument body, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling metricsCreate(Async)");
        }

        // verify the required parameter 'contentLength' is set
        if (contentLength == null) {
            throw new ApiException("Missing the required parameter 'contentLength' when calling metricsCreate(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling metricsCreate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling metricsCreate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling metricsCreate(Async)");
        }

        // verify the required parameter 'resourceProvider' is set
        if (resourceProvider == null) {
            throw new ApiException("Missing the required parameter 'resourceProvider' when calling metricsCreate(Async)");
        }

        // verify the required parameter 'resourceTypeName' is set
        if (resourceTypeName == null) {
            throw new ApiException("Missing the required parameter 'resourceTypeName' when calling metricsCreate(Async)");
        }

        // verify the required parameter 'resourceName' is set
        if (resourceName == null) {
            throw new ApiException("Missing the required parameter 'resourceName' when calling metricsCreate(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling metricsCreate(Async)");
        }

        return metricsCreateCall(contentType, contentLength, authorization, subscriptionId, resourceGroupName, resourceProvider, resourceTypeName, resourceName, body, _callback);

    }

    /**
     * 
     * **Post the metric values for a resource**.
     * @param contentType Supports application/json and application/x-ndjson (required)
     * @param contentLength Content length of the payload (required)
     * @param authorization Authorization token issue for issued for audience \&quot;https:\\\\monitoring.azure.com\\\&quot; (required)
     * @param subscriptionId The azure subscription id (required)
     * @param resourceGroupName The ARM resource group name (required)
     * @param resourceProvider The ARM resource provider name (required)
     * @param resourceTypeName The ARM resource type name (required)
     * @param resourceName The ARM resource name (required)
     * @param body The Azure metrics document json payload (required)
     * @return AzureMetricsResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The azure metrics publish succeeded </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error from the server. See response object for the reason </td><td>  -  </td></tr>
     </table>
     */
    public AzureMetricsResult metricsCreate(String contentType, Integer contentLength, String authorization, String subscriptionId, String resourceGroupName, String resourceProvider, String resourceTypeName, String resourceName, AzureMetricsDocument body) throws ApiException {
        ApiResponse<AzureMetricsResult> localVarResp = metricsCreateWithHttpInfo(contentType, contentLength, authorization, subscriptionId, resourceGroupName, resourceProvider, resourceTypeName, resourceName, body);
        return localVarResp.getData();
    }

    /**
     * 
     * **Post the metric values for a resource**.
     * @param contentType Supports application/json and application/x-ndjson (required)
     * @param contentLength Content length of the payload (required)
     * @param authorization Authorization token issue for issued for audience \&quot;https:\\\\monitoring.azure.com\\\&quot; (required)
     * @param subscriptionId The azure subscription id (required)
     * @param resourceGroupName The ARM resource group name (required)
     * @param resourceProvider The ARM resource provider name (required)
     * @param resourceTypeName The ARM resource type name (required)
     * @param resourceName The ARM resource name (required)
     * @param body The Azure metrics document json payload (required)
     * @return ApiResponse&lt;AzureMetricsResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The azure metrics publish succeeded </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error from the server. See response object for the reason </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AzureMetricsResult> metricsCreateWithHttpInfo(String contentType, Integer contentLength, String authorization, String subscriptionId, String resourceGroupName, String resourceProvider, String resourceTypeName, String resourceName, AzureMetricsDocument body) throws ApiException {
        okhttp3.Call localVarCall = metricsCreateValidateBeforeCall(contentType, contentLength, authorization, subscriptionId, resourceGroupName, resourceProvider, resourceTypeName, resourceName, body, null);
        Type localVarReturnType = new TypeToken<AzureMetricsResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * **Post the metric values for a resource**.
     * @param contentType Supports application/json and application/x-ndjson (required)
     * @param contentLength Content length of the payload (required)
     * @param authorization Authorization token issue for issued for audience \&quot;https:\\\\monitoring.azure.com\\\&quot; (required)
     * @param subscriptionId The azure subscription id (required)
     * @param resourceGroupName The ARM resource group name (required)
     * @param resourceProvider The ARM resource provider name (required)
     * @param resourceTypeName The ARM resource type name (required)
     * @param resourceName The ARM resource name (required)
     * @param body The Azure metrics document json payload (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The azure metrics publish succeeded </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error from the server. See response object for the reason </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call metricsCreateAsync(String contentType, Integer contentLength, String authorization, String subscriptionId, String resourceGroupName, String resourceProvider, String resourceTypeName, String resourceName, AzureMetricsDocument body, final ApiCallback<AzureMetricsResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = metricsCreateValidateBeforeCall(contentType, contentLength, authorization, subscriptionId, resourceGroupName, resourceProvider, resourceTypeName, resourceName, body, _callback);
        Type localVarReturnType = new TypeToken<AzureMetricsResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
