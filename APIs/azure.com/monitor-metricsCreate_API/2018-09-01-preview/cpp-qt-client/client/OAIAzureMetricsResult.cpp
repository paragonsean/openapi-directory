/**
 * Azure Metrics
 * A client for issuing REST requests to the Azure metrics service.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureMetricsResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureMetricsResult::OAIAzureMetricsResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureMetricsResult::OAIAzureMetricsResult() {
    this->initializeModel();
}

OAIAzureMetricsResult::~OAIAzureMetricsResult() {}

void OAIAzureMetricsResult::initializeModel() {

    m_api_failure_response_isSet = false;
    m_api_failure_response_isValid = false;

    m_status_code_isSet = false;
    m_status_code_isValid = false;
}

void OAIAzureMetricsResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureMetricsResult::fromJsonObject(QJsonObject json) {

    m_api_failure_response_isValid = ::OpenAPI::fromJsonValue(m_api_failure_response, json[QString("apiFailureResponse")]);
    m_api_failure_response_isSet = !json[QString("apiFailureResponse")].isNull() && m_api_failure_response_isValid;

    m_status_code_isValid = ::OpenAPI::fromJsonValue(m_status_code, json[QString("statusCode")]);
    m_status_code_isSet = !json[QString("statusCode")].isNull() && m_status_code_isValid;
}

QString OAIAzureMetricsResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureMetricsResult::asJsonObject() const {
    QJsonObject obj;
    if (m_api_failure_response.isSet()) {
        obj.insert(QString("apiFailureResponse"), ::OpenAPI::toJsonValue(m_api_failure_response));
    }
    if (m_status_code_isSet) {
        obj.insert(QString("statusCode"), ::OpenAPI::toJsonValue(m_status_code));
    }
    return obj;
}

OAIApiFailureResponse OAIAzureMetricsResult::getApiFailureResponse() const {
    return m_api_failure_response;
}
void OAIAzureMetricsResult::setApiFailureResponse(const OAIApiFailureResponse &api_failure_response) {
    m_api_failure_response = api_failure_response;
    m_api_failure_response_isSet = true;
}

bool OAIAzureMetricsResult::is_api_failure_response_Set() const{
    return m_api_failure_response_isSet;
}

bool OAIAzureMetricsResult::is_api_failure_response_Valid() const{
    return m_api_failure_response_isValid;
}

qint32 OAIAzureMetricsResult::getStatusCode() const {
    return m_status_code;
}
void OAIAzureMetricsResult::setStatusCode(const qint32 &status_code) {
    m_status_code = status_code;
    m_status_code_isSet = true;
}

bool OAIAzureMetricsResult::is_status_code_Set() const{
    return m_status_code_isSet;
}

bool OAIAzureMetricsResult::is_status_code_Valid() const{
    return m_status_code_isValid;
}

bool OAIAzureMetricsResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_failure_response.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureMetricsResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
