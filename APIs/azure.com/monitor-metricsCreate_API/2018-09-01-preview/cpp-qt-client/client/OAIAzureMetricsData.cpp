/**
 * Azure Metrics
 * A client for issuing REST requests to the Azure metrics service.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureMetricsData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureMetricsData::OAIAzureMetricsData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureMetricsData::OAIAzureMetricsData() {
    this->initializeModel();
}

OAIAzureMetricsData::~OAIAzureMetricsData() {}

void OAIAzureMetricsData::initializeModel() {

    m_base_data_isSet = false;
    m_base_data_isValid = false;
}

void OAIAzureMetricsData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureMetricsData::fromJsonObject(QJsonObject json) {

    m_base_data_isValid = ::OpenAPI::fromJsonValue(m_base_data, json[QString("baseData")]);
    m_base_data_isSet = !json[QString("baseData")].isNull() && m_base_data_isValid;
}

QString OAIAzureMetricsData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureMetricsData::asJsonObject() const {
    QJsonObject obj;
    if (m_base_data.isSet()) {
        obj.insert(QString("baseData"), ::OpenAPI::toJsonValue(m_base_data));
    }
    return obj;
}

OAIAzureMetricsBaseData OAIAzureMetricsData::getBaseData() const {
    return m_base_data;
}
void OAIAzureMetricsData::setBaseData(const OAIAzureMetricsBaseData &base_data) {
    m_base_data = base_data;
    m_base_data_isSet = true;
}

bool OAIAzureMetricsData::is_base_data_Set() const{
    return m_base_data_isSet;
}

bool OAIAzureMetricsData::is_base_data_Valid() const{
    return m_base_data_isValid;
}

bool OAIAzureMetricsData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_base_data.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureMetricsData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_base_data_isValid && true;
}

} // namespace OpenAPI
