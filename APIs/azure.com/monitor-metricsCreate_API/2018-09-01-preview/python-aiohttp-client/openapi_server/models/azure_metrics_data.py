# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.azure_metrics_base_data import AzureMetricsBaseData
from openapi_server import util


class AzureMetricsData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_data: AzureMetricsBaseData=None):
        """AzureMetricsData - a model defined in OpenAPI

        :param base_data: The base_data of this AzureMetricsData.
        """
        self.openapi_types = {
            'base_data': AzureMetricsBaseData
        }

        self.attribute_map = {
            'base_data': 'baseData'
        }

        self._base_data = base_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureMetricsData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureMetricsData of this AzureMetricsData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_data(self):
        """Gets the base_data of this AzureMetricsData.


        :return: The base_data of this AzureMetricsData.
        :rtype: AzureMetricsBaseData
        """
        return self._base_data

    @base_data.setter
    def base_data(self, base_data):
        """Sets the base_data of this AzureMetricsData.


        :param base_data: The base_data of this AzureMetricsData.
        :type base_data: AzureMetricsBaseData
        """
        if base_data is None:
            raise ValueError("Invalid value for `base_data`, must not be `None`")

        self._base_data = base_data
