/**
 * FabricAdminClient
 * MAC address pool operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MacAddressPoolModel model module.
 * @module model/MacAddressPoolModel
 * @version 2016-05-01
 */
class MacAddressPoolModel {
    /**
     * Constructs a new <code>MacAddressPoolModel</code>.
     * Properties of a MAC address pool.
     * @alias module:model/MacAddressPoolModel
     */
    constructor() { 
        
        MacAddressPoolModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MacAddressPoolModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MacAddressPoolModel} obj Optional instance to populate.
     * @return {module:model/MacAddressPoolModel} The populated <code>MacAddressPoolModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MacAddressPoolModel();

            if (data.hasOwnProperty('endMacAddress')) {
                obj['endMacAddress'] = ApiClient.convertToType(data['endMacAddress'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('numberOfAllocatedMacAddresses')) {
                obj['numberOfAllocatedMacAddresses'] = ApiClient.convertToType(data['numberOfAllocatedMacAddresses'], 'Number');
            }
            if (data.hasOwnProperty('numberOfAvailableMacAddresses')) {
                obj['numberOfAvailableMacAddresses'] = ApiClient.convertToType(data['numberOfAvailableMacAddresses'], 'Number');
            }
            if (data.hasOwnProperty('startMacAddress')) {
                obj['startMacAddress'] = ApiClient.convertToType(data['startMacAddress'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MacAddressPoolModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MacAddressPoolModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endMacAddress'] && !(typeof data['endMacAddress'] === 'string' || data['endMacAddress'] instanceof String)) {
            throw new Error("Expected the field `endMacAddress` to be a primitive type in the JSON string but got " + data['endMacAddress']);
        }
        // ensure the json data is a string
        if (data['startMacAddress'] && !(typeof data['startMacAddress'] === 'string' || data['startMacAddress'] instanceof String)) {
            throw new Error("Expected the field `startMacAddress` to be a primitive type in the JSON string but got " + data['startMacAddress']);
        }

        return true;
    }


}



/**
 * Ending MAC address.
 * @member {String} endMacAddress
 */
MacAddressPoolModel.prototype['endMacAddress'] = undefined;

/**
 * Metadata related to the MAC pool.
 * @member {Object.<String, String>} metadata
 */
MacAddressPoolModel.prototype['metadata'] = undefined;

/**
 * Number of MAC addresses allocated.
 * @member {Number} numberOfAllocatedMacAddresses
 */
MacAddressPoolModel.prototype['numberOfAllocatedMacAddresses'] = undefined;

/**
 * Number of MAC addresses available.
 * @member {Number} numberOfAvailableMacAddresses
 */
MacAddressPoolModel.prototype['numberOfAvailableMacAddresses'] = undefined;

/**
 * Starting MAC address.
 * @member {String} startMacAddress
 */
MacAddressPoolModel.prototype['startMacAddress'] = undefined;






export default MacAddressPoolModel;

