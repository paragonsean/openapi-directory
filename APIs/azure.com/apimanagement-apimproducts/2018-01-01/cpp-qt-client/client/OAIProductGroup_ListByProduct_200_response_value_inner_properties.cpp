/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Product entity associated with your Azure API Management deployment. The Product entity represents a product in API Management. Products include one or more APIs and their associated terms of use. Once a product is published, developers can subscribe to the product and begin to use the productâ€™s APIs.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductGroup_ListByProduct_200_response_value_inner_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductGroup_ListByProduct_200_response_value_inner_properties::OAIProductGroup_ListByProduct_200_response_value_inner_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductGroup_ListByProduct_200_response_value_inner_properties::OAIProductGroup_ListByProduct_200_response_value_inner_properties() {
    this->initializeModel();
}

OAIProductGroup_ListByProduct_200_response_value_inner_properties::~OAIProductGroup_ListByProduct_200_response_value_inner_properties() {}

void OAIProductGroup_ListByProduct_200_response_value_inner_properties::initializeModel() {

    m_built_in_isSet = false;
    m_built_in_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIProductGroup_ListByProduct_200_response_value_inner_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductGroup_ListByProduct_200_response_value_inner_properties::fromJsonObject(QJsonObject json) {

    m_built_in_isValid = ::OpenAPI::fromJsonValue(m_built_in, json[QString("builtIn")]);
    m_built_in_isSet = !json[QString("builtIn")].isNull() && m_built_in_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("externalId")]);
    m_external_id_isSet = !json[QString("externalId")].isNull() && m_external_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIProductGroup_ListByProduct_200_response_value_inner_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductGroup_ListByProduct_200_response_value_inner_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_built_in_isSet) {
        obj.insert(QString("builtIn"), ::OpenAPI::toJsonValue(m_built_in));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("externalId"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::isBuiltIn() const {
    return m_built_in;
}
void OAIProductGroup_ListByProduct_200_response_value_inner_properties::setBuiltIn(const bool &built_in) {
    m_built_in = built_in;
    m_built_in_isSet = true;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::is_built_in_Set() const{
    return m_built_in_isSet;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::is_built_in_Valid() const{
    return m_built_in_isValid;
}

QString OAIProductGroup_ListByProduct_200_response_value_inner_properties::getDescription() const {
    return m_description;
}
void OAIProductGroup_ListByProduct_200_response_value_inner_properties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIProductGroup_ListByProduct_200_response_value_inner_properties::getDisplayName() const {
    return m_display_name;
}
void OAIProductGroup_ListByProduct_200_response_value_inner_properties::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIProductGroup_ListByProduct_200_response_value_inner_properties::getExternalId() const {
    return m_external_id;
}
void OAIProductGroup_ListByProduct_200_response_value_inner_properties::setExternalId(const QString &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::is_external_id_Valid() const{
    return m_external_id_isValid;
}

QString OAIProductGroup_ListByProduct_200_response_value_inner_properties::getType() const {
    return m_type;
}
void OAIProductGroup_ListByProduct_200_response_value_inner_properties::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::is_type_Set() const{
    return m_type_isSet;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_built_in_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductGroup_ListByProduct_200_response_value_inner_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_display_name_isValid && true;
}

} // namespace OpenAPI
