/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Product entity associated with your Azure API Management deployment. The Product entity represents a product in API Management. Products include one or more APIs and their associated terms of use. Once a product is published, developers can subscribe to the product and begin to use the productâ€™s APIs.
 *
 * The version of the OpenAPI document: 2017-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings_oAuth2.h
 *
 * API OAuth2 Authentication settings details.
 */

#ifndef OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings_oAuth2_H
#define OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings_oAuth2_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings_oAuth2 : public OAIObject {
public:
    OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings_oAuth2();
    OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings_oAuth2(QString json);
    ~OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings_oAuth2() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthorizationServerId() const;
    void setAuthorizationServerId(const QString &authorization_server_id);
    bool is_authorization_server_id_Set() const;
    bool is_authorization_server_id_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authorization_server_id;
    bool m_authorization_server_id_isSet;
    bool m_authorization_server_id_isValid;

    QString m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings_oAuth2)

#endif // OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings_oAuth2_H
