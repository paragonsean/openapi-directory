/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Product entity associated with your Azure API Management deployment. The Product entity represents a product in API Management. Products include one or more APIs and their associated terms of use. Once a product is published, developers can subscribe to the product and begin to use the productâ€™s APIs.
 *
 * The version of the OpenAPI document: 2017-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings() {
    this->initializeModel();
}

OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::~OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings() {}

void OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::initializeModel() {

    m_o_auth2_isSet = false;
    m_o_auth2_isValid = false;
}

void OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::fromJsonObject(QJsonObject json) {

    m_o_auth2_isValid = ::OpenAPI::fromJsonValue(m_o_auth2, json[QString("oAuth2")]);
    m_o_auth2_isSet = !json[QString("oAuth2")].isNull() && m_o_auth2_isValid;
}

QString OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_o_auth2.isSet()) {
        obj.insert(QString("oAuth2"), ::OpenAPI::toJsonValue(m_o_auth2));
    }
    return obj;
}

OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings_oAuth2 OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::getOAuth2() const {
    return m_o_auth2;
}
void OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::setOAuth2(const OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings_oAuth2 &o_auth2) {
    m_o_auth2 = o_auth2;
    m_o_auth2_isSet = true;
}

bool OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::is_o_auth2_Set() const{
    return m_o_auth2_isSet;
}

bool OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::is_o_auth2_Valid() const{
    return m_o_auth2_isValid;
}

bool OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_o_auth2.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductApi_CreateOrUpdate_200_response_allOf_allOf_authenticationSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
