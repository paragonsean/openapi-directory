/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Product entity associated with your Azure API Management deployment. The Product entity represents a product in API Management. Products include one or more APIs and their associated terms of use. Once a product is published, developers can subscribe to the product and begin to use the productâ€™s APIs.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProductApi_ListByProduct_200_response_value_inner_properties.h
 *
 * Api Entity Properties
 */

#ifndef OAIProductApi_ListByProduct_200_response_value_inner_properties_H
#define OAIProductApi_ListByProduct_200_response_value_inner_properties_H

#include <QJsonObject>

#include "OAIProductApi_ListByProduct_200_response_value_inner_properties_apiVersionSet.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProductApi_ListByProduct_200_response_value_inner_properties_apiVersionSet;

class OAIProductApi_ListByProduct_200_response_value_inner_properties : public OAIObject {
public:
    OAIProductApi_ListByProduct_200_response_value_inner_properties();
    OAIProductApi_ListByProduct_200_response_value_inner_properties(QString json);
    ~OAIProductApi_ListByProduct_200_response_value_inner_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIProductApi_ListByProduct_200_response_value_inner_properties_apiVersionSet getApiVersionSet() const;
    void setApiVersionSet(const OAIProductApi_ListByProduct_200_response_value_inner_properties_apiVersionSet &api_version_set);
    bool is_api_version_set_Set() const;
    bool is_api_version_set_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QList<QString> getProtocols() const;
    void setProtocols(const QList<QString> &protocols);
    bool is_protocols_Set() const;
    bool is_protocols_Valid() const;

    QString getServiceUrl() const;
    void setServiceUrl(const QString &service_url);
    bool is_service_url_Set() const;
    bool is_service_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIProductApi_ListByProduct_200_response_value_inner_properties_apiVersionSet m_api_version_set;
    bool m_api_version_set_isSet;
    bool m_api_version_set_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QList<QString> m_protocols;
    bool m_protocols_isSet;
    bool m_protocols_isValid;

    QString m_service_url;
    bool m_service_url_isSet;
    bool m_service_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProductApi_ListByProduct_200_response_value_inner_properties)

#endif // OAIProductApi_ListByProduct_200_response_value_inner_properties_H
