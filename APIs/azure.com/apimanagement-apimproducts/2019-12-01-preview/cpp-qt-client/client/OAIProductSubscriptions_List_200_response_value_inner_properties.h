/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Product entity associated with your Azure API Management deployment. The Product entity represents a product in API Management. Products include one or more APIs and their associated terms of use. Once a product is published, developers can subscribe to the product and begin to use the productâ€™s APIs.
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProductSubscriptions_List_200_response_value_inner_properties.h
 *
 * Subscription details.
 */

#ifndef OAIProductSubscriptions_List_200_response_value_inner_properties_H
#define OAIProductSubscriptions_List_200_response_value_inner_properties_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProductSubscriptions_List_200_response_value_inner_properties : public OAIObject {
public:
    OAIProductSubscriptions_List_200_response_value_inner_properties();
    OAIProductSubscriptions_List_200_response_value_inner_properties(QString json);
    ~OAIProductSubscriptions_List_200_response_value_inner_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowTracing() const;
    void setAllowTracing(const bool &allow_tracing);
    bool is_allow_tracing_Set() const;
    bool is_allow_tracing_Valid() const;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    QDateTime getNotificationDate() const;
    void setNotificationDate(const QDateTime &notification_date);
    bool is_notification_date_Set() const;
    bool is_notification_date_Valid() const;

    QString getOwnerId() const;
    void setOwnerId(const QString &owner_id);
    bool is_owner_id_Set() const;
    bool is_owner_id_Valid() const;

    QString getPrimaryKey() const;
    void setPrimaryKey(const QString &primary_key);
    bool is_primary_key_Set() const;
    bool is_primary_key_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    QString getSecondaryKey() const;
    void setSecondaryKey(const QString &secondary_key);
    bool is_secondary_key_Set() const;
    bool is_secondary_key_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStateComment() const;
    void setStateComment(const QString &state_comment);
    bool is_state_comment_Set() const;
    bool is_state_comment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_tracing;
    bool m_allow_tracing_isSet;
    bool m_allow_tracing_isValid;

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QDateTime m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    QDateTime m_notification_date;
    bool m_notification_date_isSet;
    bool m_notification_date_isValid;

    QString m_owner_id;
    bool m_owner_id_isSet;
    bool m_owner_id_isValid;

    QString m_primary_key;
    bool m_primary_key_isSet;
    bool m_primary_key_isValid;

    QString m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    QString m_secondary_key;
    bool m_secondary_key_isSet;
    bool m_secondary_key_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_state_comment;
    bool m_state_comment_isSet;
    bool m_state_comment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProductSubscriptions_List_200_response_value_inner_properties)

#endif // OAIProductSubscriptions_List_200_response_value_inner_properties_H
