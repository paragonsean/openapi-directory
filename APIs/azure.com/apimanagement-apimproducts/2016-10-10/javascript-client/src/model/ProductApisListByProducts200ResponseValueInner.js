/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Product entity associated with your Azure API Management deployment. The Product entity represents a product in API Management. Products include one or more APIs and their associated terms of use. Once a product is published, developers can subscribe to the product and begin to use the productâ€™s APIs.
 *
 * The version of the OpenAPI document: 2016-10-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductApisListByProducts200ResponseValueInner model module.
 * @module model/ProductApisListByProducts200ResponseValueInner
 * @version 2016-10-10
 */
class ProductApisListByProducts200ResponseValueInner {
    /**
     * Constructs a new <code>ProductApisListByProducts200ResponseValueInner</code>.
     * API details.
     * @alias module:model/ProductApisListByProducts200ResponseValueInner
     * @param name {String} API name.
     * @param path {String} Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
     * @param protocols {Array.<module:model/ProductApisListByProducts200ResponseValueInner.ProtocolsEnum>} Describes on which protocols the operations in this API can be invoked.
     * @param serviceUrl {String} Absolute URL of the backend service implementing this API.
     */
    constructor(name, path, protocols, serviceUrl) { 
        
        ProductApisListByProducts200ResponseValueInner.initialize(this, name, path, protocols, serviceUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, path, protocols, serviceUrl) { 
        obj['name'] = name;
        obj['path'] = path;
        obj['protocols'] = protocols;
        obj['serviceUrl'] = serviceUrl;
    }

    /**
     * Constructs a <code>ProductApisListByProducts200ResponseValueInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductApisListByProducts200ResponseValueInner} obj Optional instance to populate.
     * @return {module:model/ProductApisListByProducts200ResponseValueInner} The populated <code>ProductApisListByProducts200ResponseValueInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductApisListByProducts200ResponseValueInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('protocols')) {
                obj['protocols'] = ApiClient.convertToType(data['protocols'], ['String']);
            }
            if (data.hasOwnProperty('serviceUrl')) {
                obj['serviceUrl'] = ApiClient.convertToType(data['serviceUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductApisListByProducts200ResponseValueInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductApisListByProducts200ResponseValueInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProductApisListByProducts200ResponseValueInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['protocols'])) {
            throw new Error("Expected the field `protocols` to be an array in the JSON data but got " + data['protocols']);
        }
        // ensure the json data is a string
        if (data['serviceUrl'] && !(typeof data['serviceUrl'] === 'string' || data['serviceUrl'] instanceof String)) {
            throw new Error("Expected the field `serviceUrl` to be a primitive type in the JSON string but got " + data['serviceUrl']);
        }

        return true;
    }


}

ProductApisListByProducts200ResponseValueInner.RequiredProperties = ["name", "path", "protocols", "serviceUrl"];

/**
 * API identifier path: /apis/{apiId}
 * @member {String} id
 */
ProductApisListByProducts200ResponseValueInner.prototype['id'] = undefined;

/**
 * API name.
 * @member {String} name
 */
ProductApisListByProducts200ResponseValueInner.prototype['name'] = undefined;

/**
 * Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
 * @member {String} path
 */
ProductApisListByProducts200ResponseValueInner.prototype['path'] = undefined;

/**
 * Describes on which protocols the operations in this API can be invoked.
 * @member {Array.<module:model/ProductApisListByProducts200ResponseValueInner.ProtocolsEnum>} protocols
 */
ProductApisListByProducts200ResponseValueInner.prototype['protocols'] = undefined;

/**
 * Absolute URL of the backend service implementing this API.
 * @member {String} serviceUrl
 */
ProductApisListByProducts200ResponseValueInner.prototype['serviceUrl'] = undefined;





/**
 * Allowed values for the <code>protocols</code> property.
 * @enum {String}
 * @readonly
 */
ProductApisListByProducts200ResponseValueInner['ProtocolsEnum'] = {

    /**
     * value: "Http"
     * @const
     */
    "Http": "Http",

    /**
     * value: "Https"
     * @const
     */
    "Https": "Https"
};



export default ProductApisListByProducts200ResponseValueInner;

