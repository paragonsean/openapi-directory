/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for web test locations.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationInsightsComponentWebTestLocation model module.
 * @module model/ApplicationInsightsComponentWebTestLocation
 * @version 2015-05-01
 */
class ApplicationInsightsComponentWebTestLocation {
    /**
     * Constructs a new <code>ApplicationInsightsComponentWebTestLocation</code>.
     * Properties that define a web test location available to an Application Insights Component.
     * @alias module:model/ApplicationInsightsComponentWebTestLocation
     */
    constructor() { 
        
        ApplicationInsightsComponentWebTestLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationInsightsComponentWebTestLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationInsightsComponentWebTestLocation} obj Optional instance to populate.
     * @return {module:model/ApplicationInsightsComponentWebTestLocation} The populated <code>ApplicationInsightsComponentWebTestLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationInsightsComponentWebTestLocation();

            if (data.hasOwnProperty('DisplayName')) {
                obj['DisplayName'] = ApiClient.convertToType(data['DisplayName'], 'String');
            }
            if (data.hasOwnProperty('Tag')) {
                obj['Tag'] = ApiClient.convertToType(data['Tag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationInsightsComponentWebTestLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationInsightsComponentWebTestLocation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['DisplayName'] && !(typeof data['DisplayName'] === 'string' || data['DisplayName'] instanceof String)) {
            throw new Error("Expected the field `DisplayName` to be a primitive type in the JSON string but got " + data['DisplayName']);
        }
        // ensure the json data is a string
        if (data['Tag'] && !(typeof data['Tag'] === 'string' || data['Tag'] instanceof String)) {
            throw new Error("Expected the field `Tag` to be a primitive type in the JSON string but got " + data['Tag']);
        }

        return true;
    }


}



/**
 * The display name of the web test location.
 * @member {String} DisplayName
 */
ApplicationInsightsComponentWebTestLocation.prototype['DisplayName'] = undefined;

/**
 * Internally defined geographic location tag.
 * @member {String} Tag
 */
ApplicationInsightsComponentWebTestLocation.prototype['Tag'] = undefined;






export default ApplicationInsightsComponentWebTestLocation;

