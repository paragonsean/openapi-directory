/*
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import org.openapitools.client.model.Job;
import org.openapitools.client.model.JobCreateParameters;
import org.openapitools.client.model.JobListByAutomationAccountDefaultResponse;
import org.openapitools.client.model.JobListResult;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobApi
 */
@Disabled
public class JobApiTest {

    private final JobApi api = new JobApi();

    /**
     * Create a job of the runbook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobCreateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        UUID jobId = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobCreateParameters parameters = null;
        Job response = api.jobCreate(resourceGroupName, automationAccountName, jobId, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Retrieve the job identified by job id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobGetTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        UUID jobId = null;
        String subscriptionId = null;
        String apiVersion = null;
        Job response = api.jobGet(resourceGroupName, automationAccountName, jobId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve the job output identified by job id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobGetOutputTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String jobId = null;
        String subscriptionId = null;
        String apiVersion = null;
        File response = api.jobGetOutput(resourceGroupName, automationAccountName, jobId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve the runbook content of the job identified by job id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobGetRunbookContentTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String jobId = null;
        String subscriptionId = null;
        String apiVersion = null;
        File response = api.jobGetRunbookContent(resourceGroupName, automationAccountName, jobId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve a list of jobs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobListByAutomationAccountTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        JobListResult response = api.jobListByAutomationAccount(resourceGroupName, automationAccountName, subscriptionId, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Resume the job identified by jobId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobResumeTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        UUID jobId = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.jobResume(resourceGroupName, automationAccountName, jobId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Stop the job identified by jobId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobStopTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        UUID jobId = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.jobStop(resourceGroupName, automationAccountName, jobId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Suspend the job identified by jobId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobSuspendTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        UUID jobId = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.jobSuspend(resourceGroupName, automationAccountName, jobId, subscriptionId, apiVersion);
        // TODO: test validations
    }

}
