/*
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.io.File;
import org.openapitools.client.model.Job;
import org.openapitools.client.model.JobCreateParameters;
import org.openapitools.client.model.JobListByAutomationAccountDefaultResponse;
import org.openapitools.client.model.JobListResultV2;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class JobApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public JobApi() {
        this(Configuration.getDefaultApiClient());
    }

    public JobApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for jobCreate
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters The parameters supplied to the create job operation. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobCreateCall(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, JobCreateParameters parameters, String clientRequestId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "automationAccountName" + "}", localVarApiClient.escapeString(automationAccountName.toString()))
            .replace("{" + "jobName" + "}", localVarApiClient.escapeString(jobName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("clientRequestId", localVarApiClient.parameterToString(clientRequestId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobCreateValidateBeforeCall(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, JobCreateParameters parameters, String clientRequestId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling jobCreate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling jobCreate(Async)");
        }

        // verify the required parameter 'automationAccountName' is set
        if (automationAccountName == null) {
            throw new ApiException("Missing the required parameter 'automationAccountName' when calling jobCreate(Async)");
        }

        // verify the required parameter 'jobName' is set
        if (jobName == null) {
            throw new ApiException("Missing the required parameter 'jobName' when calling jobCreate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobCreate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling jobCreate(Async)");
        }

        return jobCreateCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, parameters, clientRequestId, _callback);

    }

    /**
     * 
     * Create a job of the runbook.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters The parameters supplied to the create job operation. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return Job
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public Job jobCreate(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, JobCreateParameters parameters, String clientRequestId) throws ApiException {
        ApiResponse<Job> localVarResp = jobCreateWithHttpInfo(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, parameters, clientRequestId);
        return localVarResp.getData();
    }

    /**
     * 
     * Create a job of the runbook.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters The parameters supplied to the create job operation. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return ApiResponse&lt;Job&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public ApiResponse<Job> jobCreateWithHttpInfo(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, JobCreateParameters parameters, String clientRequestId) throws ApiException {
        okhttp3.Call localVarCall = jobCreateValidateBeforeCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, parameters, clientRequestId, null);
        Type localVarReturnType = new TypeToken<Job>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create a job of the runbook.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters The parameters supplied to the create job operation. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobCreateAsync(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, JobCreateParameters parameters, String clientRequestId, final ApiCallback<Job> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobCreateValidateBeforeCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, parameters, clientRequestId, _callback);
        Type localVarReturnType = new TypeToken<Job>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobGet
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobGetCall(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "automationAccountName" + "}", localVarApiClient.escapeString(automationAccountName.toString()))
            .replace("{" + "jobName" + "}", localVarApiClient.escapeString(jobName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("clientRequestId", localVarApiClient.parameterToString(clientRequestId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobGetValidateBeforeCall(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling jobGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling jobGet(Async)");
        }

        // verify the required parameter 'automationAccountName' is set
        if (automationAccountName == null) {
            throw new ApiException("Missing the required parameter 'automationAccountName' when calling jobGet(Async)");
        }

        // verify the required parameter 'jobName' is set
        if (jobName == null) {
            throw new ApiException("Missing the required parameter 'jobName' when calling jobGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobGet(Async)");
        }

        return jobGetCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId, _callback);

    }

    /**
     * 
     * Retrieve the job identified by job name.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return Job
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public Job jobGet(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId) throws ApiException {
        ApiResponse<Job> localVarResp = jobGetWithHttpInfo(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve the job identified by job name.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return ApiResponse&lt;Job&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public ApiResponse<Job> jobGetWithHttpInfo(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId) throws ApiException {
        okhttp3.Call localVarCall = jobGetValidateBeforeCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId, null);
        Type localVarReturnType = new TypeToken<Job>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve the job identified by job name.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobGetAsync(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId, final ApiCallback<Job> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobGetValidateBeforeCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId, _callback);
        Type localVarReturnType = new TypeToken<Job>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobGetOutput
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The name of the job to be created. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobGetOutputCall(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}/output"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "automationAccountName" + "}", localVarApiClient.escapeString(automationAccountName.toString()))
            .replace("{" + "jobName" + "}", localVarApiClient.escapeString(jobName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("clientRequestId", localVarApiClient.parameterToString(clientRequestId));
        }

        final String[] localVarAccepts = {
            "text/plain"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobGetOutputValidateBeforeCall(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling jobGetOutput(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling jobGetOutput(Async)");
        }

        // verify the required parameter 'automationAccountName' is set
        if (automationAccountName == null) {
            throw new ApiException("Missing the required parameter 'automationAccountName' when calling jobGetOutput(Async)");
        }

        // verify the required parameter 'jobName' is set
        if (jobName == null) {
            throw new ApiException("Missing the required parameter 'jobName' when calling jobGetOutput(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobGetOutput(Async)");
        }

        return jobGetOutputCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId, _callback);

    }

    /**
     * 
     * Retrieve the job output identified by job name.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The name of the job to be created. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public File jobGetOutput(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId) throws ApiException {
        ApiResponse<File> localVarResp = jobGetOutputWithHttpInfo(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve the job output identified by job name.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The name of the job to be created. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public ApiResponse<File> jobGetOutputWithHttpInfo(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId) throws ApiException {
        okhttp3.Call localVarCall = jobGetOutputValidateBeforeCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId, null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve the job output identified by job name.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The name of the job to be created. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobGetOutputAsync(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId, final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobGetOutputValidateBeforeCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId, _callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobGetRunbookContent
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobGetRunbookContentCall(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}/runbookContent"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "automationAccountName" + "}", localVarApiClient.escapeString(automationAccountName.toString()))
            .replace("{" + "jobName" + "}", localVarApiClient.escapeString(jobName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("clientRequestId", localVarApiClient.parameterToString(clientRequestId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobGetRunbookContentValidateBeforeCall(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling jobGetRunbookContent(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling jobGetRunbookContent(Async)");
        }

        // verify the required parameter 'automationAccountName' is set
        if (automationAccountName == null) {
            throw new ApiException("Missing the required parameter 'automationAccountName' when calling jobGetRunbookContent(Async)");
        }

        // verify the required parameter 'jobName' is set
        if (jobName == null) {
            throw new ApiException("Missing the required parameter 'jobName' when calling jobGetRunbookContent(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobGetRunbookContent(Async)");
        }

        return jobGetRunbookContentCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId, _callback);

    }

    /**
     * 
     * Retrieve the runbook content of the job identified by job name.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public File jobGetRunbookContent(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId) throws ApiException {
        ApiResponse<File> localVarResp = jobGetRunbookContentWithHttpInfo(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve the runbook content of the job identified by job name.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public ApiResponse<File> jobGetRunbookContentWithHttpInfo(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId) throws ApiException {
        okhttp3.Call localVarCall = jobGetRunbookContentValidateBeforeCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId, null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve the runbook content of the job identified by job name.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobGetRunbookContentAsync(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId, final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobGetRunbookContentValidateBeforeCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId, _callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobListByAutomationAccount
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param $filter The filter to apply on the operation. (optional)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobListByAutomationAccountCall(String resourceGroupName, String automationAccountName, String subscriptionId, String apiVersion, String $filter, String clientRequestId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "automationAccountName" + "}", localVarApiClient.escapeString(automationAccountName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("clientRequestId", localVarApiClient.parameterToString(clientRequestId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobListByAutomationAccountValidateBeforeCall(String resourceGroupName, String automationAccountName, String subscriptionId, String apiVersion, String $filter, String clientRequestId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling jobListByAutomationAccount(Async)");
        }

        // verify the required parameter 'automationAccountName' is set
        if (automationAccountName == null) {
            throw new ApiException("Missing the required parameter 'automationAccountName' when calling jobListByAutomationAccount(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling jobListByAutomationAccount(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobListByAutomationAccount(Async)");
        }

        return jobListByAutomationAccountCall(resourceGroupName, automationAccountName, subscriptionId, apiVersion, $filter, clientRequestId, _callback);

    }

    /**
     * 
     * Retrieve a list of jobs.
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param $filter The filter to apply on the operation. (optional)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return JobListResultV2
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public JobListResultV2 jobListByAutomationAccount(String resourceGroupName, String automationAccountName, String subscriptionId, String apiVersion, String $filter, String clientRequestId) throws ApiException {
        ApiResponse<JobListResultV2> localVarResp = jobListByAutomationAccountWithHttpInfo(resourceGroupName, automationAccountName, subscriptionId, apiVersion, $filter, clientRequestId);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve a list of jobs.
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param $filter The filter to apply on the operation. (optional)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return ApiResponse&lt;JobListResultV2&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public ApiResponse<JobListResultV2> jobListByAutomationAccountWithHttpInfo(String resourceGroupName, String automationAccountName, String subscriptionId, String apiVersion, String $filter, String clientRequestId) throws ApiException {
        okhttp3.Call localVarCall = jobListByAutomationAccountValidateBeforeCall(resourceGroupName, automationAccountName, subscriptionId, apiVersion, $filter, clientRequestId, null);
        Type localVarReturnType = new TypeToken<JobListResultV2>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve a list of jobs.
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param $filter The filter to apply on the operation. (optional)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobListByAutomationAccountAsync(String resourceGroupName, String automationAccountName, String subscriptionId, String apiVersion, String $filter, String clientRequestId, final ApiCallback<JobListResultV2> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobListByAutomationAccountValidateBeforeCall(resourceGroupName, automationAccountName, subscriptionId, apiVersion, $filter, clientRequestId, _callback);
        Type localVarReturnType = new TypeToken<JobListResultV2>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobResume
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobResumeCall(String resourceGroupName, String automationAccountName, String jobName, String subscriptionId, String apiVersion, String clientRequestId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}/resume"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "automationAccountName" + "}", localVarApiClient.escapeString(automationAccountName.toString()))
            .replace("{" + "jobName" + "}", localVarApiClient.escapeString(jobName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("clientRequestId", localVarApiClient.parameterToString(clientRequestId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobResumeValidateBeforeCall(String resourceGroupName, String automationAccountName, String jobName, String subscriptionId, String apiVersion, String clientRequestId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling jobResume(Async)");
        }

        // verify the required parameter 'automationAccountName' is set
        if (automationAccountName == null) {
            throw new ApiException("Missing the required parameter 'automationAccountName' when calling jobResume(Async)");
        }

        // verify the required parameter 'jobName' is set
        if (jobName == null) {
            throw new ApiException("Missing the required parameter 'jobName' when calling jobResume(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling jobResume(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobResume(Async)");
        }

        return jobResumeCall(resourceGroupName, automationAccountName, jobName, subscriptionId, apiVersion, clientRequestId, _callback);

    }

    /**
     * 
     * Resume the job identified by jobName.
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public void jobResume(String resourceGroupName, String automationAccountName, String jobName, String subscriptionId, String apiVersion, String clientRequestId) throws ApiException {
        jobResumeWithHttpInfo(resourceGroupName, automationAccountName, jobName, subscriptionId, apiVersion, clientRequestId);
    }

    /**
     * 
     * Resume the job identified by jobName.
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public ApiResponse<Void> jobResumeWithHttpInfo(String resourceGroupName, String automationAccountName, String jobName, String subscriptionId, String apiVersion, String clientRequestId) throws ApiException {
        okhttp3.Call localVarCall = jobResumeValidateBeforeCall(resourceGroupName, automationAccountName, jobName, subscriptionId, apiVersion, clientRequestId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Resume the job identified by jobName.
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobResumeAsync(String resourceGroupName, String automationAccountName, String jobName, String subscriptionId, String apiVersion, String clientRequestId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobResumeValidateBeforeCall(resourceGroupName, automationAccountName, jobName, subscriptionId, apiVersion, clientRequestId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobStop
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobStopCall(String resourceGroupName, String automationAccountName, String jobName, String subscriptionId, String apiVersion, String clientRequestId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}/stop"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "automationAccountName" + "}", localVarApiClient.escapeString(automationAccountName.toString()))
            .replace("{" + "jobName" + "}", localVarApiClient.escapeString(jobName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("clientRequestId", localVarApiClient.parameterToString(clientRequestId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobStopValidateBeforeCall(String resourceGroupName, String automationAccountName, String jobName, String subscriptionId, String apiVersion, String clientRequestId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling jobStop(Async)");
        }

        // verify the required parameter 'automationAccountName' is set
        if (automationAccountName == null) {
            throw new ApiException("Missing the required parameter 'automationAccountName' when calling jobStop(Async)");
        }

        // verify the required parameter 'jobName' is set
        if (jobName == null) {
            throw new ApiException("Missing the required parameter 'jobName' when calling jobStop(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling jobStop(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobStop(Async)");
        }

        return jobStopCall(resourceGroupName, automationAccountName, jobName, subscriptionId, apiVersion, clientRequestId, _callback);

    }

    /**
     * 
     * Stop the job identified by jobName.
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public void jobStop(String resourceGroupName, String automationAccountName, String jobName, String subscriptionId, String apiVersion, String clientRequestId) throws ApiException {
        jobStopWithHttpInfo(resourceGroupName, automationAccountName, jobName, subscriptionId, apiVersion, clientRequestId);
    }

    /**
     * 
     * Stop the job identified by jobName.
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public ApiResponse<Void> jobStopWithHttpInfo(String resourceGroupName, String automationAccountName, String jobName, String subscriptionId, String apiVersion, String clientRequestId) throws ApiException {
        okhttp3.Call localVarCall = jobStopValidateBeforeCall(resourceGroupName, automationAccountName, jobName, subscriptionId, apiVersion, clientRequestId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Stop the job identified by jobName.
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobStopAsync(String resourceGroupName, String automationAccountName, String jobName, String subscriptionId, String apiVersion, String clientRequestId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobStopValidateBeforeCall(resourceGroupName, automationAccountName, jobName, subscriptionId, apiVersion, clientRequestId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobSuspend
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobSuspendCall(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}/suspend"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "automationAccountName" + "}", localVarApiClient.escapeString(automationAccountName.toString()))
            .replace("{" + "jobName" + "}", localVarApiClient.escapeString(jobName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("clientRequestId", localVarApiClient.parameterToString(clientRequestId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobSuspendValidateBeforeCall(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling jobSuspend(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling jobSuspend(Async)");
        }

        // verify the required parameter 'automationAccountName' is set
        if (automationAccountName == null) {
            throw new ApiException("Missing the required parameter 'automationAccountName' when calling jobSuspend(Async)");
        }

        // verify the required parameter 'jobName' is set
        if (jobName == null) {
            throw new ApiException("Missing the required parameter 'jobName' when calling jobSuspend(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobSuspend(Async)");
        }

        return jobSuspendCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId, _callback);

    }

    /**
     * 
     * Suspend the job identified by job name.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public void jobSuspend(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId) throws ApiException {
        jobSuspendWithHttpInfo(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId);
    }

    /**
     * 
     * Suspend the job identified by job name.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public ApiResponse<Void> jobSuspendWithHttpInfo(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId) throws ApiException {
        okhttp3.Call localVarCall = jobSuspendValidateBeforeCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Suspend the job identified by job name.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of an Azure Resource group. (required)
     * @param automationAccountName The name of the automation account. (required)
     * @param jobName The job name. (required)
     * @param apiVersion Client Api Version. (required)
     * @param clientRequestId Identifies this specific client request. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Automation error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="http://aka.ms/azureautomationsdk/joboperations"> Documentation</a>
     */
    public okhttp3.Call jobSuspendAsync(String subscriptionId, String resourceGroupName, String automationAccountName, String jobName, String apiVersion, String clientRequestId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobSuspendValidateBeforeCall(subscriptionId, resourceGroupName, automationAccountName, jobName, apiVersion, clientRequestId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
