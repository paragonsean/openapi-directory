/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobProvisioningStateProperty.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobProvisioningStateProperty::OAIJobProvisioningStateProperty(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobProvisioningStateProperty::OAIJobProvisioningStateProperty() {
    this->initializeModel();
}

OAIJobProvisioningStateProperty::~OAIJobProvisioningStateProperty() {}

void OAIJobProvisioningStateProperty::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIJobProvisioningStateProperty::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIJobProvisioningStateProperty::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobProvisioningStateProperty::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Succeeded", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobProvisioningStateProperty::SUCCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Suspended", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobProvisioningStateProperty::SUSPENDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Processing", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobProvisioningStateProperty::PROCESSING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIJobProvisioningStateProperty::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIJobProvisioningStateProperty::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIJobProvisioningStateProperty::FAILED:
            val = "Failed";
            break;
        case eOAIJobProvisioningStateProperty::SUCCEEDED:
            val = "Succeeded";
            break;
        case eOAIJobProvisioningStateProperty::SUSPENDED:
            val = "Suspended";
            break;
        case eOAIJobProvisioningStateProperty::PROCESSING:
            val = "Processing";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIJobProvisioningStateProperty::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIJobProvisioningStateProperty::eOAIJobProvisioningStateProperty OAIJobProvisioningStateProperty::getValue() const {
    return m_value;
}

void OAIJobProvisioningStateProperty::setValue(const OAIJobProvisioningStateProperty::eOAIJobProvisioningStateProperty& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIJobProvisioningStateProperty::isSet() const {
    
    return m_value_isSet;
}

bool OAIJobProvisioningStateProperty::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
