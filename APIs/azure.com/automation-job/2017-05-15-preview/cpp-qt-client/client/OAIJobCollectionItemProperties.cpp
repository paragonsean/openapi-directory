/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobCollectionItemProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobCollectionItemProperties::OAIJobCollectionItemProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobCollectionItemProperties::OAIJobCollectionItemProperties() {
    this->initializeModel();
}

OAIJobCollectionItemProperties::~OAIJobCollectionItemProperties() {}

void OAIJobCollectionItemProperties::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_run_on_isSet = false;
    m_run_on_isValid = false;

    m_runbook_isSet = false;
    m_runbook_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIJobCollectionItemProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobCollectionItemProperties::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("jobId")]);
    m_job_id_isSet = !json[QString("jobId")].isNull() && m_job_id_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_run_on_isValid = ::OpenAPI::fromJsonValue(m_run_on, json[QString("runOn")]);
    m_run_on_isSet = !json[QString("runOn")].isNull() && m_run_on_isValid;

    m_runbook_isValid = ::OpenAPI::fromJsonValue(m_runbook, json[QString("runbook")]);
    m_runbook_isSet = !json[QString("runbook")].isNull() && m_runbook_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIJobCollectionItemProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobCollectionItemProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("jobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_run_on_isSet) {
        obj.insert(QString("runOn"), ::OpenAPI::toJsonValue(m_run_on));
    }
    if (m_runbook.isSet()) {
        obj.insert(QString("runbook"), ::OpenAPI::toJsonValue(m_runbook));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QDateTime OAIJobCollectionItemProperties::getCreationTime() const {
    return m_creation_time;
}
void OAIJobCollectionItemProperties::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIJobCollectionItemProperties::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIJobCollectionItemProperties::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIJobCollectionItemProperties::getEndTime() const {
    return m_end_time;
}
void OAIJobCollectionItemProperties::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIJobCollectionItemProperties::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIJobCollectionItemProperties::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIJobCollectionItemProperties::getJobId() const {
    return m_job_id;
}
void OAIJobCollectionItemProperties::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIJobCollectionItemProperties::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIJobCollectionItemProperties::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QDateTime OAIJobCollectionItemProperties::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIJobCollectionItemProperties::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIJobCollectionItemProperties::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIJobCollectionItemProperties::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIJobCollectionItemProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIJobCollectionItemProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIJobCollectionItemProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIJobCollectionItemProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAIJobCollectionItemProperties::getRunOn() const {
    return m_run_on;
}
void OAIJobCollectionItemProperties::setRunOn(const QString &run_on) {
    m_run_on = run_on;
    m_run_on_isSet = true;
}

bool OAIJobCollectionItemProperties::is_run_on_Set() const{
    return m_run_on_isSet;
}

bool OAIJobCollectionItemProperties::is_run_on_Valid() const{
    return m_run_on_isValid;
}

OAIRunbookAssociationProperty OAIJobCollectionItemProperties::getRunbook() const {
    return m_runbook;
}
void OAIJobCollectionItemProperties::setRunbook(const OAIRunbookAssociationProperty &runbook) {
    m_runbook = runbook;
    m_runbook_isSet = true;
}

bool OAIJobCollectionItemProperties::is_runbook_Set() const{
    return m_runbook_isSet;
}

bool OAIJobCollectionItemProperties::is_runbook_Valid() const{
    return m_runbook_isValid;
}

QDateTime OAIJobCollectionItemProperties::getStartTime() const {
    return m_start_time;
}
void OAIJobCollectionItemProperties::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIJobCollectionItemProperties::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIJobCollectionItemProperties::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIJobCollectionItemProperties::getStatus() const {
    return m_status;
}
void OAIJobCollectionItemProperties::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIJobCollectionItemProperties::is_status_Set() const{
    return m_status_isSet;
}

bool OAIJobCollectionItemProperties::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIJobCollectionItemProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_run_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_runbook.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobCollectionItemProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
