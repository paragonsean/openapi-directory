/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobStreamProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobStreamProperties::OAIJobStreamProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobStreamProperties::OAIJobStreamProperties() {
    this->initializeModel();
}

OAIJobStreamProperties::~OAIJobStreamProperties() {}

void OAIJobStreamProperties::initializeModel() {

    m_job_stream_id_isSet = false;
    m_job_stream_id_isValid = false;

    m_stream_text_isSet = false;
    m_stream_text_isValid = false;

    m_stream_type_isSet = false;
    m_stream_type_isValid = false;

    m_summary_isSet = false;
    m_summary_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIJobStreamProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobStreamProperties::fromJsonObject(QJsonObject json) {

    m_job_stream_id_isValid = ::OpenAPI::fromJsonValue(m_job_stream_id, json[QString("jobStreamId")]);
    m_job_stream_id_isSet = !json[QString("jobStreamId")].isNull() && m_job_stream_id_isValid;

    m_stream_text_isValid = ::OpenAPI::fromJsonValue(m_stream_text, json[QString("streamText")]);
    m_stream_text_isSet = !json[QString("streamText")].isNull() && m_stream_text_isValid;

    m_stream_type_isValid = ::OpenAPI::fromJsonValue(m_stream_type, json[QString("streamType")]);
    m_stream_type_isSet = !json[QString("streamType")].isNull() && m_stream_type_isValid;

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("summary")]);
    m_summary_isSet = !json[QString("summary")].isNull() && m_summary_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIJobStreamProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobStreamProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_job_stream_id_isSet) {
        obj.insert(QString("jobStreamId"), ::OpenAPI::toJsonValue(m_job_stream_id));
    }
    if (m_stream_text_isSet) {
        obj.insert(QString("streamText"), ::OpenAPI::toJsonValue(m_stream_text));
    }
    if (m_stream_type_isSet) {
        obj.insert(QString("streamType"), ::OpenAPI::toJsonValue(m_stream_type));
    }
    if (m_summary_isSet) {
        obj.insert(QString("summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    if (m_time_isSet) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(m_time));
    }
    if (m_value.size() > 0) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIJobStreamProperties::getJobStreamId() const {
    return m_job_stream_id;
}
void OAIJobStreamProperties::setJobStreamId(const QString &job_stream_id) {
    m_job_stream_id = job_stream_id;
    m_job_stream_id_isSet = true;
}

bool OAIJobStreamProperties::is_job_stream_id_Set() const{
    return m_job_stream_id_isSet;
}

bool OAIJobStreamProperties::is_job_stream_id_Valid() const{
    return m_job_stream_id_isValid;
}

QString OAIJobStreamProperties::getStreamText() const {
    return m_stream_text;
}
void OAIJobStreamProperties::setStreamText(const QString &stream_text) {
    m_stream_text = stream_text;
    m_stream_text_isSet = true;
}

bool OAIJobStreamProperties::is_stream_text_Set() const{
    return m_stream_text_isSet;
}

bool OAIJobStreamProperties::is_stream_text_Valid() const{
    return m_stream_text_isValid;
}

QString OAIJobStreamProperties::getStreamType() const {
    return m_stream_type;
}
void OAIJobStreamProperties::setStreamType(const QString &stream_type) {
    m_stream_type = stream_type;
    m_stream_type_isSet = true;
}

bool OAIJobStreamProperties::is_stream_type_Set() const{
    return m_stream_type_isSet;
}

bool OAIJobStreamProperties::is_stream_type_Valid() const{
    return m_stream_type_isValid;
}

QString OAIJobStreamProperties::getSummary() const {
    return m_summary;
}
void OAIJobStreamProperties::setSummary(const QString &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAIJobStreamProperties::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAIJobStreamProperties::is_summary_Valid() const{
    return m_summary_isValid;
}

QDateTime OAIJobStreamProperties::getTime() const {
    return m_time;
}
void OAIJobStreamProperties::setTime(const QDateTime &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAIJobStreamProperties::is_time_Set() const{
    return m_time_isSet;
}

bool OAIJobStreamProperties::is_time_Valid() const{
    return m_time_isValid;
}

QMap<QString, OAIObject> OAIJobStreamProperties::getValue() const {
    return m_value;
}
void OAIJobStreamProperties::setValue(const QMap<QString, OAIObject> &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIJobStreamProperties::is_value_Set() const{
    return m_value_isSet;
}

bool OAIJobStreamProperties::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIJobStreamProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_stream_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stream_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stream_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobStreamProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
