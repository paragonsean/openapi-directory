/*
 * FabricAdminClient
 * Infrastructure role instance operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InfraRoleInstance;
import org.openapitools.client.model.InfraRoleInstanceList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InfraRoleInstancesApi
 */
@Disabled
public class InfraRoleInstancesApiTest {

    private final InfraRoleInstancesApi api = new InfraRoleInstancesApi();

    /**
     * Return the requested infrastructure role instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void infraRoleInstancesGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String location = null;
        String infraRoleInstance = null;
        String apiVersion = null;
        InfraRoleInstance response = api.infraRoleInstancesGet(subscriptionId, resourceGroupName, location, infraRoleInstance, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns a list of all infrastructure role instances at a location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void infraRoleInstancesListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String location = null;
        String apiVersion = null;
        String $filter = null;
        InfraRoleInstanceList response = api.infraRoleInstancesList(subscriptionId, resourceGroupName, location, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Power off an infrastructure role instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void infraRoleInstancesPowerOffTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String location = null;
        String infraRoleInstance = null;
        String apiVersion = null;
        api.infraRoleInstancesPowerOff(subscriptionId, resourceGroupName, location, infraRoleInstance, apiVersion);
        // TODO: test validations
    }

    /**
     * Power on an infrastructure role instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void infraRoleInstancesPowerOnTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String location = null;
        String infraRoleInstance = null;
        String apiVersion = null;
        api.infraRoleInstancesPowerOn(subscriptionId, resourceGroupName, location, infraRoleInstance, apiVersion);
        // TODO: test validations
    }

    /**
     * Reboot an infrastructure role instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void infraRoleInstancesRebootTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String location = null;
        String infraRoleInstance = null;
        String apiVersion = null;
        api.infraRoleInstancesReboot(subscriptionId, resourceGroupName, location, infraRoleInstance, apiVersion);
        // TODO: test validations
    }

    /**
     * Shut down an infrastructure role instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void infraRoleInstancesShutdownTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String location = null;
        String infraRoleInstance = null;
        String apiVersion = null;
        api.infraRoleInstancesShutdown(subscriptionId, resourceGroupName, location, infraRoleInstance, apiVersion);
        // TODO: test validations
    }

}
