/**
 * FabricAdminClient
 * Infrastructure role instance operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInfraRoleInstanceModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInfraRoleInstanceModel::OAIInfraRoleInstanceModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInfraRoleInstanceModel::OAIInfraRoleInstanceModel() {
    this->initializeModel();
}

OAIInfraRoleInstanceModel::~OAIInfraRoleInstanceModel() {}

void OAIInfraRoleInstanceModel::initializeModel() {

    m_scale_unit_isSet = false;
    m_scale_unit_isValid = false;

    m_scale_unit_node_isSet = false;
    m_scale_unit_node_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIInfraRoleInstanceModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInfraRoleInstanceModel::fromJsonObject(QJsonObject json) {

    m_scale_unit_isValid = ::OpenAPI::fromJsonValue(m_scale_unit, json[QString("scaleUnit")]);
    m_scale_unit_isSet = !json[QString("scaleUnit")].isNull() && m_scale_unit_isValid;

    m_scale_unit_node_isValid = ::OpenAPI::fromJsonValue(m_scale_unit_node, json[QString("scaleUnitNode")]);
    m_scale_unit_node_isSet = !json[QString("scaleUnitNode")].isNull() && m_scale_unit_node_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIInfraRoleInstanceModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInfraRoleInstanceModel::asJsonObject() const {
    QJsonObject obj;
    if (m_scale_unit_isSet) {
        obj.insert(QString("scaleUnit"), ::OpenAPI::toJsonValue(m_scale_unit));
    }
    if (m_scale_unit_node_isSet) {
        obj.insert(QString("scaleUnitNode"), ::OpenAPI::toJsonValue(m_scale_unit_node));
    }
    if (m_size.isSet()) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIInfraRoleInstanceModel::getScaleUnit() const {
    return m_scale_unit;
}
void OAIInfraRoleInstanceModel::setScaleUnit(const QString &scale_unit) {
    m_scale_unit = scale_unit;
    m_scale_unit_isSet = true;
}

bool OAIInfraRoleInstanceModel::is_scale_unit_Set() const{
    return m_scale_unit_isSet;
}

bool OAIInfraRoleInstanceModel::is_scale_unit_Valid() const{
    return m_scale_unit_isValid;
}

QString OAIInfraRoleInstanceModel::getScaleUnitNode() const {
    return m_scale_unit_node;
}
void OAIInfraRoleInstanceModel::setScaleUnitNode(const QString &scale_unit_node) {
    m_scale_unit_node = scale_unit_node;
    m_scale_unit_node_isSet = true;
}

bool OAIInfraRoleInstanceModel::is_scale_unit_node_Set() const{
    return m_scale_unit_node_isSet;
}

bool OAIInfraRoleInstanceModel::is_scale_unit_node_Valid() const{
    return m_scale_unit_node_isValid;
}

OAIInfraRoleInstanceSize OAIInfraRoleInstanceModel::getSize() const {
    return m_size;
}
void OAIInfraRoleInstanceModel::setSize(const OAIInfraRoleInstanceSize &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIInfraRoleInstanceModel::is_size_Set() const{
    return m_size_isSet;
}

bool OAIInfraRoleInstanceModel::is_size_Valid() const{
    return m_size_isValid;
}

QString OAIInfraRoleInstanceModel::getState() const {
    return m_state;
}
void OAIInfraRoleInstanceModel::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIInfraRoleInstanceModel::is_state_Set() const{
    return m_state_isSet;
}

bool OAIInfraRoleInstanceModel::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIInfraRoleInstanceModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scale_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scale_unit_node_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInfraRoleInstanceModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
