# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InfraRoleInstanceSize(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cores: int=None, memory_gb: float=None):
        """InfraRoleInstanceSize - a model defined in OpenAPI

        :param cores: The cores of this InfraRoleInstanceSize.
        :param memory_gb: The memory_gb of this InfraRoleInstanceSize.
        """
        self.openapi_types = {
            'cores': int,
            'memory_gb': float
        }

        self.attribute_map = {
            'cores': 'cores',
            'memory_gb': 'memoryGb'
        }

        self._cores = cores
        self._memory_gb = memory_gb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InfraRoleInstanceSize':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InfraRoleInstanceSize of this InfraRoleInstanceSize.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cores(self):
        """Gets the cores of this InfraRoleInstanceSize.

        The number of cores assigned to the virtual machine.

        :return: The cores of this InfraRoleInstanceSize.
        :rtype: int
        """
        return self._cores

    @cores.setter
    def cores(self, cores):
        """Sets the cores of this InfraRoleInstanceSize.

        The number of cores assigned to the virtual machine.

        :param cores: The cores of this InfraRoleInstanceSize.
        :type cores: int
        """

        self._cores = cores

    @property
    def memory_gb(self):
        """Gets the memory_gb of this InfraRoleInstanceSize.

        The amount of memory, in GB, currently assigned to the virtual machine.

        :return: The memory_gb of this InfraRoleInstanceSize.
        :rtype: float
        """
        return self._memory_gb

    @memory_gb.setter
    def memory_gb(self, memory_gb):
        """Sets the memory_gb of this InfraRoleInstanceSize.

        The amount of memory, in GB, currently assigned to the virtual machine.

        :param memory_gb: The memory_gb of this InfraRoleInstanceSize.
        :type memory_gb: float
        """

        self._memory_gb = memory_gb
