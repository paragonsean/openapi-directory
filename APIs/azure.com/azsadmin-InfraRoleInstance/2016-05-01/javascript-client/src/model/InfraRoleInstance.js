/**
 * FabricAdminClient
 * Infrastructure role instance operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InfraRoleInstanceModel from './InfraRoleInstanceModel';

/**
 * The InfraRoleInstance model module.
 * @module model/InfraRoleInstance
 * @version 2016-05-01
 */
class InfraRoleInstance {
    /**
     * Constructs a new <code>InfraRoleInstance</code>.
     * The virtual machine resource is used to represent an infrastructure virtual machine in the Azure Stack environment. The fabric resource provider only surfaces infrastructure virtual machines. These machines are never created directly by the admin, but rather as a side effect of expanding admin services.
     * @alias module:model/InfraRoleInstance
     */
    constructor() { 
        
        InfraRoleInstance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InfraRoleInstance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InfraRoleInstance} obj Optional instance to populate.
     * @return {module:model/InfraRoleInstance} The populated <code>InfraRoleInstance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InfraRoleInstance();

            if (data.hasOwnProperty('properties')) {
                obj['properties'] = InfraRoleInstanceModel.constructFromObject(data['properties']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InfraRoleInstance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InfraRoleInstance</code>.
     */
    static validateJSON(data) {
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          InfraRoleInstanceModel.validateJSON(data['properties']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/InfraRoleInstanceModel} properties
 */
InfraRoleInstance.prototype['properties'] = undefined;

/**
 * URI of the resource.
 * @member {String} id
 */
InfraRoleInstance.prototype['id'] = undefined;

/**
 * The region where the resource is located.
 * @member {String} location
 */
InfraRoleInstance.prototype['location'] = undefined;

/**
 * Name of the resource.
 * @member {String} name
 */
InfraRoleInstance.prototype['name'] = undefined;

/**
 * List of key-value pairs.
 * @member {Object.<String, String>} tags
 */
InfraRoleInstance.prototype['tags'] = undefined;

/**
 * Type of resource.
 * @member {String} type
 */
InfraRoleInstance.prototype['type'] = undefined;






export default InfraRoleInstance;

