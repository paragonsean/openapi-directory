/**
 * HybridComputeManagementClient
 * The Hybrid Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-03-18-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMachineReconnectProperties.h
 *
 * Describes the properties required to reconnect a hybrid machine.
 */

#ifndef OAIMachineReconnectProperties_H
#define OAIMachineReconnectProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMachineReconnectProperties : public OAIObject {
public:
    OAIMachineReconnectProperties();
    OAIMachineReconnectProperties(QString json);
    ~OAIMachineReconnectProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientPublicKey() const;
    void setClientPublicKey(const QString &client_public_key);
    bool is_client_public_key_Set() const;
    bool is_client_public_key_Valid() const;

    QString getVmId() const;
    void setVmId(const QString &vm_id);
    bool is_vm_id_Set() const;
    bool is_vm_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_public_key;
    bool m_client_public_key_isSet;
    bool m_client_public_key_isValid;

    QString m_vm_id;
    bool m_vm_id_isSet;
    bool m_vm_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMachineReconnectProperties)

#endif // OAIMachineReconnectProperties_H
