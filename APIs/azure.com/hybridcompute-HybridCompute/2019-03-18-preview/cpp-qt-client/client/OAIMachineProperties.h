/**
 * HybridComputeManagementClient
 * The Hybrid Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-03-18-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMachineProperties.h
 *
 * Describes the properties of a hybrid machine.
 */

#ifndef OAIMachineProperties_H
#define OAIMachineProperties_H

#include <QJsonObject>

#include "OAIErrorDetail.h"
#include "OAIOSProfile.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErrorDetail;
class OAIOSProfile;

class OAIMachineProperties : public OAIObject {
public:
    OAIMachineProperties();
    OAIMachineProperties(QString json);
    ~OAIMachineProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAgentVersion() const;
    void setAgentVersion(const QString &agent_version);
    bool is_agent_version_Set() const;
    bool is_agent_version_Valid() const;

    QString getClientPublicKey() const;
    void setClientPublicKey(const QString &client_public_key);
    bool is_client_public_key_Set() const;
    bool is_client_public_key_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<OAIErrorDetail> getErrorDetails() const;
    void setErrorDetails(const QList<OAIErrorDetail> &error_details);
    bool is_error_details_Set() const;
    bool is_error_details_Valid() const;

    QDateTime getLastStatusChange() const;
    void setLastStatusChange(const QDateTime &last_status_change);
    bool is_last_status_change_Set() const;
    bool is_last_status_change_Valid() const;

    QString getMachineFqdn() const;
    void setMachineFqdn(const QString &machine_fqdn);
    bool is_machine_fqdn_Set() const;
    bool is_machine_fqdn_Valid() const;

    QString getOsName() const;
    void setOsName(const QString &os_name);
    bool is_os_name_Set() const;
    bool is_os_name_Valid() const;

    OAIOSProfile getOsProfile() const;
    void setOsProfile(const OAIOSProfile &os_profile);
    bool is_os_profile_Set() const;
    bool is_os_profile_Valid() const;

    QString getOsVersion() const;
    void setOsVersion(const QString &os_version);
    bool is_os_version_Set() const;
    bool is_os_version_Valid() const;

    QString getPhysicalLocation() const;
    void setPhysicalLocation(const QString &physical_location);
    bool is_physical_location_Set() const;
    bool is_physical_location_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getVmId() const;
    void setVmId(const QString &vm_id);
    bool is_vm_id_Set() const;
    bool is_vm_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_agent_version;
    bool m_agent_version_isSet;
    bool m_agent_version_isValid;

    QString m_client_public_key;
    bool m_client_public_key_isSet;
    bool m_client_public_key_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<OAIErrorDetail> m_error_details;
    bool m_error_details_isSet;
    bool m_error_details_isValid;

    QDateTime m_last_status_change;
    bool m_last_status_change_isSet;
    bool m_last_status_change_isValid;

    QString m_machine_fqdn;
    bool m_machine_fqdn_isSet;
    bool m_machine_fqdn_isValid;

    QString m_os_name;
    bool m_os_name_isSet;
    bool m_os_name_isValid;

    OAIOSProfile m_os_profile;
    bool m_os_profile_isSet;
    bool m_os_profile_isValid;

    QString m_os_version;
    bool m_os_version_isSet;
    bool m_os_version_isValid;

    QString m_physical_location;
    bool m_physical_location_isSet;
    bool m_physical_location_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_vm_id;
    bool m_vm_id_isSet;
    bool m_vm_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMachineProperties)

#endif // OAIMachineProperties_H
