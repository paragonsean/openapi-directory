# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ThrottlingInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None):
        """ThrottlingInformation - a model defined in OpenAPI

        :param duration: The duration of this ThrottlingInformation.
        """
        self.openapi_types = {
            'duration': str
        }

        self.attribute_map = {
            'duration': 'duration'
        }

        self._duration = duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ThrottlingInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ThrottlingInformation of this ThrottlingInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this ThrottlingInformation.

        The required duration (in ISO8601 format) to wait before notifying on the alert rule again. The time granularity must be in minutes and minimum value is 0 minutes

        :return: The duration of this ThrottlingInformation.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ThrottlingInformation.

        The required duration (in ISO8601 format) to wait before notifying on the alert rule again. The time granularity must be in minutes and minimum value is 0 minutes

        :param duration: The duration of this ThrottlingInformation.
        :type duration: str
        """

        self._duration = duration
