/**
 * Azure Alerts Management Service Resource Provider
 * APIs for Azure Smart Detector Alert Rules CRUD operations.
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActionGroupsInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActionGroupsInformation::OAIActionGroupsInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActionGroupsInformation::OAIActionGroupsInformation() {
    this->initializeModel();
}

OAIActionGroupsInformation::~OAIActionGroupsInformation() {}

void OAIActionGroupsInformation::initializeModel() {

    m_custom_email_subject_isSet = false;
    m_custom_email_subject_isValid = false;

    m_custom_webhook_payload_isSet = false;
    m_custom_webhook_payload_isValid = false;

    m_group_ids_isSet = false;
    m_group_ids_isValid = false;
}

void OAIActionGroupsInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActionGroupsInformation::fromJsonObject(QJsonObject json) {

    m_custom_email_subject_isValid = ::OpenAPI::fromJsonValue(m_custom_email_subject, json[QString("customEmailSubject")]);
    m_custom_email_subject_isSet = !json[QString("customEmailSubject")].isNull() && m_custom_email_subject_isValid;

    m_custom_webhook_payload_isValid = ::OpenAPI::fromJsonValue(m_custom_webhook_payload, json[QString("customWebhookPayload")]);
    m_custom_webhook_payload_isSet = !json[QString("customWebhookPayload")].isNull() && m_custom_webhook_payload_isValid;

    m_group_ids_isValid = ::OpenAPI::fromJsonValue(m_group_ids, json[QString("groupIds")]);
    m_group_ids_isSet = !json[QString("groupIds")].isNull() && m_group_ids_isValid;
}

QString OAIActionGroupsInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActionGroupsInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_email_subject_isSet) {
        obj.insert(QString("customEmailSubject"), ::OpenAPI::toJsonValue(m_custom_email_subject));
    }
    if (m_custom_webhook_payload_isSet) {
        obj.insert(QString("customWebhookPayload"), ::OpenAPI::toJsonValue(m_custom_webhook_payload));
    }
    if (m_group_ids.size() > 0) {
        obj.insert(QString("groupIds"), ::OpenAPI::toJsonValue(m_group_ids));
    }
    return obj;
}

QString OAIActionGroupsInformation::getCustomEmailSubject() const {
    return m_custom_email_subject;
}
void OAIActionGroupsInformation::setCustomEmailSubject(const QString &custom_email_subject) {
    m_custom_email_subject = custom_email_subject;
    m_custom_email_subject_isSet = true;
}

bool OAIActionGroupsInformation::is_custom_email_subject_Set() const{
    return m_custom_email_subject_isSet;
}

bool OAIActionGroupsInformation::is_custom_email_subject_Valid() const{
    return m_custom_email_subject_isValid;
}

QString OAIActionGroupsInformation::getCustomWebhookPayload() const {
    return m_custom_webhook_payload;
}
void OAIActionGroupsInformation::setCustomWebhookPayload(const QString &custom_webhook_payload) {
    m_custom_webhook_payload = custom_webhook_payload;
    m_custom_webhook_payload_isSet = true;
}

bool OAIActionGroupsInformation::is_custom_webhook_payload_Set() const{
    return m_custom_webhook_payload_isSet;
}

bool OAIActionGroupsInformation::is_custom_webhook_payload_Valid() const{
    return m_custom_webhook_payload_isValid;
}

QList<QString> OAIActionGroupsInformation::getGroupIds() const {
    return m_group_ids;
}
void OAIActionGroupsInformation::setGroupIds(const QList<QString> &group_ids) {
    m_group_ids = group_ids;
    m_group_ids_isSet = true;
}

bool OAIActionGroupsInformation::is_group_ids_Set() const{
    return m_group_ids_isSet;
}

bool OAIActionGroupsInformation::is_group_ids_Valid() const{
    return m_group_ids_isValid;
}

bool OAIActionGroupsInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_email_subject_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_webhook_payload_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActionGroupsInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_group_ids_isValid && true;
}

} // namespace OpenAPI
