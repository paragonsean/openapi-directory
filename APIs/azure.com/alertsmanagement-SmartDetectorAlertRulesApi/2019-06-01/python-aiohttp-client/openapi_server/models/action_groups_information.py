# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActionGroupsInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_email_subject: str=None, custom_webhook_payload: str=None, group_ids: List[str]=None):
        """ActionGroupsInformation - a model defined in OpenAPI

        :param custom_email_subject: The custom_email_subject of this ActionGroupsInformation.
        :param custom_webhook_payload: The custom_webhook_payload of this ActionGroupsInformation.
        :param group_ids: The group_ids of this ActionGroupsInformation.
        """
        self.openapi_types = {
            'custom_email_subject': str,
            'custom_webhook_payload': str,
            'group_ids': List[str]
        }

        self.attribute_map = {
            'custom_email_subject': 'customEmailSubject',
            'custom_webhook_payload': 'customWebhookPayload',
            'group_ids': 'groupIds'
        }

        self._custom_email_subject = custom_email_subject
        self._custom_webhook_payload = custom_webhook_payload
        self._group_ids = group_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionGroupsInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionGroupsInformation of this ActionGroupsInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_email_subject(self):
        """Gets the custom_email_subject of this ActionGroupsInformation.

        An optional custom email subject to use in email notifications.

        :return: The custom_email_subject of this ActionGroupsInformation.
        :rtype: str
        """
        return self._custom_email_subject

    @custom_email_subject.setter
    def custom_email_subject(self, custom_email_subject):
        """Sets the custom_email_subject of this ActionGroupsInformation.

        An optional custom email subject to use in email notifications.

        :param custom_email_subject: The custom_email_subject of this ActionGroupsInformation.
        :type custom_email_subject: str
        """

        self._custom_email_subject = custom_email_subject

    @property
    def custom_webhook_payload(self):
        """Gets the custom_webhook_payload of this ActionGroupsInformation.

        An optional custom web-hook payload to use in web-hook notifications.

        :return: The custom_webhook_payload of this ActionGroupsInformation.
        :rtype: str
        """
        return self._custom_webhook_payload

    @custom_webhook_payload.setter
    def custom_webhook_payload(self, custom_webhook_payload):
        """Sets the custom_webhook_payload of this ActionGroupsInformation.

        An optional custom web-hook payload to use in web-hook notifications.

        :param custom_webhook_payload: The custom_webhook_payload of this ActionGroupsInformation.
        :type custom_webhook_payload: str
        """

        self._custom_webhook_payload = custom_webhook_payload

    @property
    def group_ids(self):
        """Gets the group_ids of this ActionGroupsInformation.

        The Action Group resource IDs.

        :return: The group_ids of this ActionGroupsInformation.
        :rtype: List[str]
        """
        return self._group_ids

    @group_ids.setter
    def group_ids(self, group_ids):
        """Sets the group_ids of this ActionGroupsInformation.

        The Action Group resource IDs.

        :param group_ids: The group_ids of this ActionGroupsInformation.
        :type group_ids: List[str]
        """
        if group_ids is None:
            raise ValueError("Invalid value for `group_ids`, must not be `None`")

        self._group_ids = group_ids
