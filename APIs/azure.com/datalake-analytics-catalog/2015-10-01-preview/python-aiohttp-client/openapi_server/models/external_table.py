# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entity_id import EntityId
from openapi_server import util


class ExternalTable(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_source: EntityId=None, table_name: str=None):
        """ExternalTable - a model defined in OpenAPI

        :param data_source: The data_source of this ExternalTable.
        :param table_name: The table_name of this ExternalTable.
        """
        self.openapi_types = {
            'data_source': EntityId,
            'table_name': str
        }

        self.attribute_map = {
            'data_source': 'dataSource',
            'table_name': 'tableName'
        }

        self._data_source = data_source
        self._table_name = table_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExternalTable':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExternalTable of this ExternalTable.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_source(self):
        """Gets the data_source of this ExternalTable.


        :return: The data_source of this ExternalTable.
        :rtype: EntityId
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this ExternalTable.


        :param data_source: The data_source of this ExternalTable.
        :type data_source: EntityId
        """

        self._data_source = data_source

    @property
    def table_name(self):
        """Gets the table_name of this ExternalTable.

        the name of the table associated with this database and schema.

        :return: The table_name of this ExternalTable.
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name):
        """Sets the table_name of this ExternalTable.

        the name of the table associated with this database and schema.

        :param table_name: The table_name of this ExternalTable.
        :type table_name: str
        """

        self._table_name = table_name
