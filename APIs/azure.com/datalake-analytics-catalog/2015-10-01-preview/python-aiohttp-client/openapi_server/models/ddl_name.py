# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DdlName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_part: str=None, second_part: str=None, server: str=None, third_part: str=None):
        """DdlName - a model defined in OpenAPI

        :param first_part: The first_part of this DdlName.
        :param second_part: The second_part of this DdlName.
        :param server: The server of this DdlName.
        :param third_part: The third_part of this DdlName.
        """
        self.openapi_types = {
            'first_part': str,
            'second_part': str,
            'server': str,
            'third_part': str
        }

        self.attribute_map = {
            'first_part': 'firstPart',
            'second_part': 'secondPart',
            'server': 'server',
            'third_part': 'thirdPart'
        }

        self._first_part = first_part
        self._second_part = second_part
        self._server = server
        self._third_part = third_part

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DdlName':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DdlName of this DdlName.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_part(self):
        """Gets the first_part of this DdlName.

        the name of the table associated with this database and schema.

        :return: The first_part of this DdlName.
        :rtype: str
        """
        return self._first_part

    @first_part.setter
    def first_part(self, first_part):
        """Sets the first_part of this DdlName.

        the name of the table associated with this database and schema.

        :param first_part: The first_part of this DdlName.
        :type first_part: str
        """

        self._first_part = first_part

    @property
    def second_part(self):
        """Gets the second_part of this DdlName.

        the name of the table associated with this database and schema.

        :return: The second_part of this DdlName.
        :rtype: str
        """
        return self._second_part

    @second_part.setter
    def second_part(self, second_part):
        """Sets the second_part of this DdlName.

        the name of the table associated with this database and schema.

        :param second_part: The second_part of this DdlName.
        :type second_part: str
        """

        self._second_part = second_part

    @property
    def server(self):
        """Gets the server of this DdlName.

        the name of the table associated with this database and schema.

        :return: The server of this DdlName.
        :rtype: str
        """
        return self._server

    @server.setter
    def server(self, server):
        """Sets the server of this DdlName.

        the name of the table associated with this database and schema.

        :param server: The server of this DdlName.
        :type server: str
        """

        self._server = server

    @property
    def third_part(self):
        """Gets the third_part of this DdlName.

        the name of the table associated with this database and schema.

        :return: The third_part of this DdlName.
        :rtype: str
        """
        return self._third_part

    @third_part.setter
    def third_part(self, third_part):
        """Sets the third_part of this DdlName.

        the name of the table associated with this database and schema.

        :param third_part: The third_part of this DdlName.
        :type third_part: str
        """

        self._third_part = third_part
