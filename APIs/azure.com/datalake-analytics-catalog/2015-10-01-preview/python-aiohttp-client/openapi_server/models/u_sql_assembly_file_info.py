# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class USqlAssemblyFileInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_path: str=None, original_path: str=None, type: str=None):
        """USqlAssemblyFileInfo - a model defined in OpenAPI

        :param content_path: The content_path of this USqlAssemblyFileInfo.
        :param original_path: The original_path of this USqlAssemblyFileInfo.
        :param type: The type of this USqlAssemblyFileInfo.
        """
        self.openapi_types = {
            'content_path': str,
            'original_path': str,
            'type': str
        }

        self.attribute_map = {
            'content_path': 'contentPath',
            'original_path': 'originalPath',
            'type': 'type'
        }

        self._content_path = content_path
        self._original_path = original_path
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'USqlAssemblyFileInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The USqlAssemblyFileInfo of this USqlAssemblyFileInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_path(self):
        """Gets the content_path of this USqlAssemblyFileInfo.

        The content path to the assembly file.

        :return: The content_path of this USqlAssemblyFileInfo.
        :rtype: str
        """
        return self._content_path

    @content_path.setter
    def content_path(self, content_path):
        """Sets the content_path of this USqlAssemblyFileInfo.

        The content path to the assembly file.

        :param content_path: The content_path of this USqlAssemblyFileInfo.
        :type content_path: str
        """

        self._content_path = content_path

    @property
    def original_path(self):
        """Gets the original_path of this USqlAssemblyFileInfo.

        The original path to the assembly file.

        :return: The original_path of this USqlAssemblyFileInfo.
        :rtype: str
        """
        return self._original_path

    @original_path.setter
    def original_path(self, original_path):
        """Sets the original_path of this USqlAssemblyFileInfo.

        The original path to the assembly file.

        :param original_path: The original_path of this USqlAssemblyFileInfo.
        :type original_path: str
        """

        self._original_path = original_path

    @property
    def type(self):
        """Gets the type of this USqlAssemblyFileInfo.

        the assembly file type.

        :return: The type of this USqlAssemblyFileInfo.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this USqlAssemblyFileInfo.

        the assembly file type.

        :param type: The type of this USqlAssemblyFileInfo.
        :type type: str
        """
        allowed_values = ["Assembly", "Resource"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
