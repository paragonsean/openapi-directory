# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class USqlDatabase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, database_name: str=None, compute_account_name: str=None, version: str=None):
        """USqlDatabase - a model defined in OpenAPI

        :param database_name: The database_name of this USqlDatabase.
        :param compute_account_name: The compute_account_name of this USqlDatabase.
        :param version: The version of this USqlDatabase.
        """
        self.openapi_types = {
            'database_name': str,
            'compute_account_name': str,
            'version': str
        }

        self.attribute_map = {
            'database_name': 'databaseName',
            'compute_account_name': 'computeAccountName',
            'version': 'version'
        }

        self._database_name = database_name
        self._compute_account_name = compute_account_name
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'USqlDatabase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The USqlDatabase of this USqlDatabase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def database_name(self):
        """Gets the database_name of this USqlDatabase.

        the name of the database.

        :return: The database_name of this USqlDatabase.
        :rtype: str
        """
        return self._database_name

    @database_name.setter
    def database_name(self, database_name):
        """Sets the database_name of this USqlDatabase.

        the name of the database.

        :param database_name: The database_name of this USqlDatabase.
        :type database_name: str
        """

        self._database_name = database_name

    @property
    def compute_account_name(self):
        """Gets the compute_account_name of this USqlDatabase.

        the name of the Data Lake Analytics account.

        :return: The compute_account_name of this USqlDatabase.
        :rtype: str
        """
        return self._compute_account_name

    @compute_account_name.setter
    def compute_account_name(self, compute_account_name):
        """Sets the compute_account_name of this USqlDatabase.

        the name of the Data Lake Analytics account.

        :param compute_account_name: The compute_account_name of this USqlDatabase.
        :type compute_account_name: str
        """

        self._compute_account_name = compute_account_name

    @property
    def version(self):
        """Gets the version of this USqlDatabase.

        the version of the catalog item.

        :return: The version of this USqlDatabase.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this USqlDatabase.

        the version of the catalog item.

        :param version: The version of this USqlDatabase.
        :type version: str
        """

        self._version = version
