/**
 * DataLakeAnalyticsCatalogManagementClient
 * Creates an Azure Data Lake Analytics catalog client.
 *
 * The version of the OpenAPI document: 2015-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUSqlAssemblyDependencyInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUSqlAssemblyDependencyInfo::OAIUSqlAssemblyDependencyInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUSqlAssemblyDependencyInfo::OAIUSqlAssemblyDependencyInfo() {
    this->initializeModel();
}

OAIUSqlAssemblyDependencyInfo::~OAIUSqlAssemblyDependencyInfo() {}

void OAIUSqlAssemblyDependencyInfo::initializeModel() {

    m_entity_id_isSet = false;
    m_entity_id_isValid = false;
}

void OAIUSqlAssemblyDependencyInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUSqlAssemblyDependencyInfo::fromJsonObject(QJsonObject json) {

    m_entity_id_isValid = ::OpenAPI::fromJsonValue(m_entity_id, json[QString("entityId")]);
    m_entity_id_isSet = !json[QString("entityId")].isNull() && m_entity_id_isValid;
}

QString OAIUSqlAssemblyDependencyInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUSqlAssemblyDependencyInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_id.isSet()) {
        obj.insert(QString("entityId"), ::OpenAPI::toJsonValue(m_entity_id));
    }
    return obj;
}

OAIEntityId OAIUSqlAssemblyDependencyInfo::getEntityId() const {
    return m_entity_id;
}
void OAIUSqlAssemblyDependencyInfo::setEntityId(const OAIEntityId &entity_id) {
    m_entity_id = entity_id;
    m_entity_id_isSet = true;
}

bool OAIUSqlAssemblyDependencyInfo::is_entity_id_Set() const{
    return m_entity_id_isSet;
}

bool OAIUSqlAssemblyDependencyInfo::is_entity_id_Valid() const{
    return m_entity_id_isValid;
}

bool OAIUSqlAssemblyDependencyInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_id.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUSqlAssemblyDependencyInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
