/**
 * DataLakeAnalyticsCatalogManagementClient
 * Creates an Azure Data Lake Analytics catalog client.
 *
 * The version of the OpenAPI document: 2015-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUSqlTableStatistics.h
 *
 * A Data Lake Analytics catalog U-SQL table statistics item.
 */

#ifndef OAIUSqlTableStatistics_H
#define OAIUSqlTableStatistics_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUSqlTableStatistics : public OAIObject {
public:
    OAIUSqlTableStatistics();
    OAIUSqlTableStatistics(QString json);
    ~OAIUSqlTableStatistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getColNames() const;
    void setColNames(const QList<QString> &col_names);
    bool is_col_names_Set() const;
    bool is_col_names_Valid() const;

    QDateTime getCreateTime() const;
    void setCreateTime(const QDateTime &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    QString getFilterDefinition() const;
    void setFilterDefinition(const QString &filter_definition);
    bool is_filter_definition_Set() const;
    bool is_filter_definition_Valid() const;

    bool isHasFilter() const;
    void setHasFilter(const bool &has_filter);
    bool is_has_filter_Set() const;
    bool is_has_filter_Valid() const;

    bool isIsAutoCreated() const;
    void setIsAutoCreated(const bool &is_auto_created);
    bool is_is_auto_created_Set() const;
    bool is_is_auto_created_Valid() const;

    bool isIsUserCreated() const;
    void setIsUserCreated(const bool &is_user_created);
    bool is_is_user_created_Set() const;
    bool is_is_user_created_Valid() const;

    QString getSchemaName() const;
    void setSchemaName(const QString &schema_name);
    bool is_schema_name_Set() const;
    bool is_schema_name_Valid() const;

    QString getStatDataPath() const;
    void setStatDataPath(const QString &stat_data_path);
    bool is_stat_data_path_Set() const;
    bool is_stat_data_path_Valid() const;

    QString getStatisticsName() const;
    void setStatisticsName(const QString &statistics_name);
    bool is_statistics_name_Set() const;
    bool is_statistics_name_Valid() const;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    QDateTime getUpdateTime() const;
    void setUpdateTime(const QDateTime &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    QString getUserStatName() const;
    void setUserStatName(const QString &user_stat_name);
    bool is_user_stat_name_Set() const;
    bool is_user_stat_name_Valid() const;

    QString getComputeAccountName() const;
    void setComputeAccountName(const QString &compute_account_name);
    bool is_compute_account_name_Set() const;
    bool is_compute_account_name_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_col_names;
    bool m_col_names_isSet;
    bool m_col_names_isValid;

    QDateTime m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    QString m_filter_definition;
    bool m_filter_definition_isSet;
    bool m_filter_definition_isValid;

    bool m_has_filter;
    bool m_has_filter_isSet;
    bool m_has_filter_isValid;

    bool m_is_auto_created;
    bool m_is_auto_created_isSet;
    bool m_is_auto_created_isValid;

    bool m_is_user_created;
    bool m_is_user_created_isSet;
    bool m_is_user_created_isValid;

    QString m_schema_name;
    bool m_schema_name_isSet;
    bool m_schema_name_isValid;

    QString m_stat_data_path;
    bool m_stat_data_path_isSet;
    bool m_stat_data_path_isValid;

    QString m_statistics_name;
    bool m_statistics_name_isSet;
    bool m_statistics_name_isValid;

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;

    QDateTime m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    QString m_user_stat_name;
    bool m_user_stat_name_isSet;
    bool m_user_stat_name_isValid;

    QString m_compute_account_name;
    bool m_compute_account_name_isSet;
    bool m_compute_account_name_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUSqlTableStatistics)

#endif // OAIUSqlTableStatistics_H
