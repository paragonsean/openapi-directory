/**
 * DataLakeAnalyticsCatalogManagementClient
 * Creates an Azure Data Lake Analytics catalog client.
 *
 * The version of the OpenAPI document: 2015-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUSqlTable.h
 *
 * A Data Lake Analytics catalog U-SQL table item.
 */

#ifndef OAIUSqlTable_H
#define OAIUSqlTable_H

#include <QJsonObject>

#include "OAIExternalTable.h"
#include "OAIUSqlDistributionInfo.h"
#include "OAIUSqlIndex.h"
#include "OAIUSqlTableColumn.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUSqlTableColumn;
class OAIUSqlDistributionInfo;
class OAIExternalTable;
class OAIUSqlIndex;

class OAIUSqlTable : public OAIObject {
public:
    OAIUSqlTable();
    OAIUSqlTable(QString json);
    ~OAIUSqlTable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIUSqlTableColumn> getColumnList() const;
    void setColumnList(const QList<OAIUSqlTableColumn> &column_list);
    bool is_column_list_Set() const;
    bool is_column_list_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    OAIUSqlDistributionInfo getDistributionInfo() const;
    void setDistributionInfo(const OAIUSqlDistributionInfo &distribution_info);
    bool is_distribution_info_Set() const;
    bool is_distribution_info_Valid() const;

    OAIExternalTable getExternalTable() const;
    void setExternalTable(const OAIExternalTable &external_table);
    bool is_external_table_Set() const;
    bool is_external_table_Valid() const;

    QList<OAIUSqlIndex> getIndexList() const;
    void setIndexList(const QList<OAIUSqlIndex> &index_list);
    bool is_index_list_Set() const;
    bool is_index_list_Valid() const;

    QList<QString> getPartitionKeyList() const;
    void setPartitionKeyList(const QList<QString> &partition_key_list);
    bool is_partition_key_list_Set() const;
    bool is_partition_key_list_Valid() const;

    QString getSchemaName() const;
    void setSchemaName(const QString &schema_name);
    bool is_schema_name_Set() const;
    bool is_schema_name_Valid() const;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    QString getComputeAccountName() const;
    void setComputeAccountName(const QString &compute_account_name);
    bool is_compute_account_name_Set() const;
    bool is_compute_account_name_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIUSqlTableColumn> m_column_list;
    bool m_column_list_isSet;
    bool m_column_list_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    OAIUSqlDistributionInfo m_distribution_info;
    bool m_distribution_info_isSet;
    bool m_distribution_info_isValid;

    OAIExternalTable m_external_table;
    bool m_external_table_isSet;
    bool m_external_table_isValid;

    QList<OAIUSqlIndex> m_index_list;
    bool m_index_list_isSet;
    bool m_index_list_isValid;

    QList<QString> m_partition_key_list;
    bool m_partition_key_list_isSet;
    bool m_partition_key_list_isValid;

    QString m_schema_name;
    bool m_schema_name_isSet;
    bool m_schema_name_isValid;

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;

    QString m_compute_account_name;
    bool m_compute_account_name_isSet;
    bool m_compute_account_name_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUSqlTable)

#endif // OAIUSqlTable_H
