openapi: 3.0.1
info:
  description: Creates an Azure Data Lake Analytics catalog client.
  title: DataLakeAnalyticsCatalogManagementClient
  version: 2015-10-01-preview
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/datalake-analytics/data-plane/Microsoft.DataLakeAnalytics/preview/2015-10-01-preview/catalog.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: datalake-analytics-catalog
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://azure.local/
paths:
  /catalog/usql/databases:
    get:
      description: Retrieves the list of databases from the Data Lake Analytics catalog.
      operationId: Catalog_ListDatabases
      parameters:
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlDatabaseList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlDatabaseList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlDatabaseList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlDatabase'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}:
    get:
      description: Retrieves the specified database from the Data Lake Analytics catalog.
      operationId: Catalog_GetDatabase
      parameters:
      - description: The name of the database.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlDatabase'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlDatabase'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlDatabase'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/assemblies:
    get:
      description: Retrieves the list of assemblies from the Data Lake Analytics catalog.
      operationId: Catalog_ListAssemblies
      parameters:
      - description: The name of the database containing the assembly.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlAssemblyList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlAssemblyList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlAssemblyList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlAssembly'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/assemblies/{assemblyName}:
    get:
      description: Retrieves the specified assembly from the Data Lake Analytics catalog.
      operationId: Catalog_GetAssembly
      parameters:
      - description: The name of the database containing the assembly.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the assembly.
        in: path
        name: assemblyName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlAssembly'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlAssembly'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlAssembly'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/credentials:
    get:
      description: Retrieves the list of credentials from the Data Lake Analytics
        catalog.
      operationId: Catalog_ListCredentials
      parameters:
      - description: The name of the database containing the schema.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlCredentialList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlCredentialList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlCredentialList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlCredential'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/credentials/{credentialName}:
    get:
      description: Retrieves the specified credential from the Data Lake Analytics
        catalog.
      operationId: Catalog_GetCredential
      parameters:
      - description: The name of the database containing the schema.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the credential.
        in: path
        name: credentialName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlCredential'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlCredential'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlCredential'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/externaldatasources:
    get:
      description: Retrieves the list of external data sources from the Data Lake
        Analytics catalog.
      operationId: Catalog_ListExternalDataSources
      parameters:
      - description: The name of the database containing the external data sources.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlExternalDataSourceList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlExternalDataSourceList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlExternalDataSourceList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlExternalDataSource'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/externaldatasources/{externalDataSourceName}:
    get:
      description: Retrieves the specified external data source from the Data Lake
        Analytics catalog.
      operationId: Catalog_GetExternalDataSource
      parameters:
      - description: The name of the database containing the external data source.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the external data source.
        in: path
        name: externalDataSourceName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlExternalDataSource'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlExternalDataSource'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlExternalDataSource'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas:
    get:
      description: Retrieves the list of schemas from the Data Lake Analytics catalog.
      operationId: Catalog_ListSchemas
      parameters:
      - description: The name of the database containing the schema.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlSchemaList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlSchemaList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlSchemaList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlSchema'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}:
    get:
      description: Retrieves the specified schema from the Data Lake Analytics catalog.
      operationId: Catalog_GetSchema
      parameters:
      - description: The name of the database containing the schema.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlSchema'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlSchema'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlSchema'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/procedures:
    get:
      description: Retrieves the list of procedures from the Data Lake Analytics catalog.
      operationId: Catalog_ListProcedures
      parameters:
      - description: The name of the database containing the procedures.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the procedures.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlProcedureList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlProcedureList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlProcedureList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlProcedure'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/procedures/{procedureName}:
    get:
      description: Retrieves the specified procedure from the Data Lake Analytics
        catalog.
      operationId: Catalog_GetProcedure
      parameters:
      - description: The name of the database containing the procedure.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the procedure.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The name of the procedure.
        in: path
        name: procedureName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlProcedure'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlProcedure'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlProcedure'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables:
    get:
      description: Retrieves the list of tables from the Data Lake Analytics catalog.
      operationId: Catalog_ListTables
      parameters:
      - description: The name of the database containing the tables.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the tables.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlTableList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlTableList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlTable'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}:
    get:
      description: Retrieves the specified table from the Data Lake Analytics catalog.
      operationId: Catalog_GetTable
      parameters:
      - description: The name of the database containing the table.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the table.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The name of the table.
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTable'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlTable'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlTable'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/partitions:
    get:
      description: Retrieves the list of table partitions from the Data Lake Analytics
        catalog.
      operationId: Catalog_ListTablePartitions
      parameters:
      - description: The name of the database containing the partitions.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the partitions.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The name of the table containing the partitions.
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTablePartitionList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlTablePartitionList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlTablePartitionList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlTablePartition'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/partitions/{partitionName}:
    get:
      description: Retrieves the specified table partition from the Data Lake Analytics
        catalog.
      operationId: Catalog_GetTablePartition
      parameters:
      - description: The name of the database containing the partition.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the partition.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The name of the table containing the partition.
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: The name of the table partition.
        in: path
        name: partitionName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTablePartition'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlTablePartition'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlTablePartition'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/statistics:
    get:
      description: Retrieves the list of table statistics from the Data Lake Analytics
        catalog.
      operationId: Catalog_ListTableStatistics
      parameters:
      - description: The name of the database containing the statistics.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the statistics.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The name of the table containing the statistics.
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableStatisticsList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlTableStatisticsList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlTableStatisticsList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlTableStatistics'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/statistics/{statisticsName}:
    get:
      description: Retrieves the specified table statistics from the Data Lake Analytics
        catalog.
      operationId: Catalog_GetTableStatistic
      parameters:
      - description: The name of the database containing the statistics.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the statistics.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The name of the table containing the statistics.
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: The name of the table statistics.
        in: path
        name: statisticsName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableStatistics'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlTableStatistics'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlTableStatistics'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/tabletypes:
    get:
      description: Retrieves the list of table types from the Data Lake Analytics
        catalog.
      operationId: Catalog_ListTableTypes
      parameters:
      - description: The name of the database containing the table types.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the table types.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableTypeList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlTableTypeList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlTableTypeList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlTableType'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/tabletypes/{tableTypeName}:
    get:
      description: Retrieves the specified table type from the Data Lake Analytics
        catalog.
      operationId: Catalog_GetTableType
      parameters:
      - description: The name of the database containing the table type.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the table type.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The name of the table type to retrieve.
        in: path
        name: tableTypeName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableType'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlTableType'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlTableType'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/tablevaluedfunctions:
    get:
      description: Retrieves the list of table valued functions from the Data Lake
        Analytics catalog.
      operationId: Catalog_ListTableValuedFunctions
      parameters:
      - description: The name of the database containing the table valued functions.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the table valued functions.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableValuedFunctionList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlTableValuedFunctionList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlTableValuedFunctionList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlTableValuedFunction'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/tablevaluedfunctions/{tableValuedFunctionName}:
    get:
      description: Retrieves the specified table valued function from the Data Lake
        Analytics catalog.
      operationId: Catalog_GetTableValuedFunction
      parameters:
      - description: The name of the database containing the table valued function.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the table valued function.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The name of the tableValuedFunction.
        in: path
        name: tableValuedFunctionName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableValuedFunction'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlTableValuedFunction'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlTableValuedFunction'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/types:
    get:
      description: Retrieves the list of types within the specified database and schema
        from the Data Lake Analytics catalog.
      operationId: Catalog_ListTypes
      parameters:
      - description: The name of the database containing the types.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the types.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTypeList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlTypeList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlTypeList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlType'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/views:
    get:
      description: Retrieves the list of views from the Data Lake Analytics catalog.
      operationId: Catalog_ListViews
      parameters:
      - description: The name of the database containing the views.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the views.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: OData filter. Optional.
        in: query
        name: $filter
        schema:
          type: string
      - description: The number of items to return. Optional.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: The number of items to skip over before returning elements. Optional.
        in: query
        name: $skip
        schema:
          format: int32
          type: integer
      - description: "OData expansion. Expand related resources in line with the retrieved\
          \ resources, e.g. Categories?$expand=Products would expand Product data\
          \ in line with each Category entry. Optional."
        in: query
        name: $expand
        schema:
          type: string
      - description: "OData Select statement. Limits the properties on each entry\
          \ to just those requested, e.g. Categories?$select=CategoryName,Description.\
          \ Optional."
        in: query
        name: $select
        schema:
          type: string
      - description: "OrderBy clause. One or more comma-separated expressions with\
          \ an optional \"asc\" (the default) or \"desc\" depending on the order you'd\
          \ like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
        in: query
        name: $orderby
        schema:
          type: string
      - description: "The Boolean value of true or false to request a count of the\
          \ matching resources included with the resources in the response, e.g. Categories?$count=true.\
          \ Optional."
        in: query
        name: $count
        schema:
          type: boolean
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlViewList'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlViewList'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlViewList'
          description: ""
      tags:
      - Catalog
      x-ms-odata: '#/definitions/USqlView'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/schemas/{schemaName}/views/{viewName}:
    get:
      description: Retrieves the specified view from the Data Lake Analytics catalog.
      operationId: Catalog_GetView
      parameters:
      - description: The name of the database containing the view.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the schema containing the view.
        in: path
        name: schemaName
        required: true
        schema:
          type: string
      - description: The name of the view.
        in: path
        name: viewName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlView'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlView'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlView'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
  /catalog/usql/databases/{databaseName}/secrets:
    delete:
      description: Deletes all secrets in the specified database
      operationId: Catalog_DeleteAllSecrets
      parameters:
      - description: The name of the database containing the secret.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
  /catalog/usql/databases/{databaseName}/secrets/{secretName}:
    delete:
      description: Deletes the specified secret in the specified database
      operationId: Catalog_DeleteSecret
      parameters:
      - description: The name of the database containing the secret.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the secret to delete
        in: path
        name: secretName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
    get:
      description: Gets the specified secret in the specified database
      operationId: Catalog_GetSecret
      parameters:
      - description: The name of the database containing the secret.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the secret to get
        in: path
        name: secretName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlSecret'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlSecret'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlSecret'
          description: ""
      tags:
      - Catalog
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
    patch:
      description: Modifies the specified secret for use with external data sources
        in the specified database
      operationId: Catalog_UpdateSecret
      parameters:
      - description: The name of the database containing the secret.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the secret.
        in: path
        name: secretName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters'
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters'
        description: The parameters required to modify the secret (name and password)
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlSecret'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlSecret'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlSecret'
          description: ""
      tags:
      - Catalog
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
    put:
      description: Creates the specified secret for use with external data sources
        in the specified database.
      operationId: Catalog_CreateSecret
      parameters:
      - description: The name of the database in which to create the secret.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: The name of the secret.
        in: path
        name: secretName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters'
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters'
        description: The parameters required to create the secret (name and password)
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlSecret'
            text/json:
              schema:
                $ref: '#/components/schemas/USqlSecret'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/USqlSecret'
          description: ""
      tags:
      - Catalog
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/octet-stream
      - text/json
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    adlaCatalogDnsSuffixInPath:
      description: Gets the DNS suffix used as the base for all Azure Data Lake Analytics
        Catalog service requests.
      in: path
      name: adlaCatalogDnsSuffix
      required: true
      schema:
        default: azuredatalakeanalytics.net
        type: string
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  schemas:
    CatalogItem:
      description: A Data Lake Analytics catalog item.
      properties:
        computeAccountName:
          description: the name of the Data Lake Analytics account.
          type: string
        version:
          description: the version of the catalog item.
          format: uuid
          type: string
      type: object
    CatalogItemList:
      description: A Data Lake Analytics catalog item list.
      properties:
        count:
          description: the count of items in the list.
          format: int32
          type: integer
        nextLink:
          description: the link to the next page of results.
          type: string
      type: object
    DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters:
      description: DataLakeAnalytics DataLakeAnalyticsAccount information.
      example:
        password: password
        uri: uri
      properties:
        password:
          description: the password for the secret to pass in
          type: string
        uri:
          description: the URI identifier for the secret in the format <hostname>:<port>
          type: string
      required:
      - password
      type: object
    DdlName:
      description: A Data Lake Analytics DDL name item.
      example:
        thirdPart: thirdPart
        server: server
        secondPart: secondPart
        firstPart: firstPart
      properties:
        firstPart:
          description: the name of the table associated with this database and schema.
          type: string
        secondPart:
          description: the name of the table associated with this database and schema.
          type: string
        server:
          description: the name of the table associated with this database and schema.
          type: string
        thirdPart:
          description: the name of the table associated with this database and schema.
          type: string
      type: object
    EntityId:
      description: A Data Lake Analytics catalog entity identifier object.
      example:
        name:
          thirdPart: thirdPart
          server: server
          secondPart: secondPart
          firstPart: firstPart
        version: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          $ref: '#/components/schemas/DdlName'
        version:
          description: the version of the external data source.
          format: uuid
          type: string
      type: object
    ExternalTable:
      description: A Data Lake Analytics catalog external table item.
      example:
        dataSource:
          name:
            thirdPart: thirdPart
            server: server
            secondPart: secondPart
            firstPart: firstPart
          version: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tableName: tableName
      properties:
        dataSource:
          $ref: '#/components/schemas/EntityId'
        tableName:
          description: the name of the table associated with this database and schema.
          type: string
      type: object
    TypeFieldInfo:
      description: A Data Lake Analytics catalog type field information item.
      example:
        name: name
        type: type
      properties:
        name:
          description: the name of the field associated with this type.
          type: string
        type:
          description: the type of the field.
          type: string
      type: object
    USqlAssembly:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL Assembly.
      example:
        assemblyName: assemblyName
        databaseName: databaseName
        files:
        - contentPath: contentPath
          originalPath: originalPath
          type: Assembly
        - contentPath: contentPath
          originalPath: originalPath
          type: Assembly
        isUserDefined: true
        clrName: clrName
        isVisible: true
        dependencies:
        - entityId:
            name:
              thirdPart: thirdPart
              server: server
              secondPart: secondPart
              firstPart: firstPart
            version: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - entityId:
            name:
              thirdPart: thirdPart
              server: server
              secondPart: secondPart
              firstPart: firstPart
            version: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        assemblyName:
          description: the name of the assembly.
          type: string
          x-ms-client-name: name
        clrName:
          description: the name of the CLR.
          type: string
        databaseName:
          description: the name of the database.
          type: string
        dependencies:
          description: the list of dependencies associated with the assembly
          items:
            $ref: '#/components/schemas/USqlAssemblyDependencyInfo'
          type: array
        files:
          description: the list of files associated with the assembly
          items:
            $ref: '#/components/schemas/USqlAssemblyFileInfo'
          type: array
        isUserDefined:
          description: the switch indicating if this assembly is user defined or not.
          type: boolean
        isVisible:
          description: the switch indicating if this assembly is visible or not.
          type: boolean
    USqlAssemblyClr:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL assembly CLR item.
      example:
        databaseName: databaseName
        assemblyClrName: assemblyClrName
        clrName: clrName
      properties:
        assemblyClrName:
          description: the name of the assembly.
          type: string
          x-ms-client-name: name
        clrName:
          description: the name of the CLR.
          type: string
        databaseName:
          description: the name of the database.
          type: string
    USqlAssemblyDependencyInfo:
      description: A Data Lake Analytics catalog U-SQL dependency information item.
      example:
        entityId:
          name:
            thirdPart: thirdPart
            server: server
            secondPart: secondPart
            firstPart: firstPart
          version: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        entityId:
          $ref: '#/components/schemas/EntityId'
      type: object
    USqlAssemblyFileInfo:
      description: A Data Lake Analytics catalog U-SQL assembly file information item.
      example:
        contentPath: contentPath
        originalPath: originalPath
        type: Assembly
      properties:
        contentPath:
          description: The content path to the assembly file.
          type: string
        originalPath:
          description: The original path to the assembly file.
          type: string
        type:
          description: the assembly file type.
          enum:
          - Assembly
          - Resource
          type: string
          x-ms-enum:
            modelAsString: false
            name: FileType
      type: object
    USqlAssemblyList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL assembly CLR item list.
      example:
        value:
        - databaseName: databaseName
          assemblyClrName: assemblyClrName
          clrName: clrName
        - databaseName: databaseName
          assemblyClrName: assemblyClrName
          clrName: clrName
      properties:
        value:
          description: the list of assemblies in the database
          items:
            $ref: '#/components/schemas/USqlAssemblyClr'
          readOnly: true
          type: array
    USqlCredential:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL credential item.
      example:
        databaseName: databaseName
        identity: identity
        credentialName: credentialName
        userName: userName
      properties:
        credentialName:
          description: the name of the credential.
          type: string
          x-ms-client-name: name
        databaseName:
          description: the name of the database the credential is in.
          type: string
        identity:
          description: the name of the secret associated with the credential.
          type: string
        userName:
          description: the user name associated with the credential.
          type: string
    USqlCredentialList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL credential item list.
      example:
        value:
        - databaseName: databaseName
          identity: identity
          credentialName: credentialName
          userName: userName
        - databaseName: databaseName
          identity: identity
          credentialName: credentialName
          userName: userName
      properties:
        value:
          description: the list of credentials in the database
          items:
            $ref: '#/components/schemas/USqlCredential'
          readOnly: true
          type: array
    USqlDatabase:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL database item.
      example:
        databaseName: databaseName
      properties:
        databaseName:
          description: the name of the database.
          type: string
          x-ms-client-name: name
    USqlDatabaseList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL database item list.
      example:
        value:
        - databaseName: databaseName
        - databaseName: databaseName
      properties:
        value:
          description: the list of databases
          items:
            $ref: '#/components/schemas/USqlDatabase'
          readOnly: true
          type: array
    USqlDirectedColumn:
      description: A Data Lake Analytics catalog U-SQL directed column item.
      example:
        name: name
        descending: true
      properties:
        descending:
          description: the switch indicating if the index is descending or not.
          type: boolean
        name:
          description: the name of the index in the table.
          type: string
      type: object
    USqlDistributionInfo:
      description: A Data Lake Analytics catalog U-SQL distribution information object.
      example:
        keys:
        - name: name
          descending: true
        - name: name
          descending: true
        count: 0
        dynamicCount: 6
        type: 1
      properties:
        count:
          description: the count of indices using this distribution.
          format: int32
          type: integer
        dynamicCount:
          description: the dynamic count of indices using this distribution.
          format: int32
          type: integer
        keys:
          description: the list of directed columns in the distribution
          items:
            $ref: '#/components/schemas/USqlDirectedColumn'
          type: array
        type:
          description: the type of this distribution.
          format: int32
          type: integer
      type: object
    USqlExternalDataSource:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL external datasource item.
      example:
        databaseName: databaseName
        provider: provider
        providerString: providerString
        externalDataSourceName: externalDataSourceName
        pushdownTypes:
        - pushdownTypes
        - pushdownTypes
      properties:
        databaseName:
          description: the name of the database.
          type: string
        externalDataSourceName:
          description: the name of the external data source.
          type: string
          x-ms-client-name: name
        provider:
          description: the name of the provider for the external data source.
          type: string
        providerString:
          description: the name of the provider string for the external data source.
          type: string
        pushdownTypes:
          description: the list of types to push down from the external data source.
          items:
            type: string
          type: array
    USqlExternalDataSourceList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL external datasource item list.
      example:
        value:
        - databaseName: databaseName
          provider: provider
          providerString: providerString
          externalDataSourceName: externalDataSourceName
          pushdownTypes:
          - pushdownTypes
          - pushdownTypes
        - databaseName: databaseName
          provider: provider
          providerString: providerString
          externalDataSourceName: externalDataSourceName
          pushdownTypes:
          - pushdownTypes
          - pushdownTypes
      properties:
        value:
          description: the list of external data sources in the database
          items:
            $ref: '#/components/schemas/USqlExternalDataSource'
          readOnly: true
          type: array
    USqlIndex:
      description: A Data Lake Analytics catalog U-SQL table index item.
      example:
        streamNames:
        - streamNames
        - streamNames
        columns:
        - columns
        - columns
        isUnique: true
        name: name
        partitionKeyList:
        - partitionKeyList
        - partitionKeyList
        indexId: 5
        distributionInfo:
          keys:
          - name: name
            descending: true
          - name: name
            descending: true
          count: 0
          dynamicCount: 6
          type: 1
        indexKeys:
        - name: name
          descending: true
        - name: name
          descending: true
        isColumnstore: true
        partitionFunction: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        columns:
          description: the list of columns in the index
          items:
            type: string
          type: array
        distributionInfo:
          $ref: '#/components/schemas/USqlDistributionInfo'
        indexId:
          description: the ID of this index within the table.
          format: int32
          type: integer
        indexKeys:
          description: the list of directed columns in the index
          items:
            $ref: '#/components/schemas/USqlDirectedColumn'
          type: array
        isColumnstore:
          description: the switch indicating if this index is a columnstore index.
          type: boolean
        isUnique:
          description: the switch indicating if this index is a unique index.
          type: boolean
        name:
          description: the name of the index in the table.
          type: string
        partitionFunction:
          description: partition function ID for the index.
          format: uuid
          type: string
        partitionKeyList:
          description: the list of partition keys in the index
          items:
            type: string
          type: array
        streamNames:
          description: the list of full paths to the streams that contain this index
            in the DataLake account.
          items:
            type: string
          type: array
      type: object
    USqlProcedure:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL procedure item.
      example:
        databaseName: databaseName
        definition: definition
        procName: procName
        schemaName: schemaName
      properties:
        databaseName:
          description: the name of the database.
          type: string
        definition:
          description: the defined query of the procedure.
          type: string
        procName:
          description: the name of the procedure.
          type: string
          x-ms-client-name: name
        schemaName:
          description: the name of the schema associated with this procedure and database.
          type: string
    USqlProcedureList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL procedure item list.
      example:
        value:
        - databaseName: databaseName
          definition: definition
          procName: procName
          schemaName: schemaName
        - databaseName: databaseName
          definition: definition
          procName: procName
          schemaName: schemaName
      properties:
        value:
          description: the list of procedure in the database and schema combination
          items:
            $ref: '#/components/schemas/USqlProcedure'
          readOnly: true
          type: array
    USqlSchema:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL schema item.
      example:
        databaseName: databaseName
        schemaName: schemaName
      properties:
        databaseName:
          description: the name of the database.
          type: string
        schemaName:
          description: the name of the schema.
          type: string
          x-ms-client-name: name
    USqlSchemaList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL schema item list.
      example:
        value:
        - databaseName: databaseName
          schemaName: schemaName
        - databaseName: databaseName
          schemaName: schemaName
      properties:
        value:
          description: the list of schemas in the database
          items:
            $ref: '#/components/schemas/USqlSchema'
          readOnly: true
          type: array
    USqlSecret:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL secret item.
      example:
        password: password
        secretName: secretName
        creationTime: 2000-01-23T04:56:07.000+00:00
        databaseName: databaseName
        uri: uri
      properties:
        creationTime:
          description: the creation time of the credential object. This is the only
            information returned about a secret from a GET.
          format: date-time
          type: string
        databaseName:
          description: the name of the database.
          type: string
        password:
          description: the password for the secret to pass in
          type: string
        secretName:
          description: the name of the secret.
          type: string
          x-ms-client-name: name
        uri:
          description: the URI identifier for the secret in the format <hostname>:<port>
          type: string
    USqlTable:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL table item.
      example:
        externalTable:
          dataSource:
            name:
              thirdPart: thirdPart
              server: server
              secondPart: secondPart
              firstPart: firstPart
            version: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tableName: tableName
        databaseName: databaseName
        partitionKeyList:
        - partitionKeyList
        - partitionKeyList
        columnList:
        - name: name
          type: type
        - name: name
          type: type
        distributionInfo:
          keys:
          - name: name
            descending: true
          - name: name
            descending: true
          count: 0
          dynamicCount: 6
          type: 1
        indexList:
        - streamNames:
          - streamNames
          - streamNames
          columns:
          - columns
          - columns
          isUnique: true
          name: name
          partitionKeyList:
          - partitionKeyList
          - partitionKeyList
          indexId: 5
          distributionInfo:
            keys:
            - name: name
              descending: true
            - name: name
              descending: true
            count: 0
            dynamicCount: 6
            type: 1
          indexKeys:
          - name: name
            descending: true
          - name: name
            descending: true
          isColumnstore: true
          partitionFunction: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - streamNames:
          - streamNames
          - streamNames
          columns:
          - columns
          - columns
          isUnique: true
          name: name
          partitionKeyList:
          - partitionKeyList
          - partitionKeyList
          indexId: 5
          distributionInfo:
            keys:
            - name: name
              descending: true
            - name: name
              descending: true
            count: 0
            dynamicCount: 6
            type: 1
          indexKeys:
          - name: name
            descending: true
          - name: name
            descending: true
          isColumnstore: true
          partitionFunction: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        schemaName: schemaName
        tableName: tableName
      properties:
        columnList:
          description: the list of columns in this table
          items:
            $ref: '#/components/schemas/USqlTableColumn'
          type: array
        databaseName:
          description: the name of the database.
          type: string
        distributionInfo:
          $ref: '#/components/schemas/USqlDistributionInfo'
        externalTable:
          $ref: '#/components/schemas/ExternalTable'
        indexList:
          description: the list of indices in this table
          items:
            $ref: '#/components/schemas/USqlIndex'
          type: array
        partitionKeyList:
          description: the list of partition keys in the table
          items:
            type: string
          type: array
        schemaName:
          description: the name of the schema associated with this table and database.
          type: string
        tableName:
          description: the name of the table.
          type: string
          x-ms-client-name: name
    USqlTableColumn:
      description: A Data Lake Analytics catalog U-SQL table column item.
      example:
        name: name
        type: type
      properties:
        name:
          description: the name of the column in the table.
          type: string
        type:
          description: the object type of the specified column (such as System.String).
          type: string
      type: object
    USqlTableList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL table item list.
      example:
        value:
        - externalTable:
            dataSource:
              name:
                thirdPart: thirdPart
                server: server
                secondPart: secondPart
                firstPart: firstPart
              version: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tableName: tableName
          databaseName: databaseName
          partitionKeyList:
          - partitionKeyList
          - partitionKeyList
          columnList:
          - name: name
            type: type
          - name: name
            type: type
          distributionInfo:
            keys:
            - name: name
              descending: true
            - name: name
              descending: true
            count: 0
            dynamicCount: 6
            type: 1
          indexList:
          - streamNames:
            - streamNames
            - streamNames
            columns:
            - columns
            - columns
            isUnique: true
            name: name
            partitionKeyList:
            - partitionKeyList
            - partitionKeyList
            indexId: 5
            distributionInfo:
              keys:
              - name: name
                descending: true
              - name: name
                descending: true
              count: 0
              dynamicCount: 6
              type: 1
            indexKeys:
            - name: name
              descending: true
            - name: name
              descending: true
            isColumnstore: true
            partitionFunction: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - streamNames:
            - streamNames
            - streamNames
            columns:
            - columns
            - columns
            isUnique: true
            name: name
            partitionKeyList:
            - partitionKeyList
            - partitionKeyList
            indexId: 5
            distributionInfo:
              keys:
              - name: name
                descending: true
              - name: name
                descending: true
              count: 0
              dynamicCount: 6
              type: 1
            indexKeys:
            - name: name
              descending: true
            - name: name
              descending: true
            isColumnstore: true
            partitionFunction: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          schemaName: schemaName
          tableName: tableName
        - externalTable:
            dataSource:
              name:
                thirdPart: thirdPart
                server: server
                secondPart: secondPart
                firstPart: firstPart
              version: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tableName: tableName
          databaseName: databaseName
          partitionKeyList:
          - partitionKeyList
          - partitionKeyList
          columnList:
          - name: name
            type: type
          - name: name
            type: type
          distributionInfo:
            keys:
            - name: name
              descending: true
            - name: name
              descending: true
            count: 0
            dynamicCount: 6
            type: 1
          indexList:
          - streamNames:
            - streamNames
            - streamNames
            columns:
            - columns
            - columns
            isUnique: true
            name: name
            partitionKeyList:
            - partitionKeyList
            - partitionKeyList
            indexId: 5
            distributionInfo:
              keys:
              - name: name
                descending: true
              - name: name
                descending: true
              count: 0
              dynamicCount: 6
              type: 1
            indexKeys:
            - name: name
              descending: true
            - name: name
              descending: true
            isColumnstore: true
            partitionFunction: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - streamNames:
            - streamNames
            - streamNames
            columns:
            - columns
            - columns
            isUnique: true
            name: name
            partitionKeyList:
            - partitionKeyList
            - partitionKeyList
            indexId: 5
            distributionInfo:
              keys:
              - name: name
                descending: true
              - name: name
                descending: true
              count: 0
              dynamicCount: 6
              type: 1
            indexKeys:
            - name: name
              descending: true
            - name: name
              descending: true
            isColumnstore: true
            partitionFunction: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          schemaName: schemaName
          tableName: tableName
      properties:
        value:
          description: the list of tables in the database and schema combination
          items:
            $ref: '#/components/schemas/USqlTable'
          readOnly: true
          type: array
    USqlTablePartition:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL table partition item.
      example:
        parentName:
          thirdPart: thirdPart
          server: server
          secondPart: secondPart
          firstPart: firstPart
        partitionName: partitionName
        databaseName: databaseName
        indexId: 0
        label:
        - label
        - label
        schemaName: schemaName
        createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        createDate:
          description: the creation time of the partition
          format: date-time
          type: string
        databaseName:
          description: the name of the database.
          type: string
        indexId:
          description: the index ID for this partition.
          format: int32
          type: integer
        label:
          description: the list of labels associated with this partition.
          items:
            type: string
          type: array
        parentName:
          $ref: '#/components/schemas/DdlName'
        partitionName:
          description: the name of the table partition.
          type: string
          x-ms-client-name: name
        schemaName:
          description: the name of the schema associated with this table partition
            and database.
          type: string
    USqlTablePartitionList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL table partition item list.
      example:
        value:
        - parentName:
            thirdPart: thirdPart
            server: server
            secondPart: secondPart
            firstPart: firstPart
          partitionName: partitionName
          databaseName: databaseName
          indexId: 0
          label:
          - label
          - label
          schemaName: schemaName
          createDate: 2000-01-23T04:56:07.000+00:00
        - parentName:
            thirdPart: thirdPart
            server: server
            secondPart: secondPart
            firstPart: firstPart
          partitionName: partitionName
          databaseName: databaseName
          indexId: 0
          label:
          - label
          - label
          schemaName: schemaName
          createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        value:
          description: "the list of table partitions in the database, schema and table\
            \ combination"
          items:
            $ref: '#/components/schemas/USqlTablePartition'
          readOnly: true
          type: array
    USqlTableStatistics:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL table statistics item.
      example:
        statisticsName: statisticsName
        colNames:
        - colNames
        - colNames
        databaseName: databaseName
        updateTime: 2000-01-23T04:56:07.000+00:00
        hasFilter: true
        userStatName: userStatName
        schemaName: schemaName
        tableName: tableName
        createTime: 2000-01-23T04:56:07.000+00:00
        isAutoCreated: true
        isUserCreated: true
        statDataPath: statDataPath
        filterDefinition: filterDefinition
      properties:
        colNames:
          description: the list of column names associated with these statistics.
          items:
            type: string
          type: array
        createTime:
          description: the creation time of the statistics.
          format: date-time
          type: string
        databaseName:
          description: the name of the database.
          type: string
        filterDefinition:
          description: the filter definition for the statistics.
          type: string
        hasFilter:
          description: the switch indicating if these statistics have a filter.
          type: boolean
        isAutoCreated:
          description: the switch indicating if these statistics are automatically
            created.
          type: boolean
        isUserCreated:
          description: the switch indicating if these statistics are user created.
          type: boolean
        schemaName:
          description: the name of the schema associated with this table and database.
          type: string
        statDataPath:
          description: the path to the statistics data.
          type: string
        statisticsName:
          description: the name of the table statistics.
          type: string
          x-ms-client-name: name
        tableName:
          description: the name of the table.
          type: string
        updateTime:
          description: the last time the statistics were updated.
          format: date-time
          type: string
        userStatName:
          description: the name of the user statistics.
          type: string
    USqlTableStatisticsList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL table statistics item list.
      example:
        value:
        - statisticsName: statisticsName
          colNames:
          - colNames
          - colNames
          databaseName: databaseName
          updateTime: 2000-01-23T04:56:07.000+00:00
          hasFilter: true
          userStatName: userStatName
          schemaName: schemaName
          tableName: tableName
          createTime: 2000-01-23T04:56:07.000+00:00
          isAutoCreated: true
          isUserCreated: true
          statDataPath: statDataPath
          filterDefinition: filterDefinition
        - statisticsName: statisticsName
          colNames:
          - colNames
          - colNames
          databaseName: databaseName
          updateTime: 2000-01-23T04:56:07.000+00:00
          hasFilter: true
          userStatName: userStatName
          schemaName: schemaName
          tableName: tableName
          createTime: 2000-01-23T04:56:07.000+00:00
          isAutoCreated: true
          isUserCreated: true
          statDataPath: statDataPath
          filterDefinition: filterDefinition
      properties:
        value:
          description: "the list of table statistics in the database, schema and table\
            \ combination"
          items:
            $ref: '#/components/schemas/USqlTableStatistics'
          readOnly: true
          type: array
    USqlTableType:
      allOf:
      - $ref: '#/components/schemas/USqlType'
      description: A Data Lake Analytics catalog U-SQL table type item.
      example:
        columns:
        - name: name
          type: type
        - name: name
          type: type
      properties:
        columns:
          description: the type field information associated with this table type.
          items:
            $ref: '#/components/schemas/TypeFieldInfo'
          readOnly: true
          type: array
    USqlTableTypeList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL table type item list.
      example:
        value:
        - columns:
          - name: name
            type: type
          - name: name
            type: type
        - columns:
          - name: name
            type: type
          - name: name
            type: type
      properties:
        value:
          description: the list of table types in the database and schema combination
          items:
            $ref: '#/components/schemas/USqlTableType'
          readOnly: true
          type: array
    USqlTableValuedFunction:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL table valued function item.
      example:
        databaseName: databaseName
        definition: definition
        schemaName: schemaName
        tvfName: tvfName
      properties:
        databaseName:
          description: the name of the database.
          type: string
        definition:
          description: the definition of the table valued function.
          type: string
        schemaName:
          description: the name of the schema associated with this database.
          type: string
        tvfName:
          description: the name of the table valued function.
          type: string
          x-ms-client-name: name
    USqlTableValuedFunctionList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL table valued function item
        list.
      example:
        value:
        - databaseName: databaseName
          definition: definition
          schemaName: schemaName
          tvfName: tvfName
        - databaseName: databaseName
          definition: definition
          schemaName: schemaName
          tvfName: tvfName
      properties:
        value:
          description: the list of table valued functions in the database and schema
            combination
          items:
            $ref: '#/components/schemas/USqlTableValuedFunction'
          readOnly: true
          type: array
    USqlType:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL type item.
      example:
        userTypeId: 5
        isComplexType: true
        databaseName: databaseName
        fullCSharpName: fullCSharpName
        isTableType: true
        typeFamily: typeFamily
        typeName: typeName
        principalId: 0
        schemaName: schemaName
        isAssemblyType: true
        schemaId: 6
        cSharpName: cSharpName
        isNullable: true
        isUserDefined: true
        systemTypeId: 1
      properties:
        cSharpName:
          description: the C# name for this type.
          type: string
        databaseName:
          description: the name of the database.
          type: string
        fullCSharpName:
          description: the fully qualified C# name for this type.
          type: string
        isAssemblyType:
          description: The switch indicating if this type is an assembly type.
          type: boolean
        isComplexType:
          description: The switch indicating if this type is a complex type.
          type: boolean
        isNullable:
          description: The switch indicating if this type is nullable.
          type: boolean
        isTableType:
          description: The switch indicating if this type is a table type.
          type: boolean
        isUserDefined:
          description: The switch indicating if this type is user defined.
          type: boolean
        principalId:
          description: the principal ID for this type.
          format: int32
          type: integer
        schemaId:
          description: the schema ID for this type.
          format: int32
          type: integer
        schemaName:
          description: the name of the schema associated with this table and database.
          type: string
        systemTypeId:
          description: the system type ID for this type.
          format: int32
          type: integer
        typeFamily:
          description: the type family for this type.
          type: string
        typeName:
          description: the name of type for this type.
          type: string
          x-ms-client-name: name
        userTypeId:
          description: the user type ID for this type.
          format: int32
          type: integer
    USqlTypeList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL type item list.
      example:
        value:
        - userTypeId: 5
          isComplexType: true
          databaseName: databaseName
          fullCSharpName: fullCSharpName
          isTableType: true
          typeFamily: typeFamily
          typeName: typeName
          principalId: 0
          schemaName: schemaName
          isAssemblyType: true
          schemaId: 6
          cSharpName: cSharpName
          isNullable: true
          isUserDefined: true
          systemTypeId: 1
        - userTypeId: 5
          isComplexType: true
          databaseName: databaseName
          fullCSharpName: fullCSharpName
          isTableType: true
          typeFamily: typeFamily
          typeName: typeName
          principalId: 0
          schemaName: schemaName
          isAssemblyType: true
          schemaId: 6
          cSharpName: cSharpName
          isNullable: true
          isUserDefined: true
          systemTypeId: 1
      properties:
        value:
          description: the list of types in the database and schema combination
          items:
            $ref: '#/components/schemas/USqlType'
          readOnly: true
          type: array
    USqlView:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL view item.
      example:
        databaseName: databaseName
        viewName: viewName
        definition: definition
        schemaName: schemaName
      properties:
        databaseName:
          description: the name of the database.
          type: string
        definition:
          description: the defined query of the view.
          type: string
        schemaName:
          description: the name of the schema associated with this view and database.
          type: string
        viewName:
          description: the name of the view.
          type: string
          x-ms-client-name: name
    USqlViewList:
      allOf:
      - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL view item list.
      example:
        value:
        - databaseName: databaseName
          viewName: viewName
          definition: definition
          schemaName: schemaName
        - databaseName: databaseName
          viewName: viewName
          definition: definition
          schemaName: schemaName
      properties:
        value:
          description: the list of view in the database and schema combination
          items:
            $ref: '#/components/schemas/USqlView'
          readOnly: true
          type: array
x-ms-parameterized-host:
  hostTemplate: "{accountName}.{adlaCatalogDnsSuffix}"
  parameters:
  - description: The Azure Data Lake Analytics account to execute catalog operations
      on.
    in: path
    name: accountName
    required: true
    type: string
    x-ms-skip-url-encoding: true
  - $ref: '#/parameters/adlaCatalogDnsSuffixInPath'
x-original-swagger-version: "2.0"

