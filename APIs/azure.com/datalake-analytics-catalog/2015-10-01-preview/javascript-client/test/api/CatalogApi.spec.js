/**
 * DataLakeAnalyticsCatalogManagementClient
 * Creates an Azure Data Lake Analytics catalog client.
 *
 * The version of the OpenAPI document: 2015-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataLakeAnalyticsCatalogManagementClient);
  }
}(this, function(expect, DataLakeAnalyticsCatalogManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DataLakeAnalyticsCatalogManagementClient.CatalogApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CatalogApi', function() {
    describe('catalogCreateSecret', function() {
      it('should call catalogCreateSecret successfully', function(done) {
        //uncomment below and update the code to test catalogCreateSecret
        //instance.catalogCreateSecret(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogDeleteAllSecrets', function() {
      it('should call catalogDeleteAllSecrets successfully', function(done) {
        //uncomment below and update the code to test catalogDeleteAllSecrets
        //instance.catalogDeleteAllSecrets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogDeleteSecret', function() {
      it('should call catalogDeleteSecret successfully', function(done) {
        //uncomment below and update the code to test catalogDeleteSecret
        //instance.catalogDeleteSecret(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetAssembly', function() {
      it('should call catalogGetAssembly successfully', function(done) {
        //uncomment below and update the code to test catalogGetAssembly
        //instance.catalogGetAssembly(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetCredential', function() {
      it('should call catalogGetCredential successfully', function(done) {
        //uncomment below and update the code to test catalogGetCredential
        //instance.catalogGetCredential(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetDatabase', function() {
      it('should call catalogGetDatabase successfully', function(done) {
        //uncomment below and update the code to test catalogGetDatabase
        //instance.catalogGetDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetExternalDataSource', function() {
      it('should call catalogGetExternalDataSource successfully', function(done) {
        //uncomment below and update the code to test catalogGetExternalDataSource
        //instance.catalogGetExternalDataSource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetProcedure', function() {
      it('should call catalogGetProcedure successfully', function(done) {
        //uncomment below and update the code to test catalogGetProcedure
        //instance.catalogGetProcedure(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetSchema', function() {
      it('should call catalogGetSchema successfully', function(done) {
        //uncomment below and update the code to test catalogGetSchema
        //instance.catalogGetSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetSecret', function() {
      it('should call catalogGetSecret successfully', function(done) {
        //uncomment below and update the code to test catalogGetSecret
        //instance.catalogGetSecret(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetTable', function() {
      it('should call catalogGetTable successfully', function(done) {
        //uncomment below and update the code to test catalogGetTable
        //instance.catalogGetTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetTablePartition', function() {
      it('should call catalogGetTablePartition successfully', function(done) {
        //uncomment below and update the code to test catalogGetTablePartition
        //instance.catalogGetTablePartition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetTableStatistic', function() {
      it('should call catalogGetTableStatistic successfully', function(done) {
        //uncomment below and update the code to test catalogGetTableStatistic
        //instance.catalogGetTableStatistic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetTableType', function() {
      it('should call catalogGetTableType successfully', function(done) {
        //uncomment below and update the code to test catalogGetTableType
        //instance.catalogGetTableType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetTableValuedFunction', function() {
      it('should call catalogGetTableValuedFunction successfully', function(done) {
        //uncomment below and update the code to test catalogGetTableValuedFunction
        //instance.catalogGetTableValuedFunction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogGetView', function() {
      it('should call catalogGetView successfully', function(done) {
        //uncomment below and update the code to test catalogGetView
        //instance.catalogGetView(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListAssemblies', function() {
      it('should call catalogListAssemblies successfully', function(done) {
        //uncomment below and update the code to test catalogListAssemblies
        //instance.catalogListAssemblies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListCredentials', function() {
      it('should call catalogListCredentials successfully', function(done) {
        //uncomment below and update the code to test catalogListCredentials
        //instance.catalogListCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListDatabases', function() {
      it('should call catalogListDatabases successfully', function(done) {
        //uncomment below and update the code to test catalogListDatabases
        //instance.catalogListDatabases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListExternalDataSources', function() {
      it('should call catalogListExternalDataSources successfully', function(done) {
        //uncomment below and update the code to test catalogListExternalDataSources
        //instance.catalogListExternalDataSources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListProcedures', function() {
      it('should call catalogListProcedures successfully', function(done) {
        //uncomment below and update the code to test catalogListProcedures
        //instance.catalogListProcedures(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListSchemas', function() {
      it('should call catalogListSchemas successfully', function(done) {
        //uncomment below and update the code to test catalogListSchemas
        //instance.catalogListSchemas(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListTablePartitions', function() {
      it('should call catalogListTablePartitions successfully', function(done) {
        //uncomment below and update the code to test catalogListTablePartitions
        //instance.catalogListTablePartitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListTableStatistics', function() {
      it('should call catalogListTableStatistics successfully', function(done) {
        //uncomment below and update the code to test catalogListTableStatistics
        //instance.catalogListTableStatistics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListTableTypes', function() {
      it('should call catalogListTableTypes successfully', function(done) {
        //uncomment below and update the code to test catalogListTableTypes
        //instance.catalogListTableTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListTableValuedFunctions', function() {
      it('should call catalogListTableValuedFunctions successfully', function(done) {
        //uncomment below and update the code to test catalogListTableValuedFunctions
        //instance.catalogListTableValuedFunctions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListTables', function() {
      it('should call catalogListTables successfully', function(done) {
        //uncomment below and update the code to test catalogListTables
        //instance.catalogListTables(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListTypes', function() {
      it('should call catalogListTypes successfully', function(done) {
        //uncomment below and update the code to test catalogListTypes
        //instance.catalogListTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogListViews', function() {
      it('should call catalogListViews successfully', function(done) {
        //uncomment below and update the code to test catalogListViews
        //instance.catalogListViews(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogUpdateSecret', function() {
      it('should call catalogUpdateSecret successfully', function(done) {
        //uncomment below and update the code to test catalogUpdateSecret
        //instance.catalogUpdateSecret(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
