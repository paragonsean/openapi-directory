/**
 * DataLakeAnalyticsCatalogManagementClient
 * Creates an Azure Data Lake Analytics catalog client.
 *
 * The version of the OpenAPI document: 2016-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUSqlExternalDataSource.h
 *
 * A Data Lake Analytics catalog U-SQL external datasource item.
 */

#ifndef OAIUSqlExternalDataSource_H
#define OAIUSqlExternalDataSource_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUSqlExternalDataSource : public OAIObject {
public:
    OAIUSqlExternalDataSource();
    OAIUSqlExternalDataSource(QString json);
    ~OAIUSqlExternalDataSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    QString getExternalDataSourceName() const;
    void setExternalDataSourceName(const QString &external_data_source_name);
    bool is_external_data_source_name_Set() const;
    bool is_external_data_source_name_Valid() const;

    QString getProvider() const;
    void setProvider(const QString &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QString getProviderString() const;
    void setProviderString(const QString &provider_string);
    bool is_provider_string_Set() const;
    bool is_provider_string_Valid() const;

    QList<QString> getPushdownTypes() const;
    void setPushdownTypes(const QList<QString> &pushdown_types);
    bool is_pushdown_types_Set() const;
    bool is_pushdown_types_Valid() const;

    QString getComputeAccountName() const;
    void setComputeAccountName(const QString &compute_account_name);
    bool is_compute_account_name_Set() const;
    bool is_compute_account_name_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    QString m_external_data_source_name;
    bool m_external_data_source_name_isSet;
    bool m_external_data_source_name_isValid;

    QString m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QString m_provider_string;
    bool m_provider_string_isSet;
    bool m_provider_string_isValid;

    QList<QString> m_pushdown_types;
    bool m_pushdown_types_isSet;
    bool m_pushdown_types_isValid;

    QString m_compute_account_name;
    bool m_compute_account_name_isSet;
    bool m_compute_account_name_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUSqlExternalDataSource)

#endif // OAIUSqlExternalDataSource_H
