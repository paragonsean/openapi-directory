/**
 * DataLakeAnalyticsCatalogManagementClient
 * Creates an Azure Data Lake Analytics catalog client.
 *
 * The version of the OpenAPI document: 2016-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUSqlAssembly.h
 *
 * A Data Lake Analytics catalog U-SQL Assembly.
 */

#ifndef OAIUSqlAssembly_H
#define OAIUSqlAssembly_H

#include <QJsonObject>

#include "OAIUSqlAssemblyDependencyInfo.h"
#include "OAIUSqlAssemblyFileInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUSqlAssemblyDependencyInfo;
class OAIUSqlAssemblyFileInfo;

class OAIUSqlAssembly : public OAIObject {
public:
    OAIUSqlAssembly();
    OAIUSqlAssembly(QString json);
    ~OAIUSqlAssembly() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssemblyName() const;
    void setAssemblyName(const QString &assembly_name);
    bool is_assembly_name_Set() const;
    bool is_assembly_name_Valid() const;

    QString getClrName() const;
    void setClrName(const QString &clr_name);
    bool is_clr_name_Set() const;
    bool is_clr_name_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    QList<OAIUSqlAssemblyDependencyInfo> getDependencies() const;
    void setDependencies(const QList<OAIUSqlAssemblyDependencyInfo> &dependencies);
    bool is_dependencies_Set() const;
    bool is_dependencies_Valid() const;

    QList<OAIUSqlAssemblyFileInfo> getFiles() const;
    void setFiles(const QList<OAIUSqlAssemblyFileInfo> &files);
    bool is_files_Set() const;
    bool is_files_Valid() const;

    bool isIsUserDefined() const;
    void setIsUserDefined(const bool &is_user_defined);
    bool is_is_user_defined_Set() const;
    bool is_is_user_defined_Valid() const;

    bool isIsVisible() const;
    void setIsVisible(const bool &is_visible);
    bool is_is_visible_Set() const;
    bool is_is_visible_Valid() const;

    QString getComputeAccountName() const;
    void setComputeAccountName(const QString &compute_account_name);
    bool is_compute_account_name_Set() const;
    bool is_compute_account_name_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_assembly_name;
    bool m_assembly_name_isSet;
    bool m_assembly_name_isValid;

    QString m_clr_name;
    bool m_clr_name_isSet;
    bool m_clr_name_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    QList<OAIUSqlAssemblyDependencyInfo> m_dependencies;
    bool m_dependencies_isSet;
    bool m_dependencies_isValid;

    QList<OAIUSqlAssemblyFileInfo> m_files;
    bool m_files_isSet;
    bool m_files_isValid;

    bool m_is_user_defined;
    bool m_is_user_defined_isSet;
    bool m_is_user_defined_isValid;

    bool m_is_visible;
    bool m_is_visible_isSet;
    bool m_is_visible_isValid;

    QString m_compute_account_name;
    bool m_compute_account_name_isSet;
    bool m_compute_account_name_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUSqlAssembly)

#endif // OAIUSqlAssembly_H
