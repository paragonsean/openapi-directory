/*
 * ManagementLockClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ManagementLockListResult;
import org.openapitools.client.model.ManagementLockObject;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementLocksApi
 */
@Disabled
public class ManagementLocksApiTest {

    private final ManagementLocksApi api = new ManagementLocksApi();

    /**
     * Create or update a management lock at the resource group level.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementLocksCreateOrUpdateAtResourceGroupLevelTest() throws ApiException {
        String resourceGroupName = null;
        String lockName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ManagementLockObject parameters = null;
        ManagementLockObject response = api.managementLocksCreateOrUpdateAtResourceGroupLevel(resourceGroupName, lockName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Create or update a management lock at the resource level or any level below resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementLocksCreateOrUpdateAtResourceLevelTest() throws ApiException {
        String resourceGroupName = null;
        String resourceProviderNamespace = null;
        String parentResourcePath = null;
        String resourceType = null;
        String resourceName = null;
        String lockName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ManagementLockObject parameters = null;
        ManagementLockObject response = api.managementLocksCreateOrUpdateAtResourceLevel(resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, lockName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Create or update a management lock at the subscription level.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementLocksCreateOrUpdateAtSubscriptionLevelTest() throws ApiException {
        String lockName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ManagementLockObject parameters = null;
        ManagementLockObject response = api.managementLocksCreateOrUpdateAtSubscriptionLevel(lockName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the management lock of a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementLocksDeleteAtResourceGroupLevelTest() throws ApiException {
        String resourceGroupName = null;
        String lockName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.managementLocksDeleteAtResourceGroupLevel(resourceGroupName, lockName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Deletes the management lock of a resource or any level below resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementLocksDeleteAtResourceLevelTest() throws ApiException {
        String resourceGroupName = null;
        String resourceProviderNamespace = null;
        String parentResourcePath = null;
        String resourceType = null;
        String resourceName = null;
        String lockName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.managementLocksDeleteAtResourceLevel(resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, lockName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Deletes the management lock of a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementLocksDeleteAtSubscriptionLevelTest() throws ApiException {
        String lockName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.managementLocksDeleteAtSubscriptionLevel(lockName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the management lock of a scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementLocksGetTest() throws ApiException {
        String lockName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ManagementLockObject response = api.managementLocksGet(lockName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a management lock at the resource group level.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementLocksGetAtResourceGroupLevelTest() throws ApiException {
        String resourceGroupName = null;
        String lockName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ManagementLockObject response = api.managementLocksGetAtResourceGroupLevel(resourceGroupName, lockName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the management locks of a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementLocksListAtResourceGroupLevelTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        ManagementLockListResult response = api.managementLocksListAtResourceGroupLevel(resourceGroupName, apiVersion, subscriptionId, $filter);
        // TODO: test validations
    }

    /**
     * Gets all the management locks of a resource or any level below resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementLocksListAtResourceLevelTest() throws ApiException {
        String resourceGroupName = null;
        String resourceProviderNamespace = null;
        String parentResourcePath = null;
        String resourceType = null;
        String resourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        ManagementLockListResult response = api.managementLocksListAtResourceLevel(resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, subscriptionId, $filter);
        // TODO: test validations
    }

    /**
     * Gets all the management locks of a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managementLocksListAtSubscriptionLevelTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        ManagementLockListResult response = api.managementLocksListAtSubscriptionLevel(apiVersion, subscriptionId, $filter);
        // TODO: test validations
    }

}
