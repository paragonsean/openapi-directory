/**
 * ManagementLockClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ManagementLockProperties model module.
 * @module model/ManagementLockProperties
 * @version 2015-01-01
 */
class ManagementLockProperties {
    /**
     * Constructs a new <code>ManagementLockProperties</code>.
     * The management lock properties.
     * @alias module:model/ManagementLockProperties
     */
    constructor() { 
        
        ManagementLockProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagementLockProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagementLockProperties} obj Optional instance to populate.
     * @return {module:model/ManagementLockProperties} The populated <code>ManagementLockProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagementLockProperties();

            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagementLockProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagementLockProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['level'] && !(typeof data['level'] === 'string' || data['level'] instanceof String)) {
            throw new Error("Expected the field `level` to be a primitive type in the JSON string but got " + data['level']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }

        return true;
    }


}



/**
 * The lock level of the management lock.
 * @member {module:model/ManagementLockProperties.LevelEnum} level
 */
ManagementLockProperties.prototype['level'] = undefined;

/**
 * The notes of the management lock.
 * @member {String} notes
 */
ManagementLockProperties.prototype['notes'] = undefined;





/**
 * Allowed values for the <code>level</code> property.
 * @enum {String}
 * @readonly
 */
ManagementLockProperties['LevelEnum'] = {

    /**
     * value: "NotSpecified"
     * @const
     */
    "NotSpecified": "NotSpecified",

    /**
     * value: "CanNotDelete"
     * @const
     */
    "CanNotDelete": "CanNotDelete",

    /**
     * value: "ReadOnly"
     * @const
     */
    "ReadOnly": "ReadOnly"
};



export default ManagementLockProperties;

