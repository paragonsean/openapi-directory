/**
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2017-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationDefinition from '../model/ApplicationDefinition';
import ApplicationDefinitionListResult from '../model/ApplicationDefinitionListResult';
import ErrorResponse from '../model/ErrorResponse';

/**
* ApplicationDefinitions service.
* @module api/ApplicationDefinitionsApi
* @version 2017-09-01
*/
export default class ApplicationDefinitionsApi {

    /**
    * Constructs a new ApplicationDefinitionsApi. 
    * @alias module:api/ApplicationDefinitionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the applicationDefinitionsCreateOrUpdate operation.
     * @callback module:api/ApplicationDefinitionsApi~applicationDefinitionsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new managed application definition.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} applicationDefinitionName The name of the managed application definition.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {module:model/ApplicationDefinition} parameters Parameters supplied to the create or update an managed application definition.
     * @param {module:api/ApplicationDefinitionsApi~applicationDefinitionsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationDefinition}
     */
    applicationDefinitionsCreateOrUpdate(resourceGroupName, applicationDefinitionName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationDefinitionsCreateOrUpdate");
      }
      // verify the required parameter 'applicationDefinitionName' is set
      if (applicationDefinitionName === undefined || applicationDefinitionName === null) {
        throw new Error("Missing the required parameter 'applicationDefinitionName' when calling applicationDefinitionsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationDefinitionsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationDefinitionsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling applicationDefinitionsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationDefinitionName': applicationDefinitionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplicationDefinition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationDefinitionsCreateOrUpdateById operation.
     * @callback module:api/ApplicationDefinitionsApi~applicationDefinitionsCreateOrUpdateByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new managed application definition.
     * @param {String} applicationDefinitionId The fully qualified ID of the managed application definition, including the managed application name and the managed application definition resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/applicationDefinitions/{applicationDefinition-name}
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:model/ApplicationDefinition} parameters Parameters supplied to the create or update a managed application definition.
     * @param {module:api/ApplicationDefinitionsApi~applicationDefinitionsCreateOrUpdateByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationDefinition}
     */
    applicationDefinitionsCreateOrUpdateById(applicationDefinitionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'applicationDefinitionId' is set
      if (applicationDefinitionId === undefined || applicationDefinitionId === null) {
        throw new Error("Missing the required parameter 'applicationDefinitionId' when calling applicationDefinitionsCreateOrUpdateById");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationDefinitionsCreateOrUpdateById");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling applicationDefinitionsCreateOrUpdateById");
      }

      let pathParams = {
        'applicationDefinitionId': applicationDefinitionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplicationDefinition;
      return this.apiClient.callApi(
        '/{applicationDefinitionId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationDefinitionsDelete operation.
     * @callback module:api/ApplicationDefinitionsApi~applicationDefinitionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the managed application definition.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} applicationDefinitionName The name of the managed application definition to delete.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {module:api/ApplicationDefinitionsApi~applicationDefinitionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    applicationDefinitionsDelete(resourceGroupName, applicationDefinitionName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationDefinitionsDelete");
      }
      // verify the required parameter 'applicationDefinitionName' is set
      if (applicationDefinitionName === undefined || applicationDefinitionName === null) {
        throw new Error("Missing the required parameter 'applicationDefinitionName' when calling applicationDefinitionsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationDefinitionsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationDefinitionsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationDefinitionName': applicationDefinitionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationDefinitionsDeleteById operation.
     * @callback module:api/ApplicationDefinitionsApi~applicationDefinitionsDeleteByIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the managed application definition.
     * @param {String} applicationDefinitionId The fully qualified ID of the managed application definition, including the managed application name and the managed application definition resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/applicationDefinitions/{applicationDefinition-name}
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:api/ApplicationDefinitionsApi~applicationDefinitionsDeleteByIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    applicationDefinitionsDeleteById(applicationDefinitionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'applicationDefinitionId' is set
      if (applicationDefinitionId === undefined || applicationDefinitionId === null) {
        throw new Error("Missing the required parameter 'applicationDefinitionId' when calling applicationDefinitionsDeleteById");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationDefinitionsDeleteById");
      }

      let pathParams = {
        'applicationDefinitionId': applicationDefinitionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/{applicationDefinitionId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationDefinitionsGet operation.
     * @callback module:api/ApplicationDefinitionsApi~applicationDefinitionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the managed application definition.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} applicationDefinitionName The name of the managed application definition.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {module:api/ApplicationDefinitionsApi~applicationDefinitionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationDefinition}
     */
    applicationDefinitionsGet(resourceGroupName, applicationDefinitionName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationDefinitionsGet");
      }
      // verify the required parameter 'applicationDefinitionName' is set
      if (applicationDefinitionName === undefined || applicationDefinitionName === null) {
        throw new Error("Missing the required parameter 'applicationDefinitionName' when calling applicationDefinitionsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationDefinitionsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationDefinitionsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationDefinitionName': applicationDefinitionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationDefinition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationDefinitionsGetById operation.
     * @callback module:api/ApplicationDefinitionsApi~applicationDefinitionsGetByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the managed application definition.
     * @param {String} applicationDefinitionId The fully qualified ID of the managed application definition, including the managed application name and the managed application definition resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/applicationDefinitions/{applicationDefinition-name}
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:api/ApplicationDefinitionsApi~applicationDefinitionsGetByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationDefinition}
     */
    applicationDefinitionsGetById(applicationDefinitionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'applicationDefinitionId' is set
      if (applicationDefinitionId === undefined || applicationDefinitionId === null) {
        throw new Error("Missing the required parameter 'applicationDefinitionId' when calling applicationDefinitionsGetById");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationDefinitionsGetById");
      }

      let pathParams = {
        'applicationDefinitionId': applicationDefinitionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationDefinition;
      return this.apiClient.callApi(
        '/{applicationDefinitionId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationDefinitionsListByResourceGroup operation.
     * @callback module:api/ApplicationDefinitionsApi~applicationDefinitionsListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationDefinitionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the managed application definitions in a resource group.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {module:api/ApplicationDefinitionsApi~applicationDefinitionsListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationDefinitionListResult}
     */
    applicationDefinitionsListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationDefinitionsListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationDefinitionsListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationDefinitionsListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationDefinitionListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
