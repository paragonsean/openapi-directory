/**
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2017-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationProperties::OAIApplicationProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationProperties::OAIApplicationProperties() {
    this->initializeModel();
}

OAIApplicationProperties::~OAIApplicationProperties() {}

void OAIApplicationProperties::initializeModel() {

    m_application_definition_id_isSet = false;
    m_application_definition_id_isValid = false;

    m_managed_resource_group_id_isSet = false;
    m_managed_resource_group_id_isValid = false;

    m_outputs_isSet = false;
    m_outputs_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_ui_definition_uri_isSet = false;
    m_ui_definition_uri_isValid = false;
}

void OAIApplicationProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationProperties::fromJsonObject(QJsonObject json) {

    m_application_definition_id_isValid = ::OpenAPI::fromJsonValue(m_application_definition_id, json[QString("applicationDefinitionId")]);
    m_application_definition_id_isSet = !json[QString("applicationDefinitionId")].isNull() && m_application_definition_id_isValid;

    m_managed_resource_group_id_isValid = ::OpenAPI::fromJsonValue(m_managed_resource_group_id, json[QString("managedResourceGroupId")]);
    m_managed_resource_group_id_isSet = !json[QString("managedResourceGroupId")].isNull() && m_managed_resource_group_id_isValid;

    m_outputs_isValid = ::OpenAPI::fromJsonValue(m_outputs, json[QString("outputs")]);
    m_outputs_isSet = !json[QString("outputs")].isNull() && m_outputs_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_ui_definition_uri_isValid = ::OpenAPI::fromJsonValue(m_ui_definition_uri, json[QString("uiDefinitionUri")]);
    m_ui_definition_uri_isSet = !json[QString("uiDefinitionUri")].isNull() && m_ui_definition_uri_isValid;
}

QString OAIApplicationProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_application_definition_id_isSet) {
        obj.insert(QString("applicationDefinitionId"), ::OpenAPI::toJsonValue(m_application_definition_id));
    }
    if (m_managed_resource_group_id_isSet) {
        obj.insert(QString("managedResourceGroupId"), ::OpenAPI::toJsonValue(m_managed_resource_group_id));
    }
    if (m_outputs_isSet) {
        obj.insert(QString("outputs"), ::OpenAPI::toJsonValue(m_outputs));
    }
    if (m_parameters_isSet) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_provisioning_state.isSet()) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_ui_definition_uri_isSet) {
        obj.insert(QString("uiDefinitionUri"), ::OpenAPI::toJsonValue(m_ui_definition_uri));
    }
    return obj;
}

QString OAIApplicationProperties::getApplicationDefinitionId() const {
    return m_application_definition_id;
}
void OAIApplicationProperties::setApplicationDefinitionId(const QString &application_definition_id) {
    m_application_definition_id = application_definition_id;
    m_application_definition_id_isSet = true;
}

bool OAIApplicationProperties::is_application_definition_id_Set() const{
    return m_application_definition_id_isSet;
}

bool OAIApplicationProperties::is_application_definition_id_Valid() const{
    return m_application_definition_id_isValid;
}

QString OAIApplicationProperties::getManagedResourceGroupId() const {
    return m_managed_resource_group_id;
}
void OAIApplicationProperties::setManagedResourceGroupId(const QString &managed_resource_group_id) {
    m_managed_resource_group_id = managed_resource_group_id;
    m_managed_resource_group_id_isSet = true;
}

bool OAIApplicationProperties::is_managed_resource_group_id_Set() const{
    return m_managed_resource_group_id_isSet;
}

bool OAIApplicationProperties::is_managed_resource_group_id_Valid() const{
    return m_managed_resource_group_id_isValid;
}

OAIObject OAIApplicationProperties::getOutputs() const {
    return m_outputs;
}
void OAIApplicationProperties::setOutputs(const OAIObject &outputs) {
    m_outputs = outputs;
    m_outputs_isSet = true;
}

bool OAIApplicationProperties::is_outputs_Set() const{
    return m_outputs_isSet;
}

bool OAIApplicationProperties::is_outputs_Valid() const{
    return m_outputs_isValid;
}

OAIObject OAIApplicationProperties::getParameters() const {
    return m_parameters;
}
void OAIApplicationProperties::setParameters(const OAIObject &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIApplicationProperties::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIApplicationProperties::is_parameters_Valid() const{
    return m_parameters_isValid;
}

OAIProvisioningState OAIApplicationProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIApplicationProperties::setProvisioningState(const OAIProvisioningState &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIApplicationProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIApplicationProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAIApplicationProperties::getUiDefinitionUri() const {
    return m_ui_definition_uri;
}
void OAIApplicationProperties::setUiDefinitionUri(const QString &ui_definition_uri) {
    m_ui_definition_uri = ui_definition_uri;
    m_ui_definition_uri_isSet = true;
}

bool OAIApplicationProperties::is_ui_definition_uri_Set() const{
    return m_ui_definition_uri_isSet;
}

bool OAIApplicationProperties::is_ui_definition_uri_Valid() const{
    return m_ui_definition_uri_isValid;
}

bool OAIApplicationProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_definition_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_managed_resource_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outputs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ui_definition_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_managed_resource_group_id_isValid && true;
}

} // namespace OpenAPI
