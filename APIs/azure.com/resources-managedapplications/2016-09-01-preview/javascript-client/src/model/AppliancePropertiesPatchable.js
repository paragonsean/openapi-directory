/**
 * ManagedApplicationClient
 * ARM managed applications (appliances)
 *
 * The version of the OpenAPI document: 2016-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProvisioningState from './ProvisioningState';

/**
 * The AppliancePropertiesPatchable model module.
 * @module model/AppliancePropertiesPatchable
 * @version 2016-09-01-preview
 */
class AppliancePropertiesPatchable {
    /**
     * Constructs a new <code>AppliancePropertiesPatchable</code>.
     * The appliance properties.
     * @alias module:model/AppliancePropertiesPatchable
     */
    constructor() { 
        
        AppliancePropertiesPatchable.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppliancePropertiesPatchable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppliancePropertiesPatchable} obj Optional instance to populate.
     * @return {module:model/AppliancePropertiesPatchable} The populated <code>AppliancePropertiesPatchable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppliancePropertiesPatchable();

            if (data.hasOwnProperty('applianceDefinitionId')) {
                obj['applianceDefinitionId'] = ApiClient.convertToType(data['applianceDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('managedResourceGroupId')) {
                obj['managedResourceGroupId'] = ApiClient.convertToType(data['managedResourceGroupId'], 'String');
            }
            if (data.hasOwnProperty('outputs')) {
                obj['outputs'] = ApiClient.convertToType(data['outputs'], Object);
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], Object);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ProvisioningState.constructFromObject(data['provisioningState']);
            }
            if (data.hasOwnProperty('uiDefinitionUri')) {
                obj['uiDefinitionUri'] = ApiClient.convertToType(data['uiDefinitionUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppliancePropertiesPatchable</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppliancePropertiesPatchable</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['applianceDefinitionId'] && !(typeof data['applianceDefinitionId'] === 'string' || data['applianceDefinitionId'] instanceof String)) {
            throw new Error("Expected the field `applianceDefinitionId` to be a primitive type in the JSON string but got " + data['applianceDefinitionId']);
        }
        // ensure the json data is a string
        if (data['managedResourceGroupId'] && !(typeof data['managedResourceGroupId'] === 'string' || data['managedResourceGroupId'] instanceof String)) {
            throw new Error("Expected the field `managedResourceGroupId` to be a primitive type in the JSON string but got " + data['managedResourceGroupId']);
        }
        // ensure the json data is a string
        if (data['uiDefinitionUri'] && !(typeof data['uiDefinitionUri'] === 'string' || data['uiDefinitionUri'] instanceof String)) {
            throw new Error("Expected the field `uiDefinitionUri` to be a primitive type in the JSON string but got " + data['uiDefinitionUri']);
        }

        return true;
    }


}



/**
 * The fully qualified path of appliance definition Id.
 * @member {String} applianceDefinitionId
 */
AppliancePropertiesPatchable.prototype['applianceDefinitionId'] = undefined;

/**
 * The managed resource group Id.
 * @member {String} managedResourceGroupId
 */
AppliancePropertiesPatchable.prototype['managedResourceGroupId'] = undefined;

/**
 * Name and value pairs that define the appliance outputs.
 * @member {Object} outputs
 */
AppliancePropertiesPatchable.prototype['outputs'] = undefined;

/**
 * Name and value pairs that define the appliance parameters. It can be a JObject or a well formed JSON string.
 * @member {Object} parameters
 */
AppliancePropertiesPatchable.prototype['parameters'] = undefined;

/**
 * @member {module:model/ProvisioningState} provisioningState
 */
AppliancePropertiesPatchable.prototype['provisioningState'] = undefined;

/**
 * The blob URI where the UI definition file is located.
 * @member {String} uiDefinitionUri
 */
AppliancePropertiesPatchable.prototype['uiDefinitionUri'] = undefined;






export default AppliancePropertiesPatchable;

