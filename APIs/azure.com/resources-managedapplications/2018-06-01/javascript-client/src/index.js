/**
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Application from './model/Application';
import ApplicationArtifact from './model/ApplicationArtifact';
import ApplicationArtifactType from './model/ApplicationArtifactType';
import ApplicationDefinition from './model/ApplicationDefinition';
import ApplicationDefinitionListResult from './model/ApplicationDefinitionListResult';
import ApplicationDefinitionProperties from './model/ApplicationDefinitionProperties';
import ApplicationListResult from './model/ApplicationListResult';
import ApplicationLockLevel from './model/ApplicationLockLevel';
import ApplicationPatchable from './model/ApplicationPatchable';
import ApplicationProperties from './model/ApplicationProperties';
import ApplicationPropertiesPatchable from './model/ApplicationPropertiesPatchable';
import ApplicationProviderAuthorization from './model/ApplicationProviderAuthorization';
import ErrorResponse from './model/ErrorResponse';
import GenericResource from './model/GenericResource';
import Identity from './model/Identity';
import Plan from './model/Plan';
import PlanPatchable from './model/PlanPatchable';
import ProvisioningState from './model/ProvisioningState';
import Resource from './model/Resource';
import Sku from './model/Sku';
import ApplicationDefinitionsApi from './api/ApplicationDefinitionsApi';
import ApplicationsApi from './api/ApplicationsApi';


/**
* ARM applications.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApplicationClient = require('index'); // See note below*.
* var xxxSvc = new ApplicationClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApplicationClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApplicationClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApplicationClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-06-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Application model constructor.
     * @property {module:model/Application}
     */
    Application,

    /**
     * The ApplicationArtifact model constructor.
     * @property {module:model/ApplicationArtifact}
     */
    ApplicationArtifact,

    /**
     * The ApplicationArtifactType model constructor.
     * @property {module:model/ApplicationArtifactType}
     */
    ApplicationArtifactType,

    /**
     * The ApplicationDefinition model constructor.
     * @property {module:model/ApplicationDefinition}
     */
    ApplicationDefinition,

    /**
     * The ApplicationDefinitionListResult model constructor.
     * @property {module:model/ApplicationDefinitionListResult}
     */
    ApplicationDefinitionListResult,

    /**
     * The ApplicationDefinitionProperties model constructor.
     * @property {module:model/ApplicationDefinitionProperties}
     */
    ApplicationDefinitionProperties,

    /**
     * The ApplicationListResult model constructor.
     * @property {module:model/ApplicationListResult}
     */
    ApplicationListResult,

    /**
     * The ApplicationLockLevel model constructor.
     * @property {module:model/ApplicationLockLevel}
     */
    ApplicationLockLevel,

    /**
     * The ApplicationPatchable model constructor.
     * @property {module:model/ApplicationPatchable}
     */
    ApplicationPatchable,

    /**
     * The ApplicationProperties model constructor.
     * @property {module:model/ApplicationProperties}
     */
    ApplicationProperties,

    /**
     * The ApplicationPropertiesPatchable model constructor.
     * @property {module:model/ApplicationPropertiesPatchable}
     */
    ApplicationPropertiesPatchable,

    /**
     * The ApplicationProviderAuthorization model constructor.
     * @property {module:model/ApplicationProviderAuthorization}
     */
    ApplicationProviderAuthorization,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The GenericResource model constructor.
     * @property {module:model/GenericResource}
     */
    GenericResource,

    /**
     * The Identity model constructor.
     * @property {module:model/Identity}
     */
    Identity,

    /**
     * The Plan model constructor.
     * @property {module:model/Plan}
     */
    Plan,

    /**
     * The PlanPatchable model constructor.
     * @property {module:model/PlanPatchable}
     */
    PlanPatchable,

    /**
     * The ProvisioningState model constructor.
     * @property {module:model/ProvisioningState}
     */
    ProvisioningState,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The Sku model constructor.
     * @property {module:model/Sku}
     */
    Sku,

    /**
    * The ApplicationDefinitionsApi service constructor.
    * @property {module:api/ApplicationDefinitionsApi}
    */
    ApplicationDefinitionsApi,

    /**
    * The ApplicationsApi service constructor.
    * @property {module:api/ApplicationsApi}
    */
    ApplicationsApi
};
