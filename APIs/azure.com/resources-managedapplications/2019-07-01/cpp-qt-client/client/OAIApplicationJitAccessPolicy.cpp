/**
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationJitAccessPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationJitAccessPolicy::OAIApplicationJitAccessPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationJitAccessPolicy::OAIApplicationJitAccessPolicy() {
    this->initializeModel();
}

OAIApplicationJitAccessPolicy::~OAIApplicationJitAccessPolicy() {}

void OAIApplicationJitAccessPolicy::initializeModel() {

    m_jit_access_enabled_isSet = false;
    m_jit_access_enabled_isValid = false;

    m_jit_approval_mode_isSet = false;
    m_jit_approval_mode_isValid = false;

    m_jit_approvers_isSet = false;
    m_jit_approvers_isValid = false;

    m_maximum_jit_access_duration_isSet = false;
    m_maximum_jit_access_duration_isValid = false;
}

void OAIApplicationJitAccessPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationJitAccessPolicy::fromJsonObject(QJsonObject json) {

    m_jit_access_enabled_isValid = ::OpenAPI::fromJsonValue(m_jit_access_enabled, json[QString("jitAccessEnabled")]);
    m_jit_access_enabled_isSet = !json[QString("jitAccessEnabled")].isNull() && m_jit_access_enabled_isValid;

    m_jit_approval_mode_isValid = ::OpenAPI::fromJsonValue(m_jit_approval_mode, json[QString("jitApprovalMode")]);
    m_jit_approval_mode_isSet = !json[QString("jitApprovalMode")].isNull() && m_jit_approval_mode_isValid;

    m_jit_approvers_isValid = ::OpenAPI::fromJsonValue(m_jit_approvers, json[QString("jitApprovers")]);
    m_jit_approvers_isSet = !json[QString("jitApprovers")].isNull() && m_jit_approvers_isValid;

    m_maximum_jit_access_duration_isValid = ::OpenAPI::fromJsonValue(m_maximum_jit_access_duration, json[QString("maximumJitAccessDuration")]);
    m_maximum_jit_access_duration_isSet = !json[QString("maximumJitAccessDuration")].isNull() && m_maximum_jit_access_duration_isValid;
}

QString OAIApplicationJitAccessPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationJitAccessPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_jit_access_enabled_isSet) {
        obj.insert(QString("jitAccessEnabled"), ::OpenAPI::toJsonValue(m_jit_access_enabled));
    }
    if (m_jit_approval_mode.isSet()) {
        obj.insert(QString("jitApprovalMode"), ::OpenAPI::toJsonValue(m_jit_approval_mode));
    }
    if (m_jit_approvers.size() > 0) {
        obj.insert(QString("jitApprovers"), ::OpenAPI::toJsonValue(m_jit_approvers));
    }
    if (m_maximum_jit_access_duration_isSet) {
        obj.insert(QString("maximumJitAccessDuration"), ::OpenAPI::toJsonValue(m_maximum_jit_access_duration));
    }
    return obj;
}

bool OAIApplicationJitAccessPolicy::isJitAccessEnabled() const {
    return m_jit_access_enabled;
}
void OAIApplicationJitAccessPolicy::setJitAccessEnabled(const bool &jit_access_enabled) {
    m_jit_access_enabled = jit_access_enabled;
    m_jit_access_enabled_isSet = true;
}

bool OAIApplicationJitAccessPolicy::is_jit_access_enabled_Set() const{
    return m_jit_access_enabled_isSet;
}

bool OAIApplicationJitAccessPolicy::is_jit_access_enabled_Valid() const{
    return m_jit_access_enabled_isValid;
}

OAIJitApprovalMode OAIApplicationJitAccessPolicy::getJitApprovalMode() const {
    return m_jit_approval_mode;
}
void OAIApplicationJitAccessPolicy::setJitApprovalMode(const OAIJitApprovalMode &jit_approval_mode) {
    m_jit_approval_mode = jit_approval_mode;
    m_jit_approval_mode_isSet = true;
}

bool OAIApplicationJitAccessPolicy::is_jit_approval_mode_Set() const{
    return m_jit_approval_mode_isSet;
}

bool OAIApplicationJitAccessPolicy::is_jit_approval_mode_Valid() const{
    return m_jit_approval_mode_isValid;
}

QList<OAIJitApproverDefinition> OAIApplicationJitAccessPolicy::getJitApprovers() const {
    return m_jit_approvers;
}
void OAIApplicationJitAccessPolicy::setJitApprovers(const QList<OAIJitApproverDefinition> &jit_approvers) {
    m_jit_approvers = jit_approvers;
    m_jit_approvers_isSet = true;
}

bool OAIApplicationJitAccessPolicy::is_jit_approvers_Set() const{
    return m_jit_approvers_isSet;
}

bool OAIApplicationJitAccessPolicy::is_jit_approvers_Valid() const{
    return m_jit_approvers_isValid;
}

QString OAIApplicationJitAccessPolicy::getMaximumJitAccessDuration() const {
    return m_maximum_jit_access_duration;
}
void OAIApplicationJitAccessPolicy::setMaximumJitAccessDuration(const QString &maximum_jit_access_duration) {
    m_maximum_jit_access_duration = maximum_jit_access_duration;
    m_maximum_jit_access_duration_isSet = true;
}

bool OAIApplicationJitAccessPolicy::is_maximum_jit_access_duration_Set() const{
    return m_maximum_jit_access_duration_isSet;
}

bool OAIApplicationJitAccessPolicy::is_maximum_jit_access_duration_Valid() const{
    return m_maximum_jit_access_duration_isValid;
}

bool OAIApplicationJitAccessPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_jit_access_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_jit_approval_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_jit_approvers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_maximum_jit_access_duration_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationJitAccessPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_jit_access_enabled_isValid && true;
}

} // namespace OpenAPI
