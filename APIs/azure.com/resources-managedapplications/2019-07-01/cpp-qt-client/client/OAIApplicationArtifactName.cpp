/**
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationArtifactName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationArtifactName::OAIApplicationArtifactName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationArtifactName::OAIApplicationArtifactName() {
    this->initializeModel();
}

OAIApplicationArtifactName::~OAIApplicationArtifactName() {}

void OAIApplicationArtifactName::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIApplicationArtifactName::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIApplicationArtifactName::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotSpecified", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApplicationArtifactName::NOTSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ViewDefinition", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApplicationArtifactName::VIEWDEFINITION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Authorizations", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApplicationArtifactName::AUTHORIZATIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CustomRoleDefinition", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApplicationArtifactName::CUSTOMROLEDEFINITION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIApplicationArtifactName::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIApplicationArtifactName::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIApplicationArtifactName::NOTSPECIFIED:
            val = "NotSpecified";
            break;
        case eOAIApplicationArtifactName::VIEWDEFINITION:
            val = "ViewDefinition";
            break;
        case eOAIApplicationArtifactName::AUTHORIZATIONS:
            val = "Authorizations";
            break;
        case eOAIApplicationArtifactName::CUSTOMROLEDEFINITION:
            val = "CustomRoleDefinition";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIApplicationArtifactName::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIApplicationArtifactName::eOAIApplicationArtifactName OAIApplicationArtifactName::getValue() const {
    return m_value;
}

void OAIApplicationArtifactName::setValue(const OAIApplicationArtifactName::eOAIApplicationArtifactName& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIApplicationArtifactName::isSet() const {
    
    return m_value_isSet;
}

bool OAIApplicationArtifactName::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
