/*
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Application;
import org.openapitools.client.model.ApplicationListResult;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationsApi
 */
@Disabled
public class ApplicationsApiTest {

    private final ApplicationsApi api = new ApplicationsApi();

    /**
     * Creates a new managed application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String applicationName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Application parameters = null;
        Application response = api.applicationsCreateOrUpdate(resourceGroupName, applicationName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Creates a new managed application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationsCreateOrUpdateByIdTest() throws ApiException {
        String applicationId = null;
        String apiVersion = null;
        Application parameters = null;
        Application response = api.applicationsCreateOrUpdateById(applicationId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the managed application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String applicationName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.applicationsDelete(resourceGroupName, applicationName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Deletes the managed application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationsDeleteByIdTest() throws ApiException {
        String applicationId = null;
        String apiVersion = null;
        api.applicationsDeleteById(applicationId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the managed application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationsGetTest() throws ApiException {
        String resourceGroupName = null;
        String applicationName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Application response = api.applicationsGet(resourceGroupName, applicationName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the managed application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationsGetByIdTest() throws ApiException {
        String applicationId = null;
        String apiVersion = null;
        Application response = api.applicationsGetById(applicationId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all the applications within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationsListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApplicationListResult response = api.applicationsListByResourceGroup(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the applications within a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationsListBySubscriptionTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        ApplicationListResult response = api.applicationsListBySubscription(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Refresh Permissions for application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationsRefreshPermissionsTest() throws ApiException {
        String resourceGroupName = null;
        String applicationName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.applicationsRefreshPermissions(resourceGroupName, applicationName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates an existing managed application. The only value that can be updated via PATCH currently is the tags.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String applicationName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Application parameters = null;
        Application response = api.applicationsUpdate(resourceGroupName, applicationName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Updates an existing managed application. The only value that can be updated via PATCH currently is the tags.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationsUpdateByIdTest() throws ApiException {
        String applicationId = null;
        String apiVersion = null;
        Application parameters = null;
        Application response = api.applicationsUpdateById(applicationId, apiVersion, parameters);
        // TODO: test validations
    }

}
