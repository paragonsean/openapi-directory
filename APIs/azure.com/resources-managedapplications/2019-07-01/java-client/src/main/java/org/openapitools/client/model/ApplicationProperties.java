/*
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApplicationArtifact;
import org.openapitools.client.model.ApplicationAuthorization;
import org.openapitools.client.model.ApplicationBillingDetailsDefinition;
import org.openapitools.client.model.ApplicationClientDetails;
import org.openapitools.client.model.ApplicationJitAccessPolicy;
import org.openapitools.client.model.ApplicationManagementMode;
import org.openapitools.client.model.ApplicationPackageContact;
import org.openapitools.client.model.ApplicationPackageSupportUrls;
import org.openapitools.client.model.ProvisioningState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The managed application properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:16:01.014318-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApplicationProperties {
  public static final String SERIALIZED_NAME_APPLICATION_DEFINITION_ID = "applicationDefinitionId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_DEFINITION_ID)
  private String applicationDefinitionId;

  public static final String SERIALIZED_NAME_ARTIFACTS = "artifacts";
  @SerializedName(SERIALIZED_NAME_ARTIFACTS)
  private List<ApplicationArtifact> artifacts = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTHORIZATIONS = "authorizations";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATIONS)
  private List<ApplicationAuthorization> authorizations = new ArrayList<>();

  public static final String SERIALIZED_NAME_BILLING_DETAILS = "billingDetails";
  @SerializedName(SERIALIZED_NAME_BILLING_DETAILS)
  private ApplicationBillingDetailsDefinition billingDetails;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private ApplicationClientDetails createdBy;

  public static final String SERIALIZED_NAME_CUSTOMER_SUPPORT = "customerSupport";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SUPPORT)
  private ApplicationPackageContact customerSupport;

  public static final String SERIALIZED_NAME_JIT_ACCESS_POLICY = "jitAccessPolicy";
  @SerializedName(SERIALIZED_NAME_JIT_ACCESS_POLICY)
  private ApplicationJitAccessPolicy jitAccessPolicy;

  public static final String SERIALIZED_NAME_MANAGED_RESOURCE_GROUP_ID = "managedResourceGroupId";
  @SerializedName(SERIALIZED_NAME_MANAGED_RESOURCE_GROUP_ID)
  private String managedResourceGroupId;

  public static final String SERIALIZED_NAME_MANAGEMENT_MODE = "managementMode";
  @SerializedName(SERIALIZED_NAME_MANAGEMENT_MODE)
  private ApplicationManagementMode managementMode;

  public static final String SERIALIZED_NAME_OUTPUTS = "outputs";
  @SerializedName(SERIALIZED_NAME_OUTPUTS)
  private Object outputs;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Object parameters;

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private ProvisioningState provisioningState;

  public static final String SERIALIZED_NAME_PUBLISHER_TENANT_ID = "publisherTenantId";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_TENANT_ID)
  private String publisherTenantId;

  public static final String SERIALIZED_NAME_SUPPORT_URLS = "supportUrls";
  @SerializedName(SERIALIZED_NAME_SUPPORT_URLS)
  private ApplicationPackageSupportUrls supportUrls;

  public static final String SERIALIZED_NAME_UPDATED_BY = "updatedBy";
  @SerializedName(SERIALIZED_NAME_UPDATED_BY)
  private ApplicationClientDetails updatedBy;

  public ApplicationProperties() {
  }

  public ApplicationProperties(
     List<ApplicationArtifact> artifacts, 
     List<ApplicationAuthorization> authorizations, 
     Object outputs, 
     String publisherTenantId
  ) {
    this();
    this.artifacts = artifacts;
    this.authorizations = authorizations;
    this.outputs = outputs;
    this.publisherTenantId = publisherTenantId;
  }

  public ApplicationProperties applicationDefinitionId(String applicationDefinitionId) {
    this.applicationDefinitionId = applicationDefinitionId;
    return this;
  }

  /**
   * The fully qualified path of managed application definition Id.
   * @return applicationDefinitionId
   */
  @javax.annotation.Nullable
  public String getApplicationDefinitionId() {
    return applicationDefinitionId;
  }

  public void setApplicationDefinitionId(String applicationDefinitionId) {
    this.applicationDefinitionId = applicationDefinitionId;
  }


  /**
   * The collection of managed application artifacts.
   * @return artifacts
   */
  @javax.annotation.Nullable
  public List<ApplicationArtifact> getArtifacts() {
    return artifacts;
  }



  /**
   * The  read-only authorizations property that is retrieved from the application package.
   * @return authorizations
   */
  @javax.annotation.Nullable
  public List<ApplicationAuthorization> getAuthorizations() {
    return authorizations;
  }



  public ApplicationProperties billingDetails(ApplicationBillingDetailsDefinition billingDetails) {
    this.billingDetails = billingDetails;
    return this;
  }

  /**
   * Get billingDetails
   * @return billingDetails
   */
  @javax.annotation.Nullable
  public ApplicationBillingDetailsDefinition getBillingDetails() {
    return billingDetails;
  }

  public void setBillingDetails(ApplicationBillingDetailsDefinition billingDetails) {
    this.billingDetails = billingDetails;
  }


  public ApplicationProperties createdBy(ApplicationClientDetails createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public ApplicationClientDetails getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(ApplicationClientDetails createdBy) {
    this.createdBy = createdBy;
  }


  public ApplicationProperties customerSupport(ApplicationPackageContact customerSupport) {
    this.customerSupport = customerSupport;
    return this;
  }

  /**
   * Get customerSupport
   * @return customerSupport
   */
  @javax.annotation.Nullable
  public ApplicationPackageContact getCustomerSupport() {
    return customerSupport;
  }

  public void setCustomerSupport(ApplicationPackageContact customerSupport) {
    this.customerSupport = customerSupport;
  }


  public ApplicationProperties jitAccessPolicy(ApplicationJitAccessPolicy jitAccessPolicy) {
    this.jitAccessPolicy = jitAccessPolicy;
    return this;
  }

  /**
   * Get jitAccessPolicy
   * @return jitAccessPolicy
   */
  @javax.annotation.Nullable
  public ApplicationJitAccessPolicy getJitAccessPolicy() {
    return jitAccessPolicy;
  }

  public void setJitAccessPolicy(ApplicationJitAccessPolicy jitAccessPolicy) {
    this.jitAccessPolicy = jitAccessPolicy;
  }


  public ApplicationProperties managedResourceGroupId(String managedResourceGroupId) {
    this.managedResourceGroupId = managedResourceGroupId;
    return this;
  }

  /**
   * The managed resource group Id.
   * @return managedResourceGroupId
   */
  @javax.annotation.Nullable
  public String getManagedResourceGroupId() {
    return managedResourceGroupId;
  }

  public void setManagedResourceGroupId(String managedResourceGroupId) {
    this.managedResourceGroupId = managedResourceGroupId;
  }


  public ApplicationProperties managementMode(ApplicationManagementMode managementMode) {
    this.managementMode = managementMode;
    return this;
  }

  /**
   * Get managementMode
   * @return managementMode
   */
  @javax.annotation.Nullable
  public ApplicationManagementMode getManagementMode() {
    return managementMode;
  }

  public void setManagementMode(ApplicationManagementMode managementMode) {
    this.managementMode = managementMode;
  }


  /**
   * Name and value pairs that define the managed application outputs.
   * @return outputs
   */
  @javax.annotation.Nullable
  public Object getOutputs() {
    return outputs;
  }



  public ApplicationProperties parameters(Object parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
   * @return parameters
   */
  @javax.annotation.Nullable
  public Object getParameters() {
    return parameters;
  }

  public void setParameters(Object parameters) {
    this.parameters = parameters;
  }


  public ApplicationProperties provisioningState(ProvisioningState provisioningState) {
    this.provisioningState = provisioningState;
    return this;
  }

  /**
   * Get provisioningState
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public ProvisioningState getProvisioningState() {
    return provisioningState;
  }

  public void setProvisioningState(ProvisioningState provisioningState) {
    this.provisioningState = provisioningState;
  }


  /**
   * The publisher tenant Id.
   * @return publisherTenantId
   */
  @javax.annotation.Nullable
  public String getPublisherTenantId() {
    return publisherTenantId;
  }



  public ApplicationProperties supportUrls(ApplicationPackageSupportUrls supportUrls) {
    this.supportUrls = supportUrls;
    return this;
  }

  /**
   * Get supportUrls
   * @return supportUrls
   */
  @javax.annotation.Nullable
  public ApplicationPackageSupportUrls getSupportUrls() {
    return supportUrls;
  }

  public void setSupportUrls(ApplicationPackageSupportUrls supportUrls) {
    this.supportUrls = supportUrls;
  }


  public ApplicationProperties updatedBy(ApplicationClientDetails updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

  /**
   * Get updatedBy
   * @return updatedBy
   */
  @javax.annotation.Nullable
  public ApplicationClientDetails getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(ApplicationClientDetails updatedBy) {
    this.updatedBy = updatedBy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationProperties applicationProperties = (ApplicationProperties) o;
    return Objects.equals(this.applicationDefinitionId, applicationProperties.applicationDefinitionId) &&
        Objects.equals(this.artifacts, applicationProperties.artifacts) &&
        Objects.equals(this.authorizations, applicationProperties.authorizations) &&
        Objects.equals(this.billingDetails, applicationProperties.billingDetails) &&
        Objects.equals(this.createdBy, applicationProperties.createdBy) &&
        Objects.equals(this.customerSupport, applicationProperties.customerSupport) &&
        Objects.equals(this.jitAccessPolicy, applicationProperties.jitAccessPolicy) &&
        Objects.equals(this.managedResourceGroupId, applicationProperties.managedResourceGroupId) &&
        Objects.equals(this.managementMode, applicationProperties.managementMode) &&
        Objects.equals(this.outputs, applicationProperties.outputs) &&
        Objects.equals(this.parameters, applicationProperties.parameters) &&
        Objects.equals(this.provisioningState, applicationProperties.provisioningState) &&
        Objects.equals(this.publisherTenantId, applicationProperties.publisherTenantId) &&
        Objects.equals(this.supportUrls, applicationProperties.supportUrls) &&
        Objects.equals(this.updatedBy, applicationProperties.updatedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationDefinitionId, artifacts, authorizations, billingDetails, createdBy, customerSupport, jitAccessPolicy, managedResourceGroupId, managementMode, outputs, parameters, provisioningState, publisherTenantId, supportUrls, updatedBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationProperties {\n");
    sb.append("    applicationDefinitionId: ").append(toIndentedString(applicationDefinitionId)).append("\n");
    sb.append("    artifacts: ").append(toIndentedString(artifacts)).append("\n");
    sb.append("    authorizations: ").append(toIndentedString(authorizations)).append("\n");
    sb.append("    billingDetails: ").append(toIndentedString(billingDetails)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    customerSupport: ").append(toIndentedString(customerSupport)).append("\n");
    sb.append("    jitAccessPolicy: ").append(toIndentedString(jitAccessPolicy)).append("\n");
    sb.append("    managedResourceGroupId: ").append(toIndentedString(managedResourceGroupId)).append("\n");
    sb.append("    managementMode: ").append(toIndentedString(managementMode)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    publisherTenantId: ").append(toIndentedString(publisherTenantId)).append("\n");
    sb.append("    supportUrls: ").append(toIndentedString(supportUrls)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("applicationDefinitionId");
    openapiFields.add("artifacts");
    openapiFields.add("authorizations");
    openapiFields.add("billingDetails");
    openapiFields.add("createdBy");
    openapiFields.add("customerSupport");
    openapiFields.add("jitAccessPolicy");
    openapiFields.add("managedResourceGroupId");
    openapiFields.add("managementMode");
    openapiFields.add("outputs");
    openapiFields.add("parameters");
    openapiFields.add("provisioningState");
    openapiFields.add("publisherTenantId");
    openapiFields.add("supportUrls");
    openapiFields.add("updatedBy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApplicationProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApplicationProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationProperties is not found in the empty JSON string", ApplicationProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApplicationProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("applicationDefinitionId") != null && !jsonObj.get("applicationDefinitionId").isJsonNull()) && !jsonObj.get("applicationDefinitionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationDefinitionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationDefinitionId").toString()));
      }
      if (jsonObj.get("artifacts") != null && !jsonObj.get("artifacts").isJsonNull()) {
        JsonArray jsonArrayartifacts = jsonObj.getAsJsonArray("artifacts");
        if (jsonArrayartifacts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("artifacts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `artifacts` to be an array in the JSON string but got `%s`", jsonObj.get("artifacts").toString()));
          }

          // validate the optional field `artifacts` (array)
          for (int i = 0; i < jsonArrayartifacts.size(); i++) {
            ApplicationArtifact.validateJsonElement(jsonArrayartifacts.get(i));
          };
        }
      }
      if (jsonObj.get("authorizations") != null && !jsonObj.get("authorizations").isJsonNull()) {
        JsonArray jsonArrayauthorizations = jsonObj.getAsJsonArray("authorizations");
        if (jsonArrayauthorizations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("authorizations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `authorizations` to be an array in the JSON string but got `%s`", jsonObj.get("authorizations").toString()));
          }

          // validate the optional field `authorizations` (array)
          for (int i = 0; i < jsonArrayauthorizations.size(); i++) {
            ApplicationAuthorization.validateJsonElement(jsonArrayauthorizations.get(i));
          };
        }
      }
      // validate the optional field `billingDetails`
      if (jsonObj.get("billingDetails") != null && !jsonObj.get("billingDetails").isJsonNull()) {
        ApplicationBillingDetailsDefinition.validateJsonElement(jsonObj.get("billingDetails"));
      }
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        ApplicationClientDetails.validateJsonElement(jsonObj.get("createdBy"));
      }
      // validate the optional field `customerSupport`
      if (jsonObj.get("customerSupport") != null && !jsonObj.get("customerSupport").isJsonNull()) {
        ApplicationPackageContact.validateJsonElement(jsonObj.get("customerSupport"));
      }
      // validate the optional field `jitAccessPolicy`
      if (jsonObj.get("jitAccessPolicy") != null && !jsonObj.get("jitAccessPolicy").isJsonNull()) {
        ApplicationJitAccessPolicy.validateJsonElement(jsonObj.get("jitAccessPolicy"));
      }
      if ((jsonObj.get("managedResourceGroupId") != null && !jsonObj.get("managedResourceGroupId").isJsonNull()) && !jsonObj.get("managedResourceGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `managedResourceGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("managedResourceGroupId").toString()));
      }
      // validate the optional field `managementMode`
      if (jsonObj.get("managementMode") != null && !jsonObj.get("managementMode").isJsonNull()) {
        ApplicationManagementMode.validateJsonElement(jsonObj.get("managementMode"));
      }
      // validate the optional field `provisioningState`
      if (jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) {
        ProvisioningState.validateJsonElement(jsonObj.get("provisioningState"));
      }
      if ((jsonObj.get("publisherTenantId") != null && !jsonObj.get("publisherTenantId").isJsonNull()) && !jsonObj.get("publisherTenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisherTenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisherTenantId").toString()));
      }
      // validate the optional field `supportUrls`
      if (jsonObj.get("supportUrls") != null && !jsonObj.get("supportUrls").isJsonNull()) {
        ApplicationPackageSupportUrls.validateJsonElement(jsonObj.get("supportUrls"));
      }
      // validate the optional field `updatedBy`
      if (jsonObj.get("updatedBy") != null && !jsonObj.get("updatedBy").isJsonNull()) {
        ApplicationClientDetails.validateJsonElement(jsonObj.get("updatedBy"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationProperties>() {
           @Override
           public void write(JsonWriter out, ApplicationProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApplicationProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApplicationProperties
   * @throws IOException if the JSON string is invalid with respect to ApplicationProperties
   */
  public static ApplicationProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationProperties.class);
  }

  /**
   * Convert an instance of ApplicationProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

