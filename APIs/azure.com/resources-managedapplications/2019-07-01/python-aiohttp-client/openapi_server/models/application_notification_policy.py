# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_notification_endpoint import ApplicationNotificationEndpoint
from openapi_server import util


class ApplicationNotificationPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notification_endpoints: List[ApplicationNotificationEndpoint]=None):
        """ApplicationNotificationPolicy - a model defined in OpenAPI

        :param notification_endpoints: The notification_endpoints of this ApplicationNotificationPolicy.
        """
        self.openapi_types = {
            'notification_endpoints': List[ApplicationNotificationEndpoint]
        }

        self.attribute_map = {
            'notification_endpoints': 'notificationEndpoints'
        }

        self._notification_endpoints = notification_endpoints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationNotificationPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationNotificationPolicy of this ApplicationNotificationPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notification_endpoints(self):
        """Gets the notification_endpoints of this ApplicationNotificationPolicy.

        The managed application notification endpoint.

        :return: The notification_endpoints of this ApplicationNotificationPolicy.
        :rtype: List[ApplicationNotificationEndpoint]
        """
        return self._notification_endpoints

    @notification_endpoints.setter
    def notification_endpoints(self, notification_endpoints):
        """Sets the notification_endpoints of this ApplicationNotificationPolicy.

        The managed application notification endpoint.

        :param notification_endpoints: The notification_endpoints of this ApplicationNotificationPolicy.
        :type notification_endpoints: List[ApplicationNotificationEndpoint]
        """
        if notification_endpoints is None:
            raise ValueError("Invalid value for `notification_endpoints`, must not be `None`")

        self._notification_endpoints = notification_endpoints
