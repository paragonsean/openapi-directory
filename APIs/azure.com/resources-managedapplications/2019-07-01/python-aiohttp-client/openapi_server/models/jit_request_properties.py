# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_client_details import ApplicationClientDetails
from openapi_server.models.jit_authorization_policies import JitAuthorizationPolicies
from openapi_server.models.jit_request_state import JitRequestState
from openapi_server.models.jit_scheduling_policy import JitSchedulingPolicy
from openapi_server.models.provisioning_state import ProvisioningState
from openapi_server import util


class JitRequestProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_resource_id: str=None, created_by: ApplicationClientDetails=None, jit_authorization_policies: List[JitAuthorizationPolicies]=None, jit_request_state: JitRequestState=None, jit_scheduling_policy: JitSchedulingPolicy=None, provisioning_state: ProvisioningState=None, publisher_tenant_id: str=None, updated_by: ApplicationClientDetails=None):
        """JitRequestProperties - a model defined in OpenAPI

        :param application_resource_id: The application_resource_id of this JitRequestProperties.
        :param created_by: The created_by of this JitRequestProperties.
        :param jit_authorization_policies: The jit_authorization_policies of this JitRequestProperties.
        :param jit_request_state: The jit_request_state of this JitRequestProperties.
        :param jit_scheduling_policy: The jit_scheduling_policy of this JitRequestProperties.
        :param provisioning_state: The provisioning_state of this JitRequestProperties.
        :param publisher_tenant_id: The publisher_tenant_id of this JitRequestProperties.
        :param updated_by: The updated_by of this JitRequestProperties.
        """
        self.openapi_types = {
            'application_resource_id': str,
            'created_by': ApplicationClientDetails,
            'jit_authorization_policies': List[JitAuthorizationPolicies],
            'jit_request_state': JitRequestState,
            'jit_scheduling_policy': JitSchedulingPolicy,
            'provisioning_state': ProvisioningState,
            'publisher_tenant_id': str,
            'updated_by': ApplicationClientDetails
        }

        self.attribute_map = {
            'application_resource_id': 'applicationResourceId',
            'created_by': 'createdBy',
            'jit_authorization_policies': 'jitAuthorizationPolicies',
            'jit_request_state': 'jitRequestState',
            'jit_scheduling_policy': 'jitSchedulingPolicy',
            'provisioning_state': 'provisioningState',
            'publisher_tenant_id': 'publisherTenantId',
            'updated_by': 'updatedBy'
        }

        self._application_resource_id = application_resource_id
        self._created_by = created_by
        self._jit_authorization_policies = jit_authorization_policies
        self._jit_request_state = jit_request_state
        self._jit_scheduling_policy = jit_scheduling_policy
        self._provisioning_state = provisioning_state
        self._publisher_tenant_id = publisher_tenant_id
        self._updated_by = updated_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JitRequestProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JitRequestProperties of this JitRequestProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_resource_id(self):
        """Gets the application_resource_id of this JitRequestProperties.

        The parent application id.

        :return: The application_resource_id of this JitRequestProperties.
        :rtype: str
        """
        return self._application_resource_id

    @application_resource_id.setter
    def application_resource_id(self, application_resource_id):
        """Sets the application_resource_id of this JitRequestProperties.

        The parent application id.

        :param application_resource_id: The application_resource_id of this JitRequestProperties.
        :type application_resource_id: str
        """
        if application_resource_id is None:
            raise ValueError("Invalid value for `application_resource_id`, must not be `None`")

        self._application_resource_id = application_resource_id

    @property
    def created_by(self):
        """Gets the created_by of this JitRequestProperties.


        :return: The created_by of this JitRequestProperties.
        :rtype: ApplicationClientDetails
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this JitRequestProperties.


        :param created_by: The created_by of this JitRequestProperties.
        :type created_by: ApplicationClientDetails
        """

        self._created_by = created_by

    @property
    def jit_authorization_policies(self):
        """Gets the jit_authorization_policies of this JitRequestProperties.

        The JIT authorization policies.

        :return: The jit_authorization_policies of this JitRequestProperties.
        :rtype: List[JitAuthorizationPolicies]
        """
        return self._jit_authorization_policies

    @jit_authorization_policies.setter
    def jit_authorization_policies(self, jit_authorization_policies):
        """Sets the jit_authorization_policies of this JitRequestProperties.

        The JIT authorization policies.

        :param jit_authorization_policies: The jit_authorization_policies of this JitRequestProperties.
        :type jit_authorization_policies: List[JitAuthorizationPolicies]
        """
        if jit_authorization_policies is None:
            raise ValueError("Invalid value for `jit_authorization_policies`, must not be `None`")

        self._jit_authorization_policies = jit_authorization_policies

    @property
    def jit_request_state(self):
        """Gets the jit_request_state of this JitRequestProperties.


        :return: The jit_request_state of this JitRequestProperties.
        :rtype: JitRequestState
        """
        return self._jit_request_state

    @jit_request_state.setter
    def jit_request_state(self, jit_request_state):
        """Sets the jit_request_state of this JitRequestProperties.


        :param jit_request_state: The jit_request_state of this JitRequestProperties.
        :type jit_request_state: JitRequestState
        """

        self._jit_request_state = jit_request_state

    @property
    def jit_scheduling_policy(self):
        """Gets the jit_scheduling_policy of this JitRequestProperties.


        :return: The jit_scheduling_policy of this JitRequestProperties.
        :rtype: JitSchedulingPolicy
        """
        return self._jit_scheduling_policy

    @jit_scheduling_policy.setter
    def jit_scheduling_policy(self, jit_scheduling_policy):
        """Sets the jit_scheduling_policy of this JitRequestProperties.


        :param jit_scheduling_policy: The jit_scheduling_policy of this JitRequestProperties.
        :type jit_scheduling_policy: JitSchedulingPolicy
        """
        if jit_scheduling_policy is None:
            raise ValueError("Invalid value for `jit_scheduling_policy`, must not be `None`")

        self._jit_scheduling_policy = jit_scheduling_policy

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this JitRequestProperties.


        :return: The provisioning_state of this JitRequestProperties.
        :rtype: ProvisioningState
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this JitRequestProperties.


        :param provisioning_state: The provisioning_state of this JitRequestProperties.
        :type provisioning_state: ProvisioningState
        """

        self._provisioning_state = provisioning_state

    @property
    def publisher_tenant_id(self):
        """Gets the publisher_tenant_id of this JitRequestProperties.

        The publisher tenant id.

        :return: The publisher_tenant_id of this JitRequestProperties.
        :rtype: str
        """
        return self._publisher_tenant_id

    @publisher_tenant_id.setter
    def publisher_tenant_id(self, publisher_tenant_id):
        """Sets the publisher_tenant_id of this JitRequestProperties.

        The publisher tenant id.

        :param publisher_tenant_id: The publisher_tenant_id of this JitRequestProperties.
        :type publisher_tenant_id: str
        """

        self._publisher_tenant_id = publisher_tenant_id

    @property
    def updated_by(self):
        """Gets the updated_by of this JitRequestProperties.


        :return: The updated_by of this JitRequestProperties.
        :rtype: ApplicationClientDetails
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this JitRequestProperties.


        :param updated_by: The updated_by of this JitRequestProperties.
        :type updated_by: ApplicationClientDetails
        """

        self._updated_by = updated_by
