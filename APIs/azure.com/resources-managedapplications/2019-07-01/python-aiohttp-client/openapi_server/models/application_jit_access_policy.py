# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.jit_approval_mode import JitApprovalMode
from openapi_server.models.jit_approver_definition import JitApproverDefinition
from openapi_server import util


class ApplicationJitAccessPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jit_access_enabled: bool=None, jit_approval_mode: JitApprovalMode=None, jit_approvers: List[JitApproverDefinition]=None, maximum_jit_access_duration: str=None):
        """ApplicationJitAccessPolicy - a model defined in OpenAPI

        :param jit_access_enabled: The jit_access_enabled of this ApplicationJitAccessPolicy.
        :param jit_approval_mode: The jit_approval_mode of this ApplicationJitAccessPolicy.
        :param jit_approvers: The jit_approvers of this ApplicationJitAccessPolicy.
        :param maximum_jit_access_duration: The maximum_jit_access_duration of this ApplicationJitAccessPolicy.
        """
        self.openapi_types = {
            'jit_access_enabled': bool,
            'jit_approval_mode': JitApprovalMode,
            'jit_approvers': List[JitApproverDefinition],
            'maximum_jit_access_duration': str
        }

        self.attribute_map = {
            'jit_access_enabled': 'jitAccessEnabled',
            'jit_approval_mode': 'jitApprovalMode',
            'jit_approvers': 'jitApprovers',
            'maximum_jit_access_duration': 'maximumJitAccessDuration'
        }

        self._jit_access_enabled = jit_access_enabled
        self._jit_approval_mode = jit_approval_mode
        self._jit_approvers = jit_approvers
        self._maximum_jit_access_duration = maximum_jit_access_duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationJitAccessPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationJitAccessPolicy of this ApplicationJitAccessPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jit_access_enabled(self):
        """Gets the jit_access_enabled of this ApplicationJitAccessPolicy.

        Whether the JIT access is enabled.

        :return: The jit_access_enabled of this ApplicationJitAccessPolicy.
        :rtype: bool
        """
        return self._jit_access_enabled

    @jit_access_enabled.setter
    def jit_access_enabled(self, jit_access_enabled):
        """Sets the jit_access_enabled of this ApplicationJitAccessPolicy.

        Whether the JIT access is enabled.

        :param jit_access_enabled: The jit_access_enabled of this ApplicationJitAccessPolicy.
        :type jit_access_enabled: bool
        """
        if jit_access_enabled is None:
            raise ValueError("Invalid value for `jit_access_enabled`, must not be `None`")

        self._jit_access_enabled = jit_access_enabled

    @property
    def jit_approval_mode(self):
        """Gets the jit_approval_mode of this ApplicationJitAccessPolicy.


        :return: The jit_approval_mode of this ApplicationJitAccessPolicy.
        :rtype: JitApprovalMode
        """
        return self._jit_approval_mode

    @jit_approval_mode.setter
    def jit_approval_mode(self, jit_approval_mode):
        """Sets the jit_approval_mode of this ApplicationJitAccessPolicy.


        :param jit_approval_mode: The jit_approval_mode of this ApplicationJitAccessPolicy.
        :type jit_approval_mode: JitApprovalMode
        """

        self._jit_approval_mode = jit_approval_mode

    @property
    def jit_approvers(self):
        """Gets the jit_approvers of this ApplicationJitAccessPolicy.

        The JIT approvers

        :return: The jit_approvers of this ApplicationJitAccessPolicy.
        :rtype: List[JitApproverDefinition]
        """
        return self._jit_approvers

    @jit_approvers.setter
    def jit_approvers(self, jit_approvers):
        """Sets the jit_approvers of this ApplicationJitAccessPolicy.

        The JIT approvers

        :param jit_approvers: The jit_approvers of this ApplicationJitAccessPolicy.
        :type jit_approvers: List[JitApproverDefinition]
        """

        self._jit_approvers = jit_approvers

    @property
    def maximum_jit_access_duration(self):
        """Gets the maximum_jit_access_duration of this ApplicationJitAccessPolicy.

        The maximum duration JIT access is granted. This is an ISO8601 time period value.

        :return: The maximum_jit_access_duration of this ApplicationJitAccessPolicy.
        :rtype: str
        """
        return self._maximum_jit_access_duration

    @maximum_jit_access_duration.setter
    def maximum_jit_access_duration(self, maximum_jit_access_duration):
        """Sets the maximum_jit_access_duration of this ApplicationJitAccessPolicy.

        The maximum duration JIT access is granted. This is an ISO8601 time period value.

        :param maximum_jit_access_duration: The maximum_jit_access_duration of this ApplicationJitAccessPolicy.
        :type maximum_jit_access_duration: str
        """

        self._maximum_jit_access_duration = maximum_jit_access_duration
