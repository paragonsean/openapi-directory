/**
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Application from './model/Application';
import ApplicationArtifact from './model/ApplicationArtifact';
import ApplicationArtifactName from './model/ApplicationArtifactName';
import ApplicationArtifactType from './model/ApplicationArtifactType';
import ApplicationAuthorization from './model/ApplicationAuthorization';
import ApplicationBillingDetailsDefinition from './model/ApplicationBillingDetailsDefinition';
import ApplicationClientDetails from './model/ApplicationClientDetails';
import ApplicationDefinition from './model/ApplicationDefinition';
import ApplicationDefinitionArtifact from './model/ApplicationDefinitionArtifact';
import ApplicationDefinitionArtifactName from './model/ApplicationDefinitionArtifactName';
import ApplicationDefinitionListResult from './model/ApplicationDefinitionListResult';
import ApplicationDefinitionProperties from './model/ApplicationDefinitionProperties';
import ApplicationDeploymentPolicy from './model/ApplicationDeploymentPolicy';
import ApplicationJitAccessPolicy from './model/ApplicationJitAccessPolicy';
import ApplicationListResult from './model/ApplicationListResult';
import ApplicationLockLevel from './model/ApplicationLockLevel';
import ApplicationManagementMode from './model/ApplicationManagementMode';
import ApplicationManagementPolicy from './model/ApplicationManagementPolicy';
import ApplicationNotificationEndpoint from './model/ApplicationNotificationEndpoint';
import ApplicationNotificationPolicy from './model/ApplicationNotificationPolicy';
import ApplicationPackageContact from './model/ApplicationPackageContact';
import ApplicationPackageLockingPolicyDefinition from './model/ApplicationPackageLockingPolicyDefinition';
import ApplicationPackageSupportUrls from './model/ApplicationPackageSupportUrls';
import ApplicationPatchable from './model/ApplicationPatchable';
import ApplicationPolicy from './model/ApplicationPolicy';
import ApplicationProperties from './model/ApplicationProperties';
import ApplicationPropertiesPatchable from './model/ApplicationPropertiesPatchable';
import DeploymentMode from './model/DeploymentMode';
import ErrorResponse from './model/ErrorResponse';
import GenericResource from './model/GenericResource';
import Identity from './model/Identity';
import JitApprovalMode from './model/JitApprovalMode';
import JitApproverDefinition from './model/JitApproverDefinition';
import JitAuthorizationPolicies from './model/JitAuthorizationPolicies';
import JitRequestDefinition from './model/JitRequestDefinition';
import JitRequestDefinitionListResult from './model/JitRequestDefinitionListResult';
import JitRequestPatchable from './model/JitRequestPatchable';
import JitRequestProperties from './model/JitRequestProperties';
import JitRequestState from './model/JitRequestState';
import JitSchedulingPolicy from './model/JitSchedulingPolicy';
import JitSchedulingType from './model/JitSchedulingType';
import Operation from './model/Operation';
import OperationDisplay from './model/OperationDisplay';
import OperationListResult from './model/OperationListResult';
import Plan from './model/Plan';
import PlanPatchable from './model/PlanPatchable';
import ProvisioningState from './model/ProvisioningState';
import Resource from './model/Resource';
import Sku from './model/Sku';
import ApplicationDefinitionsApi from './api/ApplicationDefinitionsApi';
import ApplicationsApi from './api/ApplicationsApi';
import JitRequestsApi from './api/JitRequestsApi';
import OperationsApi from './api/OperationsApi';


/**
* ARM applications.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApplicationClient = require('index'); // See note below*.
* var xxxSvc = new ApplicationClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApplicationClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApplicationClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApplicationClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-07-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Application model constructor.
     * @property {module:model/Application}
     */
    Application,

    /**
     * The ApplicationArtifact model constructor.
     * @property {module:model/ApplicationArtifact}
     */
    ApplicationArtifact,

    /**
     * The ApplicationArtifactName model constructor.
     * @property {module:model/ApplicationArtifactName}
     */
    ApplicationArtifactName,

    /**
     * The ApplicationArtifactType model constructor.
     * @property {module:model/ApplicationArtifactType}
     */
    ApplicationArtifactType,

    /**
     * The ApplicationAuthorization model constructor.
     * @property {module:model/ApplicationAuthorization}
     */
    ApplicationAuthorization,

    /**
     * The ApplicationBillingDetailsDefinition model constructor.
     * @property {module:model/ApplicationBillingDetailsDefinition}
     */
    ApplicationBillingDetailsDefinition,

    /**
     * The ApplicationClientDetails model constructor.
     * @property {module:model/ApplicationClientDetails}
     */
    ApplicationClientDetails,

    /**
     * The ApplicationDefinition model constructor.
     * @property {module:model/ApplicationDefinition}
     */
    ApplicationDefinition,

    /**
     * The ApplicationDefinitionArtifact model constructor.
     * @property {module:model/ApplicationDefinitionArtifact}
     */
    ApplicationDefinitionArtifact,

    /**
     * The ApplicationDefinitionArtifactName model constructor.
     * @property {module:model/ApplicationDefinitionArtifactName}
     */
    ApplicationDefinitionArtifactName,

    /**
     * The ApplicationDefinitionListResult model constructor.
     * @property {module:model/ApplicationDefinitionListResult}
     */
    ApplicationDefinitionListResult,

    /**
     * The ApplicationDefinitionProperties model constructor.
     * @property {module:model/ApplicationDefinitionProperties}
     */
    ApplicationDefinitionProperties,

    /**
     * The ApplicationDeploymentPolicy model constructor.
     * @property {module:model/ApplicationDeploymentPolicy}
     */
    ApplicationDeploymentPolicy,

    /**
     * The ApplicationJitAccessPolicy model constructor.
     * @property {module:model/ApplicationJitAccessPolicy}
     */
    ApplicationJitAccessPolicy,

    /**
     * The ApplicationListResult model constructor.
     * @property {module:model/ApplicationListResult}
     */
    ApplicationListResult,

    /**
     * The ApplicationLockLevel model constructor.
     * @property {module:model/ApplicationLockLevel}
     */
    ApplicationLockLevel,

    /**
     * The ApplicationManagementMode model constructor.
     * @property {module:model/ApplicationManagementMode}
     */
    ApplicationManagementMode,

    /**
     * The ApplicationManagementPolicy model constructor.
     * @property {module:model/ApplicationManagementPolicy}
     */
    ApplicationManagementPolicy,

    /**
     * The ApplicationNotificationEndpoint model constructor.
     * @property {module:model/ApplicationNotificationEndpoint}
     */
    ApplicationNotificationEndpoint,

    /**
     * The ApplicationNotificationPolicy model constructor.
     * @property {module:model/ApplicationNotificationPolicy}
     */
    ApplicationNotificationPolicy,

    /**
     * The ApplicationPackageContact model constructor.
     * @property {module:model/ApplicationPackageContact}
     */
    ApplicationPackageContact,

    /**
     * The ApplicationPackageLockingPolicyDefinition model constructor.
     * @property {module:model/ApplicationPackageLockingPolicyDefinition}
     */
    ApplicationPackageLockingPolicyDefinition,

    /**
     * The ApplicationPackageSupportUrls model constructor.
     * @property {module:model/ApplicationPackageSupportUrls}
     */
    ApplicationPackageSupportUrls,

    /**
     * The ApplicationPatchable model constructor.
     * @property {module:model/ApplicationPatchable}
     */
    ApplicationPatchable,

    /**
     * The ApplicationPolicy model constructor.
     * @property {module:model/ApplicationPolicy}
     */
    ApplicationPolicy,

    /**
     * The ApplicationProperties model constructor.
     * @property {module:model/ApplicationProperties}
     */
    ApplicationProperties,

    /**
     * The ApplicationPropertiesPatchable model constructor.
     * @property {module:model/ApplicationPropertiesPatchable}
     */
    ApplicationPropertiesPatchable,

    /**
     * The DeploymentMode model constructor.
     * @property {module:model/DeploymentMode}
     */
    DeploymentMode,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The GenericResource model constructor.
     * @property {module:model/GenericResource}
     */
    GenericResource,

    /**
     * The Identity model constructor.
     * @property {module:model/Identity}
     */
    Identity,

    /**
     * The JitApprovalMode model constructor.
     * @property {module:model/JitApprovalMode}
     */
    JitApprovalMode,

    /**
     * The JitApproverDefinition model constructor.
     * @property {module:model/JitApproverDefinition}
     */
    JitApproverDefinition,

    /**
     * The JitAuthorizationPolicies model constructor.
     * @property {module:model/JitAuthorizationPolicies}
     */
    JitAuthorizationPolicies,

    /**
     * The JitRequestDefinition model constructor.
     * @property {module:model/JitRequestDefinition}
     */
    JitRequestDefinition,

    /**
     * The JitRequestDefinitionListResult model constructor.
     * @property {module:model/JitRequestDefinitionListResult}
     */
    JitRequestDefinitionListResult,

    /**
     * The JitRequestPatchable model constructor.
     * @property {module:model/JitRequestPatchable}
     */
    JitRequestPatchable,

    /**
     * The JitRequestProperties model constructor.
     * @property {module:model/JitRequestProperties}
     */
    JitRequestProperties,

    /**
     * The JitRequestState model constructor.
     * @property {module:model/JitRequestState}
     */
    JitRequestState,

    /**
     * The JitSchedulingPolicy model constructor.
     * @property {module:model/JitSchedulingPolicy}
     */
    JitSchedulingPolicy,

    /**
     * The JitSchedulingType model constructor.
     * @property {module:model/JitSchedulingType}
     */
    JitSchedulingType,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The Plan model constructor.
     * @property {module:model/Plan}
     */
    Plan,

    /**
     * The PlanPatchable model constructor.
     * @property {module:model/PlanPatchable}
     */
    PlanPatchable,

    /**
     * The ProvisioningState model constructor.
     * @property {module:model/ProvisioningState}
     */
    ProvisioningState,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The Sku model constructor.
     * @property {module:model/Sku}
     */
    Sku,

    /**
    * The ApplicationDefinitionsApi service constructor.
    * @property {module:api/ApplicationDefinitionsApi}
    */
    ApplicationDefinitionsApi,

    /**
    * The ApplicationsApi service constructor.
    * @property {module:api/ApplicationsApi}
    */
    ApplicationsApi,

    /**
    * The JitRequestsApi service constructor.
    * @property {module:api/JitRequestsApi}
    */
    JitRequestsApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi
};
