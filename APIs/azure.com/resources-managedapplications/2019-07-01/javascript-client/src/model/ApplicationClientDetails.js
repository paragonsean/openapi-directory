/**
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationClientDetails model module.
 * @module model/ApplicationClientDetails
 * @version 2019-07-01
 */
class ApplicationClientDetails {
    /**
     * Constructs a new <code>ApplicationClientDetails</code>.
     * The application client details to track the entity creating/updating the managed app resource.
     * @alias module:model/ApplicationClientDetails
     */
    constructor() { 
        
        ApplicationClientDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationClientDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationClientDetails} obj Optional instance to populate.
     * @return {module:model/ApplicationClientDetails} The populated <code>ApplicationClientDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationClientDetails();

            if (data.hasOwnProperty('applicationId')) {
                obj['applicationId'] = ApiClient.convertToType(data['applicationId'], 'String');
            }
            if (data.hasOwnProperty('oid')) {
                obj['oid'] = ApiClient.convertToType(data['oid'], 'String');
            }
            if (data.hasOwnProperty('puid')) {
                obj['puid'] = ApiClient.convertToType(data['puid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationClientDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationClientDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['applicationId'] && !(typeof data['applicationId'] === 'string' || data['applicationId'] instanceof String)) {
            throw new Error("Expected the field `applicationId` to be a primitive type in the JSON string but got " + data['applicationId']);
        }
        // ensure the json data is a string
        if (data['oid'] && !(typeof data['oid'] === 'string' || data['oid'] instanceof String)) {
            throw new Error("Expected the field `oid` to be a primitive type in the JSON string but got " + data['oid']);
        }
        // ensure the json data is a string
        if (data['puid'] && !(typeof data['puid'] === 'string' || data['puid'] instanceof String)) {
            throw new Error("Expected the field `puid` to be a primitive type in the JSON string but got " + data['puid']);
        }

        return true;
    }


}



/**
 * The client application Id.
 * @member {String} applicationId
 */
ApplicationClientDetails.prototype['applicationId'] = undefined;

/**
 * The client Oid.
 * @member {String} oid
 */
ApplicationClientDetails.prototype['oid'] = undefined;

/**
 * The client Puid
 * @member {String} puid
 */
ApplicationClientDetails.prototype['puid'] = undefined;






export default ApplicationClientDetails;

