/**
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JitAuthorizationPolicies model module.
 * @module model/JitAuthorizationPolicies
 * @version 2019-07-01
 */
class JitAuthorizationPolicies {
    /**
     * Constructs a new <code>JitAuthorizationPolicies</code>.
     * The JIT authorization policies.
     * @alias module:model/JitAuthorizationPolicies
     * @param principalId {String} The the principal id that will be granted JIT access.
     * @param roleDefinitionId {String} The role definition id that will be granted to the Principal.
     */
    constructor(principalId, roleDefinitionId) { 
        
        JitAuthorizationPolicies.initialize(this, principalId, roleDefinitionId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, principalId, roleDefinitionId) { 
        obj['principalId'] = principalId;
        obj['roleDefinitionId'] = roleDefinitionId;
    }

    /**
     * Constructs a <code>JitAuthorizationPolicies</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JitAuthorizationPolicies} obj Optional instance to populate.
     * @return {module:model/JitAuthorizationPolicies} The populated <code>JitAuthorizationPolicies</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JitAuthorizationPolicies();

            if (data.hasOwnProperty('principalId')) {
                obj['principalId'] = ApiClient.convertToType(data['principalId'], 'String');
            }
            if (data.hasOwnProperty('roleDefinitionId')) {
                obj['roleDefinitionId'] = ApiClient.convertToType(data['roleDefinitionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JitAuthorizationPolicies</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JitAuthorizationPolicies</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JitAuthorizationPolicies.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['principalId'] && !(typeof data['principalId'] === 'string' || data['principalId'] instanceof String)) {
            throw new Error("Expected the field `principalId` to be a primitive type in the JSON string but got " + data['principalId']);
        }
        // ensure the json data is a string
        if (data['roleDefinitionId'] && !(typeof data['roleDefinitionId'] === 'string' || data['roleDefinitionId'] instanceof String)) {
            throw new Error("Expected the field `roleDefinitionId` to be a primitive type in the JSON string but got " + data['roleDefinitionId']);
        }

        return true;
    }


}

JitAuthorizationPolicies.RequiredProperties = ["principalId", "roleDefinitionId"];

/**
 * The the principal id that will be granted JIT access.
 * @member {String} principalId
 */
JitAuthorizationPolicies.prototype['principalId'] = undefined;

/**
 * The role definition id that will be granted to the Principal.
 * @member {String} roleDefinitionId
 */
JitAuthorizationPolicies.prototype['roleDefinitionId'] = undefined;






export default JitAuthorizationPolicies;

