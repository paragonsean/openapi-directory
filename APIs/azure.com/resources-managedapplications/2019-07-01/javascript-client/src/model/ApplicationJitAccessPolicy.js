/**
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JitApprovalMode from './JitApprovalMode';
import JitApproverDefinition from './JitApproverDefinition';

/**
 * The ApplicationJitAccessPolicy model module.
 * @module model/ApplicationJitAccessPolicy
 * @version 2019-07-01
 */
class ApplicationJitAccessPolicy {
    /**
     * Constructs a new <code>ApplicationJitAccessPolicy</code>.
     * Managed application Jit access policy.
     * @alias module:model/ApplicationJitAccessPolicy
     * @param jitAccessEnabled {Boolean} Whether the JIT access is enabled.
     */
    constructor(jitAccessEnabled) { 
        
        ApplicationJitAccessPolicy.initialize(this, jitAccessEnabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, jitAccessEnabled) { 
        obj['jitAccessEnabled'] = jitAccessEnabled;
    }

    /**
     * Constructs a <code>ApplicationJitAccessPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationJitAccessPolicy} obj Optional instance to populate.
     * @return {module:model/ApplicationJitAccessPolicy} The populated <code>ApplicationJitAccessPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationJitAccessPolicy();

            if (data.hasOwnProperty('jitAccessEnabled')) {
                obj['jitAccessEnabled'] = ApiClient.convertToType(data['jitAccessEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('jitApprovalMode')) {
                obj['jitApprovalMode'] = JitApprovalMode.constructFromObject(data['jitApprovalMode']);
            }
            if (data.hasOwnProperty('jitApprovers')) {
                obj['jitApprovers'] = ApiClient.convertToType(data['jitApprovers'], [JitApproverDefinition]);
            }
            if (data.hasOwnProperty('maximumJitAccessDuration')) {
                obj['maximumJitAccessDuration'] = ApiClient.convertToType(data['maximumJitAccessDuration'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationJitAccessPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationJitAccessPolicy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApplicationJitAccessPolicy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['jitApprovers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['jitApprovers'])) {
                throw new Error("Expected the field `jitApprovers` to be an array in the JSON data but got " + data['jitApprovers']);
            }
            // validate the optional field `jitApprovers` (array)
            for (const item of data['jitApprovers']) {
                JitApproverDefinition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['maximumJitAccessDuration'] && !(typeof data['maximumJitAccessDuration'] === 'string' || data['maximumJitAccessDuration'] instanceof String)) {
            throw new Error("Expected the field `maximumJitAccessDuration` to be a primitive type in the JSON string but got " + data['maximumJitAccessDuration']);
        }

        return true;
    }


}

ApplicationJitAccessPolicy.RequiredProperties = ["jitAccessEnabled"];

/**
 * Whether the JIT access is enabled.
 * @member {Boolean} jitAccessEnabled
 */
ApplicationJitAccessPolicy.prototype['jitAccessEnabled'] = undefined;

/**
 * @member {module:model/JitApprovalMode} jitApprovalMode
 */
ApplicationJitAccessPolicy.prototype['jitApprovalMode'] = undefined;

/**
 * The JIT approvers
 * @member {Array.<module:model/JitApproverDefinition>} jitApprovers
 */
ApplicationJitAccessPolicy.prototype['jitApprovers'] = undefined;

/**
 * The maximum duration JIT access is granted. This is an ISO8601 time period value.
 * @member {String} maximumJitAccessDuration
 */
ApplicationJitAccessPolicy.prototype['maximumJitAccessDuration'] = undefined;






export default ApplicationJitAccessPolicy;

