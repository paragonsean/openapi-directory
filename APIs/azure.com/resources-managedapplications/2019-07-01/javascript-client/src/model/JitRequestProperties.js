/**
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationClientDetails from './ApplicationClientDetails';
import JitAuthorizationPolicies from './JitAuthorizationPolicies';
import JitRequestState from './JitRequestState';
import JitSchedulingPolicy from './JitSchedulingPolicy';
import ProvisioningState from './ProvisioningState';

/**
 * The JitRequestProperties model module.
 * @module model/JitRequestProperties
 * @version 2019-07-01
 */
class JitRequestProperties {
    /**
     * Constructs a new <code>JitRequestProperties</code>.
     * Information about JIT request properties
     * @alias module:model/JitRequestProperties
     * @param applicationResourceId {String} The parent application id.
     * @param jitAuthorizationPolicies {Array.<module:model/JitAuthorizationPolicies>} The JIT authorization policies.
     * @param jitSchedulingPolicy {module:model/JitSchedulingPolicy} 
     */
    constructor(applicationResourceId, jitAuthorizationPolicies, jitSchedulingPolicy) { 
        
        JitRequestProperties.initialize(this, applicationResourceId, jitAuthorizationPolicies, jitSchedulingPolicy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationResourceId, jitAuthorizationPolicies, jitSchedulingPolicy) { 
        obj['applicationResourceId'] = applicationResourceId;
        obj['jitAuthorizationPolicies'] = jitAuthorizationPolicies;
        obj['jitSchedulingPolicy'] = jitSchedulingPolicy;
    }

    /**
     * Constructs a <code>JitRequestProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JitRequestProperties} obj Optional instance to populate.
     * @return {module:model/JitRequestProperties} The populated <code>JitRequestProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JitRequestProperties();

            if (data.hasOwnProperty('applicationResourceId')) {
                obj['applicationResourceId'] = ApiClient.convertToType(data['applicationResourceId'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApplicationClientDetails.constructFromObject(data['createdBy']);
            }
            if (data.hasOwnProperty('jitAuthorizationPolicies')) {
                obj['jitAuthorizationPolicies'] = ApiClient.convertToType(data['jitAuthorizationPolicies'], [JitAuthorizationPolicies]);
            }
            if (data.hasOwnProperty('jitRequestState')) {
                obj['jitRequestState'] = JitRequestState.constructFromObject(data['jitRequestState']);
            }
            if (data.hasOwnProperty('jitSchedulingPolicy')) {
                obj['jitSchedulingPolicy'] = JitSchedulingPolicy.constructFromObject(data['jitSchedulingPolicy']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ProvisioningState.constructFromObject(data['provisioningState']);
            }
            if (data.hasOwnProperty('publisherTenantId')) {
                obj['publisherTenantId'] = ApiClient.convertToType(data['publisherTenantId'], 'String');
            }
            if (data.hasOwnProperty('updatedBy')) {
                obj['updatedBy'] = ApplicationClientDetails.constructFromObject(data['updatedBy']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JitRequestProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JitRequestProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JitRequestProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['applicationResourceId'] && !(typeof data['applicationResourceId'] === 'string' || data['applicationResourceId'] instanceof String)) {
            throw new Error("Expected the field `applicationResourceId` to be a primitive type in the JSON string but got " + data['applicationResourceId']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          ApplicationClientDetails.validateJSON(data['createdBy']);
        }
        if (data['jitAuthorizationPolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['jitAuthorizationPolicies'])) {
                throw new Error("Expected the field `jitAuthorizationPolicies` to be an array in the JSON data but got " + data['jitAuthorizationPolicies']);
            }
            // validate the optional field `jitAuthorizationPolicies` (array)
            for (const item of data['jitAuthorizationPolicies']) {
                JitAuthorizationPolicies.validateJSON(item);
            };
        }
        // validate the optional field `jitSchedulingPolicy`
        if (data['jitSchedulingPolicy']) { // data not null
          JitSchedulingPolicy.validateJSON(data['jitSchedulingPolicy']);
        }
        // ensure the json data is a string
        if (data['publisherTenantId'] && !(typeof data['publisherTenantId'] === 'string' || data['publisherTenantId'] instanceof String)) {
            throw new Error("Expected the field `publisherTenantId` to be a primitive type in the JSON string but got " + data['publisherTenantId']);
        }
        // validate the optional field `updatedBy`
        if (data['updatedBy']) { // data not null
          ApplicationClientDetails.validateJSON(data['updatedBy']);
        }

        return true;
    }


}

JitRequestProperties.RequiredProperties = ["applicationResourceId", "jitAuthorizationPolicies", "jitSchedulingPolicy"];

/**
 * The parent application id.
 * @member {String} applicationResourceId
 */
JitRequestProperties.prototype['applicationResourceId'] = undefined;

/**
 * @member {module:model/ApplicationClientDetails} createdBy
 */
JitRequestProperties.prototype['createdBy'] = undefined;

/**
 * The JIT authorization policies.
 * @member {Array.<module:model/JitAuthorizationPolicies>} jitAuthorizationPolicies
 */
JitRequestProperties.prototype['jitAuthorizationPolicies'] = undefined;

/**
 * @member {module:model/JitRequestState} jitRequestState
 */
JitRequestProperties.prototype['jitRequestState'] = undefined;

/**
 * @member {module:model/JitSchedulingPolicy} jitSchedulingPolicy
 */
JitRequestProperties.prototype['jitSchedulingPolicy'] = undefined;

/**
 * @member {module:model/ProvisioningState} provisioningState
 */
JitRequestProperties.prototype['provisioningState'] = undefined;

/**
 * The publisher tenant id.
 * @member {String} publisherTenantId
 */
JitRequestProperties.prototype['publisherTenantId'] = undefined;

/**
 * @member {module:model/ApplicationClientDetails} updatedBy
 */
JitRequestProperties.prototype['updatedBy'] = undefined;






export default JitRequestProperties;

