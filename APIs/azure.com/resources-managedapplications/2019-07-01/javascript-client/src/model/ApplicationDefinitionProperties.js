/**
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationAuthorization from './ApplicationAuthorization';
import ApplicationDefinitionArtifact from './ApplicationDefinitionArtifact';
import ApplicationDeploymentPolicy from './ApplicationDeploymentPolicy';
import ApplicationLockLevel from './ApplicationLockLevel';
import ApplicationManagementPolicy from './ApplicationManagementPolicy';
import ApplicationNotificationPolicy from './ApplicationNotificationPolicy';
import ApplicationPackageLockingPolicyDefinition from './ApplicationPackageLockingPolicyDefinition';
import ApplicationPolicy from './ApplicationPolicy';

/**
 * The ApplicationDefinitionProperties model module.
 * @module model/ApplicationDefinitionProperties
 * @version 2019-07-01
 */
class ApplicationDefinitionProperties {
    /**
     * Constructs a new <code>ApplicationDefinitionProperties</code>.
     * The managed application definition properties.
     * @alias module:model/ApplicationDefinitionProperties
     * @param lockLevel {module:model/ApplicationLockLevel} 
     */
    constructor(lockLevel) { 
        
        ApplicationDefinitionProperties.initialize(this, lockLevel);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, lockLevel) { 
        obj['lockLevel'] = lockLevel;
    }

    /**
     * Constructs a <code>ApplicationDefinitionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationDefinitionProperties} obj Optional instance to populate.
     * @return {module:model/ApplicationDefinitionProperties} The populated <code>ApplicationDefinitionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationDefinitionProperties();

            if (data.hasOwnProperty('artifacts')) {
                obj['artifacts'] = ApiClient.convertToType(data['artifacts'], [ApplicationDefinitionArtifact]);
            }
            if (data.hasOwnProperty('authorizations')) {
                obj['authorizations'] = ApiClient.convertToType(data['authorizations'], [ApplicationAuthorization]);
            }
            if (data.hasOwnProperty('createUiDefinition')) {
                obj['createUiDefinition'] = ApiClient.convertToType(data['createUiDefinition'], Object);
            }
            if (data.hasOwnProperty('deploymentPolicy')) {
                obj['deploymentPolicy'] = ApplicationDeploymentPolicy.constructFromObject(data['deploymentPolicy']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('isEnabled')) {
                obj['isEnabled'] = ApiClient.convertToType(data['isEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('lockLevel')) {
                obj['lockLevel'] = ApplicationLockLevel.constructFromObject(data['lockLevel']);
            }
            if (data.hasOwnProperty('lockingPolicy')) {
                obj['lockingPolicy'] = ApplicationPackageLockingPolicyDefinition.constructFromObject(data['lockingPolicy']);
            }
            if (data.hasOwnProperty('mainTemplate')) {
                obj['mainTemplate'] = ApiClient.convertToType(data['mainTemplate'], Object);
            }
            if (data.hasOwnProperty('managementPolicy')) {
                obj['managementPolicy'] = ApplicationManagementPolicy.constructFromObject(data['managementPolicy']);
            }
            if (data.hasOwnProperty('notificationPolicy')) {
                obj['notificationPolicy'] = ApplicationNotificationPolicy.constructFromObject(data['notificationPolicy']);
            }
            if (data.hasOwnProperty('packageFileUri')) {
                obj['packageFileUri'] = ApiClient.convertToType(data['packageFileUri'], 'String');
            }
            if (data.hasOwnProperty('policies')) {
                obj['policies'] = ApiClient.convertToType(data['policies'], [ApplicationPolicy]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationDefinitionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationDefinitionProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApplicationDefinitionProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['artifacts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['artifacts'])) {
                throw new Error("Expected the field `artifacts` to be an array in the JSON data but got " + data['artifacts']);
            }
            // validate the optional field `artifacts` (array)
            for (const item of data['artifacts']) {
                ApplicationDefinitionArtifact.validateJSON(item);
            };
        }
        if (data['authorizations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['authorizations'])) {
                throw new Error("Expected the field `authorizations` to be an array in the JSON data but got " + data['authorizations']);
            }
            // validate the optional field `authorizations` (array)
            for (const item of data['authorizations']) {
                ApplicationAuthorization.validateJSON(item);
            };
        }
        // validate the optional field `deploymentPolicy`
        if (data['deploymentPolicy']) { // data not null
          ApplicationDeploymentPolicy.validateJSON(data['deploymentPolicy']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `lockingPolicy`
        if (data['lockingPolicy']) { // data not null
          ApplicationPackageLockingPolicyDefinition.validateJSON(data['lockingPolicy']);
        }
        // validate the optional field `managementPolicy`
        if (data['managementPolicy']) { // data not null
          ApplicationManagementPolicy.validateJSON(data['managementPolicy']);
        }
        // validate the optional field `notificationPolicy`
        if (data['notificationPolicy']) { // data not null
          ApplicationNotificationPolicy.validateJSON(data['notificationPolicy']);
        }
        // ensure the json data is a string
        if (data['packageFileUri'] && !(typeof data['packageFileUri'] === 'string' || data['packageFileUri'] instanceof String)) {
            throw new Error("Expected the field `packageFileUri` to be a primitive type in the JSON string but got " + data['packageFileUri']);
        }
        if (data['policies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['policies'])) {
                throw new Error("Expected the field `policies` to be an array in the JSON data but got " + data['policies']);
            }
            // validate the optional field `policies` (array)
            for (const item of data['policies']) {
                ApplicationPolicy.validateJSON(item);
            };
        }

        return true;
    }


}

ApplicationDefinitionProperties.RequiredProperties = ["lockLevel"];

/**
 * The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
 * @member {Array.<module:model/ApplicationDefinitionArtifact>} artifacts
 */
ApplicationDefinitionProperties.prototype['artifacts'] = undefined;

/**
 * The managed application provider authorizations.
 * @member {Array.<module:model/ApplicationAuthorization>} authorizations
 */
ApplicationDefinitionProperties.prototype['authorizations'] = undefined;

/**
 * The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
 * @member {Object} createUiDefinition
 */
ApplicationDefinitionProperties.prototype['createUiDefinition'] = undefined;

/**
 * @member {module:model/ApplicationDeploymentPolicy} deploymentPolicy
 */
ApplicationDefinitionProperties.prototype['deploymentPolicy'] = undefined;

/**
 * The managed application definition description.
 * @member {String} description
 */
ApplicationDefinitionProperties.prototype['description'] = undefined;

/**
 * The managed application definition display name.
 * @member {String} displayName
 */
ApplicationDefinitionProperties.prototype['displayName'] = undefined;

/**
 * A value indicating whether the package is enabled or not.
 * @member {Boolean} isEnabled
 */
ApplicationDefinitionProperties.prototype['isEnabled'] = undefined;

/**
 * @member {module:model/ApplicationLockLevel} lockLevel
 */
ApplicationDefinitionProperties.prototype['lockLevel'] = undefined;

/**
 * @member {module:model/ApplicationPackageLockingPolicyDefinition} lockingPolicy
 */
ApplicationDefinitionProperties.prototype['lockingPolicy'] = undefined;

/**
 * The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
 * @member {Object} mainTemplate
 */
ApplicationDefinitionProperties.prototype['mainTemplate'] = undefined;

/**
 * @member {module:model/ApplicationManagementPolicy} managementPolicy
 */
ApplicationDefinitionProperties.prototype['managementPolicy'] = undefined;

/**
 * @member {module:model/ApplicationNotificationPolicy} notificationPolicy
 */
ApplicationDefinitionProperties.prototype['notificationPolicy'] = undefined;

/**
 * The managed application definition package file Uri. Use this element
 * @member {String} packageFileUri
 */
ApplicationDefinitionProperties.prototype['packageFileUri'] = undefined;

/**
 * The managed application provider policies.
 * @member {Array.<module:model/ApplicationPolicy>} policies
 */
ApplicationDefinitionProperties.prototype['policies'] = undefined;






export default ApplicationDefinitionProperties;

