/**
 * ApplicationClient
 * ARM applications
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationArtifact from './ApplicationArtifact';
import ApplicationAuthorization from './ApplicationAuthorization';
import ApplicationBillingDetailsDefinition from './ApplicationBillingDetailsDefinition';
import ApplicationClientDetails from './ApplicationClientDetails';
import ApplicationJitAccessPolicy from './ApplicationJitAccessPolicy';
import ApplicationManagementMode from './ApplicationManagementMode';
import ApplicationPackageContact from './ApplicationPackageContact';
import ApplicationPackageSupportUrls from './ApplicationPackageSupportUrls';
import ProvisioningState from './ProvisioningState';

/**
 * The ApplicationProperties model module.
 * @module model/ApplicationProperties
 * @version 2019-07-01
 */
class ApplicationProperties {
    /**
     * Constructs a new <code>ApplicationProperties</code>.
     * The managed application properties.
     * @alias module:model/ApplicationProperties
     */
    constructor() { 
        
        ApplicationProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationProperties} obj Optional instance to populate.
     * @return {module:model/ApplicationProperties} The populated <code>ApplicationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationProperties();

            if (data.hasOwnProperty('applicationDefinitionId')) {
                obj['applicationDefinitionId'] = ApiClient.convertToType(data['applicationDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('artifacts')) {
                obj['artifacts'] = ApiClient.convertToType(data['artifacts'], [ApplicationArtifact]);
            }
            if (data.hasOwnProperty('authorizations')) {
                obj['authorizations'] = ApiClient.convertToType(data['authorizations'], [ApplicationAuthorization]);
            }
            if (data.hasOwnProperty('billingDetails')) {
                obj['billingDetails'] = ApplicationBillingDetailsDefinition.constructFromObject(data['billingDetails']);
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApplicationClientDetails.constructFromObject(data['createdBy']);
            }
            if (data.hasOwnProperty('customerSupport')) {
                obj['customerSupport'] = ApplicationPackageContact.constructFromObject(data['customerSupport']);
            }
            if (data.hasOwnProperty('jitAccessPolicy')) {
                obj['jitAccessPolicy'] = ApplicationJitAccessPolicy.constructFromObject(data['jitAccessPolicy']);
            }
            if (data.hasOwnProperty('managedResourceGroupId')) {
                obj['managedResourceGroupId'] = ApiClient.convertToType(data['managedResourceGroupId'], 'String');
            }
            if (data.hasOwnProperty('managementMode')) {
                obj['managementMode'] = ApplicationManagementMode.constructFromObject(data['managementMode']);
            }
            if (data.hasOwnProperty('outputs')) {
                obj['outputs'] = ApiClient.convertToType(data['outputs'], Object);
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], Object);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ProvisioningState.constructFromObject(data['provisioningState']);
            }
            if (data.hasOwnProperty('publisherTenantId')) {
                obj['publisherTenantId'] = ApiClient.convertToType(data['publisherTenantId'], 'String');
            }
            if (data.hasOwnProperty('supportUrls')) {
                obj['supportUrls'] = ApplicationPackageSupportUrls.constructFromObject(data['supportUrls']);
            }
            if (data.hasOwnProperty('updatedBy')) {
                obj['updatedBy'] = ApplicationClientDetails.constructFromObject(data['updatedBy']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['applicationDefinitionId'] && !(typeof data['applicationDefinitionId'] === 'string' || data['applicationDefinitionId'] instanceof String)) {
            throw new Error("Expected the field `applicationDefinitionId` to be a primitive type in the JSON string but got " + data['applicationDefinitionId']);
        }
        if (data['artifacts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['artifacts'])) {
                throw new Error("Expected the field `artifacts` to be an array in the JSON data but got " + data['artifacts']);
            }
            // validate the optional field `artifacts` (array)
            for (const item of data['artifacts']) {
                ApplicationArtifact.validateJSON(item);
            };
        }
        if (data['authorizations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['authorizations'])) {
                throw new Error("Expected the field `authorizations` to be an array in the JSON data but got " + data['authorizations']);
            }
            // validate the optional field `authorizations` (array)
            for (const item of data['authorizations']) {
                ApplicationAuthorization.validateJSON(item);
            };
        }
        // validate the optional field `billingDetails`
        if (data['billingDetails']) { // data not null
          ApplicationBillingDetailsDefinition.validateJSON(data['billingDetails']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          ApplicationClientDetails.validateJSON(data['createdBy']);
        }
        // validate the optional field `customerSupport`
        if (data['customerSupport']) { // data not null
          ApplicationPackageContact.validateJSON(data['customerSupport']);
        }
        // validate the optional field `jitAccessPolicy`
        if (data['jitAccessPolicy']) { // data not null
          ApplicationJitAccessPolicy.validateJSON(data['jitAccessPolicy']);
        }
        // ensure the json data is a string
        if (data['managedResourceGroupId'] && !(typeof data['managedResourceGroupId'] === 'string' || data['managedResourceGroupId'] instanceof String)) {
            throw new Error("Expected the field `managedResourceGroupId` to be a primitive type in the JSON string but got " + data['managedResourceGroupId']);
        }
        // ensure the json data is a string
        if (data['publisherTenantId'] && !(typeof data['publisherTenantId'] === 'string' || data['publisherTenantId'] instanceof String)) {
            throw new Error("Expected the field `publisherTenantId` to be a primitive type in the JSON string but got " + data['publisherTenantId']);
        }
        // validate the optional field `supportUrls`
        if (data['supportUrls']) { // data not null
          ApplicationPackageSupportUrls.validateJSON(data['supportUrls']);
        }
        // validate the optional field `updatedBy`
        if (data['updatedBy']) { // data not null
          ApplicationClientDetails.validateJSON(data['updatedBy']);
        }

        return true;
    }


}



/**
 * The fully qualified path of managed application definition Id.
 * @member {String} applicationDefinitionId
 */
ApplicationProperties.prototype['applicationDefinitionId'] = undefined;

/**
 * The collection of managed application artifacts.
 * @member {Array.<module:model/ApplicationArtifact>} artifacts
 */
ApplicationProperties.prototype['artifacts'] = undefined;

/**
 * The  read-only authorizations property that is retrieved from the application package.
 * @member {Array.<module:model/ApplicationAuthorization>} authorizations
 */
ApplicationProperties.prototype['authorizations'] = undefined;

/**
 * @member {module:model/ApplicationBillingDetailsDefinition} billingDetails
 */
ApplicationProperties.prototype['billingDetails'] = undefined;

/**
 * @member {module:model/ApplicationClientDetails} createdBy
 */
ApplicationProperties.prototype['createdBy'] = undefined;

/**
 * @member {module:model/ApplicationPackageContact} customerSupport
 */
ApplicationProperties.prototype['customerSupport'] = undefined;

/**
 * @member {module:model/ApplicationJitAccessPolicy} jitAccessPolicy
 */
ApplicationProperties.prototype['jitAccessPolicy'] = undefined;

/**
 * The managed resource group Id.
 * @member {String} managedResourceGroupId
 */
ApplicationProperties.prototype['managedResourceGroupId'] = undefined;

/**
 * @member {module:model/ApplicationManagementMode} managementMode
 */
ApplicationProperties.prototype['managementMode'] = undefined;

/**
 * Name and value pairs that define the managed application outputs.
 * @member {Object} outputs
 */
ApplicationProperties.prototype['outputs'] = undefined;

/**
 * Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
 * @member {Object} parameters
 */
ApplicationProperties.prototype['parameters'] = undefined;

/**
 * @member {module:model/ProvisioningState} provisioningState
 */
ApplicationProperties.prototype['provisioningState'] = undefined;

/**
 * The publisher tenant Id.
 * @member {String} publisherTenantId
 */
ApplicationProperties.prototype['publisherTenantId'] = undefined;

/**
 * @member {module:model/ApplicationPackageSupportUrls} supportUrls
 */
ApplicationProperties.prototype['supportUrls'] = undefined;

/**
 * @member {module:model/ApplicationClientDetails} updatedBy
 */
ApplicationProperties.prototype['updatedBy'] = undefined;






export default ApplicationProperties;

