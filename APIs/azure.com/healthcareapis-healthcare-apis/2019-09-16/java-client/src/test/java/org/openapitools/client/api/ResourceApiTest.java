/*
 * HealthcareApisClient
 * Use this API to manage Microsoft HealthcareApis services in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-09-16
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorDetails;
import org.openapitools.client.model.OperationResultsDescription;
import org.openapitools.client.model.ServicesDescription;
import org.openapitools.client.model.ServicesPatchDescription;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ResourceApi
 */
@Disabled
public class ResourceApiTest {

    private final ResourceApi api = new ResourceApi();

    /**
     * Get the operation result for a long running operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationResultsGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String locationName = null;
        String operationResultId = null;
        OperationResultsDescription response = api.operationResultsGet(apiVersion, subscriptionId, locationName, operationResultId);
        // TODO: test validations
    }

    /**
     * Create or update the metadata of a service instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        ServicesDescription serviceDescription = null;
        ServicesDescription response = api.servicesCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, resourceName, serviceDescription);
        // TODO: test validations
    }

    /**
     * Delete a service instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesDeleteTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        api.servicesDelete(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

    /**
     * Get the metadata of a service instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        ServicesDescription response = api.servicesGet(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

    /**
     * Update the metadata of a service instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        ServicesPatchDescription servicePatchDescription = null;
        ServicesDescription response = api.servicesUpdate(apiVersion, subscriptionId, resourceGroupName, resourceName, servicePatchDescription);
        // TODO: test validations
    }

}
