/**
 * HealthcareApisClient
 * Use this API to manage Microsoft HealthcareApis services in your Azure subscription.
 *
 * The version of the OpenAPI document: 2019-09-16
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServicesProperties.h
 *
 * The properties of a service instance.
 */

#ifndef OAIServicesProperties_H
#define OAIServicesProperties_H

#include <QJsonObject>

#include "OAIServiceAccessPolicyEntry.h"
#include "OAIServiceAuthenticationConfigurationInfo.h"
#include "OAIServiceCorsConfigurationInfo.h"
#include "OAIServiceCosmosDbConfigurationInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIServiceAccessPolicyEntry;
class OAIServiceAuthenticationConfigurationInfo;
class OAIServiceCorsConfigurationInfo;
class OAIServiceCosmosDbConfigurationInfo;

class OAIServicesProperties : public OAIObject {
public:
    OAIServicesProperties();
    OAIServicesProperties(QString json);
    ~OAIServicesProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIServiceAccessPolicyEntry> getAccessPolicies() const;
    void setAccessPolicies(const QList<OAIServiceAccessPolicyEntry> &access_policies);
    bool is_access_policies_Set() const;
    bool is_access_policies_Valid() const;

    OAIServiceAuthenticationConfigurationInfo getAuthenticationConfiguration() const;
    void setAuthenticationConfiguration(const OAIServiceAuthenticationConfigurationInfo &authentication_configuration);
    bool is_authentication_configuration_Set() const;
    bool is_authentication_configuration_Valid() const;

    OAIServiceCorsConfigurationInfo getCorsConfiguration() const;
    void setCorsConfiguration(const OAIServiceCorsConfigurationInfo &cors_configuration);
    bool is_cors_configuration_Set() const;
    bool is_cors_configuration_Valid() const;

    OAIServiceCosmosDbConfigurationInfo getCosmosDbConfiguration() const;
    void setCosmosDbConfiguration(const OAIServiceCosmosDbConfigurationInfo &cosmos_db_configuration);
    bool is_cosmos_db_configuration_Set() const;
    bool is_cosmos_db_configuration_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIServiceAccessPolicyEntry> m_access_policies;
    bool m_access_policies_isSet;
    bool m_access_policies_isValid;

    OAIServiceAuthenticationConfigurationInfo m_authentication_configuration;
    bool m_authentication_configuration_isSet;
    bool m_authentication_configuration_isValid;

    OAIServiceCorsConfigurationInfo m_cors_configuration;
    bool m_cors_configuration_isSet;
    bool m_cors_configuration_isValid;

    OAIServiceCosmosDbConfigurationInfo m_cosmos_db_configuration;
    bool m_cosmos_db_configuration_isSet;
    bool m_cosmos_db_configuration_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServicesProperties)

#endif // OAIServicesProperties_H
