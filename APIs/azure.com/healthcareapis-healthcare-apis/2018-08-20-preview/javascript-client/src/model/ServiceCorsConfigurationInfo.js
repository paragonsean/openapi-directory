/**
 * HealthcareApisClient
 * Use this API to manage Microsoft HealthcareApis services in your Azure subscription.
 *
 * The version of the OpenAPI document: 2018-08-20-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceCorsConfigurationInfo model module.
 * @module model/ServiceCorsConfigurationInfo
 * @version 2018-08-20-preview
 */
class ServiceCorsConfigurationInfo {
    /**
     * Constructs a new <code>ServiceCorsConfigurationInfo</code>.
     * The settings for the CORS configuration of the service instance.
     * @alias module:model/ServiceCorsConfigurationInfo
     */
    constructor() { 
        
        ServiceCorsConfigurationInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceCorsConfigurationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceCorsConfigurationInfo} obj Optional instance to populate.
     * @return {module:model/ServiceCorsConfigurationInfo} The populated <code>ServiceCorsConfigurationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceCorsConfigurationInfo();

            if (data.hasOwnProperty('allowCredentials')) {
                obj['allowCredentials'] = ApiClient.convertToType(data['allowCredentials'], 'Boolean');
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], ['String']);
            }
            if (data.hasOwnProperty('maxAge')) {
                obj['maxAge'] = ApiClient.convertToType(data['maxAge'], 'Number');
            }
            if (data.hasOwnProperty('methods')) {
                obj['methods'] = ApiClient.convertToType(data['methods'], ['String']);
            }
            if (data.hasOwnProperty('origins')) {
                obj['origins'] = ApiClient.convertToType(data['origins'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceCorsConfigurationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceCorsConfigurationInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['headers'])) {
            throw new Error("Expected the field `headers` to be an array in the JSON data but got " + data['headers']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['methods'])) {
            throw new Error("Expected the field `methods` to be an array in the JSON data but got " + data['methods']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['origins'])) {
            throw new Error("Expected the field `origins` to be an array in the JSON data but got " + data['origins']);
        }

        return true;
    }


}



/**
 * If credentials are allowed via CORS.
 * @member {Boolean} allowCredentials
 */
ServiceCorsConfigurationInfo.prototype['allowCredentials'] = undefined;

/**
 * The headers to be allowed via CORS.
 * @member {Array.<String>} headers
 */
ServiceCorsConfigurationInfo.prototype['headers'] = undefined;

/**
 * The max age to be allowed via CORS.
 * @member {Number} maxAge
 */
ServiceCorsConfigurationInfo.prototype['maxAge'] = undefined;

/**
 * The methods to be allowed via CORS.
 * @member {Array.<String>} methods
 */
ServiceCorsConfigurationInfo.prototype['methods'] = undefined;

/**
 * The origins to be allowed via CORS.
 * @member {Array.<String>} origins
 */
ServiceCorsConfigurationInfo.prototype['origins'] = undefined;






export default ServiceCorsConfigurationInfo;

