# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.azure_managed_override_rule_group import AzureManagedOverrideRuleGroup
from openapi_server.models.managed_rule_set import ManagedRuleSet
from openapi_server import util


class AzureManagedRuleSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_group_overrides: List[AzureManagedOverrideRuleGroup]=None, priority: int=None, rule_set_type: str=None, version: int=None):
        """AzureManagedRuleSet - a model defined in OpenAPI

        :param rule_group_overrides: The rule_group_overrides of this AzureManagedRuleSet.
        :param priority: The priority of this AzureManagedRuleSet.
        :param rule_set_type: The rule_set_type of this AzureManagedRuleSet.
        :param version: The version of this AzureManagedRuleSet.
        """
        self.openapi_types = {
            'rule_group_overrides': List[AzureManagedOverrideRuleGroup],
            'priority': int,
            'rule_set_type': str,
            'version': int
        }

        self.attribute_map = {
            'rule_group_overrides': 'ruleGroupOverrides',
            'priority': 'priority',
            'rule_set_type': 'ruleSetType',
            'version': 'version'
        }

        self._rule_group_overrides = rule_group_overrides
        self._priority = priority
        self._rule_set_type = rule_set_type
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureManagedRuleSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureManagedRuleSet of this AzureManagedRuleSet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_group_overrides(self):
        """Gets the rule_group_overrides of this AzureManagedRuleSet.

        List of azure managed provider override configuration (optional)

        :return: The rule_group_overrides of this AzureManagedRuleSet.
        :rtype: List[AzureManagedOverrideRuleGroup]
        """
        return self._rule_group_overrides

    @rule_group_overrides.setter
    def rule_group_overrides(self, rule_group_overrides):
        """Sets the rule_group_overrides of this AzureManagedRuleSet.

        List of azure managed provider override configuration (optional)

        :param rule_group_overrides: The rule_group_overrides of this AzureManagedRuleSet.
        :type rule_group_overrides: List[AzureManagedOverrideRuleGroup]
        """

        self._rule_group_overrides = rule_group_overrides

    @property
    def priority(self):
        """Gets the priority of this AzureManagedRuleSet.

        Describes priority of the rule

        :return: The priority of this AzureManagedRuleSet.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this AzureManagedRuleSet.

        Describes priority of the rule

        :param priority: The priority of this AzureManagedRuleSet.
        :type priority: int
        """

        self._priority = priority

    @property
    def rule_set_type(self):
        """Gets the rule_set_type of this AzureManagedRuleSet.

        RuleSetType - AzureManagedRuleSet or OWASP RuleSets.

        :return: The rule_set_type of this AzureManagedRuleSet.
        :rtype: str
        """
        return self._rule_set_type

    @rule_set_type.setter
    def rule_set_type(self, rule_set_type):
        """Sets the rule_set_type of this AzureManagedRuleSet.

        RuleSetType - AzureManagedRuleSet or OWASP RuleSets.

        :param rule_set_type: The rule_set_type of this AzureManagedRuleSet.
        :type rule_set_type: str
        """
        if rule_set_type is None:
            raise ValueError("Invalid value for `rule_set_type`, must not be `None`")

        self._rule_set_type = rule_set_type

    @property
    def version(self):
        """Gets the version of this AzureManagedRuleSet.

        defines version of the rule set

        :return: The version of this AzureManagedRuleSet.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this AzureManagedRuleSet.

        defines version of the rule set

        :param version: The version of this AzureManagedRuleSet.
        :type version: int
        """

        self._version = version
