# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.managed_rule_set import ManagedRuleSet
from openapi_server import util


class ManagedRuleSets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_sets: List[ManagedRuleSet]=None):
        """ManagedRuleSets - a model defined in OpenAPI

        :param rule_sets: The rule_sets of this ManagedRuleSets.
        """
        self.openapi_types = {
            'rule_sets': List[ManagedRuleSet]
        }

        self.attribute_map = {
            'rule_sets': 'ruleSets'
        }

        self._rule_sets = rule_sets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedRuleSets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedRuleSets of this ManagedRuleSets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_sets(self):
        """Gets the rule_sets of this ManagedRuleSets.

        List of rules

        :return: The rule_sets of this ManagedRuleSets.
        :rtype: List[ManagedRuleSet]
        """
        return self._rule_sets

    @rule_sets.setter
    def rule_sets(self, rule_sets):
        """Sets the rule_sets of this ManagedRuleSets.

        List of rules

        :param rule_sets: The rule_sets of this ManagedRuleSets.
        :type rule_sets: List[ManagedRuleSet]
        """

        self._rule_sets = rule_sets
