# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AzureManagedOverrideRuleGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, rule_group_override: str=None):
        """AzureManagedOverrideRuleGroup - a model defined in OpenAPI

        :param action: The action of this AzureManagedOverrideRuleGroup.
        :param rule_group_override: The rule_group_override of this AzureManagedOverrideRuleGroup.
        """
        self.openapi_types = {
            'action': str,
            'rule_group_override': str
        }

        self.attribute_map = {
            'action': 'action',
            'rule_group_override': 'ruleGroupOverride'
        }

        self._action = action
        self._rule_group_override = rule_group_override

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureManagedOverrideRuleGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureManagedOverrideRuleGroup of this AzureManagedOverrideRuleGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this AzureManagedOverrideRuleGroup.

        Type of Actions

        :return: The action of this AzureManagedOverrideRuleGroup.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this AzureManagedOverrideRuleGroup.

        Type of Actions

        :param action: The action of this AzureManagedOverrideRuleGroup.
        :type action: str
        """
        allowed_values = ["Allow", "Block", "Log"]  # noqa: E501
        if action not in allowed_values:
            raise ValueError(
                "Invalid value for `action` ({0}), must be one of {1}"
                .format(action, allowed_values)
            )

        self._action = action

    @property
    def rule_group_override(self):
        """Gets the rule_group_override of this AzureManagedOverrideRuleGroup.

        Describes override rule group

        :return: The rule_group_override of this AzureManagedOverrideRuleGroup.
        :rtype: str
        """
        return self._rule_group_override

    @rule_group_override.setter
    def rule_group_override(self, rule_group_override):
        """Sets the rule_group_override of this AzureManagedOverrideRuleGroup.

        Describes override rule group

        :param rule_group_override: The rule_group_override of this AzureManagedOverrideRuleGroup.
        :type rule_group_override: str
        """
        allowed_values = ["SqlInjection", "XSS"]  # noqa: E501
        if rule_group_override not in allowed_values:
            raise ValueError(
                "Invalid value for `rule_group_override` ({0}), must be one of {1}"
                .format(rule_group_override, allowed_values)
            )

        self._rule_group_override = rule_group_override
