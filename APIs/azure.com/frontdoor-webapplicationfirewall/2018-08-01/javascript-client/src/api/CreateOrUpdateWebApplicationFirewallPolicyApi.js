/**
 * WebApplicationFirewallManagement
 * APIs to manage web application firewall rules
 *
 * The version of the OpenAPI document: 2018-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import WebApplicationFirewallPolicy from '../model/WebApplicationFirewallPolicy';

/**
* CreateOrUpdateWebApplicationFirewallPolicy service.
* @module api/CreateOrUpdateWebApplicationFirewallPolicyApi
* @version 2018-08-01
*/
export default class CreateOrUpdateWebApplicationFirewallPolicyApi {

    /**
    * Constructs a new CreateOrUpdateWebApplicationFirewallPolicyApi. 
    * @alias module:api/CreateOrUpdateWebApplicationFirewallPolicyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the policiesCreateOrUpdate operation.
     * @callback module:api/CreateOrUpdateWebApplicationFirewallPolicyApi~policiesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebApplicationFirewallPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or update policy with specified rule set name within a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} policyName The name of the resource group.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client API version.
     * @param {module:model/WebApplicationFirewallPolicy} parameters Policy to be created.
     * @param {module:api/CreateOrUpdateWebApplicationFirewallPolicyApi~policiesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebApplicationFirewallPolicy}
     */
    policiesCreateOrUpdate(resourceGroupName, policyName, subscriptionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling policiesCreateOrUpdate");
      }
      // verify the required parameter 'policyName' is set
      if (policyName === undefined || policyName === null) {
        throw new Error("Missing the required parameter 'policyName' when calling policiesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling policiesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling policiesCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling policiesCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'policyName': policyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WebApplicationFirewallPolicy;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/{policyName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
