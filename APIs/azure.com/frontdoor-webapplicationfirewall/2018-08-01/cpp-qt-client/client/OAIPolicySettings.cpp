/**
 * WebApplicationFirewallManagement
 * APIs to manage web application firewall rules
 *
 * The version of the OpenAPI document: 2018-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPolicySettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPolicySettings::OAIPolicySettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPolicySettings::OAIPolicySettings() {
    this->initializeModel();
}

OAIPolicySettings::~OAIPolicySettings() {}

void OAIPolicySettings::initializeModel() {

    m_enabled_state_isSet = false;
    m_enabled_state_isValid = false;

    m_mode_isSet = false;
    m_mode_isValid = false;
}

void OAIPolicySettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPolicySettings::fromJsonObject(QJsonObject json) {

    m_enabled_state_isValid = ::OpenAPI::fromJsonValue(m_enabled_state, json[QString("enabledState")]);
    m_enabled_state_isSet = !json[QString("enabledState")].isNull() && m_enabled_state_isValid;

    m_mode_isValid = ::OpenAPI::fromJsonValue(m_mode, json[QString("mode")]);
    m_mode_isSet = !json[QString("mode")].isNull() && m_mode_isValid;
}

QString OAIPolicySettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPolicySettings::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_state_isSet) {
        obj.insert(QString("enabledState"), ::OpenAPI::toJsonValue(m_enabled_state));
    }
    if (m_mode_isSet) {
        obj.insert(QString("mode"), ::OpenAPI::toJsonValue(m_mode));
    }
    return obj;
}

QString OAIPolicySettings::getEnabledState() const {
    return m_enabled_state;
}
void OAIPolicySettings::setEnabledState(const QString &enabled_state) {
    m_enabled_state = enabled_state;
    m_enabled_state_isSet = true;
}

bool OAIPolicySettings::is_enabled_state_Set() const{
    return m_enabled_state_isSet;
}

bool OAIPolicySettings::is_enabled_state_Valid() const{
    return m_enabled_state_isValid;
}

QString OAIPolicySettings::getMode() const {
    return m_mode;
}
void OAIPolicySettings::setMode(const QString &mode) {
    m_mode = mode;
    m_mode_isSet = true;
}

bool OAIPolicySettings::is_mode_Set() const{
    return m_mode_isSet;
}

bool OAIPolicySettings::is_mode_Valid() const{
    return m_mode_isValid;
}

bool OAIPolicySettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPolicySettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
