/**
 * WebApplicationFirewallManagement
 * APIs to manage web application firewall rules
 *
 * The version of the OpenAPI document: 2018-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomRule.h
 *
 * Defines contents of a web application rule
 */

#ifndef OAICustomRule_H
#define OAICustomRule_H

#include <QJsonObject>

#include "OAIMatchCondition.h"
#include "OAITransform.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMatchCondition;

class OAICustomRule : public OAIObject {
public:
    OAICustomRule();
    OAICustomRule(QString json);
    ~OAICustomRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QList<OAIMatchCondition> getMatchConditions() const;
    void setMatchConditions(const QList<OAIMatchCondition> &match_conditions);
    bool is_match_conditions_Set() const;
    bool is_match_conditions_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    qint32 getRateLimitDurationInMinutes() const;
    void setRateLimitDurationInMinutes(const qint32 &rate_limit_duration_in_minutes);
    bool is_rate_limit_duration_in_minutes_Set() const;
    bool is_rate_limit_duration_in_minutes_Valid() const;

    qint32 getRateLimitThreshold() const;
    void setRateLimitThreshold(const qint32 &rate_limit_threshold);
    bool is_rate_limit_threshold_Set() const;
    bool is_rate_limit_threshold_Valid() const;

    QString getRuleType() const;
    void setRuleType(const QString &rule_type);
    bool is_rule_type_Set() const;
    bool is_rule_type_Valid() const;

    QList<OAITransform> getTransforms() const;
    void setTransforms(const QList<OAITransform> &transforms);
    bool is_transforms_Set() const;
    bool is_transforms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QList<OAIMatchCondition> m_match_conditions;
    bool m_match_conditions_isSet;
    bool m_match_conditions_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    qint32 m_rate_limit_duration_in_minutes;
    bool m_rate_limit_duration_in_minutes_isSet;
    bool m_rate_limit_duration_in_minutes_isValid;

    qint32 m_rate_limit_threshold;
    bool m_rate_limit_threshold_isSet;
    bool m_rate_limit_threshold_isValid;

    QString m_rule_type;
    bool m_rule_type_isSet;
    bool m_rule_type_isValid;

    QList<OAITransform> m_transforms;
    bool m_transforms_isSet;
    bool m_transforms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomRule)

#endif // OAICustomRule_H
