/*
 * WebApplicationFirewallManagement
 * APIs to manage web application firewall rules
 *
 * The version of the OpenAPI document: 2018-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Base class for all types of ManagedRuleSet.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:01:58.352293-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ManagedRuleSet {
  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_RULE_SET_TYPE = "ruleSetType";
  @SerializedName(SERIALIZED_NAME_RULE_SET_TYPE)
  protected String ruleSetType;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public ManagedRuleSet() {
    this.ruleSetType = this.getClass().getSimpleName();
  }

  public ManagedRuleSet priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Describes priority of the rule
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public ManagedRuleSet ruleSetType(String ruleSetType) {
    this.ruleSetType = ruleSetType;
    return this;
  }

  /**
   * RuleSetType - AzureManagedRuleSet or OWASP RuleSets.
   * @return ruleSetType
   */
  @javax.annotation.Nonnull
  public String getRuleSetType() {
    return ruleSetType;
  }

  public void setRuleSetType(String ruleSetType) {
    this.ruleSetType = ruleSetType;
  }


  public ManagedRuleSet version(Integer version) {
    this.version = version;
    return this;
  }

  /**
   * defines version of the rule set
   * @return version
   */
  @javax.annotation.Nullable
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagedRuleSet managedRuleSet = (ManagedRuleSet) o;
    return Objects.equals(this.priority, managedRuleSet.priority) &&
        Objects.equals(this.ruleSetType, managedRuleSet.ruleSetType) &&
        Objects.equals(this.version, managedRuleSet.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(priority, ruleSetType, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagedRuleSet {\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    ruleSetType: ").append(toIndentedString(ruleSetType)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("priority");
    openapiFields.add("ruleSetType");
    openapiFields.add("version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ruleSetType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ManagedRuleSet
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ManagedRuleSet.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ManagedRuleSet is not found in the empty JSON string", ManagedRuleSet.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("ruleSetType").getAsString();
      switch (discriminatorValue) {
        case "AzureManagedRuleSet":
          AzureManagedRuleSet.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `ruleSetType` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of ManagedRuleSet given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ManagedRuleSet
   * @throws IOException if the JSON string is invalid with respect to ManagedRuleSet
   */
  public static ManagedRuleSet fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ManagedRuleSet.class);
  }

  /**
   * Convert an instance of ManagedRuleSet to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

