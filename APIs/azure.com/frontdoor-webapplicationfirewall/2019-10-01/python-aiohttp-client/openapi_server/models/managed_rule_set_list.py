# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.managed_rule_set import ManagedRuleSet
from openapi_server import util


class ManagedRuleSetList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, managed_rule_sets: List[ManagedRuleSet]=None):
        """ManagedRuleSetList - a model defined in OpenAPI

        :param managed_rule_sets: The managed_rule_sets of this ManagedRuleSetList.
        """
        self.openapi_types = {
            'managed_rule_sets': List[ManagedRuleSet]
        }

        self.attribute_map = {
            'managed_rule_sets': 'managedRuleSets'
        }

        self._managed_rule_sets = managed_rule_sets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedRuleSetList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedRuleSetList of this ManagedRuleSetList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def managed_rule_sets(self):
        """Gets the managed_rule_sets of this ManagedRuleSetList.

        List of rule sets.

        :return: The managed_rule_sets of this ManagedRuleSetList.
        :rtype: List[ManagedRuleSet]
        """
        return self._managed_rule_sets

    @managed_rule_sets.setter
    def managed_rule_sets(self, managed_rule_sets):
        """Sets the managed_rule_sets of this ManagedRuleSetList.

        List of rule sets.

        :param managed_rule_sets: The managed_rule_sets of this ManagedRuleSetList.
        :type managed_rule_sets: List[ManagedRuleSet]
        """

        self._managed_rule_sets = managed_rule_sets
