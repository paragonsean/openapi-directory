/**
 * WebApplicationFirewallManagement
 * APIs to manage web application firewall rules.
 *
 * The version of the OpenAPI document: 2019-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedRuleDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedRuleDefinition::OAIManagedRuleDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedRuleDefinition::OAIManagedRuleDefinition() {
    this->initializeModel();
}

OAIManagedRuleDefinition::~OAIManagedRuleDefinition() {}

void OAIManagedRuleDefinition::initializeModel() {

    m_default_action_isSet = false;
    m_default_action_isValid = false;

    m_default_state_isSet = false;
    m_default_state_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_rule_id_isSet = false;
    m_rule_id_isValid = false;
}

void OAIManagedRuleDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedRuleDefinition::fromJsonObject(QJsonObject json) {

    m_default_action_isValid = ::OpenAPI::fromJsonValue(m_default_action, json[QString("defaultAction")]);
    m_default_action_isSet = !json[QString("defaultAction")].isNull() && m_default_action_isValid;

    m_default_state_isValid = ::OpenAPI::fromJsonValue(m_default_state, json[QString("defaultState")]);
    m_default_state_isSet = !json[QString("defaultState")].isNull() && m_default_state_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_rule_id_isValid = ::OpenAPI::fromJsonValue(m_rule_id, json[QString("ruleId")]);
    m_rule_id_isSet = !json[QString("ruleId")].isNull() && m_rule_id_isValid;
}

QString OAIManagedRuleDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedRuleDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_default_action.isSet()) {
        obj.insert(QString("defaultAction"), ::OpenAPI::toJsonValue(m_default_action));
    }
    if (m_default_state.isSet()) {
        obj.insert(QString("defaultState"), ::OpenAPI::toJsonValue(m_default_state));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_rule_id_isSet) {
        obj.insert(QString("ruleId"), ::OpenAPI::toJsonValue(m_rule_id));
    }
    return obj;
}

OAIActionType OAIManagedRuleDefinition::getDefaultAction() const {
    return m_default_action;
}
void OAIManagedRuleDefinition::setDefaultAction(const OAIActionType &default_action) {
    m_default_action = default_action;
    m_default_action_isSet = true;
}

bool OAIManagedRuleDefinition::is_default_action_Set() const{
    return m_default_action_isSet;
}

bool OAIManagedRuleDefinition::is_default_action_Valid() const{
    return m_default_action_isValid;
}

OAIManagedRuleEnabledState OAIManagedRuleDefinition::getDefaultState() const {
    return m_default_state;
}
void OAIManagedRuleDefinition::setDefaultState(const OAIManagedRuleEnabledState &default_state) {
    m_default_state = default_state;
    m_default_state_isSet = true;
}

bool OAIManagedRuleDefinition::is_default_state_Set() const{
    return m_default_state_isSet;
}

bool OAIManagedRuleDefinition::is_default_state_Valid() const{
    return m_default_state_isValid;
}

QString OAIManagedRuleDefinition::getDescription() const {
    return m_description;
}
void OAIManagedRuleDefinition::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIManagedRuleDefinition::is_description_Set() const{
    return m_description_isSet;
}

bool OAIManagedRuleDefinition::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIManagedRuleDefinition::getRuleId() const {
    return m_rule_id;
}
void OAIManagedRuleDefinition::setRuleId(const QString &rule_id) {
    m_rule_id = rule_id;
    m_rule_id_isSet = true;
}

bool OAIManagedRuleDefinition::is_rule_id_Set() const{
    return m_rule_id_isSet;
}

bool OAIManagedRuleDefinition::is_rule_id_Valid() const{
    return m_rule_id_isValid;
}

bool OAIManagedRuleDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedRuleDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
