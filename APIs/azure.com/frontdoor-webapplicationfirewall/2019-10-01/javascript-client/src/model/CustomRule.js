/**
 * WebApplicationFirewallManagement
 * APIs to manage web application firewall rules.
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ActionType from './ActionType';
import MatchCondition from './MatchCondition';

/**
 * The CustomRule model module.
 * @module model/CustomRule
 * @version 2019-10-01
 */
class CustomRule {
    /**
     * Constructs a new <code>CustomRule</code>.
     * Defines contents of a web application rule
     * @alias module:model/CustomRule
     * @param action {module:model/ActionType} 
     * @param matchConditions {Array.<module:model/MatchCondition>} List of match conditions.
     * @param priority {Number} Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
     * @param ruleType {module:model/CustomRule.RuleTypeEnum} Describes type of rule.
     */
    constructor(action, matchConditions, priority, ruleType) { 
        
        CustomRule.initialize(this, action, matchConditions, priority, ruleType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, matchConditions, priority, ruleType) { 
        obj['action'] = action;
        obj['matchConditions'] = matchConditions;
        obj['priority'] = priority;
        obj['ruleType'] = ruleType;
    }

    /**
     * Constructs a <code>CustomRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomRule} obj Optional instance to populate.
     * @return {module:model/CustomRule} The populated <code>CustomRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomRule();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ActionType.constructFromObject(data['action']);
            }
            if (data.hasOwnProperty('enabledState')) {
                obj['enabledState'] = ApiClient.convertToType(data['enabledState'], 'String');
            }
            if (data.hasOwnProperty('matchConditions')) {
                obj['matchConditions'] = ApiClient.convertToType(data['matchConditions'], [MatchCondition]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('rateLimitDurationInMinutes')) {
                obj['rateLimitDurationInMinutes'] = ApiClient.convertToType(data['rateLimitDurationInMinutes'], 'Number');
            }
            if (data.hasOwnProperty('rateLimitThreshold')) {
                obj['rateLimitThreshold'] = ApiClient.convertToType(data['rateLimitThreshold'], 'Number');
            }
            if (data.hasOwnProperty('ruleType')) {
                obj['ruleType'] = ApiClient.convertToType(data['ruleType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['enabledState'] && !(typeof data['enabledState'] === 'string' || data['enabledState'] instanceof String)) {
            throw new Error("Expected the field `enabledState` to be a primitive type in the JSON string but got " + data['enabledState']);
        }
        if (data['matchConditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['matchConditions'])) {
                throw new Error("Expected the field `matchConditions` to be an array in the JSON data but got " + data['matchConditions']);
            }
            // validate the optional field `matchConditions` (array)
            for (const item of data['matchConditions']) {
                MatchCondition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['ruleType'] && !(typeof data['ruleType'] === 'string' || data['ruleType'] instanceof String)) {
            throw new Error("Expected the field `ruleType` to be a primitive type in the JSON string but got " + data['ruleType']);
        }

        return true;
    }


}

CustomRule.RequiredProperties = ["action", "matchConditions", "priority", "ruleType"];

/**
 * @member {module:model/ActionType} action
 */
CustomRule.prototype['action'] = undefined;

/**
 * Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
 * @member {module:model/CustomRule.EnabledStateEnum} enabledState
 */
CustomRule.prototype['enabledState'] = undefined;

/**
 * List of match conditions.
 * @member {Array.<module:model/MatchCondition>} matchConditions
 */
CustomRule.prototype['matchConditions'] = undefined;

/**
 * Describes the name of the rule.
 * @member {String} name
 */
CustomRule.prototype['name'] = undefined;

/**
 * Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
 * @member {Number} priority
 */
CustomRule.prototype['priority'] = undefined;

/**
 * Time window for resetting the rate limit count. Default is 1 minute.
 * @member {Number} rateLimitDurationInMinutes
 */
CustomRule.prototype['rateLimitDurationInMinutes'] = undefined;

/**
 * Number of allowed requests per client within the time window.
 * @member {Number} rateLimitThreshold
 */
CustomRule.prototype['rateLimitThreshold'] = undefined;

/**
 * Describes type of rule.
 * @member {module:model/CustomRule.RuleTypeEnum} ruleType
 */
CustomRule.prototype['ruleType'] = undefined;





/**
 * Allowed values for the <code>enabledState</code> property.
 * @enum {String}
 * @readonly
 */
CustomRule['EnabledStateEnum'] = {

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled",

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled"
};


/**
 * Allowed values for the <code>ruleType</code> property.
 * @enum {String}
 * @readonly
 */
CustomRule['RuleTypeEnum'] = {

    /**
     * value: "MatchRule"
     * @const
     */
    "MatchRule": "MatchRule",

    /**
     * value: "RateLimitRule"
     * @const
     */
    "RateLimitRule": "RateLimitRule"
};



export default CustomRule;

