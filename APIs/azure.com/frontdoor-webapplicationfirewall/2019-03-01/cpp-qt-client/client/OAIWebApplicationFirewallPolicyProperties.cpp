/**
 * WebApplicationFirewallManagement
 * APIs to manage web application firewall rules.
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebApplicationFirewallPolicyProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebApplicationFirewallPolicyProperties::OAIWebApplicationFirewallPolicyProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebApplicationFirewallPolicyProperties::OAIWebApplicationFirewallPolicyProperties() {
    this->initializeModel();
}

OAIWebApplicationFirewallPolicyProperties::~OAIWebApplicationFirewallPolicyProperties() {}

void OAIWebApplicationFirewallPolicyProperties::initializeModel() {

    m_custom_rules_isSet = false;
    m_custom_rules_isValid = false;

    m_frontend_endpoint_links_isSet = false;
    m_frontend_endpoint_links_isValid = false;

    m_managed_rules_isSet = false;
    m_managed_rules_isValid = false;

    m_policy_settings_isSet = false;
    m_policy_settings_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_resource_state_isSet = false;
    m_resource_state_isValid = false;
}

void OAIWebApplicationFirewallPolicyProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebApplicationFirewallPolicyProperties::fromJsonObject(QJsonObject json) {

    m_custom_rules_isValid = ::OpenAPI::fromJsonValue(m_custom_rules, json[QString("customRules")]);
    m_custom_rules_isSet = !json[QString("customRules")].isNull() && m_custom_rules_isValid;

    m_frontend_endpoint_links_isValid = ::OpenAPI::fromJsonValue(m_frontend_endpoint_links, json[QString("frontendEndpointLinks")]);
    m_frontend_endpoint_links_isSet = !json[QString("frontendEndpointLinks")].isNull() && m_frontend_endpoint_links_isValid;

    m_managed_rules_isValid = ::OpenAPI::fromJsonValue(m_managed_rules, json[QString("managedRules")]);
    m_managed_rules_isSet = !json[QString("managedRules")].isNull() && m_managed_rules_isValid;

    m_policy_settings_isValid = ::OpenAPI::fromJsonValue(m_policy_settings, json[QString("policySettings")]);
    m_policy_settings_isSet = !json[QString("policySettings")].isNull() && m_policy_settings_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_resource_state_isValid = ::OpenAPI::fromJsonValue(m_resource_state, json[QString("resourceState")]);
    m_resource_state_isSet = !json[QString("resourceState")].isNull() && m_resource_state_isValid;
}

QString OAIWebApplicationFirewallPolicyProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebApplicationFirewallPolicyProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_rules.isSet()) {
        obj.insert(QString("customRules"), ::OpenAPI::toJsonValue(m_custom_rules));
    }
    if (m_frontend_endpoint_links.size() > 0) {
        obj.insert(QString("frontendEndpointLinks"), ::OpenAPI::toJsonValue(m_frontend_endpoint_links));
    }
    if (m_managed_rules.isSet()) {
        obj.insert(QString("managedRules"), ::OpenAPI::toJsonValue(m_managed_rules));
    }
    if (m_policy_settings.isSet()) {
        obj.insert(QString("policySettings"), ::OpenAPI::toJsonValue(m_policy_settings));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_resource_state_isSet) {
        obj.insert(QString("resourceState"), ::OpenAPI::toJsonValue(m_resource_state));
    }
    return obj;
}

OAICustomRuleList OAIWebApplicationFirewallPolicyProperties::getCustomRules() const {
    return m_custom_rules;
}
void OAIWebApplicationFirewallPolicyProperties::setCustomRules(const OAICustomRuleList &custom_rules) {
    m_custom_rules = custom_rules;
    m_custom_rules_isSet = true;
}

bool OAIWebApplicationFirewallPolicyProperties::is_custom_rules_Set() const{
    return m_custom_rules_isSet;
}

bool OAIWebApplicationFirewallPolicyProperties::is_custom_rules_Valid() const{
    return m_custom_rules_isValid;
}

QList<OAIFrontendEndpointLink> OAIWebApplicationFirewallPolicyProperties::getFrontendEndpointLinks() const {
    return m_frontend_endpoint_links;
}
void OAIWebApplicationFirewallPolicyProperties::setFrontendEndpointLinks(const QList<OAIFrontendEndpointLink> &frontend_endpoint_links) {
    m_frontend_endpoint_links = frontend_endpoint_links;
    m_frontend_endpoint_links_isSet = true;
}

bool OAIWebApplicationFirewallPolicyProperties::is_frontend_endpoint_links_Set() const{
    return m_frontend_endpoint_links_isSet;
}

bool OAIWebApplicationFirewallPolicyProperties::is_frontend_endpoint_links_Valid() const{
    return m_frontend_endpoint_links_isValid;
}

OAIManagedRuleSetList OAIWebApplicationFirewallPolicyProperties::getManagedRules() const {
    return m_managed_rules;
}
void OAIWebApplicationFirewallPolicyProperties::setManagedRules(const OAIManagedRuleSetList &managed_rules) {
    m_managed_rules = managed_rules;
    m_managed_rules_isSet = true;
}

bool OAIWebApplicationFirewallPolicyProperties::is_managed_rules_Set() const{
    return m_managed_rules_isSet;
}

bool OAIWebApplicationFirewallPolicyProperties::is_managed_rules_Valid() const{
    return m_managed_rules_isValid;
}

OAIPolicySettings OAIWebApplicationFirewallPolicyProperties::getPolicySettings() const {
    return m_policy_settings;
}
void OAIWebApplicationFirewallPolicyProperties::setPolicySettings(const OAIPolicySettings &policy_settings) {
    m_policy_settings = policy_settings;
    m_policy_settings_isSet = true;
}

bool OAIWebApplicationFirewallPolicyProperties::is_policy_settings_Set() const{
    return m_policy_settings_isSet;
}

bool OAIWebApplicationFirewallPolicyProperties::is_policy_settings_Valid() const{
    return m_policy_settings_isValid;
}

QString OAIWebApplicationFirewallPolicyProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIWebApplicationFirewallPolicyProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIWebApplicationFirewallPolicyProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIWebApplicationFirewallPolicyProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAIWebApplicationFirewallPolicyProperties::getResourceState() const {
    return m_resource_state;
}
void OAIWebApplicationFirewallPolicyProperties::setResourceState(const QString &resource_state) {
    m_resource_state = resource_state;
    m_resource_state_isSet = true;
}

bool OAIWebApplicationFirewallPolicyProperties::is_resource_state_Set() const{
    return m_resource_state_isSet;
}

bool OAIWebApplicationFirewallPolicyProperties::is_resource_state_Valid() const{
    return m_resource_state_isValid;
}

bool OAIWebApplicationFirewallPolicyProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_rules.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_frontend_endpoint_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_managed_rules.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebApplicationFirewallPolicyProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
