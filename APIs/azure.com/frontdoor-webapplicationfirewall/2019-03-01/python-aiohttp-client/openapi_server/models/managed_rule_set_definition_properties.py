# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.managed_rule_group_definition import ManagedRuleGroupDefinition
from openapi_server import util


class ManagedRuleSetDefinitionProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provisioning_state: str=None, rule_groups: List[ManagedRuleGroupDefinition]=None, rule_set_type: str=None, rule_set_version: str=None):
        """ManagedRuleSetDefinitionProperties - a model defined in OpenAPI

        :param provisioning_state: The provisioning_state of this ManagedRuleSetDefinitionProperties.
        :param rule_groups: The rule_groups of this ManagedRuleSetDefinitionProperties.
        :param rule_set_type: The rule_set_type of this ManagedRuleSetDefinitionProperties.
        :param rule_set_version: The rule_set_version of this ManagedRuleSetDefinitionProperties.
        """
        self.openapi_types = {
            'provisioning_state': str,
            'rule_groups': List[ManagedRuleGroupDefinition],
            'rule_set_type': str,
            'rule_set_version': str
        }

        self.attribute_map = {
            'provisioning_state': 'provisioningState',
            'rule_groups': 'ruleGroups',
            'rule_set_type': 'ruleSetType',
            'rule_set_version': 'ruleSetVersion'
        }

        self._provisioning_state = provisioning_state
        self._rule_groups = rule_groups
        self._rule_set_type = rule_set_type
        self._rule_set_version = rule_set_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedRuleSetDefinitionProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedRuleSetDefinitionProperties of this ManagedRuleSetDefinitionProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ManagedRuleSetDefinitionProperties.

        Provisioning state of the managed rule set.

        :return: The provisioning_state of this ManagedRuleSetDefinitionProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ManagedRuleSetDefinitionProperties.

        Provisioning state of the managed rule set.

        :param provisioning_state: The provisioning_state of this ManagedRuleSetDefinitionProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def rule_groups(self):
        """Gets the rule_groups of this ManagedRuleSetDefinitionProperties.

        Rule groups of the managed rule set.

        :return: The rule_groups of this ManagedRuleSetDefinitionProperties.
        :rtype: List[ManagedRuleGroupDefinition]
        """
        return self._rule_groups

    @rule_groups.setter
    def rule_groups(self, rule_groups):
        """Sets the rule_groups of this ManagedRuleSetDefinitionProperties.

        Rule groups of the managed rule set.

        :param rule_groups: The rule_groups of this ManagedRuleSetDefinitionProperties.
        :type rule_groups: List[ManagedRuleGroupDefinition]
        """

        self._rule_groups = rule_groups

    @property
    def rule_set_type(self):
        """Gets the rule_set_type of this ManagedRuleSetDefinitionProperties.

        Type of the managed rule set.

        :return: The rule_set_type of this ManagedRuleSetDefinitionProperties.
        :rtype: str
        """
        return self._rule_set_type

    @rule_set_type.setter
    def rule_set_type(self, rule_set_type):
        """Sets the rule_set_type of this ManagedRuleSetDefinitionProperties.

        Type of the managed rule set.

        :param rule_set_type: The rule_set_type of this ManagedRuleSetDefinitionProperties.
        :type rule_set_type: str
        """

        self._rule_set_type = rule_set_type

    @property
    def rule_set_version(self):
        """Gets the rule_set_version of this ManagedRuleSetDefinitionProperties.

        Version of the managed rule set type.

        :return: The rule_set_version of this ManagedRuleSetDefinitionProperties.
        :rtype: str
        """
        return self._rule_set_version

    @rule_set_version.setter
    def rule_set_version(self, rule_set_version):
        """Sets the rule_set_version of this ManagedRuleSetDefinitionProperties.

        Version of the managed rule set type.

        :param rule_set_version: The rule_set_version of this ManagedRuleSetDefinitionProperties.
        :type rule_set_version: str
        """

        self._rule_set_version = rule_set_version
