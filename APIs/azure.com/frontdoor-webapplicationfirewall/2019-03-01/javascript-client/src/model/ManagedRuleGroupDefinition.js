/**
 * WebApplicationFirewallManagement
 * APIs to manage web application firewall rules.
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ManagedRuleDefinition from './ManagedRuleDefinition';

/**
 * The ManagedRuleGroupDefinition model module.
 * @module model/ManagedRuleGroupDefinition
 * @version 2019-03-01
 */
class ManagedRuleGroupDefinition {
    /**
     * Constructs a new <code>ManagedRuleGroupDefinition</code>.
     * Describes a managed rule group.
     * @alias module:model/ManagedRuleGroupDefinition
     */
    constructor() { 
        
        ManagedRuleGroupDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagedRuleGroupDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagedRuleGroupDefinition} obj Optional instance to populate.
     * @return {module:model/ManagedRuleGroupDefinition} The populated <code>ManagedRuleGroupDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagedRuleGroupDefinition();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('ruleGroupName')) {
                obj['ruleGroupName'] = ApiClient.convertToType(data['ruleGroupName'], 'String');
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [ManagedRuleDefinition]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagedRuleGroupDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagedRuleGroupDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['ruleGroupName'] && !(typeof data['ruleGroupName'] === 'string' || data['ruleGroupName'] instanceof String)) {
            throw new Error("Expected the field `ruleGroupName` to be a primitive type in the JSON string but got " + data['ruleGroupName']);
        }
        if (data['rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rules'])) {
                throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
            }
            // validate the optional field `rules` (array)
            for (const item of data['rules']) {
                ManagedRuleDefinition.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Description of the managed rule group.
 * @member {String} description
 */
ManagedRuleGroupDefinition.prototype['description'] = undefined;

/**
 * Name of the managed rule group.
 * @member {String} ruleGroupName
 */
ManagedRuleGroupDefinition.prototype['ruleGroupName'] = undefined;

/**
 * List of rules within the managed rule group.
 * @member {Array.<module:model/ManagedRuleDefinition>} rules
 */
ManagedRuleGroupDefinition.prototype['rules'] = undefined;






export default ManagedRuleGroupDefinition;

