/*
 * WebApplicationFirewallManagement
 * APIs to manage web application firewall rules.
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.WebApplicationFirewallPolicy;
import org.openapitools.client.model.WebApplicationFirewallPolicyList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebApplicationFirewallPoliciesApi
 */
@Disabled
public class WebApplicationFirewallPoliciesApiTest {

    private final WebApplicationFirewallPoliciesApi api = new WebApplicationFirewallPoliciesApi();

    /**
     * Create or update policy with specified rule set name within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policiesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String policyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        WebApplicationFirewallPolicy parameters = null;
        WebApplicationFirewallPolicy response = api.policiesCreateOrUpdate(resourceGroupName, policyName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes Policy
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policiesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String policyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.policiesDelete(resourceGroupName, policyName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve protection policy with specified name within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policiesGetTest() throws ApiException {
        String resourceGroupName = null;
        String policyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        WebApplicationFirewallPolicy response = api.policiesGet(resourceGroupName, policyName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all of the protection policies within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policiesListTest() throws ApiException {
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        WebApplicationFirewallPolicyList response = api.policiesList(resourceGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

}
