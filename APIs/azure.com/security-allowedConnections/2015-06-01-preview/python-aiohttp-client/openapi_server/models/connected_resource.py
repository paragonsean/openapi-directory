# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectedResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connected_resource_id: str=None, tcp_ports: str=None, udp_ports: str=None):
        """ConnectedResource - a model defined in OpenAPI

        :param connected_resource_id: The connected_resource_id of this ConnectedResource.
        :param tcp_ports: The tcp_ports of this ConnectedResource.
        :param udp_ports: The udp_ports of this ConnectedResource.
        """
        self.openapi_types = {
            'connected_resource_id': str,
            'tcp_ports': str,
            'udp_ports': str
        }

        self.attribute_map = {
            'connected_resource_id': 'connectedResourceId',
            'tcp_ports': 'tcpPorts',
            'udp_ports': 'udpPorts'
        }

        self._connected_resource_id = connected_resource_id
        self._tcp_ports = tcp_ports
        self._udp_ports = udp_ports

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectedResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectedResource of this ConnectedResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connected_resource_id(self):
        """Gets the connected_resource_id of this ConnectedResource.

        The Azure resource id of the connected resource

        :return: The connected_resource_id of this ConnectedResource.
        :rtype: str
        """
        return self._connected_resource_id

    @connected_resource_id.setter
    def connected_resource_id(self, connected_resource_id):
        """Sets the connected_resource_id of this ConnectedResource.

        The Azure resource id of the connected resource

        :param connected_resource_id: The connected_resource_id of this ConnectedResource.
        :type connected_resource_id: str
        """

        self._connected_resource_id = connected_resource_id

    @property
    def tcp_ports(self):
        """Gets the tcp_ports of this ConnectedResource.

        The allowed tcp ports

        :return: The tcp_ports of this ConnectedResource.
        :rtype: str
        """
        return self._tcp_ports

    @tcp_ports.setter
    def tcp_ports(self, tcp_ports):
        """Sets the tcp_ports of this ConnectedResource.

        The allowed tcp ports

        :param tcp_ports: The tcp_ports of this ConnectedResource.
        :type tcp_ports: str
        """

        self._tcp_ports = tcp_ports

    @property
    def udp_ports(self):
        """Gets the udp_ports of this ConnectedResource.

        The allowed udp ports

        :return: The udp_ports of this ConnectedResource.
        :rtype: str
        """
        return self._udp_ports

    @udp_ports.setter
    def udp_ports(self, udp_ports):
        """Sets the udp_ports of this ConnectedResource.

        The allowed udp ports

        :param udp_ports: The udp_ports of this ConnectedResource.
        :type udp_ports: str
        """

        self._udp_ports = udp_ports
