/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AllowedConnectionsList from './model/AllowedConnectionsList';
import AllowedConnectionsListDefaultResponse from './model/AllowedConnectionsListDefaultResponse';
import AllowedConnectionsListDefaultResponseError from './model/AllowedConnectionsListDefaultResponseError';
import AllowedConnectionsResource from './model/AllowedConnectionsResource';
import AllowedConnectionsResourceProperties from './model/AllowedConnectionsResourceProperties';
import ConnectableResource from './model/ConnectableResource';
import ConnectedResource from './model/ConnectedResource';
import AllowedConnectionsApi from './api/AllowedConnectionsApi';


/**
* API spec for Microsoft.Security (Azure Security Center) resource provider.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SecurityCenter = require('index'); // See note below*.
* var xxxSvc = new SecurityCenter.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SecurityCenter.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SecurityCenter.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SecurityCenter.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-06-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AllowedConnectionsList model constructor.
     * @property {module:model/AllowedConnectionsList}
     */
    AllowedConnectionsList,

    /**
     * The AllowedConnectionsListDefaultResponse model constructor.
     * @property {module:model/AllowedConnectionsListDefaultResponse}
     */
    AllowedConnectionsListDefaultResponse,

    /**
     * The AllowedConnectionsListDefaultResponseError model constructor.
     * @property {module:model/AllowedConnectionsListDefaultResponseError}
     */
    AllowedConnectionsListDefaultResponseError,

    /**
     * The AllowedConnectionsResource model constructor.
     * @property {module:model/AllowedConnectionsResource}
     */
    AllowedConnectionsResource,

    /**
     * The AllowedConnectionsResourceProperties model constructor.
     * @property {module:model/AllowedConnectionsResourceProperties}
     */
    AllowedConnectionsResourceProperties,

    /**
     * The ConnectableResource model constructor.
     * @property {module:model/ConnectableResource}
     */
    ConnectableResource,

    /**
     * The ConnectedResource model constructor.
     * @property {module:model/ConnectedResource}
     */
    ConnectedResource,

    /**
    * The AllowedConnectionsApi service constructor.
    * @property {module:api/AllowedConnectionsApi}
    */
    AllowedConnectionsApi
};
