/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServerKeyProperties.h
 *
 * Properties for a server key execution.
 */

#ifndef OAIServerKeyProperties_H
#define OAIServerKeyProperties_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServerKeyProperties : public OAIObject {
public:
    OAIServerKeyProperties();
    OAIServerKeyProperties(QString json);
    ~OAIServerKeyProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getServerKeyType() const;
    void setServerKeyType(const QString &server_key_type);
    bool is_server_key_type_Set() const;
    bool is_server_key_type_Valid() const;

    QString getSubregion() const;
    void setSubregion(const QString &subregion);
    bool is_subregion_Set() const;
    bool is_subregion_Valid() const;

    QString getThumbprint() const;
    void setThumbprint(const QString &thumbprint);
    bool is_thumbprint_Set() const;
    bool is_thumbprint_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_server_key_type;
    bool m_server_key_type_isSet;
    bool m_server_key_type_isValid;

    QString m_subregion;
    bool m_subregion_isSet;
    bool m_subregion_isValid;

    QString m_thumbprint;
    bool m_thumbprint_isSet;
    bool m_thumbprint_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServerKeyProperties)

#endif // OAIServerKeyProperties_H
