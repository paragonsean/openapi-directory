/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ServerKey;
import org.openapitools.client.model.ServerKeyListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerKeysApi
 */
@Disabled
public class ServerKeysApiTest {

    private final ServerKeysApi api = new ServerKeysApi();

    /**
     * Creates or updates a server key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverKeysCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String keyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ServerKey parameters = null;
        ServerKey response = api.serverKeysCreateOrUpdate(resourceGroupName, serverName, keyName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the server key with the given name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverKeysDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String keyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.serverKeysDelete(resourceGroupName, serverName, keyName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a server key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverKeysGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String keyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ServerKey response = api.serverKeysGet(resourceGroupName, serverName, keyName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of server keys.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverKeysListByServerTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ServerKeyListResult response = api.serverKeysListByServer(resourceGroupName, serverName, subscriptionId, apiVersion);
        // TODO: test validations
    }

}
