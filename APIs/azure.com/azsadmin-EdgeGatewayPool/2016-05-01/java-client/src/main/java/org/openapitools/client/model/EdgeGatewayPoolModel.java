/*
 * FabricAdminClient
 * Edge gateway pool operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An object that contains the properties of an edge gateway pool.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:31:02.315558-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EdgeGatewayPoolModel {
  public static final String SERIALIZED_NAME_EDGE_GATEWAYS = "edgeGateways";
  @SerializedName(SERIALIZED_NAME_EDGE_GATEWAYS)
  private List<String> edgeGateways = new ArrayList<>();

  public static final String SERIALIZED_NAME_GATEWAY_CAPACITY_KILO_BITS_PER_SECOND = "gatewayCapacityKiloBitsPerSecond";
  @SerializedName(SERIALIZED_NAME_GATEWAY_CAPACITY_KILO_BITS_PER_SECOND)
  private Integer gatewayCapacityKiloBitsPerSecond;

  public static final String SERIALIZED_NAME_GATEWAY_TYPE = "gatewayType";
  @SerializedName(SERIALIZED_NAME_GATEWAY_TYPE)
  private String gatewayType;

  public static final String SERIALIZED_NAME_GRE_VIP_SUBNET = "greVipSubnet";
  @SerializedName(SERIALIZED_NAME_GRE_VIP_SUBNET)
  private String greVipSubnet;

  public static final String SERIALIZED_NAME_NUMBER_OF_GATEWAYS = "numberOfGateways";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_GATEWAYS)
  private Integer numberOfGateways;

  public static final String SERIALIZED_NAME_PUBLIC_IP_ADDRESS = "publicIpAddress";
  @SerializedName(SERIALIZED_NAME_PUBLIC_IP_ADDRESS)
  private String publicIpAddress;

  public static final String SERIALIZED_NAME_REDUNDANT_GATEWAY_COUNT = "redundantGatewayCount";
  @SerializedName(SERIALIZED_NAME_REDUNDANT_GATEWAY_COUNT)
  private Long redundantGatewayCount;

  public EdgeGatewayPoolModel() {
  }

  public EdgeGatewayPoolModel edgeGateways(List<String> edgeGateways) {
    this.edgeGateways = edgeGateways;
    return this;
  }

  public EdgeGatewayPoolModel addEdgeGatewaysItem(String edgeGatewaysItem) {
    if (this.edgeGateways == null) {
      this.edgeGateways = new ArrayList<>();
    }
    this.edgeGateways.add(edgeGatewaysItem);
    return this;
  }

  /**
   * List of the edge gateways in the pool.
   * @return edgeGateways
   */
  @javax.annotation.Nullable
  public List<String> getEdgeGateways() {
    return edgeGateways;
  }

  public void setEdgeGateways(List<String> edgeGateways) {
    this.edgeGateways = edgeGateways;
  }


  public EdgeGatewayPoolModel gatewayCapacityKiloBitsPerSecond(Integer gatewayCapacityKiloBitsPerSecond) {
    this.gatewayCapacityKiloBitsPerSecond = gatewayCapacityKiloBitsPerSecond;
    return this;
  }

  /**
   * Gateway capacity in kilobits per second.
   * @return gatewayCapacityKiloBitsPerSecond
   */
  @javax.annotation.Nullable
  public Integer getGatewayCapacityKiloBitsPerSecond() {
    return gatewayCapacityKiloBitsPerSecond;
  }

  public void setGatewayCapacityKiloBitsPerSecond(Integer gatewayCapacityKiloBitsPerSecond) {
    this.gatewayCapacityKiloBitsPerSecond = gatewayCapacityKiloBitsPerSecond;
  }


  public EdgeGatewayPoolModel gatewayType(String gatewayType) {
    this.gatewayType = gatewayType;
    return this;
  }

  /**
   * The gateway type, for example, S2sIPsec, S2sGre, and so on.
   * @return gatewayType
   */
  @javax.annotation.Nullable
  public String getGatewayType() {
    return gatewayType;
  }

  public void setGatewayType(String gatewayType) {
    this.gatewayType = gatewayType;
  }


  public EdgeGatewayPoolModel greVipSubnet(String greVipSubnet) {
    this.greVipSubnet = greVipSubnet;
    return this;
  }

  /**
   * The GRE VIP subnet.
   * @return greVipSubnet
   */
  @javax.annotation.Nullable
  public String getGreVipSubnet() {
    return greVipSubnet;
  }

  public void setGreVipSubnet(String greVipSubnet) {
    this.greVipSubnet = greVipSubnet;
  }


  public EdgeGatewayPoolModel numberOfGateways(Integer numberOfGateways) {
    this.numberOfGateways = numberOfGateways;
    return this;
  }

  /**
   * The number of gateways in the pool.
   * @return numberOfGateways
   */
  @javax.annotation.Nullable
  public Integer getNumberOfGateways() {
    return numberOfGateways;
  }

  public void setNumberOfGateways(Integer numberOfGateways) {
    this.numberOfGateways = numberOfGateways;
  }


  public EdgeGatewayPoolModel publicIpAddress(String publicIpAddress) {
    this.publicIpAddress = publicIpAddress;
    return this;
  }

  /**
   * The public IP address.
   * @return publicIpAddress
   */
  @javax.annotation.Nullable
  public String getPublicIpAddress() {
    return publicIpAddress;
  }

  public void setPublicIpAddress(String publicIpAddress) {
    this.publicIpAddress = publicIpAddress;
  }


  public EdgeGatewayPoolModel redundantGatewayCount(Long redundantGatewayCount) {
    this.redundantGatewayCount = redundantGatewayCount;
    return this;
  }

  /**
   * The number of redundant gateways.
   * @return redundantGatewayCount
   */
  @javax.annotation.Nullable
  public Long getRedundantGatewayCount() {
    return redundantGatewayCount;
  }

  public void setRedundantGatewayCount(Long redundantGatewayCount) {
    this.redundantGatewayCount = redundantGatewayCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdgeGatewayPoolModel edgeGatewayPoolModel = (EdgeGatewayPoolModel) o;
    return Objects.equals(this.edgeGateways, edgeGatewayPoolModel.edgeGateways) &&
        Objects.equals(this.gatewayCapacityKiloBitsPerSecond, edgeGatewayPoolModel.gatewayCapacityKiloBitsPerSecond) &&
        Objects.equals(this.gatewayType, edgeGatewayPoolModel.gatewayType) &&
        Objects.equals(this.greVipSubnet, edgeGatewayPoolModel.greVipSubnet) &&
        Objects.equals(this.numberOfGateways, edgeGatewayPoolModel.numberOfGateways) &&
        Objects.equals(this.publicIpAddress, edgeGatewayPoolModel.publicIpAddress) &&
        Objects.equals(this.redundantGatewayCount, edgeGatewayPoolModel.redundantGatewayCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(edgeGateways, gatewayCapacityKiloBitsPerSecond, gatewayType, greVipSubnet, numberOfGateways, publicIpAddress, redundantGatewayCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdgeGatewayPoolModel {\n");
    sb.append("    edgeGateways: ").append(toIndentedString(edgeGateways)).append("\n");
    sb.append("    gatewayCapacityKiloBitsPerSecond: ").append(toIndentedString(gatewayCapacityKiloBitsPerSecond)).append("\n");
    sb.append("    gatewayType: ").append(toIndentedString(gatewayType)).append("\n");
    sb.append("    greVipSubnet: ").append(toIndentedString(greVipSubnet)).append("\n");
    sb.append("    numberOfGateways: ").append(toIndentedString(numberOfGateways)).append("\n");
    sb.append("    publicIpAddress: ").append(toIndentedString(publicIpAddress)).append("\n");
    sb.append("    redundantGatewayCount: ").append(toIndentedString(redundantGatewayCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("edgeGateways");
    openapiFields.add("gatewayCapacityKiloBitsPerSecond");
    openapiFields.add("gatewayType");
    openapiFields.add("greVipSubnet");
    openapiFields.add("numberOfGateways");
    openapiFields.add("publicIpAddress");
    openapiFields.add("redundantGatewayCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EdgeGatewayPoolModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EdgeGatewayPoolModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EdgeGatewayPoolModel is not found in the empty JSON string", EdgeGatewayPoolModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EdgeGatewayPoolModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EdgeGatewayPoolModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("edgeGateways") != null && !jsonObj.get("edgeGateways").isJsonNull() && !jsonObj.get("edgeGateways").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `edgeGateways` to be an array in the JSON string but got `%s`", jsonObj.get("edgeGateways").toString()));
      }
      if ((jsonObj.get("gatewayType") != null && !jsonObj.get("gatewayType").isJsonNull()) && !jsonObj.get("gatewayType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gatewayType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gatewayType").toString()));
      }
      if ((jsonObj.get("greVipSubnet") != null && !jsonObj.get("greVipSubnet").isJsonNull()) && !jsonObj.get("greVipSubnet").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `greVipSubnet` to be a primitive type in the JSON string but got `%s`", jsonObj.get("greVipSubnet").toString()));
      }
      if ((jsonObj.get("publicIpAddress") != null && !jsonObj.get("publicIpAddress").isJsonNull()) && !jsonObj.get("publicIpAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publicIpAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publicIpAddress").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EdgeGatewayPoolModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EdgeGatewayPoolModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EdgeGatewayPoolModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EdgeGatewayPoolModel.class));

       return (TypeAdapter<T>) new TypeAdapter<EdgeGatewayPoolModel>() {
           @Override
           public void write(JsonWriter out, EdgeGatewayPoolModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EdgeGatewayPoolModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EdgeGatewayPoolModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EdgeGatewayPoolModel
   * @throws IOException if the JSON string is invalid with respect to EdgeGatewayPoolModel
   */
  public static EdgeGatewayPoolModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EdgeGatewayPoolModel.class);
  }

  /**
   * Convert an instance of EdgeGatewayPoolModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

