# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EdgeGatewayPoolModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, edge_gateways: List[str]=None, gateway_capacity_kilo_bits_per_second: int=None, gateway_type: str=None, gre_vip_subnet: str=None, number_of_gateways: int=None, public_ip_address: str=None, redundant_gateway_count: int=None):
        """EdgeGatewayPoolModel - a model defined in OpenAPI

        :param edge_gateways: The edge_gateways of this EdgeGatewayPoolModel.
        :param gateway_capacity_kilo_bits_per_second: The gateway_capacity_kilo_bits_per_second of this EdgeGatewayPoolModel.
        :param gateway_type: The gateway_type of this EdgeGatewayPoolModel.
        :param gre_vip_subnet: The gre_vip_subnet of this EdgeGatewayPoolModel.
        :param number_of_gateways: The number_of_gateways of this EdgeGatewayPoolModel.
        :param public_ip_address: The public_ip_address of this EdgeGatewayPoolModel.
        :param redundant_gateway_count: The redundant_gateway_count of this EdgeGatewayPoolModel.
        """
        self.openapi_types = {
            'edge_gateways': List[str],
            'gateway_capacity_kilo_bits_per_second': int,
            'gateway_type': str,
            'gre_vip_subnet': str,
            'number_of_gateways': int,
            'public_ip_address': str,
            'redundant_gateway_count': int
        }

        self.attribute_map = {
            'edge_gateways': 'edgeGateways',
            'gateway_capacity_kilo_bits_per_second': 'gatewayCapacityKiloBitsPerSecond',
            'gateway_type': 'gatewayType',
            'gre_vip_subnet': 'greVipSubnet',
            'number_of_gateways': 'numberOfGateways',
            'public_ip_address': 'publicIpAddress',
            'redundant_gateway_count': 'redundantGatewayCount'
        }

        self._edge_gateways = edge_gateways
        self._gateway_capacity_kilo_bits_per_second = gateway_capacity_kilo_bits_per_second
        self._gateway_type = gateway_type
        self._gre_vip_subnet = gre_vip_subnet
        self._number_of_gateways = number_of_gateways
        self._public_ip_address = public_ip_address
        self._redundant_gateway_count = redundant_gateway_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EdgeGatewayPoolModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EdgeGatewayPoolModel of this EdgeGatewayPoolModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def edge_gateways(self):
        """Gets the edge_gateways of this EdgeGatewayPoolModel.

        List of the edge gateways in the pool.

        :return: The edge_gateways of this EdgeGatewayPoolModel.
        :rtype: List[str]
        """
        return self._edge_gateways

    @edge_gateways.setter
    def edge_gateways(self, edge_gateways):
        """Sets the edge_gateways of this EdgeGatewayPoolModel.

        List of the edge gateways in the pool.

        :param edge_gateways: The edge_gateways of this EdgeGatewayPoolModel.
        :type edge_gateways: List[str]
        """

        self._edge_gateways = edge_gateways

    @property
    def gateway_capacity_kilo_bits_per_second(self):
        """Gets the gateway_capacity_kilo_bits_per_second of this EdgeGatewayPoolModel.

        Gateway capacity in kilobits per second.

        :return: The gateway_capacity_kilo_bits_per_second of this EdgeGatewayPoolModel.
        :rtype: int
        """
        return self._gateway_capacity_kilo_bits_per_second

    @gateway_capacity_kilo_bits_per_second.setter
    def gateway_capacity_kilo_bits_per_second(self, gateway_capacity_kilo_bits_per_second):
        """Sets the gateway_capacity_kilo_bits_per_second of this EdgeGatewayPoolModel.

        Gateway capacity in kilobits per second.

        :param gateway_capacity_kilo_bits_per_second: The gateway_capacity_kilo_bits_per_second of this EdgeGatewayPoolModel.
        :type gateway_capacity_kilo_bits_per_second: int
        """

        self._gateway_capacity_kilo_bits_per_second = gateway_capacity_kilo_bits_per_second

    @property
    def gateway_type(self):
        """Gets the gateway_type of this EdgeGatewayPoolModel.

        The gateway type, for example, S2sIPsec, S2sGre, and so on.

        :return: The gateway_type of this EdgeGatewayPoolModel.
        :rtype: str
        """
        return self._gateway_type

    @gateway_type.setter
    def gateway_type(self, gateway_type):
        """Sets the gateway_type of this EdgeGatewayPoolModel.

        The gateway type, for example, S2sIPsec, S2sGre, and so on.

        :param gateway_type: The gateway_type of this EdgeGatewayPoolModel.
        :type gateway_type: str
        """

        self._gateway_type = gateway_type

    @property
    def gre_vip_subnet(self):
        """Gets the gre_vip_subnet of this EdgeGatewayPoolModel.

        The GRE VIP subnet.

        :return: The gre_vip_subnet of this EdgeGatewayPoolModel.
        :rtype: str
        """
        return self._gre_vip_subnet

    @gre_vip_subnet.setter
    def gre_vip_subnet(self, gre_vip_subnet):
        """Sets the gre_vip_subnet of this EdgeGatewayPoolModel.

        The GRE VIP subnet.

        :param gre_vip_subnet: The gre_vip_subnet of this EdgeGatewayPoolModel.
        :type gre_vip_subnet: str
        """

        self._gre_vip_subnet = gre_vip_subnet

    @property
    def number_of_gateways(self):
        """Gets the number_of_gateways of this EdgeGatewayPoolModel.

        The number of gateways in the pool.

        :return: The number_of_gateways of this EdgeGatewayPoolModel.
        :rtype: int
        """
        return self._number_of_gateways

    @number_of_gateways.setter
    def number_of_gateways(self, number_of_gateways):
        """Sets the number_of_gateways of this EdgeGatewayPoolModel.

        The number of gateways in the pool.

        :param number_of_gateways: The number_of_gateways of this EdgeGatewayPoolModel.
        :type number_of_gateways: int
        """

        self._number_of_gateways = number_of_gateways

    @property
    def public_ip_address(self):
        """Gets the public_ip_address of this EdgeGatewayPoolModel.

        The public IP address.

        :return: The public_ip_address of this EdgeGatewayPoolModel.
        :rtype: str
        """
        return self._public_ip_address

    @public_ip_address.setter
    def public_ip_address(self, public_ip_address):
        """Sets the public_ip_address of this EdgeGatewayPoolModel.

        The public IP address.

        :param public_ip_address: The public_ip_address of this EdgeGatewayPoolModel.
        :type public_ip_address: str
        """

        self._public_ip_address = public_ip_address

    @property
    def redundant_gateway_count(self):
        """Gets the redundant_gateway_count of this EdgeGatewayPoolModel.

        The number of redundant gateways.

        :return: The redundant_gateway_count of this EdgeGatewayPoolModel.
        :rtype: int
        """
        return self._redundant_gateway_count

    @redundant_gateway_count.setter
    def redundant_gateway_count(self, redundant_gateway_count):
        """Sets the redundant_gateway_count of this EdgeGatewayPoolModel.

        The number of redundant gateways.

        :param redundant_gateway_count: The redundant_gateway_count of this EdgeGatewayPoolModel.
        :type redundant_gateway_count: int
        """

        self._redundant_gateway_count = redundant_gateway_count
