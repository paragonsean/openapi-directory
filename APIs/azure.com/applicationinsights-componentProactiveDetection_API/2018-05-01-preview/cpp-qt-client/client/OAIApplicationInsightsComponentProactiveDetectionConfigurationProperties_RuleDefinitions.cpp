/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for ProactiveDetection configurations of a component.
 *
 * The version of the OpenAPI document: 2018-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions() {
    this->initializeModel();
}

OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::~OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions() {}

void OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_help_url_isSet = false;
    m_help_url_isValid = false;

    m_is_enabled_by_default_isSet = false;
    m_is_enabled_by_default_isValid = false;

    m_is_hidden_isSet = false;
    m_is_hidden_isValid = false;

    m_is_in_preview_isSet = false;
    m_is_in_preview_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_supports_email_notifications_isSet = false;
    m_supports_email_notifications_isValid = false;
}

void OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("DisplayName")]);
    m_display_name_isSet = !json[QString("DisplayName")].isNull() && m_display_name_isValid;

    m_help_url_isValid = ::OpenAPI::fromJsonValue(m_help_url, json[QString("HelpUrl")]);
    m_help_url_isSet = !json[QString("HelpUrl")].isNull() && m_help_url_isValid;

    m_is_enabled_by_default_isValid = ::OpenAPI::fromJsonValue(m_is_enabled_by_default, json[QString("IsEnabledByDefault")]);
    m_is_enabled_by_default_isSet = !json[QString("IsEnabledByDefault")].isNull() && m_is_enabled_by_default_isValid;

    m_is_hidden_isValid = ::OpenAPI::fromJsonValue(m_is_hidden, json[QString("IsHidden")]);
    m_is_hidden_isSet = !json[QString("IsHidden")].isNull() && m_is_hidden_isValid;

    m_is_in_preview_isValid = ::OpenAPI::fromJsonValue(m_is_in_preview, json[QString("IsInPreview")]);
    m_is_in_preview_isSet = !json[QString("IsInPreview")].isNull() && m_is_in_preview_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_supports_email_notifications_isValid = ::OpenAPI::fromJsonValue(m_supports_email_notifications, json[QString("SupportsEmailNotifications")]);
    m_supports_email_notifications_isSet = !json[QString("SupportsEmailNotifications")].isNull() && m_supports_email_notifications_isValid;
}

QString OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("DisplayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_help_url_isSet) {
        obj.insert(QString("HelpUrl"), ::OpenAPI::toJsonValue(m_help_url));
    }
    if (m_is_enabled_by_default_isSet) {
        obj.insert(QString("IsEnabledByDefault"), ::OpenAPI::toJsonValue(m_is_enabled_by_default));
    }
    if (m_is_hidden_isSet) {
        obj.insert(QString("IsHidden"), ::OpenAPI::toJsonValue(m_is_hidden));
    }
    if (m_is_in_preview_isSet) {
        obj.insert(QString("IsInPreview"), ::OpenAPI::toJsonValue(m_is_in_preview));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_supports_email_notifications_isSet) {
        obj.insert(QString("SupportsEmailNotifications"), ::OpenAPI::toJsonValue(m_supports_email_notifications));
    }
    return obj;
}

QString OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::getDescription() const {
    return m_description;
}
void OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_description_Set() const{
    return m_description_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::getDisplayName() const {
    return m_display_name;
}
void OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::getHelpUrl() const {
    return m_help_url;
}
void OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::setHelpUrl(const QString &help_url) {
    m_help_url = help_url;
    m_help_url_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_help_url_Set() const{
    return m_help_url_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_help_url_Valid() const{
    return m_help_url_isValid;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::isIsEnabledByDefault() const {
    return m_is_enabled_by_default;
}
void OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::setIsEnabledByDefault(const bool &is_enabled_by_default) {
    m_is_enabled_by_default = is_enabled_by_default;
    m_is_enabled_by_default_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_is_enabled_by_default_Set() const{
    return m_is_enabled_by_default_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_is_enabled_by_default_Valid() const{
    return m_is_enabled_by_default_isValid;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::isIsHidden() const {
    return m_is_hidden;
}
void OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::setIsHidden(const bool &is_hidden) {
    m_is_hidden = is_hidden;
    m_is_hidden_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_is_hidden_Set() const{
    return m_is_hidden_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_is_hidden_Valid() const{
    return m_is_hidden_isValid;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::isIsInPreview() const {
    return m_is_in_preview;
}
void OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::setIsInPreview(const bool &is_in_preview) {
    m_is_in_preview = is_in_preview;
    m_is_in_preview_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_is_in_preview_Set() const{
    return m_is_in_preview_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_is_in_preview_Valid() const{
    return m_is_in_preview_isValid;
}

QString OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::getName() const {
    return m_name;
}
void OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::isSupportsEmailNotifications() const {
    return m_supports_email_notifications;
}
void OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::setSupportsEmailNotifications(const bool &supports_email_notifications) {
    m_supports_email_notifications = supports_email_notifications;
    m_supports_email_notifications_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_supports_email_notifications_Set() const{
    return m_supports_email_notifications_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::is_supports_email_notifications_Valid() const{
    return m_supports_email_notifications_isValid;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_help_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_enabled_by_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_hidden_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_in_preview_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supports_email_notifications_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfigurationProperties_RuleDefinitions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
