# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_insights_component_proactive_detection_configuration_properties_rule_definitions import ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions
from openapi_server import util


class ApplicationInsightsComponentProactiveDetectionConfigurationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_emails: List[str]=None, enabled: bool=None, last_updated_time: str=None, name: str=None, rule_definitions: ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions=None, send_emails_to_subscription_owners: bool=None):
        """ApplicationInsightsComponentProactiveDetectionConfigurationProperties - a model defined in OpenAPI

        :param custom_emails: The custom_emails of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :param enabled: The enabled of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :param last_updated_time: The last_updated_time of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :param name: The name of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :param rule_definitions: The rule_definitions of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :param send_emails_to_subscription_owners: The send_emails_to_subscription_owners of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        """
        self.openapi_types = {
            'custom_emails': List[str],
            'enabled': bool,
            'last_updated_time': str,
            'name': str,
            'rule_definitions': ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions,
            'send_emails_to_subscription_owners': bool
        }

        self.attribute_map = {
            'custom_emails': 'CustomEmails',
            'enabled': 'Enabled',
            'last_updated_time': 'LastUpdatedTime',
            'name': 'Name',
            'rule_definitions': 'RuleDefinitions',
            'send_emails_to_subscription_owners': 'SendEmailsToSubscriptionOwners'
        }

        self._custom_emails = custom_emails
        self._enabled = enabled
        self._last_updated_time = last_updated_time
        self._name = name
        self._rule_definitions = rule_definitions
        self._send_emails_to_subscription_owners = send_emails_to_subscription_owners

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationInsightsComponentProactiveDetectionConfigurationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationInsightsComponentProactiveDetectionConfigurationProperties of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_emails(self):
        """Gets the custom_emails of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.

        Custom email addresses for this rule notifications

        :return: The custom_emails of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :rtype: List[str]
        """
        return self._custom_emails

    @custom_emails.setter
    def custom_emails(self, custom_emails):
        """Sets the custom_emails of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.

        Custom email addresses for this rule notifications

        :param custom_emails: The custom_emails of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :type custom_emails: List[str]
        """

        self._custom_emails = custom_emails

    @property
    def enabled(self):
        """Gets the enabled of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.

        A flag that indicates whether this rule is enabled by the user

        :return: The enabled of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.

        A flag that indicates whether this rule is enabled by the user

        :param enabled: The enabled of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.

        The last time this rule was updated

        :return: The last_updated_time of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :rtype: str
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.

        The last time this rule was updated

        :param last_updated_time: The last_updated_time of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :type last_updated_time: str
        """

        self._last_updated_time = last_updated_time

    @property
    def name(self):
        """Gets the name of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.

        The rule name

        :return: The name of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.

        The rule name

        :param name: The name of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :type name: str
        """

        self._name = name

    @property
    def rule_definitions(self):
        """Gets the rule_definitions of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.


        :return: The rule_definitions of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :rtype: ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions
        """
        return self._rule_definitions

    @rule_definitions.setter
    def rule_definitions(self, rule_definitions):
        """Sets the rule_definitions of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.


        :param rule_definitions: The rule_definitions of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :type rule_definitions: ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions
        """

        self._rule_definitions = rule_definitions

    @property
    def send_emails_to_subscription_owners(self):
        """Gets the send_emails_to_subscription_owners of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.

        A flag that indicated whether notifications on this rule should be sent to subscription owners

        :return: The send_emails_to_subscription_owners of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :rtype: bool
        """
        return self._send_emails_to_subscription_owners

    @send_emails_to_subscription_owners.setter
    def send_emails_to_subscription_owners(self, send_emails_to_subscription_owners):
        """Sets the send_emails_to_subscription_owners of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.

        A flag that indicated whether notifications on this rule should be sent to subscription owners

        :param send_emails_to_subscription_owners: The send_emails_to_subscription_owners of this ApplicationInsightsComponentProactiveDetectionConfigurationProperties.
        :type send_emails_to_subscription_owners: bool
        """

        self._send_emails_to_subscription_owners = send_emails_to_subscription_owners
