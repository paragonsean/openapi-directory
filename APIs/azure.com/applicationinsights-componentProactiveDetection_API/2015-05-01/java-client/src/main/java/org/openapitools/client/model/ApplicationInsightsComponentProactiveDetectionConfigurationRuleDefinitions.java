/*
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for ProactiveDetection configurations of a component.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Static definitions of the ProactiveDetection configuration rule (same values for all components).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:18:04.107506-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions {
  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "DisplayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_HELP_URL = "HelpUrl";
  @SerializedName(SERIALIZED_NAME_HELP_URL)
  private String helpUrl;

  public static final String SERIALIZED_NAME_IS_ENABLED_BY_DEFAULT = "IsEnabledByDefault";
  @SerializedName(SERIALIZED_NAME_IS_ENABLED_BY_DEFAULT)
  private Boolean isEnabledByDefault;

  public static final String SERIALIZED_NAME_IS_HIDDEN = "IsHidden";
  @SerializedName(SERIALIZED_NAME_IS_HIDDEN)
  private Boolean isHidden;

  public static final String SERIALIZED_NAME_IS_IN_PREVIEW = "IsInPreview";
  @SerializedName(SERIALIZED_NAME_IS_IN_PREVIEW)
  private Boolean isInPreview;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SUPPORTS_EMAIL_NOTIFICATIONS = "SupportsEmailNotifications";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_EMAIL_NOTIFICATIONS)
  private Boolean supportsEmailNotifications;

  public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions() {
  }

  public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The rule description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The rule name as it is displayed in UI
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions helpUrl(String helpUrl) {
    this.helpUrl = helpUrl;
    return this;
  }

  /**
   * URL which displays additional info about the proactive detection rule
   * @return helpUrl
   */
  @javax.annotation.Nullable
  public String getHelpUrl() {
    return helpUrl;
  }

  public void setHelpUrl(String helpUrl) {
    this.helpUrl = helpUrl;
  }


  public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions isEnabledByDefault(Boolean isEnabledByDefault) {
    this.isEnabledByDefault = isEnabledByDefault;
    return this;
  }

  /**
   * A flag indicating whether the rule is enabled by default
   * @return isEnabledByDefault
   */
  @javax.annotation.Nullable
  public Boolean getIsEnabledByDefault() {
    return isEnabledByDefault;
  }

  public void setIsEnabledByDefault(Boolean isEnabledByDefault) {
    this.isEnabledByDefault = isEnabledByDefault;
  }


  public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions isHidden(Boolean isHidden) {
    this.isHidden = isHidden;
    return this;
  }

  /**
   * A flag indicating whether the rule is hidden (from the UI)
   * @return isHidden
   */
  @javax.annotation.Nullable
  public Boolean getIsHidden() {
    return isHidden;
  }

  public void setIsHidden(Boolean isHidden) {
    this.isHidden = isHidden;
  }


  public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions isInPreview(Boolean isInPreview) {
    this.isInPreview = isInPreview;
    return this;
  }

  /**
   * A flag indicating whether the rule is in preview
   * @return isInPreview
   */
  @javax.annotation.Nullable
  public Boolean getIsInPreview() {
    return isInPreview;
  }

  public void setIsInPreview(Boolean isInPreview) {
    this.isInPreview = isInPreview;
  }


  public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The rule name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions supportsEmailNotifications(Boolean supportsEmailNotifications) {
    this.supportsEmailNotifications = supportsEmailNotifications;
    return this;
  }

  /**
   * A flag indicating whether email notifications are supported for detections for this rule
   * @return supportsEmailNotifications
   */
  @javax.annotation.Nullable
  public Boolean getSupportsEmailNotifications() {
    return supportsEmailNotifications;
  }

  public void setSupportsEmailNotifications(Boolean supportsEmailNotifications) {
    this.supportsEmailNotifications = supportsEmailNotifications;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions applicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions = (ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions) o;
    return Objects.equals(this.description, applicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.description) &&
        Objects.equals(this.displayName, applicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.displayName) &&
        Objects.equals(this.helpUrl, applicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.helpUrl) &&
        Objects.equals(this.isEnabledByDefault, applicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.isEnabledByDefault) &&
        Objects.equals(this.isHidden, applicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.isHidden) &&
        Objects.equals(this.isInPreview, applicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.isInPreview) &&
        Objects.equals(this.name, applicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.name) &&
        Objects.equals(this.supportsEmailNotifications, applicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.supportsEmailNotifications);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, displayName, helpUrl, isEnabledByDefault, isHidden, isInPreview, name, supportsEmailNotifications);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    helpUrl: ").append(toIndentedString(helpUrl)).append("\n");
    sb.append("    isEnabledByDefault: ").append(toIndentedString(isEnabledByDefault)).append("\n");
    sb.append("    isHidden: ").append(toIndentedString(isHidden)).append("\n");
    sb.append("    isInPreview: ").append(toIndentedString(isInPreview)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    supportsEmailNotifications: ").append(toIndentedString(supportsEmailNotifications)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Description");
    openapiFields.add("DisplayName");
    openapiFields.add("HelpUrl");
    openapiFields.add("IsEnabledByDefault");
    openapiFields.add("IsHidden");
    openapiFields.add("IsInPreview");
    openapiFields.add("Name");
    openapiFields.add("SupportsEmailNotifications");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions is not found in the empty JSON string", ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if ((jsonObj.get("DisplayName") != null && !jsonObj.get("DisplayName").isJsonNull()) && !jsonObj.get("DisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DisplayName").toString()));
      }
      if ((jsonObj.get("HelpUrl") != null && !jsonObj.get("HelpUrl").isJsonNull()) && !jsonObj.get("HelpUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `HelpUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("HelpUrl").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions>() {
           @Override
           public void write(JsonWriter out, ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions
   * @throws IOException if the JSON string is invalid with respect to ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions
   */
  public static ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.class);
  }

  /**
   * Convert an instance of ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

