/*
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for ProactiveDetection configurations of a component.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Properties that define a ProactiveDetection configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:18:04.107506-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApplicationInsightsComponentProactiveDetectionConfiguration {
  public static final String SERIALIZED_NAME_CUSTOM_EMAILS = "CustomEmails";
  @SerializedName(SERIALIZED_NAME_CUSTOM_EMAILS)
  private List<String> customEmails = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLED = "Enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "LastUpdatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
  private String lastUpdatedTime;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RULE_DEFINITIONS = "RuleDefinitions";
  @SerializedName(SERIALIZED_NAME_RULE_DEFINITIONS)
  private ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions ruleDefinitions;

  public static final String SERIALIZED_NAME_SEND_EMAILS_TO_SUBSCRIPTION_OWNERS = "SendEmailsToSubscriptionOwners";
  @SerializedName(SERIALIZED_NAME_SEND_EMAILS_TO_SUBSCRIPTION_OWNERS)
  private Boolean sendEmailsToSubscriptionOwners;

  public ApplicationInsightsComponentProactiveDetectionConfiguration() {
  }

  public ApplicationInsightsComponentProactiveDetectionConfiguration customEmails(List<String> customEmails) {
    this.customEmails = customEmails;
    return this;
  }

  public ApplicationInsightsComponentProactiveDetectionConfiguration addCustomEmailsItem(String customEmailsItem) {
    if (this.customEmails == null) {
      this.customEmails = new ArrayList<>();
    }
    this.customEmails.add(customEmailsItem);
    return this;
  }

  /**
   * Custom email addresses for this rule notifications
   * @return customEmails
   */
  @javax.annotation.Nullable
  public List<String> getCustomEmails() {
    return customEmails;
  }

  public void setCustomEmails(List<String> customEmails) {
    this.customEmails = customEmails;
  }


  public ApplicationInsightsComponentProactiveDetectionConfiguration enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * A flag that indicates whether this rule is enabled by the user
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ApplicationInsightsComponentProactiveDetectionConfiguration lastUpdatedTime(String lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
    return this;
  }

  /**
   * The last time this rule was updated
   * @return lastUpdatedTime
   */
  @javax.annotation.Nullable
  public String getLastUpdatedTime() {
    return lastUpdatedTime;
  }

  public void setLastUpdatedTime(String lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }


  public ApplicationInsightsComponentProactiveDetectionConfiguration name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The rule name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ApplicationInsightsComponentProactiveDetectionConfiguration ruleDefinitions(ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions ruleDefinitions) {
    this.ruleDefinitions = ruleDefinitions;
    return this;
  }

  /**
   * Get ruleDefinitions
   * @return ruleDefinitions
   */
  @javax.annotation.Nullable
  public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions getRuleDefinitions() {
    return ruleDefinitions;
  }

  public void setRuleDefinitions(ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions ruleDefinitions) {
    this.ruleDefinitions = ruleDefinitions;
  }


  public ApplicationInsightsComponentProactiveDetectionConfiguration sendEmailsToSubscriptionOwners(Boolean sendEmailsToSubscriptionOwners) {
    this.sendEmailsToSubscriptionOwners = sendEmailsToSubscriptionOwners;
    return this;
  }

  /**
   * A flag that indicated whether notifications on this rule should be sent to subscription owners
   * @return sendEmailsToSubscriptionOwners
   */
  @javax.annotation.Nullable
  public Boolean getSendEmailsToSubscriptionOwners() {
    return sendEmailsToSubscriptionOwners;
  }

  public void setSendEmailsToSubscriptionOwners(Boolean sendEmailsToSubscriptionOwners) {
    this.sendEmailsToSubscriptionOwners = sendEmailsToSubscriptionOwners;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationInsightsComponentProactiveDetectionConfiguration applicationInsightsComponentProactiveDetectionConfiguration = (ApplicationInsightsComponentProactiveDetectionConfiguration) o;
    return Objects.equals(this.customEmails, applicationInsightsComponentProactiveDetectionConfiguration.customEmails) &&
        Objects.equals(this.enabled, applicationInsightsComponentProactiveDetectionConfiguration.enabled) &&
        Objects.equals(this.lastUpdatedTime, applicationInsightsComponentProactiveDetectionConfiguration.lastUpdatedTime) &&
        Objects.equals(this.name, applicationInsightsComponentProactiveDetectionConfiguration.name) &&
        Objects.equals(this.ruleDefinitions, applicationInsightsComponentProactiveDetectionConfiguration.ruleDefinitions) &&
        Objects.equals(this.sendEmailsToSubscriptionOwners, applicationInsightsComponentProactiveDetectionConfiguration.sendEmailsToSubscriptionOwners);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customEmails, enabled, lastUpdatedTime, name, ruleDefinitions, sendEmailsToSubscriptionOwners);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationInsightsComponentProactiveDetectionConfiguration {\n");
    sb.append("    customEmails: ").append(toIndentedString(customEmails)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ruleDefinitions: ").append(toIndentedString(ruleDefinitions)).append("\n");
    sb.append("    sendEmailsToSubscriptionOwners: ").append(toIndentedString(sendEmailsToSubscriptionOwners)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CustomEmails");
    openapiFields.add("Enabled");
    openapiFields.add("LastUpdatedTime");
    openapiFields.add("Name");
    openapiFields.add("RuleDefinitions");
    openapiFields.add("SendEmailsToSubscriptionOwners");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApplicationInsightsComponentProactiveDetectionConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApplicationInsightsComponentProactiveDetectionConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationInsightsComponentProactiveDetectionConfiguration is not found in the empty JSON string", ApplicationInsightsComponentProactiveDetectionConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApplicationInsightsComponentProactiveDetectionConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationInsightsComponentProactiveDetectionConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("CustomEmails") != null && !jsonObj.get("CustomEmails").isJsonNull() && !jsonObj.get("CustomEmails").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `CustomEmails` to be an array in the JSON string but got `%s`", jsonObj.get("CustomEmails").toString()));
      }
      if ((jsonObj.get("LastUpdatedTime") != null && !jsonObj.get("LastUpdatedTime").isJsonNull()) && !jsonObj.get("LastUpdatedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LastUpdatedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LastUpdatedTime").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      // validate the optional field `RuleDefinitions`
      if (jsonObj.get("RuleDefinitions") != null && !jsonObj.get("RuleDefinitions").isJsonNull()) {
        ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions.validateJsonElement(jsonObj.get("RuleDefinitions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationInsightsComponentProactiveDetectionConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationInsightsComponentProactiveDetectionConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationInsightsComponentProactiveDetectionConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationInsightsComponentProactiveDetectionConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationInsightsComponentProactiveDetectionConfiguration>() {
           @Override
           public void write(JsonWriter out, ApplicationInsightsComponentProactiveDetectionConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationInsightsComponentProactiveDetectionConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApplicationInsightsComponentProactiveDetectionConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApplicationInsightsComponentProactiveDetectionConfiguration
   * @throws IOException if the JSON string is invalid with respect to ApplicationInsightsComponentProactiveDetectionConfiguration
   */
  public static ApplicationInsightsComponentProactiveDetectionConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationInsightsComponentProactiveDetectionConfiguration.class);
  }

  /**
   * Convert an instance of ApplicationInsightsComponentProactiveDetectionConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

