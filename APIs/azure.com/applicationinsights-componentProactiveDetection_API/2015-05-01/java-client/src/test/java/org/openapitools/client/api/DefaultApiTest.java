/*
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for ProactiveDetection configurations of a component.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApplicationInsightsComponentProactiveDetectionConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Get the ProactiveDetection configuration for this configuration id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void proactiveDetectionConfigurationsGetTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceName = null;
        String configurationId = null;
        ApplicationInsightsComponentProactiveDetectionConfiguration response = api.proactiveDetectionConfigurationsGet(resourceGroupName, apiVersion, subscriptionId, resourceName, configurationId);
        // TODO: test validations
    }

    /**
     * Gets a list of ProactiveDetection configurations of an Application Insights component.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void proactiveDetectionConfigurationsListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceName = null;
        List<ApplicationInsightsComponentProactiveDetectionConfiguration> response = api.proactiveDetectionConfigurationsList(resourceGroupName, apiVersion, subscriptionId, resourceName);
        // TODO: test validations
    }

    /**
     * Update the ProactiveDetection configuration for this configuration id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void proactiveDetectionConfigurationsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceName = null;
        String configurationId = null;
        ApplicationInsightsComponentProactiveDetectionConfiguration proactiveDetectionProperties = null;
        ApplicationInsightsComponentProactiveDetectionConfiguration response = api.proactiveDetectionConfigurationsUpdate(resourceGroupName, apiVersion, subscriptionId, resourceName, configurationId, proactiveDetectionProperties);
        // TODO: test validations
    }

}
