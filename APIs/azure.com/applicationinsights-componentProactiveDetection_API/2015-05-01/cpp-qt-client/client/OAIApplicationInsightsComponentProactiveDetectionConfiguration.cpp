/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for ProactiveDetection configurations of a component.
 *
 * The version of the OpenAPI document: 2015-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationInsightsComponentProactiveDetectionConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationInsightsComponentProactiveDetectionConfiguration::OAIApplicationInsightsComponentProactiveDetectionConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationInsightsComponentProactiveDetectionConfiguration::OAIApplicationInsightsComponentProactiveDetectionConfiguration() {
    this->initializeModel();
}

OAIApplicationInsightsComponentProactiveDetectionConfiguration::~OAIApplicationInsightsComponentProactiveDetectionConfiguration() {}

void OAIApplicationInsightsComponentProactiveDetectionConfiguration::initializeModel() {

    m_custom_emails_isSet = false;
    m_custom_emails_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_last_updated_time_isSet = false;
    m_last_updated_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_rule_definitions_isSet = false;
    m_rule_definitions_isValid = false;

    m_send_emails_to_subscription_owners_isSet = false;
    m_send_emails_to_subscription_owners_isValid = false;
}

void OAIApplicationInsightsComponentProactiveDetectionConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationInsightsComponentProactiveDetectionConfiguration::fromJsonObject(QJsonObject json) {

    m_custom_emails_isValid = ::OpenAPI::fromJsonValue(m_custom_emails, json[QString("CustomEmails")]);
    m_custom_emails_isSet = !json[QString("CustomEmails")].isNull() && m_custom_emails_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;

    m_last_updated_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_time, json[QString("LastUpdatedTime")]);
    m_last_updated_time_isSet = !json[QString("LastUpdatedTime")].isNull() && m_last_updated_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_rule_definitions_isValid = ::OpenAPI::fromJsonValue(m_rule_definitions, json[QString("RuleDefinitions")]);
    m_rule_definitions_isSet = !json[QString("RuleDefinitions")].isNull() && m_rule_definitions_isValid;

    m_send_emails_to_subscription_owners_isValid = ::OpenAPI::fromJsonValue(m_send_emails_to_subscription_owners, json[QString("SendEmailsToSubscriptionOwners")]);
    m_send_emails_to_subscription_owners_isSet = !json[QString("SendEmailsToSubscriptionOwners")].isNull() && m_send_emails_to_subscription_owners_isValid;
}

QString OAIApplicationInsightsComponentProactiveDetectionConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationInsightsComponentProactiveDetectionConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_emails.size() > 0) {
        obj.insert(QString("CustomEmails"), ::OpenAPI::toJsonValue(m_custom_emails));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_last_updated_time_isSet) {
        obj.insert(QString("LastUpdatedTime"), ::OpenAPI::toJsonValue(m_last_updated_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_rule_definitions.isSet()) {
        obj.insert(QString("RuleDefinitions"), ::OpenAPI::toJsonValue(m_rule_definitions));
    }
    if (m_send_emails_to_subscription_owners_isSet) {
        obj.insert(QString("SendEmailsToSubscriptionOwners"), ::OpenAPI::toJsonValue(m_send_emails_to_subscription_owners));
    }
    return obj;
}

QList<QString> OAIApplicationInsightsComponentProactiveDetectionConfiguration::getCustomEmails() const {
    return m_custom_emails;
}
void OAIApplicationInsightsComponentProactiveDetectionConfiguration::setCustomEmails(const QList<QString> &custom_emails) {
    m_custom_emails = custom_emails;
    m_custom_emails_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::is_custom_emails_Set() const{
    return m_custom_emails_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::is_custom_emails_Valid() const{
    return m_custom_emails_isValid;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::isEnabled() const {
    return m_enabled;
}
void OAIApplicationInsightsComponentProactiveDetectionConfiguration::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIApplicationInsightsComponentProactiveDetectionConfiguration::getLastUpdatedTime() const {
    return m_last_updated_time;
}
void OAIApplicationInsightsComponentProactiveDetectionConfiguration::setLastUpdatedTime(const QString &last_updated_time) {
    m_last_updated_time = last_updated_time;
    m_last_updated_time_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::is_last_updated_time_Set() const{
    return m_last_updated_time_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::is_last_updated_time_Valid() const{
    return m_last_updated_time_isValid;
}

QString OAIApplicationInsightsComponentProactiveDetectionConfiguration::getName() const {
    return m_name;
}
void OAIApplicationInsightsComponentProactiveDetectionConfiguration::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::is_name_Valid() const{
    return m_name_isValid;
}

OAIApplicationInsightsComponentProactiveDetectionConfiguration_RuleDefinitions OAIApplicationInsightsComponentProactiveDetectionConfiguration::getRuleDefinitions() const {
    return m_rule_definitions;
}
void OAIApplicationInsightsComponentProactiveDetectionConfiguration::setRuleDefinitions(const OAIApplicationInsightsComponentProactiveDetectionConfiguration_RuleDefinitions &rule_definitions) {
    m_rule_definitions = rule_definitions;
    m_rule_definitions_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::is_rule_definitions_Set() const{
    return m_rule_definitions_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::is_rule_definitions_Valid() const{
    return m_rule_definitions_isValid;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::isSendEmailsToSubscriptionOwners() const {
    return m_send_emails_to_subscription_owners;
}
void OAIApplicationInsightsComponentProactiveDetectionConfiguration::setSendEmailsToSubscriptionOwners(const bool &send_emails_to_subscription_owners) {
    m_send_emails_to_subscription_owners = send_emails_to_subscription_owners;
    m_send_emails_to_subscription_owners_isSet = true;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::is_send_emails_to_subscription_owners_Set() const{
    return m_send_emails_to_subscription_owners_isSet;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::is_send_emails_to_subscription_owners_Valid() const{
    return m_send_emails_to_subscription_owners_isValid;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_emails.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_definitions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_emails_to_subscription_owners_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationInsightsComponentProactiveDetectionConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
