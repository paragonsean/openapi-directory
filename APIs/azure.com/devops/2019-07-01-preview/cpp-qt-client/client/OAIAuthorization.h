/**
 * Azure DevOps
 * Azure DevOps Resource Provider
 *
 * The version of the OpenAPI document: 2019-07-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthorization.h
 *
 * Authorization info used to access a resource (like code repository).
 */

#ifndef OAIAuthorization_H
#define OAIAuthorization_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuthorization : public OAIObject {
public:
    OAIAuthorization();
    OAIAuthorization(QString json);
    ~OAIAuthorization() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthorizationType() const;
    void setAuthorizationType(const QString &authorization_type);
    bool is_authorization_type_Set() const;
    bool is_authorization_type_Valid() const;

    QMap<QString, QString> getParameters() const;
    void setParameters(const QMap<QString, QString> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authorization_type;
    bool m_authorization_type_isSet;
    bool m_authorization_type_isValid;

    QMap<QString, QString> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthorization)

#endif // OAIAuthorization_H
