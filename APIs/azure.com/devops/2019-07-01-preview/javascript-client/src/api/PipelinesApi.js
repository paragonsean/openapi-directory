/**
 * Azure DevOps
 * Azure DevOps Resource Provider
 *
 * The version of the OpenAPI document: 2019-07-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import Pipeline from '../model/Pipeline';
import PipelineListResult from '../model/PipelineListResult';
import PipelineUpdateParameters from '../model/PipelineUpdateParameters';

/**
* Pipelines service.
* @module api/PipelinesApi
* @version 2019-07-01-preview
*/
export default class PipelinesApi {

    /**
    * Constructs a new PipelinesApi. 
    * @alias module:api/PipelinesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the pipelinesCreateOrUpdate operation.
     * @callback module:api/PipelinesApi~pipelinesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Pipeline} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates an Azure Pipeline.
     * @param {String} subscriptionId Unique identifier of the Azure subscription. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} apiVersion API version to be used with the HTTP request.
     * @param {String} pipelineName The name of the Azure Pipeline resource in ARM.
     * @param {module:model/Pipeline} createOperationParameters The request payload to create the Azure Pipeline.
     * @param {module:api/PipelinesApi~pipelinesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Pipeline}
     */
    pipelinesCreateOrUpdate(subscriptionId, resourceGroupName, apiVersion, pipelineName, createOperationParameters, callback) {
      let postBody = createOperationParameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pipelinesCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling pipelinesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pipelinesCreateOrUpdate");
      }
      // verify the required parameter 'pipelineName' is set
      if (pipelineName === undefined || pipelineName === null) {
        throw new Error("Missing the required parameter 'pipelineName' when calling pipelinesCreateOrUpdate");
      }
      // verify the required parameter 'createOperationParameters' is set
      if (createOperationParameters === undefined || createOperationParameters === null) {
        throw new Error("Missing the required parameter 'createOperationParameters' when calling pipelinesCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'pipelineName': pipelineName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Pipeline;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOps/pipelines/{pipelineName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pipelinesDelete operation.
     * @callback module:api/PipelinesApi~pipelinesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an Azure Pipeline.
     * @param {String} subscriptionId Unique identifier of the Azure subscription. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} apiVersion API version to be used with the HTTP request.
     * @param {String} pipelineName The name of the Azure Pipeline resource.
     * @param {module:api/PipelinesApi~pipelinesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pipelinesDelete(subscriptionId, resourceGroupName, apiVersion, pipelineName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pipelinesDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling pipelinesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pipelinesDelete");
      }
      // verify the required parameter 'pipelineName' is set
      if (pipelineName === undefined || pipelineName === null) {
        throw new Error("Missing the required parameter 'pipelineName' when calling pipelinesDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'pipelineName': pipelineName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOps/pipelines/{pipelineName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pipelinesGet operation.
     * @callback module:api/PipelinesApi~pipelinesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Pipeline} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an existing Azure Pipeline.
     * @param {String} subscriptionId Unique identifier of the Azure subscription. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} apiVersion API version to be used with the HTTP request.
     * @param {String} pipelineName The name of the Azure Pipeline resource in ARM.
     * @param {module:api/PipelinesApi~pipelinesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Pipeline}
     */
    pipelinesGet(subscriptionId, resourceGroupName, apiVersion, pipelineName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pipelinesGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling pipelinesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pipelinesGet");
      }
      // verify the required parameter 'pipelineName' is set
      if (pipelineName === undefined || pipelineName === null) {
        throw new Error("Missing the required parameter 'pipelineName' when calling pipelinesGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'pipelineName': pipelineName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Pipeline;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOps/pipelines/{pipelineName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pipelinesListByResourceGroup operation.
     * @callback module:api/PipelinesApi~pipelinesListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PipelineListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all Azure Pipelines under the specified resource group.
     * @param {String} subscriptionId Unique identifier of the Azure subscription. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} apiVersion API version to be used with the HTTP request.
     * @param {module:api/PipelinesApi~pipelinesListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PipelineListResult}
     */
    pipelinesListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pipelinesListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling pipelinesListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pipelinesListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PipelineListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOps/pipelines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pipelinesListBySubscription operation.
     * @callback module:api/PipelinesApi~pipelinesListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PipelineListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all Azure Pipelines under the specified subscription.
     * @param {String} subscriptionId Unique identifier of the Azure subscription. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} apiVersion API version to be used with the HTTP request.
     * @param {module:api/PipelinesApi~pipelinesListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PipelineListResult}
     */
    pipelinesListBySubscription(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pipelinesListBySubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pipelinesListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PipelineListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DevOps/pipelines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pipelinesUpdate operation.
     * @callback module:api/PipelinesApi~pipelinesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Pipeline} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the properties of an Azure Pipeline. Currently, only tags can be updated.
     * @param {String} subscriptionId Unique identifier of the Azure subscription. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} apiVersion API version to be used with the HTTP request.
     * @param {String} pipelineName The name of the Azure Pipeline resource.
     * @param {module:model/PipelineUpdateParameters} updateOperationParameters The request payload containing the properties to update in the Azure Pipeline.
     * @param {module:api/PipelinesApi~pipelinesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Pipeline}
     */
    pipelinesUpdate(subscriptionId, resourceGroupName, apiVersion, pipelineName, updateOperationParameters, callback) {
      let postBody = updateOperationParameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pipelinesUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling pipelinesUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pipelinesUpdate");
      }
      // verify the required parameter 'pipelineName' is set
      if (pipelineName === undefined || pipelineName === null) {
        throw new Error("Missing the required parameter 'pipelineName' when calling pipelinesUpdate");
      }
      // verify the required parameter 'updateOperationParameters' is set
      if (updateOperationParameters === undefined || updateOperationParameters === null) {
        throw new Error("Missing the required parameter 'updateOperationParameters' when calling pipelinesUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'pipelineName': pipelineName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Pipeline;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOps/pipelines/{pipelineName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
