/**
 * DeploymentAdminClient
 * Deployment Admin Client.
 *
 * The version of the OpenAPI document: 2019-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActionPlanAdminProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActionPlanAdminProperties::OAIActionPlanAdminProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActionPlanAdminProperties::OAIActionPlanAdminProperties() {
    this->initializeModel();
}

OAIActionPlanAdminProperties::~OAIActionPlanAdminProperties() {}

void OAIActionPlanAdminProperties::initializeModel() {

    m_action_plan_instance_id_isSet = false;
    m_action_plan_instance_id_isValid = false;

    m_action_plan_uri_isSet = false;
    m_action_plan_uri_isValid = false;

    m_blob_container_name_isSet = false;
    m_blob_container_name_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_resource_group_name_isSet = false;
    m_resource_group_name_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_subscription_id_isSet = false;
    m_subscription_id_isValid = false;
}

void OAIActionPlanAdminProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActionPlanAdminProperties::fromJsonObject(QJsonObject json) {

    m_action_plan_instance_id_isValid = ::OpenAPI::fromJsonValue(m_action_plan_instance_id, json[QString("actionPlanInstanceId")]);
    m_action_plan_instance_id_isSet = !json[QString("actionPlanInstanceId")].isNull() && m_action_plan_instance_id_isValid;

    m_action_plan_uri_isValid = ::OpenAPI::fromJsonValue(m_action_plan_uri, json[QString("actionPlanUri")]);
    m_action_plan_uri_isSet = !json[QString("actionPlanUri")].isNull() && m_action_plan_uri_isValid;

    m_blob_container_name_isValid = ::OpenAPI::fromJsonValue(m_blob_container_name, json[QString("blobContainerName")]);
    m_blob_container_name_isSet = !json[QString("blobContainerName")].isNull() && m_blob_container_name_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_resource_group_name_isValid = ::OpenAPI::fromJsonValue(m_resource_group_name, json[QString("resourceGroupName")]);
    m_resource_group_name_isSet = !json[QString("resourceGroupName")].isNull() && m_resource_group_name_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_subscription_id_isValid = ::OpenAPI::fromJsonValue(m_subscription_id, json[QString("subscriptionId")]);
    m_subscription_id_isSet = !json[QString("subscriptionId")].isNull() && m_subscription_id_isValid;
}

QString OAIActionPlanAdminProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActionPlanAdminProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_action_plan_instance_id_isSet) {
        obj.insert(QString("actionPlanInstanceId"), ::OpenAPI::toJsonValue(m_action_plan_instance_id));
    }
    if (m_action_plan_uri_isSet) {
        obj.insert(QString("actionPlanUri"), ::OpenAPI::toJsonValue(m_action_plan_uri));
    }
    if (m_blob_container_name_isSet) {
        obj.insert(QString("blobContainerName"), ::OpenAPI::toJsonValue(m_blob_container_name));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_parameters.isSet()) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_resource_group_name_isSet) {
        obj.insert(QString("resourceGroupName"), ::OpenAPI::toJsonValue(m_resource_group_name));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_subscription_id_isSet) {
        obj.insert(QString("subscriptionId"), ::OpenAPI::toJsonValue(m_subscription_id));
    }
    return obj;
}

QString OAIActionPlanAdminProperties::getActionPlanInstanceId() const {
    return m_action_plan_instance_id;
}
void OAIActionPlanAdminProperties::setActionPlanInstanceId(const QString &action_plan_instance_id) {
    m_action_plan_instance_id = action_plan_instance_id;
    m_action_plan_instance_id_isSet = true;
}

bool OAIActionPlanAdminProperties::is_action_plan_instance_id_Set() const{
    return m_action_plan_instance_id_isSet;
}

bool OAIActionPlanAdminProperties::is_action_plan_instance_id_Valid() const{
    return m_action_plan_instance_id_isValid;
}

QString OAIActionPlanAdminProperties::getActionPlanUri() const {
    return m_action_plan_uri;
}
void OAIActionPlanAdminProperties::setActionPlanUri(const QString &action_plan_uri) {
    m_action_plan_uri = action_plan_uri;
    m_action_plan_uri_isSet = true;
}

bool OAIActionPlanAdminProperties::is_action_plan_uri_Set() const{
    return m_action_plan_uri_isSet;
}

bool OAIActionPlanAdminProperties::is_action_plan_uri_Valid() const{
    return m_action_plan_uri_isValid;
}

QString OAIActionPlanAdminProperties::getBlobContainerName() const {
    return m_blob_container_name;
}
void OAIActionPlanAdminProperties::setBlobContainerName(const QString &blob_container_name) {
    m_blob_container_name = blob_container_name;
    m_blob_container_name_isSet = true;
}

bool OAIActionPlanAdminProperties::is_blob_container_name_Set() const{
    return m_blob_container_name_isSet;
}

bool OAIActionPlanAdminProperties::is_blob_container_name_Valid() const{
    return m_blob_container_name_isValid;
}

QDateTime OAIActionPlanAdminProperties::getEndTime() const {
    return m_end_time;
}
void OAIActionPlanAdminProperties::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIActionPlanAdminProperties::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIActionPlanAdminProperties::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAIActionPlanAdminProperties_error OAIActionPlanAdminProperties::getError() const {
    return m_error;
}
void OAIActionPlanAdminProperties::setError(const OAIActionPlanAdminProperties_error &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIActionPlanAdminProperties::is_error_Set() const{
    return m_error_isSet;
}

bool OAIActionPlanAdminProperties::is_error_Valid() const{
    return m_error_isValid;
}

OAIActionPlanAdminProperties_parameters OAIActionPlanAdminProperties::getParameters() const {
    return m_parameters;
}
void OAIActionPlanAdminProperties::setParameters(const OAIActionPlanAdminProperties_parameters &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIActionPlanAdminProperties::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIActionPlanAdminProperties::is_parameters_Valid() const{
    return m_parameters_isValid;
}

QString OAIActionPlanAdminProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIActionPlanAdminProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIActionPlanAdminProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIActionPlanAdminProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAIActionPlanAdminProperties::getResourceGroupName() const {
    return m_resource_group_name;
}
void OAIActionPlanAdminProperties::setResourceGroupName(const QString &resource_group_name) {
    m_resource_group_name = resource_group_name;
    m_resource_group_name_isSet = true;
}

bool OAIActionPlanAdminProperties::is_resource_group_name_Set() const{
    return m_resource_group_name_isSet;
}

bool OAIActionPlanAdminProperties::is_resource_group_name_Valid() const{
    return m_resource_group_name_isValid;
}

QDateTime OAIActionPlanAdminProperties::getStartTime() const {
    return m_start_time;
}
void OAIActionPlanAdminProperties::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIActionPlanAdminProperties::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIActionPlanAdminProperties::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIActionPlanAdminProperties::getSubscriptionId() const {
    return m_subscription_id;
}
void OAIActionPlanAdminProperties::setSubscriptionId(const QString &subscription_id) {
    m_subscription_id = subscription_id;
    m_subscription_id_isSet = true;
}

bool OAIActionPlanAdminProperties::is_subscription_id_Set() const{
    return m_subscription_id_isSet;
}

bool OAIActionPlanAdminProperties::is_subscription_id_Valid() const{
    return m_subscription_id_isValid;
}

bool OAIActionPlanAdminProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_plan_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_plan_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_blob_container_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActionPlanAdminProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
