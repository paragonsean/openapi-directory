/**
 * Mixed Reality
 * Mixed Reality Resource Provider Remote Rendering Resource API
 *
 * The version of the OpenAPI document: 2019-12-02-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import RemoteRenderingAccount from './model/RemoteRenderingAccount';
import RemoteRenderingAccountPage from './model/RemoteRenderingAccountPage';
import RemoteRenderingAccountsGetKeys200Response from './model/RemoteRenderingAccountsGetKeys200Response';
import RemoteRenderingAccountsListBySubscriptionDefaultResponse from './model/RemoteRenderingAccountsListBySubscriptionDefaultResponse';
import RemoteRenderingAccountsRegenerateKeysRequest from './model/RemoteRenderingAccountsRegenerateKeysRequest';
import KeyApi from './api/KeyApi';
import ProxyApi from './api/ProxyApi';
import ResourceApi from './api/ResourceApi';


/**
* Mixed Reality Resource Provider Remote Rendering Resource API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MixedReality = require('index'); // See note below*.
* var xxxSvc = new MixedReality.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MixedReality.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MixedReality.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MixedReality.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-12-02-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The RemoteRenderingAccount model constructor.
     * @property {module:model/RemoteRenderingAccount}
     */
    RemoteRenderingAccount,

    /**
     * The RemoteRenderingAccountPage model constructor.
     * @property {module:model/RemoteRenderingAccountPage}
     */
    RemoteRenderingAccountPage,

    /**
     * The RemoteRenderingAccountsGetKeys200Response model constructor.
     * @property {module:model/RemoteRenderingAccountsGetKeys200Response}
     */
    RemoteRenderingAccountsGetKeys200Response,

    /**
     * The RemoteRenderingAccountsListBySubscriptionDefaultResponse model constructor.
     * @property {module:model/RemoteRenderingAccountsListBySubscriptionDefaultResponse}
     */
    RemoteRenderingAccountsListBySubscriptionDefaultResponse,

    /**
     * The RemoteRenderingAccountsRegenerateKeysRequest model constructor.
     * @property {module:model/RemoteRenderingAccountsRegenerateKeysRequest}
     */
    RemoteRenderingAccountsRegenerateKeysRequest,

    /**
    * The KeyApi service constructor.
    * @property {module:api/KeyApi}
    */
    KeyApi,

    /**
    * The ProxyApi service constructor.
    * @property {module:api/ProxyApi}
    */
    ProxyApi,

    /**
    * The ResourceApi service constructor.
    * @property {module:api/ResourceApi}
    */
    ResourceApi
};
