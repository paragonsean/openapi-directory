/*
 * Mixed Reality
 * Mixed Reality Resource Provider Remote Rendering Resource API
 *
 * The version of the OpenAPI document: 2019-12-02-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RemoteRenderingAccount;
import org.openapitools.client.model.RemoteRenderingAccountPage;
import org.openapitools.client.model.RemoteRenderingAccountsListBySubscriptionDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ResourceApi
 */
@Disabled
public class ResourceApiTest {

    private final ResourceApi api = new ResourceApi();

    /**
     * Creating or Updating a Remote Rendering Account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remoteRenderingAccountsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        RemoteRenderingAccount remoteRenderingAccount = null;
        RemoteRenderingAccount response = api.remoteRenderingAccountsCreate(subscriptionId, resourceGroupName, accountName, apiVersion, remoteRenderingAccount);
        // TODO: test validations
    }

    /**
     * Delete a Remote Rendering Account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remoteRenderingAccountsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        api.remoteRenderingAccountsDelete(subscriptionId, resourceGroupName, accountName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve a Remote Rendering Account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remoteRenderingAccountsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        RemoteRenderingAccount response = api.remoteRenderingAccountsGet(subscriptionId, resourceGroupName, accountName, apiVersion);
        // TODO: test validations
    }

    /**
     * List Resources by Resource Group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remoteRenderingAccountsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        RemoteRenderingAccountPage response = api.remoteRenderingAccountsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * List Remote Rendering Accounts by Subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remoteRenderingAccountsListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        RemoteRenderingAccountPage response = api.remoteRenderingAccountsListBySubscription(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updating a Remote Rendering Account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remoteRenderingAccountsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        RemoteRenderingAccount remoteRenderingAccount = null;
        RemoteRenderingAccount response = api.remoteRenderingAccountsUpdate(subscriptionId, resourceGroupName, accountName, apiVersion, remoteRenderingAccount);
        // TODO: test validations
    }

}
