# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.media_graph_operation_error import MediaGraphOperationError
from openapi_server import util


class MediaGraphOperationStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: MediaGraphOperationError=None, name: str=None, status: str=None):
        """MediaGraphOperationStatus - a model defined in OpenAPI

        :param error: The error of this MediaGraphOperationStatus.
        :param name: The name of this MediaGraphOperationStatus.
        :param status: The status of this MediaGraphOperationStatus.
        """
        self.openapi_types = {
            'error': MediaGraphOperationError,
            'name': str,
            'status': str
        }

        self.attribute_map = {
            'error': 'error',
            'name': 'name',
            'status': 'status'
        }

        self._error = error
        self._name = name
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MediaGraphOperationStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MediaGraphOperationStatus of this MediaGraphOperationStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this MediaGraphOperationStatus.


        :return: The error of this MediaGraphOperationStatus.
        :rtype: MediaGraphOperationError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this MediaGraphOperationStatus.


        :param error: The error of this MediaGraphOperationStatus.
        :type error: MediaGraphOperationError
        """

        self._error = error

    @property
    def name(self):
        """Gets the name of this MediaGraphOperationStatus.

        The name of the Media Graph operation

        :return: The name of this MediaGraphOperationStatus.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MediaGraphOperationStatus.

        The name of the Media Graph operation

        :param name: The name of this MediaGraphOperationStatus.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def status(self):
        """Gets the status of this MediaGraphOperationStatus.

        The status of the Media Graph operation

        :return: The status of this MediaGraphOperationStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MediaGraphOperationStatus.

        The status of the Media Graph operation

        :param status: The status of this MediaGraphOperationStatus.
        :type status: str
        """

        self._status = status
