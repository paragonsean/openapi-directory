/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2019-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MediaGraphSink from './MediaGraphSink';

/**
 * The MediaGraphAssetSink model module.
 * @module model/MediaGraphAssetSink
 * @version 2019-09-01-preview
 */
class MediaGraphAssetSink {
    /**
     * Constructs a new <code>MediaGraphAssetSink</code>.
     * Asset sink
     * @alias module:model/MediaGraphAssetSink
     * @extends module:model/MediaGraphSink
     * @implements module:model/MediaGraphSink
     * @param odataType {String} The discriminator for derived types.
     * @param inputs {Array.<String>} Sink inputs
     * @param name {String} Sink name
     */
    constructor(odataType, inputs, name) { 
        MediaGraphSink.initialize(this, odataType, inputs, name);
        MediaGraphAssetSink.initialize(this, odataType, inputs, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType, inputs, name) { 
        obj['assetName'] = assetName;
    }

    /**
     * Constructs a <code>MediaGraphAssetSink</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MediaGraphAssetSink} obj Optional instance to populate.
     * @return {module:model/MediaGraphAssetSink} The populated <code>MediaGraphAssetSink</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MediaGraphAssetSink();
            MediaGraphSink.constructFromObject(data, obj);
            MediaGraphSink.constructFromObject(data, obj);

            if (data.hasOwnProperty('assetName')) {
                obj['assetName'] = ApiClient.convertToType(data['assetName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MediaGraphAssetSink</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MediaGraphAssetSink</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MediaGraphAssetSink.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['assetName'] && !(typeof data['assetName'] === 'string' || data['assetName'] instanceof String)) {
            throw new Error("Expected the field `assetName` to be a primitive type in the JSON string but got " + data['assetName']);
        }

        return true;
    }


}

MediaGraphAssetSink.RequiredProperties = ["assetName", "@odata.type", "inputs", "name"];

/**
 * Asset name
 * @member {String} assetName
 */
MediaGraphAssetSink.prototype['assetName'] = undefined;


// Implement MediaGraphSink interface:
/**
 * The discriminator for derived types.
 * @member {String} @odata.type
 */
MediaGraphSink.prototype['@odata.type'] = undefined;
/**
 * Sink inputs
 * @member {Array.<String>} inputs
 */
MediaGraphSink.prototype['inputs'] = undefined;
/**
 * Sink name
 * @member {String} name
 */
MediaGraphSink.prototype['name'] = undefined;




export default MediaGraphAssetSink;

