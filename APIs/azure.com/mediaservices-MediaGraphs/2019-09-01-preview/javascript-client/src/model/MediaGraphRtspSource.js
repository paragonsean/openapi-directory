/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2019-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MediaGraphSource from './MediaGraphSource';
import MediaGraphUserCredentials from './MediaGraphUserCredentials';

/**
 * The MediaGraphRtspSource model module.
 * @module model/MediaGraphRtspSource
 * @version 2019-09-01-preview
 */
class MediaGraphRtspSource {
    /**
     * Constructs a new <code>MediaGraphRtspSource</code>.
     * RTSP source
     * @alias module:model/MediaGraphRtspSource
     * @extends module:model/MediaGraphSource
     * @implements module:model/MediaGraphSource
     * @param odataType {String} The discriminator for derived types.
     * @param name {String} Source name
     */
    constructor(odataType, name) { 
        MediaGraphSource.initialize(this, odataType, name);
        MediaGraphRtspSource.initialize(this, odataType, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType, name) { 
        obj['rtspUrl'] = rtspUrl;
    }

    /**
     * Constructs a <code>MediaGraphRtspSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MediaGraphRtspSource} obj Optional instance to populate.
     * @return {module:model/MediaGraphRtspSource} The populated <code>MediaGraphRtspSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MediaGraphRtspSource();
            MediaGraphSource.constructFromObject(data, obj);
            MediaGraphSource.constructFromObject(data, obj);

            if (data.hasOwnProperty('credentials')) {
                obj['credentials'] = MediaGraphUserCredentials.constructFromObject(data['credentials']);
            }
            if (data.hasOwnProperty('rtspUrl')) {
                obj['rtspUrl'] = ApiClient.convertToType(data['rtspUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MediaGraphRtspSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MediaGraphRtspSource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MediaGraphRtspSource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `credentials`
        if (data['credentials']) { // data not null
          MediaGraphUserCredentials.validateJSON(data['credentials']);
        }
        // ensure the json data is a string
        if (data['rtspUrl'] && !(typeof data['rtspUrl'] === 'string' || data['rtspUrl'] instanceof String)) {
            throw new Error("Expected the field `rtspUrl` to be a primitive type in the JSON string but got " + data['rtspUrl']);
        }

        return true;
    }


}

MediaGraphRtspSource.RequiredProperties = ["rtspUrl", "@odata.type", "name"];

/**
 * @member {module:model/MediaGraphUserCredentials} credentials
 */
MediaGraphRtspSource.prototype['credentials'] = undefined;

/**
 * RTSP URL
 * @member {String} rtspUrl
 */
MediaGraphRtspSource.prototype['rtspUrl'] = undefined;


// Implement MediaGraphSource interface:
/**
 * The discriminator for derived types.
 * @member {String} @odata.type
 */
MediaGraphSource.prototype['@odata.type'] = undefined;
/**
 * Source name
 * @member {String} name
 */
MediaGraphSource.prototype['name'] = undefined;




export default MediaGraphRtspSource;

