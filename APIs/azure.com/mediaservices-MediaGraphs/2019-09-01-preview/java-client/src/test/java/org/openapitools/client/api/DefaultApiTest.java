/*
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2019-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiError;
import org.openapitools.client.model.MediaGraph;
import org.openapitools.client.model.MediaGraphCollection;
import org.openapitools.client.model.MediaGraphOperationStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Create or update a Media Graph
     *
     * Create or update a Media Graph in the Media Services account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mediaGraphsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String mediaGraphName = null;
        String apiVersion = null;
        MediaGraph parameters = null;
        MediaGraph response = api.mediaGraphsCreateOrUpdate(subscriptionId, resourceGroupName, accountName, mediaGraphName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete a Media Graph
     *
     * Deletes a Media Graph in the Media Services account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mediaGraphsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String mediaGraphName = null;
        String apiVersion = null;
        api.mediaGraphsDelete(subscriptionId, resourceGroupName, accountName, mediaGraphName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get a Media Graph
     *
     * Get the details of a Media Graph in the Media Services account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mediaGraphsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String mediaGraphName = null;
        String apiVersion = null;
        MediaGraph response = api.mediaGraphsGet(subscriptionId, resourceGroupName, accountName, mediaGraphName, apiVersion);
        // TODO: test validations
    }

    /**
     * List Media Graphs
     *
     * Lists Media Graphs in the Media Services account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mediaGraphsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        Integer $top = null;
        MediaGraphCollection response = api.mediaGraphsList(subscriptionId, resourceGroupName, accountName, apiVersion, $top);
        // TODO: test validations
    }

    /**
     * Start a Media Graph
     *
     * Start a Media Graph in the Media Services account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mediaGraphsStartTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String mediaGraphName = null;
        String apiVersion = null;
        api.mediaGraphsStart(subscriptionId, resourceGroupName, accountName, mediaGraphName, apiVersion);
        // TODO: test validations
    }

    /**
     * Stop a Media Graph
     *
     * Stop a Media Graph in the Media Services account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mediaGraphsStopTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String mediaGraphName = null;
        String apiVersion = null;
        api.mediaGraphsStop(subscriptionId, resourceGroupName, accountName, mediaGraphName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get the operation result
     *
     * Get the operation result of a Media Graph in the Media Services account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationResultsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String mediaGraphName = null;
        String operationId = null;
        String apiVersion = null;
        Object response = api.operationResultsGet(subscriptionId, resourceGroupName, accountName, mediaGraphName, operationId, apiVersion);
        // TODO: test validations
    }

    /**
     * Get the operation status
     *
     * Get the operation status of a Media Graph in the media services account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationsStatusGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String mediaGraphName = null;
        String operationId = null;
        String apiVersion = null;
        MediaGraphOperationStatus response = api.operationsStatusGet(subscriptionId, resourceGroupName, accountName, mediaGraphName, operationId, apiVersion);
        // TODO: test validations
    }

}
