/**
 * ApiManagementClient
 * Use these REST APIs for getting the network connectivity status of your Azure API Management deployment. When the API Management service is deployed inside a Virtual Network, it needs to have access to other Azure resources it depends on. This also gives details about the DNS Servers visible to Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2016-10-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConnectivityStatusContract from './ConnectivityStatusContract';

/**
 * The NetworkStatusContract model module.
 * @module model/NetworkStatusContract
 * @version 2016-10-10
 */
class NetworkStatusContract {
    /**
     * Constructs a new <code>NetworkStatusContract</code>.
     * Network Status details.
     * @alias module:model/NetworkStatusContract
     * @param connectivityStatus {Array.<module:model/ConnectivityStatusContract>} Gets the list of Connectivity Status to the Resources.
     * @param dnsServers {Array.<String>} Gets the list of DNS servers IPV4 addresses.
     */
    constructor(connectivityStatus, dnsServers) { 
        
        NetworkStatusContract.initialize(this, connectivityStatus, dnsServers);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, connectivityStatus, dnsServers) { 
        obj['connectivityStatus'] = connectivityStatus;
        obj['dnsServers'] = dnsServers;
    }

    /**
     * Constructs a <code>NetworkStatusContract</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkStatusContract} obj Optional instance to populate.
     * @return {module:model/NetworkStatusContract} The populated <code>NetworkStatusContract</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkStatusContract();

            if (data.hasOwnProperty('connectivityStatus')) {
                obj['connectivityStatus'] = ApiClient.convertToType(data['connectivityStatus'], [ConnectivityStatusContract]);
            }
            if (data.hasOwnProperty('dnsServers')) {
                obj['dnsServers'] = ApiClient.convertToType(data['dnsServers'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkStatusContract</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkStatusContract</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NetworkStatusContract.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['connectivityStatus']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['connectivityStatus'])) {
                throw new Error("Expected the field `connectivityStatus` to be an array in the JSON data but got " + data['connectivityStatus']);
            }
            // validate the optional field `connectivityStatus` (array)
            for (const item of data['connectivityStatus']) {
                ConnectivityStatusContract.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dnsServers'])) {
            throw new Error("Expected the field `dnsServers` to be an array in the JSON data but got " + data['dnsServers']);
        }

        return true;
    }


}

NetworkStatusContract.RequiredProperties = ["connectivityStatus", "dnsServers"];

/**
 * Gets the list of Connectivity Status to the Resources.
 * @member {Array.<module:model/ConnectivityStatusContract>} connectivityStatus
 */
NetworkStatusContract.prototype['connectivityStatus'] = undefined;

/**
 * Gets the list of DNS servers IPV4 addresses.
 * @member {Array.<String>} dnsServers
 */
NetworkStatusContract.prototype['dnsServers'] = undefined;






export default NetworkStatusContract;

