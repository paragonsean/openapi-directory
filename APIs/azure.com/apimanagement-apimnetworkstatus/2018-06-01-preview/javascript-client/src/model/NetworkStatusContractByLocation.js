/**
 * ApiManagementClient
 * Use these REST APIs for getting the network connectivity status of your Azure API Management deployment. When the API Management service is deployed inside a Virtual Network, it needs to have access to other Azure resources it depends on. This also gives details about the DNS Servers visible to Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworkStatusContract from './NetworkStatusContract';

/**
 * The NetworkStatusContractByLocation model module.
 * @module model/NetworkStatusContractByLocation
 * @version 2018-06-01-preview
 */
class NetworkStatusContractByLocation {
    /**
     * Constructs a new <code>NetworkStatusContractByLocation</code>.
     * Network Status in the Location
     * @alias module:model/NetworkStatusContractByLocation
     */
    constructor() { 
        
        NetworkStatusContractByLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkStatusContractByLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkStatusContractByLocation} obj Optional instance to populate.
     * @return {module:model/NetworkStatusContractByLocation} The populated <code>NetworkStatusContractByLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkStatusContractByLocation();

            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('networkStatus')) {
                obj['networkStatus'] = NetworkStatusContract.constructFromObject(data['networkStatus']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkStatusContractByLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkStatusContractByLocation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // validate the optional field `networkStatus`
        if (data['networkStatus']) { // data not null
          NetworkStatusContract.validateJSON(data['networkStatus']);
        }

        return true;
    }


}



/**
 * Location of service
 * @member {String} location
 */
NetworkStatusContractByLocation.prototype['location'] = undefined;

/**
 * @member {module:model/NetworkStatusContract} networkStatus
 */
NetworkStatusContractByLocation.prototype['networkStatus'] = undefined;






export default NetworkStatusContractByLocation;

