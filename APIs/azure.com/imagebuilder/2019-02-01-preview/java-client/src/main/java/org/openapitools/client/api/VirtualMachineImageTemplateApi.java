/*
 * VirtualMachineImageTemplate
 * Virtual Machine Image Template
 *
 * The version of the OpenAPI document: 2019-02-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ApiError;
import org.openapitools.client.model.ImageTemplate;
import org.openapitools.client.model.ImageTemplateListResult;
import org.openapitools.client.model.ImageTemplateUpdateParameters;
import org.openapitools.client.model.RunOutput;
import org.openapitools.client.model.RunOutputCollection;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VirtualMachineImageTemplateApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VirtualMachineImageTemplateApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VirtualMachineImageTemplateApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for virtualMachineImageTemplatesCreateOrUpdate
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param parameters Parameters supplied to the CreateImageTemplate operation (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesCreateOrUpdateCall(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, ImageTemplate parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "imageTemplateName" + "}", localVarApiClient.escapeString(imageTemplateName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineImageTemplatesCreateOrUpdateValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, ImageTemplate parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineImageTemplatesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineImageTemplatesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineImageTemplatesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'imageTemplateName' is set
        if (imageTemplateName == null) {
            throw new ApiException("Missing the required parameter 'imageTemplateName' when calling virtualMachineImageTemplatesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling virtualMachineImageTemplatesCreateOrUpdate(Async)");
        }

        return virtualMachineImageTemplatesCreateOrUpdateCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, parameters, _callback);

    }

    /**
     * 
     * Create or update a virtual machine image template
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param parameters Parameters supplied to the CreateImageTemplate operation (required)
     * @return ImageTemplate
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ImageTemplate virtualMachineImageTemplatesCreateOrUpdate(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, ImageTemplate parameters) throws ApiException {
        ApiResponse<ImageTemplate> localVarResp = virtualMachineImageTemplatesCreateOrUpdateWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Create or update a virtual machine image template
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param parameters Parameters supplied to the CreateImageTemplate operation (required)
     * @return ApiResponse&lt;ImageTemplate&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ImageTemplate> virtualMachineImageTemplatesCreateOrUpdateWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, ImageTemplate parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineImageTemplatesCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, parameters, null);
        Type localVarReturnType = new TypeToken<ImageTemplate>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create or update a virtual machine image template
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param parameters Parameters supplied to the CreateImageTemplate operation (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesCreateOrUpdateAsync(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, ImageTemplate parameters, final ApiCallback<ImageTemplate> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineImageTemplatesCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, parameters, _callback);
        Type localVarReturnType = new TypeToken<ImageTemplate>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineImageTemplatesDelete
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The operation was successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> The operation will be completed asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> NoContent -- VM image template does not exist in the subscription. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesDeleteCall(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "imageTemplateName" + "}", localVarApiClient.escapeString(imageTemplateName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineImageTemplatesDeleteValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineImageTemplatesDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineImageTemplatesDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineImageTemplatesDelete(Async)");
        }

        // verify the required parameter 'imageTemplateName' is set
        if (imageTemplateName == null) {
            throw new ApiException("Missing the required parameter 'imageTemplateName' when calling virtualMachineImageTemplatesDelete(Async)");
        }

        return virtualMachineImageTemplatesDeleteCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, _callback);

    }

    /**
     * 
     * Delete a virtual machine image template
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The operation was successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> The operation will be completed asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> NoContent -- VM image template does not exist in the subscription. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineImageTemplatesDelete(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName) throws ApiException {
        virtualMachineImageTemplatesDeleteWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, imageTemplateName);
    }

    /**
     * 
     * Delete a virtual machine image template
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The operation was successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> The operation will be completed asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> NoContent -- VM image template does not exist in the subscription. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineImageTemplatesDeleteWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineImageTemplatesDeleteValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Delete a virtual machine image template
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The operation was successful. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> The operation will be completed asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> NoContent -- VM image template does not exist in the subscription. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesDeleteAsync(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineImageTemplatesDeleteValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineImageTemplatesGet
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesGetCall(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "imageTemplateName" + "}", localVarApiClient.escapeString(imageTemplateName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineImageTemplatesGetValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineImageTemplatesGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineImageTemplatesGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineImageTemplatesGet(Async)");
        }

        // verify the required parameter 'imageTemplateName' is set
        if (imageTemplateName == null) {
            throw new ApiException("Missing the required parameter 'imageTemplateName' when calling virtualMachineImageTemplatesGet(Async)");
        }

        return virtualMachineImageTemplatesGetCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, _callback);

    }

    /**
     * 
     * Get information about a virtual machine image template
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @return ImageTemplate
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ImageTemplate virtualMachineImageTemplatesGet(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName) throws ApiException {
        ApiResponse<ImageTemplate> localVarResp = virtualMachineImageTemplatesGetWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, imageTemplateName);
        return localVarResp.getData();
    }

    /**
     * 
     * Get information about a virtual machine image template
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @return ApiResponse&lt;ImageTemplate&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ImageTemplate> virtualMachineImageTemplatesGetWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineImageTemplatesGetValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, null);
        Type localVarReturnType = new TypeToken<ImageTemplate>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get information about a virtual machine image template
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesGetAsync(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, final ApiCallback<ImageTemplate> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineImageTemplatesGetValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, _callback);
        Type localVarReturnType = new TypeToken<ImageTemplate>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineImageTemplatesGetRunOutput
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param runOutputName The name of the run output (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesGetRunOutputCall(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, String runOutputName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}/runOutputs/{runOutputName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "imageTemplateName" + "}", localVarApiClient.escapeString(imageTemplateName.toString()))
            .replace("{" + "runOutputName" + "}", localVarApiClient.escapeString(runOutputName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineImageTemplatesGetRunOutputValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, String runOutputName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineImageTemplatesGetRunOutput(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineImageTemplatesGetRunOutput(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineImageTemplatesGetRunOutput(Async)");
        }

        // verify the required parameter 'imageTemplateName' is set
        if (imageTemplateName == null) {
            throw new ApiException("Missing the required parameter 'imageTemplateName' when calling virtualMachineImageTemplatesGetRunOutput(Async)");
        }

        // verify the required parameter 'runOutputName' is set
        if (runOutputName == null) {
            throw new ApiException("Missing the required parameter 'runOutputName' when calling virtualMachineImageTemplatesGetRunOutput(Async)");
        }

        return virtualMachineImageTemplatesGetRunOutputCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, runOutputName, _callback);

    }

    /**
     * 
     * Get the specified run output for the specified image template resource
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param runOutputName The name of the run output (required)
     * @return RunOutput
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public RunOutput virtualMachineImageTemplatesGetRunOutput(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, String runOutputName) throws ApiException {
        ApiResponse<RunOutput> localVarResp = virtualMachineImageTemplatesGetRunOutputWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, runOutputName);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the specified run output for the specified image template resource
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param runOutputName The name of the run output (required)
     * @return ApiResponse&lt;RunOutput&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RunOutput> virtualMachineImageTemplatesGetRunOutputWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, String runOutputName) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineImageTemplatesGetRunOutputValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, runOutputName, null);
        Type localVarReturnType = new TypeToken<RunOutput>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the specified run output for the specified image template resource
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param runOutputName The name of the run output (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesGetRunOutputAsync(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, String runOutputName, final ApiCallback<RunOutput> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineImageTemplatesGetRunOutputValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, runOutputName, _callback);
        Type localVarReturnType = new TypeToken<RunOutput>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineImageTemplatesList
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesListCall(String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.VirtualMachineImages/imageTemplates"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineImageTemplatesListValidateBeforeCall(String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineImageTemplatesList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineImageTemplatesList(Async)");
        }

        return virtualMachineImageTemplatesListCall(subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Gets information about the VM image templates associated with the subscription.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ImageTemplateListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ImageTemplateListResult virtualMachineImageTemplatesList(String subscriptionId, String apiVersion) throws ApiException {
        ApiResponse<ImageTemplateListResult> localVarResp = virtualMachineImageTemplatesListWithHttpInfo(subscriptionId, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets information about the VM image templates associated with the subscription.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;ImageTemplateListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ImageTemplateListResult> virtualMachineImageTemplatesListWithHttpInfo(String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineImageTemplatesListValidateBeforeCall(subscriptionId, apiVersion, null);
        Type localVarReturnType = new TypeToken<ImageTemplateListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets information about the VM image templates associated with the subscription.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesListAsync(String subscriptionId, String apiVersion, final ApiCallback<ImageTemplateListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineImageTemplatesListValidateBeforeCall(subscriptionId, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<ImageTemplateListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineImageTemplatesListByResourceGroup
     * @param resourceGroupName The name of the resource group. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesListByResourceGroupCall(String resourceGroupName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineImageTemplatesListByResourceGroupValidateBeforeCall(String resourceGroupName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineImageTemplatesListByResourceGroup(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineImageTemplatesListByResourceGroup(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineImageTemplatesListByResourceGroup(Async)");
        }

        return virtualMachineImageTemplatesListByResourceGroupCall(resourceGroupName, subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Gets information about the VM image templates associated with the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ImageTemplateListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ImageTemplateListResult virtualMachineImageTemplatesListByResourceGroup(String resourceGroupName, String subscriptionId, String apiVersion) throws ApiException {
        ApiResponse<ImageTemplateListResult> localVarResp = virtualMachineImageTemplatesListByResourceGroupWithHttpInfo(resourceGroupName, subscriptionId, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets information about the VM image templates associated with the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;ImageTemplateListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ImageTemplateListResult> virtualMachineImageTemplatesListByResourceGroupWithHttpInfo(String resourceGroupName, String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineImageTemplatesListByResourceGroupValidateBeforeCall(resourceGroupName, subscriptionId, apiVersion, null);
        Type localVarReturnType = new TypeToken<ImageTemplateListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets information about the VM image templates associated with the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesListByResourceGroupAsync(String resourceGroupName, String subscriptionId, String apiVersion, final ApiCallback<ImageTemplateListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineImageTemplatesListByResourceGroupValidateBeforeCall(resourceGroupName, subscriptionId, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<ImageTemplateListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineImageTemplatesListRunOutputs
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesListRunOutputsCall(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}/runOutputs"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "imageTemplateName" + "}", localVarApiClient.escapeString(imageTemplateName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineImageTemplatesListRunOutputsValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineImageTemplatesListRunOutputs(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineImageTemplatesListRunOutputs(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineImageTemplatesListRunOutputs(Async)");
        }

        // verify the required parameter 'imageTemplateName' is set
        if (imageTemplateName == null) {
            throw new ApiException("Missing the required parameter 'imageTemplateName' when calling virtualMachineImageTemplatesListRunOutputs(Async)");
        }

        return virtualMachineImageTemplatesListRunOutputsCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, _callback);

    }

    /**
     * 
     * List all run outputs for the specified Image Template resource
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @return RunOutputCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public RunOutputCollection virtualMachineImageTemplatesListRunOutputs(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName) throws ApiException {
        ApiResponse<RunOutputCollection> localVarResp = virtualMachineImageTemplatesListRunOutputsWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, imageTemplateName);
        return localVarResp.getData();
    }

    /**
     * 
     * List all run outputs for the specified Image Template resource
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @return ApiResponse&lt;RunOutputCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RunOutputCollection> virtualMachineImageTemplatesListRunOutputsWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineImageTemplatesListRunOutputsValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, null);
        Type localVarReturnType = new TypeToken<RunOutputCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * List all run outputs for the specified Image Template resource
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesListRunOutputsAsync(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, final ApiCallback<RunOutputCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineImageTemplatesListRunOutputsValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, _callback);
        Type localVarReturnType = new TypeToken<RunOutputCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineImageTemplatesRun
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The operation will be completed asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The operation was successful. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesRunCall(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}/run"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "imageTemplateName" + "}", localVarApiClient.escapeString(imageTemplateName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineImageTemplatesRunValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineImageTemplatesRun(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineImageTemplatesRun(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineImageTemplatesRun(Async)");
        }

        // verify the required parameter 'imageTemplateName' is set
        if (imageTemplateName == null) {
            throw new ApiException("Missing the required parameter 'imageTemplateName' when calling virtualMachineImageTemplatesRun(Async)");
        }

        return virtualMachineImageTemplatesRunCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, _callback);

    }

    /**
     * 
     * Create artifacts from a existing image template
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The operation will be completed asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The operation was successful. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void virtualMachineImageTemplatesRun(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName) throws ApiException {
        virtualMachineImageTemplatesRunWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, imageTemplateName);
    }

    /**
     * 
     * Create artifacts from a existing image template
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The operation will be completed asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The operation was successful. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualMachineImageTemplatesRunWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineImageTemplatesRunValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Create artifacts from a existing image template
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The operation will be completed asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The operation was successful. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesRunAsync(String apiVersion, String subscriptionId, String resourceGroupName, String imageTemplateName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineImageTemplatesRunValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, imageTemplateName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineImageTemplatesUpdate
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters Additional parameters for Image Template update. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesUpdateCall(String subscriptionId, String resourceGroupName, String imageTemplateName, String apiVersion, ImageTemplateUpdateParameters parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "imageTemplateName" + "}", localVarApiClient.escapeString(imageTemplateName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineImageTemplatesUpdateValidateBeforeCall(String subscriptionId, String resourceGroupName, String imageTemplateName, String apiVersion, ImageTemplateUpdateParameters parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineImageTemplatesUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineImageTemplatesUpdate(Async)");
        }

        // verify the required parameter 'imageTemplateName' is set
        if (imageTemplateName == null) {
            throw new ApiException("Missing the required parameter 'imageTemplateName' when calling virtualMachineImageTemplatesUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineImageTemplatesUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling virtualMachineImageTemplatesUpdate(Async)");
        }

        return virtualMachineImageTemplatesUpdateCall(subscriptionId, resourceGroupName, imageTemplateName, apiVersion, parameters, _callback);

    }

    /**
     * 
     * Update the tags for this Virtual Machine Image Template
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters Additional parameters for Image Template update. (required)
     * @return ImageTemplate
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ImageTemplate virtualMachineImageTemplatesUpdate(String subscriptionId, String resourceGroupName, String imageTemplateName, String apiVersion, ImageTemplateUpdateParameters parameters) throws ApiException {
        ApiResponse<ImageTemplate> localVarResp = virtualMachineImageTemplatesUpdateWithHttpInfo(subscriptionId, resourceGroupName, imageTemplateName, apiVersion, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Update the tags for this Virtual Machine Image Template
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters Additional parameters for Image Template update. (required)
     * @return ApiResponse&lt;ImageTemplate&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ImageTemplate> virtualMachineImageTemplatesUpdateWithHttpInfo(String subscriptionId, String resourceGroupName, String imageTemplateName, String apiVersion, ImageTemplateUpdateParameters parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineImageTemplatesUpdateValidateBeforeCall(subscriptionId, resourceGroupName, imageTemplateName, apiVersion, parameters, null);
        Type localVarReturnType = new TypeToken<ImageTemplate>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update the tags for this Virtual Machine Image Template
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param imageTemplateName The name of the image Template (required)
     * @param apiVersion Client Api Version. (required)
     * @param parameters Additional parameters for Image Template update. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineImageTemplatesUpdateAsync(String subscriptionId, String resourceGroupName, String imageTemplateName, String apiVersion, ImageTemplateUpdateParameters parameters, final ApiCallback<ImageTemplate> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineImageTemplatesUpdateValidateBeforeCall(subscriptionId, resourceGroupName, imageTemplateName, apiVersion, parameters, _callback);
        Type localVarReturnType = new TypeToken<ImageTemplate>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
