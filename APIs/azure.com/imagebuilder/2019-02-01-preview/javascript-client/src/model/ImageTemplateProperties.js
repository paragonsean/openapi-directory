/**
 * VirtualMachineImageTemplate
 * Virtual Machine Image Template
 *
 * The version of the OpenAPI document: 2019-02-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageTemplateCustomizer from './ImageTemplateCustomizer';
import ImageTemplateDistributor from './ImageTemplateDistributor';
import ImageTemplateLastRunStatus from './ImageTemplateLastRunStatus';
import ImageTemplateSource from './ImageTemplateSource';
import ProvisioningError from './ProvisioningError';
import ProvisioningState from './ProvisioningState';

/**
 * The ImageTemplateProperties model module.
 * @module model/ImageTemplateProperties
 * @version 2019-02-01-preview
 */
class ImageTemplateProperties {
    /**
     * Constructs a new <code>ImageTemplateProperties</code>.
     * @alias module:model/ImageTemplateProperties
     * @param distribute {Array.<module:model/ImageTemplateDistributor>} The distribution targets where the image output needs to go to.
     * @param source {module:model/ImageTemplateSource} 
     */
    constructor(distribute, source) { 
        
        ImageTemplateProperties.initialize(this, distribute, source);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, distribute, source) { 
        obj['distribute'] = distribute;
        obj['source'] = source;
    }

    /**
     * Constructs a <code>ImageTemplateProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageTemplateProperties} obj Optional instance to populate.
     * @return {module:model/ImageTemplateProperties} The populated <code>ImageTemplateProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageTemplateProperties();

            if (data.hasOwnProperty('customize')) {
                obj['customize'] = ApiClient.convertToType(data['customize'], [ImageTemplateCustomizer]);
            }
            if (data.hasOwnProperty('distribute')) {
                obj['distribute'] = ApiClient.convertToType(data['distribute'], [ImageTemplateDistributor]);
            }
            if (data.hasOwnProperty('lastRunStatus')) {
                obj['lastRunStatus'] = ImageTemplateLastRunStatus.constructFromObject(data['lastRunStatus']);
            }
            if (data.hasOwnProperty('provisioningError')) {
                obj['provisioningError'] = ProvisioningError.constructFromObject(data['provisioningError']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ProvisioningState.constructFromObject(data['provisioningState']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ImageTemplateSource.constructFromObject(data['source']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageTemplateProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageTemplateProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImageTemplateProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['customize']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['customize'])) {
                throw new Error("Expected the field `customize` to be an array in the JSON data but got " + data['customize']);
            }
            // validate the optional field `customize` (array)
            for (const item of data['customize']) {
                ImageTemplateCustomizer.validateJSON(item);
            };
        }
        if (data['distribute']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['distribute'])) {
                throw new Error("Expected the field `distribute` to be an array in the JSON data but got " + data['distribute']);
            }
            // validate the optional field `distribute` (array)
            for (const item of data['distribute']) {
                ImageTemplateDistributor.validateJSON(item);
            };
        }
        // validate the optional field `lastRunStatus`
        if (data['lastRunStatus']) { // data not null
          ImageTemplateLastRunStatus.validateJSON(data['lastRunStatus']);
        }
        // validate the optional field `provisioningError`
        if (data['provisioningError']) { // data not null
          ProvisioningError.validateJSON(data['provisioningError']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          ImageTemplateSource.validateJSON(data['source']);
        }

        return true;
    }


}

ImageTemplateProperties.RequiredProperties = ["distribute", "source"];

/**
 * Specifies the properties used to describe the customization steps of the image, like Image source etc
 * @member {Array.<module:model/ImageTemplateCustomizer>} customize
 */
ImageTemplateProperties.prototype['customize'] = undefined;

/**
 * The distribution targets where the image output needs to go to.
 * @member {Array.<module:model/ImageTemplateDistributor>} distribute
 */
ImageTemplateProperties.prototype['distribute'] = undefined;

/**
 * @member {module:model/ImageTemplateLastRunStatus} lastRunStatus
 */
ImageTemplateProperties.prototype['lastRunStatus'] = undefined;

/**
 * @member {module:model/ProvisioningError} provisioningError
 */
ImageTemplateProperties.prototype['provisioningError'] = undefined;

/**
 * @member {module:model/ProvisioningState} provisioningState
 */
ImageTemplateProperties.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/ImageTemplateSource} source
 */
ImageTemplateProperties.prototype['source'] = undefined;






export default ImageTemplateProperties;

