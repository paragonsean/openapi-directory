/**
 * VirtualMachineImageTemplate
 * Virtual Machine Image Template
 *
 * The version of the OpenAPI document: 2019-02-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageTemplateCustomizer from './ImageTemplateCustomizer';

/**
 * The ImageTemplatePowerShellCustomizer model module.
 * @module model/ImageTemplatePowerShellCustomizer
 * @version 2019-02-01-preview
 */
class ImageTemplatePowerShellCustomizer {
    /**
     * Constructs a new <code>ImageTemplatePowerShellCustomizer</code>.
     * Runs the specified PowerShell on the VM (Windows). Corresponds to Packer powershell provisioner. Exactly one of &#39;script&#39; or &#39;inline&#39; can be specified.
     * @alias module:model/ImageTemplatePowerShellCustomizer
     * @extends module:model/ImageTemplateCustomizer
     * @implements module:model/ImageTemplateCustomizer
     * @param type {String} The type of customization tool you want to use on the Image. For example, \"Shell\" can be shell customizer
     */
    constructor(type) { 
        ImageTemplateCustomizer.initialize(this, type);
        ImageTemplatePowerShellCustomizer.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
    }

    /**
     * Constructs a <code>ImageTemplatePowerShellCustomizer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageTemplatePowerShellCustomizer} obj Optional instance to populate.
     * @return {module:model/ImageTemplatePowerShellCustomizer} The populated <code>ImageTemplatePowerShellCustomizer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageTemplatePowerShellCustomizer();
            ImageTemplateCustomizer.constructFromObject(data, obj);
            ImageTemplateCustomizer.constructFromObject(data, obj);

            if (data.hasOwnProperty('inline')) {
                obj['inline'] = ApiClient.convertToType(data['inline'], ['String']);
            }
            if (data.hasOwnProperty('script')) {
                obj['script'] = ApiClient.convertToType(data['script'], 'String');
            }
            if (data.hasOwnProperty('validExitCodes')) {
                obj['validExitCodes'] = ApiClient.convertToType(data['validExitCodes'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageTemplatePowerShellCustomizer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageTemplatePowerShellCustomizer</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImageTemplatePowerShellCustomizer.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['inline'])) {
            throw new Error("Expected the field `inline` to be an array in the JSON data but got " + data['inline']);
        }
        // ensure the json data is a string
        if (data['script'] && !(typeof data['script'] === 'string' || data['script'] instanceof String)) {
            throw new Error("Expected the field `script` to be a primitive type in the JSON string but got " + data['script']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['validExitCodes'])) {
            throw new Error("Expected the field `validExitCodes` to be an array in the JSON data but got " + data['validExitCodes']);
        }

        return true;
    }


}

ImageTemplatePowerShellCustomizer.RequiredProperties = ["type"];

/**
 * Array of PowerShell commands to execute
 * @member {Array.<String>} inline
 */
ImageTemplatePowerShellCustomizer.prototype['inline'] = undefined;

/**
 * The PowerShell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc
 * @member {String} script
 */
ImageTemplatePowerShellCustomizer.prototype['script'] = undefined;

/**
 * Valid exit codes for the PowerShell script. [Default: 0]
 * @member {Array.<Number>} validExitCodes
 */
ImageTemplatePowerShellCustomizer.prototype['validExitCodes'] = undefined;


// Implement ImageTemplateCustomizer interface:
/**
 * Friendly Name to provide context on what this customization step does
 * @member {String} name
 */
ImageTemplateCustomizer.prototype['name'] = undefined;
/**
 * The type of customization tool you want to use on the Image. For example, \"Shell\" can be shell customizer
 * @member {String} type
 */
ImageTemplateCustomizer.prototype['type'] = undefined;




export default ImageTemplatePowerShellCustomizer;

