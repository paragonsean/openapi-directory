# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InnerError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_detail: str=None, exception_type: str=None):
        """InnerError - a model defined in OpenAPI

        :param error_detail: The error_detail of this InnerError.
        :param exception_type: The exception_type of this InnerError.
        """
        self.openapi_types = {
            'error_detail': str,
            'exception_type': str
        }

        self.attribute_map = {
            'error_detail': 'errorDetail',
            'exception_type': 'exceptionType'
        }

        self._error_detail = error_detail
        self._exception_type = exception_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InnerError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InnerError of this InnerError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_detail(self):
        """Gets the error_detail of this InnerError.

        The internal error message or exception dump.

        :return: The error_detail of this InnerError.
        :rtype: str
        """
        return self._error_detail

    @error_detail.setter
    def error_detail(self, error_detail):
        """Sets the error_detail of this InnerError.

        The internal error message or exception dump.

        :param error_detail: The error_detail of this InnerError.
        :type error_detail: str
        """

        self._error_detail = error_detail

    @property
    def exception_type(self):
        """Gets the exception_type of this InnerError.

        The exception type.

        :return: The exception_type of this InnerError.
        :rtype: str
        """
        return self._exception_type

    @exception_type.setter
    def exception_type(self, exception_type):
        """Sets the exception_type of this InnerError.

        The exception type.

        :param exception_type: The exception_type of this InnerError.
        :type exception_type: str
        """

        self._exception_type = exception_type
