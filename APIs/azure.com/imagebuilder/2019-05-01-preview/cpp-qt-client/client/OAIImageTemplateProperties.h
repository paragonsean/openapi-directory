/**
 * VirtualMachineImageTemplate
 * Virtual Machine Image Template
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageTemplateProperties.h
 *
 * Describes the properties of an image template
 */

#ifndef OAIImageTemplateProperties_H
#define OAIImageTemplateProperties_H

#include <QJsonObject>

#include "OAIImageTemplateCustomizer.h"
#include "OAIImageTemplateDistributor.h"
#include "OAIImageTemplateLastRunStatus.h"
#include "OAIImageTemplateSource.h"
#include "OAIImageTemplateVmProfile.h"
#include "OAIProvisioningError.h"
#include "OAIProvisioningState.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImageTemplateCustomizer;
class OAIImageTemplateDistributor;
class OAIImageTemplateLastRunStatus;
class OAIProvisioningError;
class OAIImageTemplateSource;
class OAIImageTemplateVmProfile;

class OAIImageTemplateProperties : public OAIObject {
public:
    OAIImageTemplateProperties();
    OAIImageTemplateProperties(QString json);
    ~OAIImageTemplateProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBuildTimeoutInMinutes() const;
    void setBuildTimeoutInMinutes(const qint32 &build_timeout_in_minutes);
    bool is_build_timeout_in_minutes_Set() const;
    bool is_build_timeout_in_minutes_Valid() const;

    QList<OAIImageTemplateCustomizer> getCustomize() const;
    void setCustomize(const QList<OAIImageTemplateCustomizer> &customize);
    bool is_customize_Set() const;
    bool is_customize_Valid() const;

    QList<OAIImageTemplateDistributor> getDistribute() const;
    void setDistribute(const QList<OAIImageTemplateDistributor> &distribute);
    bool is_distribute_Set() const;
    bool is_distribute_Valid() const;

    OAIImageTemplateLastRunStatus getLastRunStatus() const;
    void setLastRunStatus(const OAIImageTemplateLastRunStatus &last_run_status);
    bool is_last_run_status_Set() const;
    bool is_last_run_status_Valid() const;

    OAIProvisioningError getProvisioningError() const;
    void setProvisioningError(const OAIProvisioningError &provisioning_error);
    bool is_provisioning_error_Set() const;
    bool is_provisioning_error_Valid() const;

    OAIProvisioningState getProvisioningState() const;
    void setProvisioningState(const OAIProvisioningState &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIImageTemplateSource getSource() const;
    void setSource(const OAIImageTemplateSource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    OAIImageTemplateVmProfile getVmProfile() const;
    void setVmProfile(const OAIImageTemplateVmProfile &vm_profile);
    bool is_vm_profile_Set() const;
    bool is_vm_profile_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_build_timeout_in_minutes;
    bool m_build_timeout_in_minutes_isSet;
    bool m_build_timeout_in_minutes_isValid;

    QList<OAIImageTemplateCustomizer> m_customize;
    bool m_customize_isSet;
    bool m_customize_isValid;

    QList<OAIImageTemplateDistributor> m_distribute;
    bool m_distribute_isSet;
    bool m_distribute_isValid;

    OAIImageTemplateLastRunStatus m_last_run_status;
    bool m_last_run_status_isSet;
    bool m_last_run_status_isValid;

    OAIProvisioningError m_provisioning_error;
    bool m_provisioning_error_isSet;
    bool m_provisioning_error_isValid;

    OAIProvisioningState m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIImageTemplateSource m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    OAIImageTemplateVmProfile m_vm_profile;
    bool m_vm_profile_isSet;
    bool m_vm_profile_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageTemplateProperties)

#endif // OAIImageTemplateProperties_H
