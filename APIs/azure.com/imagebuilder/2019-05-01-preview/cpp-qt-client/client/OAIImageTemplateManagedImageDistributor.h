/**
 * VirtualMachineImageTemplate
 * Virtual Machine Image Template
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageTemplateManagedImageDistributor.h
 *
 * Distribute as a Managed Disk Image.
 */

#ifndef OAIImageTemplateManagedImageDistributor_H
#define OAIImageTemplateManagedImageDistributor_H

#include <QJsonObject>

#include "OAIImageTemplateDistributor.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImageTemplateManagedImageDistributor : public OAIObject {
public:
    OAIImageTemplateManagedImageDistributor();
    OAIImageTemplateManagedImageDistributor(QString json);
    ~OAIImageTemplateManagedImageDistributor() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getImageId() const;
    void setImageId(const QString &image_id);
    bool is_image_id_Set() const;
    bool is_image_id_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QMap<QString, QString> getArtifactTags() const;
    void setArtifactTags(const QMap<QString, QString> &artifact_tags);
    bool is_artifact_tags_Set() const;
    bool is_artifact_tags_Valid() const;

    QString getRunOutputName() const;
    void setRunOutputName(const QString &run_output_name);
    bool is_run_output_name_Set() const;
    bool is_run_output_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_image_id;
    bool m_image_id_isSet;
    bool m_image_id_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QMap<QString, QString> m_artifact_tags;
    bool m_artifact_tags_isSet;
    bool m_artifact_tags_isValid;

    QString m_run_output_name;
    bool m_run_output_name_isSet;
    bool m_run_output_name_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageTemplateManagedImageDistributor)

#endif // OAIImageTemplateManagedImageDistributor_H
