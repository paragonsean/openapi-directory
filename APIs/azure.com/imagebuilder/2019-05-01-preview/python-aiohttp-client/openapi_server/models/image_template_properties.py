# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_template_customizer import ImageTemplateCustomizer
from openapi_server.models.image_template_distributor import ImageTemplateDistributor
from openapi_server.models.image_template_last_run_status import ImageTemplateLastRunStatus
from openapi_server.models.image_template_source import ImageTemplateSource
from openapi_server.models.image_template_vm_profile import ImageTemplateVmProfile
from openapi_server.models.provisioning_error import ProvisioningError
from openapi_server.models.provisioning_state import ProvisioningState
from openapi_server import util


class ImageTemplateProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build_timeout_in_minutes: int=None, customize: List[ImageTemplateCustomizer]=None, distribute: List[ImageTemplateDistributor]=None, last_run_status: ImageTemplateLastRunStatus=None, provisioning_error: ProvisioningError=None, provisioning_state: ProvisioningState=None, source: ImageTemplateSource=None, vm_profile: ImageTemplateVmProfile=None):
        """ImageTemplateProperties - a model defined in OpenAPI

        :param build_timeout_in_minutes: The build_timeout_in_minutes of this ImageTemplateProperties.
        :param customize: The customize of this ImageTemplateProperties.
        :param distribute: The distribute of this ImageTemplateProperties.
        :param last_run_status: The last_run_status of this ImageTemplateProperties.
        :param provisioning_error: The provisioning_error of this ImageTemplateProperties.
        :param provisioning_state: The provisioning_state of this ImageTemplateProperties.
        :param source: The source of this ImageTemplateProperties.
        :param vm_profile: The vm_profile of this ImageTemplateProperties.
        """
        self.openapi_types = {
            'build_timeout_in_minutes': int,
            'customize': List[ImageTemplateCustomizer],
            'distribute': List[ImageTemplateDistributor],
            'last_run_status': ImageTemplateLastRunStatus,
            'provisioning_error': ProvisioningError,
            'provisioning_state': ProvisioningState,
            'source': ImageTemplateSource,
            'vm_profile': ImageTemplateVmProfile
        }

        self.attribute_map = {
            'build_timeout_in_minutes': 'buildTimeoutInMinutes',
            'customize': 'customize',
            'distribute': 'distribute',
            'last_run_status': 'lastRunStatus',
            'provisioning_error': 'provisioningError',
            'provisioning_state': 'provisioningState',
            'source': 'source',
            'vm_profile': 'vmProfile'
        }

        self._build_timeout_in_minutes = build_timeout_in_minutes
        self._customize = customize
        self._distribute = distribute
        self._last_run_status = last_run_status
        self._provisioning_error = provisioning_error
        self._provisioning_state = provisioning_state
        self._source = source
        self._vm_profile = vm_profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageTemplateProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageTemplateProperties of this ImageTemplateProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build_timeout_in_minutes(self):
        """Gets the build_timeout_in_minutes of this ImageTemplateProperties.

        Maximum duration to wait while building the image template. Omit or specify 0 to use the default (4 hours).

        :return: The build_timeout_in_minutes of this ImageTemplateProperties.
        :rtype: int
        """
        return self._build_timeout_in_minutes

    @build_timeout_in_minutes.setter
    def build_timeout_in_minutes(self, build_timeout_in_minutes):
        """Sets the build_timeout_in_minutes of this ImageTemplateProperties.

        Maximum duration to wait while building the image template. Omit or specify 0 to use the default (4 hours).

        :param build_timeout_in_minutes: The build_timeout_in_minutes of this ImageTemplateProperties.
        :type build_timeout_in_minutes: int
        """
        if build_timeout_in_minutes is not None and build_timeout_in_minutes > 960:
            raise ValueError("Invalid value for `build_timeout_in_minutes`, must be a value less than or equal to `960`")
        if build_timeout_in_minutes is not None and build_timeout_in_minutes < 0:
            raise ValueError("Invalid value for `build_timeout_in_minutes`, must be a value greater than or equal to `0`")

        self._build_timeout_in_minutes = build_timeout_in_minutes

    @property
    def customize(self):
        """Gets the customize of this ImageTemplateProperties.

        Specifies the properties used to describe the customization steps of the image, like Image source etc

        :return: The customize of this ImageTemplateProperties.
        :rtype: List[ImageTemplateCustomizer]
        """
        return self._customize

    @customize.setter
    def customize(self, customize):
        """Sets the customize of this ImageTemplateProperties.

        Specifies the properties used to describe the customization steps of the image, like Image source etc

        :param customize: The customize of this ImageTemplateProperties.
        :type customize: List[ImageTemplateCustomizer]
        """

        self._customize = customize

    @property
    def distribute(self):
        """Gets the distribute of this ImageTemplateProperties.

        The distribution targets where the image output needs to go to.

        :return: The distribute of this ImageTemplateProperties.
        :rtype: List[ImageTemplateDistributor]
        """
        return self._distribute

    @distribute.setter
    def distribute(self, distribute):
        """Sets the distribute of this ImageTemplateProperties.

        The distribution targets where the image output needs to go to.

        :param distribute: The distribute of this ImageTemplateProperties.
        :type distribute: List[ImageTemplateDistributor]
        """
        if distribute is None:
            raise ValueError("Invalid value for `distribute`, must not be `None`")

        self._distribute = distribute

    @property
    def last_run_status(self):
        """Gets the last_run_status of this ImageTemplateProperties.


        :return: The last_run_status of this ImageTemplateProperties.
        :rtype: ImageTemplateLastRunStatus
        """
        return self._last_run_status

    @last_run_status.setter
    def last_run_status(self, last_run_status):
        """Sets the last_run_status of this ImageTemplateProperties.


        :param last_run_status: The last_run_status of this ImageTemplateProperties.
        :type last_run_status: ImageTemplateLastRunStatus
        """

        self._last_run_status = last_run_status

    @property
    def provisioning_error(self):
        """Gets the provisioning_error of this ImageTemplateProperties.


        :return: The provisioning_error of this ImageTemplateProperties.
        :rtype: ProvisioningError
        """
        return self._provisioning_error

    @provisioning_error.setter
    def provisioning_error(self, provisioning_error):
        """Sets the provisioning_error of this ImageTemplateProperties.


        :param provisioning_error: The provisioning_error of this ImageTemplateProperties.
        :type provisioning_error: ProvisioningError
        """

        self._provisioning_error = provisioning_error

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ImageTemplateProperties.


        :return: The provisioning_state of this ImageTemplateProperties.
        :rtype: ProvisioningState
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ImageTemplateProperties.


        :param provisioning_state: The provisioning_state of this ImageTemplateProperties.
        :type provisioning_state: ProvisioningState
        """

        self._provisioning_state = provisioning_state

    @property
    def source(self):
        """Gets the source of this ImageTemplateProperties.


        :return: The source of this ImageTemplateProperties.
        :rtype: ImageTemplateSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this ImageTemplateProperties.


        :param source: The source of this ImageTemplateProperties.
        :type source: ImageTemplateSource
        """
        if source is None:
            raise ValueError("Invalid value for `source`, must not be `None`")

        self._source = source

    @property
    def vm_profile(self):
        """Gets the vm_profile of this ImageTemplateProperties.


        :return: The vm_profile of this ImageTemplateProperties.
        :rtype: ImageTemplateVmProfile
        """
        return self._vm_profile

    @vm_profile.setter
    def vm_profile(self, vm_profile):
        """Sets the vm_profile of this ImageTemplateProperties.


        :param vm_profile: The vm_profile of this ImageTemplateProperties.
        :type vm_profile: ImageTemplateVmProfile
        """

        self._vm_profile = vm_profile
