# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_template_customizer import ImageTemplateCustomizer
from openapi_server import util


class ImageTemplateShellCustomizer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inline: List[str]=None, script_uri: str=None, sha256_checksum: str=None, name: str=None, type: str=None):
        """ImageTemplateShellCustomizer - a model defined in OpenAPI

        :param inline: The inline of this ImageTemplateShellCustomizer.
        :param script_uri: The script_uri of this ImageTemplateShellCustomizer.
        :param sha256_checksum: The sha256_checksum of this ImageTemplateShellCustomizer.
        :param name: The name of this ImageTemplateShellCustomizer.
        :param type: The type of this ImageTemplateShellCustomizer.
        """
        self.openapi_types = {
            'inline': List[str],
            'script_uri': str,
            'sha256_checksum': str,
            'name': str,
            'type': str
        }

        self.attribute_map = {
            'inline': 'inline',
            'script_uri': 'scriptUri',
            'sha256_checksum': 'sha256Checksum',
            'name': 'name',
            'type': 'type'
        }

        self._inline = inline
        self._script_uri = script_uri
        self._sha256_checksum = sha256_checksum
        self._name = name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageTemplateShellCustomizer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageTemplateShellCustomizer of this ImageTemplateShellCustomizer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inline(self):
        """Gets the inline of this ImageTemplateShellCustomizer.

        Array of shell commands to execute

        :return: The inline of this ImageTemplateShellCustomizer.
        :rtype: List[str]
        """
        return self._inline

    @inline.setter
    def inline(self, inline):
        """Sets the inline of this ImageTemplateShellCustomizer.

        Array of shell commands to execute

        :param inline: The inline of this ImageTemplateShellCustomizer.
        :type inline: List[str]
        """

        self._inline = inline

    @property
    def script_uri(self):
        """Gets the script_uri of this ImageTemplateShellCustomizer.

        URI of the shell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc

        :return: The script_uri of this ImageTemplateShellCustomizer.
        :rtype: str
        """
        return self._script_uri

    @script_uri.setter
    def script_uri(self, script_uri):
        """Sets the script_uri of this ImageTemplateShellCustomizer.

        URI of the shell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc

        :param script_uri: The script_uri of this ImageTemplateShellCustomizer.
        :type script_uri: str
        """

        self._script_uri = script_uri

    @property
    def sha256_checksum(self):
        """Gets the sha256_checksum of this ImageTemplateShellCustomizer.

        SHA256 checksum of the shell script provided in the scriptUri field

        :return: The sha256_checksum of this ImageTemplateShellCustomizer.
        :rtype: str
        """
        return self._sha256_checksum

    @sha256_checksum.setter
    def sha256_checksum(self, sha256_checksum):
        """Sets the sha256_checksum of this ImageTemplateShellCustomizer.

        SHA256 checksum of the shell script provided in the scriptUri field

        :param sha256_checksum: The sha256_checksum of this ImageTemplateShellCustomizer.
        :type sha256_checksum: str
        """

        self._sha256_checksum = sha256_checksum

    @property
    def name(self):
        """Gets the name of this ImageTemplateShellCustomizer.

        Friendly Name to provide context on what this customization step does

        :return: The name of this ImageTemplateShellCustomizer.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ImageTemplateShellCustomizer.

        Friendly Name to provide context on what this customization step does

        :param name: The name of this ImageTemplateShellCustomizer.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this ImageTemplateShellCustomizer.

        The type of customization tool you want to use on the Image. For example, \"Shell\" can be shell customizer

        :return: The type of this ImageTemplateShellCustomizer.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ImageTemplateShellCustomizer.

        The type of customization tool you want to use on the Image. For example, \"Shell\" can be shell customizer

        :param type: The type of this ImageTemplateShellCustomizer.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
