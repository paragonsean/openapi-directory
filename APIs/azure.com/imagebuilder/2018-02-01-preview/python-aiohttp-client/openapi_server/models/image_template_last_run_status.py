# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageTemplateLastRunStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_time: datetime=None, message: str=None, run_state: str=None, run_sub_state: str=None, start_time: datetime=None):
        """ImageTemplateLastRunStatus - a model defined in OpenAPI

        :param end_time: The end_time of this ImageTemplateLastRunStatus.
        :param message: The message of this ImageTemplateLastRunStatus.
        :param run_state: The run_state of this ImageTemplateLastRunStatus.
        :param run_sub_state: The run_sub_state of this ImageTemplateLastRunStatus.
        :param start_time: The start_time of this ImageTemplateLastRunStatus.
        """
        self.openapi_types = {
            'end_time': datetime,
            'message': str,
            'run_state': str,
            'run_sub_state': str,
            'start_time': datetime
        }

        self.attribute_map = {
            'end_time': 'endTime',
            'message': 'message',
            'run_state': 'runState',
            'run_sub_state': 'runSubState',
            'start_time': 'startTime'
        }

        self._end_time = end_time
        self._message = message
        self._run_state = run_state
        self._run_sub_state = run_sub_state
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageTemplateLastRunStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageTemplateLastRunStatus of this ImageTemplateLastRunStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_time(self):
        """Gets the end_time of this ImageTemplateLastRunStatus.

        End time of the last run (UTC)

        :return: The end_time of this ImageTemplateLastRunStatus.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this ImageTemplateLastRunStatus.

        End time of the last run (UTC)

        :param end_time: The end_time of this ImageTemplateLastRunStatus.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def message(self):
        """Gets the message of this ImageTemplateLastRunStatus.

        Verbose information about the last run state

        :return: The message of this ImageTemplateLastRunStatus.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ImageTemplateLastRunStatus.

        Verbose information about the last run state

        :param message: The message of this ImageTemplateLastRunStatus.
        :type message: str
        """

        self._message = message

    @property
    def run_state(self):
        """Gets the run_state of this ImageTemplateLastRunStatus.

        State of the last run

        :return: The run_state of this ImageTemplateLastRunStatus.
        :rtype: str
        """
        return self._run_state

    @run_state.setter
    def run_state(self, run_state):
        """Sets the run_state of this ImageTemplateLastRunStatus.

        State of the last run

        :param run_state: The run_state of this ImageTemplateLastRunStatus.
        :type run_state: str
        """
        allowed_values = ["ready", "running", "succeeded", "partiallySucceeded", "failed"]  # noqa: E501
        if run_state not in allowed_values:
            raise ValueError(
                "Invalid value for `run_state` ({0}), must be one of {1}"
                .format(run_state, allowed_values)
            )

        self._run_state = run_state

    @property
    def run_sub_state(self):
        """Gets the run_sub_state of this ImageTemplateLastRunStatus.

        Sub state of the last run

        :return: The run_sub_state of this ImageTemplateLastRunStatus.
        :rtype: str
        """
        return self._run_sub_state

    @run_sub_state.setter
    def run_sub_state(self, run_sub_state):
        """Sets the run_sub_state of this ImageTemplateLastRunStatus.

        Sub state of the last run

        :param run_sub_state: The run_sub_state of this ImageTemplateLastRunStatus.
        :type run_sub_state: str
        """
        allowed_values = ["queued", "building", "customizing", "distributing"]  # noqa: E501
        if run_sub_state not in allowed_values:
            raise ValueError(
                "Invalid value for `run_sub_state` ({0}), must be one of {1}"
                .format(run_sub_state, allowed_values)
            )

        self._run_sub_state = run_sub_state

    @property
    def start_time(self):
        """Gets the start_time of this ImageTemplateLastRunStatus.

        Start time of the last run (UTC)

        :return: The start_time of this ImageTemplateLastRunStatus.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ImageTemplateLastRunStatus.

        Start time of the last run (UTC)

        :param start_time: The start_time of this ImageTemplateLastRunStatus.
        :type start_time: datetime
        """

        self._start_time = start_time
