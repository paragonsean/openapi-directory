# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_template_source import ImageTemplateSource
from openapi_server import util


class ImageTemplatePlatformImageSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offer: str=None, publisher: str=None, sku: str=None, version: str=None, type: str=None):
        """ImageTemplatePlatformImageSource - a model defined in OpenAPI

        :param offer: The offer of this ImageTemplatePlatformImageSource.
        :param publisher: The publisher of this ImageTemplatePlatformImageSource.
        :param sku: The sku of this ImageTemplatePlatformImageSource.
        :param version: The version of this ImageTemplatePlatformImageSource.
        :param type: The type of this ImageTemplatePlatformImageSource.
        """
        self.openapi_types = {
            'offer': str,
            'publisher': str,
            'sku': str,
            'version': str,
            'type': str
        }

        self.attribute_map = {
            'offer': 'offer',
            'publisher': 'publisher',
            'sku': 'sku',
            'version': 'version',
            'type': 'type'
        }

        self._offer = offer
        self._publisher = publisher
        self._sku = sku
        self._version = version
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageTemplatePlatformImageSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageTemplatePlatformImageSource of this ImageTemplatePlatformImageSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offer(self):
        """Gets the offer of this ImageTemplatePlatformImageSource.

        Image offer from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).

        :return: The offer of this ImageTemplatePlatformImageSource.
        :rtype: str
        """
        return self._offer

    @offer.setter
    def offer(self, offer):
        """Sets the offer of this ImageTemplatePlatformImageSource.

        Image offer from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).

        :param offer: The offer of this ImageTemplatePlatformImageSource.
        :type offer: str
        """

        self._offer = offer

    @property
    def publisher(self):
        """Gets the publisher of this ImageTemplatePlatformImageSource.

        Image Publisher in [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).

        :return: The publisher of this ImageTemplatePlatformImageSource.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher):
        """Sets the publisher of this ImageTemplatePlatformImageSource.

        Image Publisher in [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).

        :param publisher: The publisher of this ImageTemplatePlatformImageSource.
        :type publisher: str
        """

        self._publisher = publisher

    @property
    def sku(self):
        """Gets the sku of this ImageTemplatePlatformImageSource.

        Image sku from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).

        :return: The sku of this ImageTemplatePlatformImageSource.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this ImageTemplatePlatformImageSource.

        Image sku from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).

        :param sku: The sku of this ImageTemplatePlatformImageSource.
        :type sku: str
        """

        self._sku = sku

    @property
    def version(self):
        """Gets the version of this ImageTemplatePlatformImageSource.

        Image version from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).

        :return: The version of this ImageTemplatePlatformImageSource.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ImageTemplatePlatformImageSource.

        Image version from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).

        :param version: The version of this ImageTemplatePlatformImageSource.
        :type version: str
        """

        self._version = version

    @property
    def type(self):
        """Gets the type of this ImageTemplatePlatformImageSource.

        Specifies the type of source image you want to start with.

        :return: The type of this ImageTemplatePlatformImageSource.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ImageTemplatePlatformImageSource.

        Specifies the type of source image you want to start with.

        :param type: The type of this ImageTemplatePlatformImageSource.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
