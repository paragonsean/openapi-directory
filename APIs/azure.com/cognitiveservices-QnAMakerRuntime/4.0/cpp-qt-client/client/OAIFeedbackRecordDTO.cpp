/**
 * QnAMaker Runtime Client
 * An API for QnAMaker runtime
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFeedbackRecordDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFeedbackRecordDTO::OAIFeedbackRecordDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFeedbackRecordDTO::OAIFeedbackRecordDTO() {
    this->initializeModel();
}

OAIFeedbackRecordDTO::~OAIFeedbackRecordDTO() {}

void OAIFeedbackRecordDTO::initializeModel() {

    m_qna_id_isSet = false;
    m_qna_id_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_user_question_isSet = false;
    m_user_question_isValid = false;
}

void OAIFeedbackRecordDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFeedbackRecordDTO::fromJsonObject(QJsonObject json) {

    m_qna_id_isValid = ::OpenAPI::fromJsonValue(m_qna_id, json[QString("qnaId")]);
    m_qna_id_isSet = !json[QString("qnaId")].isNull() && m_qna_id_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;

    m_user_question_isValid = ::OpenAPI::fromJsonValue(m_user_question, json[QString("userQuestion")]);
    m_user_question_isSet = !json[QString("userQuestion")].isNull() && m_user_question_isValid;
}

QString OAIFeedbackRecordDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFeedbackRecordDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_qna_id_isSet) {
        obj.insert(QString("qnaId"), ::OpenAPI::toJsonValue(m_qna_id));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_user_question_isSet) {
        obj.insert(QString("userQuestion"), ::OpenAPI::toJsonValue(m_user_question));
    }
    return obj;
}

qint32 OAIFeedbackRecordDTO::getQnaId() const {
    return m_qna_id;
}
void OAIFeedbackRecordDTO::setQnaId(const qint32 &qna_id) {
    m_qna_id = qna_id;
    m_qna_id_isSet = true;
}

bool OAIFeedbackRecordDTO::is_qna_id_Set() const{
    return m_qna_id_isSet;
}

bool OAIFeedbackRecordDTO::is_qna_id_Valid() const{
    return m_qna_id_isValid;
}

QString OAIFeedbackRecordDTO::getUserId() const {
    return m_user_id;
}
void OAIFeedbackRecordDTO::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIFeedbackRecordDTO::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIFeedbackRecordDTO::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAIFeedbackRecordDTO::getUserQuestion() const {
    return m_user_question;
}
void OAIFeedbackRecordDTO::setUserQuestion(const QString &user_question) {
    m_user_question = user_question;
    m_user_question_isSet = true;
}

bool OAIFeedbackRecordDTO::is_user_question_Set() const{
    return m_user_question_isSet;
}

bool OAIFeedbackRecordDTO::is_user_question_Valid() const{
    return m_user_question_isValid;
}

bool OAIFeedbackRecordDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_qna_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_question_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFeedbackRecordDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
