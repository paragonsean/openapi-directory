/**
 * QnAMaker Runtime Client
 * An API for QnAMaker runtime
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPromptDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPromptDTO::OAIPromptDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPromptDTO::OAIPromptDTO() {
    this->initializeModel();
}

OAIPromptDTO::~OAIPromptDTO() {}

void OAIPromptDTO::initializeModel() {

    m_display_order_isSet = false;
    m_display_order_isValid = false;

    m_display_text_isSet = false;
    m_display_text_isValid = false;

    m_qna_isSet = false;
    m_qna_isValid = false;

    m_qna_id_isSet = false;
    m_qna_id_isValid = false;
}

void OAIPromptDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPromptDTO::fromJsonObject(QJsonObject json) {

    m_display_order_isValid = ::OpenAPI::fromJsonValue(m_display_order, json[QString("displayOrder")]);
    m_display_order_isSet = !json[QString("displayOrder")].isNull() && m_display_order_isValid;

    m_display_text_isValid = ::OpenAPI::fromJsonValue(m_display_text, json[QString("displayText")]);
    m_display_text_isSet = !json[QString("displayText")].isNull() && m_display_text_isValid;

    m_qna_isValid = ::OpenAPI::fromJsonValue(m_qna, json[QString("qna")]);
    m_qna_isSet = !json[QString("qna")].isNull() && m_qna_isValid;

    m_qna_id_isValid = ::OpenAPI::fromJsonValue(m_qna_id, json[QString("qnaId")]);
    m_qna_id_isSet = !json[QString("qnaId")].isNull() && m_qna_id_isValid;
}

QString OAIPromptDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPromptDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_display_order_isSet) {
        obj.insert(QString("displayOrder"), ::OpenAPI::toJsonValue(m_display_order));
    }
    if (m_display_text_isSet) {
        obj.insert(QString("displayText"), ::OpenAPI::toJsonValue(m_display_text));
    }
    if (m_qna.isSet()) {
        obj.insert(QString("qna"), ::OpenAPI::toJsonValue(m_qna));
    }
    if (m_qna_id_isSet) {
        obj.insert(QString("qnaId"), ::OpenAPI::toJsonValue(m_qna_id));
    }
    return obj;
}

qint32 OAIPromptDTO::getDisplayOrder() const {
    return m_display_order;
}
void OAIPromptDTO::setDisplayOrder(const qint32 &display_order) {
    m_display_order = display_order;
    m_display_order_isSet = true;
}

bool OAIPromptDTO::is_display_order_Set() const{
    return m_display_order_isSet;
}

bool OAIPromptDTO::is_display_order_Valid() const{
    return m_display_order_isValid;
}

QString OAIPromptDTO::getDisplayText() const {
    return m_display_text;
}
void OAIPromptDTO::setDisplayText(const QString &display_text) {
    m_display_text = display_text;
    m_display_text_isSet = true;
}

bool OAIPromptDTO::is_display_text_Set() const{
    return m_display_text_isSet;
}

bool OAIPromptDTO::is_display_text_Valid() const{
    return m_display_text_isValid;
}

OAIQnADTO OAIPromptDTO::getQna() const {
    return m_qna;
}
void OAIPromptDTO::setQna(const OAIQnADTO &qna) {
    m_qna = qna;
    m_qna_isSet = true;
}

bool OAIPromptDTO::is_qna_Set() const{
    return m_qna_isSet;
}

bool OAIPromptDTO::is_qna_Valid() const{
    return m_qna_isValid;
}

qint32 OAIPromptDTO::getQnaId() const {
    return m_qna_id;
}
void OAIPromptDTO::setQnaId(const qint32 &qna_id) {
    m_qna_id = qna_id;
    m_qna_id_isSet = true;
}

bool OAIPromptDTO::is_qna_id_Set() const{
    return m_qna_id_isSet;
}

bool OAIPromptDTO::is_qna_id_Valid() const{
    return m_qna_id_isValid;
}

bool OAIPromptDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qna.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_qna_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPromptDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
