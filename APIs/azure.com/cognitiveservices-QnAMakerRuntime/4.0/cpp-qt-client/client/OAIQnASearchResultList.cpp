/**
 * QnAMaker Runtime Client
 * An API for QnAMaker runtime
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQnASearchResultList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQnASearchResultList::OAIQnASearchResultList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQnASearchResultList::OAIQnASearchResultList() {
    this->initializeModel();
}

OAIQnASearchResultList::~OAIQnASearchResultList() {}

void OAIQnASearchResultList::initializeModel() {

    m_answers_isSet = false;
    m_answers_isValid = false;
}

void OAIQnASearchResultList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQnASearchResultList::fromJsonObject(QJsonObject json) {

    m_answers_isValid = ::OpenAPI::fromJsonValue(m_answers, json[QString("answers")]);
    m_answers_isSet = !json[QString("answers")].isNull() && m_answers_isValid;
}

QString OAIQnASearchResultList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQnASearchResultList::asJsonObject() const {
    QJsonObject obj;
    if (m_answers.size() > 0) {
        obj.insert(QString("answers"), ::OpenAPI::toJsonValue(m_answers));
    }
    return obj;
}

QList<OAIQnASearchResult> OAIQnASearchResultList::getAnswers() const {
    return m_answers;
}
void OAIQnASearchResultList::setAnswers(const QList<OAIQnASearchResult> &answers) {
    m_answers = answers;
    m_answers_isSet = true;
}

bool OAIQnASearchResultList::is_answers_Set() const{
    return m_answers_isSet;
}

bool OAIQnASearchResultList::is_answers_Valid() const{
    return m_answers_isValid;
}

bool OAIQnASearchResultList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_answers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQnASearchResultList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
