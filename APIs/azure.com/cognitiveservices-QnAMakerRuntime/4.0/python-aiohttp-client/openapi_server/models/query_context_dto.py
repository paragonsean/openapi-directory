# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryContextDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, previous_qna_id: str=None, previous_user_query: str=None):
        """QueryContextDTO - a model defined in OpenAPI

        :param previous_qna_id: The previous_qna_id of this QueryContextDTO.
        :param previous_user_query: The previous_user_query of this QueryContextDTO.
        """
        self.openapi_types = {
            'previous_qna_id': str,
            'previous_user_query': str
        }

        self.attribute_map = {
            'previous_qna_id': 'previousQnaId',
            'previous_user_query': 'previousUserQuery'
        }

        self._previous_qna_id = previous_qna_id
        self._previous_user_query = previous_user_query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryContextDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryContextDTO of this QueryContextDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def previous_qna_id(self):
        """Gets the previous_qna_id of this QueryContextDTO.

        Previous QnA Id - qnaId of the top result.

        :return: The previous_qna_id of this QueryContextDTO.
        :rtype: str
        """
        return self._previous_qna_id

    @previous_qna_id.setter
    def previous_qna_id(self, previous_qna_id):
        """Sets the previous_qna_id of this QueryContextDTO.

        Previous QnA Id - qnaId of the top result.

        :param previous_qna_id: The previous_qna_id of this QueryContextDTO.
        :type previous_qna_id: str
        """

        self._previous_qna_id = previous_qna_id

    @property
    def previous_user_query(self):
        """Gets the previous_user_query of this QueryContextDTO.

        Previous user query.

        :return: The previous_user_query of this QueryContextDTO.
        :rtype: str
        """
        return self._previous_user_query

    @previous_user_query.setter
    def previous_user_query(self, previous_user_query):
        """Sets the previous_user_query of this QueryContextDTO.

        Previous user query.

        :param previous_user_query: The previous_user_query of this QueryContextDTO.
        :type previous_user_query: str
        """

        self._previous_user_query = previous_user_query
