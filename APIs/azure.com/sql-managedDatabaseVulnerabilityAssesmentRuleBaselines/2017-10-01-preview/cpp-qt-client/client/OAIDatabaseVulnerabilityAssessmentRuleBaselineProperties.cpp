/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties() {
    this->initializeModel();
}

OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::~OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties() {}

void OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::initializeModel() {

    m_baseline_results_isSet = false;
    m_baseline_results_isValid = false;
}

void OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::fromJsonObject(QJsonObject json) {

    m_baseline_results_isValid = ::OpenAPI::fromJsonValue(m_baseline_results, json[QString("baselineResults")]);
    m_baseline_results_isSet = !json[QString("baselineResults")].isNull() && m_baseline_results_isValid;
}

QString OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_baseline_results.size() > 0) {
        obj.insert(QString("baselineResults"), ::OpenAPI::toJsonValue(m_baseline_results));
    }
    return obj;
}

QList<OAIDatabaseVulnerabilityAssessmentRuleBaselineItem> OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::getBaselineResults() const {
    return m_baseline_results;
}
void OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::setBaselineResults(const QList<OAIDatabaseVulnerabilityAssessmentRuleBaselineItem> &baseline_results) {
    m_baseline_results = baseline_results;
    m_baseline_results_isSet = true;
}

bool OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::is_baseline_results_Set() const{
    return m_baseline_results_isSet;
}

bool OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::is_baseline_results_Valid() const{
    return m_baseline_results_isValid;
}

bool OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_baseline_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatabaseVulnerabilityAssessmentRuleBaselineProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_baseline_results_isValid && true;
}

} // namespace OpenAPI
