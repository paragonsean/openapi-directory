# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_service_plans_list200_response_value_inner_properties_hosting_environment_profile import AppServicePlansList200ResponseValueInnerPropertiesHostingEnvironmentProfile
from openapi_server import util


class AppServicePlansList200ResponseValueInnerProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_site_name: str=None, geo_region: str=None, hosting_environment_profile: AppServicePlansList200ResponseValueInnerPropertiesHostingEnvironmentProfile=None, is_spot: bool=None, maximum_number_of_workers: int=None, name: str=None, number_of_sites: int=None, per_site_scaling: bool=False, provisioning_state: str=None, reserved: bool=False, resource_group: str=None, spot_expiration_time: datetime=None, status: str=None, subscription: str=None, target_worker_count: int=None, target_worker_size_id: int=None, worker_tier_name: str=None):
        """AppServicePlansList200ResponseValueInnerProperties - a model defined in OpenAPI

        :param admin_site_name: The admin_site_name of this AppServicePlansList200ResponseValueInnerProperties.
        :param geo_region: The geo_region of this AppServicePlansList200ResponseValueInnerProperties.
        :param hosting_environment_profile: The hosting_environment_profile of this AppServicePlansList200ResponseValueInnerProperties.
        :param is_spot: The is_spot of this AppServicePlansList200ResponseValueInnerProperties.
        :param maximum_number_of_workers: The maximum_number_of_workers of this AppServicePlansList200ResponseValueInnerProperties.
        :param name: The name of this AppServicePlansList200ResponseValueInnerProperties.
        :param number_of_sites: The number_of_sites of this AppServicePlansList200ResponseValueInnerProperties.
        :param per_site_scaling: The per_site_scaling of this AppServicePlansList200ResponseValueInnerProperties.
        :param provisioning_state: The provisioning_state of this AppServicePlansList200ResponseValueInnerProperties.
        :param reserved: The reserved of this AppServicePlansList200ResponseValueInnerProperties.
        :param resource_group: The resource_group of this AppServicePlansList200ResponseValueInnerProperties.
        :param spot_expiration_time: The spot_expiration_time of this AppServicePlansList200ResponseValueInnerProperties.
        :param status: The status of this AppServicePlansList200ResponseValueInnerProperties.
        :param subscription: The subscription of this AppServicePlansList200ResponseValueInnerProperties.
        :param target_worker_count: The target_worker_count of this AppServicePlansList200ResponseValueInnerProperties.
        :param target_worker_size_id: The target_worker_size_id of this AppServicePlansList200ResponseValueInnerProperties.
        :param worker_tier_name: The worker_tier_name of this AppServicePlansList200ResponseValueInnerProperties.
        """
        self.openapi_types = {
            'admin_site_name': str,
            'geo_region': str,
            'hosting_environment_profile': AppServicePlansList200ResponseValueInnerPropertiesHostingEnvironmentProfile,
            'is_spot': bool,
            'maximum_number_of_workers': int,
            'name': str,
            'number_of_sites': int,
            'per_site_scaling': bool,
            'provisioning_state': str,
            'reserved': bool,
            'resource_group': str,
            'spot_expiration_time': datetime,
            'status': str,
            'subscription': str,
            'target_worker_count': int,
            'target_worker_size_id': int,
            'worker_tier_name': str
        }

        self.attribute_map = {
            'admin_site_name': 'adminSiteName',
            'geo_region': 'geoRegion',
            'hosting_environment_profile': 'hostingEnvironmentProfile',
            'is_spot': 'isSpot',
            'maximum_number_of_workers': 'maximumNumberOfWorkers',
            'name': 'name',
            'number_of_sites': 'numberOfSites',
            'per_site_scaling': 'perSiteScaling',
            'provisioning_state': 'provisioningState',
            'reserved': 'reserved',
            'resource_group': 'resourceGroup',
            'spot_expiration_time': 'spotExpirationTime',
            'status': 'status',
            'subscription': 'subscription',
            'target_worker_count': 'targetWorkerCount',
            'target_worker_size_id': 'targetWorkerSizeId',
            'worker_tier_name': 'workerTierName'
        }

        self._admin_site_name = admin_site_name
        self._geo_region = geo_region
        self._hosting_environment_profile = hosting_environment_profile
        self._is_spot = is_spot
        self._maximum_number_of_workers = maximum_number_of_workers
        self._name = name
        self._number_of_sites = number_of_sites
        self._per_site_scaling = per_site_scaling
        self._provisioning_state = provisioning_state
        self._reserved = reserved
        self._resource_group = resource_group
        self._spot_expiration_time = spot_expiration_time
        self._status = status
        self._subscription = subscription
        self._target_worker_count = target_worker_count
        self._target_worker_size_id = target_worker_size_id
        self._worker_tier_name = worker_tier_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppServicePlansList200ResponseValueInnerProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppServicePlans_List_200_response_value_inner_properties of this AppServicePlansList200ResponseValueInnerProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_site_name(self):
        """Gets the admin_site_name of this AppServicePlansList200ResponseValueInnerProperties.

        App Service plan administration site.

        :return: The admin_site_name of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._admin_site_name

    @admin_site_name.setter
    def admin_site_name(self, admin_site_name):
        """Sets the admin_site_name of this AppServicePlansList200ResponseValueInnerProperties.

        App Service plan administration site.

        :param admin_site_name: The admin_site_name of this AppServicePlansList200ResponseValueInnerProperties.
        :type admin_site_name: str
        """

        self._admin_site_name = admin_site_name

    @property
    def geo_region(self):
        """Gets the geo_region of this AppServicePlansList200ResponseValueInnerProperties.

        Geographical location for the App Service plan.

        :return: The geo_region of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._geo_region

    @geo_region.setter
    def geo_region(self, geo_region):
        """Sets the geo_region of this AppServicePlansList200ResponseValueInnerProperties.

        Geographical location for the App Service plan.

        :param geo_region: The geo_region of this AppServicePlansList200ResponseValueInnerProperties.
        :type geo_region: str
        """

        self._geo_region = geo_region

    @property
    def hosting_environment_profile(self):
        """Gets the hosting_environment_profile of this AppServicePlansList200ResponseValueInnerProperties.


        :return: The hosting_environment_profile of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: AppServicePlansList200ResponseValueInnerPropertiesHostingEnvironmentProfile
        """
        return self._hosting_environment_profile

    @hosting_environment_profile.setter
    def hosting_environment_profile(self, hosting_environment_profile):
        """Sets the hosting_environment_profile of this AppServicePlansList200ResponseValueInnerProperties.


        :param hosting_environment_profile: The hosting_environment_profile of this AppServicePlansList200ResponseValueInnerProperties.
        :type hosting_environment_profile: AppServicePlansList200ResponseValueInnerPropertiesHostingEnvironmentProfile
        """

        self._hosting_environment_profile = hosting_environment_profile

    @property
    def is_spot(self):
        """Gets the is_spot of this AppServicePlansList200ResponseValueInnerProperties.

        If <code>true</code>, this App Service Plan owns spot instances.

        :return: The is_spot of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: bool
        """
        return self._is_spot

    @is_spot.setter
    def is_spot(self, is_spot):
        """Sets the is_spot of this AppServicePlansList200ResponseValueInnerProperties.

        If <code>true</code>, this App Service Plan owns spot instances.

        :param is_spot: The is_spot of this AppServicePlansList200ResponseValueInnerProperties.
        :type is_spot: bool
        """

        self._is_spot = is_spot

    @property
    def maximum_number_of_workers(self):
        """Gets the maximum_number_of_workers of this AppServicePlansList200ResponseValueInnerProperties.

        Maximum number of instances that can be assigned to this App Service plan.

        :return: The maximum_number_of_workers of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: int
        """
        return self._maximum_number_of_workers

    @maximum_number_of_workers.setter
    def maximum_number_of_workers(self, maximum_number_of_workers):
        """Sets the maximum_number_of_workers of this AppServicePlansList200ResponseValueInnerProperties.

        Maximum number of instances that can be assigned to this App Service plan.

        :param maximum_number_of_workers: The maximum_number_of_workers of this AppServicePlansList200ResponseValueInnerProperties.
        :type maximum_number_of_workers: int
        """

        self._maximum_number_of_workers = maximum_number_of_workers

    @property
    def name(self):
        """Gets the name of this AppServicePlansList200ResponseValueInnerProperties.

        Name for the App Service plan.

        :return: The name of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AppServicePlansList200ResponseValueInnerProperties.

        Name for the App Service plan.

        :param name: The name of this AppServicePlansList200ResponseValueInnerProperties.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def number_of_sites(self):
        """Gets the number_of_sites of this AppServicePlansList200ResponseValueInnerProperties.

        Number of apps assigned to this App Service plan.

        :return: The number_of_sites of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: int
        """
        return self._number_of_sites

    @number_of_sites.setter
    def number_of_sites(self, number_of_sites):
        """Sets the number_of_sites of this AppServicePlansList200ResponseValueInnerProperties.

        Number of apps assigned to this App Service plan.

        :param number_of_sites: The number_of_sites of this AppServicePlansList200ResponseValueInnerProperties.
        :type number_of_sites: int
        """

        self._number_of_sites = number_of_sites

    @property
    def per_site_scaling(self):
        """Gets the per_site_scaling of this AppServicePlansList200ResponseValueInnerProperties.

        If <code>true</code>, apps assigned to this App Service plan can be scaled independently. If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.

        :return: The per_site_scaling of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: bool
        """
        return self._per_site_scaling

    @per_site_scaling.setter
    def per_site_scaling(self, per_site_scaling):
        """Sets the per_site_scaling of this AppServicePlansList200ResponseValueInnerProperties.

        If <code>true</code>, apps assigned to this App Service plan can be scaled independently. If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.

        :param per_site_scaling: The per_site_scaling of this AppServicePlansList200ResponseValueInnerProperties.
        :type per_site_scaling: bool
        """

        self._per_site_scaling = per_site_scaling

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this AppServicePlansList200ResponseValueInnerProperties.

        Provisioning state of the App Service Environment.

        :return: The provisioning_state of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this AppServicePlansList200ResponseValueInnerProperties.

        Provisioning state of the App Service Environment.

        :param provisioning_state: The provisioning_state of this AppServicePlansList200ResponseValueInnerProperties.
        :type provisioning_state: str
        """
        allowed_values = ["Succeeded", "Failed", "Canceled", "InProgress", "Deleting"]  # noqa: E501
        if provisioning_state not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_state` ({0}), must be one of {1}"
                .format(provisioning_state, allowed_values)
            )

        self._provisioning_state = provisioning_state

    @property
    def reserved(self):
        """Gets the reserved of this AppServicePlansList200ResponseValueInnerProperties.

        If Linux app service plan <code>true</code>, <code>false</code> otherwise.

        :return: The reserved of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: bool
        """
        return self._reserved

    @reserved.setter
    def reserved(self, reserved):
        """Sets the reserved of this AppServicePlansList200ResponseValueInnerProperties.

        If Linux app service plan <code>true</code>, <code>false</code> otherwise.

        :param reserved: The reserved of this AppServicePlansList200ResponseValueInnerProperties.
        :type reserved: bool
        """

        self._reserved = reserved

    @property
    def resource_group(self):
        """Gets the resource_group of this AppServicePlansList200ResponseValueInnerProperties.

        Resource group of the App Service plan.

        :return: The resource_group of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._resource_group

    @resource_group.setter
    def resource_group(self, resource_group):
        """Sets the resource_group of this AppServicePlansList200ResponseValueInnerProperties.

        Resource group of the App Service plan.

        :param resource_group: The resource_group of this AppServicePlansList200ResponseValueInnerProperties.
        :type resource_group: str
        """

        self._resource_group = resource_group

    @property
    def spot_expiration_time(self):
        """Gets the spot_expiration_time of this AppServicePlansList200ResponseValueInnerProperties.

        The time when the server farm expires. Valid only if it is a spot server farm.

        :return: The spot_expiration_time of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: datetime
        """
        return self._spot_expiration_time

    @spot_expiration_time.setter
    def spot_expiration_time(self, spot_expiration_time):
        """Sets the spot_expiration_time of this AppServicePlansList200ResponseValueInnerProperties.

        The time when the server farm expires. Valid only if it is a spot server farm.

        :param spot_expiration_time: The spot_expiration_time of this AppServicePlansList200ResponseValueInnerProperties.
        :type spot_expiration_time: datetime
        """

        self._spot_expiration_time = spot_expiration_time

    @property
    def status(self):
        """Gets the status of this AppServicePlansList200ResponseValueInnerProperties.

        App Service plan status.

        :return: The status of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AppServicePlansList200ResponseValueInnerProperties.

        App Service plan status.

        :param status: The status of this AppServicePlansList200ResponseValueInnerProperties.
        :type status: str
        """
        allowed_values = ["Ready", "Pending", "Creating"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def subscription(self):
        """Gets the subscription of this AppServicePlansList200ResponseValueInnerProperties.

        App Service plan subscription.

        :return: The subscription of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._subscription

    @subscription.setter
    def subscription(self, subscription):
        """Sets the subscription of this AppServicePlansList200ResponseValueInnerProperties.

        App Service plan subscription.

        :param subscription: The subscription of this AppServicePlansList200ResponseValueInnerProperties.
        :type subscription: str
        """

        self._subscription = subscription

    @property
    def target_worker_count(self):
        """Gets the target_worker_count of this AppServicePlansList200ResponseValueInnerProperties.

        Scaling worker count.

        :return: The target_worker_count of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: int
        """
        return self._target_worker_count

    @target_worker_count.setter
    def target_worker_count(self, target_worker_count):
        """Sets the target_worker_count of this AppServicePlansList200ResponseValueInnerProperties.

        Scaling worker count.

        :param target_worker_count: The target_worker_count of this AppServicePlansList200ResponseValueInnerProperties.
        :type target_worker_count: int
        """

        self._target_worker_count = target_worker_count

    @property
    def target_worker_size_id(self):
        """Gets the target_worker_size_id of this AppServicePlansList200ResponseValueInnerProperties.

        Scaling worker size ID.

        :return: The target_worker_size_id of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: int
        """
        return self._target_worker_size_id

    @target_worker_size_id.setter
    def target_worker_size_id(self, target_worker_size_id):
        """Sets the target_worker_size_id of this AppServicePlansList200ResponseValueInnerProperties.

        Scaling worker size ID.

        :param target_worker_size_id: The target_worker_size_id of this AppServicePlansList200ResponseValueInnerProperties.
        :type target_worker_size_id: int
        """

        self._target_worker_size_id = target_worker_size_id

    @property
    def worker_tier_name(self):
        """Gets the worker_tier_name of this AppServicePlansList200ResponseValueInnerProperties.

        Target worker tier assigned to the App Service plan.

        :return: The worker_tier_name of this AppServicePlansList200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._worker_tier_name

    @worker_tier_name.setter
    def worker_tier_name(self, worker_tier_name):
        """Sets the worker_tier_name of this AppServicePlansList200ResponseValueInnerProperties.

        Target worker tier assigned to the App Service plan.

        :param worker_tier_name: The worker_tier_name of this AppServicePlansList200ResponseValueInnerProperties.
        :type worker_tier_name: str
        """

        self._worker_tier_name = worker_tier_name
