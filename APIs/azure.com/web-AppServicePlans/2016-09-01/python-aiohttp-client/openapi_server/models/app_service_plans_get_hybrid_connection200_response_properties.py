# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppServicePlansGetHybridConnection200ResponseProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hostname: str=None, port: int=None, relay_arm_uri: str=None, relay_name: str=None, send_key_name: str=None, send_key_value: str=None, service_bus_namespace: str=None, service_bus_suffix: str=None):
        """AppServicePlansGetHybridConnection200ResponseProperties - a model defined in OpenAPI

        :param hostname: The hostname of this AppServicePlansGetHybridConnection200ResponseProperties.
        :param port: The port of this AppServicePlansGetHybridConnection200ResponseProperties.
        :param relay_arm_uri: The relay_arm_uri of this AppServicePlansGetHybridConnection200ResponseProperties.
        :param relay_name: The relay_name of this AppServicePlansGetHybridConnection200ResponseProperties.
        :param send_key_name: The send_key_name of this AppServicePlansGetHybridConnection200ResponseProperties.
        :param send_key_value: The send_key_value of this AppServicePlansGetHybridConnection200ResponseProperties.
        :param service_bus_namespace: The service_bus_namespace of this AppServicePlansGetHybridConnection200ResponseProperties.
        :param service_bus_suffix: The service_bus_suffix of this AppServicePlansGetHybridConnection200ResponseProperties.
        """
        self.openapi_types = {
            'hostname': str,
            'port': int,
            'relay_arm_uri': str,
            'relay_name': str,
            'send_key_name': str,
            'send_key_value': str,
            'service_bus_namespace': str,
            'service_bus_suffix': str
        }

        self.attribute_map = {
            'hostname': 'hostname',
            'port': 'port',
            'relay_arm_uri': 'relayArmUri',
            'relay_name': 'relayName',
            'send_key_name': 'sendKeyName',
            'send_key_value': 'sendKeyValue',
            'service_bus_namespace': 'serviceBusNamespace',
            'service_bus_suffix': 'serviceBusSuffix'
        }

        self._hostname = hostname
        self._port = port
        self._relay_arm_uri = relay_arm_uri
        self._relay_name = relay_name
        self._send_key_name = send_key_name
        self._send_key_value = send_key_value
        self._service_bus_namespace = service_bus_namespace
        self._service_bus_suffix = service_bus_suffix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppServicePlansGetHybridConnection200ResponseProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppServicePlans_GetHybridConnection_200_response_properties of this AppServicePlansGetHybridConnection200ResponseProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hostname(self):
        """Gets the hostname of this AppServicePlansGetHybridConnection200ResponseProperties.

        The hostname of the endpoint.

        :return: The hostname of this AppServicePlansGetHybridConnection200ResponseProperties.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this AppServicePlansGetHybridConnection200ResponseProperties.

        The hostname of the endpoint.

        :param hostname: The hostname of this AppServicePlansGetHybridConnection200ResponseProperties.
        :type hostname: str
        """

        self._hostname = hostname

    @property
    def port(self):
        """Gets the port of this AppServicePlansGetHybridConnection200ResponseProperties.

        The port of the endpoint.

        :return: The port of this AppServicePlansGetHybridConnection200ResponseProperties.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this AppServicePlansGetHybridConnection200ResponseProperties.

        The port of the endpoint.

        :param port: The port of this AppServicePlansGetHybridConnection200ResponseProperties.
        :type port: int
        """

        self._port = port

    @property
    def relay_arm_uri(self):
        """Gets the relay_arm_uri of this AppServicePlansGetHybridConnection200ResponseProperties.

        The ARM URI to the Service Bus relay.

        :return: The relay_arm_uri of this AppServicePlansGetHybridConnection200ResponseProperties.
        :rtype: str
        """
        return self._relay_arm_uri

    @relay_arm_uri.setter
    def relay_arm_uri(self, relay_arm_uri):
        """Sets the relay_arm_uri of this AppServicePlansGetHybridConnection200ResponseProperties.

        The ARM URI to the Service Bus relay.

        :param relay_arm_uri: The relay_arm_uri of this AppServicePlansGetHybridConnection200ResponseProperties.
        :type relay_arm_uri: str
        """

        self._relay_arm_uri = relay_arm_uri

    @property
    def relay_name(self):
        """Gets the relay_name of this AppServicePlansGetHybridConnection200ResponseProperties.

        The name of the Service Bus relay.

        :return: The relay_name of this AppServicePlansGetHybridConnection200ResponseProperties.
        :rtype: str
        """
        return self._relay_name

    @relay_name.setter
    def relay_name(self, relay_name):
        """Sets the relay_name of this AppServicePlansGetHybridConnection200ResponseProperties.

        The name of the Service Bus relay.

        :param relay_name: The relay_name of this AppServicePlansGetHybridConnection200ResponseProperties.
        :type relay_name: str
        """

        self._relay_name = relay_name

    @property
    def send_key_name(self):
        """Gets the send_key_name of this AppServicePlansGetHybridConnection200ResponseProperties.

        The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.

        :return: The send_key_name of this AppServicePlansGetHybridConnection200ResponseProperties.
        :rtype: str
        """
        return self._send_key_name

    @send_key_name.setter
    def send_key_name(self, send_key_name):
        """Sets the send_key_name of this AppServicePlansGetHybridConnection200ResponseProperties.

        The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.

        :param send_key_name: The send_key_name of this AppServicePlansGetHybridConnection200ResponseProperties.
        :type send_key_name: str
        """

        self._send_key_name = send_key_name

    @property
    def send_key_value(self):
        """Gets the send_key_value of this AppServicePlansGetHybridConnection200ResponseProperties.

        The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned normally, use the POST /listKeys API instead.

        :return: The send_key_value of this AppServicePlansGetHybridConnection200ResponseProperties.
        :rtype: str
        """
        return self._send_key_value

    @send_key_value.setter
    def send_key_value(self, send_key_value):
        """Sets the send_key_value of this AppServicePlansGetHybridConnection200ResponseProperties.

        The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned normally, use the POST /listKeys API instead.

        :param send_key_value: The send_key_value of this AppServicePlansGetHybridConnection200ResponseProperties.
        :type send_key_value: str
        """

        self._send_key_value = send_key_value

    @property
    def service_bus_namespace(self):
        """Gets the service_bus_namespace of this AppServicePlansGetHybridConnection200ResponseProperties.

        The name of the Service Bus namespace.

        :return: The service_bus_namespace of this AppServicePlansGetHybridConnection200ResponseProperties.
        :rtype: str
        """
        return self._service_bus_namespace

    @service_bus_namespace.setter
    def service_bus_namespace(self, service_bus_namespace):
        """Sets the service_bus_namespace of this AppServicePlansGetHybridConnection200ResponseProperties.

        The name of the Service Bus namespace.

        :param service_bus_namespace: The service_bus_namespace of this AppServicePlansGetHybridConnection200ResponseProperties.
        :type service_bus_namespace: str
        """

        self._service_bus_namespace = service_bus_namespace

    @property
    def service_bus_suffix(self):
        """Gets the service_bus_suffix of this AppServicePlansGetHybridConnection200ResponseProperties.

        The suffix for the service bus endpoint. By default this is .servicebus.windows.net

        :return: The service_bus_suffix of this AppServicePlansGetHybridConnection200ResponseProperties.
        :rtype: str
        """
        return self._service_bus_suffix

    @service_bus_suffix.setter
    def service_bus_suffix(self, service_bus_suffix):
        """Sets the service_bus_suffix of this AppServicePlansGetHybridConnection200ResponseProperties.

        The suffix for the service bus endpoint. By default this is .servicebus.windows.net

        :param service_bus_suffix: The service_bus_suffix of this AppServicePlansGetHybridConnection200ResponseProperties.
        :type service_bus_suffix: str
        """

        self._service_bus_suffix = service_bus_suffix
