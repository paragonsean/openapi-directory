# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_service_plans_list_web_apps200_response_value_inner_properties_site_config_api_definition import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigApiDefinition
from openapi_server.models.app_service_plans_list_web_apps200_response_value_inner_properties_site_config_app_settings_inner import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAppSettingsInner
from openapi_server.models.app_service_plans_list_web_apps200_response_value_inner_properties_site_config_auto_heal_rules import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAutoHealRules
from openapi_server.models.app_service_plans_list_web_apps200_response_value_inner_properties_site_config_connection_strings_inner import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigConnectionStringsInner
from openapi_server.models.app_service_plans_list_web_apps200_response_value_inner_properties_site_config_cors import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigCors
from openapi_server.models.app_service_plans_list_web_apps200_response_value_inner_properties_site_config_experiments import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigExperiments
from openapi_server.models.app_service_plans_list_web_apps200_response_value_inner_properties_site_config_handler_mappings_inner import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigHandlerMappingsInner
from openapi_server.models.app_service_plans_list_web_apps200_response_value_inner_properties_site_config_ip_security_restrictions_inner import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner
from openapi_server.models.app_service_plans_list_web_apps200_response_value_inner_properties_site_config_limits import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigLimits
from openapi_server.models.app_service_plans_list_web_apps200_response_value_inner_properties_site_config_machine_key import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigMachineKey
from openapi_server.models.app_service_plans_list_web_apps200_response_value_inner_properties_site_config_push import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigPush
from openapi_server.models.app_service_plans_list_web_apps200_response_value_inner_properties_site_config_virtual_applications_inner import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigVirtualApplicationsInner
from openapi_server import util


class AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, always_on: bool=None, api_definition: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigApiDefinition=None, app_command_line: str=None, app_settings: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAppSettingsInner]=None, auto_heal_enabled: bool=None, auto_heal_rules: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAutoHealRules=None, auto_swap_slot_name: str=None, connection_strings: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigConnectionStringsInner]=None, cors: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigCors=None, default_documents: List[str]=None, detailed_error_logging_enabled: bool=None, document_root: str=None, experiments: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigExperiments=None, handler_mappings: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigHandlerMappingsInner]=None, http20_enabled: bool=True, http_logging_enabled: bool=None, ip_security_restrictions: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner]=None, java_container: str=None, java_container_version: str=None, java_version: str=None, limits: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigLimits=None, linux_fx_version: str=None, load_balancing: str=None, local_my_sql_enabled: bool=False, logs_directory_size_limit: int=None, machine_key: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigMachineKey=None, managed_pipeline_mode: str=None, min_tls_version: str=None, net_framework_version: str='v4.6', node_version: str=None, number_of_workers: int=None, php_version: str=None, publishing_username: str=None, push: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigPush=None, python_version: str=None, remote_debugging_enabled: bool=None, remote_debugging_version: str=None, request_tracing_enabled: bool=None, request_tracing_expiration_time: datetime=None, scm_type: str=None, tracing_options: str=None, use32_bit_worker_process: bool=None, virtual_applications: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigVirtualApplicationsInner]=None, vnet_name: str=None, web_sockets_enabled: bool=None):
        """AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig - a model defined in OpenAPI

        :param always_on: The always_on of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param api_definition: The api_definition of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param app_command_line: The app_command_line of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param app_settings: The app_settings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param auto_heal_enabled: The auto_heal_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param auto_heal_rules: The auto_heal_rules of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param auto_swap_slot_name: The auto_swap_slot_name of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param connection_strings: The connection_strings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param cors: The cors of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param default_documents: The default_documents of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param detailed_error_logging_enabled: The detailed_error_logging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param document_root: The document_root of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param experiments: The experiments of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param handler_mappings: The handler_mappings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param http20_enabled: The http20_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param http_logging_enabled: The http_logging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param ip_security_restrictions: The ip_security_restrictions of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param java_container: The java_container of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param java_container_version: The java_container_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param java_version: The java_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param limits: The limits of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param linux_fx_version: The linux_fx_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param load_balancing: The load_balancing of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param local_my_sql_enabled: The local_my_sql_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param logs_directory_size_limit: The logs_directory_size_limit of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param machine_key: The machine_key of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param managed_pipeline_mode: The managed_pipeline_mode of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param min_tls_version: The min_tls_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param net_framework_version: The net_framework_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param node_version: The node_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param number_of_workers: The number_of_workers of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param php_version: The php_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param publishing_username: The publishing_username of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param push: The push of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param python_version: The python_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param remote_debugging_enabled: The remote_debugging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param remote_debugging_version: The remote_debugging_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param request_tracing_enabled: The request_tracing_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param request_tracing_expiration_time: The request_tracing_expiration_time of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param scm_type: The scm_type of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param tracing_options: The tracing_options of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param use32_bit_worker_process: The use32_bit_worker_process of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param virtual_applications: The virtual_applications of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param vnet_name: The vnet_name of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :param web_sockets_enabled: The web_sockets_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        """
        self.openapi_types = {
            'always_on': bool,
            'api_definition': AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigApiDefinition,
            'app_command_line': str,
            'app_settings': List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAppSettingsInner],
            'auto_heal_enabled': bool,
            'auto_heal_rules': AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAutoHealRules,
            'auto_swap_slot_name': str,
            'connection_strings': List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigConnectionStringsInner],
            'cors': AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigCors,
            'default_documents': List[str],
            'detailed_error_logging_enabled': bool,
            'document_root': str,
            'experiments': AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigExperiments,
            'handler_mappings': List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigHandlerMappingsInner],
            'http20_enabled': bool,
            'http_logging_enabled': bool,
            'ip_security_restrictions': List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner],
            'java_container': str,
            'java_container_version': str,
            'java_version': str,
            'limits': AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigLimits,
            'linux_fx_version': str,
            'load_balancing': str,
            'local_my_sql_enabled': bool,
            'logs_directory_size_limit': int,
            'machine_key': AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigMachineKey,
            'managed_pipeline_mode': str,
            'min_tls_version': str,
            'net_framework_version': str,
            'node_version': str,
            'number_of_workers': int,
            'php_version': str,
            'publishing_username': str,
            'push': AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigPush,
            'python_version': str,
            'remote_debugging_enabled': bool,
            'remote_debugging_version': str,
            'request_tracing_enabled': bool,
            'request_tracing_expiration_time': datetime,
            'scm_type': str,
            'tracing_options': str,
            'use32_bit_worker_process': bool,
            'virtual_applications': List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigVirtualApplicationsInner],
            'vnet_name': str,
            'web_sockets_enabled': bool
        }

        self.attribute_map = {
            'always_on': 'alwaysOn',
            'api_definition': 'apiDefinition',
            'app_command_line': 'appCommandLine',
            'app_settings': 'appSettings',
            'auto_heal_enabled': 'autoHealEnabled',
            'auto_heal_rules': 'autoHealRules',
            'auto_swap_slot_name': 'autoSwapSlotName',
            'connection_strings': 'connectionStrings',
            'cors': 'cors',
            'default_documents': 'defaultDocuments',
            'detailed_error_logging_enabled': 'detailedErrorLoggingEnabled',
            'document_root': 'documentRoot',
            'experiments': 'experiments',
            'handler_mappings': 'handlerMappings',
            'http20_enabled': 'http20Enabled',
            'http_logging_enabled': 'httpLoggingEnabled',
            'ip_security_restrictions': 'ipSecurityRestrictions',
            'java_container': 'javaContainer',
            'java_container_version': 'javaContainerVersion',
            'java_version': 'javaVersion',
            'limits': 'limits',
            'linux_fx_version': 'linuxFxVersion',
            'load_balancing': 'loadBalancing',
            'local_my_sql_enabled': 'localMySqlEnabled',
            'logs_directory_size_limit': 'logsDirectorySizeLimit',
            'machine_key': 'machineKey',
            'managed_pipeline_mode': 'managedPipelineMode',
            'min_tls_version': 'minTlsVersion',
            'net_framework_version': 'netFrameworkVersion',
            'node_version': 'nodeVersion',
            'number_of_workers': 'numberOfWorkers',
            'php_version': 'phpVersion',
            'publishing_username': 'publishingUsername',
            'push': 'push',
            'python_version': 'pythonVersion',
            'remote_debugging_enabled': 'remoteDebuggingEnabled',
            'remote_debugging_version': 'remoteDebuggingVersion',
            'request_tracing_enabled': 'requestTracingEnabled',
            'request_tracing_expiration_time': 'requestTracingExpirationTime',
            'scm_type': 'scmType',
            'tracing_options': 'tracingOptions',
            'use32_bit_worker_process': 'use32BitWorkerProcess',
            'virtual_applications': 'virtualApplications',
            'vnet_name': 'vnetName',
            'web_sockets_enabled': 'webSocketsEnabled'
        }

        self._always_on = always_on
        self._api_definition = api_definition
        self._app_command_line = app_command_line
        self._app_settings = app_settings
        self._auto_heal_enabled = auto_heal_enabled
        self._auto_heal_rules = auto_heal_rules
        self._auto_swap_slot_name = auto_swap_slot_name
        self._connection_strings = connection_strings
        self._cors = cors
        self._default_documents = default_documents
        self._detailed_error_logging_enabled = detailed_error_logging_enabled
        self._document_root = document_root
        self._experiments = experiments
        self._handler_mappings = handler_mappings
        self._http20_enabled = http20_enabled
        self._http_logging_enabled = http_logging_enabled
        self._ip_security_restrictions = ip_security_restrictions
        self._java_container = java_container
        self._java_container_version = java_container_version
        self._java_version = java_version
        self._limits = limits
        self._linux_fx_version = linux_fx_version
        self._load_balancing = load_balancing
        self._local_my_sql_enabled = local_my_sql_enabled
        self._logs_directory_size_limit = logs_directory_size_limit
        self._machine_key = machine_key
        self._managed_pipeline_mode = managed_pipeline_mode
        self._min_tls_version = min_tls_version
        self._net_framework_version = net_framework_version
        self._node_version = node_version
        self._number_of_workers = number_of_workers
        self._php_version = php_version
        self._publishing_username = publishing_username
        self._push = push
        self._python_version = python_version
        self._remote_debugging_enabled = remote_debugging_enabled
        self._remote_debugging_version = remote_debugging_version
        self._request_tracing_enabled = request_tracing_enabled
        self._request_tracing_expiration_time = request_tracing_expiration_time
        self._scm_type = scm_type
        self._tracing_options = tracing_options
        self._use32_bit_worker_process = use32_bit_worker_process
        self._virtual_applications = virtual_applications
        self._vnet_name = vnet_name
        self._web_sockets_enabled = web_sockets_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppServicePlans_ListWebApps_200_response_value_inner_properties_siteConfig of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def always_on(self):
        """Gets the always_on of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if Always On is enabled; otherwise, <code>false</code>.

        :return: The always_on of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: bool
        """
        return self._always_on

    @always_on.setter
    def always_on(self, always_on):
        """Sets the always_on of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if Always On is enabled; otherwise, <code>false</code>.

        :param always_on: The always_on of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type always_on: bool
        """

        self._always_on = always_on

    @property
    def api_definition(self):
        """Gets the api_definition of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :return: The api_definition of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigApiDefinition
        """
        return self._api_definition

    @api_definition.setter
    def api_definition(self, api_definition):
        """Sets the api_definition of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :param api_definition: The api_definition of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type api_definition: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigApiDefinition
        """

        self._api_definition = api_definition

    @property
    def app_command_line(self):
        """Gets the app_command_line of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        App command line to launch.

        :return: The app_command_line of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._app_command_line

    @app_command_line.setter
    def app_command_line(self, app_command_line):
        """Sets the app_command_line of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        App command line to launch.

        :param app_command_line: The app_command_line of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type app_command_line: str
        """

        self._app_command_line = app_command_line

    @property
    def app_settings(self):
        """Gets the app_settings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Application settings.

        :return: The app_settings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAppSettingsInner]
        """
        return self._app_settings

    @app_settings.setter
    def app_settings(self, app_settings):
        """Sets the app_settings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Application settings.

        :param app_settings: The app_settings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type app_settings: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAppSettingsInner]
        """

        self._app_settings = app_settings

    @property
    def auto_heal_enabled(self):
        """Gets the auto_heal_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.

        :return: The auto_heal_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: bool
        """
        return self._auto_heal_enabled

    @auto_heal_enabled.setter
    def auto_heal_enabled(self, auto_heal_enabled):
        """Sets the auto_heal_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.

        :param auto_heal_enabled: The auto_heal_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type auto_heal_enabled: bool
        """

        self._auto_heal_enabled = auto_heal_enabled

    @property
    def auto_heal_rules(self):
        """Gets the auto_heal_rules of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :return: The auto_heal_rules of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAutoHealRules
        """
        return self._auto_heal_rules

    @auto_heal_rules.setter
    def auto_heal_rules(self, auto_heal_rules):
        """Sets the auto_heal_rules of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :param auto_heal_rules: The auto_heal_rules of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type auto_heal_rules: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAutoHealRules
        """

        self._auto_heal_rules = auto_heal_rules

    @property
    def auto_swap_slot_name(self):
        """Gets the auto_swap_slot_name of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Auto-swap slot name.

        :return: The auto_swap_slot_name of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._auto_swap_slot_name

    @auto_swap_slot_name.setter
    def auto_swap_slot_name(self, auto_swap_slot_name):
        """Sets the auto_swap_slot_name of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Auto-swap slot name.

        :param auto_swap_slot_name: The auto_swap_slot_name of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type auto_swap_slot_name: str
        """

        self._auto_swap_slot_name = auto_swap_slot_name

    @property
    def connection_strings(self):
        """Gets the connection_strings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Connection strings.

        :return: The connection_strings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigConnectionStringsInner]
        """
        return self._connection_strings

    @connection_strings.setter
    def connection_strings(self, connection_strings):
        """Sets the connection_strings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Connection strings.

        :param connection_strings: The connection_strings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type connection_strings: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigConnectionStringsInner]
        """

        self._connection_strings = connection_strings

    @property
    def cors(self):
        """Gets the cors of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :return: The cors of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigCors
        """
        return self._cors

    @cors.setter
    def cors(self, cors):
        """Sets the cors of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :param cors: The cors of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type cors: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigCors
        """

        self._cors = cors

    @property
    def default_documents(self):
        """Gets the default_documents of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Default documents.

        :return: The default_documents of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: List[str]
        """
        return self._default_documents

    @default_documents.setter
    def default_documents(self, default_documents):
        """Sets the default_documents of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Default documents.

        :param default_documents: The default_documents of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type default_documents: List[str]
        """

        self._default_documents = default_documents

    @property
    def detailed_error_logging_enabled(self):
        """Gets the detailed_error_logging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.

        :return: The detailed_error_logging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: bool
        """
        return self._detailed_error_logging_enabled

    @detailed_error_logging_enabled.setter
    def detailed_error_logging_enabled(self, detailed_error_logging_enabled):
        """Sets the detailed_error_logging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.

        :param detailed_error_logging_enabled: The detailed_error_logging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type detailed_error_logging_enabled: bool
        """

        self._detailed_error_logging_enabled = detailed_error_logging_enabled

    @property
    def document_root(self):
        """Gets the document_root of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Document root.

        :return: The document_root of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._document_root

    @document_root.setter
    def document_root(self, document_root):
        """Sets the document_root of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Document root.

        :param document_root: The document_root of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type document_root: str
        """

        self._document_root = document_root

    @property
    def experiments(self):
        """Gets the experiments of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :return: The experiments of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigExperiments
        """
        return self._experiments

    @experiments.setter
    def experiments(self, experiments):
        """Sets the experiments of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :param experiments: The experiments of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type experiments: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigExperiments
        """

        self._experiments = experiments

    @property
    def handler_mappings(self):
        """Gets the handler_mappings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Handler mappings.

        :return: The handler_mappings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigHandlerMappingsInner]
        """
        return self._handler_mappings

    @handler_mappings.setter
    def handler_mappings(self, handler_mappings):
        """Sets the handler_mappings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Handler mappings.

        :param handler_mappings: The handler_mappings of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type handler_mappings: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigHandlerMappingsInner]
        """

        self._handler_mappings = handler_mappings

    @property
    def http20_enabled(self):
        """Gets the http20_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Http20Enabled: configures a web site to allow clients to connect over http2.0

        :return: The http20_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: bool
        """
        return self._http20_enabled

    @http20_enabled.setter
    def http20_enabled(self, http20_enabled):
        """Sets the http20_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Http20Enabled: configures a web site to allow clients to connect over http2.0

        :param http20_enabled: The http20_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type http20_enabled: bool
        """

        self._http20_enabled = http20_enabled

    @property
    def http_logging_enabled(self):
        """Gets the http_logging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.

        :return: The http_logging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: bool
        """
        return self._http_logging_enabled

    @http_logging_enabled.setter
    def http_logging_enabled(self, http_logging_enabled):
        """Sets the http_logging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.

        :param http_logging_enabled: The http_logging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type http_logging_enabled: bool
        """

        self._http_logging_enabled = http_logging_enabled

    @property
    def ip_security_restrictions(self):
        """Gets the ip_security_restrictions of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        IP security restrictions.

        :return: The ip_security_restrictions of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner]
        """
        return self._ip_security_restrictions

    @ip_security_restrictions.setter
    def ip_security_restrictions(self, ip_security_restrictions):
        """Sets the ip_security_restrictions of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        IP security restrictions.

        :param ip_security_restrictions: The ip_security_restrictions of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type ip_security_restrictions: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner]
        """

        self._ip_security_restrictions = ip_security_restrictions

    @property
    def java_container(self):
        """Gets the java_container of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Java container.

        :return: The java_container of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._java_container

    @java_container.setter
    def java_container(self, java_container):
        """Sets the java_container of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Java container.

        :param java_container: The java_container of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type java_container: str
        """

        self._java_container = java_container

    @property
    def java_container_version(self):
        """Gets the java_container_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Java container version.

        :return: The java_container_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._java_container_version

    @java_container_version.setter
    def java_container_version(self, java_container_version):
        """Sets the java_container_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Java container version.

        :param java_container_version: The java_container_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type java_container_version: str
        """

        self._java_container_version = java_container_version

    @property
    def java_version(self):
        """Gets the java_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Java version.

        :return: The java_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._java_version

    @java_version.setter
    def java_version(self, java_version):
        """Sets the java_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Java version.

        :param java_version: The java_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type java_version: str
        """

        self._java_version = java_version

    @property
    def limits(self):
        """Gets the limits of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :return: The limits of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigLimits
        """
        return self._limits

    @limits.setter
    def limits(self, limits):
        """Sets the limits of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :param limits: The limits of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type limits: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigLimits
        """

        self._limits = limits

    @property
    def linux_fx_version(self):
        """Gets the linux_fx_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Linux App Framework and version

        :return: The linux_fx_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._linux_fx_version

    @linux_fx_version.setter
    def linux_fx_version(self, linux_fx_version):
        """Sets the linux_fx_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Linux App Framework and version

        :param linux_fx_version: The linux_fx_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type linux_fx_version: str
        """

        self._linux_fx_version = linux_fx_version

    @property
    def load_balancing(self):
        """Gets the load_balancing of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Site load balancing.

        :return: The load_balancing of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._load_balancing

    @load_balancing.setter
    def load_balancing(self, load_balancing):
        """Sets the load_balancing of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Site load balancing.

        :param load_balancing: The load_balancing of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type load_balancing: str
        """
        allowed_values = ["WeightedRoundRobin", "LeastRequests", "LeastResponseTime", "WeightedTotalTraffic", "RequestHash"]  # noqa: E501
        if load_balancing not in allowed_values:
            raise ValueError(
                "Invalid value for `load_balancing` ({0}), must be one of {1}"
                .format(load_balancing, allowed_values)
            )

        self._load_balancing = load_balancing

    @property
    def local_my_sql_enabled(self):
        """Gets the local_my_sql_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> to enable local MySQL; otherwise, <code>false</code>.

        :return: The local_my_sql_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: bool
        """
        return self._local_my_sql_enabled

    @local_my_sql_enabled.setter
    def local_my_sql_enabled(self, local_my_sql_enabled):
        """Sets the local_my_sql_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> to enable local MySQL; otherwise, <code>false</code>.

        :param local_my_sql_enabled: The local_my_sql_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type local_my_sql_enabled: bool
        """

        self._local_my_sql_enabled = local_my_sql_enabled

    @property
    def logs_directory_size_limit(self):
        """Gets the logs_directory_size_limit of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        HTTP logs directory size limit.

        :return: The logs_directory_size_limit of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: int
        """
        return self._logs_directory_size_limit

    @logs_directory_size_limit.setter
    def logs_directory_size_limit(self, logs_directory_size_limit):
        """Sets the logs_directory_size_limit of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        HTTP logs directory size limit.

        :param logs_directory_size_limit: The logs_directory_size_limit of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type logs_directory_size_limit: int
        """

        self._logs_directory_size_limit = logs_directory_size_limit

    @property
    def machine_key(self):
        """Gets the machine_key of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :return: The machine_key of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigMachineKey
        """
        return self._machine_key

    @machine_key.setter
    def machine_key(self, machine_key):
        """Sets the machine_key of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :param machine_key: The machine_key of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type machine_key: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigMachineKey
        """

        self._machine_key = machine_key

    @property
    def managed_pipeline_mode(self):
        """Gets the managed_pipeline_mode of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Managed pipeline mode.

        :return: The managed_pipeline_mode of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._managed_pipeline_mode

    @managed_pipeline_mode.setter
    def managed_pipeline_mode(self, managed_pipeline_mode):
        """Sets the managed_pipeline_mode of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Managed pipeline mode.

        :param managed_pipeline_mode: The managed_pipeline_mode of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type managed_pipeline_mode: str
        """
        allowed_values = ["Integrated", "Classic"]  # noqa: E501
        if managed_pipeline_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `managed_pipeline_mode` ({0}), must be one of {1}"
                .format(managed_pipeline_mode, allowed_values)
            )

        self._managed_pipeline_mode = managed_pipeline_mode

    @property
    def min_tls_version(self):
        """Gets the min_tls_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        MinTlsVersion: configures the minimum version of TLS required for SSL requests

        :return: The min_tls_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._min_tls_version

    @min_tls_version.setter
    def min_tls_version(self, min_tls_version):
        """Sets the min_tls_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        MinTlsVersion: configures the minimum version of TLS required for SSL requests

        :param min_tls_version: The min_tls_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type min_tls_version: str
        """
        allowed_values = ["1.0", "1.1", "1.2"]  # noqa: E501
        if min_tls_version not in allowed_values:
            raise ValueError(
                "Invalid value for `min_tls_version` ({0}), must be one of {1}"
                .format(min_tls_version, allowed_values)
            )

        self._min_tls_version = min_tls_version

    @property
    def net_framework_version(self):
        """Gets the net_framework_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        .NET Framework version.

        :return: The net_framework_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._net_framework_version

    @net_framework_version.setter
    def net_framework_version(self, net_framework_version):
        """Sets the net_framework_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        .NET Framework version.

        :param net_framework_version: The net_framework_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type net_framework_version: str
        """

        self._net_framework_version = net_framework_version

    @property
    def node_version(self):
        """Gets the node_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Version of Node.js.

        :return: The node_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._node_version

    @node_version.setter
    def node_version(self, node_version):
        """Sets the node_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Version of Node.js.

        :param node_version: The node_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type node_version: str
        """

        self._node_version = node_version

    @property
    def number_of_workers(self):
        """Gets the number_of_workers of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Number of workers.

        :return: The number_of_workers of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: int
        """
        return self._number_of_workers

    @number_of_workers.setter
    def number_of_workers(self, number_of_workers):
        """Sets the number_of_workers of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Number of workers.

        :param number_of_workers: The number_of_workers of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type number_of_workers: int
        """

        self._number_of_workers = number_of_workers

    @property
    def php_version(self):
        """Gets the php_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Version of PHP.

        :return: The php_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._php_version

    @php_version.setter
    def php_version(self, php_version):
        """Sets the php_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Version of PHP.

        :param php_version: The php_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type php_version: str
        """

        self._php_version = php_version

    @property
    def publishing_username(self):
        """Gets the publishing_username of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Publishing user name.

        :return: The publishing_username of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._publishing_username

    @publishing_username.setter
    def publishing_username(self, publishing_username):
        """Sets the publishing_username of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Publishing user name.

        :param publishing_username: The publishing_username of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type publishing_username: str
        """

        self._publishing_username = publishing_username

    @property
    def push(self):
        """Gets the push of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :return: The push of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigPush
        """
        return self._push

    @push.setter
    def push(self, push):
        """Sets the push of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.


        :param push: The push of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type push: AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigPush
        """

        self._push = push

    @property
    def python_version(self):
        """Gets the python_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Version of Python.

        :return: The python_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._python_version

    @python_version.setter
    def python_version(self, python_version):
        """Sets the python_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Version of Python.

        :param python_version: The python_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type python_version: str
        """

        self._python_version = python_version

    @property
    def remote_debugging_enabled(self):
        """Gets the remote_debugging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.

        :return: The remote_debugging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: bool
        """
        return self._remote_debugging_enabled

    @remote_debugging_enabled.setter
    def remote_debugging_enabled(self, remote_debugging_enabled):
        """Sets the remote_debugging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.

        :param remote_debugging_enabled: The remote_debugging_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type remote_debugging_enabled: bool
        """

        self._remote_debugging_enabled = remote_debugging_enabled

    @property
    def remote_debugging_version(self):
        """Gets the remote_debugging_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Remote debugging version.

        :return: The remote_debugging_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._remote_debugging_version

    @remote_debugging_version.setter
    def remote_debugging_version(self, remote_debugging_version):
        """Sets the remote_debugging_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Remote debugging version.

        :param remote_debugging_version: The remote_debugging_version of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type remote_debugging_version: str
        """

        self._remote_debugging_version = remote_debugging_version

    @property
    def request_tracing_enabled(self):
        """Gets the request_tracing_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.

        :return: The request_tracing_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: bool
        """
        return self._request_tracing_enabled

    @request_tracing_enabled.setter
    def request_tracing_enabled(self, request_tracing_enabled):
        """Sets the request_tracing_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.

        :param request_tracing_enabled: The request_tracing_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type request_tracing_enabled: bool
        """

        self._request_tracing_enabled = request_tracing_enabled

    @property
    def request_tracing_expiration_time(self):
        """Gets the request_tracing_expiration_time of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Request tracing expiration time.

        :return: The request_tracing_expiration_time of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: datetime
        """
        return self._request_tracing_expiration_time

    @request_tracing_expiration_time.setter
    def request_tracing_expiration_time(self, request_tracing_expiration_time):
        """Sets the request_tracing_expiration_time of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Request tracing expiration time.

        :param request_tracing_expiration_time: The request_tracing_expiration_time of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type request_tracing_expiration_time: datetime
        """

        self._request_tracing_expiration_time = request_tracing_expiration_time

    @property
    def scm_type(self):
        """Gets the scm_type of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        SCM type.

        :return: The scm_type of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._scm_type

    @scm_type.setter
    def scm_type(self, scm_type):
        """Sets the scm_type of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        SCM type.

        :param scm_type: The scm_type of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type scm_type: str
        """
        allowed_values = ["None", "Dropbox", "Tfs", "LocalGit", "GitHub", "CodePlexGit", "CodePlexHg", "BitbucketGit", "BitbucketHg", "ExternalGit", "ExternalHg", "OneDrive", "VSO"]  # noqa: E501
        if scm_type not in allowed_values:
            raise ValueError(
                "Invalid value for `scm_type` ({0}), must be one of {1}"
                .format(scm_type, allowed_values)
            )

        self._scm_type = scm_type

    @property
    def tracing_options(self):
        """Gets the tracing_options of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Tracing options.

        :return: The tracing_options of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._tracing_options

    @tracing_options.setter
    def tracing_options(self, tracing_options):
        """Sets the tracing_options of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Tracing options.

        :param tracing_options: The tracing_options of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type tracing_options: str
        """

        self._tracing_options = tracing_options

    @property
    def use32_bit_worker_process(self):
        """Gets the use32_bit_worker_process of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.

        :return: The use32_bit_worker_process of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: bool
        """
        return self._use32_bit_worker_process

    @use32_bit_worker_process.setter
    def use32_bit_worker_process(self, use32_bit_worker_process):
        """Sets the use32_bit_worker_process of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.

        :param use32_bit_worker_process: The use32_bit_worker_process of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type use32_bit_worker_process: bool
        """

        self._use32_bit_worker_process = use32_bit_worker_process

    @property
    def virtual_applications(self):
        """Gets the virtual_applications of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Virtual applications.

        :return: The virtual_applications of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigVirtualApplicationsInner]
        """
        return self._virtual_applications

    @virtual_applications.setter
    def virtual_applications(self, virtual_applications):
        """Sets the virtual_applications of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Virtual applications.

        :param virtual_applications: The virtual_applications of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type virtual_applications: List[AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigVirtualApplicationsInner]
        """

        self._virtual_applications = virtual_applications

    @property
    def vnet_name(self):
        """Gets the vnet_name of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Virtual Network name.

        :return: The vnet_name of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: str
        """
        return self._vnet_name

    @vnet_name.setter
    def vnet_name(self, vnet_name):
        """Sets the vnet_name of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        Virtual Network name.

        :param vnet_name: The vnet_name of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type vnet_name: str
        """

        self._vnet_name = vnet_name

    @property
    def web_sockets_enabled(self):
        """Gets the web_sockets_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.

        :return: The web_sockets_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :rtype: bool
        """
        return self._web_sockets_enabled

    @web_sockets_enabled.setter
    def web_sockets_enabled(self, web_sockets_enabled):
        """Sets the web_sockets_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.

        <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.

        :param web_sockets_enabled: The web_sockets_enabled of this AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.
        :type web_sockets_enabled: bool
        """

        self._web_sockets_enabled = web_sockets_enabled
