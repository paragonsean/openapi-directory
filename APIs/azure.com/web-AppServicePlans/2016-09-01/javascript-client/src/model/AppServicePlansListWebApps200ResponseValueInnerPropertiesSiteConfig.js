/**
 * AppServicePlans API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigApiDefinition from './AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigApiDefinition';
import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAppSettingsInner from './AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAppSettingsInner';
import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAutoHealRules from './AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAutoHealRules';
import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigConnectionStringsInner from './AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigConnectionStringsInner';
import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigCors from './AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigCors';
import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigExperiments from './AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigExperiments';
import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigHandlerMappingsInner from './AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigHandlerMappingsInner';
import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner from './AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner';
import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigLimits from './AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigLimits';
import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigMachineKey from './AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigMachineKey';
import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigPush from './AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigPush';
import AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigVirtualApplicationsInner from './AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigVirtualApplicationsInner';

/**
 * The AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig model module.
 * @module model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig
 * @version 2016-09-01
 */
class AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig {
    /**
     * Constructs a new <code>AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig</code>.
     * Configuration of an App Service app.
     * @alias module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig
     */
    constructor() { 
        
        AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['http20Enabled'] = true;
        obj['localMySqlEnabled'] = false;
        obj['netFrameworkVersion'] = 'v4.6';
    }

    /**
     * Constructs a <code>AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig} obj Optional instance to populate.
     * @return {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig} The populated <code>AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig();

            if (data.hasOwnProperty('alwaysOn')) {
                obj['alwaysOn'] = ApiClient.convertToType(data['alwaysOn'], 'Boolean');
            }
            if (data.hasOwnProperty('apiDefinition')) {
                obj['apiDefinition'] = AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigApiDefinition.constructFromObject(data['apiDefinition']);
            }
            if (data.hasOwnProperty('appCommandLine')) {
                obj['appCommandLine'] = ApiClient.convertToType(data['appCommandLine'], 'String');
            }
            if (data.hasOwnProperty('appSettings')) {
                obj['appSettings'] = ApiClient.convertToType(data['appSettings'], [AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAppSettingsInner]);
            }
            if (data.hasOwnProperty('autoHealEnabled')) {
                obj['autoHealEnabled'] = ApiClient.convertToType(data['autoHealEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('autoHealRules')) {
                obj['autoHealRules'] = AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAutoHealRules.constructFromObject(data['autoHealRules']);
            }
            if (data.hasOwnProperty('autoSwapSlotName')) {
                obj['autoSwapSlotName'] = ApiClient.convertToType(data['autoSwapSlotName'], 'String');
            }
            if (data.hasOwnProperty('connectionStrings')) {
                obj['connectionStrings'] = ApiClient.convertToType(data['connectionStrings'], [AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigConnectionStringsInner]);
            }
            if (data.hasOwnProperty('cors')) {
                obj['cors'] = AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigCors.constructFromObject(data['cors']);
            }
            if (data.hasOwnProperty('defaultDocuments')) {
                obj['defaultDocuments'] = ApiClient.convertToType(data['defaultDocuments'], ['String']);
            }
            if (data.hasOwnProperty('detailedErrorLoggingEnabled')) {
                obj['detailedErrorLoggingEnabled'] = ApiClient.convertToType(data['detailedErrorLoggingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('documentRoot')) {
                obj['documentRoot'] = ApiClient.convertToType(data['documentRoot'], 'String');
            }
            if (data.hasOwnProperty('experiments')) {
                obj['experiments'] = AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigExperiments.constructFromObject(data['experiments']);
            }
            if (data.hasOwnProperty('handlerMappings')) {
                obj['handlerMappings'] = ApiClient.convertToType(data['handlerMappings'], [AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigHandlerMappingsInner]);
            }
            if (data.hasOwnProperty('http20Enabled')) {
                obj['http20Enabled'] = ApiClient.convertToType(data['http20Enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('httpLoggingEnabled')) {
                obj['httpLoggingEnabled'] = ApiClient.convertToType(data['httpLoggingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('ipSecurityRestrictions')) {
                obj['ipSecurityRestrictions'] = ApiClient.convertToType(data['ipSecurityRestrictions'], [AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner]);
            }
            if (data.hasOwnProperty('javaContainer')) {
                obj['javaContainer'] = ApiClient.convertToType(data['javaContainer'], 'String');
            }
            if (data.hasOwnProperty('javaContainerVersion')) {
                obj['javaContainerVersion'] = ApiClient.convertToType(data['javaContainerVersion'], 'String');
            }
            if (data.hasOwnProperty('javaVersion')) {
                obj['javaVersion'] = ApiClient.convertToType(data['javaVersion'], 'String');
            }
            if (data.hasOwnProperty('limits')) {
                obj['limits'] = AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigLimits.constructFromObject(data['limits']);
            }
            if (data.hasOwnProperty('linuxFxVersion')) {
                obj['linuxFxVersion'] = ApiClient.convertToType(data['linuxFxVersion'], 'String');
            }
            if (data.hasOwnProperty('loadBalancing')) {
                obj['loadBalancing'] = ApiClient.convertToType(data['loadBalancing'], 'String');
            }
            if (data.hasOwnProperty('localMySqlEnabled')) {
                obj['localMySqlEnabled'] = ApiClient.convertToType(data['localMySqlEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('logsDirectorySizeLimit')) {
                obj['logsDirectorySizeLimit'] = ApiClient.convertToType(data['logsDirectorySizeLimit'], 'Number');
            }
            if (data.hasOwnProperty('machineKey')) {
                obj['machineKey'] = AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigMachineKey.constructFromObject(data['machineKey']);
            }
            if (data.hasOwnProperty('managedPipelineMode')) {
                obj['managedPipelineMode'] = ApiClient.convertToType(data['managedPipelineMode'], 'String');
            }
            if (data.hasOwnProperty('minTlsVersion')) {
                obj['minTlsVersion'] = ApiClient.convertToType(data['minTlsVersion'], 'String');
            }
            if (data.hasOwnProperty('netFrameworkVersion')) {
                obj['netFrameworkVersion'] = ApiClient.convertToType(data['netFrameworkVersion'], 'String');
            }
            if (data.hasOwnProperty('nodeVersion')) {
                obj['nodeVersion'] = ApiClient.convertToType(data['nodeVersion'], 'String');
            }
            if (data.hasOwnProperty('numberOfWorkers')) {
                obj['numberOfWorkers'] = ApiClient.convertToType(data['numberOfWorkers'], 'Number');
            }
            if (data.hasOwnProperty('phpVersion')) {
                obj['phpVersion'] = ApiClient.convertToType(data['phpVersion'], 'String');
            }
            if (data.hasOwnProperty('publishingUsername')) {
                obj['publishingUsername'] = ApiClient.convertToType(data['publishingUsername'], 'String');
            }
            if (data.hasOwnProperty('push')) {
                obj['push'] = AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigPush.constructFromObject(data['push']);
            }
            if (data.hasOwnProperty('pythonVersion')) {
                obj['pythonVersion'] = ApiClient.convertToType(data['pythonVersion'], 'String');
            }
            if (data.hasOwnProperty('remoteDebuggingEnabled')) {
                obj['remoteDebuggingEnabled'] = ApiClient.convertToType(data['remoteDebuggingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('remoteDebuggingVersion')) {
                obj['remoteDebuggingVersion'] = ApiClient.convertToType(data['remoteDebuggingVersion'], 'String');
            }
            if (data.hasOwnProperty('requestTracingEnabled')) {
                obj['requestTracingEnabled'] = ApiClient.convertToType(data['requestTracingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('requestTracingExpirationTime')) {
                obj['requestTracingExpirationTime'] = ApiClient.convertToType(data['requestTracingExpirationTime'], 'Date');
            }
            if (data.hasOwnProperty('scmType')) {
                obj['scmType'] = ApiClient.convertToType(data['scmType'], 'String');
            }
            if (data.hasOwnProperty('tracingOptions')) {
                obj['tracingOptions'] = ApiClient.convertToType(data['tracingOptions'], 'String');
            }
            if (data.hasOwnProperty('use32BitWorkerProcess')) {
                obj['use32BitWorkerProcess'] = ApiClient.convertToType(data['use32BitWorkerProcess'], 'Boolean');
            }
            if (data.hasOwnProperty('virtualApplications')) {
                obj['virtualApplications'] = ApiClient.convertToType(data['virtualApplications'], [AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigVirtualApplicationsInner]);
            }
            if (data.hasOwnProperty('vnetName')) {
                obj['vnetName'] = ApiClient.convertToType(data['vnetName'], 'String');
            }
            if (data.hasOwnProperty('webSocketsEnabled')) {
                obj['webSocketsEnabled'] = ApiClient.convertToType(data['webSocketsEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `apiDefinition`
        if (data['apiDefinition']) { // data not null
          AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigApiDefinition.validateJSON(data['apiDefinition']);
        }
        // ensure the json data is a string
        if (data['appCommandLine'] && !(typeof data['appCommandLine'] === 'string' || data['appCommandLine'] instanceof String)) {
            throw new Error("Expected the field `appCommandLine` to be a primitive type in the JSON string but got " + data['appCommandLine']);
        }
        if (data['appSettings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['appSettings'])) {
                throw new Error("Expected the field `appSettings` to be an array in the JSON data but got " + data['appSettings']);
            }
            // validate the optional field `appSettings` (array)
            for (const item of data['appSettings']) {
                AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAppSettingsInner.validateJSON(item);
            };
        }
        // validate the optional field `autoHealRules`
        if (data['autoHealRules']) { // data not null
          AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAutoHealRules.validateJSON(data['autoHealRules']);
        }
        // ensure the json data is a string
        if (data['autoSwapSlotName'] && !(typeof data['autoSwapSlotName'] === 'string' || data['autoSwapSlotName'] instanceof String)) {
            throw new Error("Expected the field `autoSwapSlotName` to be a primitive type in the JSON string but got " + data['autoSwapSlotName']);
        }
        if (data['connectionStrings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['connectionStrings'])) {
                throw new Error("Expected the field `connectionStrings` to be an array in the JSON data but got " + data['connectionStrings']);
            }
            // validate the optional field `connectionStrings` (array)
            for (const item of data['connectionStrings']) {
                AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigConnectionStringsInner.validateJSON(item);
            };
        }
        // validate the optional field `cors`
        if (data['cors']) { // data not null
          AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigCors.validateJSON(data['cors']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['defaultDocuments'])) {
            throw new Error("Expected the field `defaultDocuments` to be an array in the JSON data but got " + data['defaultDocuments']);
        }
        // ensure the json data is a string
        if (data['documentRoot'] && !(typeof data['documentRoot'] === 'string' || data['documentRoot'] instanceof String)) {
            throw new Error("Expected the field `documentRoot` to be a primitive type in the JSON string but got " + data['documentRoot']);
        }
        // validate the optional field `experiments`
        if (data['experiments']) { // data not null
          AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigExperiments.validateJSON(data['experiments']);
        }
        if (data['handlerMappings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['handlerMappings'])) {
                throw new Error("Expected the field `handlerMappings` to be an array in the JSON data but got " + data['handlerMappings']);
            }
            // validate the optional field `handlerMappings` (array)
            for (const item of data['handlerMappings']) {
                AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigHandlerMappingsInner.validateJSON(item);
            };
        }
        if (data['ipSecurityRestrictions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ipSecurityRestrictions'])) {
                throw new Error("Expected the field `ipSecurityRestrictions` to be an array in the JSON data but got " + data['ipSecurityRestrictions']);
            }
            // validate the optional field `ipSecurityRestrictions` (array)
            for (const item of data['ipSecurityRestrictions']) {
                AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['javaContainer'] && !(typeof data['javaContainer'] === 'string' || data['javaContainer'] instanceof String)) {
            throw new Error("Expected the field `javaContainer` to be a primitive type in the JSON string but got " + data['javaContainer']);
        }
        // ensure the json data is a string
        if (data['javaContainerVersion'] && !(typeof data['javaContainerVersion'] === 'string' || data['javaContainerVersion'] instanceof String)) {
            throw new Error("Expected the field `javaContainerVersion` to be a primitive type in the JSON string but got " + data['javaContainerVersion']);
        }
        // ensure the json data is a string
        if (data['javaVersion'] && !(typeof data['javaVersion'] === 'string' || data['javaVersion'] instanceof String)) {
            throw new Error("Expected the field `javaVersion` to be a primitive type in the JSON string but got " + data['javaVersion']);
        }
        // validate the optional field `limits`
        if (data['limits']) { // data not null
          AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigLimits.validateJSON(data['limits']);
        }
        // ensure the json data is a string
        if (data['linuxFxVersion'] && !(typeof data['linuxFxVersion'] === 'string' || data['linuxFxVersion'] instanceof String)) {
            throw new Error("Expected the field `linuxFxVersion` to be a primitive type in the JSON string but got " + data['linuxFxVersion']);
        }
        // ensure the json data is a string
        if (data['loadBalancing'] && !(typeof data['loadBalancing'] === 'string' || data['loadBalancing'] instanceof String)) {
            throw new Error("Expected the field `loadBalancing` to be a primitive type in the JSON string but got " + data['loadBalancing']);
        }
        // validate the optional field `machineKey`
        if (data['machineKey']) { // data not null
          AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigMachineKey.validateJSON(data['machineKey']);
        }
        // ensure the json data is a string
        if (data['managedPipelineMode'] && !(typeof data['managedPipelineMode'] === 'string' || data['managedPipelineMode'] instanceof String)) {
            throw new Error("Expected the field `managedPipelineMode` to be a primitive type in the JSON string but got " + data['managedPipelineMode']);
        }
        // ensure the json data is a string
        if (data['minTlsVersion'] && !(typeof data['minTlsVersion'] === 'string' || data['minTlsVersion'] instanceof String)) {
            throw new Error("Expected the field `minTlsVersion` to be a primitive type in the JSON string but got " + data['minTlsVersion']);
        }
        // ensure the json data is a string
        if (data['netFrameworkVersion'] && !(typeof data['netFrameworkVersion'] === 'string' || data['netFrameworkVersion'] instanceof String)) {
            throw new Error("Expected the field `netFrameworkVersion` to be a primitive type in the JSON string but got " + data['netFrameworkVersion']);
        }
        // ensure the json data is a string
        if (data['nodeVersion'] && !(typeof data['nodeVersion'] === 'string' || data['nodeVersion'] instanceof String)) {
            throw new Error("Expected the field `nodeVersion` to be a primitive type in the JSON string but got " + data['nodeVersion']);
        }
        // ensure the json data is a string
        if (data['phpVersion'] && !(typeof data['phpVersion'] === 'string' || data['phpVersion'] instanceof String)) {
            throw new Error("Expected the field `phpVersion` to be a primitive type in the JSON string but got " + data['phpVersion']);
        }
        // ensure the json data is a string
        if (data['publishingUsername'] && !(typeof data['publishingUsername'] === 'string' || data['publishingUsername'] instanceof String)) {
            throw new Error("Expected the field `publishingUsername` to be a primitive type in the JSON string but got " + data['publishingUsername']);
        }
        // validate the optional field `push`
        if (data['push']) { // data not null
          AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigPush.validateJSON(data['push']);
        }
        // ensure the json data is a string
        if (data['pythonVersion'] && !(typeof data['pythonVersion'] === 'string' || data['pythonVersion'] instanceof String)) {
            throw new Error("Expected the field `pythonVersion` to be a primitive type in the JSON string but got " + data['pythonVersion']);
        }
        // ensure the json data is a string
        if (data['remoteDebuggingVersion'] && !(typeof data['remoteDebuggingVersion'] === 'string' || data['remoteDebuggingVersion'] instanceof String)) {
            throw new Error("Expected the field `remoteDebuggingVersion` to be a primitive type in the JSON string but got " + data['remoteDebuggingVersion']);
        }
        // ensure the json data is a string
        if (data['scmType'] && !(typeof data['scmType'] === 'string' || data['scmType'] instanceof String)) {
            throw new Error("Expected the field `scmType` to be a primitive type in the JSON string but got " + data['scmType']);
        }
        // ensure the json data is a string
        if (data['tracingOptions'] && !(typeof data['tracingOptions'] === 'string' || data['tracingOptions'] instanceof String)) {
            throw new Error("Expected the field `tracingOptions` to be a primitive type in the JSON string but got " + data['tracingOptions']);
        }
        if (data['virtualApplications']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['virtualApplications'])) {
                throw new Error("Expected the field `virtualApplications` to be an array in the JSON data but got " + data['virtualApplications']);
            }
            // validate the optional field `virtualApplications` (array)
            for (const item of data['virtualApplications']) {
                AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigVirtualApplicationsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['vnetName'] && !(typeof data['vnetName'] === 'string' || data['vnetName'] instanceof String)) {
            throw new Error("Expected the field `vnetName` to be a primitive type in the JSON string but got " + data['vnetName']);
        }

        return true;
    }


}



/**
 * <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
 * @member {Boolean} alwaysOn
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['alwaysOn'] = undefined;

/**
 * @member {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigApiDefinition} apiDefinition
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['apiDefinition'] = undefined;

/**
 * App command line to launch.
 * @member {String} appCommandLine
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['appCommandLine'] = undefined;

/**
 * Application settings.
 * @member {Array.<module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAppSettingsInner>} appSettings
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['appSettings'] = undefined;

/**
 * <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
 * @member {Boolean} autoHealEnabled
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['autoHealEnabled'] = undefined;

/**
 * @member {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigAutoHealRules} autoHealRules
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['autoHealRules'] = undefined;

/**
 * Auto-swap slot name.
 * @member {String} autoSwapSlotName
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['autoSwapSlotName'] = undefined;

/**
 * Connection strings.
 * @member {Array.<module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigConnectionStringsInner>} connectionStrings
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['connectionStrings'] = undefined;

/**
 * @member {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigCors} cors
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['cors'] = undefined;

/**
 * Default documents.
 * @member {Array.<String>} defaultDocuments
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['defaultDocuments'] = undefined;

/**
 * <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
 * @member {Boolean} detailedErrorLoggingEnabled
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['detailedErrorLoggingEnabled'] = undefined;

/**
 * Document root.
 * @member {String} documentRoot
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['documentRoot'] = undefined;

/**
 * @member {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigExperiments} experiments
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['experiments'] = undefined;

/**
 * Handler mappings.
 * @member {Array.<module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigHandlerMappingsInner>} handlerMappings
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['handlerMappings'] = undefined;

/**
 * Http20Enabled: configures a web site to allow clients to connect over http2.0
 * @member {Boolean} http20Enabled
 * @default true
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['http20Enabled'] = true;

/**
 * <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
 * @member {Boolean} httpLoggingEnabled
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['httpLoggingEnabled'] = undefined;

/**
 * IP security restrictions.
 * @member {Array.<module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigIpSecurityRestrictionsInner>} ipSecurityRestrictions
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['ipSecurityRestrictions'] = undefined;

/**
 * Java container.
 * @member {String} javaContainer
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['javaContainer'] = undefined;

/**
 * Java container version.
 * @member {String} javaContainerVersion
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['javaContainerVersion'] = undefined;

/**
 * Java version.
 * @member {String} javaVersion
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['javaVersion'] = undefined;

/**
 * @member {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigLimits} limits
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['limits'] = undefined;

/**
 * Linux App Framework and version
 * @member {String} linuxFxVersion
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['linuxFxVersion'] = undefined;

/**
 * Site load balancing.
 * @member {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.LoadBalancingEnum} loadBalancing
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['loadBalancing'] = undefined;

/**
 * <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
 * @member {Boolean} localMySqlEnabled
 * @default false
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['localMySqlEnabled'] = false;

/**
 * HTTP logs directory size limit.
 * @member {Number} logsDirectorySizeLimit
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['logsDirectorySizeLimit'] = undefined;

/**
 * @member {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigMachineKey} machineKey
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['machineKey'] = undefined;

/**
 * Managed pipeline mode.
 * @member {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.ManagedPipelineModeEnum} managedPipelineMode
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['managedPipelineMode'] = undefined;

/**
 * MinTlsVersion: configures the minimum version of TLS required for SSL requests
 * @member {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.MinTlsVersionEnum} minTlsVersion
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['minTlsVersion'] = undefined;

/**
 * .NET Framework version.
 * @member {String} netFrameworkVersion
 * @default 'v4.6'
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['netFrameworkVersion'] = 'v4.6';

/**
 * Version of Node.js.
 * @member {String} nodeVersion
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['nodeVersion'] = undefined;

/**
 * Number of workers.
 * @member {Number} numberOfWorkers
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['numberOfWorkers'] = undefined;

/**
 * Version of PHP.
 * @member {String} phpVersion
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['phpVersion'] = undefined;

/**
 * Publishing user name.
 * @member {String} publishingUsername
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['publishingUsername'] = undefined;

/**
 * @member {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigPush} push
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['push'] = undefined;

/**
 * Version of Python.
 * @member {String} pythonVersion
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['pythonVersion'] = undefined;

/**
 * <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
 * @member {Boolean} remoteDebuggingEnabled
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['remoteDebuggingEnabled'] = undefined;

/**
 * Remote debugging version.
 * @member {String} remoteDebuggingVersion
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['remoteDebuggingVersion'] = undefined;

/**
 * <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
 * @member {Boolean} requestTracingEnabled
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['requestTracingEnabled'] = undefined;

/**
 * Request tracing expiration time.
 * @member {Date} requestTracingExpirationTime
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['requestTracingExpirationTime'] = undefined;

/**
 * SCM type.
 * @member {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.ScmTypeEnum} scmType
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['scmType'] = undefined;

/**
 * Tracing options.
 * @member {String} tracingOptions
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['tracingOptions'] = undefined;

/**
 * <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
 * @member {Boolean} use32BitWorkerProcess
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['use32BitWorkerProcess'] = undefined;

/**
 * Virtual applications.
 * @member {Array.<module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfigVirtualApplicationsInner>} virtualApplications
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['virtualApplications'] = undefined;

/**
 * Virtual Network name.
 * @member {String} vnetName
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['vnetName'] = undefined;

/**
 * <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
 * @member {Boolean} webSocketsEnabled
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig.prototype['webSocketsEnabled'] = undefined;





/**
 * Allowed values for the <code>loadBalancing</code> property.
 * @enum {String}
 * @readonly
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig['LoadBalancingEnum'] = {

    /**
     * value: "WeightedRoundRobin"
     * @const
     */
    "WeightedRoundRobin": "WeightedRoundRobin",

    /**
     * value: "LeastRequests"
     * @const
     */
    "LeastRequests": "LeastRequests",

    /**
     * value: "LeastResponseTime"
     * @const
     */
    "LeastResponseTime": "LeastResponseTime",

    /**
     * value: "WeightedTotalTraffic"
     * @const
     */
    "WeightedTotalTraffic": "WeightedTotalTraffic",

    /**
     * value: "RequestHash"
     * @const
     */
    "RequestHash": "RequestHash"
};


/**
 * Allowed values for the <code>managedPipelineMode</code> property.
 * @enum {String}
 * @readonly
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig['ManagedPipelineModeEnum'] = {

    /**
     * value: "Integrated"
     * @const
     */
    "Integrated": "Integrated",

    /**
     * value: "Classic"
     * @const
     */
    "Classic": "Classic"
};


/**
 * Allowed values for the <code>minTlsVersion</code> property.
 * @enum {String}
 * @readonly
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig['MinTlsVersionEnum'] = {

    /**
     * value: "1.0"
     * @const
     */
    "0": "1.0",

    /**
     * value: "1.1"
     * @const
     */
    "1": "1.1",

    /**
     * value: "1.2"
     * @const
     */
    "2": "1.2"
};


/**
 * Allowed values for the <code>scmType</code> property.
 * @enum {String}
 * @readonly
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig['ScmTypeEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Dropbox"
     * @const
     */
    "Dropbox": "Dropbox",

    /**
     * value: "Tfs"
     * @const
     */
    "Tfs": "Tfs",

    /**
     * value: "LocalGit"
     * @const
     */
    "LocalGit": "LocalGit",

    /**
     * value: "GitHub"
     * @const
     */
    "GitHub": "GitHub",

    /**
     * value: "CodePlexGit"
     * @const
     */
    "CodePlexGit": "CodePlexGit",

    /**
     * value: "CodePlexHg"
     * @const
     */
    "CodePlexHg": "CodePlexHg",

    /**
     * value: "BitbucketGit"
     * @const
     */
    "BitbucketGit": "BitbucketGit",

    /**
     * value: "BitbucketHg"
     * @const
     */
    "BitbucketHg": "BitbucketHg",

    /**
     * value: "ExternalGit"
     * @const
     */
    "ExternalGit": "ExternalGit",

    /**
     * value: "ExternalHg"
     * @const
     */
    "ExternalHg": "ExternalHg",

    /**
     * value: "OneDrive"
     * @const
     */
    "OneDrive": "OneDrive",

    /**
     * value: "VSO"
     * @const
     */
    "VSO": "VSO"
};



export default AppServicePlansListWebApps200ResponseValueInnerPropertiesSiteConfig;

