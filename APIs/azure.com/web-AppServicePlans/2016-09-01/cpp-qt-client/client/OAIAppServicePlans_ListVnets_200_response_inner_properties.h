/**
 * AppServicePlans API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAppServicePlans_ListVnets_200_response_inner_properties.h
 *
 * VnetInfo resource specific properties
 */

#ifndef OAIAppServicePlans_ListVnets_200_response_inner_properties_H
#define OAIAppServicePlans_ListVnets_200_response_inner_properties_H

#include <QJsonObject>

#include "OAIAppServicePlans_ListVnets_200_response_inner_properties_routes_inner.h"
#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppServicePlans_ListVnets_200_response_inner_properties_routes_inner;

class OAIAppServicePlans_ListVnets_200_response_inner_properties : public OAIObject {
public:
    OAIAppServicePlans_ListVnets_200_response_inner_properties();
    OAIAppServicePlans_ListVnets_200_response_inner_properties(QString json);
    ~OAIAppServicePlans_ListVnets_200_response_inner_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QByteArray getCertBlob() const;
    void setCertBlob(const QByteArray &cert_blob);
    bool is_cert_blob_Set() const;
    bool is_cert_blob_Valid() const;

    QString getCertThumbprint() const;
    void setCertThumbprint(const QString &cert_thumbprint);
    bool is_cert_thumbprint_Set() const;
    bool is_cert_thumbprint_Valid() const;

    QString getDnsServers() const;
    void setDnsServers(const QString &dns_servers);
    bool is_dns_servers_Set() const;
    bool is_dns_servers_Valid() const;

    bool isResyncRequired() const;
    void setResyncRequired(const bool &resync_required);
    bool is_resync_required_Set() const;
    bool is_resync_required_Valid() const;

    QList<OAIAppServicePlans_ListVnets_200_response_inner_properties_routes_inner> getRoutes() const;
    void setRoutes(const QList<OAIAppServicePlans_ListVnets_200_response_inner_properties_routes_inner> &routes);
    bool is_routes_Set() const;
    bool is_routes_Valid() const;

    QString getVnetResourceId() const;
    void setVnetResourceId(const QString &vnet_resource_id);
    bool is_vnet_resource_id_Set() const;
    bool is_vnet_resource_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QByteArray m_cert_blob;
    bool m_cert_blob_isSet;
    bool m_cert_blob_isValid;

    QString m_cert_thumbprint;
    bool m_cert_thumbprint_isSet;
    bool m_cert_thumbprint_isValid;

    QString m_dns_servers;
    bool m_dns_servers_isSet;
    bool m_dns_servers_isValid;

    bool m_resync_required;
    bool m_resync_required_isSet;
    bool m_resync_required_isValid;

    QList<OAIAppServicePlans_ListVnets_200_response_inner_properties_routes_inner> m_routes;
    bool m_routes_isSet;
    bool m_routes_isValid;

    QString m_vnet_resource_id;
    bool m_vnet_resource_id_isSet;
    bool m_vnet_resource_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAppServicePlans_ListVnets_200_response_inner_properties)

#endif // OAIAppServicePlans_ListVnets_200_response_inner_properties_H
