/*
 * AppServicePlans API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.AppServicePlansList200ResponseValueInnerPropertiesHostingEnvironmentProfile;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AppServicePlansList200ResponseValueInnerProperties
 */
public class AppServicePlansList200ResponseValueInnerPropertiesTest {
    private final AppServicePlansList200ResponseValueInnerProperties model = new AppServicePlansList200ResponseValueInnerProperties();

    /**
     * Model tests for AppServicePlansList200ResponseValueInnerProperties
     */
    @Test
    public void testAppServicePlansList200ResponseValueInnerProperties() {
        // TODO: test AppServicePlansList200ResponseValueInnerProperties
    }

    /**
     * Test the property 'freeOfferExpirationTime'
     */
    @Test
    public void freeOfferExpirationTimeTest() {
        // TODO: test freeOfferExpirationTime
    }

    /**
     * Test the property 'geoRegion'
     */
    @Test
    public void geoRegionTest() {
        // TODO: test geoRegion
    }

    /**
     * Test the property 'hostingEnvironmentProfile'
     */
    @Test
    public void hostingEnvironmentProfileTest() {
        // TODO: test hostingEnvironmentProfile
    }

    /**
     * Test the property 'hyperV'
     */
    @Test
    public void hyperVTest() {
        // TODO: test hyperV
    }

    /**
     * Test the property 'isSpot'
     */
    @Test
    public void isSpotTest() {
        // TODO: test isSpot
    }

    /**
     * Test the property 'isXenon'
     */
    @Test
    public void isXenonTest() {
        // TODO: test isXenon
    }

    /**
     * Test the property 'maximumElasticWorkerCount'
     */
    @Test
    public void maximumElasticWorkerCountTest() {
        // TODO: test maximumElasticWorkerCount
    }

    /**
     * Test the property 'maximumNumberOfWorkers'
     */
    @Test
    public void maximumNumberOfWorkersTest() {
        // TODO: test maximumNumberOfWorkers
    }

    /**
     * Test the property 'numberOfSites'
     */
    @Test
    public void numberOfSitesTest() {
        // TODO: test numberOfSites
    }

    /**
     * Test the property 'perSiteScaling'
     */
    @Test
    public void perSiteScalingTest() {
        // TODO: test perSiteScaling
    }

    /**
     * Test the property 'provisioningState'
     */
    @Test
    public void provisioningStateTest() {
        // TODO: test provisioningState
    }

    /**
     * Test the property 'reserved'
     */
    @Test
    public void reservedTest() {
        // TODO: test reserved
    }

    /**
     * Test the property 'resourceGroup'
     */
    @Test
    public void resourceGroupTest() {
        // TODO: test resourceGroup
    }

    /**
     * Test the property 'spotExpirationTime'
     */
    @Test
    public void spotExpirationTimeTest() {
        // TODO: test spotExpirationTime
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'subscription'
     */
    @Test
    public void subscriptionTest() {
        // TODO: test subscription
    }

    /**
     * Test the property 'targetWorkerCount'
     */
    @Test
    public void targetWorkerCountTest() {
        // TODO: test targetWorkerCount
    }

    /**
     * Test the property 'targetWorkerSizeId'
     */
    @Test
    public void targetWorkerSizeIdTest() {
        // TODO: test targetWorkerSizeId
    }

    /**
     * Test the property 'workerTierName'
     */
    @Test
    public void workerTierNameTest() {
        // TODO: test workerTierName
    }

}
