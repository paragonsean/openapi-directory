/**
 * AppServicePlans API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo model module.
 * @module model/AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo
 * @version 2019-08-01
 */
class AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo {
    /**
     * Constructs a new <code>AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo</code>.
     * Information needed for cloning operation.
     * @alias module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo
     * @param sourceWebAppId {String} ARM resource ID of the source app. App resource ID is of the form  /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and  /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
     */
    constructor(sourceWebAppId) { 
        
        AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.initialize(this, sourceWebAppId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sourceWebAppId) { 
        obj['sourceWebAppId'] = sourceWebAppId;
    }

    /**
     * Constructs a <code>AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo} obj Optional instance to populate.
     * @return {module:model/AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo} The populated <code>AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo();

            if (data.hasOwnProperty('appSettingsOverrides')) {
                obj['appSettingsOverrides'] = ApiClient.convertToType(data['appSettingsOverrides'], {'String': 'String'});
            }
            if (data.hasOwnProperty('cloneCustomHostNames')) {
                obj['cloneCustomHostNames'] = ApiClient.convertToType(data['cloneCustomHostNames'], 'Boolean');
            }
            if (data.hasOwnProperty('cloneSourceControl')) {
                obj['cloneSourceControl'] = ApiClient.convertToType(data['cloneSourceControl'], 'Boolean');
            }
            if (data.hasOwnProperty('configureLoadBalancing')) {
                obj['configureLoadBalancing'] = ApiClient.convertToType(data['configureLoadBalancing'], 'Boolean');
            }
            if (data.hasOwnProperty('correlationId')) {
                obj['correlationId'] = ApiClient.convertToType(data['correlationId'], 'String');
            }
            if (data.hasOwnProperty('hostingEnvironment')) {
                obj['hostingEnvironment'] = ApiClient.convertToType(data['hostingEnvironment'], 'String');
            }
            if (data.hasOwnProperty('overwrite')) {
                obj['overwrite'] = ApiClient.convertToType(data['overwrite'], 'Boolean');
            }
            if (data.hasOwnProperty('sourceWebAppId')) {
                obj['sourceWebAppId'] = ApiClient.convertToType(data['sourceWebAppId'], 'String');
            }
            if (data.hasOwnProperty('sourceWebAppLocation')) {
                obj['sourceWebAppLocation'] = ApiClient.convertToType(data['sourceWebAppLocation'], 'String');
            }
            if (data.hasOwnProperty('trafficManagerProfileId')) {
                obj['trafficManagerProfileId'] = ApiClient.convertToType(data['trafficManagerProfileId'], 'String');
            }
            if (data.hasOwnProperty('trafficManagerProfileName')) {
                obj['trafficManagerProfileName'] = ApiClient.convertToType(data['trafficManagerProfileName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['correlationId'] && !(typeof data['correlationId'] === 'string' || data['correlationId'] instanceof String)) {
            throw new Error("Expected the field `correlationId` to be a primitive type in the JSON string but got " + data['correlationId']);
        }
        // ensure the json data is a string
        if (data['hostingEnvironment'] && !(typeof data['hostingEnvironment'] === 'string' || data['hostingEnvironment'] instanceof String)) {
            throw new Error("Expected the field `hostingEnvironment` to be a primitive type in the JSON string but got " + data['hostingEnvironment']);
        }
        // ensure the json data is a string
        if (data['sourceWebAppId'] && !(typeof data['sourceWebAppId'] === 'string' || data['sourceWebAppId'] instanceof String)) {
            throw new Error("Expected the field `sourceWebAppId` to be a primitive type in the JSON string but got " + data['sourceWebAppId']);
        }
        // ensure the json data is a string
        if (data['sourceWebAppLocation'] && !(typeof data['sourceWebAppLocation'] === 'string' || data['sourceWebAppLocation'] instanceof String)) {
            throw new Error("Expected the field `sourceWebAppLocation` to be a primitive type in the JSON string but got " + data['sourceWebAppLocation']);
        }
        // ensure the json data is a string
        if (data['trafficManagerProfileId'] && !(typeof data['trafficManagerProfileId'] === 'string' || data['trafficManagerProfileId'] instanceof String)) {
            throw new Error("Expected the field `trafficManagerProfileId` to be a primitive type in the JSON string but got " + data['trafficManagerProfileId']);
        }
        // ensure the json data is a string
        if (data['trafficManagerProfileName'] && !(typeof data['trafficManagerProfileName'] === 'string' || data['trafficManagerProfileName'] instanceof String)) {
            throw new Error("Expected the field `trafficManagerProfileName` to be a primitive type in the JSON string but got " + data['trafficManagerProfileName']);
        }

        return true;
    }


}

AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.RequiredProperties = ["sourceWebAppId"];

/**
 * Application setting overrides for cloned app. If specified, these settings override the settings cloned  from source app. Otherwise, application settings from source app are retained.
 * @member {Object.<String, String>} appSettingsOverrides
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.prototype['appSettingsOverrides'] = undefined;

/**
 * <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
 * @member {Boolean} cloneCustomHostNames
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.prototype['cloneCustomHostNames'] = undefined;

/**
 * <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
 * @member {Boolean} cloneSourceControl
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.prototype['cloneSourceControl'] = undefined;

/**
 * <code>true</code> to configure load balancing for source and destination app.
 * @member {Boolean} configureLoadBalancing
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.prototype['configureLoadBalancing'] = undefined;

/**
 * Correlation ID of cloning operation. This ID ties multiple cloning operations together to use the same snapshot.
 * @member {String} correlationId
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.prototype['correlationId'] = undefined;

/**
 * App Service Environment.
 * @member {String} hostingEnvironment
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.prototype['hostingEnvironment'] = undefined;

/**
 * <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
 * @member {Boolean} overwrite
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.prototype['overwrite'] = undefined;

/**
 * ARM resource ID of the source app. App resource ID is of the form  /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and  /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
 * @member {String} sourceWebAppId
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.prototype['sourceWebAppId'] = undefined;

/**
 * Location of source app ex: West US or North Europe
 * @member {String} sourceWebAppLocation
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.prototype['sourceWebAppLocation'] = undefined;

/**
 * ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form  /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
 * @member {String} trafficManagerProfileId
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.prototype['trafficManagerProfileId'] = undefined;

/**
 * Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
 * @member {String} trafficManagerProfileName
 */
AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo.prototype['trafficManagerProfileName'] = undefined;






export default AppServicePlansListWebApps200ResponseValueInnerPropertiesCloningInfo;

