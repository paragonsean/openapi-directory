/**
 * AppServicePlans API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppServicePlansApiClient);
  }
}(this, function(expect, AppServicePlansApiClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppServicePlansApiClient.AppServicePlansApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AppServicePlansApi', function() {
    describe('appServicePlansCreateOrUpdate', function() {
      it('should call appServicePlansCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test appServicePlansCreateOrUpdate
        //instance.appServicePlansCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansCreateOrUpdateVnetRoute', function() {
      it('should call appServicePlansCreateOrUpdateVnetRoute successfully', function(done) {
        //uncomment below and update the code to test appServicePlansCreateOrUpdateVnetRoute
        //instance.appServicePlansCreateOrUpdateVnetRoute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansDelete', function() {
      it('should call appServicePlansDelete successfully', function(done) {
        //uncomment below and update the code to test appServicePlansDelete
        //instance.appServicePlansDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansDeleteHybridConnection', function() {
      it('should call appServicePlansDeleteHybridConnection successfully', function(done) {
        //uncomment below and update the code to test appServicePlansDeleteHybridConnection
        //instance.appServicePlansDeleteHybridConnection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansDeleteVnetRoute', function() {
      it('should call appServicePlansDeleteVnetRoute successfully', function(done) {
        //uncomment below and update the code to test appServicePlansDeleteVnetRoute
        //instance.appServicePlansDeleteVnetRoute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansGet', function() {
      it('should call appServicePlansGet successfully', function(done) {
        //uncomment below and update the code to test appServicePlansGet
        //instance.appServicePlansGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansGetHybridConnection', function() {
      it('should call appServicePlansGetHybridConnection successfully', function(done) {
        //uncomment below and update the code to test appServicePlansGetHybridConnection
        //instance.appServicePlansGetHybridConnection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansGetHybridConnectionPlanLimit', function() {
      it('should call appServicePlansGetHybridConnectionPlanLimit successfully', function(done) {
        //uncomment below and update the code to test appServicePlansGetHybridConnectionPlanLimit
        //instance.appServicePlansGetHybridConnectionPlanLimit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansGetRouteForVnet', function() {
      it('should call appServicePlansGetRouteForVnet successfully', function(done) {
        //uncomment below and update the code to test appServicePlansGetRouteForVnet
        //instance.appServicePlansGetRouteForVnet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansGetServerFarmSkus', function() {
      it('should call appServicePlansGetServerFarmSkus successfully', function(done) {
        //uncomment below and update the code to test appServicePlansGetServerFarmSkus
        //instance.appServicePlansGetServerFarmSkus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansGetVnetFromServerFarm', function() {
      it('should call appServicePlansGetVnetFromServerFarm successfully', function(done) {
        //uncomment below and update the code to test appServicePlansGetVnetFromServerFarm
        //instance.appServicePlansGetVnetFromServerFarm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansGetVnetGateway', function() {
      it('should call appServicePlansGetVnetGateway successfully', function(done) {
        //uncomment below and update the code to test appServicePlansGetVnetGateway
        //instance.appServicePlansGetVnetGateway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansList', function() {
      it('should call appServicePlansList successfully', function(done) {
        //uncomment below and update the code to test appServicePlansList
        //instance.appServicePlansList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansListByResourceGroup', function() {
      it('should call appServicePlansListByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test appServicePlansListByResourceGroup
        //instance.appServicePlansListByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansListCapabilities', function() {
      it('should call appServicePlansListCapabilities successfully', function(done) {
        //uncomment below and update the code to test appServicePlansListCapabilities
        //instance.appServicePlansListCapabilities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansListHybridConnectionKeys', function() {
      it('should call appServicePlansListHybridConnectionKeys successfully', function(done) {
        //uncomment below and update the code to test appServicePlansListHybridConnectionKeys
        //instance.appServicePlansListHybridConnectionKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansListHybridConnections', function() {
      it('should call appServicePlansListHybridConnections successfully', function(done) {
        //uncomment below and update the code to test appServicePlansListHybridConnections
        //instance.appServicePlansListHybridConnections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansListMetricDefintions', function() {
      it('should call appServicePlansListMetricDefintions successfully', function(done) {
        //uncomment below and update the code to test appServicePlansListMetricDefintions
        //instance.appServicePlansListMetricDefintions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansListMetrics', function() {
      it('should call appServicePlansListMetrics successfully', function(done) {
        //uncomment below and update the code to test appServicePlansListMetrics
        //instance.appServicePlansListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansListRoutesForVnet', function() {
      it('should call appServicePlansListRoutesForVnet successfully', function(done) {
        //uncomment below and update the code to test appServicePlansListRoutesForVnet
        //instance.appServicePlansListRoutesForVnet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansListUsages', function() {
      it('should call appServicePlansListUsages successfully', function(done) {
        //uncomment below and update the code to test appServicePlansListUsages
        //instance.appServicePlansListUsages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansListVnets', function() {
      it('should call appServicePlansListVnets successfully', function(done) {
        //uncomment below and update the code to test appServicePlansListVnets
        //instance.appServicePlansListVnets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansListWebApps', function() {
      it('should call appServicePlansListWebApps successfully', function(done) {
        //uncomment below and update the code to test appServicePlansListWebApps
        //instance.appServicePlansListWebApps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansListWebAppsByHybridConnection', function() {
      it('should call appServicePlansListWebAppsByHybridConnection successfully', function(done) {
        //uncomment below and update the code to test appServicePlansListWebAppsByHybridConnection
        //instance.appServicePlansListWebAppsByHybridConnection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansRebootWorker', function() {
      it('should call appServicePlansRebootWorker successfully', function(done) {
        //uncomment below and update the code to test appServicePlansRebootWorker
        //instance.appServicePlansRebootWorker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansRestartWebApps', function() {
      it('should call appServicePlansRestartWebApps successfully', function(done) {
        //uncomment below and update the code to test appServicePlansRestartWebApps
        //instance.appServicePlansRestartWebApps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansUpdate', function() {
      it('should call appServicePlansUpdate successfully', function(done) {
        //uncomment below and update the code to test appServicePlansUpdate
        //instance.appServicePlansUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansUpdateVnetGateway', function() {
      it('should call appServicePlansUpdateVnetGateway successfully', function(done) {
        //uncomment below and update the code to test appServicePlansUpdateVnetGateway
        //instance.appServicePlansUpdateVnetGateway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appServicePlansUpdateVnetRoute', function() {
      it('should call appServicePlansUpdateVnetRoute successfully', function(done) {
        //uncomment below and update the code to test appServicePlansUpdateVnetRoute
        //instance.appServicePlansUpdateVnetRoute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
