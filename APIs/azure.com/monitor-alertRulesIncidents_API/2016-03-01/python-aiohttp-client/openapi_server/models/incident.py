# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Incident(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activated_time: datetime=None, is_active: bool=None, name: str=None, resolved_time: datetime=None, rule_name: str=None):
        """Incident - a model defined in OpenAPI

        :param activated_time: The activated_time of this Incident.
        :param is_active: The is_active of this Incident.
        :param name: The name of this Incident.
        :param resolved_time: The resolved_time of this Incident.
        :param rule_name: The rule_name of this Incident.
        """
        self.openapi_types = {
            'activated_time': datetime,
            'is_active': bool,
            'name': str,
            'resolved_time': datetime,
            'rule_name': str
        }

        self.attribute_map = {
            'activated_time': 'activatedTime',
            'is_active': 'isActive',
            'name': 'name',
            'resolved_time': 'resolvedTime',
            'rule_name': 'ruleName'
        }

        self._activated_time = activated_time
        self._is_active = is_active
        self._name = name
        self._resolved_time = resolved_time
        self._rule_name = rule_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Incident':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Incident of this Incident.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activated_time(self):
        """Gets the activated_time of this Incident.

        The time at which the incident was activated in ISO8601 format.

        :return: The activated_time of this Incident.
        :rtype: datetime
        """
        return self._activated_time

    @activated_time.setter
    def activated_time(self, activated_time):
        """Sets the activated_time of this Incident.

        The time at which the incident was activated in ISO8601 format.

        :param activated_time: The activated_time of this Incident.
        :type activated_time: datetime
        """

        self._activated_time = activated_time

    @property
    def is_active(self):
        """Gets the is_active of this Incident.

        A boolean to indicate whether the incident is active or resolved.

        :return: The is_active of this Incident.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this Incident.

        A boolean to indicate whether the incident is active or resolved.

        :param is_active: The is_active of this Incident.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def name(self):
        """Gets the name of this Incident.

        Incident name.

        :return: The name of this Incident.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Incident.

        Incident name.

        :param name: The name of this Incident.
        :type name: str
        """

        self._name = name

    @property
    def resolved_time(self):
        """Gets the resolved_time of this Incident.

        The time at which the incident was resolved in ISO8601 format. If null, it means the incident is still active.

        :return: The resolved_time of this Incident.
        :rtype: datetime
        """
        return self._resolved_time

    @resolved_time.setter
    def resolved_time(self, resolved_time):
        """Sets the resolved_time of this Incident.

        The time at which the incident was resolved in ISO8601 format. If null, it means the incident is still active.

        :param resolved_time: The resolved_time of this Incident.
        :type resolved_time: datetime
        """

        self._resolved_time = resolved_time

    @property
    def rule_name(self):
        """Gets the rule_name of this Incident.

        Rule name that is associated with the incident.

        :return: The rule_name of this Incident.
        :rtype: str
        """
        return self._rule_name

    @rule_name.setter
    def rule_name(self, rule_name):
        """Sets the rule_name of this Incident.

        Rule name that is associated with the incident.

        :param rule_name: The rule_name of this Incident.
        :type rule_name: str
        """

        self._rule_name = rule_name
