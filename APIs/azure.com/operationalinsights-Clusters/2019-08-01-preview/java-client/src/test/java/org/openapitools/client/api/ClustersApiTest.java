/*
 * Azure Log Analytics
 * Azure Log Analytics API reference
 *
 * The version of the OpenAPI document: 2019-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Cluster;
import org.openapitools.client.model.ClusterListResult;
import org.openapitools.client.model.ClusterPatch;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClustersApi
 */
@Disabled
public class ClustersApiTest {

    private final ClustersApi api = new ClustersApi();

    /**
     * Create or update a Log Analytics cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Cluster parameters = null;
        Cluster response = api.clustersCreateOrUpdate(resourceGroupName, clusterName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a cluster instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.clustersDelete(resourceGroupName, clusterName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a Log Analytics cluster instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersGetTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Cluster response = api.clustersGet(resourceGroupName, clusterName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the Log Analytics clusters in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        ClusterListResult response = api.clustersList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets Log Analytics clusters in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ClusterListResult response = api.clustersListByResourceGroup(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates a Log Analytics cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clustersUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String clusterName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ClusterPatch parameters = null;
        Cluster response = api.clustersUpdate(resourceGroupName, clusterName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
