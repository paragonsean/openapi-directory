/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SqlManagementClient);
  }
}(this, function(expect, SqlManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SqlManagementClient.ElasticPoolPerDatabaseMaxDtuCapability();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ElasticPoolPerDatabaseMaxDtuCapability', function() {
    it('should create an instance of ElasticPoolPerDatabaseMaxDtuCapability', function() {
      // uncomment below and update the code to test ElasticPoolPerDatabaseMaxDtuCapability
      //var instance = new SqlManagementClient.ElasticPoolPerDatabaseMaxDtuCapability();
      //expect(instance).to.be.a(SqlManagementClient.ElasticPoolPerDatabaseMaxDtuCapability);
    });

    it('should have the property limit (base name: "limit")', function() {
      // uncomment below and update the code to test the property limit
      //var instance = new SqlManagementClient.ElasticPoolPerDatabaseMaxDtuCapability();
      //expect(instance).to.be();
    });

    it('should have the property reason (base name: "reason")', function() {
      // uncomment below and update the code to test the property reason
      //var instance = new SqlManagementClient.ElasticPoolPerDatabaseMaxDtuCapability();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SqlManagementClient.ElasticPoolPerDatabaseMaxDtuCapability();
      //expect(instance).to.be();
    });

    it('should have the property supportedPerDatabaseMinDtus (base name: "supportedPerDatabaseMinDtus")', function() {
      // uncomment below and update the code to test the property supportedPerDatabaseMinDtus
      //var instance = new SqlManagementClient.ElasticPoolPerDatabaseMaxDtuCapability();
      //expect(instance).to.be();
    });

  });

}));
