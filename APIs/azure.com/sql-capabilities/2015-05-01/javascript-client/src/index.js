/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import EditionCapability from './model/EditionCapability';
import ElasticPoolDtuCapability from './model/ElasticPoolDtuCapability';
import ElasticPoolEditionCapability from './model/ElasticPoolEditionCapability';
import ElasticPoolPerDatabaseMaxDtuCapability from './model/ElasticPoolPerDatabaseMaxDtuCapability';
import ElasticPoolPerDatabaseMinDtuCapability from './model/ElasticPoolPerDatabaseMinDtuCapability';
import LocationCapabilities from './model/LocationCapabilities';
import MaxSizeCapability from './model/MaxSizeCapability';
import PerformanceLevelCapability from './model/PerformanceLevelCapability';
import ServerVersionCapability from './model/ServerVersionCapability';
import ServiceLevelObjectiveCapability from './model/ServiceLevelObjectiveCapability';
import LocationCapabilitiesApi from './api/LocationCapabilitiesApi';


/**
* The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SqlManagementClient = require('index'); // See note below*.
* var xxxSvc = new SqlManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SqlManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SqlManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SqlManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-05-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The EditionCapability model constructor.
     * @property {module:model/EditionCapability}
     */
    EditionCapability,

    /**
     * The ElasticPoolDtuCapability model constructor.
     * @property {module:model/ElasticPoolDtuCapability}
     */
    ElasticPoolDtuCapability,

    /**
     * The ElasticPoolEditionCapability model constructor.
     * @property {module:model/ElasticPoolEditionCapability}
     */
    ElasticPoolEditionCapability,

    /**
     * The ElasticPoolPerDatabaseMaxDtuCapability model constructor.
     * @property {module:model/ElasticPoolPerDatabaseMaxDtuCapability}
     */
    ElasticPoolPerDatabaseMaxDtuCapability,

    /**
     * The ElasticPoolPerDatabaseMinDtuCapability model constructor.
     * @property {module:model/ElasticPoolPerDatabaseMinDtuCapability}
     */
    ElasticPoolPerDatabaseMinDtuCapability,

    /**
     * The LocationCapabilities model constructor.
     * @property {module:model/LocationCapabilities}
     */
    LocationCapabilities,

    /**
     * The MaxSizeCapability model constructor.
     * @property {module:model/MaxSizeCapability}
     */
    MaxSizeCapability,

    /**
     * The PerformanceLevelCapability model constructor.
     * @property {module:model/PerformanceLevelCapability}
     */
    PerformanceLevelCapability,

    /**
     * The ServerVersionCapability model constructor.
     * @property {module:model/ServerVersionCapability}
     */
    ServerVersionCapability,

    /**
     * The ServiceLevelObjectiveCapability model constructor.
     * @property {module:model/ServiceLevelObjectiveCapability}
     */
    ServiceLevelObjectiveCapability,

    /**
    * The LocationCapabilitiesApi service constructor.
    * @property {module:api/LocationCapabilitiesApi}
    */
    LocationCapabilitiesApi
};
