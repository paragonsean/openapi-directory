/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceLevelObjectiveCapability.h
 *
 * The service objectives capability.
 */

#ifndef OAIServiceLevelObjectiveCapability_H
#define OAIServiceLevelObjectiveCapability_H

#include <QJsonObject>

#include "OAIMaxSizeCapability.h"
#include "OAIPerformanceLevelCapability.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMaxSizeCapability;
class OAIPerformanceLevelCapability;

class OAIServiceLevelObjectiveCapability : public OAIObject {
public:
    OAIServiceLevelObjectiveCapability();
    OAIServiceLevelObjectiveCapability(QString json);
    ~OAIServiceLevelObjectiveCapability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIMaxSizeCapability getIncludedMaxSize() const;
    void setIncludedMaxSize(const OAIMaxSizeCapability &included_max_size);
    bool is_included_max_size_Set() const;
    bool is_included_max_size_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIPerformanceLevelCapability getPerformanceLevel() const;
    void setPerformanceLevel(const OAIPerformanceLevelCapability &performance_level);
    bool is_performance_level_Set() const;
    bool is_performance_level_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAIMaxSizeCapability> getSupportedMaxSizes() const;
    void setSupportedMaxSizes(const QList<OAIMaxSizeCapability> &supported_max_sizes);
    bool is_supported_max_sizes_Set() const;
    bool is_supported_max_sizes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIMaxSizeCapability m_included_max_size;
    bool m_included_max_size_isSet;
    bool m_included_max_size_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIPerformanceLevelCapability m_performance_level;
    bool m_performance_level_isSet;
    bool m_performance_level_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAIMaxSizeCapability> m_supported_max_sizes;
    bool m_supported_max_sizes_isSet;
    bool m_supported_max_sizes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceLevelObjectiveCapability)

#endif // OAIServiceLevelObjectiveCapability_H
