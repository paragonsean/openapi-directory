/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LocationCapabilities from '../model/LocationCapabilities';

/**
* LocationCapabilities service.
* @module api/LocationCapabilitiesApi
* @version 2018-06-01-preview
*/
export default class LocationCapabilitiesApi {

    /**
    * Constructs a new LocationCapabilitiesApi. 
    * @alias module:api/LocationCapabilitiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the capabilitiesListByLocation operation.
     * @callback module:api/LocationCapabilitiesApi~capabilitiesListByLocationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LocationCapabilities} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the subscription capabilities available for the specified location.
     * @param {String} locationName The location name whose capabilities are retrieved.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [include] If specified, restricts the response to only include the selected item.
     * @param {module:api/LocationCapabilitiesApi~capabilitiesListByLocationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LocationCapabilities}
     */
    capabilitiesListByLocation(locationName, subscriptionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'locationName' is set
      if (locationName === undefined || locationName === null) {
        throw new Error("Missing the required parameter 'locationName' when calling capabilitiesListByLocation");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling capabilitiesListByLocation");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling capabilitiesListByLocation");
      }

      let pathParams = {
        'locationName': locationName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'include': opts['include'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LocationCapabilities;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/capabilities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
