/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SqlManagementClient);
  }
}(this, function(expect, SqlManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SqlManagementClient.AutoPauseDelayTimeRange();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AutoPauseDelayTimeRange', function() {
    it('should create an instance of AutoPauseDelayTimeRange', function() {
      // uncomment below and update the code to test AutoPauseDelayTimeRange
      //var instance = new SqlManagementClient.AutoPauseDelayTimeRange();
      //expect(instance).to.be.a(SqlManagementClient.AutoPauseDelayTimeRange);
    });

    it('should have the property _default (base name: "default")', function() {
      // uncomment below and update the code to test the property _default
      //var instance = new SqlManagementClient.AutoPauseDelayTimeRange();
      //expect(instance).to.be();
    });

    it('should have the property doNotPauseValue (base name: "doNotPauseValue")', function() {
      // uncomment below and update the code to test the property doNotPauseValue
      //var instance = new SqlManagementClient.AutoPauseDelayTimeRange();
      //expect(instance).to.be();
    });

    it('should have the property maxValue (base name: "maxValue")', function() {
      // uncomment below and update the code to test the property maxValue
      //var instance = new SqlManagementClient.AutoPauseDelayTimeRange();
      //expect(instance).to.be();
    });

    it('should have the property minValue (base name: "minValue")', function() {
      // uncomment below and update the code to test the property minValue
      //var instance = new SqlManagementClient.AutoPauseDelayTimeRange();
      //expect(instance).to.be();
    });

    it('should have the property stepSize (base name: "stepSize")', function() {
      // uncomment below and update the code to test the property stepSize
      //var instance = new SqlManagementClient.AutoPauseDelayTimeRange();
      //expect(instance).to.be();
    });

    it('should have the property unit (base name: "unit")', function() {
      // uncomment below and update the code to test the property unit
      //var instance = new SqlManagementClient.AutoPauseDelayTimeRange();
      //expect(instance).to.be();
    });

  });

}));
