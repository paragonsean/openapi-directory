/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManagedInstanceVcoresCapability.h
 *
 * The managed instance virtual cores capability.
 */

#ifndef OAIManagedInstanceVcoresCapability_H
#define OAIManagedInstanceVcoresCapability_H

#include <QJsonObject>

#include "OAIMaxSizeCapability.h"
#include "OAIMaxSizeRangeCapability.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMaxSizeCapability;
class OAIMaxSizeRangeCapability;

class OAIManagedInstanceVcoresCapability : public OAIObject {
public:
    OAIManagedInstanceVcoresCapability();
    OAIManagedInstanceVcoresCapability(QString json);
    ~OAIManagedInstanceVcoresCapability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMaxSizeCapability getIncludedMaxSize() const;
    void setIncludedMaxSize(const OAIMaxSizeCapability &included_max_size);
    bool is_included_max_size_Set() const;
    bool is_included_max_size_Valid() const;

    bool isInstancePoolSupported() const;
    void setInstancePoolSupported(const bool &instance_pool_supported);
    bool is_instance_pool_supported_Set() const;
    bool is_instance_pool_supported_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    bool isStandaloneSupported() const;
    void setStandaloneSupported(const bool &standalone_supported);
    bool is_standalone_supported_Set() const;
    bool is_standalone_supported_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAIMaxSizeRangeCapability> getSupportedStorageSizes() const;
    void setSupportedStorageSizes(const QList<OAIMaxSizeRangeCapability> &supported_storage_sizes);
    bool is_supported_storage_sizes_Set() const;
    bool is_supported_storage_sizes_Valid() const;

    qint32 getValue() const;
    void setValue(const qint32 &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMaxSizeCapability m_included_max_size;
    bool m_included_max_size_isSet;
    bool m_included_max_size_isValid;

    bool m_instance_pool_supported;
    bool m_instance_pool_supported_isSet;
    bool m_instance_pool_supported_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    bool m_standalone_supported;
    bool m_standalone_supported_isSet;
    bool m_standalone_supported_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAIMaxSizeRangeCapability> m_supported_storage_sizes;
    bool m_supported_storage_sizes_isSet;
    bool m_supported_storage_sizes_isValid;

    qint32 m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManagedInstanceVcoresCapability)

#endif // OAIManagedInstanceVcoresCapability_H
