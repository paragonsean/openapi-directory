/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocationCapabilities.h
 *
 * The location capability.
 */

#ifndef OAILocationCapabilities_H
#define OAILocationCapabilities_H

#include <QJsonObject>

#include "OAIManagedInstanceVersionCapability.h"
#include "OAIServerVersionCapability.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIManagedInstanceVersionCapability;
class OAIServerVersionCapability;

class OAILocationCapabilities : public OAIObject {
public:
    OAILocationCapabilities();
    OAILocationCapabilities(QString json);
    ~OAILocationCapabilities() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAIManagedInstanceVersionCapability> getSupportedManagedInstanceVersions() const;
    void setSupportedManagedInstanceVersions(const QList<OAIManagedInstanceVersionCapability> &supported_managed_instance_versions);
    bool is_supported_managed_instance_versions_Set() const;
    bool is_supported_managed_instance_versions_Valid() const;

    QList<OAIServerVersionCapability> getSupportedServerVersions() const;
    void setSupportedServerVersions(const QList<OAIServerVersionCapability> &supported_server_versions);
    bool is_supported_server_versions_Set() const;
    bool is_supported_server_versions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAIManagedInstanceVersionCapability> m_supported_managed_instance_versions;
    bool m_supported_managed_instance_versions_isSet;
    bool m_supported_managed_instance_versions_isValid;

    QList<OAIServerVersionCapability> m_supported_server_versions;
    bool m_supported_server_versions_isSet;
    bool m_supported_server_versions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocationCapabilities)

#endif // OAILocationCapabilities_H
