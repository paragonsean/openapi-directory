/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAutoPauseDelayTimeRange.h
 *
 * Supported auto pause delay time range
 */

#ifndef OAIAutoPauseDelayTimeRange_H
#define OAIAutoPauseDelayTimeRange_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAutoPauseDelayTimeRange : public OAIObject {
public:
    OAIAutoPauseDelayTimeRange();
    OAIAutoPauseDelayTimeRange(QString json);
    ~OAIAutoPauseDelayTimeRange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getRDefault() const;
    void setRDefault(const qint32 &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    qint32 getDoNotPauseValue() const;
    void setDoNotPauseValue(const qint32 &do_not_pause_value);
    bool is_do_not_pause_value_Set() const;
    bool is_do_not_pause_value_Valid() const;

    qint32 getMaxValue() const;
    void setMaxValue(const qint32 &max_value);
    bool is_max_value_Set() const;
    bool is_max_value_Valid() const;

    qint32 getMinValue() const;
    void setMinValue(const qint32 &min_value);
    bool is_min_value_Set() const;
    bool is_min_value_Valid() const;

    qint32 getStepSize() const;
    void setStepSize(const qint32 &step_size);
    bool is_step_size_Set() const;
    bool is_step_size_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    qint32 m_do_not_pause_value;
    bool m_do_not_pause_value_isSet;
    bool m_do_not_pause_value_isValid;

    qint32 m_max_value;
    bool m_max_value_isSet;
    bool m_max_value_isValid;

    qint32 m_min_value;
    bool m_min_value_isSet;
    bool m_min_value_isValid;

    qint32 m_step_size;
    bool m_step_size_isSet;
    bool m_step_size_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAutoPauseDelayTimeRange)

#endif // OAIAutoPauseDelayTimeRange_H
