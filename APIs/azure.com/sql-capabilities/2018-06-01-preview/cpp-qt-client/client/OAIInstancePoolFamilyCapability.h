/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstancePoolFamilyCapability.h
 *
 * The instance pool family capability.
 */

#ifndef OAIInstancePoolFamilyCapability_H
#define OAIInstancePoolFamilyCapability_H

#include <QJsonObject>

#include "OAIInstancePoolVcoresCapability.h"
#include "OAILicenseTypeCapability.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILicenseTypeCapability;
class OAIInstancePoolVcoresCapability;

class OAIInstancePoolFamilyCapability : public OAIObject {
public:
    OAIInstancePoolFamilyCapability();
    OAIInstancePoolFamilyCapability(QString json);
    ~OAIInstancePoolFamilyCapability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAILicenseTypeCapability> getSupportedLicenseTypes() const;
    void setSupportedLicenseTypes(const QList<OAILicenseTypeCapability> &supported_license_types);
    bool is_supported_license_types_Set() const;
    bool is_supported_license_types_Valid() const;

    QList<OAIInstancePoolVcoresCapability> getSupportedVcoresValues() const;
    void setSupportedVcoresValues(const QList<OAIInstancePoolVcoresCapability> &supported_vcores_values);
    bool is_supported_vcores_values_Set() const;
    bool is_supported_vcores_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAILicenseTypeCapability> m_supported_license_types;
    bool m_supported_license_types_isSet;
    bool m_supported_license_types_isValid;

    QList<OAIInstancePoolVcoresCapability> m_supported_vcores_values;
    bool m_supported_vcores_values_isSet;
    bool m_supported_vcores_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstancePoolFamilyCapability)

#endif // OAIInstancePoolFamilyCapability_H
