/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIElasticPoolEditionCapability.h
 *
 * The elastic pool edition capability.
 */

#ifndef OAIElasticPoolEditionCapability_H
#define OAIElasticPoolEditionCapability_H

#include <QJsonObject>

#include "OAIElasticPoolPerformanceLevelCapability.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIElasticPoolPerformanceLevelCapability;

class OAIElasticPoolEditionCapability : public OAIObject {
public:
    OAIElasticPoolEditionCapability();
    OAIElasticPoolEditionCapability(QString json);
    ~OAIElasticPoolEditionCapability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAIElasticPoolPerformanceLevelCapability> getSupportedElasticPoolPerformanceLevels() const;
    void setSupportedElasticPoolPerformanceLevels(const QList<OAIElasticPoolPerformanceLevelCapability> &supported_elastic_pool_performance_levels);
    bool is_supported_elastic_pool_performance_levels_Set() const;
    bool is_supported_elastic_pool_performance_levels_Valid() const;

    bool isZoneRedundant() const;
    void setZoneRedundant(const bool &zone_redundant);
    bool is_zone_redundant_Set() const;
    bool is_zone_redundant_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAIElasticPoolPerformanceLevelCapability> m_supported_elastic_pool_performance_levels;
    bool m_supported_elastic_pool_performance_levels_isSet;
    bool m_supported_elastic_pool_performance_levels_isValid;

    bool m_zone_redundant;
    bool m_zone_redundant_isSet;
    bool m_zone_redundant_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIElasticPoolEditionCapability)

#endif // OAIElasticPoolEditionCapability_H
