/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ElasticPoolPerDatabaseMaxPerformanceLevelCapability;
import org.openapitools.client.model.ElasticPoolPerformanceLevelCapabilitySku;
import org.openapitools.client.model.LicenseTypeCapability;
import org.openapitools.client.model.MaxSizeCapability;
import org.openapitools.client.model.MaxSizeRangeCapability;
import org.openapitools.client.model.PerformanceLevelCapability;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ElasticPoolPerformanceLevelCapability
 */
public class ElasticPoolPerformanceLevelCapabilityTest {
    private final ElasticPoolPerformanceLevelCapability model = new ElasticPoolPerformanceLevelCapability();

    /**
     * Model tests for ElasticPoolPerformanceLevelCapability
     */
    @Test
    public void testElasticPoolPerformanceLevelCapability() {
        // TODO: test ElasticPoolPerformanceLevelCapability
    }

    /**
     * Test the property 'includedMaxSize'
     */
    @Test
    public void includedMaxSizeTest() {
        // TODO: test includedMaxSize
    }

    /**
     * Test the property 'maxDatabaseCount'
     */
    @Test
    public void maxDatabaseCountTest() {
        // TODO: test maxDatabaseCount
    }

    /**
     * Test the property 'performanceLevel'
     */
    @Test
    public void performanceLevelTest() {
        // TODO: test performanceLevel
    }

    /**
     * Test the property 'reason'
     */
    @Test
    public void reasonTest() {
        // TODO: test reason
    }

    /**
     * Test the property 'sku'
     */
    @Test
    public void skuTest() {
        // TODO: test sku
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'supportedLicenseTypes'
     */
    @Test
    public void supportedLicenseTypesTest() {
        // TODO: test supportedLicenseTypes
    }

    /**
     * Test the property 'supportedMaxSizes'
     */
    @Test
    public void supportedMaxSizesTest() {
        // TODO: test supportedMaxSizes
    }

    /**
     * Test the property 'supportedPerDatabaseMaxPerformanceLevels'
     */
    @Test
    public void supportedPerDatabaseMaxPerformanceLevelsTest() {
        // TODO: test supportedPerDatabaseMaxPerformanceLevels
    }

    /**
     * Test the property 'supportedPerDatabaseMaxSizes'
     */
    @Test
    public void supportedPerDatabaseMaxSizesTest() {
        // TODO: test supportedPerDatabaseMaxSizes
    }

    /**
     * Test the property 'zoneRedundant'
     */
    @Test
    public void zoneRedundantTest() {
        // TODO: test zoneRedundant
    }

}
