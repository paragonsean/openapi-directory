/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ManagedInstanceVcoresCapability model module.
 * @module model/ManagedInstanceVcoresCapability
 * @version 2017-10-01-preview
 */
class ManagedInstanceVcoresCapability {
    /**
     * Constructs a new <code>ManagedInstanceVcoresCapability</code>.
     * The managed instance virtual cores capability.
     * @alias module:model/ManagedInstanceVcoresCapability
     */
    constructor() { 
        
        ManagedInstanceVcoresCapability.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagedInstanceVcoresCapability</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagedInstanceVcoresCapability} obj Optional instance to populate.
     * @return {module:model/ManagedInstanceVcoresCapability} The populated <code>ManagedInstanceVcoresCapability</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagedInstanceVcoresCapability();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagedInstanceVcoresCapability</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagedInstanceVcoresCapability</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The virtual cores identifier.
 * @member {String} name
 */
ManagedInstanceVcoresCapability.prototype['name'] = undefined;

/**
 * The reason for the capability not being available.
 * @member {String} reason
 */
ManagedInstanceVcoresCapability.prototype['reason'] = undefined;

/**
 * The status of the capability.
 * @member {module:model/ManagedInstanceVcoresCapability.StatusEnum} status
 */
ManagedInstanceVcoresCapability.prototype['status'] = undefined;

/**
 * The virtual cores value.
 * @member {Number} value
 */
ManagedInstanceVcoresCapability.prototype['value'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ManagedInstanceVcoresCapability['StatusEnum'] = {

    /**
     * value: "Visible"
     * @const
     */
    "Visible": "Visible",

    /**
     * value: "Available"
     * @const
     */
    "Available": "Available",

    /**
     * value: "Default"
     * @const
     */
    "Default": "Default",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};



export default ManagedInstanceVcoresCapability;

