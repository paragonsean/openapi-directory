/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManagedInstanceFamilyCapability.h
 *
 * The managed server family capability.
 */

#ifndef OAIManagedInstanceFamilyCapability_H
#define OAIManagedInstanceFamilyCapability_H

#include <QJsonObject>

#include "OAILicenseTypeCapability.h"
#include "OAIManagedInstanceVcoresCapability.h"
#include "OAIMaxSizeCapability.h"
#include "OAIMaxSizeRangeCapability.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMaxSizeCapability;
class OAILicenseTypeCapability;
class OAIMaxSizeRangeCapability;
class OAIManagedInstanceVcoresCapability;

class OAIManagedInstanceFamilyCapability : public OAIObject {
public:
    OAIManagedInstanceFamilyCapability();
    OAIManagedInstanceFamilyCapability(QString json);
    ~OAIManagedInstanceFamilyCapability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMaxSizeCapability getIncludedMaxSize() const;
    void setIncludedMaxSize(const OAIMaxSizeCapability &included_max_size);
    bool is_included_max_size_Set() const;
    bool is_included_max_size_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAILicenseTypeCapability> getSupportedLicenseTypes() const;
    void setSupportedLicenseTypes(const QList<OAILicenseTypeCapability> &supported_license_types);
    bool is_supported_license_types_Set() const;
    bool is_supported_license_types_Valid() const;

    QList<OAIMaxSizeRangeCapability> getSupportedStorageSizes() const;
    void setSupportedStorageSizes(const QList<OAIMaxSizeRangeCapability> &supported_storage_sizes);
    bool is_supported_storage_sizes_Set() const;
    bool is_supported_storage_sizes_Valid() const;

    QList<OAIManagedInstanceVcoresCapability> getSupportedVcoresValues() const;
    void setSupportedVcoresValues(const QList<OAIManagedInstanceVcoresCapability> &supported_vcores_values);
    bool is_supported_vcores_values_Set() const;
    bool is_supported_vcores_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMaxSizeCapability m_included_max_size;
    bool m_included_max_size_isSet;
    bool m_included_max_size_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAILicenseTypeCapability> m_supported_license_types;
    bool m_supported_license_types_isSet;
    bool m_supported_license_types_isValid;

    QList<OAIMaxSizeRangeCapability> m_supported_storage_sizes;
    bool m_supported_storage_sizes_isSet;
    bool m_supported_storage_sizes_isValid;

    QList<OAIManagedInstanceVcoresCapability> m_supported_vcores_values;
    bool m_supported_vcores_values_isSet;
    bool m_supported_vcores_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManagedInstanceFamilyCapability)

#endif // OAIManagedInstanceFamilyCapability_H
