/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMaxSizeRangeCapability.h
 *
 * The maximum size range capability.
 */

#ifndef OAIMaxSizeRangeCapability_H
#define OAIMaxSizeRangeCapability_H

#include <QJsonObject>

#include "OAILogSizeCapability.h"
#include "OAIMaxSizeCapability.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogSizeCapability;
class OAIMaxSizeCapability;

class OAIMaxSizeRangeCapability : public OAIObject {
public:
    OAIMaxSizeRangeCapability();
    OAIMaxSizeRangeCapability(QString json);
    ~OAIMaxSizeRangeCapability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILogSizeCapability getLogSize() const;
    void setLogSize(const OAILogSizeCapability &log_size);
    bool is_log_size_Set() const;
    bool is_log_size_Valid() const;

    OAIMaxSizeCapability getMaxValue() const;
    void setMaxValue(const OAIMaxSizeCapability &max_value);
    bool is_max_value_Set() const;
    bool is_max_value_Valid() const;

    OAIMaxSizeCapability getMinValue() const;
    void setMinValue(const OAIMaxSizeCapability &min_value);
    bool is_min_value_Set() const;
    bool is_min_value_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    OAIMaxSizeCapability getScaleSize() const;
    void setScaleSize(const OAIMaxSizeCapability &scale_size);
    bool is_scale_size_Set() const;
    bool is_scale_size_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILogSizeCapability m_log_size;
    bool m_log_size_isSet;
    bool m_log_size_isValid;

    OAIMaxSizeCapability m_max_value;
    bool m_max_value_isSet;
    bool m_max_value_isValid;

    OAIMaxSizeCapability m_min_value;
    bool m_min_value_isSet;
    bool m_min_value_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    OAIMaxSizeCapability m_scale_size;
    bool m_scale_size_isSet;
    bool m_scale_size_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMaxSizeRangeCapability)

#endif // OAIMaxSizeRangeCapability_H
