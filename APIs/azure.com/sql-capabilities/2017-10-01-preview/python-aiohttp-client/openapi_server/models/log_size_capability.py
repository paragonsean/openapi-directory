# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LogSizeCapability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, limit: int=None, unit: str=None):
        """LogSizeCapability - a model defined in OpenAPI

        :param limit: The limit of this LogSizeCapability.
        :param unit: The unit of this LogSizeCapability.
        """
        self.openapi_types = {
            'limit': int,
            'unit': str
        }

        self.attribute_map = {
            'limit': 'limit',
            'unit': 'unit'
        }

        self._limit = limit
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogSizeCapability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogSizeCapability of this LogSizeCapability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def limit(self):
        """Gets the limit of this LogSizeCapability.

        The log size limit (see 'unit' for the units).

        :return: The limit of this LogSizeCapability.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this LogSizeCapability.

        The log size limit (see 'unit' for the units).

        :param limit: The limit of this LogSizeCapability.
        :type limit: int
        """

        self._limit = limit

    @property
    def unit(self):
        """Gets the unit of this LogSizeCapability.

        The units that the limit is expressed in.

        :return: The unit of this LogSizeCapability.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this LogSizeCapability.

        The units that the limit is expressed in.

        :param unit: The unit of this LogSizeCapability.
        :type unit: str
        """
        allowed_values = ["Megabytes", "Gigabytes", "Terabytes", "Petabytes", "Percent"]  # noqa: E501
        if unit not in allowed_values:
            raise ValueError(
                "Invalid value for `unit` ({0}), must be one of {1}"
                .format(unit, allowed_values)
            )

        self._unit = unit
