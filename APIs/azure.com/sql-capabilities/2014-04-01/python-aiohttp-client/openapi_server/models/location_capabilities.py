# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.capability_status import CapabilityStatus
from openapi_server.models.server_version_capability import ServerVersionCapability
from openapi_server import util


class LocationCapabilities(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, status: CapabilityStatus=None, supported_server_versions: List[ServerVersionCapability]=None):
        """LocationCapabilities - a model defined in OpenAPI

        :param name: The name of this LocationCapabilities.
        :param status: The status of this LocationCapabilities.
        :param supported_server_versions: The supported_server_versions of this LocationCapabilities.
        """
        self.openapi_types = {
            'name': str,
            'status': CapabilityStatus,
            'supported_server_versions': List[ServerVersionCapability]
        }

        self.attribute_map = {
            'name': 'name',
            'status': 'status',
            'supported_server_versions': 'supportedServerVersions'
        }

        self._name = name
        self._status = status
        self._supported_server_versions = supported_server_versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocationCapabilities':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocationCapabilities of this LocationCapabilities.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this LocationCapabilities.

        The location name.

        :return: The name of this LocationCapabilities.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LocationCapabilities.

        The location name.

        :param name: The name of this LocationCapabilities.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this LocationCapabilities.


        :return: The status of this LocationCapabilities.
        :rtype: CapabilityStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this LocationCapabilities.


        :param status: The status of this LocationCapabilities.
        :type status: CapabilityStatus
        """

        self._status = status

    @property
    def supported_server_versions(self):
        """Gets the supported_server_versions of this LocationCapabilities.

        The list of supported server versions.

        :return: The supported_server_versions of this LocationCapabilities.
        :rtype: List[ServerVersionCapability]
        """
        return self._supported_server_versions

    @supported_server_versions.setter
    def supported_server_versions(self, supported_server_versions):
        """Sets the supported_server_versions of this LocationCapabilities.

        The list of supported server versions.

        :param supported_server_versions: The supported_server_versions of this LocationCapabilities.
        :type supported_server_versions: List[ServerVersionCapability]
        """

        self._supported_server_versions = supported_server_versions
