# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.capability_status import CapabilityStatus
from openapi_server import util


class ElasticPoolPerDatabaseMinDtuCapability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, limit: int=None, status: CapabilityStatus=None):
        """ElasticPoolPerDatabaseMinDtuCapability - a model defined in OpenAPI

        :param limit: The limit of this ElasticPoolPerDatabaseMinDtuCapability.
        :param status: The status of this ElasticPoolPerDatabaseMinDtuCapability.
        """
        self.openapi_types = {
            'limit': int,
            'status': CapabilityStatus
        }

        self.attribute_map = {
            'limit': 'limit',
            'status': 'status'
        }

        self._limit = limit
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ElasticPoolPerDatabaseMinDtuCapability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ElasticPoolPerDatabaseMinDtuCapability of this ElasticPoolPerDatabaseMinDtuCapability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def limit(self):
        """Gets the limit of this ElasticPoolPerDatabaseMinDtuCapability.

        The maximum DTUs per database.

        :return: The limit of this ElasticPoolPerDatabaseMinDtuCapability.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this ElasticPoolPerDatabaseMinDtuCapability.

        The maximum DTUs per database.

        :param limit: The limit of this ElasticPoolPerDatabaseMinDtuCapability.
        :type limit: int
        """

        self._limit = limit

    @property
    def status(self):
        """Gets the status of this ElasticPoolPerDatabaseMinDtuCapability.


        :return: The status of this ElasticPoolPerDatabaseMinDtuCapability.
        :rtype: CapabilityStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ElasticPoolPerDatabaseMinDtuCapability.


        :param status: The status of this ElasticPoolPerDatabaseMinDtuCapability.
        :type status: CapabilityStatus
        """

        self._status = status
