/**
 * Azure SQL Database capabilities
 * Describes the Azure SQL capabilities available to a subscription for a given location.
 *
 * The version of the OpenAPI document: 2014-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICapabilityStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICapabilityStatus::OAICapabilityStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICapabilityStatus::OAICapabilityStatus() {
    this->initializeModel();
}

OAICapabilityStatus::~OAICapabilityStatus() {}

void OAICapabilityStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICapabilityStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICapabilityStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Visible", Qt::CaseInsensitive) == 0) {
        m_value = eOAICapabilityStatus::VISIBLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Available", Qt::CaseInsensitive) == 0) {
        m_value = eOAICapabilityStatus::AVAILABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Default", Qt::CaseInsensitive) == 0) {
        m_value = eOAICapabilityStatus::DEFAULT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Disabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAICapabilityStatus::DISABLED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICapabilityStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICapabilityStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICapabilityStatus::VISIBLE:
            val = "Visible";
            break;
        case eOAICapabilityStatus::AVAILABLE:
            val = "Available";
            break;
        case eOAICapabilityStatus::DEFAULT:
            val = "Default";
            break;
        case eOAICapabilityStatus::DISABLED:
            val = "Disabled";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICapabilityStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICapabilityStatus::eOAICapabilityStatus OAICapabilityStatus::getValue() const {
    return m_value;
}

void OAICapabilityStatus::setValue(const OAICapabilityStatus::eOAICapabilityStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICapabilityStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAICapabilityStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
