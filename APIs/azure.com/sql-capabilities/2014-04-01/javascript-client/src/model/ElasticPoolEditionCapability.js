/**
 * Azure SQL Database capabilities
 * Describes the Azure SQL capabilities available to a subscription for a given location.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CapabilityStatus from './CapabilityStatus';
import ElasticPoolDtuCapability from './ElasticPoolDtuCapability';

/**
 * The ElasticPoolEditionCapability model module.
 * @module model/ElasticPoolEditionCapability
 * @version 2014-04-01
 */
class ElasticPoolEditionCapability {
    /**
     * Constructs a new <code>ElasticPoolEditionCapability</code>.
     * The elastic pool edition capabilities.
     * @alias module:model/ElasticPoolEditionCapability
     */
    constructor() { 
        
        ElasticPoolEditionCapability.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ElasticPoolEditionCapability</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ElasticPoolEditionCapability} obj Optional instance to populate.
     * @return {module:model/ElasticPoolEditionCapability} The populated <code>ElasticPoolEditionCapability</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ElasticPoolEditionCapability();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = CapabilityStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('supportedElasticPoolDtus')) {
                obj['supportedElasticPoolDtus'] = ApiClient.convertToType(data['supportedElasticPoolDtus'], [ElasticPoolDtuCapability]);
            }
            if (data.hasOwnProperty('zoneRedundant')) {
                obj['zoneRedundant'] = ApiClient.convertToType(data['zoneRedundant'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ElasticPoolEditionCapability</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ElasticPoolEditionCapability</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['supportedElasticPoolDtus']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['supportedElasticPoolDtus'])) {
                throw new Error("Expected the field `supportedElasticPoolDtus` to be an array in the JSON data but got " + data['supportedElasticPoolDtus']);
            }
            // validate the optional field `supportedElasticPoolDtus` (array)
            for (const item of data['supportedElasticPoolDtus']) {
                ElasticPoolDtuCapability.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The elastic pool edition name.
 * @member {String} name
 */
ElasticPoolEditionCapability.prototype['name'] = undefined;

/**
 * @member {module:model/CapabilityStatus} status
 */
ElasticPoolEditionCapability.prototype['status'] = undefined;

/**
 * The list of supported elastic pool DTU levels for the edition.
 * @member {Array.<module:model/ElasticPoolDtuCapability>} supportedElasticPoolDtus
 */
ElasticPoolEditionCapability.prototype['supportedElasticPoolDtus'] = undefined;

/**
 * Whether or not zone redundancy is supported for the edition.
 * @member {Boolean} zoneRedundant
 */
ElasticPoolEditionCapability.prototype['zoneRedundant'] = undefined;






export default ElasticPoolEditionCapability;

