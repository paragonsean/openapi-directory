/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceTagsListResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceTagsListResult::OAIServiceTagsListResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceTagsListResult::OAIServiceTagsListResult() {
    this->initializeModel();
}

OAIServiceTagsListResult::~OAIServiceTagsListResult() {}

void OAIServiceTagsListResult::initializeModel() {

    m_change_number_isSet = false;
    m_change_number_isValid = false;

    m_cloud_isSet = false;
    m_cloud_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIServiceTagsListResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceTagsListResult::fromJsonObject(QJsonObject json) {

    m_change_number_isValid = ::OpenAPI::fromJsonValue(m_change_number, json[QString("changeNumber")]);
    m_change_number_isSet = !json[QString("changeNumber")].isNull() && m_change_number_isValid;

    m_cloud_isValid = ::OpenAPI::fromJsonValue(m_cloud, json[QString("cloud")]);
    m_cloud_isSet = !json[QString("cloud")].isNull() && m_cloud_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAIServiceTagsListResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceTagsListResult::asJsonObject() const {
    QJsonObject obj;
    if (m_change_number_isSet) {
        obj.insert(QString("changeNumber"), ::OpenAPI::toJsonValue(m_change_number));
    }
    if (m_cloud_isSet) {
        obj.insert(QString("cloud"), ::OpenAPI::toJsonValue(m_cloud));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_values.size() > 0) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QString OAIServiceTagsListResult::getChangeNumber() const {
    return m_change_number;
}
void OAIServiceTagsListResult::setChangeNumber(const QString &change_number) {
    m_change_number = change_number;
    m_change_number_isSet = true;
}

bool OAIServiceTagsListResult::is_change_number_Set() const{
    return m_change_number_isSet;
}

bool OAIServiceTagsListResult::is_change_number_Valid() const{
    return m_change_number_isValid;
}

QString OAIServiceTagsListResult::getCloud() const {
    return m_cloud;
}
void OAIServiceTagsListResult::setCloud(const QString &cloud) {
    m_cloud = cloud;
    m_cloud_isSet = true;
}

bool OAIServiceTagsListResult::is_cloud_Set() const{
    return m_cloud_isSet;
}

bool OAIServiceTagsListResult::is_cloud_Valid() const{
    return m_cloud_isValid;
}

QString OAIServiceTagsListResult::getId() const {
    return m_id;
}
void OAIServiceTagsListResult::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIServiceTagsListResult::is_id_Set() const{
    return m_id_isSet;
}

bool OAIServiceTagsListResult::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIServiceTagsListResult::getName() const {
    return m_name;
}
void OAIServiceTagsListResult::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIServiceTagsListResult::is_name_Set() const{
    return m_name_isSet;
}

bool OAIServiceTagsListResult::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIServiceTagsListResult::getType() const {
    return m_type;
}
void OAIServiceTagsListResult::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIServiceTagsListResult::is_type_Set() const{
    return m_type_isSet;
}

bool OAIServiceTagsListResult::is_type_Valid() const{
    return m_type_isValid;
}

QList<OAIServiceTagInformation> OAIServiceTagsListResult::getValues() const {
    return m_values;
}
void OAIServiceTagsListResult::setValues(const QList<OAIServiceTagInformation> &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIServiceTagsListResult::is_values_Set() const{
    return m_values_isSet;
}

bool OAIServiceTagsListResult::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIServiceTagsListResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceTagsListResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
