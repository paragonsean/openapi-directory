# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceTagInformationPropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_prefixes: List[str]=None, change_number: str=None, region: str=None, system_service: str=None):
        """ServiceTagInformationPropertiesFormat - a model defined in OpenAPI

        :param address_prefixes: The address_prefixes of this ServiceTagInformationPropertiesFormat.
        :param change_number: The change_number of this ServiceTagInformationPropertiesFormat.
        :param region: The region of this ServiceTagInformationPropertiesFormat.
        :param system_service: The system_service of this ServiceTagInformationPropertiesFormat.
        """
        self.openapi_types = {
            'address_prefixes': List[str],
            'change_number': str,
            'region': str,
            'system_service': str
        }

        self.attribute_map = {
            'address_prefixes': 'addressPrefixes',
            'change_number': 'changeNumber',
            'region': 'region',
            'system_service': 'systemService'
        }

        self._address_prefixes = address_prefixes
        self._change_number = change_number
        self._region = region
        self._system_service = system_service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceTagInformationPropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceTagInformationPropertiesFormat of this ServiceTagInformationPropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_prefixes(self):
        """Gets the address_prefixes of this ServiceTagInformationPropertiesFormat.

        The list of IP address prefixes.

        :return: The address_prefixes of this ServiceTagInformationPropertiesFormat.
        :rtype: List[str]
        """
        return self._address_prefixes

    @address_prefixes.setter
    def address_prefixes(self, address_prefixes):
        """Sets the address_prefixes of this ServiceTagInformationPropertiesFormat.

        The list of IP address prefixes.

        :param address_prefixes: The address_prefixes of this ServiceTagInformationPropertiesFormat.
        :type address_prefixes: List[str]
        """

        self._address_prefixes = address_prefixes

    @property
    def change_number(self):
        """Gets the change_number of this ServiceTagInformationPropertiesFormat.

        The iteration number of service tag.

        :return: The change_number of this ServiceTagInformationPropertiesFormat.
        :rtype: str
        """
        return self._change_number

    @change_number.setter
    def change_number(self, change_number):
        """Sets the change_number of this ServiceTagInformationPropertiesFormat.

        The iteration number of service tag.

        :param change_number: The change_number of this ServiceTagInformationPropertiesFormat.
        :type change_number: str
        """

        self._change_number = change_number

    @property
    def region(self):
        """Gets the region of this ServiceTagInformationPropertiesFormat.

        The region of service tag.

        :return: The region of this ServiceTagInformationPropertiesFormat.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this ServiceTagInformationPropertiesFormat.

        The region of service tag.

        :param region: The region of this ServiceTagInformationPropertiesFormat.
        :type region: str
        """

        self._region = region

    @property
    def system_service(self):
        """Gets the system_service of this ServiceTagInformationPropertiesFormat.

        The name of system service.

        :return: The system_service of this ServiceTagInformationPropertiesFormat.
        :rtype: str
        """
        return self._system_service

    @system_service.setter
    def system_service(self, system_service):
        """Sets the system_service of this ServiceTagInformationPropertiesFormat.

        The name of system service.

        :param system_service: The system_service of this ServiceTagInformationPropertiesFormat.
        :type system_service: str
        """

        self._system_service = system_service
