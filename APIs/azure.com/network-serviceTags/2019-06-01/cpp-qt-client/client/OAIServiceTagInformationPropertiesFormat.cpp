/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceTagInformationPropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceTagInformationPropertiesFormat::OAIServiceTagInformationPropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceTagInformationPropertiesFormat::OAIServiceTagInformationPropertiesFormat() {
    this->initializeModel();
}

OAIServiceTagInformationPropertiesFormat::~OAIServiceTagInformationPropertiesFormat() {}

void OAIServiceTagInformationPropertiesFormat::initializeModel() {

    m_address_prefixes_isSet = false;
    m_address_prefixes_isValid = false;

    m_change_number_isSet = false;
    m_change_number_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;

    m_system_service_isSet = false;
    m_system_service_isValid = false;
}

void OAIServiceTagInformationPropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceTagInformationPropertiesFormat::fromJsonObject(QJsonObject json) {

    m_address_prefixes_isValid = ::OpenAPI::fromJsonValue(m_address_prefixes, json[QString("addressPrefixes")]);
    m_address_prefixes_isSet = !json[QString("addressPrefixes")].isNull() && m_address_prefixes_isValid;

    m_change_number_isValid = ::OpenAPI::fromJsonValue(m_change_number, json[QString("changeNumber")]);
    m_change_number_isSet = !json[QString("changeNumber")].isNull() && m_change_number_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;

    m_system_service_isValid = ::OpenAPI::fromJsonValue(m_system_service, json[QString("systemService")]);
    m_system_service_isSet = !json[QString("systemService")].isNull() && m_system_service_isValid;
}

QString OAIServiceTagInformationPropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceTagInformationPropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_address_prefixes.size() > 0) {
        obj.insert(QString("addressPrefixes"), ::OpenAPI::toJsonValue(m_address_prefixes));
    }
    if (m_change_number_isSet) {
        obj.insert(QString("changeNumber"), ::OpenAPI::toJsonValue(m_change_number));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    if (m_system_service_isSet) {
        obj.insert(QString("systemService"), ::OpenAPI::toJsonValue(m_system_service));
    }
    return obj;
}

QList<QString> OAIServiceTagInformationPropertiesFormat::getAddressPrefixes() const {
    return m_address_prefixes;
}
void OAIServiceTagInformationPropertiesFormat::setAddressPrefixes(const QList<QString> &address_prefixes) {
    m_address_prefixes = address_prefixes;
    m_address_prefixes_isSet = true;
}

bool OAIServiceTagInformationPropertiesFormat::is_address_prefixes_Set() const{
    return m_address_prefixes_isSet;
}

bool OAIServiceTagInformationPropertiesFormat::is_address_prefixes_Valid() const{
    return m_address_prefixes_isValid;
}

QString OAIServiceTagInformationPropertiesFormat::getChangeNumber() const {
    return m_change_number;
}
void OAIServiceTagInformationPropertiesFormat::setChangeNumber(const QString &change_number) {
    m_change_number = change_number;
    m_change_number_isSet = true;
}

bool OAIServiceTagInformationPropertiesFormat::is_change_number_Set() const{
    return m_change_number_isSet;
}

bool OAIServiceTagInformationPropertiesFormat::is_change_number_Valid() const{
    return m_change_number_isValid;
}

QString OAIServiceTagInformationPropertiesFormat::getRegion() const {
    return m_region;
}
void OAIServiceTagInformationPropertiesFormat::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIServiceTagInformationPropertiesFormat::is_region_Set() const{
    return m_region_isSet;
}

bool OAIServiceTagInformationPropertiesFormat::is_region_Valid() const{
    return m_region_isValid;
}

QString OAIServiceTagInformationPropertiesFormat::getSystemService() const {
    return m_system_service;
}
void OAIServiceTagInformationPropertiesFormat::setSystemService(const QString &system_service) {
    m_system_service = system_service;
    m_system_service_isSet = true;
}

bool OAIServiceTagInformationPropertiesFormat::is_system_service_Set() const{
    return m_system_service_isSet;
}

bool OAIServiceTagInformationPropertiesFormat::is_system_service_Valid() const{
    return m_system_service_isValid;
}

bool OAIServiceTagInformationPropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_prefixes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_service_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceTagInformationPropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
