/**
 * AuthorizationManagementClient
 * Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations enable you to get deny assignments. A deny assignment describes the set of actions on resources that are denied for Azure Active Directory users.
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDenyAssignmentFilter.h
 *
 * Deny Assignments filter
 */

#ifndef OAIDenyAssignmentFilter_H
#define OAIDenyAssignmentFilter_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDenyAssignmentFilter : public OAIObject {
public:
    OAIDenyAssignmentFilter();
    OAIDenyAssignmentFilter(QString json);
    ~OAIDenyAssignmentFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDenyAssignmentName() const;
    void setDenyAssignmentName(const QString &deny_assignment_name);
    bool is_deny_assignment_name_Set() const;
    bool is_deny_assignment_name_Valid() const;

    QString getGdprExportPrincipalId() const;
    void setGdprExportPrincipalId(const QString &gdpr_export_principal_id);
    bool is_gdpr_export_principal_id_Set() const;
    bool is_gdpr_export_principal_id_Valid() const;

    QString getPrincipalId() const;
    void setPrincipalId(const QString &principal_id);
    bool is_principal_id_Set() const;
    bool is_principal_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_deny_assignment_name;
    bool m_deny_assignment_name_isSet;
    bool m_deny_assignment_name_isValid;

    QString m_gdpr_export_principal_id;
    bool m_gdpr_export_principal_id_isSet;
    bool m_gdpr_export_principal_id_isValid;

    QString m_principal_id;
    bool m_principal_id_isSet;
    bool m_principal_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDenyAssignmentFilter)

#endif // OAIDenyAssignmentFilter_H
