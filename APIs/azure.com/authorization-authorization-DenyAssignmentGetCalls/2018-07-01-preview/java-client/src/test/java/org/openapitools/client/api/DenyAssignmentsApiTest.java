/*
 * AuthorizationManagementClient
 * Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations enable you to get deny assignments. A deny assignment describes the set of actions on resources that are denied for Azure Active Directory users.
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DenyAssignment;
import org.openapitools.client.model.DenyAssignmentListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DenyAssignmentsApi
 */
@Disabled
public class DenyAssignmentsApiTest {

    private final DenyAssignmentsApi api = new DenyAssignmentsApi();

    /**
     * Get the specified deny assignment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void denyAssignmentsGetTest() throws ApiException {
        String scope = null;
        String denyAssignmentId = null;
        String apiVersion = null;
        DenyAssignment response = api.denyAssignmentsGet(scope, denyAssignmentId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a deny assignment by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void denyAssignmentsGetByIdTest() throws ApiException {
        String denyAssignmentId = null;
        String apiVersion = null;
        DenyAssignment response = api.denyAssignmentsGetById(denyAssignmentId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all deny assignments for the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void denyAssignmentsListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        DenyAssignmentListResult response = api.denyAssignmentsList(subscriptionId, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Gets deny assignments for a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void denyAssignmentsListForResourceTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceProviderNamespace = null;
        String parentResourcePath = null;
        String resourceType = null;
        String resourceName = null;
        String apiVersion = null;
        String $filter = null;
        DenyAssignmentListResult response = api.denyAssignmentsListForResource(subscriptionId, resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Gets deny assignments for a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void denyAssignmentsListForResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String $filter = null;
        DenyAssignmentListResult response = api.denyAssignmentsListForResourceGroup(subscriptionId, resourceGroupName, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Gets deny assignments for a scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void denyAssignmentsListForScopeTest() throws ApiException {
        String scope = null;
        String apiVersion = null;
        String $filter = null;
        DenyAssignmentListResult response = api.denyAssignmentsListForScope(scope, apiVersion, $filter);
        // TODO: test validations
    }

}
