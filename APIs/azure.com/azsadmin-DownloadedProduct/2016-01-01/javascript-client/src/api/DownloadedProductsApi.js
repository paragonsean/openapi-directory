/**
 * AzureBridgeAdminClient
 * AzureBridge Admin Client.
 *
 * The version of the OpenAPI document: 2016-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DownloadedProductResourcesPage from '../model/DownloadedProductResourcesPage';
import DownloadedProductsGet200Response from '../model/DownloadedProductsGet200Response';

/**
* DownloadedProducts service.
* @module api/DownloadedProductsApi
* @version 2016-01-01
*/
export default class DownloadedProductsApi {

    /**
    * Constructs a new DownloadedProductsApi. 
    * @alias module:api/DownloadedProductsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the downloadedProductsCreate operation.
     * @callback module:api/DownloadedProductsApi~downloadedProductsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DownloadedProductsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a downloaded product.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup The resource group the resource is located under.
     * @param {String} activationName Name of the activation.
     * @param {String} productName Name of the product.
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/DownloadedProductsGet200Response} downloadedProduct Downloaded product resource definition.
     * @param {module:api/DownloadedProductsApi~downloadedProductsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DownloadedProductsGet200Response}
     */
    downloadedProductsCreate(subscriptionId, resourceGroup, activationName, productName, apiVersion, downloadedProduct, callback) {
      let postBody = downloadedProduct;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling downloadedProductsCreate");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling downloadedProductsCreate");
      }
      // verify the required parameter 'activationName' is set
      if (activationName === undefined || activationName === null) {
        throw new Error("Missing the required parameter 'activationName' when calling downloadedProductsCreate");
      }
      // verify the required parameter 'productName' is set
      if (productName === undefined || productName === null) {
        throw new Error("Missing the required parameter 'productName' when calling downloadedProductsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling downloadedProductsCreate");
      }
      // verify the required parameter 'downloadedProduct' is set
      if (downloadedProduct === undefined || downloadedProduct === null) {
        throw new Error("Missing the required parameter 'downloadedProduct' when calling downloadedProductsCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'activationName': activationName,
        'productName': productName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DownloadedProductsGet200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}/providers/Microsoft.AzureBridge.Admin/activations/{activationName}/downloadedProducts/{productName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the downloadedProductsDelete operation.
     * @callback module:api/DownloadedProductsApi~downloadedProductsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DownloadedProductsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a downloaded product.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup The resource group the resource is located under.
     * @param {String} activationName Name of the activation.
     * @param {String} productName Name of the product.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/DownloadedProductsApi~downloadedProductsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DownloadedProductsGet200Response}
     */
    downloadedProductsDelete(subscriptionId, resourceGroup, activationName, productName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling downloadedProductsDelete");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling downloadedProductsDelete");
      }
      // verify the required parameter 'activationName' is set
      if (activationName === undefined || activationName === null) {
        throw new Error("Missing the required parameter 'activationName' when calling downloadedProductsDelete");
      }
      // verify the required parameter 'productName' is set
      if (productName === undefined || productName === null) {
        throw new Error("Missing the required parameter 'productName' when calling downloadedProductsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling downloadedProductsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'activationName': activationName,
        'productName': productName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DownloadedProductsGet200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}/providers/Microsoft.AzureBridge.Admin/activations/{activationName}/downloadedProducts/{productName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the downloadedProductsGet operation.
     * @callback module:api/DownloadedProductsApi~downloadedProductsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DownloadedProductsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a downloaded product.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup The resource group the resource is located under.
     * @param {String} activationName Name of the activation.
     * @param {String} productName Name of the product.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/DownloadedProductsApi~downloadedProductsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DownloadedProductsGet200Response}
     */
    downloadedProductsGet(subscriptionId, resourceGroup, activationName, productName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling downloadedProductsGet");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling downloadedProductsGet");
      }
      // verify the required parameter 'activationName' is set
      if (activationName === undefined || activationName === null) {
        throw new Error("Missing the required parameter 'activationName' when calling downloadedProductsGet");
      }
      // verify the required parameter 'productName' is set
      if (productName === undefined || productName === null) {
        throw new Error("Missing the required parameter 'productName' when calling downloadedProductsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling downloadedProductsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'activationName': activationName,
        'productName': productName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DownloadedProductsGet200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}/providers/Microsoft.AzureBridge.Admin/activations/{activationName}/downloadedProducts/{productName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the downloadedProductsList operation.
     * @callback module:api/DownloadedProductsApi~downloadedProductsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DownloadedProductResourcesPage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of downloaded products.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroup The resource group the resource is located under.
     * @param {String} activationName Name of the activation.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/DownloadedProductsApi~downloadedProductsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DownloadedProductResourcesPage}
     */
    downloadedProductsList(subscriptionId, resourceGroup, activationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling downloadedProductsList");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling downloadedProductsList");
      }
      // verify the required parameter 'activationName' is set
      if (activationName === undefined || activationName === null) {
        throw new Error("Missing the required parameter 'activationName' when calling downloadedProductsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling downloadedProductsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'activationName': activationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DownloadedProductResourcesPage;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}/providers/Microsoft.AzureBridge.Admin/activations/{activationName}/downloadedProducts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
