/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The A2AProtectedDiskDetails model module.
 * @module model/A2AProtectedDiskDetails
 * @version 2018-01-10
 */
class A2AProtectedDiskDetails {
    /**
     * Constructs a new <code>A2AProtectedDiskDetails</code>.
     * A2A protected disk details.
     * @alias module:model/A2AProtectedDiskDetails
     */
    constructor() { 
        
        A2AProtectedDiskDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>A2AProtectedDiskDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/A2AProtectedDiskDetails} obj Optional instance to populate.
     * @return {module:model/A2AProtectedDiskDetails} The populated <code>A2AProtectedDiskDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new A2AProtectedDiskDetails();

            if (data.hasOwnProperty('dataPendingAtSourceAgentInMB')) {
                obj['dataPendingAtSourceAgentInMB'] = ApiClient.convertToType(data['dataPendingAtSourceAgentInMB'], 'Number');
            }
            if (data.hasOwnProperty('dataPendingInStagingStorageAccountInMB')) {
                obj['dataPendingInStagingStorageAccountInMB'] = ApiClient.convertToType(data['dataPendingInStagingStorageAccountInMB'], 'Number');
            }
            if (data.hasOwnProperty('dekKeyVaultArmId')) {
                obj['dekKeyVaultArmId'] = ApiClient.convertToType(data['dekKeyVaultArmId'], 'String');
            }
            if (data.hasOwnProperty('diskCapacityInBytes')) {
                obj['diskCapacityInBytes'] = ApiClient.convertToType(data['diskCapacityInBytes'], 'Number');
            }
            if (data.hasOwnProperty('diskName')) {
                obj['diskName'] = ApiClient.convertToType(data['diskName'], 'String');
            }
            if (data.hasOwnProperty('diskType')) {
                obj['diskType'] = ApiClient.convertToType(data['diskType'], 'String');
            }
            if (data.hasOwnProperty('diskUri')) {
                obj['diskUri'] = ApiClient.convertToType(data['diskUri'], 'String');
            }
            if (data.hasOwnProperty('isDiskEncrypted')) {
                obj['isDiskEncrypted'] = ApiClient.convertToType(data['isDiskEncrypted'], 'Boolean');
            }
            if (data.hasOwnProperty('isDiskKeyEncrypted')) {
                obj['isDiskKeyEncrypted'] = ApiClient.convertToType(data['isDiskKeyEncrypted'], 'Boolean');
            }
            if (data.hasOwnProperty('kekKeyVaultArmId')) {
                obj['kekKeyVaultArmId'] = ApiClient.convertToType(data['kekKeyVaultArmId'], 'String');
            }
            if (data.hasOwnProperty('keyIdentifier')) {
                obj['keyIdentifier'] = ApiClient.convertToType(data['keyIdentifier'], 'String');
            }
            if (data.hasOwnProperty('monitoringJobType')) {
                obj['monitoringJobType'] = ApiClient.convertToType(data['monitoringJobType'], 'String');
            }
            if (data.hasOwnProperty('monitoringPercentageCompletion')) {
                obj['monitoringPercentageCompletion'] = ApiClient.convertToType(data['monitoringPercentageCompletion'], 'Number');
            }
            if (data.hasOwnProperty('primaryDiskAzureStorageAccountId')) {
                obj['primaryDiskAzureStorageAccountId'] = ApiClient.convertToType(data['primaryDiskAzureStorageAccountId'], 'String');
            }
            if (data.hasOwnProperty('primaryStagingAzureStorageAccountId')) {
                obj['primaryStagingAzureStorageAccountId'] = ApiClient.convertToType(data['primaryStagingAzureStorageAccountId'], 'String');
            }
            if (data.hasOwnProperty('recoveryAzureStorageAccountId')) {
                obj['recoveryAzureStorageAccountId'] = ApiClient.convertToType(data['recoveryAzureStorageAccountId'], 'String');
            }
            if (data.hasOwnProperty('recoveryDiskUri')) {
                obj['recoveryDiskUri'] = ApiClient.convertToType(data['recoveryDiskUri'], 'String');
            }
            if (data.hasOwnProperty('resyncRequired')) {
                obj['resyncRequired'] = ApiClient.convertToType(data['resyncRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('secretIdentifier')) {
                obj['secretIdentifier'] = ApiClient.convertToType(data['secretIdentifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>A2AProtectedDiskDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>A2AProtectedDiskDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dekKeyVaultArmId'] && !(typeof data['dekKeyVaultArmId'] === 'string' || data['dekKeyVaultArmId'] instanceof String)) {
            throw new Error("Expected the field `dekKeyVaultArmId` to be a primitive type in the JSON string but got " + data['dekKeyVaultArmId']);
        }
        // ensure the json data is a string
        if (data['diskName'] && !(typeof data['diskName'] === 'string' || data['diskName'] instanceof String)) {
            throw new Error("Expected the field `diskName` to be a primitive type in the JSON string but got " + data['diskName']);
        }
        // ensure the json data is a string
        if (data['diskType'] && !(typeof data['diskType'] === 'string' || data['diskType'] instanceof String)) {
            throw new Error("Expected the field `diskType` to be a primitive type in the JSON string but got " + data['diskType']);
        }
        // ensure the json data is a string
        if (data['diskUri'] && !(typeof data['diskUri'] === 'string' || data['diskUri'] instanceof String)) {
            throw new Error("Expected the field `diskUri` to be a primitive type in the JSON string but got " + data['diskUri']);
        }
        // ensure the json data is a string
        if (data['kekKeyVaultArmId'] && !(typeof data['kekKeyVaultArmId'] === 'string' || data['kekKeyVaultArmId'] instanceof String)) {
            throw new Error("Expected the field `kekKeyVaultArmId` to be a primitive type in the JSON string but got " + data['kekKeyVaultArmId']);
        }
        // ensure the json data is a string
        if (data['keyIdentifier'] && !(typeof data['keyIdentifier'] === 'string' || data['keyIdentifier'] instanceof String)) {
            throw new Error("Expected the field `keyIdentifier` to be a primitive type in the JSON string but got " + data['keyIdentifier']);
        }
        // ensure the json data is a string
        if (data['monitoringJobType'] && !(typeof data['monitoringJobType'] === 'string' || data['monitoringJobType'] instanceof String)) {
            throw new Error("Expected the field `monitoringJobType` to be a primitive type in the JSON string but got " + data['monitoringJobType']);
        }
        // ensure the json data is a string
        if (data['primaryDiskAzureStorageAccountId'] && !(typeof data['primaryDiskAzureStorageAccountId'] === 'string' || data['primaryDiskAzureStorageAccountId'] instanceof String)) {
            throw new Error("Expected the field `primaryDiskAzureStorageAccountId` to be a primitive type in the JSON string but got " + data['primaryDiskAzureStorageAccountId']);
        }
        // ensure the json data is a string
        if (data['primaryStagingAzureStorageAccountId'] && !(typeof data['primaryStagingAzureStorageAccountId'] === 'string' || data['primaryStagingAzureStorageAccountId'] instanceof String)) {
            throw new Error("Expected the field `primaryStagingAzureStorageAccountId` to be a primitive type in the JSON string but got " + data['primaryStagingAzureStorageAccountId']);
        }
        // ensure the json data is a string
        if (data['recoveryAzureStorageAccountId'] && !(typeof data['recoveryAzureStorageAccountId'] === 'string' || data['recoveryAzureStorageAccountId'] instanceof String)) {
            throw new Error("Expected the field `recoveryAzureStorageAccountId` to be a primitive type in the JSON string but got " + data['recoveryAzureStorageAccountId']);
        }
        // ensure the json data is a string
        if (data['recoveryDiskUri'] && !(typeof data['recoveryDiskUri'] === 'string' || data['recoveryDiskUri'] instanceof String)) {
            throw new Error("Expected the field `recoveryDiskUri` to be a primitive type in the JSON string but got " + data['recoveryDiskUri']);
        }
        // ensure the json data is a string
        if (data['secretIdentifier'] && !(typeof data['secretIdentifier'] === 'string' || data['secretIdentifier'] instanceof String)) {
            throw new Error("Expected the field `secretIdentifier` to be a primitive type in the JSON string but got " + data['secretIdentifier']);
        }

        return true;
    }


}



/**
 * The data pending at source virtual machine in MB.
 * @member {Number} dataPendingAtSourceAgentInMB
 */
A2AProtectedDiskDetails.prototype['dataPendingAtSourceAgentInMB'] = undefined;

/**
 * The data pending for replication in MB at staging account.
 * @member {Number} dataPendingInStagingStorageAccountInMB
 */
A2AProtectedDiskDetails.prototype['dataPendingInStagingStorageAccountInMB'] = undefined;

/**
 * The KeyVault resource id for secret (BEK).
 * @member {String} dekKeyVaultArmId
 */
A2AProtectedDiskDetails.prototype['dekKeyVaultArmId'] = undefined;

/**
 * The disk capacity in bytes.
 * @member {Number} diskCapacityInBytes
 */
A2AProtectedDiskDetails.prototype['diskCapacityInBytes'] = undefined;

/**
 * The disk name.
 * @member {String} diskName
 */
A2AProtectedDiskDetails.prototype['diskName'] = undefined;

/**
 * The type of disk.
 * @member {String} diskType
 */
A2AProtectedDiskDetails.prototype['diskType'] = undefined;

/**
 * The disk uri.
 * @member {String} diskUri
 */
A2AProtectedDiskDetails.prototype['diskUri'] = undefined;

/**
 * A value indicating whether vm has encrypted os disk or not.
 * @member {Boolean} isDiskEncrypted
 */
A2AProtectedDiskDetails.prototype['isDiskEncrypted'] = undefined;

/**
 * A value indicating whether disk key got encrypted or not.
 * @member {Boolean} isDiskKeyEncrypted
 */
A2AProtectedDiskDetails.prototype['isDiskKeyEncrypted'] = undefined;

/**
 * The KeyVault resource id for key (KEK).
 * @member {String} kekKeyVaultArmId
 */
A2AProtectedDiskDetails.prototype['kekKeyVaultArmId'] = undefined;

/**
 * The key URL / identifier (KEK).
 * @member {String} keyIdentifier
 */
A2AProtectedDiskDetails.prototype['keyIdentifier'] = undefined;

/**
 * The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
 * @member {String} monitoringJobType
 */
A2AProtectedDiskDetails.prototype['monitoringJobType'] = undefined;

/**
 * The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
 * @member {Number} monitoringPercentageCompletion
 */
A2AProtectedDiskDetails.prototype['monitoringPercentageCompletion'] = undefined;

/**
 * The primary disk storage account.
 * @member {String} primaryDiskAzureStorageAccountId
 */
A2AProtectedDiskDetails.prototype['primaryDiskAzureStorageAccountId'] = undefined;

/**
 * The primary staging storage account.
 * @member {String} primaryStagingAzureStorageAccountId
 */
A2AProtectedDiskDetails.prototype['primaryStagingAzureStorageAccountId'] = undefined;

/**
 * The recovery disk storage account.
 * @member {String} recoveryAzureStorageAccountId
 */
A2AProtectedDiskDetails.prototype['recoveryAzureStorageAccountId'] = undefined;

/**
 * Recovery disk uri.
 * @member {String} recoveryDiskUri
 */
A2AProtectedDiskDetails.prototype['recoveryDiskUri'] = undefined;

/**
 * A value indicating whether resync is required for this disk.
 * @member {Boolean} resyncRequired
 */
A2AProtectedDiskDetails.prototype['resyncRequired'] = undefined;

/**
 * The secret URL / identifier (BEK).
 * @member {String} secretIdentifier
 */
A2AProtectedDiskDetails.prototype['secretIdentifier'] = undefined;






export default A2AProtectedDiskDetails;

