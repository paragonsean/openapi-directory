/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AzureVmDiskDetails from './AzureVmDiskDetails';
import HealthError from './HealthError';
import InMageAzureV2ProtectedDiskDetails from './InMageAzureV2ProtectedDiskDetails';
import ReplicationProviderSpecificSettings from './ReplicationProviderSpecificSettings';
import VMNicDetails from './VMNicDetails';

/**
 * The InMageAzureV2ReplicationDetails model module.
 * @module model/InMageAzureV2ReplicationDetails
 * @version 2018-01-10
 */
class InMageAzureV2ReplicationDetails {
    /**
     * Constructs a new <code>InMageAzureV2ReplicationDetails</code>.
     * InMageAzureV2 provider specific settings
     * @alias module:model/InMageAzureV2ReplicationDetails
     * @extends module:model/ReplicationProviderSpecificSettings
     * @implements module:model/ReplicationProviderSpecificSettings
     */
    constructor() { 
        ReplicationProviderSpecificSettings.initialize(this);
        InMageAzureV2ReplicationDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InMageAzureV2ReplicationDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InMageAzureV2ReplicationDetails} obj Optional instance to populate.
     * @return {module:model/InMageAzureV2ReplicationDetails} The populated <code>InMageAzureV2ReplicationDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InMageAzureV2ReplicationDetails();
            ReplicationProviderSpecificSettings.constructFromObject(data, obj);
            ReplicationProviderSpecificSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('agentExpiryDate')) {
                obj['agentExpiryDate'] = ApiClient.convertToType(data['agentExpiryDate'], 'Date');
            }
            if (data.hasOwnProperty('agentVersion')) {
                obj['agentVersion'] = ApiClient.convertToType(data['agentVersion'], 'String');
            }
            if (data.hasOwnProperty('azureVMDiskDetails')) {
                obj['azureVMDiskDetails'] = ApiClient.convertToType(data['azureVMDiskDetails'], [AzureVmDiskDetails]);
            }
            if (data.hasOwnProperty('compressedDataRateInMB')) {
                obj['compressedDataRateInMB'] = ApiClient.convertToType(data['compressedDataRateInMB'], 'Number');
            }
            if (data.hasOwnProperty('datastores')) {
                obj['datastores'] = ApiClient.convertToType(data['datastores'], ['String']);
            }
            if (data.hasOwnProperty('discoveryType')) {
                obj['discoveryType'] = ApiClient.convertToType(data['discoveryType'], 'String');
            }
            if (data.hasOwnProperty('diskResized')) {
                obj['diskResized'] = ApiClient.convertToType(data['diskResized'], 'String');
            }
            if (data.hasOwnProperty('enableRdpOnTargetOption')) {
                obj['enableRdpOnTargetOption'] = ApiClient.convertToType(data['enableRdpOnTargetOption'], 'String');
            }
            if (data.hasOwnProperty('infrastructureVmId')) {
                obj['infrastructureVmId'] = ApiClient.convertToType(data['infrastructureVmId'], 'String');
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('isAgentUpdateRequired')) {
                obj['isAgentUpdateRequired'] = ApiClient.convertToType(data['isAgentUpdateRequired'], 'String');
            }
            if (data.hasOwnProperty('isRebootAfterUpdateRequired')) {
                obj['isRebootAfterUpdateRequired'] = ApiClient.convertToType(data['isRebootAfterUpdateRequired'], 'String');
            }
            if (data.hasOwnProperty('lastHeartbeat')) {
                obj['lastHeartbeat'] = ApiClient.convertToType(data['lastHeartbeat'], 'Date');
            }
            if (data.hasOwnProperty('lastRpoCalculatedTime')) {
                obj['lastRpoCalculatedTime'] = ApiClient.convertToType(data['lastRpoCalculatedTime'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdateReceivedTime')) {
                obj['lastUpdateReceivedTime'] = ApiClient.convertToType(data['lastUpdateReceivedTime'], 'Date');
            }
            if (data.hasOwnProperty('licenseType')) {
                obj['licenseType'] = ApiClient.convertToType(data['licenseType'], 'String');
            }
            if (data.hasOwnProperty('masterTargetId')) {
                obj['masterTargetId'] = ApiClient.convertToType(data['masterTargetId'], 'String');
            }
            if (data.hasOwnProperty('multiVmGroupId')) {
                obj['multiVmGroupId'] = ApiClient.convertToType(data['multiVmGroupId'], 'String');
            }
            if (data.hasOwnProperty('multiVmGroupName')) {
                obj['multiVmGroupName'] = ApiClient.convertToType(data['multiVmGroupName'], 'String');
            }
            if (data.hasOwnProperty('multiVmSyncStatus')) {
                obj['multiVmSyncStatus'] = ApiClient.convertToType(data['multiVmSyncStatus'], 'String');
            }
            if (data.hasOwnProperty('osDiskId')) {
                obj['osDiskId'] = ApiClient.convertToType(data['osDiskId'], 'String');
            }
            if (data.hasOwnProperty('osType')) {
                obj['osType'] = ApiClient.convertToType(data['osType'], 'String');
            }
            if (data.hasOwnProperty('osVersion')) {
                obj['osVersion'] = ApiClient.convertToType(data['osVersion'], 'String');
            }
            if (data.hasOwnProperty('processServerId')) {
                obj['processServerId'] = ApiClient.convertToType(data['processServerId'], 'String');
            }
            if (data.hasOwnProperty('protectedDisks')) {
                obj['protectedDisks'] = ApiClient.convertToType(data['protectedDisks'], [InMageAzureV2ProtectedDiskDetails]);
            }
            if (data.hasOwnProperty('protectionStage')) {
                obj['protectionStage'] = ApiClient.convertToType(data['protectionStage'], 'String');
            }
            if (data.hasOwnProperty('recoveryAvailabilitySetId')) {
                obj['recoveryAvailabilitySetId'] = ApiClient.convertToType(data['recoveryAvailabilitySetId'], 'String');
            }
            if (data.hasOwnProperty('recoveryAzureLogStorageAccountId')) {
                obj['recoveryAzureLogStorageAccountId'] = ApiClient.convertToType(data['recoveryAzureLogStorageAccountId'], 'String');
            }
            if (data.hasOwnProperty('recoveryAzureResourceGroupId')) {
                obj['recoveryAzureResourceGroupId'] = ApiClient.convertToType(data['recoveryAzureResourceGroupId'], 'String');
            }
            if (data.hasOwnProperty('recoveryAzureStorageAccount')) {
                obj['recoveryAzureStorageAccount'] = ApiClient.convertToType(data['recoveryAzureStorageAccount'], 'String');
            }
            if (data.hasOwnProperty('recoveryAzureVMName')) {
                obj['recoveryAzureVMName'] = ApiClient.convertToType(data['recoveryAzureVMName'], 'String');
            }
            if (data.hasOwnProperty('recoveryAzureVMSize')) {
                obj['recoveryAzureVMSize'] = ApiClient.convertToType(data['recoveryAzureVMSize'], 'String');
            }
            if (data.hasOwnProperty('replicaId')) {
                obj['replicaId'] = ApiClient.convertToType(data['replicaId'], 'String');
            }
            if (data.hasOwnProperty('resyncProgressPercentage')) {
                obj['resyncProgressPercentage'] = ApiClient.convertToType(data['resyncProgressPercentage'], 'Number');
            }
            if (data.hasOwnProperty('rpoInSeconds')) {
                obj['rpoInSeconds'] = ApiClient.convertToType(data['rpoInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('selectedRecoveryAzureNetworkId')) {
                obj['selectedRecoveryAzureNetworkId'] = ApiClient.convertToType(data['selectedRecoveryAzureNetworkId'], 'String');
            }
            if (data.hasOwnProperty('selectedSourceNicId')) {
                obj['selectedSourceNicId'] = ApiClient.convertToType(data['selectedSourceNicId'], 'String');
            }
            if (data.hasOwnProperty('sourceVmCpuCount')) {
                obj['sourceVmCpuCount'] = ApiClient.convertToType(data['sourceVmCpuCount'], 'Number');
            }
            if (data.hasOwnProperty('sourceVmRamSizeInMB')) {
                obj['sourceVmRamSizeInMB'] = ApiClient.convertToType(data['sourceVmRamSizeInMB'], 'Number');
            }
            if (data.hasOwnProperty('targetVmId')) {
                obj['targetVmId'] = ApiClient.convertToType(data['targetVmId'], 'String');
            }
            if (data.hasOwnProperty('uncompressedDataRateInMB')) {
                obj['uncompressedDataRateInMB'] = ApiClient.convertToType(data['uncompressedDataRateInMB'], 'Number');
            }
            if (data.hasOwnProperty('useManagedDisks')) {
                obj['useManagedDisks'] = ApiClient.convertToType(data['useManagedDisks'], 'String');
            }
            if (data.hasOwnProperty('vCenterInfrastructureId')) {
                obj['vCenterInfrastructureId'] = ApiClient.convertToType(data['vCenterInfrastructureId'], 'String');
            }
            if (data.hasOwnProperty('validationErrors')) {
                obj['validationErrors'] = ApiClient.convertToType(data['validationErrors'], [HealthError]);
            }
            if (data.hasOwnProperty('vhdName')) {
                obj['vhdName'] = ApiClient.convertToType(data['vhdName'], 'String');
            }
            if (data.hasOwnProperty('vmId')) {
                obj['vmId'] = ApiClient.convertToType(data['vmId'], 'String');
            }
            if (data.hasOwnProperty('vmNics')) {
                obj['vmNics'] = ApiClient.convertToType(data['vmNics'], [VMNicDetails]);
            }
            if (data.hasOwnProperty('vmProtectionState')) {
                obj['vmProtectionState'] = ApiClient.convertToType(data['vmProtectionState'], 'String');
            }
            if (data.hasOwnProperty('vmProtectionStateDescription')) {
                obj['vmProtectionStateDescription'] = ApiClient.convertToType(data['vmProtectionStateDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InMageAzureV2ReplicationDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InMageAzureV2ReplicationDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['agentVersion'] && !(typeof data['agentVersion'] === 'string' || data['agentVersion'] instanceof String)) {
            throw new Error("Expected the field `agentVersion` to be a primitive type in the JSON string but got " + data['agentVersion']);
        }
        if (data['azureVMDiskDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['azureVMDiskDetails'])) {
                throw new Error("Expected the field `azureVMDiskDetails` to be an array in the JSON data but got " + data['azureVMDiskDetails']);
            }
            // validate the optional field `azureVMDiskDetails` (array)
            for (const item of data['azureVMDiskDetails']) {
                AzureVmDiskDetails.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['datastores'])) {
            throw new Error("Expected the field `datastores` to be an array in the JSON data but got " + data['datastores']);
        }
        // ensure the json data is a string
        if (data['discoveryType'] && !(typeof data['discoveryType'] === 'string' || data['discoveryType'] instanceof String)) {
            throw new Error("Expected the field `discoveryType` to be a primitive type in the JSON string but got " + data['discoveryType']);
        }
        // ensure the json data is a string
        if (data['diskResized'] && !(typeof data['diskResized'] === 'string' || data['diskResized'] instanceof String)) {
            throw new Error("Expected the field `diskResized` to be a primitive type in the JSON string but got " + data['diskResized']);
        }
        // ensure the json data is a string
        if (data['enableRdpOnTargetOption'] && !(typeof data['enableRdpOnTargetOption'] === 'string' || data['enableRdpOnTargetOption'] instanceof String)) {
            throw new Error("Expected the field `enableRdpOnTargetOption` to be a primitive type in the JSON string but got " + data['enableRdpOnTargetOption']);
        }
        // ensure the json data is a string
        if (data['infrastructureVmId'] && !(typeof data['infrastructureVmId'] === 'string' || data['infrastructureVmId'] instanceof String)) {
            throw new Error("Expected the field `infrastructureVmId` to be a primitive type in the JSON string but got " + data['infrastructureVmId']);
        }
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // ensure the json data is a string
        if (data['isAgentUpdateRequired'] && !(typeof data['isAgentUpdateRequired'] === 'string' || data['isAgentUpdateRequired'] instanceof String)) {
            throw new Error("Expected the field `isAgentUpdateRequired` to be a primitive type in the JSON string but got " + data['isAgentUpdateRequired']);
        }
        // ensure the json data is a string
        if (data['isRebootAfterUpdateRequired'] && !(typeof data['isRebootAfterUpdateRequired'] === 'string' || data['isRebootAfterUpdateRequired'] instanceof String)) {
            throw new Error("Expected the field `isRebootAfterUpdateRequired` to be a primitive type in the JSON string but got " + data['isRebootAfterUpdateRequired']);
        }
        // ensure the json data is a string
        if (data['licenseType'] && !(typeof data['licenseType'] === 'string' || data['licenseType'] instanceof String)) {
            throw new Error("Expected the field `licenseType` to be a primitive type in the JSON string but got " + data['licenseType']);
        }
        // ensure the json data is a string
        if (data['masterTargetId'] && !(typeof data['masterTargetId'] === 'string' || data['masterTargetId'] instanceof String)) {
            throw new Error("Expected the field `masterTargetId` to be a primitive type in the JSON string but got " + data['masterTargetId']);
        }
        // ensure the json data is a string
        if (data['multiVmGroupId'] && !(typeof data['multiVmGroupId'] === 'string' || data['multiVmGroupId'] instanceof String)) {
            throw new Error("Expected the field `multiVmGroupId` to be a primitive type in the JSON string but got " + data['multiVmGroupId']);
        }
        // ensure the json data is a string
        if (data['multiVmGroupName'] && !(typeof data['multiVmGroupName'] === 'string' || data['multiVmGroupName'] instanceof String)) {
            throw new Error("Expected the field `multiVmGroupName` to be a primitive type in the JSON string but got " + data['multiVmGroupName']);
        }
        // ensure the json data is a string
        if (data['multiVmSyncStatus'] && !(typeof data['multiVmSyncStatus'] === 'string' || data['multiVmSyncStatus'] instanceof String)) {
            throw new Error("Expected the field `multiVmSyncStatus` to be a primitive type in the JSON string but got " + data['multiVmSyncStatus']);
        }
        // ensure the json data is a string
        if (data['osDiskId'] && !(typeof data['osDiskId'] === 'string' || data['osDiskId'] instanceof String)) {
            throw new Error("Expected the field `osDiskId` to be a primitive type in the JSON string but got " + data['osDiskId']);
        }
        // ensure the json data is a string
        if (data['osType'] && !(typeof data['osType'] === 'string' || data['osType'] instanceof String)) {
            throw new Error("Expected the field `osType` to be a primitive type in the JSON string but got " + data['osType']);
        }
        // ensure the json data is a string
        if (data['osVersion'] && !(typeof data['osVersion'] === 'string' || data['osVersion'] instanceof String)) {
            throw new Error("Expected the field `osVersion` to be a primitive type in the JSON string but got " + data['osVersion']);
        }
        // ensure the json data is a string
        if (data['processServerId'] && !(typeof data['processServerId'] === 'string' || data['processServerId'] instanceof String)) {
            throw new Error("Expected the field `processServerId` to be a primitive type in the JSON string but got " + data['processServerId']);
        }
        if (data['protectedDisks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['protectedDisks'])) {
                throw new Error("Expected the field `protectedDisks` to be an array in the JSON data but got " + data['protectedDisks']);
            }
            // validate the optional field `protectedDisks` (array)
            for (const item of data['protectedDisks']) {
                InMageAzureV2ProtectedDiskDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['protectionStage'] && !(typeof data['protectionStage'] === 'string' || data['protectionStage'] instanceof String)) {
            throw new Error("Expected the field `protectionStage` to be a primitive type in the JSON string but got " + data['protectionStage']);
        }
        // ensure the json data is a string
        if (data['recoveryAvailabilitySetId'] && !(typeof data['recoveryAvailabilitySetId'] === 'string' || data['recoveryAvailabilitySetId'] instanceof String)) {
            throw new Error("Expected the field `recoveryAvailabilitySetId` to be a primitive type in the JSON string but got " + data['recoveryAvailabilitySetId']);
        }
        // ensure the json data is a string
        if (data['recoveryAzureLogStorageAccountId'] && !(typeof data['recoveryAzureLogStorageAccountId'] === 'string' || data['recoveryAzureLogStorageAccountId'] instanceof String)) {
            throw new Error("Expected the field `recoveryAzureLogStorageAccountId` to be a primitive type in the JSON string but got " + data['recoveryAzureLogStorageAccountId']);
        }
        // ensure the json data is a string
        if (data['recoveryAzureResourceGroupId'] && !(typeof data['recoveryAzureResourceGroupId'] === 'string' || data['recoveryAzureResourceGroupId'] instanceof String)) {
            throw new Error("Expected the field `recoveryAzureResourceGroupId` to be a primitive type in the JSON string but got " + data['recoveryAzureResourceGroupId']);
        }
        // ensure the json data is a string
        if (data['recoveryAzureStorageAccount'] && !(typeof data['recoveryAzureStorageAccount'] === 'string' || data['recoveryAzureStorageAccount'] instanceof String)) {
            throw new Error("Expected the field `recoveryAzureStorageAccount` to be a primitive type in the JSON string but got " + data['recoveryAzureStorageAccount']);
        }
        // ensure the json data is a string
        if (data['recoveryAzureVMName'] && !(typeof data['recoveryAzureVMName'] === 'string' || data['recoveryAzureVMName'] instanceof String)) {
            throw new Error("Expected the field `recoveryAzureVMName` to be a primitive type in the JSON string but got " + data['recoveryAzureVMName']);
        }
        // ensure the json data is a string
        if (data['recoveryAzureVMSize'] && !(typeof data['recoveryAzureVMSize'] === 'string' || data['recoveryAzureVMSize'] instanceof String)) {
            throw new Error("Expected the field `recoveryAzureVMSize` to be a primitive type in the JSON string but got " + data['recoveryAzureVMSize']);
        }
        // ensure the json data is a string
        if (data['replicaId'] && !(typeof data['replicaId'] === 'string' || data['replicaId'] instanceof String)) {
            throw new Error("Expected the field `replicaId` to be a primitive type in the JSON string but got " + data['replicaId']);
        }
        // ensure the json data is a string
        if (data['selectedRecoveryAzureNetworkId'] && !(typeof data['selectedRecoveryAzureNetworkId'] === 'string' || data['selectedRecoveryAzureNetworkId'] instanceof String)) {
            throw new Error("Expected the field `selectedRecoveryAzureNetworkId` to be a primitive type in the JSON string but got " + data['selectedRecoveryAzureNetworkId']);
        }
        // ensure the json data is a string
        if (data['selectedSourceNicId'] && !(typeof data['selectedSourceNicId'] === 'string' || data['selectedSourceNicId'] instanceof String)) {
            throw new Error("Expected the field `selectedSourceNicId` to be a primitive type in the JSON string but got " + data['selectedSourceNicId']);
        }
        // ensure the json data is a string
        if (data['targetVmId'] && !(typeof data['targetVmId'] === 'string' || data['targetVmId'] instanceof String)) {
            throw new Error("Expected the field `targetVmId` to be a primitive type in the JSON string but got " + data['targetVmId']);
        }
        // ensure the json data is a string
        if (data['useManagedDisks'] && !(typeof data['useManagedDisks'] === 'string' || data['useManagedDisks'] instanceof String)) {
            throw new Error("Expected the field `useManagedDisks` to be a primitive type in the JSON string but got " + data['useManagedDisks']);
        }
        // ensure the json data is a string
        if (data['vCenterInfrastructureId'] && !(typeof data['vCenterInfrastructureId'] === 'string' || data['vCenterInfrastructureId'] instanceof String)) {
            throw new Error("Expected the field `vCenterInfrastructureId` to be a primitive type in the JSON string but got " + data['vCenterInfrastructureId']);
        }
        if (data['validationErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['validationErrors'])) {
                throw new Error("Expected the field `validationErrors` to be an array in the JSON data but got " + data['validationErrors']);
            }
            // validate the optional field `validationErrors` (array)
            for (const item of data['validationErrors']) {
                HealthError.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['vhdName'] && !(typeof data['vhdName'] === 'string' || data['vhdName'] instanceof String)) {
            throw new Error("Expected the field `vhdName` to be a primitive type in the JSON string but got " + data['vhdName']);
        }
        // ensure the json data is a string
        if (data['vmId'] && !(typeof data['vmId'] === 'string' || data['vmId'] instanceof String)) {
            throw new Error("Expected the field `vmId` to be a primitive type in the JSON string but got " + data['vmId']);
        }
        if (data['vmNics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vmNics'])) {
                throw new Error("Expected the field `vmNics` to be an array in the JSON data but got " + data['vmNics']);
            }
            // validate the optional field `vmNics` (array)
            for (const item of data['vmNics']) {
                VMNicDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['vmProtectionState'] && !(typeof data['vmProtectionState'] === 'string' || data['vmProtectionState'] instanceof String)) {
            throw new Error("Expected the field `vmProtectionState` to be a primitive type in the JSON string but got " + data['vmProtectionState']);
        }
        // ensure the json data is a string
        if (data['vmProtectionStateDescription'] && !(typeof data['vmProtectionStateDescription'] === 'string' || data['vmProtectionStateDescription'] instanceof String)) {
            throw new Error("Expected the field `vmProtectionStateDescription` to be a primitive type in the JSON string but got " + data['vmProtectionStateDescription']);
        }

        return true;
    }


}



/**
 * Agent expiry date.
 * @member {Date} agentExpiryDate
 */
InMageAzureV2ReplicationDetails.prototype['agentExpiryDate'] = undefined;

/**
 * The agent version.
 * @member {String} agentVersion
 */
InMageAzureV2ReplicationDetails.prototype['agentVersion'] = undefined;

/**
 * Azure VM Disk details.
 * @member {Array.<module:model/AzureVmDiskDetails>} azureVMDiskDetails
 */
InMageAzureV2ReplicationDetails.prototype['azureVMDiskDetails'] = undefined;

/**
 * The compressed data change rate in MB.
 * @member {Number} compressedDataRateInMB
 */
InMageAzureV2ReplicationDetails.prototype['compressedDataRateInMB'] = undefined;

/**
 * The data stores of the on-premise machine. Value can be list of strings that contain data store names.
 * @member {Array.<String>} datastores
 */
InMageAzureV2ReplicationDetails.prototype['datastores'] = undefined;

/**
 * A value indicating the discovery type of the machine. Value can be vCenter or physical.
 * @member {String} discoveryType
 */
InMageAzureV2ReplicationDetails.prototype['discoveryType'] = undefined;

/**
 * A value indicating whether any disk is resized for this VM.
 * @member {String} diskResized
 */
InMageAzureV2ReplicationDetails.prototype['diskResized'] = undefined;

/**
 * The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
 * @member {String} enableRdpOnTargetOption
 */
InMageAzureV2ReplicationDetails.prototype['enableRdpOnTargetOption'] = undefined;

/**
 * The infrastructure VM Id.
 * @member {String} infrastructureVmId
 */
InMageAzureV2ReplicationDetails.prototype['infrastructureVmId'] = undefined;

/**
 * The source IP address.
 * @member {String} ipAddress
 */
InMageAzureV2ReplicationDetails.prototype['ipAddress'] = undefined;

/**
 * A value indicating whether installed agent needs to be updated.
 * @member {String} isAgentUpdateRequired
 */
InMageAzureV2ReplicationDetails.prototype['isAgentUpdateRequired'] = undefined;

/**
 * A value indicating whether the source server requires a restart after update.
 * @member {String} isRebootAfterUpdateRequired
 */
InMageAzureV2ReplicationDetails.prototype['isRebootAfterUpdateRequired'] = undefined;

/**
 * The last heartbeat received from the source server.
 * @member {Date} lastHeartbeat
 */
InMageAzureV2ReplicationDetails.prototype['lastHeartbeat'] = undefined;

/**
 * The last RPO calculated time.
 * @member {Date} lastRpoCalculatedTime
 */
InMageAzureV2ReplicationDetails.prototype['lastRpoCalculatedTime'] = undefined;

/**
 * The last update time received from on-prem components.
 * @member {Date} lastUpdateReceivedTime
 */
InMageAzureV2ReplicationDetails.prototype['lastUpdateReceivedTime'] = undefined;

/**
 * License Type of the VM to be used.
 * @member {String} licenseType
 */
InMageAzureV2ReplicationDetails.prototype['licenseType'] = undefined;

/**
 * The master target Id.
 * @member {String} masterTargetId
 */
InMageAzureV2ReplicationDetails.prototype['masterTargetId'] = undefined;

/**
 * The multi vm group Id.
 * @member {String} multiVmGroupId
 */
InMageAzureV2ReplicationDetails.prototype['multiVmGroupId'] = undefined;

/**
 * The multi vm group name.
 * @member {String} multiVmGroupName
 */
InMageAzureV2ReplicationDetails.prototype['multiVmGroupName'] = undefined;

/**
 * A value indicating whether multi vm sync is enabled or disabled.
 * @member {String} multiVmSyncStatus
 */
InMageAzureV2ReplicationDetails.prototype['multiVmSyncStatus'] = undefined;

/**
 * The id of the disk containing the OS.
 * @member {String} osDiskId
 */
InMageAzureV2ReplicationDetails.prototype['osDiskId'] = undefined;

/**
 * The type of the OS on the VM.
 * @member {String} osType
 */
InMageAzureV2ReplicationDetails.prototype['osType'] = undefined;

/**
 * The OS Version of the protected item.
 * @member {String} osVersion
 */
InMageAzureV2ReplicationDetails.prototype['osVersion'] = undefined;

/**
 * The process server Id.
 * @member {String} processServerId
 */
InMageAzureV2ReplicationDetails.prototype['processServerId'] = undefined;

/**
 * The list of protected disks.
 * @member {Array.<module:model/InMageAzureV2ProtectedDiskDetails>} protectedDisks
 */
InMageAzureV2ReplicationDetails.prototype['protectedDisks'] = undefined;

/**
 * The protection stage.
 * @member {String} protectionStage
 */
InMageAzureV2ReplicationDetails.prototype['protectionStage'] = undefined;

/**
 * The recovery availability set Id.
 * @member {String} recoveryAvailabilitySetId
 */
InMageAzureV2ReplicationDetails.prototype['recoveryAvailabilitySetId'] = undefined;

/**
 * The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
 * @member {String} recoveryAzureLogStorageAccountId
 */
InMageAzureV2ReplicationDetails.prototype['recoveryAzureLogStorageAccountId'] = undefined;

/**
 * The target resource group Id.
 * @member {String} recoveryAzureResourceGroupId
 */
InMageAzureV2ReplicationDetails.prototype['recoveryAzureResourceGroupId'] = undefined;

/**
 * The recovery Azure storage account.
 * @member {String} recoveryAzureStorageAccount
 */
InMageAzureV2ReplicationDetails.prototype['recoveryAzureStorageAccount'] = undefined;

/**
 * Recovery Azure given name.
 * @member {String} recoveryAzureVMName
 */
InMageAzureV2ReplicationDetails.prototype['recoveryAzureVMName'] = undefined;

/**
 * The Recovery Azure VM size.
 * @member {String} recoveryAzureVMSize
 */
InMageAzureV2ReplicationDetails.prototype['recoveryAzureVMSize'] = undefined;

/**
 * The replica id of the protected item.
 * @member {String} replicaId
 */
InMageAzureV2ReplicationDetails.prototype['replicaId'] = undefined;

/**
 * The resync progress percentage.
 * @member {Number} resyncProgressPercentage
 */
InMageAzureV2ReplicationDetails.prototype['resyncProgressPercentage'] = undefined;

/**
 * The RPO in seconds.
 * @member {Number} rpoInSeconds
 */
InMageAzureV2ReplicationDetails.prototype['rpoInSeconds'] = undefined;

/**
 * The selected recovery azure network Id.
 * @member {String} selectedRecoveryAzureNetworkId
 */
InMageAzureV2ReplicationDetails.prototype['selectedRecoveryAzureNetworkId'] = undefined;

/**
 * The selected source nic Id which will be used as the primary nic during failover.
 * @member {String} selectedSourceNicId
 */
InMageAzureV2ReplicationDetails.prototype['selectedSourceNicId'] = undefined;

/**
 * The CPU count of the VM on the primary side.
 * @member {Number} sourceVmCpuCount
 */
InMageAzureV2ReplicationDetails.prototype['sourceVmCpuCount'] = undefined;

/**
 * The RAM size of the VM on the primary side.
 * @member {Number} sourceVmRamSizeInMB
 */
InMageAzureV2ReplicationDetails.prototype['sourceVmRamSizeInMB'] = undefined;

/**
 * The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
 * @member {String} targetVmId
 */
InMageAzureV2ReplicationDetails.prototype['targetVmId'] = undefined;

/**
 * The uncompressed data change rate in MB.
 * @member {Number} uncompressedDataRateInMB
 */
InMageAzureV2ReplicationDetails.prototype['uncompressedDataRateInMB'] = undefined;

/**
 * A value indicating whether managed disks should be used during failover.
 * @member {String} useManagedDisks
 */
InMageAzureV2ReplicationDetails.prototype['useManagedDisks'] = undefined;

/**
 * The vCenter infrastructure Id.
 * @member {String} vCenterInfrastructureId
 */
InMageAzureV2ReplicationDetails.prototype['vCenterInfrastructureId'] = undefined;

/**
 * The validation errors of the on-premise machine Value can be list of validation errors.
 * @member {Array.<module:model/HealthError>} validationErrors
 */
InMageAzureV2ReplicationDetails.prototype['validationErrors'] = undefined;

/**
 * The OS disk VHD name.
 * @member {String} vhdName
 */
InMageAzureV2ReplicationDetails.prototype['vhdName'] = undefined;

/**
 * The virtual machine Id.
 * @member {String} vmId
 */
InMageAzureV2ReplicationDetails.prototype['vmId'] = undefined;

/**
 * The PE Network details.
 * @member {Array.<module:model/VMNicDetails>} vmNics
 */
InMageAzureV2ReplicationDetails.prototype['vmNics'] = undefined;

/**
 * The protection state for the vm.
 * @member {String} vmProtectionState
 */
InMageAzureV2ReplicationDetails.prototype['vmProtectionState'] = undefined;

/**
 * The protection state description for the vm.
 * @member {String} vmProtectionStateDescription
 */
InMageAzureV2ReplicationDetails.prototype['vmProtectionStateDescription'] = undefined;


// Implement ReplicationProviderSpecificSettings interface:
/**
 * Gets the Instance type.
 * @member {String} instanceType
 */
ReplicationProviderSpecificSettings.prototype['instanceType'] = undefined;




export default InMageAzureV2ReplicationDetails;

