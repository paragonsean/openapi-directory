/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaskTypeDetails from './TaskTypeDetails';

/**
 * The AutomationRunbookTaskDetails model module.
 * @module model/AutomationRunbookTaskDetails
 * @version 2018-01-10
 */
class AutomationRunbookTaskDetails {
    /**
     * Constructs a new <code>AutomationRunbookTaskDetails</code>.
     * This class represents the task details for an automation runbook.
     * @alias module:model/AutomationRunbookTaskDetails
     * @extends module:model/TaskTypeDetails
     * @implements module:model/TaskTypeDetails
     */
    constructor() { 
        TaskTypeDetails.initialize(this);
        AutomationRunbookTaskDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutomationRunbookTaskDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutomationRunbookTaskDetails} obj Optional instance to populate.
     * @return {module:model/AutomationRunbookTaskDetails} The populated <code>AutomationRunbookTaskDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutomationRunbookTaskDetails();
            TaskTypeDetails.constructFromObject(data, obj);
            TaskTypeDetails.constructFromObject(data, obj);

            if (data.hasOwnProperty('accountName')) {
                obj['accountName'] = ApiClient.convertToType(data['accountName'], 'String');
            }
            if (data.hasOwnProperty('cloudServiceName')) {
                obj['cloudServiceName'] = ApiClient.convertToType(data['cloudServiceName'], 'String');
            }
            if (data.hasOwnProperty('isPrimarySideScript')) {
                obj['isPrimarySideScript'] = ApiClient.convertToType(data['isPrimarySideScript'], 'Boolean');
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
            }
            if (data.hasOwnProperty('jobOutput')) {
                obj['jobOutput'] = ApiClient.convertToType(data['jobOutput'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('runbookId')) {
                obj['runbookId'] = ApiClient.convertToType(data['runbookId'], 'String');
            }
            if (data.hasOwnProperty('runbookName')) {
                obj['runbookName'] = ApiClient.convertToType(data['runbookName'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutomationRunbookTaskDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutomationRunbookTaskDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountName'] && !(typeof data['accountName'] === 'string' || data['accountName'] instanceof String)) {
            throw new Error("Expected the field `accountName` to be a primitive type in the JSON string but got " + data['accountName']);
        }
        // ensure the json data is a string
        if (data['cloudServiceName'] && !(typeof data['cloudServiceName'] === 'string' || data['cloudServiceName'] instanceof String)) {
            throw new Error("Expected the field `cloudServiceName` to be a primitive type in the JSON string but got " + data['cloudServiceName']);
        }
        // ensure the json data is a string
        if (data['jobId'] && !(typeof data['jobId'] === 'string' || data['jobId'] instanceof String)) {
            throw new Error("Expected the field `jobId` to be a primitive type in the JSON string but got " + data['jobId']);
        }
        // ensure the json data is a string
        if (data['jobOutput'] && !(typeof data['jobOutput'] === 'string' || data['jobOutput'] instanceof String)) {
            throw new Error("Expected the field `jobOutput` to be a primitive type in the JSON string but got " + data['jobOutput']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['runbookId'] && !(typeof data['runbookId'] === 'string' || data['runbookId'] instanceof String)) {
            throw new Error("Expected the field `runbookId` to be a primitive type in the JSON string but got " + data['runbookId']);
        }
        // ensure the json data is a string
        if (data['runbookName'] && !(typeof data['runbookName'] === 'string' || data['runbookName'] instanceof String)) {
            throw new Error("Expected the field `runbookName` to be a primitive type in the JSON string but got " + data['runbookName']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }

        return true;
    }


}



/**
 * The automation account name of the runbook.
 * @member {String} accountName
 */
AutomationRunbookTaskDetails.prototype['accountName'] = undefined;

/**
 * The cloud service of the automation runbook account.
 * @member {String} cloudServiceName
 */
AutomationRunbookTaskDetails.prototype['cloudServiceName'] = undefined;

/**
 * A value indicating whether it is a primary side script or not.
 * @member {Boolean} isPrimarySideScript
 */
AutomationRunbookTaskDetails.prototype['isPrimarySideScript'] = undefined;

/**
 * The job Id of the runbook execution.
 * @member {String} jobId
 */
AutomationRunbookTaskDetails.prototype['jobId'] = undefined;

/**
 * The execution output of the runbook.
 * @member {String} jobOutput
 */
AutomationRunbookTaskDetails.prototype['jobOutput'] = undefined;

/**
 * The recovery plan task name.
 * @member {String} name
 */
AutomationRunbookTaskDetails.prototype['name'] = undefined;

/**
 * The runbook Id.
 * @member {String} runbookId
 */
AutomationRunbookTaskDetails.prototype['runbookId'] = undefined;

/**
 * The runbook name.
 * @member {String} runbookName
 */
AutomationRunbookTaskDetails.prototype['runbookName'] = undefined;

/**
 * The subscription Id of the automation runbook account.
 * @member {String} subscriptionId
 */
AutomationRunbookTaskDetails.prototype['subscriptionId'] = undefined;


// Implement TaskTypeDetails interface:
/**
 * The type of task details.
 * @member {String} instanceType
 */
TaskTypeDetails.prototype['instanceType'] = undefined;




export default AutomationRunbookTaskDetails;

