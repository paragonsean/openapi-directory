/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CurrentScenarioDetails from './CurrentScenarioDetails';
import HealthError from './HealthError';
import ReplicationProviderSpecificSettings from './ReplicationProviderSpecificSettings';

/**
 * The ReplicationProtectedItemProperties model module.
 * @module model/ReplicationProtectedItemProperties
 * @version 2018-01-10
 */
class ReplicationProtectedItemProperties {
    /**
     * Constructs a new <code>ReplicationProtectedItemProperties</code>.
     * Replication protected item custom data details.
     * @alias module:model/ReplicationProtectedItemProperties
     */
    constructor() { 
        
        ReplicationProtectedItemProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReplicationProtectedItemProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplicationProtectedItemProperties} obj Optional instance to populate.
     * @return {module:model/ReplicationProtectedItemProperties} The populated <code>ReplicationProtectedItemProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplicationProtectedItemProperties();

            if (data.hasOwnProperty('activeLocation')) {
                obj['activeLocation'] = ApiClient.convertToType(data['activeLocation'], 'String');
            }
            if (data.hasOwnProperty('allowedOperations')) {
                obj['allowedOperations'] = ApiClient.convertToType(data['allowedOperations'], ['String']);
            }
            if (data.hasOwnProperty('currentScenario')) {
                obj['currentScenario'] = CurrentScenarioDetails.constructFromObject(data['currentScenario']);
            }
            if (data.hasOwnProperty('failoverHealth')) {
                obj['failoverHealth'] = ApiClient.convertToType(data['failoverHealth'], 'String');
            }
            if (data.hasOwnProperty('failoverRecoveryPointId')) {
                obj['failoverRecoveryPointId'] = ApiClient.convertToType(data['failoverRecoveryPointId'], 'String');
            }
            if (data.hasOwnProperty('friendlyName')) {
                obj['friendlyName'] = ApiClient.convertToType(data['friendlyName'], 'String');
            }
            if (data.hasOwnProperty('healthErrors')) {
                obj['healthErrors'] = ApiClient.convertToType(data['healthErrors'], [HealthError]);
            }
            if (data.hasOwnProperty('lastSuccessfulFailoverTime')) {
                obj['lastSuccessfulFailoverTime'] = ApiClient.convertToType(data['lastSuccessfulFailoverTime'], 'Date');
            }
            if (data.hasOwnProperty('lastSuccessfulTestFailoverTime')) {
                obj['lastSuccessfulTestFailoverTime'] = ApiClient.convertToType(data['lastSuccessfulTestFailoverTime'], 'Date');
            }
            if (data.hasOwnProperty('policyFriendlyName')) {
                obj['policyFriendlyName'] = ApiClient.convertToType(data['policyFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('policyId')) {
                obj['policyId'] = ApiClient.convertToType(data['policyId'], 'String');
            }
            if (data.hasOwnProperty('primaryFabricFriendlyName')) {
                obj['primaryFabricFriendlyName'] = ApiClient.convertToType(data['primaryFabricFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('primaryFabricProvider')) {
                obj['primaryFabricProvider'] = ApiClient.convertToType(data['primaryFabricProvider'], 'String');
            }
            if (data.hasOwnProperty('primaryProtectionContainerFriendlyName')) {
                obj['primaryProtectionContainerFriendlyName'] = ApiClient.convertToType(data['primaryProtectionContainerFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('protectableItemId')) {
                obj['protectableItemId'] = ApiClient.convertToType(data['protectableItemId'], 'String');
            }
            if (data.hasOwnProperty('protectedItemType')) {
                obj['protectedItemType'] = ApiClient.convertToType(data['protectedItemType'], 'String');
            }
            if (data.hasOwnProperty('protectionState')) {
                obj['protectionState'] = ApiClient.convertToType(data['protectionState'], 'String');
            }
            if (data.hasOwnProperty('protectionStateDescription')) {
                obj['protectionStateDescription'] = ApiClient.convertToType(data['protectionStateDescription'], 'String');
            }
            if (data.hasOwnProperty('providerSpecificDetails')) {
                obj['providerSpecificDetails'] = ReplicationProviderSpecificSettings.constructFromObject(data['providerSpecificDetails']);
            }
            if (data.hasOwnProperty('recoveryContainerId')) {
                obj['recoveryContainerId'] = ApiClient.convertToType(data['recoveryContainerId'], 'String');
            }
            if (data.hasOwnProperty('recoveryFabricFriendlyName')) {
                obj['recoveryFabricFriendlyName'] = ApiClient.convertToType(data['recoveryFabricFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('recoveryFabricId')) {
                obj['recoveryFabricId'] = ApiClient.convertToType(data['recoveryFabricId'], 'String');
            }
            if (data.hasOwnProperty('recoveryProtectionContainerFriendlyName')) {
                obj['recoveryProtectionContainerFriendlyName'] = ApiClient.convertToType(data['recoveryProtectionContainerFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('recoveryServicesProviderId')) {
                obj['recoveryServicesProviderId'] = ApiClient.convertToType(data['recoveryServicesProviderId'], 'String');
            }
            if (data.hasOwnProperty('replicationHealth')) {
                obj['replicationHealth'] = ApiClient.convertToType(data['replicationHealth'], 'String');
            }
            if (data.hasOwnProperty('testFailoverState')) {
                obj['testFailoverState'] = ApiClient.convertToType(data['testFailoverState'], 'String');
            }
            if (data.hasOwnProperty('testFailoverStateDescription')) {
                obj['testFailoverStateDescription'] = ApiClient.convertToType(data['testFailoverStateDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplicationProtectedItemProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplicationProtectedItemProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activeLocation'] && !(typeof data['activeLocation'] === 'string' || data['activeLocation'] instanceof String)) {
            throw new Error("Expected the field `activeLocation` to be a primitive type in the JSON string but got " + data['activeLocation']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowedOperations'])) {
            throw new Error("Expected the field `allowedOperations` to be an array in the JSON data but got " + data['allowedOperations']);
        }
        // validate the optional field `currentScenario`
        if (data['currentScenario']) { // data not null
          CurrentScenarioDetails.validateJSON(data['currentScenario']);
        }
        // ensure the json data is a string
        if (data['failoverHealth'] && !(typeof data['failoverHealth'] === 'string' || data['failoverHealth'] instanceof String)) {
            throw new Error("Expected the field `failoverHealth` to be a primitive type in the JSON string but got " + data['failoverHealth']);
        }
        // ensure the json data is a string
        if (data['failoverRecoveryPointId'] && !(typeof data['failoverRecoveryPointId'] === 'string' || data['failoverRecoveryPointId'] instanceof String)) {
            throw new Error("Expected the field `failoverRecoveryPointId` to be a primitive type in the JSON string but got " + data['failoverRecoveryPointId']);
        }
        // ensure the json data is a string
        if (data['friendlyName'] && !(typeof data['friendlyName'] === 'string' || data['friendlyName'] instanceof String)) {
            throw new Error("Expected the field `friendlyName` to be a primitive type in the JSON string but got " + data['friendlyName']);
        }
        if (data['healthErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['healthErrors'])) {
                throw new Error("Expected the field `healthErrors` to be an array in the JSON data but got " + data['healthErrors']);
            }
            // validate the optional field `healthErrors` (array)
            for (const item of data['healthErrors']) {
                HealthError.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['policyFriendlyName'] && !(typeof data['policyFriendlyName'] === 'string' || data['policyFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `policyFriendlyName` to be a primitive type in the JSON string but got " + data['policyFriendlyName']);
        }
        // ensure the json data is a string
        if (data['policyId'] && !(typeof data['policyId'] === 'string' || data['policyId'] instanceof String)) {
            throw new Error("Expected the field `policyId` to be a primitive type in the JSON string but got " + data['policyId']);
        }
        // ensure the json data is a string
        if (data['primaryFabricFriendlyName'] && !(typeof data['primaryFabricFriendlyName'] === 'string' || data['primaryFabricFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `primaryFabricFriendlyName` to be a primitive type in the JSON string but got " + data['primaryFabricFriendlyName']);
        }
        // ensure the json data is a string
        if (data['primaryFabricProvider'] && !(typeof data['primaryFabricProvider'] === 'string' || data['primaryFabricProvider'] instanceof String)) {
            throw new Error("Expected the field `primaryFabricProvider` to be a primitive type in the JSON string but got " + data['primaryFabricProvider']);
        }
        // ensure the json data is a string
        if (data['primaryProtectionContainerFriendlyName'] && !(typeof data['primaryProtectionContainerFriendlyName'] === 'string' || data['primaryProtectionContainerFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `primaryProtectionContainerFriendlyName` to be a primitive type in the JSON string but got " + data['primaryProtectionContainerFriendlyName']);
        }
        // ensure the json data is a string
        if (data['protectableItemId'] && !(typeof data['protectableItemId'] === 'string' || data['protectableItemId'] instanceof String)) {
            throw new Error("Expected the field `protectableItemId` to be a primitive type in the JSON string but got " + data['protectableItemId']);
        }
        // ensure the json data is a string
        if (data['protectedItemType'] && !(typeof data['protectedItemType'] === 'string' || data['protectedItemType'] instanceof String)) {
            throw new Error("Expected the field `protectedItemType` to be a primitive type in the JSON string but got " + data['protectedItemType']);
        }
        // ensure the json data is a string
        if (data['protectionState'] && !(typeof data['protectionState'] === 'string' || data['protectionState'] instanceof String)) {
            throw new Error("Expected the field `protectionState` to be a primitive type in the JSON string but got " + data['protectionState']);
        }
        // ensure the json data is a string
        if (data['protectionStateDescription'] && !(typeof data['protectionStateDescription'] === 'string' || data['protectionStateDescription'] instanceof String)) {
            throw new Error("Expected the field `protectionStateDescription` to be a primitive type in the JSON string but got " + data['protectionStateDescription']);
        }
        // validate the optional field `providerSpecificDetails`
        if (data['providerSpecificDetails']) { // data not null
          ReplicationProviderSpecificSettings.validateJSON(data['providerSpecificDetails']);
        }
        // ensure the json data is a string
        if (data['recoveryContainerId'] && !(typeof data['recoveryContainerId'] === 'string' || data['recoveryContainerId'] instanceof String)) {
            throw new Error("Expected the field `recoveryContainerId` to be a primitive type in the JSON string but got " + data['recoveryContainerId']);
        }
        // ensure the json data is a string
        if (data['recoveryFabricFriendlyName'] && !(typeof data['recoveryFabricFriendlyName'] === 'string' || data['recoveryFabricFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `recoveryFabricFriendlyName` to be a primitive type in the JSON string but got " + data['recoveryFabricFriendlyName']);
        }
        // ensure the json data is a string
        if (data['recoveryFabricId'] && !(typeof data['recoveryFabricId'] === 'string' || data['recoveryFabricId'] instanceof String)) {
            throw new Error("Expected the field `recoveryFabricId` to be a primitive type in the JSON string but got " + data['recoveryFabricId']);
        }
        // ensure the json data is a string
        if (data['recoveryProtectionContainerFriendlyName'] && !(typeof data['recoveryProtectionContainerFriendlyName'] === 'string' || data['recoveryProtectionContainerFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `recoveryProtectionContainerFriendlyName` to be a primitive type in the JSON string but got " + data['recoveryProtectionContainerFriendlyName']);
        }
        // ensure the json data is a string
        if (data['recoveryServicesProviderId'] && !(typeof data['recoveryServicesProviderId'] === 'string' || data['recoveryServicesProviderId'] instanceof String)) {
            throw new Error("Expected the field `recoveryServicesProviderId` to be a primitive type in the JSON string but got " + data['recoveryServicesProviderId']);
        }
        // ensure the json data is a string
        if (data['replicationHealth'] && !(typeof data['replicationHealth'] === 'string' || data['replicationHealth'] instanceof String)) {
            throw new Error("Expected the field `replicationHealth` to be a primitive type in the JSON string but got " + data['replicationHealth']);
        }
        // ensure the json data is a string
        if (data['testFailoverState'] && !(typeof data['testFailoverState'] === 'string' || data['testFailoverState'] instanceof String)) {
            throw new Error("Expected the field `testFailoverState` to be a primitive type in the JSON string but got " + data['testFailoverState']);
        }
        // ensure the json data is a string
        if (data['testFailoverStateDescription'] && !(typeof data['testFailoverStateDescription'] === 'string' || data['testFailoverStateDescription'] instanceof String)) {
            throw new Error("Expected the field `testFailoverStateDescription` to be a primitive type in the JSON string but got " + data['testFailoverStateDescription']);
        }

        return true;
    }


}



/**
 * The Current active location of the PE.
 * @member {String} activeLocation
 */
ReplicationProtectedItemProperties.prototype['activeLocation'] = undefined;

/**
 * The allowed operations on the Replication protected item.
 * @member {Array.<String>} allowedOperations
 */
ReplicationProtectedItemProperties.prototype['allowedOperations'] = undefined;

/**
 * @member {module:model/CurrentScenarioDetails} currentScenario
 */
ReplicationProtectedItemProperties.prototype['currentScenario'] = undefined;

/**
 * The consolidated failover health for the VM.
 * @member {String} failoverHealth
 */
ReplicationProtectedItemProperties.prototype['failoverHealth'] = undefined;

/**
 * The recovery point ARM Id to which the Vm was failed over.
 * @member {String} failoverRecoveryPointId
 */
ReplicationProtectedItemProperties.prototype['failoverRecoveryPointId'] = undefined;

/**
 * The name.
 * @member {String} friendlyName
 */
ReplicationProtectedItemProperties.prototype['friendlyName'] = undefined;

/**
 * List of health errors.
 * @member {Array.<module:model/HealthError>} healthErrors
 */
ReplicationProtectedItemProperties.prototype['healthErrors'] = undefined;

/**
 * The Last successful failover time.
 * @member {Date} lastSuccessfulFailoverTime
 */
ReplicationProtectedItemProperties.prototype['lastSuccessfulFailoverTime'] = undefined;

/**
 * The Last successful test failover time.
 * @member {Date} lastSuccessfulTestFailoverTime
 */
ReplicationProtectedItemProperties.prototype['lastSuccessfulTestFailoverTime'] = undefined;

/**
 * The name of Policy governing this PE.
 * @member {String} policyFriendlyName
 */
ReplicationProtectedItemProperties.prototype['policyFriendlyName'] = undefined;

/**
 * The ID of Policy governing this PE.
 * @member {String} policyId
 */
ReplicationProtectedItemProperties.prototype['policyId'] = undefined;

/**
 * The friendly name of the primary fabric.
 * @member {String} primaryFabricFriendlyName
 */
ReplicationProtectedItemProperties.prototype['primaryFabricFriendlyName'] = undefined;

/**
 * The fabric provider of the primary fabric.
 * @member {String} primaryFabricProvider
 */
ReplicationProtectedItemProperties.prototype['primaryFabricProvider'] = undefined;

/**
 * The name of primary protection container friendly name.
 * @member {String} primaryProtectionContainerFriendlyName
 */
ReplicationProtectedItemProperties.prototype['primaryProtectionContainerFriendlyName'] = undefined;

/**
 * The protected item ARM Id.
 * @member {String} protectableItemId
 */
ReplicationProtectedItemProperties.prototype['protectableItemId'] = undefined;

/**
 * The type of protected item type.
 * @member {String} protectedItemType
 */
ReplicationProtectedItemProperties.prototype['protectedItemType'] = undefined;

/**
 * The protection status.
 * @member {String} protectionState
 */
ReplicationProtectedItemProperties.prototype['protectionState'] = undefined;

/**
 * The protection state description.
 * @member {String} protectionStateDescription
 */
ReplicationProtectedItemProperties.prototype['protectionStateDescription'] = undefined;

/**
 * @member {module:model/ReplicationProviderSpecificSettings} providerSpecificDetails
 */
ReplicationProtectedItemProperties.prototype['providerSpecificDetails'] = undefined;

/**
 * The recovery container Id.
 * @member {String} recoveryContainerId
 */
ReplicationProtectedItemProperties.prototype['recoveryContainerId'] = undefined;

/**
 * The friendly name of recovery fabric.
 * @member {String} recoveryFabricFriendlyName
 */
ReplicationProtectedItemProperties.prototype['recoveryFabricFriendlyName'] = undefined;

/**
 * The Arm Id of recovery fabric.
 * @member {String} recoveryFabricId
 */
ReplicationProtectedItemProperties.prototype['recoveryFabricId'] = undefined;

/**
 * The name of recovery container friendly name.
 * @member {String} recoveryProtectionContainerFriendlyName
 */
ReplicationProtectedItemProperties.prototype['recoveryProtectionContainerFriendlyName'] = undefined;

/**
 * The recovery provider ARM Id.
 * @member {String} recoveryServicesProviderId
 */
ReplicationProtectedItemProperties.prototype['recoveryServicesProviderId'] = undefined;

/**
 * The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
 * @member {String} replicationHealth
 */
ReplicationProtectedItemProperties.prototype['replicationHealth'] = undefined;

/**
 * The Test failover state.
 * @member {String} testFailoverState
 */
ReplicationProtectedItemProperties.prototype['testFailoverState'] = undefined;

/**
 * The Test failover state description.
 * @member {String} testFailoverStateDescription
 */
ReplicationProtectedItemProperties.prototype['testFailoverStateDescription'] = undefined;






export default ReplicationProtectedItemProperties;

