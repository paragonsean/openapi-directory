/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobQueryParameter model module.
 * @module model/JobQueryParameter
 * @version 2018-01-10
 */
class JobQueryParameter {
    /**
     * Constructs a new <code>JobQueryParameter</code>.
     * Query parameter to enumerate jobs.
     * @alias module:model/JobQueryParameter
     */
    constructor() { 
        
        JobQueryParameter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobQueryParameter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobQueryParameter} obj Optional instance to populate.
     * @return {module:model/JobQueryParameter} The populated <code>JobQueryParameter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobQueryParameter();

            if (data.hasOwnProperty('affectedObjectTypes')) {
                obj['affectedObjectTypes'] = ApiClient.convertToType(data['affectedObjectTypes'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('fabricId')) {
                obj['fabricId'] = ApiClient.convertToType(data['fabricId'], 'String');
            }
            if (data.hasOwnProperty('jobStatus')) {
                obj['jobStatus'] = ApiClient.convertToType(data['jobStatus'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobQueryParameter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobQueryParameter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['affectedObjectTypes'] && !(typeof data['affectedObjectTypes'] === 'string' || data['affectedObjectTypes'] instanceof String)) {
            throw new Error("Expected the field `affectedObjectTypes` to be a primitive type in the JSON string but got " + data['affectedObjectTypes']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['fabricId'] && !(typeof data['fabricId'] === 'string' || data['fabricId'] instanceof String)) {
            throw new Error("Expected the field `fabricId` to be a primitive type in the JSON string but got " + data['fabricId']);
        }
        // ensure the json data is a string
        if (data['jobStatus'] && !(typeof data['jobStatus'] === 'string' || data['jobStatus'] instanceof String)) {
            throw new Error("Expected the field `jobStatus` to be a primitive type in the JSON string but got " + data['jobStatus']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }

        return true;
    }


}



/**
 * The type of objects.
 * @member {String} affectedObjectTypes
 */
JobQueryParameter.prototype['affectedObjectTypes'] = undefined;

/**
 * Date time to get jobs up to.
 * @member {String} endTime
 */
JobQueryParameter.prototype['endTime'] = undefined;

/**
 * The Id of the fabric to search jobs under.
 * @member {String} fabricId
 */
JobQueryParameter.prototype['fabricId'] = undefined;

/**
 * The states of the job to be filtered can be in.
 * @member {String} jobStatus
 */
JobQueryParameter.prototype['jobStatus'] = undefined;

/**
 * Date time to get jobs from.
 * @member {String} startTime
 */
JobQueryParameter.prototype['startTime'] = undefined;






export default JobQueryParameter;

