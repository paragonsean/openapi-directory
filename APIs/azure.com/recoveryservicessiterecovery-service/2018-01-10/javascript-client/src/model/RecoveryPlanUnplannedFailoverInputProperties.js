/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RecoveryPlanProviderSpecificFailoverInput from './RecoveryPlanProviderSpecificFailoverInput';

/**
 * The RecoveryPlanUnplannedFailoverInputProperties model module.
 * @module model/RecoveryPlanUnplannedFailoverInputProperties
 * @version 2018-01-10
 */
class RecoveryPlanUnplannedFailoverInputProperties {
    /**
     * Constructs a new <code>RecoveryPlanUnplannedFailoverInputProperties</code>.
     * Recovery plan unplanned failover input properties.
     * @alias module:model/RecoveryPlanUnplannedFailoverInputProperties
     * @param failoverDirection {module:model/RecoveryPlanUnplannedFailoverInputProperties.FailoverDirectionEnum} The failover direction.
     * @param sourceSiteOperations {module:model/RecoveryPlanUnplannedFailoverInputProperties.SourceSiteOperationsEnum} A value indicating whether source site operations are required.
     */
    constructor(failoverDirection, sourceSiteOperations) { 
        
        RecoveryPlanUnplannedFailoverInputProperties.initialize(this, failoverDirection, sourceSiteOperations);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, failoverDirection, sourceSiteOperations) { 
        obj['failoverDirection'] = failoverDirection;
        obj['sourceSiteOperations'] = sourceSiteOperations;
    }

    /**
     * Constructs a <code>RecoveryPlanUnplannedFailoverInputProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RecoveryPlanUnplannedFailoverInputProperties} obj Optional instance to populate.
     * @return {module:model/RecoveryPlanUnplannedFailoverInputProperties} The populated <code>RecoveryPlanUnplannedFailoverInputProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecoveryPlanUnplannedFailoverInputProperties();

            if (data.hasOwnProperty('failoverDirection')) {
                obj['failoverDirection'] = ApiClient.convertToType(data['failoverDirection'], 'String');
            }
            if (data.hasOwnProperty('providerSpecificDetails')) {
                obj['providerSpecificDetails'] = ApiClient.convertToType(data['providerSpecificDetails'], [RecoveryPlanProviderSpecificFailoverInput]);
            }
            if (data.hasOwnProperty('sourceSiteOperations')) {
                obj['sourceSiteOperations'] = ApiClient.convertToType(data['sourceSiteOperations'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RecoveryPlanUnplannedFailoverInputProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RecoveryPlanUnplannedFailoverInputProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RecoveryPlanUnplannedFailoverInputProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['failoverDirection'] && !(typeof data['failoverDirection'] === 'string' || data['failoverDirection'] instanceof String)) {
            throw new Error("Expected the field `failoverDirection` to be a primitive type in the JSON string but got " + data['failoverDirection']);
        }
        if (data['providerSpecificDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['providerSpecificDetails'])) {
                throw new Error("Expected the field `providerSpecificDetails` to be an array in the JSON data but got " + data['providerSpecificDetails']);
            }
            // validate the optional field `providerSpecificDetails` (array)
            for (const item of data['providerSpecificDetails']) {
                RecoveryPlanProviderSpecificFailoverInput.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['sourceSiteOperations'] && !(typeof data['sourceSiteOperations'] === 'string' || data['sourceSiteOperations'] instanceof String)) {
            throw new Error("Expected the field `sourceSiteOperations` to be a primitive type in the JSON string but got " + data['sourceSiteOperations']);
        }

        return true;
    }


}

RecoveryPlanUnplannedFailoverInputProperties.RequiredProperties = ["failoverDirection", "sourceSiteOperations"];

/**
 * The failover direction.
 * @member {module:model/RecoveryPlanUnplannedFailoverInputProperties.FailoverDirectionEnum} failoverDirection
 */
RecoveryPlanUnplannedFailoverInputProperties.prototype['failoverDirection'] = undefined;

/**
 * The provider specific properties.
 * @member {Array.<module:model/RecoveryPlanProviderSpecificFailoverInput>} providerSpecificDetails
 */
RecoveryPlanUnplannedFailoverInputProperties.prototype['providerSpecificDetails'] = undefined;

/**
 * A value indicating whether source site operations are required.
 * @member {module:model/RecoveryPlanUnplannedFailoverInputProperties.SourceSiteOperationsEnum} sourceSiteOperations
 */
RecoveryPlanUnplannedFailoverInputProperties.prototype['sourceSiteOperations'] = undefined;





/**
 * Allowed values for the <code>failoverDirection</code> property.
 * @enum {String}
 * @readonly
 */
RecoveryPlanUnplannedFailoverInputProperties['FailoverDirectionEnum'] = {

    /**
     * value: "PrimaryToRecovery"
     * @const
     */
    "PrimaryToRecovery": "PrimaryToRecovery",

    /**
     * value: "RecoveryToPrimary"
     * @const
     */
    "RecoveryToPrimary": "RecoveryToPrimary"
};


/**
 * Allowed values for the <code>sourceSiteOperations</code> property.
 * @enum {String}
 * @readonly
 */
RecoveryPlanUnplannedFailoverInputProperties['SourceSiteOperationsEnum'] = {

    /**
     * value: "Required"
     * @const
     */
    "Required": "Required",

    /**
     * value: "NotRequired"
     * @const
     */
    "NotRequired": "NotRequired"
};



export default RecoveryPlanUnplannedFailoverInputProperties;

