/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResyncProviderSpecificInput from './ResyncProviderSpecificInput';

/**
 * The VMwareCbtResyncInput model module.
 * @module model/VMwareCbtResyncInput
 * @version 2018-01-10
 */
class VMwareCbtResyncInput {
    /**
     * Constructs a new <code>VMwareCbtResyncInput</code>.
     * VMwareCbt specific resync input.
     * @alias module:model/VMwareCbtResyncInput
     * @extends module:model/ResyncProviderSpecificInput
     * @implements module:model/ResyncProviderSpecificInput
     * @param instanceType {String} The class type.
     */
    constructor(instanceType) { 
        ResyncProviderSpecificInput.initialize(this, instanceType);
        VMwareCbtResyncInput.initialize(this, instanceType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, instanceType) { 
        obj['skipCbtReset'] = skipCbtReset;
    }

    /**
     * Constructs a <code>VMwareCbtResyncInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VMwareCbtResyncInput} obj Optional instance to populate.
     * @return {module:model/VMwareCbtResyncInput} The populated <code>VMwareCbtResyncInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VMwareCbtResyncInput();
            ResyncProviderSpecificInput.constructFromObject(data, obj);
            ResyncProviderSpecificInput.constructFromObject(data, obj);

            if (data.hasOwnProperty('skipCbtReset')) {
                obj['skipCbtReset'] = ApiClient.convertToType(data['skipCbtReset'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VMwareCbtResyncInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VMwareCbtResyncInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VMwareCbtResyncInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['skipCbtReset'] && !(typeof data['skipCbtReset'] === 'string' || data['skipCbtReset'] instanceof String)) {
            throw new Error("Expected the field `skipCbtReset` to be a primitive type in the JSON string but got " + data['skipCbtReset']);
        }

        return true;
    }


}

VMwareCbtResyncInput.RequiredProperties = ["skipCbtReset", "instanceType"];

/**
 * A value indicating whether CBT is to be reset.
 * @member {String} skipCbtReset
 */
VMwareCbtResyncInput.prototype['skipCbtReset'] = undefined;


// Implement ResyncProviderSpecificInput interface:
/**
 * The class type.
 * @member {String} instanceType
 */
ResyncProviderSpecificInput.prototype['instanceType'] = undefined;




export default VMwareCbtResyncInput;

