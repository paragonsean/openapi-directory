/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnableProtectionProviderSpecificInput from './EnableProtectionProviderSpecificInput';

/**
 * The HyperVReplicaAzureEnableProtectionInput model module.
 * @module model/HyperVReplicaAzureEnableProtectionInput
 * @version 2018-01-10
 */
class HyperVReplicaAzureEnableProtectionInput {
    /**
     * Constructs a new <code>HyperVReplicaAzureEnableProtectionInput</code>.
     * Azure specific enable protection input.
     * @alias module:model/HyperVReplicaAzureEnableProtectionInput
     * @extends module:model/EnableProtectionProviderSpecificInput
     * @implements module:model/EnableProtectionProviderSpecificInput
     */
    constructor() { 
        EnableProtectionProviderSpecificInput.initialize(this);
        HyperVReplicaAzureEnableProtectionInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HyperVReplicaAzureEnableProtectionInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HyperVReplicaAzureEnableProtectionInput} obj Optional instance to populate.
     * @return {module:model/HyperVReplicaAzureEnableProtectionInput} The populated <code>HyperVReplicaAzureEnableProtectionInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HyperVReplicaAzureEnableProtectionInput();
            EnableProtectionProviderSpecificInput.constructFromObject(data, obj);
            EnableProtectionProviderSpecificInput.constructFromObject(data, obj);

            if (data.hasOwnProperty('disksToInclude')) {
                obj['disksToInclude'] = ApiClient.convertToType(data['disksToInclude'], ['String']);
            }
            if (data.hasOwnProperty('enableRdpOnTargetOption')) {
                obj['enableRdpOnTargetOption'] = ApiClient.convertToType(data['enableRdpOnTargetOption'], 'String');
            }
            if (data.hasOwnProperty('hvHostVmId')) {
                obj['hvHostVmId'] = ApiClient.convertToType(data['hvHostVmId'], 'String');
            }
            if (data.hasOwnProperty('logStorageAccountId')) {
                obj['logStorageAccountId'] = ApiClient.convertToType(data['logStorageAccountId'], 'String');
            }
            if (data.hasOwnProperty('osType')) {
                obj['osType'] = ApiClient.convertToType(data['osType'], 'String');
            }
            if (data.hasOwnProperty('targetAzureNetworkId')) {
                obj['targetAzureNetworkId'] = ApiClient.convertToType(data['targetAzureNetworkId'], 'String');
            }
            if (data.hasOwnProperty('targetAzureSubnetId')) {
                obj['targetAzureSubnetId'] = ApiClient.convertToType(data['targetAzureSubnetId'], 'String');
            }
            if (data.hasOwnProperty('targetAzureV1ResourceGroupId')) {
                obj['targetAzureV1ResourceGroupId'] = ApiClient.convertToType(data['targetAzureV1ResourceGroupId'], 'String');
            }
            if (data.hasOwnProperty('targetAzureV2ResourceGroupId')) {
                obj['targetAzureV2ResourceGroupId'] = ApiClient.convertToType(data['targetAzureV2ResourceGroupId'], 'String');
            }
            if (data.hasOwnProperty('targetAzureVmName')) {
                obj['targetAzureVmName'] = ApiClient.convertToType(data['targetAzureVmName'], 'String');
            }
            if (data.hasOwnProperty('targetStorageAccountId')) {
                obj['targetStorageAccountId'] = ApiClient.convertToType(data['targetStorageAccountId'], 'String');
            }
            if (data.hasOwnProperty('useManagedDisks')) {
                obj['useManagedDisks'] = ApiClient.convertToType(data['useManagedDisks'], 'String');
            }
            if (data.hasOwnProperty('vhdId')) {
                obj['vhdId'] = ApiClient.convertToType(data['vhdId'], 'String');
            }
            if (data.hasOwnProperty('vmName')) {
                obj['vmName'] = ApiClient.convertToType(data['vmName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HyperVReplicaAzureEnableProtectionInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HyperVReplicaAzureEnableProtectionInput</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['disksToInclude'])) {
            throw new Error("Expected the field `disksToInclude` to be an array in the JSON data but got " + data['disksToInclude']);
        }
        // ensure the json data is a string
        if (data['enableRdpOnTargetOption'] && !(typeof data['enableRdpOnTargetOption'] === 'string' || data['enableRdpOnTargetOption'] instanceof String)) {
            throw new Error("Expected the field `enableRdpOnTargetOption` to be a primitive type in the JSON string but got " + data['enableRdpOnTargetOption']);
        }
        // ensure the json data is a string
        if (data['hvHostVmId'] && !(typeof data['hvHostVmId'] === 'string' || data['hvHostVmId'] instanceof String)) {
            throw new Error("Expected the field `hvHostVmId` to be a primitive type in the JSON string but got " + data['hvHostVmId']);
        }
        // ensure the json data is a string
        if (data['logStorageAccountId'] && !(typeof data['logStorageAccountId'] === 'string' || data['logStorageAccountId'] instanceof String)) {
            throw new Error("Expected the field `logStorageAccountId` to be a primitive type in the JSON string but got " + data['logStorageAccountId']);
        }
        // ensure the json data is a string
        if (data['osType'] && !(typeof data['osType'] === 'string' || data['osType'] instanceof String)) {
            throw new Error("Expected the field `osType` to be a primitive type in the JSON string but got " + data['osType']);
        }
        // ensure the json data is a string
        if (data['targetAzureNetworkId'] && !(typeof data['targetAzureNetworkId'] === 'string' || data['targetAzureNetworkId'] instanceof String)) {
            throw new Error("Expected the field `targetAzureNetworkId` to be a primitive type in the JSON string but got " + data['targetAzureNetworkId']);
        }
        // ensure the json data is a string
        if (data['targetAzureSubnetId'] && !(typeof data['targetAzureSubnetId'] === 'string' || data['targetAzureSubnetId'] instanceof String)) {
            throw new Error("Expected the field `targetAzureSubnetId` to be a primitive type in the JSON string but got " + data['targetAzureSubnetId']);
        }
        // ensure the json data is a string
        if (data['targetAzureV1ResourceGroupId'] && !(typeof data['targetAzureV1ResourceGroupId'] === 'string' || data['targetAzureV1ResourceGroupId'] instanceof String)) {
            throw new Error("Expected the field `targetAzureV1ResourceGroupId` to be a primitive type in the JSON string but got " + data['targetAzureV1ResourceGroupId']);
        }
        // ensure the json data is a string
        if (data['targetAzureV2ResourceGroupId'] && !(typeof data['targetAzureV2ResourceGroupId'] === 'string' || data['targetAzureV2ResourceGroupId'] instanceof String)) {
            throw new Error("Expected the field `targetAzureV2ResourceGroupId` to be a primitive type in the JSON string but got " + data['targetAzureV2ResourceGroupId']);
        }
        // ensure the json data is a string
        if (data['targetAzureVmName'] && !(typeof data['targetAzureVmName'] === 'string' || data['targetAzureVmName'] instanceof String)) {
            throw new Error("Expected the field `targetAzureVmName` to be a primitive type in the JSON string but got " + data['targetAzureVmName']);
        }
        // ensure the json data is a string
        if (data['targetStorageAccountId'] && !(typeof data['targetStorageAccountId'] === 'string' || data['targetStorageAccountId'] instanceof String)) {
            throw new Error("Expected the field `targetStorageAccountId` to be a primitive type in the JSON string but got " + data['targetStorageAccountId']);
        }
        // ensure the json data is a string
        if (data['useManagedDisks'] && !(typeof data['useManagedDisks'] === 'string' || data['useManagedDisks'] instanceof String)) {
            throw new Error("Expected the field `useManagedDisks` to be a primitive type in the JSON string but got " + data['useManagedDisks']);
        }
        // ensure the json data is a string
        if (data['vhdId'] && !(typeof data['vhdId'] === 'string' || data['vhdId'] instanceof String)) {
            throw new Error("Expected the field `vhdId` to be a primitive type in the JSON string but got " + data['vhdId']);
        }
        // ensure the json data is a string
        if (data['vmName'] && !(typeof data['vmName'] === 'string' || data['vmName'] instanceof String)) {
            throw new Error("Expected the field `vmName` to be a primitive type in the JSON string but got " + data['vmName']);
        }

        return true;
    }


}



/**
 * The list of VHD IDs of disks to be protected.
 * @member {Array.<String>} disksToInclude
 */
HyperVReplicaAzureEnableProtectionInput.prototype['disksToInclude'] = undefined;

/**
 * The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
 * @member {String} enableRdpOnTargetOption
 */
HyperVReplicaAzureEnableProtectionInput.prototype['enableRdpOnTargetOption'] = undefined;

/**
 * The Hyper-V host Vm Id.
 * @member {String} hvHostVmId
 */
HyperVReplicaAzureEnableProtectionInput.prototype['hvHostVmId'] = undefined;

/**
 * The storage account to be used for logging during replication.
 * @member {String} logStorageAccountId
 */
HyperVReplicaAzureEnableProtectionInput.prototype['logStorageAccountId'] = undefined;

/**
 * The OS type associated with vm.
 * @member {String} osType
 */
HyperVReplicaAzureEnableProtectionInput.prototype['osType'] = undefined;

/**
 * The selected target Azure network Id.
 * @member {String} targetAzureNetworkId
 */
HyperVReplicaAzureEnableProtectionInput.prototype['targetAzureNetworkId'] = undefined;

/**
 * The selected target Azure subnet Id.
 * @member {String} targetAzureSubnetId
 */
HyperVReplicaAzureEnableProtectionInput.prototype['targetAzureSubnetId'] = undefined;

/**
 * The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
 * @member {String} targetAzureV1ResourceGroupId
 */
HyperVReplicaAzureEnableProtectionInput.prototype['targetAzureV1ResourceGroupId'] = undefined;

/**
 * The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
 * @member {String} targetAzureV2ResourceGroupId
 */
HyperVReplicaAzureEnableProtectionInput.prototype['targetAzureV2ResourceGroupId'] = undefined;

/**
 * The target azure Vm Name.
 * @member {String} targetAzureVmName
 */
HyperVReplicaAzureEnableProtectionInput.prototype['targetAzureVmName'] = undefined;

/**
 * The storage account name.
 * @member {String} targetStorageAccountId
 */
HyperVReplicaAzureEnableProtectionInput.prototype['targetStorageAccountId'] = undefined;

/**
 * A value indicating whether managed disks should be used during failover.
 * @member {String} useManagedDisks
 */
HyperVReplicaAzureEnableProtectionInput.prototype['useManagedDisks'] = undefined;

/**
 * The OS disk VHD id associated with vm.
 * @member {String} vhdId
 */
HyperVReplicaAzureEnableProtectionInput.prototype['vhdId'] = undefined;

/**
 * The Vm Name.
 * @member {String} vmName
 */
HyperVReplicaAzureEnableProtectionInput.prototype['vmName'] = undefined;


// Implement EnableProtectionProviderSpecificInput interface:
/**
 * The class type.
 * @member {String} instanceType
 */
EnableProtectionProviderSpecificInput.prototype['instanceType'] = undefined;




export default HyperVReplicaAzureEnableProtectionInput;

