/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AzureVmDiskDetails from './AzureVmDiskDetails';
import InitialReplicationDetails from './InitialReplicationDetails';
import OSDetails from './OSDetails';
import ReplicationProviderSpecificSettings from './ReplicationProviderSpecificSettings';
import VMNicDetails from './VMNicDetails';

/**
 * The HyperVReplicaAzureReplicationDetails model module.
 * @module model/HyperVReplicaAzureReplicationDetails
 * @version 2018-01-10
 */
class HyperVReplicaAzureReplicationDetails {
    /**
     * Constructs a new <code>HyperVReplicaAzureReplicationDetails</code>.
     * Hyper V Replica Azure provider specific settings.
     * @alias module:model/HyperVReplicaAzureReplicationDetails
     * @extends module:model/ReplicationProviderSpecificSettings
     * @implements module:model/ReplicationProviderSpecificSettings
     */
    constructor() { 
        ReplicationProviderSpecificSettings.initialize(this);
        HyperVReplicaAzureReplicationDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HyperVReplicaAzureReplicationDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HyperVReplicaAzureReplicationDetails} obj Optional instance to populate.
     * @return {module:model/HyperVReplicaAzureReplicationDetails} The populated <code>HyperVReplicaAzureReplicationDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HyperVReplicaAzureReplicationDetails();
            ReplicationProviderSpecificSettings.constructFromObject(data, obj);
            ReplicationProviderSpecificSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('azureVmDiskDetails')) {
                obj['azureVmDiskDetails'] = ApiClient.convertToType(data['azureVmDiskDetails'], [AzureVmDiskDetails]);
            }
            if (data.hasOwnProperty('enableRdpOnTargetOption')) {
                obj['enableRdpOnTargetOption'] = ApiClient.convertToType(data['enableRdpOnTargetOption'], 'String');
            }
            if (data.hasOwnProperty('encryption')) {
                obj['encryption'] = ApiClient.convertToType(data['encryption'], 'String');
            }
            if (data.hasOwnProperty('initialReplicationDetails')) {
                obj['initialReplicationDetails'] = InitialReplicationDetails.constructFromObject(data['initialReplicationDetails']);
            }
            if (data.hasOwnProperty('lastReplicatedTime')) {
                obj['lastReplicatedTime'] = ApiClient.convertToType(data['lastReplicatedTime'], 'Date');
            }
            if (data.hasOwnProperty('lastRpoCalculatedTime')) {
                obj['lastRpoCalculatedTime'] = ApiClient.convertToType(data['lastRpoCalculatedTime'], 'Date');
            }
            if (data.hasOwnProperty('licenseType')) {
                obj['licenseType'] = ApiClient.convertToType(data['licenseType'], 'String');
            }
            if (data.hasOwnProperty('oSDetails')) {
                obj['oSDetails'] = OSDetails.constructFromObject(data['oSDetails']);
            }
            if (data.hasOwnProperty('recoveryAvailabilitySetId')) {
                obj['recoveryAvailabilitySetId'] = ApiClient.convertToType(data['recoveryAvailabilitySetId'], 'String');
            }
            if (data.hasOwnProperty('recoveryAzureLogStorageAccountId')) {
                obj['recoveryAzureLogStorageAccountId'] = ApiClient.convertToType(data['recoveryAzureLogStorageAccountId'], 'String');
            }
            if (data.hasOwnProperty('recoveryAzureResourceGroupId')) {
                obj['recoveryAzureResourceGroupId'] = ApiClient.convertToType(data['recoveryAzureResourceGroupId'], 'String');
            }
            if (data.hasOwnProperty('recoveryAzureStorageAccount')) {
                obj['recoveryAzureStorageAccount'] = ApiClient.convertToType(data['recoveryAzureStorageAccount'], 'String');
            }
            if (data.hasOwnProperty('recoveryAzureVMSize')) {
                obj['recoveryAzureVMSize'] = ApiClient.convertToType(data['recoveryAzureVMSize'], 'String');
            }
            if (data.hasOwnProperty('recoveryAzureVmName')) {
                obj['recoveryAzureVmName'] = ApiClient.convertToType(data['recoveryAzureVmName'], 'String');
            }
            if (data.hasOwnProperty('rpoInSeconds')) {
                obj['rpoInSeconds'] = ApiClient.convertToType(data['rpoInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('selectedRecoveryAzureNetworkId')) {
                obj['selectedRecoveryAzureNetworkId'] = ApiClient.convertToType(data['selectedRecoveryAzureNetworkId'], 'String');
            }
            if (data.hasOwnProperty('selectedSourceNicId')) {
                obj['selectedSourceNicId'] = ApiClient.convertToType(data['selectedSourceNicId'], 'String');
            }
            if (data.hasOwnProperty('sourceVmCpuCount')) {
                obj['sourceVmCpuCount'] = ApiClient.convertToType(data['sourceVmCpuCount'], 'Number');
            }
            if (data.hasOwnProperty('sourceVmRamSizeInMB')) {
                obj['sourceVmRamSizeInMB'] = ApiClient.convertToType(data['sourceVmRamSizeInMB'], 'Number');
            }
            if (data.hasOwnProperty('useManagedDisks')) {
                obj['useManagedDisks'] = ApiClient.convertToType(data['useManagedDisks'], 'String');
            }
            if (data.hasOwnProperty('vmId')) {
                obj['vmId'] = ApiClient.convertToType(data['vmId'], 'String');
            }
            if (data.hasOwnProperty('vmNics')) {
                obj['vmNics'] = ApiClient.convertToType(data['vmNics'], [VMNicDetails]);
            }
            if (data.hasOwnProperty('vmProtectionState')) {
                obj['vmProtectionState'] = ApiClient.convertToType(data['vmProtectionState'], 'String');
            }
            if (data.hasOwnProperty('vmProtectionStateDescription')) {
                obj['vmProtectionStateDescription'] = ApiClient.convertToType(data['vmProtectionStateDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HyperVReplicaAzureReplicationDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HyperVReplicaAzureReplicationDetails</code>.
     */
    static validateJSON(data) {
        if (data['azureVmDiskDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['azureVmDiskDetails'])) {
                throw new Error("Expected the field `azureVmDiskDetails` to be an array in the JSON data but got " + data['azureVmDiskDetails']);
            }
            // validate the optional field `azureVmDiskDetails` (array)
            for (const item of data['azureVmDiskDetails']) {
                AzureVmDiskDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['enableRdpOnTargetOption'] && !(typeof data['enableRdpOnTargetOption'] === 'string' || data['enableRdpOnTargetOption'] instanceof String)) {
            throw new Error("Expected the field `enableRdpOnTargetOption` to be a primitive type in the JSON string but got " + data['enableRdpOnTargetOption']);
        }
        // ensure the json data is a string
        if (data['encryption'] && !(typeof data['encryption'] === 'string' || data['encryption'] instanceof String)) {
            throw new Error("Expected the field `encryption` to be a primitive type in the JSON string but got " + data['encryption']);
        }
        // validate the optional field `initialReplicationDetails`
        if (data['initialReplicationDetails']) { // data not null
          InitialReplicationDetails.validateJSON(data['initialReplicationDetails']);
        }
        // ensure the json data is a string
        if (data['licenseType'] && !(typeof data['licenseType'] === 'string' || data['licenseType'] instanceof String)) {
            throw new Error("Expected the field `licenseType` to be a primitive type in the JSON string but got " + data['licenseType']);
        }
        // validate the optional field `oSDetails`
        if (data['oSDetails']) { // data not null
          OSDetails.validateJSON(data['oSDetails']);
        }
        // ensure the json data is a string
        if (data['recoveryAvailabilitySetId'] && !(typeof data['recoveryAvailabilitySetId'] === 'string' || data['recoveryAvailabilitySetId'] instanceof String)) {
            throw new Error("Expected the field `recoveryAvailabilitySetId` to be a primitive type in the JSON string but got " + data['recoveryAvailabilitySetId']);
        }
        // ensure the json data is a string
        if (data['recoveryAzureLogStorageAccountId'] && !(typeof data['recoveryAzureLogStorageAccountId'] === 'string' || data['recoveryAzureLogStorageAccountId'] instanceof String)) {
            throw new Error("Expected the field `recoveryAzureLogStorageAccountId` to be a primitive type in the JSON string but got " + data['recoveryAzureLogStorageAccountId']);
        }
        // ensure the json data is a string
        if (data['recoveryAzureResourceGroupId'] && !(typeof data['recoveryAzureResourceGroupId'] === 'string' || data['recoveryAzureResourceGroupId'] instanceof String)) {
            throw new Error("Expected the field `recoveryAzureResourceGroupId` to be a primitive type in the JSON string but got " + data['recoveryAzureResourceGroupId']);
        }
        // ensure the json data is a string
        if (data['recoveryAzureStorageAccount'] && !(typeof data['recoveryAzureStorageAccount'] === 'string' || data['recoveryAzureStorageAccount'] instanceof String)) {
            throw new Error("Expected the field `recoveryAzureStorageAccount` to be a primitive type in the JSON string but got " + data['recoveryAzureStorageAccount']);
        }
        // ensure the json data is a string
        if (data['recoveryAzureVMSize'] && !(typeof data['recoveryAzureVMSize'] === 'string' || data['recoveryAzureVMSize'] instanceof String)) {
            throw new Error("Expected the field `recoveryAzureVMSize` to be a primitive type in the JSON string but got " + data['recoveryAzureVMSize']);
        }
        // ensure the json data is a string
        if (data['recoveryAzureVmName'] && !(typeof data['recoveryAzureVmName'] === 'string' || data['recoveryAzureVmName'] instanceof String)) {
            throw new Error("Expected the field `recoveryAzureVmName` to be a primitive type in the JSON string but got " + data['recoveryAzureVmName']);
        }
        // ensure the json data is a string
        if (data['selectedRecoveryAzureNetworkId'] && !(typeof data['selectedRecoveryAzureNetworkId'] === 'string' || data['selectedRecoveryAzureNetworkId'] instanceof String)) {
            throw new Error("Expected the field `selectedRecoveryAzureNetworkId` to be a primitive type in the JSON string but got " + data['selectedRecoveryAzureNetworkId']);
        }
        // ensure the json data is a string
        if (data['selectedSourceNicId'] && !(typeof data['selectedSourceNicId'] === 'string' || data['selectedSourceNicId'] instanceof String)) {
            throw new Error("Expected the field `selectedSourceNicId` to be a primitive type in the JSON string but got " + data['selectedSourceNicId']);
        }
        // ensure the json data is a string
        if (data['useManagedDisks'] && !(typeof data['useManagedDisks'] === 'string' || data['useManagedDisks'] instanceof String)) {
            throw new Error("Expected the field `useManagedDisks` to be a primitive type in the JSON string but got " + data['useManagedDisks']);
        }
        // ensure the json data is a string
        if (data['vmId'] && !(typeof data['vmId'] === 'string' || data['vmId'] instanceof String)) {
            throw new Error("Expected the field `vmId` to be a primitive type in the JSON string but got " + data['vmId']);
        }
        if (data['vmNics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vmNics'])) {
                throw new Error("Expected the field `vmNics` to be an array in the JSON data but got " + data['vmNics']);
            }
            // validate the optional field `vmNics` (array)
            for (const item of data['vmNics']) {
                VMNicDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['vmProtectionState'] && !(typeof data['vmProtectionState'] === 'string' || data['vmProtectionState'] instanceof String)) {
            throw new Error("Expected the field `vmProtectionState` to be a primitive type in the JSON string but got " + data['vmProtectionState']);
        }
        // ensure the json data is a string
        if (data['vmProtectionStateDescription'] && !(typeof data['vmProtectionStateDescription'] === 'string' || data['vmProtectionStateDescription'] instanceof String)) {
            throw new Error("Expected the field `vmProtectionStateDescription` to be a primitive type in the JSON string but got " + data['vmProtectionStateDescription']);
        }

        return true;
    }


}



/**
 * Azure VM Disk details.
 * @member {Array.<module:model/AzureVmDiskDetails>} azureVmDiskDetails
 */
HyperVReplicaAzureReplicationDetails.prototype['azureVmDiskDetails'] = undefined;

/**
 * The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
 * @member {String} enableRdpOnTargetOption
 */
HyperVReplicaAzureReplicationDetails.prototype['enableRdpOnTargetOption'] = undefined;

/**
 * The encryption info.
 * @member {String} encryption
 */
HyperVReplicaAzureReplicationDetails.prototype['encryption'] = undefined;

/**
 * @member {module:model/InitialReplicationDetails} initialReplicationDetails
 */
HyperVReplicaAzureReplicationDetails.prototype['initialReplicationDetails'] = undefined;

/**
 * The Last replication time.
 * @member {Date} lastReplicatedTime
 */
HyperVReplicaAzureReplicationDetails.prototype['lastReplicatedTime'] = undefined;

/**
 * The last RPO calculated time.
 * @member {Date} lastRpoCalculatedTime
 */
HyperVReplicaAzureReplicationDetails.prototype['lastRpoCalculatedTime'] = undefined;

/**
 * License Type of the VM to be used.
 * @member {String} licenseType
 */
HyperVReplicaAzureReplicationDetails.prototype['licenseType'] = undefined;

/**
 * @member {module:model/OSDetails} oSDetails
 */
HyperVReplicaAzureReplicationDetails.prototype['oSDetails'] = undefined;

/**
 * The recovery availability set Id.
 * @member {String} recoveryAvailabilitySetId
 */
HyperVReplicaAzureReplicationDetails.prototype['recoveryAvailabilitySetId'] = undefined;

/**
 * The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
 * @member {String} recoveryAzureLogStorageAccountId
 */
HyperVReplicaAzureReplicationDetails.prototype['recoveryAzureLogStorageAccountId'] = undefined;

/**
 * The target resource group Id.
 * @member {String} recoveryAzureResourceGroupId
 */
HyperVReplicaAzureReplicationDetails.prototype['recoveryAzureResourceGroupId'] = undefined;

/**
 * The recovery Azure storage account.
 * @member {String} recoveryAzureStorageAccount
 */
HyperVReplicaAzureReplicationDetails.prototype['recoveryAzureStorageAccount'] = undefined;

/**
 * The Recovery Azure VM size.
 * @member {String} recoveryAzureVMSize
 */
HyperVReplicaAzureReplicationDetails.prototype['recoveryAzureVMSize'] = undefined;

/**
 * Recovery Azure given name.
 * @member {String} recoveryAzureVmName
 */
HyperVReplicaAzureReplicationDetails.prototype['recoveryAzureVmName'] = undefined;

/**
 * Last RPO value.
 * @member {Number} rpoInSeconds
 */
HyperVReplicaAzureReplicationDetails.prototype['rpoInSeconds'] = undefined;

/**
 * The selected recovery azure network Id.
 * @member {String} selectedRecoveryAzureNetworkId
 */
HyperVReplicaAzureReplicationDetails.prototype['selectedRecoveryAzureNetworkId'] = undefined;

/**
 * The selected source nic Id which will be used as the primary nic during failover.
 * @member {String} selectedSourceNicId
 */
HyperVReplicaAzureReplicationDetails.prototype['selectedSourceNicId'] = undefined;

/**
 * The CPU count of the VM on the primary side.
 * @member {Number} sourceVmCpuCount
 */
HyperVReplicaAzureReplicationDetails.prototype['sourceVmCpuCount'] = undefined;

/**
 * The RAM size of the VM on the primary side.
 * @member {Number} sourceVmRamSizeInMB
 */
HyperVReplicaAzureReplicationDetails.prototype['sourceVmRamSizeInMB'] = undefined;

/**
 * A value indicating whether managed disks should be used during failover.
 * @member {String} useManagedDisks
 */
HyperVReplicaAzureReplicationDetails.prototype['useManagedDisks'] = undefined;

/**
 * The virtual machine Id.
 * @member {String} vmId
 */
HyperVReplicaAzureReplicationDetails.prototype['vmId'] = undefined;

/**
 * The PE Network details.
 * @member {Array.<module:model/VMNicDetails>} vmNics
 */
HyperVReplicaAzureReplicationDetails.prototype['vmNics'] = undefined;

/**
 * The protection state for the vm.
 * @member {String} vmProtectionState
 */
HyperVReplicaAzureReplicationDetails.prototype['vmProtectionState'] = undefined;

/**
 * The protection state description for the vm.
 * @member {String} vmProtectionStateDescription
 */
HyperVReplicaAzureReplicationDetails.prototype['vmProtectionStateDescription'] = undefined;


// Implement ReplicationProviderSpecificSettings interface:
/**
 * Gets the Instance type.
 * @member {String} instanceType
 */
ReplicationProviderSpecificSettings.prototype['instanceType'] = undefined;




export default HyperVReplicaAzureReplicationDetails;

