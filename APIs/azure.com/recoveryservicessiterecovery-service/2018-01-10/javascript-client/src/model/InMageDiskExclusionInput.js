/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InMageDiskSignatureExclusionOptions from './InMageDiskSignatureExclusionOptions';
import InMageVolumeExclusionOptions from './InMageVolumeExclusionOptions';

/**
 * The InMageDiskExclusionInput model module.
 * @module model/InMageDiskExclusionInput
 * @version 2018-01-10
 */
class InMageDiskExclusionInput {
    /**
     * Constructs a new <code>InMageDiskExclusionInput</code>.
     * DiskExclusionInput when doing enable protection of virtual machine in InMage provider.
     * @alias module:model/InMageDiskExclusionInput
     */
    constructor() { 
        
        InMageDiskExclusionInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InMageDiskExclusionInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InMageDiskExclusionInput} obj Optional instance to populate.
     * @return {module:model/InMageDiskExclusionInput} The populated <code>InMageDiskExclusionInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InMageDiskExclusionInput();

            if (data.hasOwnProperty('diskSignatureOptions')) {
                obj['diskSignatureOptions'] = ApiClient.convertToType(data['diskSignatureOptions'], [InMageDiskSignatureExclusionOptions]);
            }
            if (data.hasOwnProperty('volumeOptions')) {
                obj['volumeOptions'] = ApiClient.convertToType(data['volumeOptions'], [InMageVolumeExclusionOptions]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InMageDiskExclusionInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InMageDiskExclusionInput</code>.
     */
    static validateJSON(data) {
        if (data['diskSignatureOptions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['diskSignatureOptions'])) {
                throw new Error("Expected the field `diskSignatureOptions` to be an array in the JSON data but got " + data['diskSignatureOptions']);
            }
            // validate the optional field `diskSignatureOptions` (array)
            for (const item of data['diskSignatureOptions']) {
                InMageDiskSignatureExclusionOptions.validateJSON(item);
            };
        }
        if (data['volumeOptions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['volumeOptions'])) {
                throw new Error("Expected the field `volumeOptions` to be an array in the JSON data but got " + data['volumeOptions']);
            }
            // validate the optional field `volumeOptions` (array)
            for (const item of data['volumeOptions']) {
                InMageVolumeExclusionOptions.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The guest disk signature based option for disk exclusion.
 * @member {Array.<module:model/InMageDiskSignatureExclusionOptions>} diskSignatureOptions
 */
InMageDiskExclusionInput.prototype['diskSignatureOptions'] = undefined;

/**
 * The volume label based option for disk exclusion.
 * @member {Array.<module:model/InMageVolumeExclusionOptions>} volumeOptions
 */
InMageDiskExclusionInput.prototype['volumeOptions'] = undefined;






export default InMageDiskExclusionInput;

