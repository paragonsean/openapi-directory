/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DiskDetails from './DiskDetails';
import InitialReplicationDetails from './InitialReplicationDetails';
import ReplicationProviderSpecificSettings from './ReplicationProviderSpecificSettings';
import VMNicDetails from './VMNicDetails';

/**
 * The HyperVReplicaBlueReplicationDetails model module.
 * @module model/HyperVReplicaBlueReplicationDetails
 * @version 2018-01-10
 */
class HyperVReplicaBlueReplicationDetails {
    /**
     * Constructs a new <code>HyperVReplicaBlueReplicationDetails</code>.
     * HyperV replica 2012 R2 (Blue) replication details.
     * @alias module:model/HyperVReplicaBlueReplicationDetails
     * @extends module:model/ReplicationProviderSpecificSettings
     * @implements module:model/ReplicationProviderSpecificSettings
     */
    constructor() { 
        ReplicationProviderSpecificSettings.initialize(this);
        HyperVReplicaBlueReplicationDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HyperVReplicaBlueReplicationDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HyperVReplicaBlueReplicationDetails} obj Optional instance to populate.
     * @return {module:model/HyperVReplicaBlueReplicationDetails} The populated <code>HyperVReplicaBlueReplicationDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HyperVReplicaBlueReplicationDetails();
            ReplicationProviderSpecificSettings.constructFromObject(data, obj);
            ReplicationProviderSpecificSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('initialReplicationDetails')) {
                obj['initialReplicationDetails'] = InitialReplicationDetails.constructFromObject(data['initialReplicationDetails']);
            }
            if (data.hasOwnProperty('lastReplicatedTime')) {
                obj['lastReplicatedTime'] = ApiClient.convertToType(data['lastReplicatedTime'], 'Date');
            }
            if (data.hasOwnProperty('vMDiskDetails')) {
                obj['vMDiskDetails'] = ApiClient.convertToType(data['vMDiskDetails'], [DiskDetails]);
            }
            if (data.hasOwnProperty('vmId')) {
                obj['vmId'] = ApiClient.convertToType(data['vmId'], 'String');
            }
            if (data.hasOwnProperty('vmNics')) {
                obj['vmNics'] = ApiClient.convertToType(data['vmNics'], [VMNicDetails]);
            }
            if (data.hasOwnProperty('vmProtectionState')) {
                obj['vmProtectionState'] = ApiClient.convertToType(data['vmProtectionState'], 'String');
            }
            if (data.hasOwnProperty('vmProtectionStateDescription')) {
                obj['vmProtectionStateDescription'] = ApiClient.convertToType(data['vmProtectionStateDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HyperVReplicaBlueReplicationDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HyperVReplicaBlueReplicationDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `initialReplicationDetails`
        if (data['initialReplicationDetails']) { // data not null
          InitialReplicationDetails.validateJSON(data['initialReplicationDetails']);
        }
        if (data['vMDiskDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vMDiskDetails'])) {
                throw new Error("Expected the field `vMDiskDetails` to be an array in the JSON data but got " + data['vMDiskDetails']);
            }
            // validate the optional field `vMDiskDetails` (array)
            for (const item of data['vMDiskDetails']) {
                DiskDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['vmId'] && !(typeof data['vmId'] === 'string' || data['vmId'] instanceof String)) {
            throw new Error("Expected the field `vmId` to be a primitive type in the JSON string but got " + data['vmId']);
        }
        if (data['vmNics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vmNics'])) {
                throw new Error("Expected the field `vmNics` to be an array in the JSON data but got " + data['vmNics']);
            }
            // validate the optional field `vmNics` (array)
            for (const item of data['vmNics']) {
                VMNicDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['vmProtectionState'] && !(typeof data['vmProtectionState'] === 'string' || data['vmProtectionState'] instanceof String)) {
            throw new Error("Expected the field `vmProtectionState` to be a primitive type in the JSON string but got " + data['vmProtectionState']);
        }
        // ensure the json data is a string
        if (data['vmProtectionStateDescription'] && !(typeof data['vmProtectionStateDescription'] === 'string' || data['vmProtectionStateDescription'] instanceof String)) {
            throw new Error("Expected the field `vmProtectionStateDescription` to be a primitive type in the JSON string but got " + data['vmProtectionStateDescription']);
        }

        return true;
    }


}



/**
 * @member {module:model/InitialReplicationDetails} initialReplicationDetails
 */
HyperVReplicaBlueReplicationDetails.prototype['initialReplicationDetails'] = undefined;

/**
 * The Last replication time.
 * @member {Date} lastReplicatedTime
 */
HyperVReplicaBlueReplicationDetails.prototype['lastReplicatedTime'] = undefined;

/**
 * VM disk details.
 * @member {Array.<module:model/DiskDetails>} vMDiskDetails
 */
HyperVReplicaBlueReplicationDetails.prototype['vMDiskDetails'] = undefined;

/**
 * The virtual machine Id.
 * @member {String} vmId
 */
HyperVReplicaBlueReplicationDetails.prototype['vmId'] = undefined;

/**
 * The PE Network details.
 * @member {Array.<module:model/VMNicDetails>} vmNics
 */
HyperVReplicaBlueReplicationDetails.prototype['vmNics'] = undefined;

/**
 * The protection state for the vm.
 * @member {String} vmProtectionState
 */
HyperVReplicaBlueReplicationDetails.prototype['vmProtectionState'] = undefined;

/**
 * The protection state description for the vm.
 * @member {String} vmProtectionStateDescription
 */
HyperVReplicaBlueReplicationDetails.prototype['vmProtectionStateDescription'] = undefined;


// Implement ReplicationProviderSpecificSettings interface:
/**
 * Gets the Instance type.
 * @member {String} instanceType
 */
ReplicationProviderSpecificSettings.prototype['instanceType'] = undefined;




export default HyperVReplicaBlueReplicationDetails;

