/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VMNicDetails model module.
 * @module model/VMNicDetails
 * @version 2018-01-10
 */
class VMNicDetails {
    /**
     * Constructs a new <code>VMNicDetails</code>.
     * Hyper V VM network details.
     * @alias module:model/VMNicDetails
     */
    constructor() { 
        
        VMNicDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VMNicDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VMNicDetails} obj Optional instance to populate.
     * @return {module:model/VMNicDetails} The populated <code>VMNicDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VMNicDetails();

            if (data.hasOwnProperty('enableAcceleratedNetworkingOnRecovery')) {
                obj['enableAcceleratedNetworkingOnRecovery'] = ApiClient.convertToType(data['enableAcceleratedNetworkingOnRecovery'], 'Boolean');
            }
            if (data.hasOwnProperty('ipAddressType')) {
                obj['ipAddressType'] = ApiClient.convertToType(data['ipAddressType'], 'String');
            }
            if (data.hasOwnProperty('nicId')) {
                obj['nicId'] = ApiClient.convertToType(data['nicId'], 'String');
            }
            if (data.hasOwnProperty('primaryNicStaticIPAddress')) {
                obj['primaryNicStaticIPAddress'] = ApiClient.convertToType(data['primaryNicStaticIPAddress'], 'String');
            }
            if (data.hasOwnProperty('recoveryNicIpAddressType')) {
                obj['recoveryNicIpAddressType'] = ApiClient.convertToType(data['recoveryNicIpAddressType'], 'String');
            }
            if (data.hasOwnProperty('recoveryVMNetworkId')) {
                obj['recoveryVMNetworkId'] = ApiClient.convertToType(data['recoveryVMNetworkId'], 'String');
            }
            if (data.hasOwnProperty('recoveryVMSubnetName')) {
                obj['recoveryVMSubnetName'] = ApiClient.convertToType(data['recoveryVMSubnetName'], 'String');
            }
            if (data.hasOwnProperty('replicaNicId')) {
                obj['replicaNicId'] = ApiClient.convertToType(data['replicaNicId'], 'String');
            }
            if (data.hasOwnProperty('replicaNicStaticIPAddress')) {
                obj['replicaNicStaticIPAddress'] = ApiClient.convertToType(data['replicaNicStaticIPAddress'], 'String');
            }
            if (data.hasOwnProperty('selectionType')) {
                obj['selectionType'] = ApiClient.convertToType(data['selectionType'], 'String');
            }
            if (data.hasOwnProperty('sourceNicArmId')) {
                obj['sourceNicArmId'] = ApiClient.convertToType(data['sourceNicArmId'], 'String');
            }
            if (data.hasOwnProperty('vMNetworkName')) {
                obj['vMNetworkName'] = ApiClient.convertToType(data['vMNetworkName'], 'String');
            }
            if (data.hasOwnProperty('vMSubnetName')) {
                obj['vMSubnetName'] = ApiClient.convertToType(data['vMSubnetName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VMNicDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VMNicDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ipAddressType'] && !(typeof data['ipAddressType'] === 'string' || data['ipAddressType'] instanceof String)) {
            throw new Error("Expected the field `ipAddressType` to be a primitive type in the JSON string but got " + data['ipAddressType']);
        }
        // ensure the json data is a string
        if (data['nicId'] && !(typeof data['nicId'] === 'string' || data['nicId'] instanceof String)) {
            throw new Error("Expected the field `nicId` to be a primitive type in the JSON string but got " + data['nicId']);
        }
        // ensure the json data is a string
        if (data['primaryNicStaticIPAddress'] && !(typeof data['primaryNicStaticIPAddress'] === 'string' || data['primaryNicStaticIPAddress'] instanceof String)) {
            throw new Error("Expected the field `primaryNicStaticIPAddress` to be a primitive type in the JSON string but got " + data['primaryNicStaticIPAddress']);
        }
        // ensure the json data is a string
        if (data['recoveryNicIpAddressType'] && !(typeof data['recoveryNicIpAddressType'] === 'string' || data['recoveryNicIpAddressType'] instanceof String)) {
            throw new Error("Expected the field `recoveryNicIpAddressType` to be a primitive type in the JSON string but got " + data['recoveryNicIpAddressType']);
        }
        // ensure the json data is a string
        if (data['recoveryVMNetworkId'] && !(typeof data['recoveryVMNetworkId'] === 'string' || data['recoveryVMNetworkId'] instanceof String)) {
            throw new Error("Expected the field `recoveryVMNetworkId` to be a primitive type in the JSON string but got " + data['recoveryVMNetworkId']);
        }
        // ensure the json data is a string
        if (data['recoveryVMSubnetName'] && !(typeof data['recoveryVMSubnetName'] === 'string' || data['recoveryVMSubnetName'] instanceof String)) {
            throw new Error("Expected the field `recoveryVMSubnetName` to be a primitive type in the JSON string but got " + data['recoveryVMSubnetName']);
        }
        // ensure the json data is a string
        if (data['replicaNicId'] && !(typeof data['replicaNicId'] === 'string' || data['replicaNicId'] instanceof String)) {
            throw new Error("Expected the field `replicaNicId` to be a primitive type in the JSON string but got " + data['replicaNicId']);
        }
        // ensure the json data is a string
        if (data['replicaNicStaticIPAddress'] && !(typeof data['replicaNicStaticIPAddress'] === 'string' || data['replicaNicStaticIPAddress'] instanceof String)) {
            throw new Error("Expected the field `replicaNicStaticIPAddress` to be a primitive type in the JSON string but got " + data['replicaNicStaticIPAddress']);
        }
        // ensure the json data is a string
        if (data['selectionType'] && !(typeof data['selectionType'] === 'string' || data['selectionType'] instanceof String)) {
            throw new Error("Expected the field `selectionType` to be a primitive type in the JSON string but got " + data['selectionType']);
        }
        // ensure the json data is a string
        if (data['sourceNicArmId'] && !(typeof data['sourceNicArmId'] === 'string' || data['sourceNicArmId'] instanceof String)) {
            throw new Error("Expected the field `sourceNicArmId` to be a primitive type in the JSON string but got " + data['sourceNicArmId']);
        }
        // ensure the json data is a string
        if (data['vMNetworkName'] && !(typeof data['vMNetworkName'] === 'string' || data['vMNetworkName'] instanceof String)) {
            throw new Error("Expected the field `vMNetworkName` to be a primitive type in the JSON string but got " + data['vMNetworkName']);
        }
        // ensure the json data is a string
        if (data['vMSubnetName'] && !(typeof data['vMSubnetName'] === 'string' || data['vMSubnetName'] instanceof String)) {
            throw new Error("Expected the field `vMSubnetName` to be a primitive type in the JSON string but got " + data['vMSubnetName']);
        }

        return true;
    }


}



/**
 * A value indicating whether the NIC has accelerated networking enabled.
 * @member {Boolean} enableAcceleratedNetworkingOnRecovery
 */
VMNicDetails.prototype['enableAcceleratedNetworkingOnRecovery'] = undefined;

/**
 * Ip address type.
 * @member {String} ipAddressType
 */
VMNicDetails.prototype['ipAddressType'] = undefined;

/**
 * The nic Id.
 * @member {String} nicId
 */
VMNicDetails.prototype['nicId'] = undefined;

/**
 * Primary nic static IP address.
 * @member {String} primaryNicStaticIPAddress
 */
VMNicDetails.prototype['primaryNicStaticIPAddress'] = undefined;

/**
 * IP allocation type for recovery VM.
 * @member {String} recoveryNicIpAddressType
 */
VMNicDetails.prototype['recoveryNicIpAddressType'] = undefined;

/**
 * Recovery VM network Id.
 * @member {String} recoveryVMNetworkId
 */
VMNicDetails.prototype['recoveryVMNetworkId'] = undefined;

/**
 * Recovery VM subnet name.
 * @member {String} recoveryVMSubnetName
 */
VMNicDetails.prototype['recoveryVMSubnetName'] = undefined;

/**
 * The replica nic Id.
 * @member {String} replicaNicId
 */
VMNicDetails.prototype['replicaNicId'] = undefined;

/**
 * Replica nic static IP address.
 * @member {String} replicaNicStaticIPAddress
 */
VMNicDetails.prototype['replicaNicStaticIPAddress'] = undefined;

/**
 * Selection type for failover.
 * @member {String} selectionType
 */
VMNicDetails.prototype['selectionType'] = undefined;

/**
 * The source nic ARM Id.
 * @member {String} sourceNicArmId
 */
VMNicDetails.prototype['sourceNicArmId'] = undefined;

/**
 * VM network name.
 * @member {String} vMNetworkName
 */
VMNicDetails.prototype['vMNetworkName'] = undefined;

/**
 * VM subnet name.
 * @member {String} vMSubnetName
 */
VMNicDetails.prototype['vMSubnetName'] = undefined;






export default VMNicDetails;

