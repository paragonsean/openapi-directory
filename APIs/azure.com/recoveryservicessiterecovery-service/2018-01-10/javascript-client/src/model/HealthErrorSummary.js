/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HealthErrorSummary model module.
 * @module model/HealthErrorSummary
 * @version 2018-01-10
 */
class HealthErrorSummary {
    /**
     * Constructs a new <code>HealthErrorSummary</code>.
     * class to define the summary of the health error details.
     * @alias module:model/HealthErrorSummary
     */
    constructor() { 
        
        HealthErrorSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HealthErrorSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HealthErrorSummary} obj Optional instance to populate.
     * @return {module:model/HealthErrorSummary} The populated <code>HealthErrorSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HealthErrorSummary();

            if (data.hasOwnProperty('affectedResourceCorrelationIds')) {
                obj['affectedResourceCorrelationIds'] = ApiClient.convertToType(data['affectedResourceCorrelationIds'], ['String']);
            }
            if (data.hasOwnProperty('affectedResourceSubtype')) {
                obj['affectedResourceSubtype'] = ApiClient.convertToType(data['affectedResourceSubtype'], 'String');
            }
            if (data.hasOwnProperty('affectedResourceType')) {
                obj['affectedResourceType'] = ApiClient.convertToType(data['affectedResourceType'], 'String');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('summaryCode')) {
                obj['summaryCode'] = ApiClient.convertToType(data['summaryCode'], 'String');
            }
            if (data.hasOwnProperty('summaryMessage')) {
                obj['summaryMessage'] = ApiClient.convertToType(data['summaryMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HealthErrorSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HealthErrorSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['affectedResourceCorrelationIds'])) {
            throw new Error("Expected the field `affectedResourceCorrelationIds` to be an array in the JSON data but got " + data['affectedResourceCorrelationIds']);
        }
        // ensure the json data is a string
        if (data['affectedResourceSubtype'] && !(typeof data['affectedResourceSubtype'] === 'string' || data['affectedResourceSubtype'] instanceof String)) {
            throw new Error("Expected the field `affectedResourceSubtype` to be a primitive type in the JSON string but got " + data['affectedResourceSubtype']);
        }
        // ensure the json data is a string
        if (data['affectedResourceType'] && !(typeof data['affectedResourceType'] === 'string' || data['affectedResourceType'] instanceof String)) {
            throw new Error("Expected the field `affectedResourceType` to be a primitive type in the JSON string but got " + data['affectedResourceType']);
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }
        // ensure the json data is a string
        if (data['summaryCode'] && !(typeof data['summaryCode'] === 'string' || data['summaryCode'] instanceof String)) {
            throw new Error("Expected the field `summaryCode` to be a primitive type in the JSON string but got " + data['summaryCode']);
        }
        // ensure the json data is a string
        if (data['summaryMessage'] && !(typeof data['summaryMessage'] === 'string' || data['summaryMessage'] instanceof String)) {
            throw new Error("Expected the field `summaryMessage` to be a primitive type in the JSON string but got " + data['summaryMessage']);
        }

        return true;
    }


}



/**
 * The list of affected resource correlation Ids. This can be used to uniquely identify the count of items affected by a specific category and severity as well as count of item affected by an specific issue.
 * @member {Array.<String>} affectedResourceCorrelationIds
 */
HealthErrorSummary.prototype['affectedResourceCorrelationIds'] = undefined;

/**
 * The sub type of any subcomponent within the ARM resource that this might be applicable. Value remains null if not applicable.
 * @member {String} affectedResourceSubtype
 */
HealthErrorSummary.prototype['affectedResourceSubtype'] = undefined;

/**
 * The type of affected ARM resource.
 * @member {String} affectedResourceType
 */
HealthErrorSummary.prototype['affectedResourceType'] = undefined;

/**
 * The category of the health error.
 * @member {module:model/HealthErrorSummary.CategoryEnum} category
 */
HealthErrorSummary.prototype['category'] = undefined;

/**
 * Severity of error.
 * @member {module:model/HealthErrorSummary.SeverityEnum} severity
 */
HealthErrorSummary.prototype['severity'] = undefined;

/**
 * The code of the health error.
 * @member {String} summaryCode
 */
HealthErrorSummary.prototype['summaryCode'] = undefined;

/**
 * The summary message of the health error.
 * @member {String} summaryMessage
 */
HealthErrorSummary.prototype['summaryMessage'] = undefined;





/**
 * Allowed values for the <code>category</code> property.
 * @enum {String}
 * @readonly
 */
HealthErrorSummary['CategoryEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Replication"
     * @const
     */
    "Replication": "Replication",

    /**
     * value: "TestFailover"
     * @const
     */
    "TestFailover": "TestFailover",

    /**
     * value: "Configuration"
     * @const
     */
    "Configuration": "Configuration",

    /**
     * value: "FabricInfrastructure"
     * @const
     */
    "FabricInfrastructure": "FabricInfrastructure",

    /**
     * value: "VersionExpiry"
     * @const
     */
    "VersionExpiry": "VersionExpiry",

    /**
     * value: "AgentAutoUpdate"
     * @const
     */
    "AgentAutoUpdate": "AgentAutoUpdate"
};


/**
 * Allowed values for the <code>severity</code> property.
 * @enum {String}
 * @readonly
 */
HealthErrorSummary['SeverityEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "Warning"
     * @const
     */
    "Warning": "Warning",

    /**
     * value: "Error"
     * @const
     */
    "Error": "Error",

    /**
     * value: "Info"
     * @const
     */
    "Info": "Info"
};



export default HealthErrorSummary;

