/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InconsistentVmDetails model module.
 * @module model/InconsistentVmDetails
 * @version 2018-01-10
 */
class InconsistentVmDetails {
    /**
     * Constructs a new <code>InconsistentVmDetails</code>.
     * This class stores the monitoring details for consistency check of inconsistent Protected Entity.
     * @alias module:model/InconsistentVmDetails
     */
    constructor() { 
        
        InconsistentVmDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InconsistentVmDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InconsistentVmDetails} obj Optional instance to populate.
     * @return {module:model/InconsistentVmDetails} The populated <code>InconsistentVmDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InconsistentVmDetails();

            if (data.hasOwnProperty('cloudName')) {
                obj['cloudName'] = ApiClient.convertToType(data['cloudName'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], ['String']);
            }
            if (data.hasOwnProperty('errorIds')) {
                obj['errorIds'] = ApiClient.convertToType(data['errorIds'], ['String']);
            }
            if (data.hasOwnProperty('vmName')) {
                obj['vmName'] = ApiClient.convertToType(data['vmName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InconsistentVmDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InconsistentVmDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cloudName'] && !(typeof data['cloudName'] === 'string' || data['cloudName'] instanceof String)) {
            throw new Error("Expected the field `cloudName` to be a primitive type in the JSON string but got " + data['cloudName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['details'])) {
            throw new Error("Expected the field `details` to be an array in the JSON data but got " + data['details']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['errorIds'])) {
            throw new Error("Expected the field `errorIds` to be an array in the JSON data but got " + data['errorIds']);
        }
        // ensure the json data is a string
        if (data['vmName'] && !(typeof data['vmName'] === 'string' || data['vmName'] instanceof String)) {
            throw new Error("Expected the field `vmName` to be a primitive type in the JSON string but got " + data['vmName']);
        }

        return true;
    }


}



/**
 * The Cloud name.
 * @member {String} cloudName
 */
InconsistentVmDetails.prototype['cloudName'] = undefined;

/**
 * The list of details regarding state of the Protected Entity in SRS and On prem.
 * @member {Array.<String>} details
 */
InconsistentVmDetails.prototype['details'] = undefined;

/**
 * The list of error ids.
 * @member {Array.<String>} errorIds
 */
InconsistentVmDetails.prototype['errorIds'] = undefined;

/**
 * The Vm name.
 * @member {String} vmName
 */
InconsistentVmDetails.prototype['vmName'] = undefined;






export default InconsistentVmDetails;

