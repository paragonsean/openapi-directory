/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthError from './HealthError';
import IdentityProviderDetails from './IdentityProviderDetails';
import VersionDetails from './VersionDetails';

/**
 * The RecoveryServicesProviderProperties model module.
 * @module model/RecoveryServicesProviderProperties
 * @version 2018-01-10
 */
class RecoveryServicesProviderProperties {
    /**
     * Constructs a new <code>RecoveryServicesProviderProperties</code>.
     * Recovery services provider properties.
     * @alias module:model/RecoveryServicesProviderProperties
     */
    constructor() { 
        
        RecoveryServicesProviderProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RecoveryServicesProviderProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RecoveryServicesProviderProperties} obj Optional instance to populate.
     * @return {module:model/RecoveryServicesProviderProperties} The populated <code>RecoveryServicesProviderProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecoveryServicesProviderProperties();

            if (data.hasOwnProperty('allowedScenarios')) {
                obj['allowedScenarios'] = ApiClient.convertToType(data['allowedScenarios'], ['String']);
            }
            if (data.hasOwnProperty('authenticationIdentityDetails')) {
                obj['authenticationIdentityDetails'] = IdentityProviderDetails.constructFromObject(data['authenticationIdentityDetails']);
            }
            if (data.hasOwnProperty('connectionStatus')) {
                obj['connectionStatus'] = ApiClient.convertToType(data['connectionStatus'], 'String');
            }
            if (data.hasOwnProperty('draIdentifier')) {
                obj['draIdentifier'] = ApiClient.convertToType(data['draIdentifier'], 'String');
            }
            if (data.hasOwnProperty('fabricFriendlyName')) {
                obj['fabricFriendlyName'] = ApiClient.convertToType(data['fabricFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('fabricType')) {
                obj['fabricType'] = ApiClient.convertToType(data['fabricType'], 'String');
            }
            if (data.hasOwnProperty('friendlyName')) {
                obj['friendlyName'] = ApiClient.convertToType(data['friendlyName'], 'String');
            }
            if (data.hasOwnProperty('healthErrorDetails')) {
                obj['healthErrorDetails'] = ApiClient.convertToType(data['healthErrorDetails'], [HealthError]);
            }
            if (data.hasOwnProperty('lastHeartBeat')) {
                obj['lastHeartBeat'] = ApiClient.convertToType(data['lastHeartBeat'], 'Date');
            }
            if (data.hasOwnProperty('protectedItemCount')) {
                obj['protectedItemCount'] = ApiClient.convertToType(data['protectedItemCount'], 'Number');
            }
            if (data.hasOwnProperty('providerVersion')) {
                obj['providerVersion'] = ApiClient.convertToType(data['providerVersion'], 'String');
            }
            if (data.hasOwnProperty('providerVersionDetails')) {
                obj['providerVersionDetails'] = VersionDetails.constructFromObject(data['providerVersionDetails']);
            }
            if (data.hasOwnProperty('providerVersionExpiryDate')) {
                obj['providerVersionExpiryDate'] = ApiClient.convertToType(data['providerVersionExpiryDate'], 'Date');
            }
            if (data.hasOwnProperty('providerVersionState')) {
                obj['providerVersionState'] = ApiClient.convertToType(data['providerVersionState'], 'String');
            }
            if (data.hasOwnProperty('resourceAccessIdentityDetails')) {
                obj['resourceAccessIdentityDetails'] = IdentityProviderDetails.constructFromObject(data['resourceAccessIdentityDetails']);
            }
            if (data.hasOwnProperty('serverVersion')) {
                obj['serverVersion'] = ApiClient.convertToType(data['serverVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RecoveryServicesProviderProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RecoveryServicesProviderProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowedScenarios'])) {
            throw new Error("Expected the field `allowedScenarios` to be an array in the JSON data but got " + data['allowedScenarios']);
        }
        // validate the optional field `authenticationIdentityDetails`
        if (data['authenticationIdentityDetails']) { // data not null
          IdentityProviderDetails.validateJSON(data['authenticationIdentityDetails']);
        }
        // ensure the json data is a string
        if (data['connectionStatus'] && !(typeof data['connectionStatus'] === 'string' || data['connectionStatus'] instanceof String)) {
            throw new Error("Expected the field `connectionStatus` to be a primitive type in the JSON string but got " + data['connectionStatus']);
        }
        // ensure the json data is a string
        if (data['draIdentifier'] && !(typeof data['draIdentifier'] === 'string' || data['draIdentifier'] instanceof String)) {
            throw new Error("Expected the field `draIdentifier` to be a primitive type in the JSON string but got " + data['draIdentifier']);
        }
        // ensure the json data is a string
        if (data['fabricFriendlyName'] && !(typeof data['fabricFriendlyName'] === 'string' || data['fabricFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `fabricFriendlyName` to be a primitive type in the JSON string but got " + data['fabricFriendlyName']);
        }
        // ensure the json data is a string
        if (data['fabricType'] && !(typeof data['fabricType'] === 'string' || data['fabricType'] instanceof String)) {
            throw new Error("Expected the field `fabricType` to be a primitive type in the JSON string but got " + data['fabricType']);
        }
        // ensure the json data is a string
        if (data['friendlyName'] && !(typeof data['friendlyName'] === 'string' || data['friendlyName'] instanceof String)) {
            throw new Error("Expected the field `friendlyName` to be a primitive type in the JSON string but got " + data['friendlyName']);
        }
        if (data['healthErrorDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['healthErrorDetails'])) {
                throw new Error("Expected the field `healthErrorDetails` to be an array in the JSON data but got " + data['healthErrorDetails']);
            }
            // validate the optional field `healthErrorDetails` (array)
            for (const item of data['healthErrorDetails']) {
                HealthError.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['providerVersion'] && !(typeof data['providerVersion'] === 'string' || data['providerVersion'] instanceof String)) {
            throw new Error("Expected the field `providerVersion` to be a primitive type in the JSON string but got " + data['providerVersion']);
        }
        // validate the optional field `providerVersionDetails`
        if (data['providerVersionDetails']) { // data not null
          VersionDetails.validateJSON(data['providerVersionDetails']);
        }
        // ensure the json data is a string
        if (data['providerVersionState'] && !(typeof data['providerVersionState'] === 'string' || data['providerVersionState'] instanceof String)) {
            throw new Error("Expected the field `providerVersionState` to be a primitive type in the JSON string but got " + data['providerVersionState']);
        }
        // validate the optional field `resourceAccessIdentityDetails`
        if (data['resourceAccessIdentityDetails']) { // data not null
          IdentityProviderDetails.validateJSON(data['resourceAccessIdentityDetails']);
        }
        // ensure the json data is a string
        if (data['serverVersion'] && !(typeof data['serverVersion'] === 'string' || data['serverVersion'] instanceof String)) {
            throw new Error("Expected the field `serverVersion` to be a primitive type in the JSON string but got " + data['serverVersion']);
        }

        return true;
    }


}



/**
 * The scenarios allowed on this provider.
 * @member {Array.<String>} allowedScenarios
 */
RecoveryServicesProviderProperties.prototype['allowedScenarios'] = undefined;

/**
 * @member {module:model/IdentityProviderDetails} authenticationIdentityDetails
 */
RecoveryServicesProviderProperties.prototype['authenticationIdentityDetails'] = undefined;

/**
 * A value indicating whether DRA is responsive.
 * @member {String} connectionStatus
 */
RecoveryServicesProviderProperties.prototype['connectionStatus'] = undefined;

/**
 * The DRA Id.
 * @member {String} draIdentifier
 */
RecoveryServicesProviderProperties.prototype['draIdentifier'] = undefined;

/**
 * The fabric friendly name.
 * @member {String} fabricFriendlyName
 */
RecoveryServicesProviderProperties.prototype['fabricFriendlyName'] = undefined;

/**
 * Type of the site.
 * @member {String} fabricType
 */
RecoveryServicesProviderProperties.prototype['fabricType'] = undefined;

/**
 * Friendly name of the DRA.
 * @member {String} friendlyName
 */
RecoveryServicesProviderProperties.prototype['friendlyName'] = undefined;

/**
 * The recovery services provider health error details.
 * @member {Array.<module:model/HealthError>} healthErrorDetails
 */
RecoveryServicesProviderProperties.prototype['healthErrorDetails'] = undefined;

/**
 * Time when last heartbeat was sent by the DRA.
 * @member {Date} lastHeartBeat
 */
RecoveryServicesProviderProperties.prototype['lastHeartBeat'] = undefined;

/**
 * Number of protected VMs currently managed by the DRA.
 * @member {Number} protectedItemCount
 */
RecoveryServicesProviderProperties.prototype['protectedItemCount'] = undefined;

/**
 * The provider version.
 * @member {String} providerVersion
 */
RecoveryServicesProviderProperties.prototype['providerVersion'] = undefined;

/**
 * @member {module:model/VersionDetails} providerVersionDetails
 */
RecoveryServicesProviderProperties.prototype['providerVersionDetails'] = undefined;

/**
 * Expiry date of the version.
 * @member {Date} providerVersionExpiryDate
 */
RecoveryServicesProviderProperties.prototype['providerVersionExpiryDate'] = undefined;

/**
 * DRA version status.
 * @member {String} providerVersionState
 */
RecoveryServicesProviderProperties.prototype['providerVersionState'] = undefined;

/**
 * @member {module:model/IdentityProviderDetails} resourceAccessIdentityDetails
 */
RecoveryServicesProviderProperties.prototype['resourceAccessIdentityDetails'] = undefined;

/**
 * The fabric provider.
 * @member {String} serverVersion
 */
RecoveryServicesProviderProperties.prototype['serverVersion'] = undefined;






export default RecoveryServicesProviderProperties;

