/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CurrentScenarioDetails from './CurrentScenarioDetails';
import RecoveryPlanGroup from './RecoveryPlanGroup';

/**
 * The RecoveryPlanProperties model module.
 * @module model/RecoveryPlanProperties
 * @version 2018-01-10
 */
class RecoveryPlanProperties {
    /**
     * Constructs a new <code>RecoveryPlanProperties</code>.
     * Recovery plan custom details.
     * @alias module:model/RecoveryPlanProperties
     */
    constructor() { 
        
        RecoveryPlanProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RecoveryPlanProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RecoveryPlanProperties} obj Optional instance to populate.
     * @return {module:model/RecoveryPlanProperties} The populated <code>RecoveryPlanProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecoveryPlanProperties();

            if (data.hasOwnProperty('allowedOperations')) {
                obj['allowedOperations'] = ApiClient.convertToType(data['allowedOperations'], ['String']);
            }
            if (data.hasOwnProperty('currentScenario')) {
                obj['currentScenario'] = CurrentScenarioDetails.constructFromObject(data['currentScenario']);
            }
            if (data.hasOwnProperty('currentScenarioStatus')) {
                obj['currentScenarioStatus'] = ApiClient.convertToType(data['currentScenarioStatus'], 'String');
            }
            if (data.hasOwnProperty('currentScenarioStatusDescription')) {
                obj['currentScenarioStatusDescription'] = ApiClient.convertToType(data['currentScenarioStatusDescription'], 'String');
            }
            if (data.hasOwnProperty('failoverDeploymentModel')) {
                obj['failoverDeploymentModel'] = ApiClient.convertToType(data['failoverDeploymentModel'], 'String');
            }
            if (data.hasOwnProperty('friendlyName')) {
                obj['friendlyName'] = ApiClient.convertToType(data['friendlyName'], 'String');
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], [RecoveryPlanGroup]);
            }
            if (data.hasOwnProperty('lastPlannedFailoverTime')) {
                obj['lastPlannedFailoverTime'] = ApiClient.convertToType(data['lastPlannedFailoverTime'], 'Date');
            }
            if (data.hasOwnProperty('lastTestFailoverTime')) {
                obj['lastTestFailoverTime'] = ApiClient.convertToType(data['lastTestFailoverTime'], 'Date');
            }
            if (data.hasOwnProperty('lastUnplannedFailoverTime')) {
                obj['lastUnplannedFailoverTime'] = ApiClient.convertToType(data['lastUnplannedFailoverTime'], 'Date');
            }
            if (data.hasOwnProperty('primaryFabricFriendlyName')) {
                obj['primaryFabricFriendlyName'] = ApiClient.convertToType(data['primaryFabricFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('primaryFabricId')) {
                obj['primaryFabricId'] = ApiClient.convertToType(data['primaryFabricId'], 'String');
            }
            if (data.hasOwnProperty('recoveryFabricFriendlyName')) {
                obj['recoveryFabricFriendlyName'] = ApiClient.convertToType(data['recoveryFabricFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('recoveryFabricId')) {
                obj['recoveryFabricId'] = ApiClient.convertToType(data['recoveryFabricId'], 'String');
            }
            if (data.hasOwnProperty('replicationProviders')) {
                obj['replicationProviders'] = ApiClient.convertToType(data['replicationProviders'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RecoveryPlanProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RecoveryPlanProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowedOperations'])) {
            throw new Error("Expected the field `allowedOperations` to be an array in the JSON data but got " + data['allowedOperations']);
        }
        // validate the optional field `currentScenario`
        if (data['currentScenario']) { // data not null
          CurrentScenarioDetails.validateJSON(data['currentScenario']);
        }
        // ensure the json data is a string
        if (data['currentScenarioStatus'] && !(typeof data['currentScenarioStatus'] === 'string' || data['currentScenarioStatus'] instanceof String)) {
            throw new Error("Expected the field `currentScenarioStatus` to be a primitive type in the JSON string but got " + data['currentScenarioStatus']);
        }
        // ensure the json data is a string
        if (data['currentScenarioStatusDescription'] && !(typeof data['currentScenarioStatusDescription'] === 'string' || data['currentScenarioStatusDescription'] instanceof String)) {
            throw new Error("Expected the field `currentScenarioStatusDescription` to be a primitive type in the JSON string but got " + data['currentScenarioStatusDescription']);
        }
        // ensure the json data is a string
        if (data['failoverDeploymentModel'] && !(typeof data['failoverDeploymentModel'] === 'string' || data['failoverDeploymentModel'] instanceof String)) {
            throw new Error("Expected the field `failoverDeploymentModel` to be a primitive type in the JSON string but got " + data['failoverDeploymentModel']);
        }
        // ensure the json data is a string
        if (data['friendlyName'] && !(typeof data['friendlyName'] === 'string' || data['friendlyName'] instanceof String)) {
            throw new Error("Expected the field `friendlyName` to be a primitive type in the JSON string but got " + data['friendlyName']);
        }
        if (data['groups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['groups'])) {
                throw new Error("Expected the field `groups` to be an array in the JSON data but got " + data['groups']);
            }
            // validate the optional field `groups` (array)
            for (const item of data['groups']) {
                RecoveryPlanGroup.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['primaryFabricFriendlyName'] && !(typeof data['primaryFabricFriendlyName'] === 'string' || data['primaryFabricFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `primaryFabricFriendlyName` to be a primitive type in the JSON string but got " + data['primaryFabricFriendlyName']);
        }
        // ensure the json data is a string
        if (data['primaryFabricId'] && !(typeof data['primaryFabricId'] === 'string' || data['primaryFabricId'] instanceof String)) {
            throw new Error("Expected the field `primaryFabricId` to be a primitive type in the JSON string but got " + data['primaryFabricId']);
        }
        // ensure the json data is a string
        if (data['recoveryFabricFriendlyName'] && !(typeof data['recoveryFabricFriendlyName'] === 'string' || data['recoveryFabricFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `recoveryFabricFriendlyName` to be a primitive type in the JSON string but got " + data['recoveryFabricFriendlyName']);
        }
        // ensure the json data is a string
        if (data['recoveryFabricId'] && !(typeof data['recoveryFabricId'] === 'string' || data['recoveryFabricId'] instanceof String)) {
            throw new Error("Expected the field `recoveryFabricId` to be a primitive type in the JSON string but got " + data['recoveryFabricId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['replicationProviders'])) {
            throw new Error("Expected the field `replicationProviders` to be an array in the JSON data but got " + data['replicationProviders']);
        }

        return true;
    }


}



/**
 * The list of allowed operations.
 * @member {Array.<String>} allowedOperations
 */
RecoveryPlanProperties.prototype['allowedOperations'] = undefined;

/**
 * @member {module:model/CurrentScenarioDetails} currentScenario
 */
RecoveryPlanProperties.prototype['currentScenario'] = undefined;

/**
 * The recovery plan status.
 * @member {String} currentScenarioStatus
 */
RecoveryPlanProperties.prototype['currentScenarioStatus'] = undefined;

/**
 * The recovery plan status description.
 * @member {String} currentScenarioStatusDescription
 */
RecoveryPlanProperties.prototype['currentScenarioStatusDescription'] = undefined;

/**
 * The failover deployment model.
 * @member {String} failoverDeploymentModel
 */
RecoveryPlanProperties.prototype['failoverDeploymentModel'] = undefined;

/**
 * The friendly name.
 * @member {String} friendlyName
 */
RecoveryPlanProperties.prototype['friendlyName'] = undefined;

/**
 * The recovery plan groups.
 * @member {Array.<module:model/RecoveryPlanGroup>} groups
 */
RecoveryPlanProperties.prototype['groups'] = undefined;

/**
 * The start time of the last planned failover.
 * @member {Date} lastPlannedFailoverTime
 */
RecoveryPlanProperties.prototype['lastPlannedFailoverTime'] = undefined;

/**
 * The start time of the last test failover.
 * @member {Date} lastTestFailoverTime
 */
RecoveryPlanProperties.prototype['lastTestFailoverTime'] = undefined;

/**
 * The start time of the last unplanned failover.
 * @member {Date} lastUnplannedFailoverTime
 */
RecoveryPlanProperties.prototype['lastUnplannedFailoverTime'] = undefined;

/**
 * The primary fabric friendly name.
 * @member {String} primaryFabricFriendlyName
 */
RecoveryPlanProperties.prototype['primaryFabricFriendlyName'] = undefined;

/**
 * The primary fabric Id.
 * @member {String} primaryFabricId
 */
RecoveryPlanProperties.prototype['primaryFabricId'] = undefined;

/**
 * The recovery fabric friendly name.
 * @member {String} recoveryFabricFriendlyName
 */
RecoveryPlanProperties.prototype['recoveryFabricFriendlyName'] = undefined;

/**
 * The recovery fabric Id.
 * @member {String} recoveryFabricId
 */
RecoveryPlanProperties.prototype['recoveryFabricId'] = undefined;

/**
 * The list of replication providers.
 * @member {Array.<String>} replicationProviders
 */
RecoveryPlanProperties.prototype['replicationProviders'] = undefined;






export default RecoveryPlanProperties;

