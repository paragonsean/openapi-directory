/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FailoverReplicationProtectedItemDetails model module.
 * @module model/FailoverReplicationProtectedItemDetails
 * @version 2018-01-10
 */
class FailoverReplicationProtectedItemDetails {
    /**
     * Constructs a new <code>FailoverReplicationProtectedItemDetails</code>.
     * Failover details for a replication protected item.
     * @alias module:model/FailoverReplicationProtectedItemDetails
     */
    constructor() { 
        
        FailoverReplicationProtectedItemDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FailoverReplicationProtectedItemDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FailoverReplicationProtectedItemDetails} obj Optional instance to populate.
     * @return {module:model/FailoverReplicationProtectedItemDetails} The populated <code>FailoverReplicationProtectedItemDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FailoverReplicationProtectedItemDetails();

            if (data.hasOwnProperty('friendlyName')) {
                obj['friendlyName'] = ApiClient.convertToType(data['friendlyName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('networkConnectionStatus')) {
                obj['networkConnectionStatus'] = ApiClient.convertToType(data['networkConnectionStatus'], 'String');
            }
            if (data.hasOwnProperty('networkFriendlyName')) {
                obj['networkFriendlyName'] = ApiClient.convertToType(data['networkFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('recoveryPointId')) {
                obj['recoveryPointId'] = ApiClient.convertToType(data['recoveryPointId'], 'String');
            }
            if (data.hasOwnProperty('recoveryPointTime')) {
                obj['recoveryPointTime'] = ApiClient.convertToType(data['recoveryPointTime'], 'Date');
            }
            if (data.hasOwnProperty('subnet')) {
                obj['subnet'] = ApiClient.convertToType(data['subnet'], 'String');
            }
            if (data.hasOwnProperty('testVmFriendlyName')) {
                obj['testVmFriendlyName'] = ApiClient.convertToType(data['testVmFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('testVmName')) {
                obj['testVmName'] = ApiClient.convertToType(data['testVmName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FailoverReplicationProtectedItemDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FailoverReplicationProtectedItemDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['friendlyName'] && !(typeof data['friendlyName'] === 'string' || data['friendlyName'] instanceof String)) {
            throw new Error("Expected the field `friendlyName` to be a primitive type in the JSON string but got " + data['friendlyName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['networkConnectionStatus'] && !(typeof data['networkConnectionStatus'] === 'string' || data['networkConnectionStatus'] instanceof String)) {
            throw new Error("Expected the field `networkConnectionStatus` to be a primitive type in the JSON string but got " + data['networkConnectionStatus']);
        }
        // ensure the json data is a string
        if (data['networkFriendlyName'] && !(typeof data['networkFriendlyName'] === 'string' || data['networkFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `networkFriendlyName` to be a primitive type in the JSON string but got " + data['networkFriendlyName']);
        }
        // ensure the json data is a string
        if (data['recoveryPointId'] && !(typeof data['recoveryPointId'] === 'string' || data['recoveryPointId'] instanceof String)) {
            throw new Error("Expected the field `recoveryPointId` to be a primitive type in the JSON string but got " + data['recoveryPointId']);
        }
        // ensure the json data is a string
        if (data['subnet'] && !(typeof data['subnet'] === 'string' || data['subnet'] instanceof String)) {
            throw new Error("Expected the field `subnet` to be a primitive type in the JSON string but got " + data['subnet']);
        }
        // ensure the json data is a string
        if (data['testVmFriendlyName'] && !(typeof data['testVmFriendlyName'] === 'string' || data['testVmFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `testVmFriendlyName` to be a primitive type in the JSON string but got " + data['testVmFriendlyName']);
        }
        // ensure the json data is a string
        if (data['testVmName'] && !(typeof data['testVmName'] === 'string' || data['testVmName'] instanceof String)) {
            throw new Error("Expected the field `testVmName` to be a primitive type in the JSON string but got " + data['testVmName']);
        }

        return true;
    }


}



/**
 * The friendly name.
 * @member {String} friendlyName
 */
FailoverReplicationProtectedItemDetails.prototype['friendlyName'] = undefined;

/**
 * The name.
 * @member {String} name
 */
FailoverReplicationProtectedItemDetails.prototype['name'] = undefined;

/**
 * The network connection status.
 * @member {String} networkConnectionStatus
 */
FailoverReplicationProtectedItemDetails.prototype['networkConnectionStatus'] = undefined;

/**
 * The network friendly name.
 * @member {String} networkFriendlyName
 */
FailoverReplicationProtectedItemDetails.prototype['networkFriendlyName'] = undefined;

/**
 * The recovery point Id.
 * @member {String} recoveryPointId
 */
FailoverReplicationProtectedItemDetails.prototype['recoveryPointId'] = undefined;

/**
 * The recovery point time.
 * @member {Date} recoveryPointTime
 */
FailoverReplicationProtectedItemDetails.prototype['recoveryPointTime'] = undefined;

/**
 * The network subnet.
 * @member {String} subnet
 */
FailoverReplicationProtectedItemDetails.prototype['subnet'] = undefined;

/**
 * The test Vm friendly name.
 * @member {String} testVmFriendlyName
 */
FailoverReplicationProtectedItemDetails.prototype['testVmFriendlyName'] = undefined;

/**
 * The test Vm name.
 * @member {String} testVmName
 */
FailoverReplicationProtectedItemDetails.prototype['testVmName'] = undefined;






export default FailoverReplicationProtectedItemDetails;

