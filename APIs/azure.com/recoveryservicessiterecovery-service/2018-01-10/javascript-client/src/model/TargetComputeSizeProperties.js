/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ComputeSizeErrorDetails from './ComputeSizeErrorDetails';

/**
 * The TargetComputeSizeProperties model module.
 * @module model/TargetComputeSizeProperties
 * @version 2018-01-10
 */
class TargetComputeSizeProperties {
    /**
     * Constructs a new <code>TargetComputeSizeProperties</code>.
     * Represents applicable recovery vm sizes properties.
     * @alias module:model/TargetComputeSizeProperties
     */
    constructor() { 
        
        TargetComputeSizeProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TargetComputeSizeProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TargetComputeSizeProperties} obj Optional instance to populate.
     * @return {module:model/TargetComputeSizeProperties} The populated <code>TargetComputeSizeProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TargetComputeSizeProperties();

            if (data.hasOwnProperty('cpuCoresCount')) {
                obj['cpuCoresCount'] = ApiClient.convertToType(data['cpuCoresCount'], 'Number');
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [ComputeSizeErrorDetails]);
            }
            if (data.hasOwnProperty('friendlyName')) {
                obj['friendlyName'] = ApiClient.convertToType(data['friendlyName'], 'String');
            }
            if (data.hasOwnProperty('highIopsSupported')) {
                obj['highIopsSupported'] = ApiClient.convertToType(data['highIopsSupported'], 'String');
            }
            if (data.hasOwnProperty('maxDataDiskCount')) {
                obj['maxDataDiskCount'] = ApiClient.convertToType(data['maxDataDiskCount'], 'Number');
            }
            if (data.hasOwnProperty('maxNicsCount')) {
                obj['maxNicsCount'] = ApiClient.convertToType(data['maxNicsCount'], 'Number');
            }
            if (data.hasOwnProperty('memoryInGB')) {
                obj['memoryInGB'] = ApiClient.convertToType(data['memoryInGB'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TargetComputeSizeProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TargetComputeSizeProperties</code>.
     */
    static validateJSON(data) {
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                ComputeSizeErrorDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['friendlyName'] && !(typeof data['friendlyName'] === 'string' || data['friendlyName'] instanceof String)) {
            throw new Error("Expected the field `friendlyName` to be a primitive type in the JSON string but got " + data['friendlyName']);
        }
        // ensure the json data is a string
        if (data['highIopsSupported'] && !(typeof data['highIopsSupported'] === 'string' || data['highIopsSupported'] instanceof String)) {
            throw new Error("Expected the field `highIopsSupported` to be a primitive type in the JSON string but got " + data['highIopsSupported']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * The maximum cpu cores count supported by target compute size.
 * @member {Number} cpuCoresCount
 */
TargetComputeSizeProperties.prototype['cpuCoresCount'] = undefined;

/**
 * The reasons why the target compute size is not applicable for the protected item.
 * @member {Array.<module:model/ComputeSizeErrorDetails>} errors
 */
TargetComputeSizeProperties.prototype['errors'] = undefined;

/**
 * Target compute size display name.
 * @member {String} friendlyName
 */
TargetComputeSizeProperties.prototype['friendlyName'] = undefined;

/**
 * The value indicating whether the target compute size supports high Iops.
 * @member {String} highIopsSupported
 */
TargetComputeSizeProperties.prototype['highIopsSupported'] = undefined;

/**
 * The maximum data disks count supported by target compute size.
 * @member {Number} maxDataDiskCount
 */
TargetComputeSizeProperties.prototype['maxDataDiskCount'] = undefined;

/**
 * The maximum Nics count supported by target compute size.
 * @member {Number} maxNicsCount
 */
TargetComputeSizeProperties.prototype['maxNicsCount'] = undefined;

/**
 * The maximum memory in GB supported by target compute size.
 * @member {Number} memoryInGB
 */
TargetComputeSizeProperties.prototype['memoryInGB'] = undefined;

/**
 * Target compute size name.
 * @member {String} name
 */
TargetComputeSizeProperties.prototype['name'] = undefined;






export default TargetComputeSizeProperties;

