/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateNetworkMappingInput from '../model/CreateNetworkMappingInput';
import NetworkMapping from '../model/NetworkMapping';
import NetworkMappingCollection from '../model/NetworkMappingCollection';
import UpdateNetworkMappingInput from '../model/UpdateNetworkMappingInput';

/**
* ReplicationNetworkMappings service.
* @module api/ReplicationNetworkMappingsApi
* @version 2018-01-10
*/
export default class ReplicationNetworkMappingsApi {

    /**
    * Constructs a new ReplicationNetworkMappingsApi. 
    * @alias module:api/ReplicationNetworkMappingsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the replicationNetworkMappingsCreate operation.
     * @callback module:api/ReplicationNetworkMappingsApi~replicationNetworkMappingsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkMapping} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates network mapping.
     * The operation to create an ASR network mapping.
     * @param {String} apiVersion Client Api Version.
     * @param {String} resourceName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} fabricName Primary fabric name.
     * @param {String} networkName Primary network name.
     * @param {String} networkMappingName Network mapping name.
     * @param {module:model/CreateNetworkMappingInput} input Create network mapping input.
     * @param {module:api/ReplicationNetworkMappingsApi~replicationNetworkMappingsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkMapping}
     */
    replicationNetworkMappingsCreate(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, networkName, networkMappingName, input, callback) {
      let postBody = input;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling replicationNetworkMappingsCreate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling replicationNetworkMappingsCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling replicationNetworkMappingsCreate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling replicationNetworkMappingsCreate");
      }
      // verify the required parameter 'fabricName' is set
      if (fabricName === undefined || fabricName === null) {
        throw new Error("Missing the required parameter 'fabricName' when calling replicationNetworkMappingsCreate");
      }
      // verify the required parameter 'networkName' is set
      if (networkName === undefined || networkName === null) {
        throw new Error("Missing the required parameter 'networkName' when calling replicationNetworkMappingsCreate");
      }
      // verify the required parameter 'networkMappingName' is set
      if (networkMappingName === undefined || networkMappingName === null) {
        throw new Error("Missing the required parameter 'networkMappingName' when calling replicationNetworkMappingsCreate");
      }
      // verify the required parameter 'input' is set
      if (input === undefined || input === null) {
        throw new Error("Missing the required parameter 'input' when calling replicationNetworkMappingsCreate");
      }

      let pathParams = {
        'resourceName': resourceName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'fabricName': fabricName,
        'networkName': networkName,
        'networkMappingName': networkMappingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = NetworkMapping;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks/{networkName}/replicationNetworkMappings/{networkMappingName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the replicationNetworkMappingsDelete operation.
     * @callback module:api/ReplicationNetworkMappingsApi~replicationNetworkMappingsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete network mapping.
     * The operation to delete a network mapping.
     * @param {String} apiVersion Client Api Version.
     * @param {String} resourceName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} fabricName Primary fabric name.
     * @param {String} networkName Primary network name.
     * @param {String} networkMappingName ARM Resource Name for network mapping.
     * @param {module:api/ReplicationNetworkMappingsApi~replicationNetworkMappingsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    replicationNetworkMappingsDelete(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, networkName, networkMappingName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling replicationNetworkMappingsDelete");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling replicationNetworkMappingsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling replicationNetworkMappingsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling replicationNetworkMappingsDelete");
      }
      // verify the required parameter 'fabricName' is set
      if (fabricName === undefined || fabricName === null) {
        throw new Error("Missing the required parameter 'fabricName' when calling replicationNetworkMappingsDelete");
      }
      // verify the required parameter 'networkName' is set
      if (networkName === undefined || networkName === null) {
        throw new Error("Missing the required parameter 'networkName' when calling replicationNetworkMappingsDelete");
      }
      // verify the required parameter 'networkMappingName' is set
      if (networkMappingName === undefined || networkMappingName === null) {
        throw new Error("Missing the required parameter 'networkMappingName' when calling replicationNetworkMappingsDelete");
      }

      let pathParams = {
        'resourceName': resourceName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'fabricName': fabricName,
        'networkName': networkName,
        'networkMappingName': networkMappingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks/{networkName}/replicationNetworkMappings/{networkMappingName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the replicationNetworkMappingsGet operation.
     * @callback module:api/ReplicationNetworkMappingsApi~replicationNetworkMappingsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkMapping} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets network mapping by name.
     * Gets the details of an ASR network mapping
     * @param {String} apiVersion Client Api Version.
     * @param {String} resourceName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} fabricName Primary fabric name.
     * @param {String} networkName Primary network name.
     * @param {String} networkMappingName Network mapping name.
     * @param {module:api/ReplicationNetworkMappingsApi~replicationNetworkMappingsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkMapping}
     */
    replicationNetworkMappingsGet(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, networkName, networkMappingName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling replicationNetworkMappingsGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling replicationNetworkMappingsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling replicationNetworkMappingsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling replicationNetworkMappingsGet");
      }
      // verify the required parameter 'fabricName' is set
      if (fabricName === undefined || fabricName === null) {
        throw new Error("Missing the required parameter 'fabricName' when calling replicationNetworkMappingsGet");
      }
      // verify the required parameter 'networkName' is set
      if (networkName === undefined || networkName === null) {
        throw new Error("Missing the required parameter 'networkName' when calling replicationNetworkMappingsGet");
      }
      // verify the required parameter 'networkMappingName' is set
      if (networkMappingName === undefined || networkMappingName === null) {
        throw new Error("Missing the required parameter 'networkMappingName' when calling replicationNetworkMappingsGet");
      }

      let pathParams = {
        'resourceName': resourceName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'fabricName': fabricName,
        'networkName': networkName,
        'networkMappingName': networkMappingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NetworkMapping;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks/{networkName}/replicationNetworkMappings/{networkMappingName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the replicationNetworkMappingsList operation.
     * @callback module:api/ReplicationNetworkMappingsApi~replicationNetworkMappingsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkMappingCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the network mappings under a vault.
     * Lists all ASR network mappings in the vault.
     * @param {String} apiVersion Client Api Version.
     * @param {String} resourceName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {module:api/ReplicationNetworkMappingsApi~replicationNetworkMappingsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkMappingCollection}
     */
    replicationNetworkMappingsList(apiVersion, resourceName, resourceGroupName, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling replicationNetworkMappingsList");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling replicationNetworkMappingsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling replicationNetworkMappingsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling replicationNetworkMappingsList");
      }

      let pathParams = {
        'resourceName': resourceName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NetworkMappingCollection;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationNetworkMappings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the replicationNetworkMappingsListByReplicationNetworks operation.
     * @callback module:api/ReplicationNetworkMappingsApi~replicationNetworkMappingsListByReplicationNetworksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkMappingCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the network mappings under a network.
     * Lists all ASR network mappings for the specified network.
     * @param {String} apiVersion Client Api Version.
     * @param {String} resourceName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} fabricName Primary fabric name.
     * @param {String} networkName Primary network name.
     * @param {module:api/ReplicationNetworkMappingsApi~replicationNetworkMappingsListByReplicationNetworksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkMappingCollection}
     */
    replicationNetworkMappingsListByReplicationNetworks(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, networkName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling replicationNetworkMappingsListByReplicationNetworks");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling replicationNetworkMappingsListByReplicationNetworks");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling replicationNetworkMappingsListByReplicationNetworks");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling replicationNetworkMappingsListByReplicationNetworks");
      }
      // verify the required parameter 'fabricName' is set
      if (fabricName === undefined || fabricName === null) {
        throw new Error("Missing the required parameter 'fabricName' when calling replicationNetworkMappingsListByReplicationNetworks");
      }
      // verify the required parameter 'networkName' is set
      if (networkName === undefined || networkName === null) {
        throw new Error("Missing the required parameter 'networkName' when calling replicationNetworkMappingsListByReplicationNetworks");
      }

      let pathParams = {
        'resourceName': resourceName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'fabricName': fabricName,
        'networkName': networkName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NetworkMappingCollection;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks/{networkName}/replicationNetworkMappings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the replicationNetworkMappingsUpdate operation.
     * @callback module:api/ReplicationNetworkMappingsApi~replicationNetworkMappingsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkMapping} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates network mapping.
     * The operation to update an ASR network mapping.
     * @param {String} apiVersion Client Api Version.
     * @param {String} resourceName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} fabricName Primary fabric name.
     * @param {String} networkName Primary network name.
     * @param {String} networkMappingName Network mapping name.
     * @param {module:model/UpdateNetworkMappingInput} input Update network mapping input.
     * @param {module:api/ReplicationNetworkMappingsApi~replicationNetworkMappingsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkMapping}
     */
    replicationNetworkMappingsUpdate(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, networkName, networkMappingName, input, callback) {
      let postBody = input;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling replicationNetworkMappingsUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling replicationNetworkMappingsUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling replicationNetworkMappingsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling replicationNetworkMappingsUpdate");
      }
      // verify the required parameter 'fabricName' is set
      if (fabricName === undefined || fabricName === null) {
        throw new Error("Missing the required parameter 'fabricName' when calling replicationNetworkMappingsUpdate");
      }
      // verify the required parameter 'networkName' is set
      if (networkName === undefined || networkName === null) {
        throw new Error("Missing the required parameter 'networkName' when calling replicationNetworkMappingsUpdate");
      }
      // verify the required parameter 'networkMappingName' is set
      if (networkMappingName === undefined || networkMappingName === null) {
        throw new Error("Missing the required parameter 'networkMappingName' when calling replicationNetworkMappingsUpdate");
      }
      // verify the required parameter 'input' is set
      if (input === undefined || input === null) {
        throw new Error("Missing the required parameter 'input' when calling replicationNetworkMappingsUpdate");
      }

      let pathParams = {
        'resourceName': resourceName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'fabricName': fabricName,
        'networkName': networkName,
        'networkMappingName': networkMappingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = NetworkMapping;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks/{networkName}/replicationNetworkMappings/{networkMappingName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
