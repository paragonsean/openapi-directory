/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SiteRecoveryManagementClient);
  }
}(this, function(expect, SiteRecoveryManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InMageAzureV2ReplicationDetails', function() {
    it('should create an instance of InMageAzureV2ReplicationDetails', function() {
      // uncomment below and update the code to test InMageAzureV2ReplicationDetails
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be.a(SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails);
    });

    it('should have the property agentExpiryDate (base name: "agentExpiryDate")', function() {
      // uncomment below and update the code to test the property agentExpiryDate
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property agentVersion (base name: "agentVersion")', function() {
      // uncomment below and update the code to test the property agentVersion
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property azureVMDiskDetails (base name: "azureVMDiskDetails")', function() {
      // uncomment below and update the code to test the property azureVMDiskDetails
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property compressedDataRateInMB (base name: "compressedDataRateInMB")', function() {
      // uncomment below and update the code to test the property compressedDataRateInMB
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property datastores (base name: "datastores")', function() {
      // uncomment below and update the code to test the property datastores
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property discoveryType (base name: "discoveryType")', function() {
      // uncomment below and update the code to test the property discoveryType
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property diskResized (base name: "diskResized")', function() {
      // uncomment below and update the code to test the property diskResized
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property enableRdpOnTargetOption (base name: "enableRdpOnTargetOption")', function() {
      // uncomment below and update the code to test the property enableRdpOnTargetOption
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property infrastructureVmId (base name: "infrastructureVmId")', function() {
      // uncomment below and update the code to test the property infrastructureVmId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property ipAddress (base name: "ipAddress")', function() {
      // uncomment below and update the code to test the property ipAddress
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property isAgentUpdateRequired (base name: "isAgentUpdateRequired")', function() {
      // uncomment below and update the code to test the property isAgentUpdateRequired
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property isRebootAfterUpdateRequired (base name: "isRebootAfterUpdateRequired")', function() {
      // uncomment below and update the code to test the property isRebootAfterUpdateRequired
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property lastHeartbeat (base name: "lastHeartbeat")', function() {
      // uncomment below and update the code to test the property lastHeartbeat
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property lastRpoCalculatedTime (base name: "lastRpoCalculatedTime")', function() {
      // uncomment below and update the code to test the property lastRpoCalculatedTime
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdateReceivedTime (base name: "lastUpdateReceivedTime")', function() {
      // uncomment below and update the code to test the property lastUpdateReceivedTime
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property licenseType (base name: "licenseType")', function() {
      // uncomment below and update the code to test the property licenseType
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property masterTargetId (base name: "masterTargetId")', function() {
      // uncomment below and update the code to test the property masterTargetId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property multiVmGroupId (base name: "multiVmGroupId")', function() {
      // uncomment below and update the code to test the property multiVmGroupId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property multiVmGroupName (base name: "multiVmGroupName")', function() {
      // uncomment below and update the code to test the property multiVmGroupName
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property multiVmSyncStatus (base name: "multiVmSyncStatus")', function() {
      // uncomment below and update the code to test the property multiVmSyncStatus
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property osDiskId (base name: "osDiskId")', function() {
      // uncomment below and update the code to test the property osDiskId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property osType (base name: "osType")', function() {
      // uncomment below and update the code to test the property osType
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property osVersion (base name: "osVersion")', function() {
      // uncomment below and update the code to test the property osVersion
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property processServerId (base name: "processServerId")', function() {
      // uncomment below and update the code to test the property processServerId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property protectedDisks (base name: "protectedDisks")', function() {
      // uncomment below and update the code to test the property protectedDisks
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property protectionStage (base name: "protectionStage")', function() {
      // uncomment below and update the code to test the property protectionStage
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryAvailabilitySetId (base name: "recoveryAvailabilitySetId")', function() {
      // uncomment below and update the code to test the property recoveryAvailabilitySetId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryAzureLogStorageAccountId (base name: "recoveryAzureLogStorageAccountId")', function() {
      // uncomment below and update the code to test the property recoveryAzureLogStorageAccountId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryAzureResourceGroupId (base name: "recoveryAzureResourceGroupId")', function() {
      // uncomment below and update the code to test the property recoveryAzureResourceGroupId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryAzureStorageAccount (base name: "recoveryAzureStorageAccount")', function() {
      // uncomment below and update the code to test the property recoveryAzureStorageAccount
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryAzureVMName (base name: "recoveryAzureVMName")', function() {
      // uncomment below and update the code to test the property recoveryAzureVMName
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryAzureVMSize (base name: "recoveryAzureVMSize")', function() {
      // uncomment below and update the code to test the property recoveryAzureVMSize
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property replicaId (base name: "replicaId")', function() {
      // uncomment below and update the code to test the property replicaId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property resyncProgressPercentage (base name: "resyncProgressPercentage")', function() {
      // uncomment below and update the code to test the property resyncProgressPercentage
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property rpoInSeconds (base name: "rpoInSeconds")', function() {
      // uncomment below and update the code to test the property rpoInSeconds
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property selectedRecoveryAzureNetworkId (base name: "selectedRecoveryAzureNetworkId")', function() {
      // uncomment below and update the code to test the property selectedRecoveryAzureNetworkId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property selectedSourceNicId (base name: "selectedSourceNicId")', function() {
      // uncomment below and update the code to test the property selectedSourceNicId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property sourceVmCpuCount (base name: "sourceVmCpuCount")', function() {
      // uncomment below and update the code to test the property sourceVmCpuCount
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property sourceVmRamSizeInMB (base name: "sourceVmRamSizeInMB")', function() {
      // uncomment below and update the code to test the property sourceVmRamSizeInMB
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property targetVmId (base name: "targetVmId")', function() {
      // uncomment below and update the code to test the property targetVmId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property uncompressedDataRateInMB (base name: "uncompressedDataRateInMB")', function() {
      // uncomment below and update the code to test the property uncompressedDataRateInMB
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property useManagedDisks (base name: "useManagedDisks")', function() {
      // uncomment below and update the code to test the property useManagedDisks
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vCenterInfrastructureId (base name: "vCenterInfrastructureId")', function() {
      // uncomment below and update the code to test the property vCenterInfrastructureId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property validationErrors (base name: "validationErrors")', function() {
      // uncomment below and update the code to test the property validationErrors
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vhdName (base name: "vhdName")', function() {
      // uncomment below and update the code to test the property vhdName
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmId (base name: "vmId")', function() {
      // uncomment below and update the code to test the property vmId
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmNics (base name: "vmNics")', function() {
      // uncomment below and update the code to test the property vmNics
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmProtectionState (base name: "vmProtectionState")', function() {
      // uncomment below and update the code to test the property vmProtectionState
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmProtectionStateDescription (base name: "vmProtectionStateDescription")', function() {
      // uncomment below and update the code to test the property vmProtectionStateDescription
      //var instance = new SiteRecoveryManagementClient.InMageAzureV2ReplicationDetails();
      //expect(instance).to.be();
    });

  });

}));
