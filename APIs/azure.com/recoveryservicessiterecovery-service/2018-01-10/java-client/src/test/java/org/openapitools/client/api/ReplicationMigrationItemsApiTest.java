/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EnableMigrationInput;
import org.openapitools.client.model.MigrateInput;
import org.openapitools.client.model.MigrationItem;
import org.openapitools.client.model.MigrationItemCollection;
import org.openapitools.client.model.ResyncInput;
import org.openapitools.client.model.TestMigrateCleanupInput;
import org.openapitools.client.model.TestMigrateInput;
import org.openapitools.client.model.UpdateMigrationItemInput;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReplicationMigrationItemsApi
 */
@Disabled
public class ReplicationMigrationItemsApiTest {

    private final ReplicationMigrationItemsApi api = new ReplicationMigrationItemsApi();

    /**
     * Enables migration.
     *
     * The operation to create an ASR migration item (enable migration).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationMigrationItemsCreateTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String protectionContainerName = null;
        String migrationItemName = null;
        EnableMigrationInput input = null;
        MigrationItem response = api.replicationMigrationItemsCreate(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, protectionContainerName, migrationItemName, input);
        // TODO: test validations
    }

    /**
     * Delete the migration item.
     *
     * The operation to delete an ASR migration item.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationMigrationItemsDeleteTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String protectionContainerName = null;
        String migrationItemName = null;
        String deleteOption = null;
        api.replicationMigrationItemsDelete(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, protectionContainerName, migrationItemName, deleteOption);
        // TODO: test validations
    }

    /**
     * Gets the details of a migration item.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationMigrationItemsGetTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String protectionContainerName = null;
        String migrationItemName = null;
        MigrationItem response = api.replicationMigrationItemsGet(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, protectionContainerName, migrationItemName);
        // TODO: test validations
    }

    /**
     * Gets the list of migration items in the vault.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationMigrationItemsListTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String skipToken = null;
        String $filter = null;
        MigrationItemCollection response = api.replicationMigrationItemsList(apiVersion, resourceName, resourceGroupName, subscriptionId, skipToken, $filter);
        // TODO: test validations
    }

    /**
     * Gets the list of migration items in the protection container.
     *
     * Gets the list of ASR migration items in the protection container.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationMigrationItemsListByReplicationProtectionContainersTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String protectionContainerName = null;
        MigrationItemCollection response = api.replicationMigrationItemsListByReplicationProtectionContainers(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, protectionContainerName);
        // TODO: test validations
    }

    /**
     * Migrate item.
     *
     * The operation to initiate migration of the item.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationMigrationItemsMigrateTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String protectionContainerName = null;
        String migrationItemName = null;
        MigrateInput migrateInput = null;
        MigrationItem response = api.replicationMigrationItemsMigrate(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, protectionContainerName, migrationItemName, migrateInput);
        // TODO: test validations
    }

    /**
     * Resynchronizes replication.
     *
     * The operation to resynchronize replication of an ASR migration item.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationMigrationItemsResyncTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String protectionContainerName = null;
        String migrationItemName = null;
        ResyncInput input = null;
        MigrationItem response = api.replicationMigrationItemsResync(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, protectionContainerName, migrationItemName, input);
        // TODO: test validations
    }

    /**
     * Test migrate item.
     *
     * The operation to initiate test migration of the item.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationMigrationItemsTestMigrateTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String protectionContainerName = null;
        String migrationItemName = null;
        TestMigrateInput testMigrateInput = null;
        MigrationItem response = api.replicationMigrationItemsTestMigrate(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, protectionContainerName, migrationItemName, testMigrateInput);
        // TODO: test validations
    }

    /**
     * Test migrate cleanup.
     *
     * The operation to initiate test migrate cleanup.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationMigrationItemsTestMigrateCleanupTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String protectionContainerName = null;
        String migrationItemName = null;
        TestMigrateCleanupInput testMigrateCleanupInput = null;
        MigrationItem response = api.replicationMigrationItemsTestMigrateCleanup(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, protectionContainerName, migrationItemName, testMigrateCleanupInput);
        // TODO: test validations
    }

    /**
     * Updates migration item.
     *
     * The operation to update the recovery settings of an ASR migration item.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationMigrationItemsUpdateTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String protectionContainerName = null;
        String migrationItemName = null;
        UpdateMigrationItemInput input = null;
        MigrationItem response = api.replicationMigrationItemsUpdate(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, protectionContainerName, migrationItemName, input);
        // TODO: test validations
    }

}
