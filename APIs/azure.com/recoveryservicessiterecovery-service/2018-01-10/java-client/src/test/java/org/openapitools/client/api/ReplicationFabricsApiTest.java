/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Fabric;
import org.openapitools.client.model.FabricCollection;
import org.openapitools.client.model.FabricCreationInput;
import org.openapitools.client.model.FailoverProcessServerRequest;
import org.openapitools.client.model.RenewCertificateInput;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReplicationFabricsApi
 */
@Disabled
public class ReplicationFabricsApiTest {

    private final ReplicationFabricsApi api = new ReplicationFabricsApi();

    /**
     * Checks the consistency of the ASR fabric.
     *
     * The operation to perform a consistency check on the fabric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationFabricsCheckConsistencyTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        Fabric response = api.replicationFabricsCheckConsistency(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName);
        // TODO: test validations
    }

    /**
     * Creates an Azure Site Recovery fabric.
     *
     * The operation to create an Azure Site Recovery fabric (for e.g. Hyper-V site)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationFabricsCreateTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        FabricCreationInput input = null;
        Fabric response = api.replicationFabricsCreate(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, input);
        // TODO: test validations
    }

    /**
     * Deletes the site.
     *
     * The operation to delete or remove an Azure Site Recovery fabric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationFabricsDeleteTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        api.replicationFabricsDelete(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName);
        // TODO: test validations
    }

    /**
     * Gets the details of an ASR fabric.
     *
     * Gets the details of an Azure Site Recovery fabric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationFabricsGetTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        Fabric response = api.replicationFabricsGet(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName);
        // TODO: test validations
    }

    /**
     * Gets the list of ASR fabrics
     *
     * Gets a list of the Azure Site Recovery fabrics in the vault.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationFabricsListTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        FabricCollection response = api.replicationFabricsList(apiVersion, resourceName, resourceGroupName, subscriptionId);
        // TODO: test validations
    }

    /**
     * Migrates the site to AAD.
     *
     * The operation to migrate an Azure Site Recovery fabric to AAD.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationFabricsMigrateToAadTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        api.replicationFabricsMigrateToAad(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName);
        // TODO: test validations
    }

    /**
     * Purges the site.
     *
     * The operation to purge(force delete) an Azure Site Recovery fabric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationFabricsPurgeTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        api.replicationFabricsPurge(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName);
        // TODO: test validations
    }

    /**
     * Perform failover of the process server.
     *
     * The operation to move replications from a process server to another process server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationFabricsReassociateGatewayTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        FailoverProcessServerRequest failoverProcessServerRequest = null;
        Fabric response = api.replicationFabricsReassociateGateway(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, failoverProcessServerRequest);
        // TODO: test validations
    }

    /**
     * Renews certificate for the fabric.
     *
     * Renews the connection certificate for the ASR replication fabric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationFabricsRenewCertificateTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        RenewCertificateInput renewCertificate = null;
        Fabric response = api.replicationFabricsRenewCertificate(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, renewCertificate);
        // TODO: test validations
    }

}
