/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreatePolicyInput;
import org.openapitools.client.model.Policy;
import org.openapitools.client.model.PolicyCollection;
import org.openapitools.client.model.UpdatePolicyInput;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReplicationPoliciesApi
 */
@Disabled
public class ReplicationPoliciesApiTest {

    private final ReplicationPoliciesApi api = new ReplicationPoliciesApi();

    /**
     * Creates the policy.
     *
     * The operation to create a replication policy
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationPoliciesCreateTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String policyName = null;
        CreatePolicyInput input = null;
        Policy response = api.replicationPoliciesCreate(apiVersion, resourceName, resourceGroupName, subscriptionId, policyName, input);
        // TODO: test validations
    }

    /**
     * Delete the policy.
     *
     * The operation to delete a replication policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationPoliciesDeleteTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String policyName = null;
        api.replicationPoliciesDelete(apiVersion, resourceName, resourceGroupName, subscriptionId, policyName);
        // TODO: test validations
    }

    /**
     * Gets the requested policy.
     *
     * Gets the details of a replication policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationPoliciesGetTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String policyName = null;
        Policy response = api.replicationPoliciesGet(apiVersion, resourceName, resourceGroupName, subscriptionId, policyName);
        // TODO: test validations
    }

    /**
     * Gets the list of replication policies
     *
     * Lists the replication policies for a vault.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationPoliciesListTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        PolicyCollection response = api.replicationPoliciesList(apiVersion, resourceName, resourceGroupName, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates the policy.
     *
     * The operation to update a replication policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationPoliciesUpdateTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String policyName = null;
        UpdatePolicyInput input = null;
        Policy response = api.replicationPoliciesUpdate(apiVersion, resourceName, resourceGroupName, subscriptionId, policyName, input);
        // TODO: test validations
    }

}
