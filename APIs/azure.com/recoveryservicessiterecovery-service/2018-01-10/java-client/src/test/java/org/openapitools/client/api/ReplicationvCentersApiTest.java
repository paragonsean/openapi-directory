/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddVCenterRequest;
import org.openapitools.client.model.UpdateVCenterRequest;
import org.openapitools.client.model.VCenter;
import org.openapitools.client.model.VCenterCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReplicationvCentersApi
 */
@Disabled
public class ReplicationvCentersApiTest {

    private final ReplicationvCentersApi api = new ReplicationvCentersApi();

    /**
     * Add vCenter.
     *
     * The operation to create a vCenter object..
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationvCentersCreateTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String vCenterName = null;
        AddVCenterRequest addVCenterRequest = null;
        VCenter response = api.replicationvCentersCreate(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, vCenterName, addVCenterRequest);
        // TODO: test validations
    }

    /**
     * Remove vCenter operation.
     *
     * The operation to remove(unregister) a registered vCenter server from the vault.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationvCentersDeleteTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String vCenterName = null;
        api.replicationvCentersDelete(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, vCenterName);
        // TODO: test validations
    }

    /**
     * Gets the details of a vCenter.
     *
     * Gets the details of a registered vCenter server(Add vCenter server.)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationvCentersGetTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String vCenterName = null;
        VCenter response = api.replicationvCentersGet(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, vCenterName);
        // TODO: test validations
    }

    /**
     * Gets the list of vCenter registered under the vault.
     *
     * Lists the vCenter servers registered in the vault.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationvCentersListTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        VCenterCollection response = api.replicationvCentersList(apiVersion, resourceName, resourceGroupName, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the list of vCenter registered under a fabric.
     *
     * Lists the vCenter servers registered in a fabric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationvCentersListByReplicationFabricsTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        VCenterCollection response = api.replicationvCentersListByReplicationFabrics(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName);
        // TODO: test validations
    }

    /**
     * Update vCenter operation.
     *
     * The operation to update a registered vCenter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationvCentersUpdateTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String vCenterName = null;
        UpdateVCenterRequest updateVCenterRequest = null;
        VCenter response = api.replicationvCentersUpdate(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, vCenterName, updateVCenterRequest);
        // TODO: test validations
    }

}
