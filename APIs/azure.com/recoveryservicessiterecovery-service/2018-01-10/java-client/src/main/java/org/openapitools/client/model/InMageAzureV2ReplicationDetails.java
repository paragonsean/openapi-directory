/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AzureVmDiskDetails;
import org.openapitools.client.model.HealthError;
import org.openapitools.client.model.InMageAzureV2ProtectedDiskDetails;
import org.openapitools.client.model.ReplicationProviderSpecificSettings;
import org.openapitools.client.model.VMNicDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InMageAzureV2 provider specific settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:47.451286-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InMageAzureV2ReplicationDetails extends ReplicationProviderSpecificSettings {
  public static final String SERIALIZED_NAME_AGENT_EXPIRY_DATE = "agentExpiryDate";
  @SerializedName(SERIALIZED_NAME_AGENT_EXPIRY_DATE)
  private OffsetDateTime agentExpiryDate;

  public static final String SERIALIZED_NAME_AGENT_VERSION = "agentVersion";
  @SerializedName(SERIALIZED_NAME_AGENT_VERSION)
  private String agentVersion;

  public static final String SERIALIZED_NAME_AZURE_V_M_DISK_DETAILS = "azureVMDiskDetails";
  @SerializedName(SERIALIZED_NAME_AZURE_V_M_DISK_DETAILS)
  private List<AzureVmDiskDetails> azureVMDiskDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMPRESSED_DATA_RATE_IN_M_B = "compressedDataRateInMB";
  @SerializedName(SERIALIZED_NAME_COMPRESSED_DATA_RATE_IN_M_B)
  private Double compressedDataRateInMB;

  public static final String SERIALIZED_NAME_DATASTORES = "datastores";
  @SerializedName(SERIALIZED_NAME_DATASTORES)
  private List<String> datastores = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISCOVERY_TYPE = "discoveryType";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_TYPE)
  private String discoveryType;

  public static final String SERIALIZED_NAME_DISK_RESIZED = "diskResized";
  @SerializedName(SERIALIZED_NAME_DISK_RESIZED)
  private String diskResized;

  public static final String SERIALIZED_NAME_ENABLE_RDP_ON_TARGET_OPTION = "enableRdpOnTargetOption";
  @SerializedName(SERIALIZED_NAME_ENABLE_RDP_ON_TARGET_OPTION)
  private String enableRdpOnTargetOption;

  public static final String SERIALIZED_NAME_INFRASTRUCTURE_VM_ID = "infrastructureVmId";
  @SerializedName(SERIALIZED_NAME_INFRASTRUCTURE_VM_ID)
  private String infrastructureVmId;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ipAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_IS_AGENT_UPDATE_REQUIRED = "isAgentUpdateRequired";
  @SerializedName(SERIALIZED_NAME_IS_AGENT_UPDATE_REQUIRED)
  private String isAgentUpdateRequired;

  public static final String SERIALIZED_NAME_IS_REBOOT_AFTER_UPDATE_REQUIRED = "isRebootAfterUpdateRequired";
  @SerializedName(SERIALIZED_NAME_IS_REBOOT_AFTER_UPDATE_REQUIRED)
  private String isRebootAfterUpdateRequired;

  public static final String SERIALIZED_NAME_LAST_HEARTBEAT = "lastHeartbeat";
  @SerializedName(SERIALIZED_NAME_LAST_HEARTBEAT)
  private OffsetDateTime lastHeartbeat;

  public static final String SERIALIZED_NAME_LAST_RPO_CALCULATED_TIME = "lastRpoCalculatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_RPO_CALCULATED_TIME)
  private OffsetDateTime lastRpoCalculatedTime;

  public static final String SERIALIZED_NAME_LAST_UPDATE_RECEIVED_TIME = "lastUpdateReceivedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_RECEIVED_TIME)
  private OffsetDateTime lastUpdateReceivedTime;

  public static final String SERIALIZED_NAME_LICENSE_TYPE = "licenseType";
  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE)
  private String licenseType;

  public static final String SERIALIZED_NAME_MASTER_TARGET_ID = "masterTargetId";
  @SerializedName(SERIALIZED_NAME_MASTER_TARGET_ID)
  private String masterTargetId;

  public static final String SERIALIZED_NAME_MULTI_VM_GROUP_ID = "multiVmGroupId";
  @SerializedName(SERIALIZED_NAME_MULTI_VM_GROUP_ID)
  private String multiVmGroupId;

  public static final String SERIALIZED_NAME_MULTI_VM_GROUP_NAME = "multiVmGroupName";
  @SerializedName(SERIALIZED_NAME_MULTI_VM_GROUP_NAME)
  private String multiVmGroupName;

  public static final String SERIALIZED_NAME_MULTI_VM_SYNC_STATUS = "multiVmSyncStatus";
  @SerializedName(SERIALIZED_NAME_MULTI_VM_SYNC_STATUS)
  private String multiVmSyncStatus;

  public static final String SERIALIZED_NAME_OS_DISK_ID = "osDiskId";
  @SerializedName(SERIALIZED_NAME_OS_DISK_ID)
  private String osDiskId;

  public static final String SERIALIZED_NAME_OS_TYPE = "osType";
  @SerializedName(SERIALIZED_NAME_OS_TYPE)
  private String osType;

  public static final String SERIALIZED_NAME_OS_VERSION = "osVersion";
  @SerializedName(SERIALIZED_NAME_OS_VERSION)
  private String osVersion;

  public static final String SERIALIZED_NAME_PROCESS_SERVER_ID = "processServerId";
  @SerializedName(SERIALIZED_NAME_PROCESS_SERVER_ID)
  private String processServerId;

  public static final String SERIALIZED_NAME_PROTECTED_DISKS = "protectedDisks";
  @SerializedName(SERIALIZED_NAME_PROTECTED_DISKS)
  private List<InMageAzureV2ProtectedDiskDetails> protectedDisks = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROTECTION_STAGE = "protectionStage";
  @SerializedName(SERIALIZED_NAME_PROTECTION_STAGE)
  private String protectionStage;

  public static final String SERIALIZED_NAME_RECOVERY_AVAILABILITY_SET_ID = "recoveryAvailabilitySetId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AVAILABILITY_SET_ID)
  private String recoveryAvailabilitySetId;

  public static final String SERIALIZED_NAME_RECOVERY_AZURE_LOG_STORAGE_ACCOUNT_ID = "recoveryAzureLogStorageAccountId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AZURE_LOG_STORAGE_ACCOUNT_ID)
  private String recoveryAzureLogStorageAccountId;

  public static final String SERIALIZED_NAME_RECOVERY_AZURE_RESOURCE_GROUP_ID = "recoveryAzureResourceGroupId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AZURE_RESOURCE_GROUP_ID)
  private String recoveryAzureResourceGroupId;

  public static final String SERIALIZED_NAME_RECOVERY_AZURE_STORAGE_ACCOUNT = "recoveryAzureStorageAccount";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AZURE_STORAGE_ACCOUNT)
  private String recoveryAzureStorageAccount;

  public static final String SERIALIZED_NAME_RECOVERY_AZURE_V_M_NAME = "recoveryAzureVMName";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AZURE_V_M_NAME)
  private String recoveryAzureVMName;

  public static final String SERIALIZED_NAME_RECOVERY_AZURE_V_M_SIZE = "recoveryAzureVMSize";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AZURE_V_M_SIZE)
  private String recoveryAzureVMSize;

  public static final String SERIALIZED_NAME_REPLICA_ID = "replicaId";
  @SerializedName(SERIALIZED_NAME_REPLICA_ID)
  private String replicaId;

  public static final String SERIALIZED_NAME_RESYNC_PROGRESS_PERCENTAGE = "resyncProgressPercentage";
  @SerializedName(SERIALIZED_NAME_RESYNC_PROGRESS_PERCENTAGE)
  private Integer resyncProgressPercentage;

  public static final String SERIALIZED_NAME_RPO_IN_SECONDS = "rpoInSeconds";
  @SerializedName(SERIALIZED_NAME_RPO_IN_SECONDS)
  private Long rpoInSeconds;

  public static final String SERIALIZED_NAME_SELECTED_RECOVERY_AZURE_NETWORK_ID = "selectedRecoveryAzureNetworkId";
  @SerializedName(SERIALIZED_NAME_SELECTED_RECOVERY_AZURE_NETWORK_ID)
  private String selectedRecoveryAzureNetworkId;

  public static final String SERIALIZED_NAME_SELECTED_SOURCE_NIC_ID = "selectedSourceNicId";
  @SerializedName(SERIALIZED_NAME_SELECTED_SOURCE_NIC_ID)
  private String selectedSourceNicId;

  public static final String SERIALIZED_NAME_SOURCE_VM_CPU_COUNT = "sourceVmCpuCount";
  @SerializedName(SERIALIZED_NAME_SOURCE_VM_CPU_COUNT)
  private Integer sourceVmCpuCount;

  public static final String SERIALIZED_NAME_SOURCE_VM_RAM_SIZE_IN_M_B = "sourceVmRamSizeInMB";
  @SerializedName(SERIALIZED_NAME_SOURCE_VM_RAM_SIZE_IN_M_B)
  private Integer sourceVmRamSizeInMB;

  public static final String SERIALIZED_NAME_TARGET_VM_ID = "targetVmId";
  @SerializedName(SERIALIZED_NAME_TARGET_VM_ID)
  private String targetVmId;

  public static final String SERIALIZED_NAME_UNCOMPRESSED_DATA_RATE_IN_M_B = "uncompressedDataRateInMB";
  @SerializedName(SERIALIZED_NAME_UNCOMPRESSED_DATA_RATE_IN_M_B)
  private Double uncompressedDataRateInMB;

  public static final String SERIALIZED_NAME_USE_MANAGED_DISKS = "useManagedDisks";
  @SerializedName(SERIALIZED_NAME_USE_MANAGED_DISKS)
  private String useManagedDisks;

  public static final String SERIALIZED_NAME_V_CENTER_INFRASTRUCTURE_ID = "vCenterInfrastructureId";
  @SerializedName(SERIALIZED_NAME_V_CENTER_INFRASTRUCTURE_ID)
  private String vCenterInfrastructureId;

  public static final String SERIALIZED_NAME_VALIDATION_ERRORS = "validationErrors";
  @SerializedName(SERIALIZED_NAME_VALIDATION_ERRORS)
  private List<HealthError> validationErrors = new ArrayList<>();

  public static final String SERIALIZED_NAME_VHD_NAME = "vhdName";
  @SerializedName(SERIALIZED_NAME_VHD_NAME)
  private String vhdName;

  public static final String SERIALIZED_NAME_VM_ID = "vmId";
  @SerializedName(SERIALIZED_NAME_VM_ID)
  private String vmId;

  public static final String SERIALIZED_NAME_VM_NICS = "vmNics";
  @SerializedName(SERIALIZED_NAME_VM_NICS)
  private List<VMNicDetails> vmNics = new ArrayList<>();

  public static final String SERIALIZED_NAME_VM_PROTECTION_STATE = "vmProtectionState";
  @SerializedName(SERIALIZED_NAME_VM_PROTECTION_STATE)
  private String vmProtectionState;

  public static final String SERIALIZED_NAME_VM_PROTECTION_STATE_DESCRIPTION = "vmProtectionStateDescription";
  @SerializedName(SERIALIZED_NAME_VM_PROTECTION_STATE_DESCRIPTION)
  private String vmProtectionStateDescription;

  public InMageAzureV2ReplicationDetails() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public InMageAzureV2ReplicationDetails(
     String instanceType
  ) {
    this();
    this.instanceType = instanceType;
  }

  public InMageAzureV2ReplicationDetails agentExpiryDate(OffsetDateTime agentExpiryDate) {
    this.agentExpiryDate = agentExpiryDate;
    return this;
  }

  /**
   * Agent expiry date.
   * @return agentExpiryDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAgentExpiryDate() {
    return agentExpiryDate;
  }

  public void setAgentExpiryDate(OffsetDateTime agentExpiryDate) {
    this.agentExpiryDate = agentExpiryDate;
  }


  public InMageAzureV2ReplicationDetails agentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
    return this;
  }

  /**
   * The agent version.
   * @return agentVersion
   */
  @javax.annotation.Nullable
  public String getAgentVersion() {
    return agentVersion;
  }

  public void setAgentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
  }


  public InMageAzureV2ReplicationDetails azureVMDiskDetails(List<AzureVmDiskDetails> azureVMDiskDetails) {
    this.azureVMDiskDetails = azureVMDiskDetails;
    return this;
  }

  public InMageAzureV2ReplicationDetails addAzureVMDiskDetailsItem(AzureVmDiskDetails azureVMDiskDetailsItem) {
    if (this.azureVMDiskDetails == null) {
      this.azureVMDiskDetails = new ArrayList<>();
    }
    this.azureVMDiskDetails.add(azureVMDiskDetailsItem);
    return this;
  }

  /**
   * Azure VM Disk details.
   * @return azureVMDiskDetails
   */
  @javax.annotation.Nullable
  public List<AzureVmDiskDetails> getAzureVMDiskDetails() {
    return azureVMDiskDetails;
  }

  public void setAzureVMDiskDetails(List<AzureVmDiskDetails> azureVMDiskDetails) {
    this.azureVMDiskDetails = azureVMDiskDetails;
  }


  public InMageAzureV2ReplicationDetails compressedDataRateInMB(Double compressedDataRateInMB) {
    this.compressedDataRateInMB = compressedDataRateInMB;
    return this;
  }

  /**
   * The compressed data change rate in MB.
   * @return compressedDataRateInMB
   */
  @javax.annotation.Nullable
  public Double getCompressedDataRateInMB() {
    return compressedDataRateInMB;
  }

  public void setCompressedDataRateInMB(Double compressedDataRateInMB) {
    this.compressedDataRateInMB = compressedDataRateInMB;
  }


  public InMageAzureV2ReplicationDetails datastores(List<String> datastores) {
    this.datastores = datastores;
    return this;
  }

  public InMageAzureV2ReplicationDetails addDatastoresItem(String datastoresItem) {
    if (this.datastores == null) {
      this.datastores = new ArrayList<>();
    }
    this.datastores.add(datastoresItem);
    return this;
  }

  /**
   * The data stores of the on-premise machine. Value can be list of strings that contain data store names.
   * @return datastores
   */
  @javax.annotation.Nullable
  public List<String> getDatastores() {
    return datastores;
  }

  public void setDatastores(List<String> datastores) {
    this.datastores = datastores;
  }


  public InMageAzureV2ReplicationDetails discoveryType(String discoveryType) {
    this.discoveryType = discoveryType;
    return this;
  }

  /**
   * A value indicating the discovery type of the machine. Value can be vCenter or physical.
   * @return discoveryType
   */
  @javax.annotation.Nullable
  public String getDiscoveryType() {
    return discoveryType;
  }

  public void setDiscoveryType(String discoveryType) {
    this.discoveryType = discoveryType;
  }


  public InMageAzureV2ReplicationDetails diskResized(String diskResized) {
    this.diskResized = diskResized;
    return this;
  }

  /**
   * A value indicating whether any disk is resized for this VM.
   * @return diskResized
   */
  @javax.annotation.Nullable
  public String getDiskResized() {
    return diskResized;
  }

  public void setDiskResized(String diskResized) {
    this.diskResized = diskResized;
  }


  public InMageAzureV2ReplicationDetails enableRdpOnTargetOption(String enableRdpOnTargetOption) {
    this.enableRdpOnTargetOption = enableRdpOnTargetOption;
    return this;
  }

  /**
   * The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
   * @return enableRdpOnTargetOption
   */
  @javax.annotation.Nullable
  public String getEnableRdpOnTargetOption() {
    return enableRdpOnTargetOption;
  }

  public void setEnableRdpOnTargetOption(String enableRdpOnTargetOption) {
    this.enableRdpOnTargetOption = enableRdpOnTargetOption;
  }


  public InMageAzureV2ReplicationDetails infrastructureVmId(String infrastructureVmId) {
    this.infrastructureVmId = infrastructureVmId;
    return this;
  }

  /**
   * The infrastructure VM Id.
   * @return infrastructureVmId
   */
  @javax.annotation.Nullable
  public String getInfrastructureVmId() {
    return infrastructureVmId;
  }

  public void setInfrastructureVmId(String infrastructureVmId) {
    this.infrastructureVmId = infrastructureVmId;
  }


  public InMageAzureV2ReplicationDetails ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * The source IP address.
   * @return ipAddress
   */
  @javax.annotation.Nullable
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public InMageAzureV2ReplicationDetails isAgentUpdateRequired(String isAgentUpdateRequired) {
    this.isAgentUpdateRequired = isAgentUpdateRequired;
    return this;
  }

  /**
   * A value indicating whether installed agent needs to be updated.
   * @return isAgentUpdateRequired
   */
  @javax.annotation.Nullable
  public String getIsAgentUpdateRequired() {
    return isAgentUpdateRequired;
  }

  public void setIsAgentUpdateRequired(String isAgentUpdateRequired) {
    this.isAgentUpdateRequired = isAgentUpdateRequired;
  }


  public InMageAzureV2ReplicationDetails isRebootAfterUpdateRequired(String isRebootAfterUpdateRequired) {
    this.isRebootAfterUpdateRequired = isRebootAfterUpdateRequired;
    return this;
  }

  /**
   * A value indicating whether the source server requires a restart after update.
   * @return isRebootAfterUpdateRequired
   */
  @javax.annotation.Nullable
  public String getIsRebootAfterUpdateRequired() {
    return isRebootAfterUpdateRequired;
  }

  public void setIsRebootAfterUpdateRequired(String isRebootAfterUpdateRequired) {
    this.isRebootAfterUpdateRequired = isRebootAfterUpdateRequired;
  }


  public InMageAzureV2ReplicationDetails lastHeartbeat(OffsetDateTime lastHeartbeat) {
    this.lastHeartbeat = lastHeartbeat;
    return this;
  }

  /**
   * The last heartbeat received from the source server.
   * @return lastHeartbeat
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastHeartbeat() {
    return lastHeartbeat;
  }

  public void setLastHeartbeat(OffsetDateTime lastHeartbeat) {
    this.lastHeartbeat = lastHeartbeat;
  }


  public InMageAzureV2ReplicationDetails lastRpoCalculatedTime(OffsetDateTime lastRpoCalculatedTime) {
    this.lastRpoCalculatedTime = lastRpoCalculatedTime;
    return this;
  }

  /**
   * The last RPO calculated time.
   * @return lastRpoCalculatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastRpoCalculatedTime() {
    return lastRpoCalculatedTime;
  }

  public void setLastRpoCalculatedTime(OffsetDateTime lastRpoCalculatedTime) {
    this.lastRpoCalculatedTime = lastRpoCalculatedTime;
  }


  public InMageAzureV2ReplicationDetails lastUpdateReceivedTime(OffsetDateTime lastUpdateReceivedTime) {
    this.lastUpdateReceivedTime = lastUpdateReceivedTime;
    return this;
  }

  /**
   * The last update time received from on-prem components.
   * @return lastUpdateReceivedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdateReceivedTime() {
    return lastUpdateReceivedTime;
  }

  public void setLastUpdateReceivedTime(OffsetDateTime lastUpdateReceivedTime) {
    this.lastUpdateReceivedTime = lastUpdateReceivedTime;
  }


  public InMageAzureV2ReplicationDetails licenseType(String licenseType) {
    this.licenseType = licenseType;
    return this;
  }

  /**
   * License Type of the VM to be used.
   * @return licenseType
   */
  @javax.annotation.Nullable
  public String getLicenseType() {
    return licenseType;
  }

  public void setLicenseType(String licenseType) {
    this.licenseType = licenseType;
  }


  public InMageAzureV2ReplicationDetails masterTargetId(String masterTargetId) {
    this.masterTargetId = masterTargetId;
    return this;
  }

  /**
   * The master target Id.
   * @return masterTargetId
   */
  @javax.annotation.Nullable
  public String getMasterTargetId() {
    return masterTargetId;
  }

  public void setMasterTargetId(String masterTargetId) {
    this.masterTargetId = masterTargetId;
  }


  public InMageAzureV2ReplicationDetails multiVmGroupId(String multiVmGroupId) {
    this.multiVmGroupId = multiVmGroupId;
    return this;
  }

  /**
   * The multi vm group Id.
   * @return multiVmGroupId
   */
  @javax.annotation.Nullable
  public String getMultiVmGroupId() {
    return multiVmGroupId;
  }

  public void setMultiVmGroupId(String multiVmGroupId) {
    this.multiVmGroupId = multiVmGroupId;
  }


  public InMageAzureV2ReplicationDetails multiVmGroupName(String multiVmGroupName) {
    this.multiVmGroupName = multiVmGroupName;
    return this;
  }

  /**
   * The multi vm group name.
   * @return multiVmGroupName
   */
  @javax.annotation.Nullable
  public String getMultiVmGroupName() {
    return multiVmGroupName;
  }

  public void setMultiVmGroupName(String multiVmGroupName) {
    this.multiVmGroupName = multiVmGroupName;
  }


  public InMageAzureV2ReplicationDetails multiVmSyncStatus(String multiVmSyncStatus) {
    this.multiVmSyncStatus = multiVmSyncStatus;
    return this;
  }

  /**
   * A value indicating whether multi vm sync is enabled or disabled.
   * @return multiVmSyncStatus
   */
  @javax.annotation.Nullable
  public String getMultiVmSyncStatus() {
    return multiVmSyncStatus;
  }

  public void setMultiVmSyncStatus(String multiVmSyncStatus) {
    this.multiVmSyncStatus = multiVmSyncStatus;
  }


  public InMageAzureV2ReplicationDetails osDiskId(String osDiskId) {
    this.osDiskId = osDiskId;
    return this;
  }

  /**
   * The id of the disk containing the OS.
   * @return osDiskId
   */
  @javax.annotation.Nullable
  public String getOsDiskId() {
    return osDiskId;
  }

  public void setOsDiskId(String osDiskId) {
    this.osDiskId = osDiskId;
  }


  public InMageAzureV2ReplicationDetails osType(String osType) {
    this.osType = osType;
    return this;
  }

  /**
   * The type of the OS on the VM.
   * @return osType
   */
  @javax.annotation.Nullable
  public String getOsType() {
    return osType;
  }

  public void setOsType(String osType) {
    this.osType = osType;
  }


  public InMageAzureV2ReplicationDetails osVersion(String osVersion) {
    this.osVersion = osVersion;
    return this;
  }

  /**
   * The OS Version of the protected item.
   * @return osVersion
   */
  @javax.annotation.Nullable
  public String getOsVersion() {
    return osVersion;
  }

  public void setOsVersion(String osVersion) {
    this.osVersion = osVersion;
  }


  public InMageAzureV2ReplicationDetails processServerId(String processServerId) {
    this.processServerId = processServerId;
    return this;
  }

  /**
   * The process server Id.
   * @return processServerId
   */
  @javax.annotation.Nullable
  public String getProcessServerId() {
    return processServerId;
  }

  public void setProcessServerId(String processServerId) {
    this.processServerId = processServerId;
  }


  public InMageAzureV2ReplicationDetails protectedDisks(List<InMageAzureV2ProtectedDiskDetails> protectedDisks) {
    this.protectedDisks = protectedDisks;
    return this;
  }

  public InMageAzureV2ReplicationDetails addProtectedDisksItem(InMageAzureV2ProtectedDiskDetails protectedDisksItem) {
    if (this.protectedDisks == null) {
      this.protectedDisks = new ArrayList<>();
    }
    this.protectedDisks.add(protectedDisksItem);
    return this;
  }

  /**
   * The list of protected disks.
   * @return protectedDisks
   */
  @javax.annotation.Nullable
  public List<InMageAzureV2ProtectedDiskDetails> getProtectedDisks() {
    return protectedDisks;
  }

  public void setProtectedDisks(List<InMageAzureV2ProtectedDiskDetails> protectedDisks) {
    this.protectedDisks = protectedDisks;
  }


  public InMageAzureV2ReplicationDetails protectionStage(String protectionStage) {
    this.protectionStage = protectionStage;
    return this;
  }

  /**
   * The protection stage.
   * @return protectionStage
   */
  @javax.annotation.Nullable
  public String getProtectionStage() {
    return protectionStage;
  }

  public void setProtectionStage(String protectionStage) {
    this.protectionStage = protectionStage;
  }


  public InMageAzureV2ReplicationDetails recoveryAvailabilitySetId(String recoveryAvailabilitySetId) {
    this.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
    return this;
  }

  /**
   * The recovery availability set Id.
   * @return recoveryAvailabilitySetId
   */
  @javax.annotation.Nullable
  public String getRecoveryAvailabilitySetId() {
    return recoveryAvailabilitySetId;
  }

  public void setRecoveryAvailabilitySetId(String recoveryAvailabilitySetId) {
    this.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
  }


  public InMageAzureV2ReplicationDetails recoveryAzureLogStorageAccountId(String recoveryAzureLogStorageAccountId) {
    this.recoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
    return this;
  }

  /**
   * The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
   * @return recoveryAzureLogStorageAccountId
   */
  @javax.annotation.Nullable
  public String getRecoveryAzureLogStorageAccountId() {
    return recoveryAzureLogStorageAccountId;
  }

  public void setRecoveryAzureLogStorageAccountId(String recoveryAzureLogStorageAccountId) {
    this.recoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
  }


  public InMageAzureV2ReplicationDetails recoveryAzureResourceGroupId(String recoveryAzureResourceGroupId) {
    this.recoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
    return this;
  }

  /**
   * The target resource group Id.
   * @return recoveryAzureResourceGroupId
   */
  @javax.annotation.Nullable
  public String getRecoveryAzureResourceGroupId() {
    return recoveryAzureResourceGroupId;
  }

  public void setRecoveryAzureResourceGroupId(String recoveryAzureResourceGroupId) {
    this.recoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
  }


  public InMageAzureV2ReplicationDetails recoveryAzureStorageAccount(String recoveryAzureStorageAccount) {
    this.recoveryAzureStorageAccount = recoveryAzureStorageAccount;
    return this;
  }

  /**
   * The recovery Azure storage account.
   * @return recoveryAzureStorageAccount
   */
  @javax.annotation.Nullable
  public String getRecoveryAzureStorageAccount() {
    return recoveryAzureStorageAccount;
  }

  public void setRecoveryAzureStorageAccount(String recoveryAzureStorageAccount) {
    this.recoveryAzureStorageAccount = recoveryAzureStorageAccount;
  }


  public InMageAzureV2ReplicationDetails recoveryAzureVMName(String recoveryAzureVMName) {
    this.recoveryAzureVMName = recoveryAzureVMName;
    return this;
  }

  /**
   * Recovery Azure given name.
   * @return recoveryAzureVMName
   */
  @javax.annotation.Nullable
  public String getRecoveryAzureVMName() {
    return recoveryAzureVMName;
  }

  public void setRecoveryAzureVMName(String recoveryAzureVMName) {
    this.recoveryAzureVMName = recoveryAzureVMName;
  }


  public InMageAzureV2ReplicationDetails recoveryAzureVMSize(String recoveryAzureVMSize) {
    this.recoveryAzureVMSize = recoveryAzureVMSize;
    return this;
  }

  /**
   * The Recovery Azure VM size.
   * @return recoveryAzureVMSize
   */
  @javax.annotation.Nullable
  public String getRecoveryAzureVMSize() {
    return recoveryAzureVMSize;
  }

  public void setRecoveryAzureVMSize(String recoveryAzureVMSize) {
    this.recoveryAzureVMSize = recoveryAzureVMSize;
  }


  public InMageAzureV2ReplicationDetails replicaId(String replicaId) {
    this.replicaId = replicaId;
    return this;
  }

  /**
   * The replica id of the protected item.
   * @return replicaId
   */
  @javax.annotation.Nullable
  public String getReplicaId() {
    return replicaId;
  }

  public void setReplicaId(String replicaId) {
    this.replicaId = replicaId;
  }


  public InMageAzureV2ReplicationDetails resyncProgressPercentage(Integer resyncProgressPercentage) {
    this.resyncProgressPercentage = resyncProgressPercentage;
    return this;
  }

  /**
   * The resync progress percentage.
   * @return resyncProgressPercentage
   */
  @javax.annotation.Nullable
  public Integer getResyncProgressPercentage() {
    return resyncProgressPercentage;
  }

  public void setResyncProgressPercentage(Integer resyncProgressPercentage) {
    this.resyncProgressPercentage = resyncProgressPercentage;
  }


  public InMageAzureV2ReplicationDetails rpoInSeconds(Long rpoInSeconds) {
    this.rpoInSeconds = rpoInSeconds;
    return this;
  }

  /**
   * The RPO in seconds.
   * @return rpoInSeconds
   */
  @javax.annotation.Nullable
  public Long getRpoInSeconds() {
    return rpoInSeconds;
  }

  public void setRpoInSeconds(Long rpoInSeconds) {
    this.rpoInSeconds = rpoInSeconds;
  }


  public InMageAzureV2ReplicationDetails selectedRecoveryAzureNetworkId(String selectedRecoveryAzureNetworkId) {
    this.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
    return this;
  }

  /**
   * The selected recovery azure network Id.
   * @return selectedRecoveryAzureNetworkId
   */
  @javax.annotation.Nullable
  public String getSelectedRecoveryAzureNetworkId() {
    return selectedRecoveryAzureNetworkId;
  }

  public void setSelectedRecoveryAzureNetworkId(String selectedRecoveryAzureNetworkId) {
    this.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
  }


  public InMageAzureV2ReplicationDetails selectedSourceNicId(String selectedSourceNicId) {
    this.selectedSourceNicId = selectedSourceNicId;
    return this;
  }

  /**
   * The selected source nic Id which will be used as the primary nic during failover.
   * @return selectedSourceNicId
   */
  @javax.annotation.Nullable
  public String getSelectedSourceNicId() {
    return selectedSourceNicId;
  }

  public void setSelectedSourceNicId(String selectedSourceNicId) {
    this.selectedSourceNicId = selectedSourceNicId;
  }


  public InMageAzureV2ReplicationDetails sourceVmCpuCount(Integer sourceVmCpuCount) {
    this.sourceVmCpuCount = sourceVmCpuCount;
    return this;
  }

  /**
   * The CPU count of the VM on the primary side.
   * @return sourceVmCpuCount
   */
  @javax.annotation.Nullable
  public Integer getSourceVmCpuCount() {
    return sourceVmCpuCount;
  }

  public void setSourceVmCpuCount(Integer sourceVmCpuCount) {
    this.sourceVmCpuCount = sourceVmCpuCount;
  }


  public InMageAzureV2ReplicationDetails sourceVmRamSizeInMB(Integer sourceVmRamSizeInMB) {
    this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
    return this;
  }

  /**
   * The RAM size of the VM on the primary side.
   * @return sourceVmRamSizeInMB
   */
  @javax.annotation.Nullable
  public Integer getSourceVmRamSizeInMB() {
    return sourceVmRamSizeInMB;
  }

  public void setSourceVmRamSizeInMB(Integer sourceVmRamSizeInMB) {
    this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
  }


  public InMageAzureV2ReplicationDetails targetVmId(String targetVmId) {
    this.targetVmId = targetVmId;
    return this;
  }

  /**
   * The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
   * @return targetVmId
   */
  @javax.annotation.Nullable
  public String getTargetVmId() {
    return targetVmId;
  }

  public void setTargetVmId(String targetVmId) {
    this.targetVmId = targetVmId;
  }


  public InMageAzureV2ReplicationDetails uncompressedDataRateInMB(Double uncompressedDataRateInMB) {
    this.uncompressedDataRateInMB = uncompressedDataRateInMB;
    return this;
  }

  /**
   * The uncompressed data change rate in MB.
   * @return uncompressedDataRateInMB
   */
  @javax.annotation.Nullable
  public Double getUncompressedDataRateInMB() {
    return uncompressedDataRateInMB;
  }

  public void setUncompressedDataRateInMB(Double uncompressedDataRateInMB) {
    this.uncompressedDataRateInMB = uncompressedDataRateInMB;
  }


  public InMageAzureV2ReplicationDetails useManagedDisks(String useManagedDisks) {
    this.useManagedDisks = useManagedDisks;
    return this;
  }

  /**
   * A value indicating whether managed disks should be used during failover.
   * @return useManagedDisks
   */
  @javax.annotation.Nullable
  public String getUseManagedDisks() {
    return useManagedDisks;
  }

  public void setUseManagedDisks(String useManagedDisks) {
    this.useManagedDisks = useManagedDisks;
  }


  public InMageAzureV2ReplicationDetails vCenterInfrastructureId(String vCenterInfrastructureId) {
    this.vCenterInfrastructureId = vCenterInfrastructureId;
    return this;
  }

  /**
   * The vCenter infrastructure Id.
   * @return vCenterInfrastructureId
   */
  @javax.annotation.Nullable
  public String getvCenterInfrastructureId() {
    return vCenterInfrastructureId;
  }

  public void setvCenterInfrastructureId(String vCenterInfrastructureId) {
    this.vCenterInfrastructureId = vCenterInfrastructureId;
  }


  public InMageAzureV2ReplicationDetails validationErrors(List<HealthError> validationErrors) {
    this.validationErrors = validationErrors;
    return this;
  }

  public InMageAzureV2ReplicationDetails addValidationErrorsItem(HealthError validationErrorsItem) {
    if (this.validationErrors == null) {
      this.validationErrors = new ArrayList<>();
    }
    this.validationErrors.add(validationErrorsItem);
    return this;
  }

  /**
   * The validation errors of the on-premise machine Value can be list of validation errors.
   * @return validationErrors
   */
  @javax.annotation.Nullable
  public List<HealthError> getValidationErrors() {
    return validationErrors;
  }

  public void setValidationErrors(List<HealthError> validationErrors) {
    this.validationErrors = validationErrors;
  }


  public InMageAzureV2ReplicationDetails vhdName(String vhdName) {
    this.vhdName = vhdName;
    return this;
  }

  /**
   * The OS disk VHD name.
   * @return vhdName
   */
  @javax.annotation.Nullable
  public String getVhdName() {
    return vhdName;
  }

  public void setVhdName(String vhdName) {
    this.vhdName = vhdName;
  }


  public InMageAzureV2ReplicationDetails vmId(String vmId) {
    this.vmId = vmId;
    return this;
  }

  /**
   * The virtual machine Id.
   * @return vmId
   */
  @javax.annotation.Nullable
  public String getVmId() {
    return vmId;
  }

  public void setVmId(String vmId) {
    this.vmId = vmId;
  }


  public InMageAzureV2ReplicationDetails vmNics(List<VMNicDetails> vmNics) {
    this.vmNics = vmNics;
    return this;
  }

  public InMageAzureV2ReplicationDetails addVmNicsItem(VMNicDetails vmNicsItem) {
    if (this.vmNics == null) {
      this.vmNics = new ArrayList<>();
    }
    this.vmNics.add(vmNicsItem);
    return this;
  }

  /**
   * The PE Network details.
   * @return vmNics
   */
  @javax.annotation.Nullable
  public List<VMNicDetails> getVmNics() {
    return vmNics;
  }

  public void setVmNics(List<VMNicDetails> vmNics) {
    this.vmNics = vmNics;
  }


  public InMageAzureV2ReplicationDetails vmProtectionState(String vmProtectionState) {
    this.vmProtectionState = vmProtectionState;
    return this;
  }

  /**
   * The protection state for the vm.
   * @return vmProtectionState
   */
  @javax.annotation.Nullable
  public String getVmProtectionState() {
    return vmProtectionState;
  }

  public void setVmProtectionState(String vmProtectionState) {
    this.vmProtectionState = vmProtectionState;
  }


  public InMageAzureV2ReplicationDetails vmProtectionStateDescription(String vmProtectionStateDescription) {
    this.vmProtectionStateDescription = vmProtectionStateDescription;
    return this;
  }

  /**
   * The protection state description for the vm.
   * @return vmProtectionStateDescription
   */
  @javax.annotation.Nullable
  public String getVmProtectionStateDescription() {
    return vmProtectionStateDescription;
  }

  public void setVmProtectionStateDescription(String vmProtectionStateDescription) {
    this.vmProtectionStateDescription = vmProtectionStateDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InMageAzureV2ReplicationDetails inMageAzureV2ReplicationDetails = (InMageAzureV2ReplicationDetails) o;
    return Objects.equals(this.agentExpiryDate, inMageAzureV2ReplicationDetails.agentExpiryDate) &&
        Objects.equals(this.agentVersion, inMageAzureV2ReplicationDetails.agentVersion) &&
        Objects.equals(this.azureVMDiskDetails, inMageAzureV2ReplicationDetails.azureVMDiskDetails) &&
        Objects.equals(this.compressedDataRateInMB, inMageAzureV2ReplicationDetails.compressedDataRateInMB) &&
        Objects.equals(this.datastores, inMageAzureV2ReplicationDetails.datastores) &&
        Objects.equals(this.discoveryType, inMageAzureV2ReplicationDetails.discoveryType) &&
        Objects.equals(this.diskResized, inMageAzureV2ReplicationDetails.diskResized) &&
        Objects.equals(this.enableRdpOnTargetOption, inMageAzureV2ReplicationDetails.enableRdpOnTargetOption) &&
        Objects.equals(this.infrastructureVmId, inMageAzureV2ReplicationDetails.infrastructureVmId) &&
        Objects.equals(this.ipAddress, inMageAzureV2ReplicationDetails.ipAddress) &&
        Objects.equals(this.isAgentUpdateRequired, inMageAzureV2ReplicationDetails.isAgentUpdateRequired) &&
        Objects.equals(this.isRebootAfterUpdateRequired, inMageAzureV2ReplicationDetails.isRebootAfterUpdateRequired) &&
        Objects.equals(this.lastHeartbeat, inMageAzureV2ReplicationDetails.lastHeartbeat) &&
        Objects.equals(this.lastRpoCalculatedTime, inMageAzureV2ReplicationDetails.lastRpoCalculatedTime) &&
        Objects.equals(this.lastUpdateReceivedTime, inMageAzureV2ReplicationDetails.lastUpdateReceivedTime) &&
        Objects.equals(this.licenseType, inMageAzureV2ReplicationDetails.licenseType) &&
        Objects.equals(this.masterTargetId, inMageAzureV2ReplicationDetails.masterTargetId) &&
        Objects.equals(this.multiVmGroupId, inMageAzureV2ReplicationDetails.multiVmGroupId) &&
        Objects.equals(this.multiVmGroupName, inMageAzureV2ReplicationDetails.multiVmGroupName) &&
        Objects.equals(this.multiVmSyncStatus, inMageAzureV2ReplicationDetails.multiVmSyncStatus) &&
        Objects.equals(this.osDiskId, inMageAzureV2ReplicationDetails.osDiskId) &&
        Objects.equals(this.osType, inMageAzureV2ReplicationDetails.osType) &&
        Objects.equals(this.osVersion, inMageAzureV2ReplicationDetails.osVersion) &&
        Objects.equals(this.processServerId, inMageAzureV2ReplicationDetails.processServerId) &&
        Objects.equals(this.protectedDisks, inMageAzureV2ReplicationDetails.protectedDisks) &&
        Objects.equals(this.protectionStage, inMageAzureV2ReplicationDetails.protectionStage) &&
        Objects.equals(this.recoveryAvailabilitySetId, inMageAzureV2ReplicationDetails.recoveryAvailabilitySetId) &&
        Objects.equals(this.recoveryAzureLogStorageAccountId, inMageAzureV2ReplicationDetails.recoveryAzureLogStorageAccountId) &&
        Objects.equals(this.recoveryAzureResourceGroupId, inMageAzureV2ReplicationDetails.recoveryAzureResourceGroupId) &&
        Objects.equals(this.recoveryAzureStorageAccount, inMageAzureV2ReplicationDetails.recoveryAzureStorageAccount) &&
        Objects.equals(this.recoveryAzureVMName, inMageAzureV2ReplicationDetails.recoveryAzureVMName) &&
        Objects.equals(this.recoveryAzureVMSize, inMageAzureV2ReplicationDetails.recoveryAzureVMSize) &&
        Objects.equals(this.replicaId, inMageAzureV2ReplicationDetails.replicaId) &&
        Objects.equals(this.resyncProgressPercentage, inMageAzureV2ReplicationDetails.resyncProgressPercentage) &&
        Objects.equals(this.rpoInSeconds, inMageAzureV2ReplicationDetails.rpoInSeconds) &&
        Objects.equals(this.selectedRecoveryAzureNetworkId, inMageAzureV2ReplicationDetails.selectedRecoveryAzureNetworkId) &&
        Objects.equals(this.selectedSourceNicId, inMageAzureV2ReplicationDetails.selectedSourceNicId) &&
        Objects.equals(this.sourceVmCpuCount, inMageAzureV2ReplicationDetails.sourceVmCpuCount) &&
        Objects.equals(this.sourceVmRamSizeInMB, inMageAzureV2ReplicationDetails.sourceVmRamSizeInMB) &&
        Objects.equals(this.targetVmId, inMageAzureV2ReplicationDetails.targetVmId) &&
        Objects.equals(this.uncompressedDataRateInMB, inMageAzureV2ReplicationDetails.uncompressedDataRateInMB) &&
        Objects.equals(this.useManagedDisks, inMageAzureV2ReplicationDetails.useManagedDisks) &&
        Objects.equals(this.vCenterInfrastructureId, inMageAzureV2ReplicationDetails.vCenterInfrastructureId) &&
        Objects.equals(this.validationErrors, inMageAzureV2ReplicationDetails.validationErrors) &&
        Objects.equals(this.vhdName, inMageAzureV2ReplicationDetails.vhdName) &&
        Objects.equals(this.vmId, inMageAzureV2ReplicationDetails.vmId) &&
        Objects.equals(this.vmNics, inMageAzureV2ReplicationDetails.vmNics) &&
        Objects.equals(this.vmProtectionState, inMageAzureV2ReplicationDetails.vmProtectionState) &&
        Objects.equals(this.vmProtectionStateDescription, inMageAzureV2ReplicationDetails.vmProtectionStateDescription) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentExpiryDate, agentVersion, azureVMDiskDetails, compressedDataRateInMB, datastores, discoveryType, diskResized, enableRdpOnTargetOption, infrastructureVmId, ipAddress, isAgentUpdateRequired, isRebootAfterUpdateRequired, lastHeartbeat, lastRpoCalculatedTime, lastUpdateReceivedTime, licenseType, masterTargetId, multiVmGroupId, multiVmGroupName, multiVmSyncStatus, osDiskId, osType, osVersion, processServerId, protectedDisks, protectionStage, recoveryAvailabilitySetId, recoveryAzureLogStorageAccountId, recoveryAzureResourceGroupId, recoveryAzureStorageAccount, recoveryAzureVMName, recoveryAzureVMSize, replicaId, resyncProgressPercentage, rpoInSeconds, selectedRecoveryAzureNetworkId, selectedSourceNicId, sourceVmCpuCount, sourceVmRamSizeInMB, targetVmId, uncompressedDataRateInMB, useManagedDisks, vCenterInfrastructureId, validationErrors, vhdName, vmId, vmNics, vmProtectionState, vmProtectionStateDescription, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InMageAzureV2ReplicationDetails {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    agentExpiryDate: ").append(toIndentedString(agentExpiryDate)).append("\n");
    sb.append("    agentVersion: ").append(toIndentedString(agentVersion)).append("\n");
    sb.append("    azureVMDiskDetails: ").append(toIndentedString(azureVMDiskDetails)).append("\n");
    sb.append("    compressedDataRateInMB: ").append(toIndentedString(compressedDataRateInMB)).append("\n");
    sb.append("    datastores: ").append(toIndentedString(datastores)).append("\n");
    sb.append("    discoveryType: ").append(toIndentedString(discoveryType)).append("\n");
    sb.append("    diskResized: ").append(toIndentedString(diskResized)).append("\n");
    sb.append("    enableRdpOnTargetOption: ").append(toIndentedString(enableRdpOnTargetOption)).append("\n");
    sb.append("    infrastructureVmId: ").append(toIndentedString(infrastructureVmId)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    isAgentUpdateRequired: ").append(toIndentedString(isAgentUpdateRequired)).append("\n");
    sb.append("    isRebootAfterUpdateRequired: ").append(toIndentedString(isRebootAfterUpdateRequired)).append("\n");
    sb.append("    lastHeartbeat: ").append(toIndentedString(lastHeartbeat)).append("\n");
    sb.append("    lastRpoCalculatedTime: ").append(toIndentedString(lastRpoCalculatedTime)).append("\n");
    sb.append("    lastUpdateReceivedTime: ").append(toIndentedString(lastUpdateReceivedTime)).append("\n");
    sb.append("    licenseType: ").append(toIndentedString(licenseType)).append("\n");
    sb.append("    masterTargetId: ").append(toIndentedString(masterTargetId)).append("\n");
    sb.append("    multiVmGroupId: ").append(toIndentedString(multiVmGroupId)).append("\n");
    sb.append("    multiVmGroupName: ").append(toIndentedString(multiVmGroupName)).append("\n");
    sb.append("    multiVmSyncStatus: ").append(toIndentedString(multiVmSyncStatus)).append("\n");
    sb.append("    osDiskId: ").append(toIndentedString(osDiskId)).append("\n");
    sb.append("    osType: ").append(toIndentedString(osType)).append("\n");
    sb.append("    osVersion: ").append(toIndentedString(osVersion)).append("\n");
    sb.append("    processServerId: ").append(toIndentedString(processServerId)).append("\n");
    sb.append("    protectedDisks: ").append(toIndentedString(protectedDisks)).append("\n");
    sb.append("    protectionStage: ").append(toIndentedString(protectionStage)).append("\n");
    sb.append("    recoveryAvailabilitySetId: ").append(toIndentedString(recoveryAvailabilitySetId)).append("\n");
    sb.append("    recoveryAzureLogStorageAccountId: ").append(toIndentedString(recoveryAzureLogStorageAccountId)).append("\n");
    sb.append("    recoveryAzureResourceGroupId: ").append(toIndentedString(recoveryAzureResourceGroupId)).append("\n");
    sb.append("    recoveryAzureStorageAccount: ").append(toIndentedString(recoveryAzureStorageAccount)).append("\n");
    sb.append("    recoveryAzureVMName: ").append(toIndentedString(recoveryAzureVMName)).append("\n");
    sb.append("    recoveryAzureVMSize: ").append(toIndentedString(recoveryAzureVMSize)).append("\n");
    sb.append("    replicaId: ").append(toIndentedString(replicaId)).append("\n");
    sb.append("    resyncProgressPercentage: ").append(toIndentedString(resyncProgressPercentage)).append("\n");
    sb.append("    rpoInSeconds: ").append(toIndentedString(rpoInSeconds)).append("\n");
    sb.append("    selectedRecoveryAzureNetworkId: ").append(toIndentedString(selectedRecoveryAzureNetworkId)).append("\n");
    sb.append("    selectedSourceNicId: ").append(toIndentedString(selectedSourceNicId)).append("\n");
    sb.append("    sourceVmCpuCount: ").append(toIndentedString(sourceVmCpuCount)).append("\n");
    sb.append("    sourceVmRamSizeInMB: ").append(toIndentedString(sourceVmRamSizeInMB)).append("\n");
    sb.append("    targetVmId: ").append(toIndentedString(targetVmId)).append("\n");
    sb.append("    uncompressedDataRateInMB: ").append(toIndentedString(uncompressedDataRateInMB)).append("\n");
    sb.append("    useManagedDisks: ").append(toIndentedString(useManagedDisks)).append("\n");
    sb.append("    vCenterInfrastructureId: ").append(toIndentedString(vCenterInfrastructureId)).append("\n");
    sb.append("    validationErrors: ").append(toIndentedString(validationErrors)).append("\n");
    sb.append("    vhdName: ").append(toIndentedString(vhdName)).append("\n");
    sb.append("    vmId: ").append(toIndentedString(vmId)).append("\n");
    sb.append("    vmNics: ").append(toIndentedString(vmNics)).append("\n");
    sb.append("    vmProtectionState: ").append(toIndentedString(vmProtectionState)).append("\n");
    sb.append("    vmProtectionStateDescription: ").append(toIndentedString(vmProtectionStateDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InMageAzureV2ReplicationDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InMageAzureV2ReplicationDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InMageAzureV2ReplicationDetails is not found in the empty JSON string", InMageAzureV2ReplicationDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InMageAzureV2ReplicationDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InMageAzureV2ReplicationDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InMageAzureV2ReplicationDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InMageAzureV2ReplicationDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InMageAzureV2ReplicationDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InMageAzureV2ReplicationDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<InMageAzureV2ReplicationDetails>() {
           @Override
           public void write(JsonWriter out, InMageAzureV2ReplicationDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InMageAzureV2ReplicationDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InMageAzureV2ReplicationDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InMageAzureV2ReplicationDetails
   * @throws IOException if the JSON string is invalid with respect to InMageAzureV2ReplicationDetails
   */
  public static InMageAzureV2ReplicationDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InMageAzureV2ReplicationDetails.class);
  }

  /**
   * Convert an instance of InMageAzureV2ReplicationDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

