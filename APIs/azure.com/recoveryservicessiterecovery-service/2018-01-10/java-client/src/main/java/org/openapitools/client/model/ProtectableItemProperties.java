/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConfigurationSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Replication protected item custom data details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:47.451286-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProtectableItemProperties {
  public static final String SERIALIZED_NAME_CUSTOM_DETAILS = "customDetails";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DETAILS)
  private ConfigurationSettings customDetails;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendlyName";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_PROTECTION_READINESS_ERRORS = "protectionReadinessErrors";
  @SerializedName(SERIALIZED_NAME_PROTECTION_READINESS_ERRORS)
  private List<String> protectionReadinessErrors = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROTECTION_STATUS = "protectionStatus";
  @SerializedName(SERIALIZED_NAME_PROTECTION_STATUS)
  private String protectionStatus;

  public static final String SERIALIZED_NAME_RECOVERY_SERVICES_PROVIDER_ID = "recoveryServicesProviderId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_SERVICES_PROVIDER_ID)
  private String recoveryServicesProviderId;

  public static final String SERIALIZED_NAME_REPLICATION_PROTECTED_ITEM_ID = "replicationProtectedItemId";
  @SerializedName(SERIALIZED_NAME_REPLICATION_PROTECTED_ITEM_ID)
  private String replicationProtectedItemId;

  public static final String SERIALIZED_NAME_SUPPORTED_REPLICATION_PROVIDERS = "supportedReplicationProviders";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_REPLICATION_PROVIDERS)
  private List<String> supportedReplicationProviders = new ArrayList<>();

  public ProtectableItemProperties() {
  }

  public ProtectableItemProperties customDetails(ConfigurationSettings customDetails) {
    this.customDetails = customDetails;
    return this;
  }

  /**
   * Get customDetails
   * @return customDetails
   */
  @javax.annotation.Nullable
  public ConfigurationSettings getCustomDetails() {
    return customDetails;
  }

  public void setCustomDetails(ConfigurationSettings customDetails) {
    this.customDetails = customDetails;
  }


  public ProtectableItemProperties friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The name.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public ProtectableItemProperties protectionReadinessErrors(List<String> protectionReadinessErrors) {
    this.protectionReadinessErrors = protectionReadinessErrors;
    return this;
  }

  public ProtectableItemProperties addProtectionReadinessErrorsItem(String protectionReadinessErrorsItem) {
    if (this.protectionReadinessErrors == null) {
      this.protectionReadinessErrors = new ArrayList<>();
    }
    this.protectionReadinessErrors.add(protectionReadinessErrorsItem);
    return this;
  }

  /**
   * The Current protection readiness errors.
   * @return protectionReadinessErrors
   */
  @javax.annotation.Nullable
  public List<String> getProtectionReadinessErrors() {
    return protectionReadinessErrors;
  }

  public void setProtectionReadinessErrors(List<String> protectionReadinessErrors) {
    this.protectionReadinessErrors = protectionReadinessErrors;
  }


  public ProtectableItemProperties protectionStatus(String protectionStatus) {
    this.protectionStatus = protectionStatus;
    return this;
  }

  /**
   * The protection status.
   * @return protectionStatus
   */
  @javax.annotation.Nullable
  public String getProtectionStatus() {
    return protectionStatus;
  }

  public void setProtectionStatus(String protectionStatus) {
    this.protectionStatus = protectionStatus;
  }


  public ProtectableItemProperties recoveryServicesProviderId(String recoveryServicesProviderId) {
    this.recoveryServicesProviderId = recoveryServicesProviderId;
    return this;
  }

  /**
   * The recovery provider ARM Id.
   * @return recoveryServicesProviderId
   */
  @javax.annotation.Nullable
  public String getRecoveryServicesProviderId() {
    return recoveryServicesProviderId;
  }

  public void setRecoveryServicesProviderId(String recoveryServicesProviderId) {
    this.recoveryServicesProviderId = recoveryServicesProviderId;
  }


  public ProtectableItemProperties replicationProtectedItemId(String replicationProtectedItemId) {
    this.replicationProtectedItemId = replicationProtectedItemId;
    return this;
  }

  /**
   * The ARM resource of protected items.
   * @return replicationProtectedItemId
   */
  @javax.annotation.Nullable
  public String getReplicationProtectedItemId() {
    return replicationProtectedItemId;
  }

  public void setReplicationProtectedItemId(String replicationProtectedItemId) {
    this.replicationProtectedItemId = replicationProtectedItemId;
  }


  public ProtectableItemProperties supportedReplicationProviders(List<String> supportedReplicationProviders) {
    this.supportedReplicationProviders = supportedReplicationProviders;
    return this;
  }

  public ProtectableItemProperties addSupportedReplicationProvidersItem(String supportedReplicationProvidersItem) {
    if (this.supportedReplicationProviders == null) {
      this.supportedReplicationProviders = new ArrayList<>();
    }
    this.supportedReplicationProviders.add(supportedReplicationProvidersItem);
    return this;
  }

  /**
   * The list of replication providers supported for the protectable item.
   * @return supportedReplicationProviders
   */
  @javax.annotation.Nullable
  public List<String> getSupportedReplicationProviders() {
    return supportedReplicationProviders;
  }

  public void setSupportedReplicationProviders(List<String> supportedReplicationProviders) {
    this.supportedReplicationProviders = supportedReplicationProviders;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProtectableItemProperties protectableItemProperties = (ProtectableItemProperties) o;
    return Objects.equals(this.customDetails, protectableItemProperties.customDetails) &&
        Objects.equals(this.friendlyName, protectableItemProperties.friendlyName) &&
        Objects.equals(this.protectionReadinessErrors, protectableItemProperties.protectionReadinessErrors) &&
        Objects.equals(this.protectionStatus, protectableItemProperties.protectionStatus) &&
        Objects.equals(this.recoveryServicesProviderId, protectableItemProperties.recoveryServicesProviderId) &&
        Objects.equals(this.replicationProtectedItemId, protectableItemProperties.replicationProtectedItemId) &&
        Objects.equals(this.supportedReplicationProviders, protectableItemProperties.supportedReplicationProviders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customDetails, friendlyName, protectionReadinessErrors, protectionStatus, recoveryServicesProviderId, replicationProtectedItemId, supportedReplicationProviders);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProtectableItemProperties {\n");
    sb.append("    customDetails: ").append(toIndentedString(customDetails)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    protectionReadinessErrors: ").append(toIndentedString(protectionReadinessErrors)).append("\n");
    sb.append("    protectionStatus: ").append(toIndentedString(protectionStatus)).append("\n");
    sb.append("    recoveryServicesProviderId: ").append(toIndentedString(recoveryServicesProviderId)).append("\n");
    sb.append("    replicationProtectedItemId: ").append(toIndentedString(replicationProtectedItemId)).append("\n");
    sb.append("    supportedReplicationProviders: ").append(toIndentedString(supportedReplicationProviders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customDetails");
    openapiFields.add("friendlyName");
    openapiFields.add("protectionReadinessErrors");
    openapiFields.add("protectionStatus");
    openapiFields.add("recoveryServicesProviderId");
    openapiFields.add("replicationProtectedItemId");
    openapiFields.add("supportedReplicationProviders");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProtectableItemProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProtectableItemProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProtectableItemProperties is not found in the empty JSON string", ProtectableItemProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProtectableItemProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProtectableItemProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `customDetails`
      if (jsonObj.get("customDetails") != null && !jsonObj.get("customDetails").isJsonNull()) {
        ConfigurationSettings.validateJsonElement(jsonObj.get("customDetails"));
      }
      if ((jsonObj.get("friendlyName") != null && !jsonObj.get("friendlyName").isJsonNull()) && !jsonObj.get("friendlyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendlyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendlyName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("protectionReadinessErrors") != null && !jsonObj.get("protectionReadinessErrors").isJsonNull() && !jsonObj.get("protectionReadinessErrors").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `protectionReadinessErrors` to be an array in the JSON string but got `%s`", jsonObj.get("protectionReadinessErrors").toString()));
      }
      if ((jsonObj.get("protectionStatus") != null && !jsonObj.get("protectionStatus").isJsonNull()) && !jsonObj.get("protectionStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protectionStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protectionStatus").toString()));
      }
      if ((jsonObj.get("recoveryServicesProviderId") != null && !jsonObj.get("recoveryServicesProviderId").isJsonNull()) && !jsonObj.get("recoveryServicesProviderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryServicesProviderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryServicesProviderId").toString()));
      }
      if ((jsonObj.get("replicationProtectedItemId") != null && !jsonObj.get("replicationProtectedItemId").isJsonNull()) && !jsonObj.get("replicationProtectedItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `replicationProtectedItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("replicationProtectedItemId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("supportedReplicationProviders") != null && !jsonObj.get("supportedReplicationProviders").isJsonNull() && !jsonObj.get("supportedReplicationProviders").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportedReplicationProviders` to be an array in the JSON string but got `%s`", jsonObj.get("supportedReplicationProviders").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProtectableItemProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProtectableItemProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProtectableItemProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProtectableItemProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ProtectableItemProperties>() {
           @Override
           public void write(JsonWriter out, ProtectableItemProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProtectableItemProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProtectableItemProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProtectableItemProperties
   * @throws IOException if the JSON string is invalid with respect to ProtectableItemProperties
   */
  public static ProtectableItemProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProtectableItemProperties.class);
  }

  /**
   * Convert an instance of ProtectableItemProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

