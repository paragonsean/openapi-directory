/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ReverseReplicationProviderSpecificInput;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InMageAzureV2 specific provider input.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:47.451286-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InMageAzureV2ReprotectInput extends ReverseReplicationProviderSpecificInput {
  public static final String SERIALIZED_NAME_DISKS_TO_INCLUDE = "disksToInclude";
  @SerializedName(SERIALIZED_NAME_DISKS_TO_INCLUDE)
  private List<String> disksToInclude = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOG_STORAGE_ACCOUNT_ID = "logStorageAccountId";
  @SerializedName(SERIALIZED_NAME_LOG_STORAGE_ACCOUNT_ID)
  private String logStorageAccountId;

  public static final String SERIALIZED_NAME_MASTER_TARGET_ID = "masterTargetId";
  @SerializedName(SERIALIZED_NAME_MASTER_TARGET_ID)
  private String masterTargetId;

  public static final String SERIALIZED_NAME_POLICY_ID = "policyId";
  @SerializedName(SERIALIZED_NAME_POLICY_ID)
  private String policyId;

  public static final String SERIALIZED_NAME_PROCESS_SERVER_ID = "processServerId";
  @SerializedName(SERIALIZED_NAME_PROCESS_SERVER_ID)
  private String processServerId;

  public static final String SERIALIZED_NAME_RUN_AS_ACCOUNT_ID = "runAsAccountId";
  @SerializedName(SERIALIZED_NAME_RUN_AS_ACCOUNT_ID)
  private String runAsAccountId;

  public static final String SERIALIZED_NAME_STORAGE_ACCOUNT_ID = "storageAccountId";
  @SerializedName(SERIALIZED_NAME_STORAGE_ACCOUNT_ID)
  private String storageAccountId;

  public InMageAzureV2ReprotectInput() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public InMageAzureV2ReprotectInput disksToInclude(List<String> disksToInclude) {
    this.disksToInclude = disksToInclude;
    return this;
  }

  public InMageAzureV2ReprotectInput addDisksToIncludeItem(String disksToIncludeItem) {
    if (this.disksToInclude == null) {
      this.disksToInclude = new ArrayList<>();
    }
    this.disksToInclude.add(disksToIncludeItem);
    return this;
  }

  /**
   * The disks to include list.
   * @return disksToInclude
   */
  @javax.annotation.Nullable
  public List<String> getDisksToInclude() {
    return disksToInclude;
  }

  public void setDisksToInclude(List<String> disksToInclude) {
    this.disksToInclude = disksToInclude;
  }


  public InMageAzureV2ReprotectInput logStorageAccountId(String logStorageAccountId) {
    this.logStorageAccountId = logStorageAccountId;
    return this;
  }

  /**
   * The storage account to be used for logging during replication.
   * @return logStorageAccountId
   */
  @javax.annotation.Nullable
  public String getLogStorageAccountId() {
    return logStorageAccountId;
  }

  public void setLogStorageAccountId(String logStorageAccountId) {
    this.logStorageAccountId = logStorageAccountId;
  }


  public InMageAzureV2ReprotectInput masterTargetId(String masterTargetId) {
    this.masterTargetId = masterTargetId;
    return this;
  }

  /**
   * The Master target Id.
   * @return masterTargetId
   */
  @javax.annotation.Nullable
  public String getMasterTargetId() {
    return masterTargetId;
  }

  public void setMasterTargetId(String masterTargetId) {
    this.masterTargetId = masterTargetId;
  }


  public InMageAzureV2ReprotectInput policyId(String policyId) {
    this.policyId = policyId;
    return this;
  }

  /**
   * The Policy Id.
   * @return policyId
   */
  @javax.annotation.Nullable
  public String getPolicyId() {
    return policyId;
  }

  public void setPolicyId(String policyId) {
    this.policyId = policyId;
  }


  public InMageAzureV2ReprotectInput processServerId(String processServerId) {
    this.processServerId = processServerId;
    return this;
  }

  /**
   * The Process Server Id.
   * @return processServerId
   */
  @javax.annotation.Nullable
  public String getProcessServerId() {
    return processServerId;
  }

  public void setProcessServerId(String processServerId) {
    this.processServerId = processServerId;
  }


  public InMageAzureV2ReprotectInput runAsAccountId(String runAsAccountId) {
    this.runAsAccountId = runAsAccountId;
    return this;
  }

  /**
   * The CS account Id.
   * @return runAsAccountId
   */
  @javax.annotation.Nullable
  public String getRunAsAccountId() {
    return runAsAccountId;
  }

  public void setRunAsAccountId(String runAsAccountId) {
    this.runAsAccountId = runAsAccountId;
  }


  public InMageAzureV2ReprotectInput storageAccountId(String storageAccountId) {
    this.storageAccountId = storageAccountId;
    return this;
  }

  /**
   * The storage account id.
   * @return storageAccountId
   */
  @javax.annotation.Nullable
  public String getStorageAccountId() {
    return storageAccountId;
  }

  public void setStorageAccountId(String storageAccountId) {
    this.storageAccountId = storageAccountId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InMageAzureV2ReprotectInput inMageAzureV2ReprotectInput = (InMageAzureV2ReprotectInput) o;
    return Objects.equals(this.disksToInclude, inMageAzureV2ReprotectInput.disksToInclude) &&
        Objects.equals(this.logStorageAccountId, inMageAzureV2ReprotectInput.logStorageAccountId) &&
        Objects.equals(this.masterTargetId, inMageAzureV2ReprotectInput.masterTargetId) &&
        Objects.equals(this.policyId, inMageAzureV2ReprotectInput.policyId) &&
        Objects.equals(this.processServerId, inMageAzureV2ReprotectInput.processServerId) &&
        Objects.equals(this.runAsAccountId, inMageAzureV2ReprotectInput.runAsAccountId) &&
        Objects.equals(this.storageAccountId, inMageAzureV2ReprotectInput.storageAccountId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disksToInclude, logStorageAccountId, masterTargetId, policyId, processServerId, runAsAccountId, storageAccountId, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InMageAzureV2ReprotectInput {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    disksToInclude: ").append(toIndentedString(disksToInclude)).append("\n");
    sb.append("    logStorageAccountId: ").append(toIndentedString(logStorageAccountId)).append("\n");
    sb.append("    masterTargetId: ").append(toIndentedString(masterTargetId)).append("\n");
    sb.append("    policyId: ").append(toIndentedString(policyId)).append("\n");
    sb.append("    processServerId: ").append(toIndentedString(processServerId)).append("\n");
    sb.append("    runAsAccountId: ").append(toIndentedString(runAsAccountId)).append("\n");
    sb.append("    storageAccountId: ").append(toIndentedString(storageAccountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InMageAzureV2ReprotectInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InMageAzureV2ReprotectInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InMageAzureV2ReprotectInput is not found in the empty JSON string", InMageAzureV2ReprotectInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InMageAzureV2ReprotectInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InMageAzureV2ReprotectInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InMageAzureV2ReprotectInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InMageAzureV2ReprotectInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InMageAzureV2ReprotectInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InMageAzureV2ReprotectInput.class));

       return (TypeAdapter<T>) new TypeAdapter<InMageAzureV2ReprotectInput>() {
           @Override
           public void write(JsonWriter out, InMageAzureV2ReprotectInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InMageAzureV2ReprotectInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InMageAzureV2ReprotectInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InMageAzureV2ReprotectInput
   * @throws IOException if the JSON string is invalid with respect to InMageAzureV2ReprotectInput
   */
  public static InMageAzureV2ReprotectInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InMageAzureV2ReprotectInput.class);
  }

  /**
   * Convert an instance of InMageAzureV2ReprotectInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

