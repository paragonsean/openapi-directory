/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EnableProtectionProviderSpecificInput;
import org.openapitools.client.model.InMageDiskExclusionInput;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VMware Azure specific enable protection input.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:47.451286-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InMageEnableProtectionInput extends EnableProtectionProviderSpecificInput {
  public static final String SERIALIZED_NAME_DATASTORE_NAME = "datastoreName";
  @SerializedName(SERIALIZED_NAME_DATASTORE_NAME)
  private String datastoreName;

  public static final String SERIALIZED_NAME_DISK_EXCLUSION_INPUT = "diskExclusionInput";
  @SerializedName(SERIALIZED_NAME_DISK_EXCLUSION_INPUT)
  private InMageDiskExclusionInput diskExclusionInput;

  public static final String SERIALIZED_NAME_DISKS_TO_INCLUDE = "disksToInclude";
  @SerializedName(SERIALIZED_NAME_DISKS_TO_INCLUDE)
  private List<String> disksToInclude = new ArrayList<>();

  public static final String SERIALIZED_NAME_MASTER_TARGET_ID = "masterTargetId";
  @SerializedName(SERIALIZED_NAME_MASTER_TARGET_ID)
  private String masterTargetId;

  public static final String SERIALIZED_NAME_MULTI_VM_GROUP_ID = "multiVmGroupId";
  @SerializedName(SERIALIZED_NAME_MULTI_VM_GROUP_ID)
  private String multiVmGroupId;

  public static final String SERIALIZED_NAME_MULTI_VM_GROUP_NAME = "multiVmGroupName";
  @SerializedName(SERIALIZED_NAME_MULTI_VM_GROUP_NAME)
  private String multiVmGroupName;

  public static final String SERIALIZED_NAME_PROCESS_SERVER_ID = "processServerId";
  @SerializedName(SERIALIZED_NAME_PROCESS_SERVER_ID)
  private String processServerId;

  public static final String SERIALIZED_NAME_RETENTION_DRIVE = "retentionDrive";
  @SerializedName(SERIALIZED_NAME_RETENTION_DRIVE)
  private String retentionDrive;

  public static final String SERIALIZED_NAME_RUN_AS_ACCOUNT_ID = "runAsAccountId";
  @SerializedName(SERIALIZED_NAME_RUN_AS_ACCOUNT_ID)
  private String runAsAccountId;

  public static final String SERIALIZED_NAME_VM_FRIENDLY_NAME = "vmFriendlyName";
  @SerializedName(SERIALIZED_NAME_VM_FRIENDLY_NAME)
  private String vmFriendlyName;

  public InMageEnableProtectionInput() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public InMageEnableProtectionInput datastoreName(String datastoreName) {
    this.datastoreName = datastoreName;
    return this;
  }

  /**
   * The target data store name.
   * @return datastoreName
   */
  @javax.annotation.Nullable
  public String getDatastoreName() {
    return datastoreName;
  }

  public void setDatastoreName(String datastoreName) {
    this.datastoreName = datastoreName;
  }


  public InMageEnableProtectionInput diskExclusionInput(InMageDiskExclusionInput diskExclusionInput) {
    this.diskExclusionInput = diskExclusionInput;
    return this;
  }

  /**
   * Get diskExclusionInput
   * @return diskExclusionInput
   */
  @javax.annotation.Nullable
  public InMageDiskExclusionInput getDiskExclusionInput() {
    return diskExclusionInput;
  }

  public void setDiskExclusionInput(InMageDiskExclusionInput diskExclusionInput) {
    this.diskExclusionInput = diskExclusionInput;
  }


  public InMageEnableProtectionInput disksToInclude(List<String> disksToInclude) {
    this.disksToInclude = disksToInclude;
    return this;
  }

  public InMageEnableProtectionInput addDisksToIncludeItem(String disksToIncludeItem) {
    if (this.disksToInclude == null) {
      this.disksToInclude = new ArrayList<>();
    }
    this.disksToInclude.add(disksToIncludeItem);
    return this;
  }

  /**
   * The disks to include list.
   * @return disksToInclude
   */
  @javax.annotation.Nullable
  public List<String> getDisksToInclude() {
    return disksToInclude;
  }

  public void setDisksToInclude(List<String> disksToInclude) {
    this.disksToInclude = disksToInclude;
  }


  public InMageEnableProtectionInput masterTargetId(String masterTargetId) {
    this.masterTargetId = masterTargetId;
    return this;
  }

  /**
   * The Master Target Id.
   * @return masterTargetId
   */
  @javax.annotation.Nonnull
  public String getMasterTargetId() {
    return masterTargetId;
  }

  public void setMasterTargetId(String masterTargetId) {
    this.masterTargetId = masterTargetId;
  }


  public InMageEnableProtectionInput multiVmGroupId(String multiVmGroupId) {
    this.multiVmGroupId = multiVmGroupId;
    return this;
  }

  /**
   * The multi vm group Id.
   * @return multiVmGroupId
   */
  @javax.annotation.Nonnull
  public String getMultiVmGroupId() {
    return multiVmGroupId;
  }

  public void setMultiVmGroupId(String multiVmGroupId) {
    this.multiVmGroupId = multiVmGroupId;
  }


  public InMageEnableProtectionInput multiVmGroupName(String multiVmGroupName) {
    this.multiVmGroupName = multiVmGroupName;
    return this;
  }

  /**
   * The multi vm group name.
   * @return multiVmGroupName
   */
  @javax.annotation.Nonnull
  public String getMultiVmGroupName() {
    return multiVmGroupName;
  }

  public void setMultiVmGroupName(String multiVmGroupName) {
    this.multiVmGroupName = multiVmGroupName;
  }


  public InMageEnableProtectionInput processServerId(String processServerId) {
    this.processServerId = processServerId;
    return this;
  }

  /**
   * The Process Server Id.
   * @return processServerId
   */
  @javax.annotation.Nonnull
  public String getProcessServerId() {
    return processServerId;
  }

  public void setProcessServerId(String processServerId) {
    this.processServerId = processServerId;
  }


  public InMageEnableProtectionInput retentionDrive(String retentionDrive) {
    this.retentionDrive = retentionDrive;
    return this;
  }

  /**
   * The retention drive to use on the MT.
   * @return retentionDrive
   */
  @javax.annotation.Nonnull
  public String getRetentionDrive() {
    return retentionDrive;
  }

  public void setRetentionDrive(String retentionDrive) {
    this.retentionDrive = retentionDrive;
  }


  public InMageEnableProtectionInput runAsAccountId(String runAsAccountId) {
    this.runAsAccountId = runAsAccountId;
    return this;
  }

  /**
   * The CS account Id.
   * @return runAsAccountId
   */
  @javax.annotation.Nullable
  public String getRunAsAccountId() {
    return runAsAccountId;
  }

  public void setRunAsAccountId(String runAsAccountId) {
    this.runAsAccountId = runAsAccountId;
  }


  public InMageEnableProtectionInput vmFriendlyName(String vmFriendlyName) {
    this.vmFriendlyName = vmFriendlyName;
    return this;
  }

  /**
   * The Vm Name.
   * @return vmFriendlyName
   */
  @javax.annotation.Nullable
  public String getVmFriendlyName() {
    return vmFriendlyName;
  }

  public void setVmFriendlyName(String vmFriendlyName) {
    this.vmFriendlyName = vmFriendlyName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InMageEnableProtectionInput inMageEnableProtectionInput = (InMageEnableProtectionInput) o;
    return Objects.equals(this.datastoreName, inMageEnableProtectionInput.datastoreName) &&
        Objects.equals(this.diskExclusionInput, inMageEnableProtectionInput.diskExclusionInput) &&
        Objects.equals(this.disksToInclude, inMageEnableProtectionInput.disksToInclude) &&
        Objects.equals(this.masterTargetId, inMageEnableProtectionInput.masterTargetId) &&
        Objects.equals(this.multiVmGroupId, inMageEnableProtectionInput.multiVmGroupId) &&
        Objects.equals(this.multiVmGroupName, inMageEnableProtectionInput.multiVmGroupName) &&
        Objects.equals(this.processServerId, inMageEnableProtectionInput.processServerId) &&
        Objects.equals(this.retentionDrive, inMageEnableProtectionInput.retentionDrive) &&
        Objects.equals(this.runAsAccountId, inMageEnableProtectionInput.runAsAccountId) &&
        Objects.equals(this.vmFriendlyName, inMageEnableProtectionInput.vmFriendlyName) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(datastoreName, diskExclusionInput, disksToInclude, masterTargetId, multiVmGroupId, multiVmGroupName, processServerId, retentionDrive, runAsAccountId, vmFriendlyName, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InMageEnableProtectionInput {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    datastoreName: ").append(toIndentedString(datastoreName)).append("\n");
    sb.append("    diskExclusionInput: ").append(toIndentedString(diskExclusionInput)).append("\n");
    sb.append("    disksToInclude: ").append(toIndentedString(disksToInclude)).append("\n");
    sb.append("    masterTargetId: ").append(toIndentedString(masterTargetId)).append("\n");
    sb.append("    multiVmGroupId: ").append(toIndentedString(multiVmGroupId)).append("\n");
    sb.append("    multiVmGroupName: ").append(toIndentedString(multiVmGroupName)).append("\n");
    sb.append("    processServerId: ").append(toIndentedString(processServerId)).append("\n");
    sb.append("    retentionDrive: ").append(toIndentedString(retentionDrive)).append("\n");
    sb.append("    runAsAccountId: ").append(toIndentedString(runAsAccountId)).append("\n");
    sb.append("    vmFriendlyName: ").append(toIndentedString(vmFriendlyName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("masterTargetId");
    openapiRequiredFields.add("multiVmGroupId");
    openapiRequiredFields.add("multiVmGroupName");
    openapiRequiredFields.add("processServerId");
    openapiRequiredFields.add("retentionDrive");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InMageEnableProtectionInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InMageEnableProtectionInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InMageEnableProtectionInput is not found in the empty JSON string", InMageEnableProtectionInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InMageEnableProtectionInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InMageEnableProtectionInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : InMageEnableProtectionInput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InMageEnableProtectionInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InMageEnableProtectionInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InMageEnableProtectionInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InMageEnableProtectionInput.class));

       return (TypeAdapter<T>) new TypeAdapter<InMageEnableProtectionInput>() {
           @Override
           public void write(JsonWriter out, InMageEnableProtectionInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InMageEnableProtectionInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InMageEnableProtectionInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InMageEnableProtectionInput
   * @throws IOException if the JSON string is invalid with respect to InMageEnableProtectionInput
   */
  public static InMageEnableProtectionInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InMageEnableProtectionInput.class);
  }

  /**
   * Convert an instance of InMageEnableProtectionInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

