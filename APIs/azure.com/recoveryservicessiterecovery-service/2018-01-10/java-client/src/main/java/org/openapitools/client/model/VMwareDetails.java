/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FabricSpecificDetails;
import org.openapitools.client.model.MasterTargetServer;
import org.openapitools.client.model.ProcessServer;
import org.openapitools.client.model.RunAsAccount;
import org.openapitools.client.model.VersionDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Store the fabric details specific to the VMware fabric.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:47.451286-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VMwareDetails extends FabricSpecificDetails {
  public static final String SERIALIZED_NAME_AGENT_COUNT = "agentCount";
  @SerializedName(SERIALIZED_NAME_AGENT_COUNT)
  private String agentCount;

  public static final String SERIALIZED_NAME_AGENT_EXPIRY_DATE = "agentExpiryDate";
  @SerializedName(SERIALIZED_NAME_AGENT_EXPIRY_DATE)
  private OffsetDateTime agentExpiryDate;

  public static final String SERIALIZED_NAME_AGENT_VERSION = "agentVersion";
  @SerializedName(SERIALIZED_NAME_AGENT_VERSION)
  private String agentVersion;

  public static final String SERIALIZED_NAME_AGENT_VERSION_DETAILS = "agentVersionDetails";
  @SerializedName(SERIALIZED_NAME_AGENT_VERSION_DETAILS)
  private VersionDetails agentVersionDetails;

  public static final String SERIALIZED_NAME_AVAILABLE_MEMORY_IN_BYTES = "availableMemoryInBytes";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_MEMORY_IN_BYTES)
  private Long availableMemoryInBytes;

  public static final String SERIALIZED_NAME_AVAILABLE_SPACE_IN_BYTES = "availableSpaceInBytes";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_SPACE_IN_BYTES)
  private Long availableSpaceInBytes;

  public static final String SERIALIZED_NAME_CPU_LOAD = "cpuLoad";
  @SerializedName(SERIALIZED_NAME_CPU_LOAD)
  private String cpuLoad;

  public static final String SERIALIZED_NAME_CPU_LOAD_STATUS = "cpuLoadStatus";
  @SerializedName(SERIALIZED_NAME_CPU_LOAD_STATUS)
  private String cpuLoadStatus;

  public static final String SERIALIZED_NAME_CS_SERVICE_STATUS = "csServiceStatus";
  @SerializedName(SERIALIZED_NAME_CS_SERVICE_STATUS)
  private String csServiceStatus;

  public static final String SERIALIZED_NAME_DATABASE_SERVER_LOAD = "databaseServerLoad";
  @SerializedName(SERIALIZED_NAME_DATABASE_SERVER_LOAD)
  private String databaseServerLoad;

  public static final String SERIALIZED_NAME_DATABASE_SERVER_LOAD_STATUS = "databaseServerLoadStatus";
  @SerializedName(SERIALIZED_NAME_DATABASE_SERVER_LOAD_STATUS)
  private String databaseServerLoadStatus;

  public static final String SERIALIZED_NAME_HOST_NAME = "hostName";
  @SerializedName(SERIALIZED_NAME_HOST_NAME)
  private String hostName;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ipAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_LAST_HEARTBEAT = "lastHeartbeat";
  @SerializedName(SERIALIZED_NAME_LAST_HEARTBEAT)
  private OffsetDateTime lastHeartbeat;

  public static final String SERIALIZED_NAME_MASTER_TARGET_SERVERS = "masterTargetServers";
  @SerializedName(SERIALIZED_NAME_MASTER_TARGET_SERVERS)
  private List<MasterTargetServer> masterTargetServers = new ArrayList<>();

  public static final String SERIALIZED_NAME_MEMORY_USAGE_STATUS = "memoryUsageStatus";
  @SerializedName(SERIALIZED_NAME_MEMORY_USAGE_STATUS)
  private String memoryUsageStatus;

  public static final String SERIALIZED_NAME_PROCESS_SERVER_COUNT = "processServerCount";
  @SerializedName(SERIALIZED_NAME_PROCESS_SERVER_COUNT)
  private String processServerCount;

  public static final String SERIALIZED_NAME_PROCESS_SERVERS = "processServers";
  @SerializedName(SERIALIZED_NAME_PROCESS_SERVERS)
  private List<ProcessServer> processServers = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROTECTED_SERVERS = "protectedServers";
  @SerializedName(SERIALIZED_NAME_PROTECTED_SERVERS)
  private String protectedServers;

  public static final String SERIALIZED_NAME_PS_TEMPLATE_VERSION = "psTemplateVersion";
  @SerializedName(SERIALIZED_NAME_PS_TEMPLATE_VERSION)
  private String psTemplateVersion;

  public static final String SERIALIZED_NAME_REPLICATION_PAIR_COUNT = "replicationPairCount";
  @SerializedName(SERIALIZED_NAME_REPLICATION_PAIR_COUNT)
  private String replicationPairCount;

  public static final String SERIALIZED_NAME_RUN_AS_ACCOUNTS = "runAsAccounts";
  @SerializedName(SERIALIZED_NAME_RUN_AS_ACCOUNTS)
  private List<RunAsAccount> runAsAccounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_SPACE_USAGE_STATUS = "spaceUsageStatus";
  @SerializedName(SERIALIZED_NAME_SPACE_USAGE_STATUS)
  private String spaceUsageStatus;

  public static final String SERIALIZED_NAME_SSL_CERT_EXPIRY_DATE = "sslCertExpiryDate";
  @SerializedName(SERIALIZED_NAME_SSL_CERT_EXPIRY_DATE)
  private OffsetDateTime sslCertExpiryDate;

  public static final String SERIALIZED_NAME_SSL_CERT_EXPIRY_REMAINING_DAYS = "sslCertExpiryRemainingDays";
  @SerializedName(SERIALIZED_NAME_SSL_CERT_EXPIRY_REMAINING_DAYS)
  private Integer sslCertExpiryRemainingDays;

  public static final String SERIALIZED_NAME_SYSTEM_LOAD = "systemLoad";
  @SerializedName(SERIALIZED_NAME_SYSTEM_LOAD)
  private String systemLoad;

  public static final String SERIALIZED_NAME_SYSTEM_LOAD_STATUS = "systemLoadStatus";
  @SerializedName(SERIALIZED_NAME_SYSTEM_LOAD_STATUS)
  private String systemLoadStatus;

  public static final String SERIALIZED_NAME_TOTAL_MEMORY_IN_BYTES = "totalMemoryInBytes";
  @SerializedName(SERIALIZED_NAME_TOTAL_MEMORY_IN_BYTES)
  private Long totalMemoryInBytes;

  public static final String SERIALIZED_NAME_TOTAL_SPACE_IN_BYTES = "totalSpaceInBytes";
  @SerializedName(SERIALIZED_NAME_TOTAL_SPACE_IN_BYTES)
  private Long totalSpaceInBytes;

  public static final String SERIALIZED_NAME_VERSION_STATUS = "versionStatus";
  @SerializedName(SERIALIZED_NAME_VERSION_STATUS)
  private String versionStatus;

  public static final String SERIALIZED_NAME_WEB_LOAD = "webLoad";
  @SerializedName(SERIALIZED_NAME_WEB_LOAD)
  private String webLoad;

  public static final String SERIALIZED_NAME_WEB_LOAD_STATUS = "webLoadStatus";
  @SerializedName(SERIALIZED_NAME_WEB_LOAD_STATUS)
  private String webLoadStatus;

  public VMwareDetails() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public VMwareDetails(
     String instanceType
  ) {
    this();
    this.instanceType = instanceType;
  }

  public VMwareDetails agentCount(String agentCount) {
    this.agentCount = agentCount;
    return this;
  }

  /**
   * The number of source and target servers configured to talk to this CS.
   * @return agentCount
   */
  @javax.annotation.Nullable
  public String getAgentCount() {
    return agentCount;
  }

  public void setAgentCount(String agentCount) {
    this.agentCount = agentCount;
  }


  public VMwareDetails agentExpiryDate(OffsetDateTime agentExpiryDate) {
    this.agentExpiryDate = agentExpiryDate;
    return this;
  }

  /**
   * Agent expiry date.
   * @return agentExpiryDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAgentExpiryDate() {
    return agentExpiryDate;
  }

  public void setAgentExpiryDate(OffsetDateTime agentExpiryDate) {
    this.agentExpiryDate = agentExpiryDate;
  }


  public VMwareDetails agentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
    return this;
  }

  /**
   * The agent Version.
   * @return agentVersion
   */
  @javax.annotation.Nullable
  public String getAgentVersion() {
    return agentVersion;
  }

  public void setAgentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
  }


  public VMwareDetails agentVersionDetails(VersionDetails agentVersionDetails) {
    this.agentVersionDetails = agentVersionDetails;
    return this;
  }

  /**
   * Get agentVersionDetails
   * @return agentVersionDetails
   */
  @javax.annotation.Nullable
  public VersionDetails getAgentVersionDetails() {
    return agentVersionDetails;
  }

  public void setAgentVersionDetails(VersionDetails agentVersionDetails) {
    this.agentVersionDetails = agentVersionDetails;
  }


  public VMwareDetails availableMemoryInBytes(Long availableMemoryInBytes) {
    this.availableMemoryInBytes = availableMemoryInBytes;
    return this;
  }

  /**
   * The available memory.
   * @return availableMemoryInBytes
   */
  @javax.annotation.Nullable
  public Long getAvailableMemoryInBytes() {
    return availableMemoryInBytes;
  }

  public void setAvailableMemoryInBytes(Long availableMemoryInBytes) {
    this.availableMemoryInBytes = availableMemoryInBytes;
  }


  public VMwareDetails availableSpaceInBytes(Long availableSpaceInBytes) {
    this.availableSpaceInBytes = availableSpaceInBytes;
    return this;
  }

  /**
   * The available space.
   * @return availableSpaceInBytes
   */
  @javax.annotation.Nullable
  public Long getAvailableSpaceInBytes() {
    return availableSpaceInBytes;
  }

  public void setAvailableSpaceInBytes(Long availableSpaceInBytes) {
    this.availableSpaceInBytes = availableSpaceInBytes;
  }


  public VMwareDetails cpuLoad(String cpuLoad) {
    this.cpuLoad = cpuLoad;
    return this;
  }

  /**
   * The percentage of the CPU load.
   * @return cpuLoad
   */
  @javax.annotation.Nullable
  public String getCpuLoad() {
    return cpuLoad;
  }

  public void setCpuLoad(String cpuLoad) {
    this.cpuLoad = cpuLoad;
  }


  public VMwareDetails cpuLoadStatus(String cpuLoadStatus) {
    this.cpuLoadStatus = cpuLoadStatus;
    return this;
  }

  /**
   * The CPU load status.
   * @return cpuLoadStatus
   */
  @javax.annotation.Nullable
  public String getCpuLoadStatus() {
    return cpuLoadStatus;
  }

  public void setCpuLoadStatus(String cpuLoadStatus) {
    this.cpuLoadStatus = cpuLoadStatus;
  }


  public VMwareDetails csServiceStatus(String csServiceStatus) {
    this.csServiceStatus = csServiceStatus;
    return this;
  }

  /**
   * The CS service status.
   * @return csServiceStatus
   */
  @javax.annotation.Nullable
  public String getCsServiceStatus() {
    return csServiceStatus;
  }

  public void setCsServiceStatus(String csServiceStatus) {
    this.csServiceStatus = csServiceStatus;
  }


  public VMwareDetails databaseServerLoad(String databaseServerLoad) {
    this.databaseServerLoad = databaseServerLoad;
    return this;
  }

  /**
   * The database server load.
   * @return databaseServerLoad
   */
  @javax.annotation.Nullable
  public String getDatabaseServerLoad() {
    return databaseServerLoad;
  }

  public void setDatabaseServerLoad(String databaseServerLoad) {
    this.databaseServerLoad = databaseServerLoad;
  }


  public VMwareDetails databaseServerLoadStatus(String databaseServerLoadStatus) {
    this.databaseServerLoadStatus = databaseServerLoadStatus;
    return this;
  }

  /**
   * The database server load status.
   * @return databaseServerLoadStatus
   */
  @javax.annotation.Nullable
  public String getDatabaseServerLoadStatus() {
    return databaseServerLoadStatus;
  }

  public void setDatabaseServerLoadStatus(String databaseServerLoadStatus) {
    this.databaseServerLoadStatus = databaseServerLoadStatus;
  }


  public VMwareDetails hostName(String hostName) {
    this.hostName = hostName;
    return this;
  }

  /**
   * The host name.
   * @return hostName
   */
  @javax.annotation.Nullable
  public String getHostName() {
    return hostName;
  }

  public void setHostName(String hostName) {
    this.hostName = hostName;
  }


  public VMwareDetails ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * The IP address.
   * @return ipAddress
   */
  @javax.annotation.Nullable
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public VMwareDetails lastHeartbeat(OffsetDateTime lastHeartbeat) {
    this.lastHeartbeat = lastHeartbeat;
    return this;
  }

  /**
   * The last heartbeat received from CS server.
   * @return lastHeartbeat
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastHeartbeat() {
    return lastHeartbeat;
  }

  public void setLastHeartbeat(OffsetDateTime lastHeartbeat) {
    this.lastHeartbeat = lastHeartbeat;
  }


  public VMwareDetails masterTargetServers(List<MasterTargetServer> masterTargetServers) {
    this.masterTargetServers = masterTargetServers;
    return this;
  }

  public VMwareDetails addMasterTargetServersItem(MasterTargetServer masterTargetServersItem) {
    if (this.masterTargetServers == null) {
      this.masterTargetServers = new ArrayList<>();
    }
    this.masterTargetServers.add(masterTargetServersItem);
    return this;
  }

  /**
   * The list of Master Target servers associated with the fabric.
   * @return masterTargetServers
   */
  @javax.annotation.Nullable
  public List<MasterTargetServer> getMasterTargetServers() {
    return masterTargetServers;
  }

  public void setMasterTargetServers(List<MasterTargetServer> masterTargetServers) {
    this.masterTargetServers = masterTargetServers;
  }


  public VMwareDetails memoryUsageStatus(String memoryUsageStatus) {
    this.memoryUsageStatus = memoryUsageStatus;
    return this;
  }

  /**
   * The memory usage status.
   * @return memoryUsageStatus
   */
  @javax.annotation.Nullable
  public String getMemoryUsageStatus() {
    return memoryUsageStatus;
  }

  public void setMemoryUsageStatus(String memoryUsageStatus) {
    this.memoryUsageStatus = memoryUsageStatus;
  }


  public VMwareDetails processServerCount(String processServerCount) {
    this.processServerCount = processServerCount;
    return this;
  }

  /**
   * The number of process servers.
   * @return processServerCount
   */
  @javax.annotation.Nullable
  public String getProcessServerCount() {
    return processServerCount;
  }

  public void setProcessServerCount(String processServerCount) {
    this.processServerCount = processServerCount;
  }


  public VMwareDetails processServers(List<ProcessServer> processServers) {
    this.processServers = processServers;
    return this;
  }

  public VMwareDetails addProcessServersItem(ProcessServer processServersItem) {
    if (this.processServers == null) {
      this.processServers = new ArrayList<>();
    }
    this.processServers.add(processServersItem);
    return this;
  }

  /**
   * The list of Process Servers associated with the fabric.
   * @return processServers
   */
  @javax.annotation.Nullable
  public List<ProcessServer> getProcessServers() {
    return processServers;
  }

  public void setProcessServers(List<ProcessServer> processServers) {
    this.processServers = processServers;
  }


  public VMwareDetails protectedServers(String protectedServers) {
    this.protectedServers = protectedServers;
    return this;
  }

  /**
   * The number of protected servers.
   * @return protectedServers
   */
  @javax.annotation.Nullable
  public String getProtectedServers() {
    return protectedServers;
  }

  public void setProtectedServers(String protectedServers) {
    this.protectedServers = protectedServers;
  }


  public VMwareDetails psTemplateVersion(String psTemplateVersion) {
    this.psTemplateVersion = psTemplateVersion;
    return this;
  }

  /**
   * PS template version.
   * @return psTemplateVersion
   */
  @javax.annotation.Nullable
  public String getPsTemplateVersion() {
    return psTemplateVersion;
  }

  public void setPsTemplateVersion(String psTemplateVersion) {
    this.psTemplateVersion = psTemplateVersion;
  }


  public VMwareDetails replicationPairCount(String replicationPairCount) {
    this.replicationPairCount = replicationPairCount;
    return this;
  }

  /**
   * The number of replication pairs configured in this CS.
   * @return replicationPairCount
   */
  @javax.annotation.Nullable
  public String getReplicationPairCount() {
    return replicationPairCount;
  }

  public void setReplicationPairCount(String replicationPairCount) {
    this.replicationPairCount = replicationPairCount;
  }


  public VMwareDetails runAsAccounts(List<RunAsAccount> runAsAccounts) {
    this.runAsAccounts = runAsAccounts;
    return this;
  }

  public VMwareDetails addRunAsAccountsItem(RunAsAccount runAsAccountsItem) {
    if (this.runAsAccounts == null) {
      this.runAsAccounts = new ArrayList<>();
    }
    this.runAsAccounts.add(runAsAccountsItem);
    return this;
  }

  /**
   * The list of run as accounts created on the server.
   * @return runAsAccounts
   */
  @javax.annotation.Nullable
  public List<RunAsAccount> getRunAsAccounts() {
    return runAsAccounts;
  }

  public void setRunAsAccounts(List<RunAsAccount> runAsAccounts) {
    this.runAsAccounts = runAsAccounts;
  }


  public VMwareDetails spaceUsageStatus(String spaceUsageStatus) {
    this.spaceUsageStatus = spaceUsageStatus;
    return this;
  }

  /**
   * The space usage status.
   * @return spaceUsageStatus
   */
  @javax.annotation.Nullable
  public String getSpaceUsageStatus() {
    return spaceUsageStatus;
  }

  public void setSpaceUsageStatus(String spaceUsageStatus) {
    this.spaceUsageStatus = spaceUsageStatus;
  }


  public VMwareDetails sslCertExpiryDate(OffsetDateTime sslCertExpiryDate) {
    this.sslCertExpiryDate = sslCertExpiryDate;
    return this;
  }

  /**
   * CS SSL cert expiry date.
   * @return sslCertExpiryDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getSslCertExpiryDate() {
    return sslCertExpiryDate;
  }

  public void setSslCertExpiryDate(OffsetDateTime sslCertExpiryDate) {
    this.sslCertExpiryDate = sslCertExpiryDate;
  }


  public VMwareDetails sslCertExpiryRemainingDays(Integer sslCertExpiryRemainingDays) {
    this.sslCertExpiryRemainingDays = sslCertExpiryRemainingDays;
    return this;
  }

  /**
   * CS SSL cert expiry date.
   * @return sslCertExpiryRemainingDays
   */
  @javax.annotation.Nullable
  public Integer getSslCertExpiryRemainingDays() {
    return sslCertExpiryRemainingDays;
  }

  public void setSslCertExpiryRemainingDays(Integer sslCertExpiryRemainingDays) {
    this.sslCertExpiryRemainingDays = sslCertExpiryRemainingDays;
  }


  public VMwareDetails systemLoad(String systemLoad) {
    this.systemLoad = systemLoad;
    return this;
  }

  /**
   * The percentage of the system load.
   * @return systemLoad
   */
  @javax.annotation.Nullable
  public String getSystemLoad() {
    return systemLoad;
  }

  public void setSystemLoad(String systemLoad) {
    this.systemLoad = systemLoad;
  }


  public VMwareDetails systemLoadStatus(String systemLoadStatus) {
    this.systemLoadStatus = systemLoadStatus;
    return this;
  }

  /**
   * The system load status.
   * @return systemLoadStatus
   */
  @javax.annotation.Nullable
  public String getSystemLoadStatus() {
    return systemLoadStatus;
  }

  public void setSystemLoadStatus(String systemLoadStatus) {
    this.systemLoadStatus = systemLoadStatus;
  }


  public VMwareDetails totalMemoryInBytes(Long totalMemoryInBytes) {
    this.totalMemoryInBytes = totalMemoryInBytes;
    return this;
  }

  /**
   * The total memory.
   * @return totalMemoryInBytes
   */
  @javax.annotation.Nullable
  public Long getTotalMemoryInBytes() {
    return totalMemoryInBytes;
  }

  public void setTotalMemoryInBytes(Long totalMemoryInBytes) {
    this.totalMemoryInBytes = totalMemoryInBytes;
  }


  public VMwareDetails totalSpaceInBytes(Long totalSpaceInBytes) {
    this.totalSpaceInBytes = totalSpaceInBytes;
    return this;
  }

  /**
   * The total space.
   * @return totalSpaceInBytes
   */
  @javax.annotation.Nullable
  public Long getTotalSpaceInBytes() {
    return totalSpaceInBytes;
  }

  public void setTotalSpaceInBytes(Long totalSpaceInBytes) {
    this.totalSpaceInBytes = totalSpaceInBytes;
  }


  public VMwareDetails versionStatus(String versionStatus) {
    this.versionStatus = versionStatus;
    return this;
  }

  /**
   * Version status
   * @return versionStatus
   */
  @javax.annotation.Nullable
  public String getVersionStatus() {
    return versionStatus;
  }

  public void setVersionStatus(String versionStatus) {
    this.versionStatus = versionStatus;
  }


  public VMwareDetails webLoad(String webLoad) {
    this.webLoad = webLoad;
    return this;
  }

  /**
   * The web load.
   * @return webLoad
   */
  @javax.annotation.Nullable
  public String getWebLoad() {
    return webLoad;
  }

  public void setWebLoad(String webLoad) {
    this.webLoad = webLoad;
  }


  public VMwareDetails webLoadStatus(String webLoadStatus) {
    this.webLoadStatus = webLoadStatus;
    return this;
  }

  /**
   * The web load status.
   * @return webLoadStatus
   */
  @javax.annotation.Nullable
  public String getWebLoadStatus() {
    return webLoadStatus;
  }

  public void setWebLoadStatus(String webLoadStatus) {
    this.webLoadStatus = webLoadStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VMwareDetails vmwareDetails = (VMwareDetails) o;
    return Objects.equals(this.agentCount, vmwareDetails.agentCount) &&
        Objects.equals(this.agentExpiryDate, vmwareDetails.agentExpiryDate) &&
        Objects.equals(this.agentVersion, vmwareDetails.agentVersion) &&
        Objects.equals(this.agentVersionDetails, vmwareDetails.agentVersionDetails) &&
        Objects.equals(this.availableMemoryInBytes, vmwareDetails.availableMemoryInBytes) &&
        Objects.equals(this.availableSpaceInBytes, vmwareDetails.availableSpaceInBytes) &&
        Objects.equals(this.cpuLoad, vmwareDetails.cpuLoad) &&
        Objects.equals(this.cpuLoadStatus, vmwareDetails.cpuLoadStatus) &&
        Objects.equals(this.csServiceStatus, vmwareDetails.csServiceStatus) &&
        Objects.equals(this.databaseServerLoad, vmwareDetails.databaseServerLoad) &&
        Objects.equals(this.databaseServerLoadStatus, vmwareDetails.databaseServerLoadStatus) &&
        Objects.equals(this.hostName, vmwareDetails.hostName) &&
        Objects.equals(this.ipAddress, vmwareDetails.ipAddress) &&
        Objects.equals(this.lastHeartbeat, vmwareDetails.lastHeartbeat) &&
        Objects.equals(this.masterTargetServers, vmwareDetails.masterTargetServers) &&
        Objects.equals(this.memoryUsageStatus, vmwareDetails.memoryUsageStatus) &&
        Objects.equals(this.processServerCount, vmwareDetails.processServerCount) &&
        Objects.equals(this.processServers, vmwareDetails.processServers) &&
        Objects.equals(this.protectedServers, vmwareDetails.protectedServers) &&
        Objects.equals(this.psTemplateVersion, vmwareDetails.psTemplateVersion) &&
        Objects.equals(this.replicationPairCount, vmwareDetails.replicationPairCount) &&
        Objects.equals(this.runAsAccounts, vmwareDetails.runAsAccounts) &&
        Objects.equals(this.spaceUsageStatus, vmwareDetails.spaceUsageStatus) &&
        Objects.equals(this.sslCertExpiryDate, vmwareDetails.sslCertExpiryDate) &&
        Objects.equals(this.sslCertExpiryRemainingDays, vmwareDetails.sslCertExpiryRemainingDays) &&
        Objects.equals(this.systemLoad, vmwareDetails.systemLoad) &&
        Objects.equals(this.systemLoadStatus, vmwareDetails.systemLoadStatus) &&
        Objects.equals(this.totalMemoryInBytes, vmwareDetails.totalMemoryInBytes) &&
        Objects.equals(this.totalSpaceInBytes, vmwareDetails.totalSpaceInBytes) &&
        Objects.equals(this.versionStatus, vmwareDetails.versionStatus) &&
        Objects.equals(this.webLoad, vmwareDetails.webLoad) &&
        Objects.equals(this.webLoadStatus, vmwareDetails.webLoadStatus) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentCount, agentExpiryDate, agentVersion, agentVersionDetails, availableMemoryInBytes, availableSpaceInBytes, cpuLoad, cpuLoadStatus, csServiceStatus, databaseServerLoad, databaseServerLoadStatus, hostName, ipAddress, lastHeartbeat, masterTargetServers, memoryUsageStatus, processServerCount, processServers, protectedServers, psTemplateVersion, replicationPairCount, runAsAccounts, spaceUsageStatus, sslCertExpiryDate, sslCertExpiryRemainingDays, systemLoad, systemLoadStatus, totalMemoryInBytes, totalSpaceInBytes, versionStatus, webLoad, webLoadStatus, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VMwareDetails {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    agentCount: ").append(toIndentedString(agentCount)).append("\n");
    sb.append("    agentExpiryDate: ").append(toIndentedString(agentExpiryDate)).append("\n");
    sb.append("    agentVersion: ").append(toIndentedString(agentVersion)).append("\n");
    sb.append("    agentVersionDetails: ").append(toIndentedString(agentVersionDetails)).append("\n");
    sb.append("    availableMemoryInBytes: ").append(toIndentedString(availableMemoryInBytes)).append("\n");
    sb.append("    availableSpaceInBytes: ").append(toIndentedString(availableSpaceInBytes)).append("\n");
    sb.append("    cpuLoad: ").append(toIndentedString(cpuLoad)).append("\n");
    sb.append("    cpuLoadStatus: ").append(toIndentedString(cpuLoadStatus)).append("\n");
    sb.append("    csServiceStatus: ").append(toIndentedString(csServiceStatus)).append("\n");
    sb.append("    databaseServerLoad: ").append(toIndentedString(databaseServerLoad)).append("\n");
    sb.append("    databaseServerLoadStatus: ").append(toIndentedString(databaseServerLoadStatus)).append("\n");
    sb.append("    hostName: ").append(toIndentedString(hostName)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    lastHeartbeat: ").append(toIndentedString(lastHeartbeat)).append("\n");
    sb.append("    masterTargetServers: ").append(toIndentedString(masterTargetServers)).append("\n");
    sb.append("    memoryUsageStatus: ").append(toIndentedString(memoryUsageStatus)).append("\n");
    sb.append("    processServerCount: ").append(toIndentedString(processServerCount)).append("\n");
    sb.append("    processServers: ").append(toIndentedString(processServers)).append("\n");
    sb.append("    protectedServers: ").append(toIndentedString(protectedServers)).append("\n");
    sb.append("    psTemplateVersion: ").append(toIndentedString(psTemplateVersion)).append("\n");
    sb.append("    replicationPairCount: ").append(toIndentedString(replicationPairCount)).append("\n");
    sb.append("    runAsAccounts: ").append(toIndentedString(runAsAccounts)).append("\n");
    sb.append("    spaceUsageStatus: ").append(toIndentedString(spaceUsageStatus)).append("\n");
    sb.append("    sslCertExpiryDate: ").append(toIndentedString(sslCertExpiryDate)).append("\n");
    sb.append("    sslCertExpiryRemainingDays: ").append(toIndentedString(sslCertExpiryRemainingDays)).append("\n");
    sb.append("    systemLoad: ").append(toIndentedString(systemLoad)).append("\n");
    sb.append("    systemLoadStatus: ").append(toIndentedString(systemLoadStatus)).append("\n");
    sb.append("    totalMemoryInBytes: ").append(toIndentedString(totalMemoryInBytes)).append("\n");
    sb.append("    totalSpaceInBytes: ").append(toIndentedString(totalSpaceInBytes)).append("\n");
    sb.append("    versionStatus: ").append(toIndentedString(versionStatus)).append("\n");
    sb.append("    webLoad: ").append(toIndentedString(webLoad)).append("\n");
    sb.append("    webLoadStatus: ").append(toIndentedString(webLoadStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VMwareDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VMwareDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VMwareDetails is not found in the empty JSON string", VMwareDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VMwareDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VMwareDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VMwareDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VMwareDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VMwareDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VMwareDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<VMwareDetails>() {
           @Override
           public void write(JsonWriter out, VMwareDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VMwareDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VMwareDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VMwareDetails
   * @throws IOException if the JSON string is invalid with respect to VMwareDetails
   */
  public static VMwareDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VMwareDetails.class);
  }

  /**
   * Convert an instance of VMwareDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

