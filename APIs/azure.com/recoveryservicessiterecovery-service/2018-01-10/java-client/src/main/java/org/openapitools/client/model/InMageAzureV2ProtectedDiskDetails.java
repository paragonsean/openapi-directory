/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InMageAzureV2 protected disk details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:47.451286-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InMageAzureV2ProtectedDiskDetails {
  public static final String SERIALIZED_NAME_DISK_CAPACITY_IN_BYTES = "diskCapacityInBytes";
  @SerializedName(SERIALIZED_NAME_DISK_CAPACITY_IN_BYTES)
  private Long diskCapacityInBytes;

  public static final String SERIALIZED_NAME_DISK_ID = "diskId";
  @SerializedName(SERIALIZED_NAME_DISK_ID)
  private String diskId;

  public static final String SERIALIZED_NAME_DISK_NAME = "diskName";
  @SerializedName(SERIALIZED_NAME_DISK_NAME)
  private String diskName;

  public static final String SERIALIZED_NAME_DISK_RESIZED = "diskResized";
  @SerializedName(SERIALIZED_NAME_DISK_RESIZED)
  private String diskResized;

  public static final String SERIALIZED_NAME_FILE_SYSTEM_CAPACITY_IN_BYTES = "fileSystemCapacityInBytes";
  @SerializedName(SERIALIZED_NAME_FILE_SYSTEM_CAPACITY_IN_BYTES)
  private Long fileSystemCapacityInBytes;

  public static final String SERIALIZED_NAME_HEALTH_ERROR_CODE = "healthErrorCode";
  @SerializedName(SERIALIZED_NAME_HEALTH_ERROR_CODE)
  private String healthErrorCode;

  public static final String SERIALIZED_NAME_LAST_RPO_CALCULATED_TIME = "lastRpoCalculatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_RPO_CALCULATED_TIME)
  private OffsetDateTime lastRpoCalculatedTime;

  public static final String SERIALIZED_NAME_PROTECTION_STAGE = "protectionStage";
  @SerializedName(SERIALIZED_NAME_PROTECTION_STAGE)
  private String protectionStage;

  public static final String SERIALIZED_NAME_PS_DATA_IN_MEGA_BYTES = "psDataInMegaBytes";
  @SerializedName(SERIALIZED_NAME_PS_DATA_IN_MEGA_BYTES)
  private Double psDataInMegaBytes;

  public static final String SERIALIZED_NAME_RESYNC_DURATION_IN_SECONDS = "resyncDurationInSeconds";
  @SerializedName(SERIALIZED_NAME_RESYNC_DURATION_IN_SECONDS)
  private Long resyncDurationInSeconds;

  public static final String SERIALIZED_NAME_RESYNC_PROGRESS_PERCENTAGE = "resyncProgressPercentage";
  @SerializedName(SERIALIZED_NAME_RESYNC_PROGRESS_PERCENTAGE)
  private Integer resyncProgressPercentage;

  public static final String SERIALIZED_NAME_RESYNC_REQUIRED = "resyncRequired";
  @SerializedName(SERIALIZED_NAME_RESYNC_REQUIRED)
  private String resyncRequired;

  public static final String SERIALIZED_NAME_RPO_IN_SECONDS = "rpoInSeconds";
  @SerializedName(SERIALIZED_NAME_RPO_IN_SECONDS)
  private Long rpoInSeconds;

  public static final String SERIALIZED_NAME_SOURCE_DATA_IN_MEGA_BYTES = "sourceDataInMegaBytes";
  @SerializedName(SERIALIZED_NAME_SOURCE_DATA_IN_MEGA_BYTES)
  private Double sourceDataInMegaBytes;

  public static final String SERIALIZED_NAME_TARGET_DATA_IN_MEGA_BYTES = "targetDataInMegaBytes";
  @SerializedName(SERIALIZED_NAME_TARGET_DATA_IN_MEGA_BYTES)
  private Double targetDataInMegaBytes;

  public InMageAzureV2ProtectedDiskDetails() {
  }

  public InMageAzureV2ProtectedDiskDetails diskCapacityInBytes(Long diskCapacityInBytes) {
    this.diskCapacityInBytes = diskCapacityInBytes;
    return this;
  }

  /**
   * The disk capacity in bytes.
   * @return diskCapacityInBytes
   */
  @javax.annotation.Nullable
  public Long getDiskCapacityInBytes() {
    return diskCapacityInBytes;
  }

  public void setDiskCapacityInBytes(Long diskCapacityInBytes) {
    this.diskCapacityInBytes = diskCapacityInBytes;
  }


  public InMageAzureV2ProtectedDiskDetails diskId(String diskId) {
    this.diskId = diskId;
    return this;
  }

  /**
   * The disk id.
   * @return diskId
   */
  @javax.annotation.Nullable
  public String getDiskId() {
    return diskId;
  }

  public void setDiskId(String diskId) {
    this.diskId = diskId;
  }


  public InMageAzureV2ProtectedDiskDetails diskName(String diskName) {
    this.diskName = diskName;
    return this;
  }

  /**
   * The disk name.
   * @return diskName
   */
  @javax.annotation.Nullable
  public String getDiskName() {
    return diskName;
  }

  public void setDiskName(String diskName) {
    this.diskName = diskName;
  }


  public InMageAzureV2ProtectedDiskDetails diskResized(String diskResized) {
    this.diskResized = diskResized;
    return this;
  }

  /**
   * A value indicating whether disk is resized.
   * @return diskResized
   */
  @javax.annotation.Nullable
  public String getDiskResized() {
    return diskResized;
  }

  public void setDiskResized(String diskResized) {
    this.diskResized = diskResized;
  }


  public InMageAzureV2ProtectedDiskDetails fileSystemCapacityInBytes(Long fileSystemCapacityInBytes) {
    this.fileSystemCapacityInBytes = fileSystemCapacityInBytes;
    return this;
  }

  /**
   * The disk file system capacity in bytes.
   * @return fileSystemCapacityInBytes
   */
  @javax.annotation.Nullable
  public Long getFileSystemCapacityInBytes() {
    return fileSystemCapacityInBytes;
  }

  public void setFileSystemCapacityInBytes(Long fileSystemCapacityInBytes) {
    this.fileSystemCapacityInBytes = fileSystemCapacityInBytes;
  }


  public InMageAzureV2ProtectedDiskDetails healthErrorCode(String healthErrorCode) {
    this.healthErrorCode = healthErrorCode;
    return this;
  }

  /**
   * The health error code for the disk.
   * @return healthErrorCode
   */
  @javax.annotation.Nullable
  public String getHealthErrorCode() {
    return healthErrorCode;
  }

  public void setHealthErrorCode(String healthErrorCode) {
    this.healthErrorCode = healthErrorCode;
  }


  public InMageAzureV2ProtectedDiskDetails lastRpoCalculatedTime(OffsetDateTime lastRpoCalculatedTime) {
    this.lastRpoCalculatedTime = lastRpoCalculatedTime;
    return this;
  }

  /**
   * The last RPO calculated time.
   * @return lastRpoCalculatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastRpoCalculatedTime() {
    return lastRpoCalculatedTime;
  }

  public void setLastRpoCalculatedTime(OffsetDateTime lastRpoCalculatedTime) {
    this.lastRpoCalculatedTime = lastRpoCalculatedTime;
  }


  public InMageAzureV2ProtectedDiskDetails protectionStage(String protectionStage) {
    this.protectionStage = protectionStage;
    return this;
  }

  /**
   * The protection stage.
   * @return protectionStage
   */
  @javax.annotation.Nullable
  public String getProtectionStage() {
    return protectionStage;
  }

  public void setProtectionStage(String protectionStage) {
    this.protectionStage = protectionStage;
  }


  public InMageAzureV2ProtectedDiskDetails psDataInMegaBytes(Double psDataInMegaBytes) {
    this.psDataInMegaBytes = psDataInMegaBytes;
    return this;
  }

  /**
   * The PS data transit in MB.
   * @return psDataInMegaBytes
   */
  @javax.annotation.Nullable
  public Double getPsDataInMegaBytes() {
    return psDataInMegaBytes;
  }

  public void setPsDataInMegaBytes(Double psDataInMegaBytes) {
    this.psDataInMegaBytes = psDataInMegaBytes;
  }


  public InMageAzureV2ProtectedDiskDetails resyncDurationInSeconds(Long resyncDurationInSeconds) {
    this.resyncDurationInSeconds = resyncDurationInSeconds;
    return this;
  }

  /**
   * The resync duration in seconds.
   * @return resyncDurationInSeconds
   */
  @javax.annotation.Nullable
  public Long getResyncDurationInSeconds() {
    return resyncDurationInSeconds;
  }

  public void setResyncDurationInSeconds(Long resyncDurationInSeconds) {
    this.resyncDurationInSeconds = resyncDurationInSeconds;
  }


  public InMageAzureV2ProtectedDiskDetails resyncProgressPercentage(Integer resyncProgressPercentage) {
    this.resyncProgressPercentage = resyncProgressPercentage;
    return this;
  }

  /**
   * The resync progress percentage.
   * @return resyncProgressPercentage
   */
  @javax.annotation.Nullable
  public Integer getResyncProgressPercentage() {
    return resyncProgressPercentage;
  }

  public void setResyncProgressPercentage(Integer resyncProgressPercentage) {
    this.resyncProgressPercentage = resyncProgressPercentage;
  }


  public InMageAzureV2ProtectedDiskDetails resyncRequired(String resyncRequired) {
    this.resyncRequired = resyncRequired;
    return this;
  }

  /**
   * A value indicating whether resync is required for this disk.
   * @return resyncRequired
   */
  @javax.annotation.Nullable
  public String getResyncRequired() {
    return resyncRequired;
  }

  public void setResyncRequired(String resyncRequired) {
    this.resyncRequired = resyncRequired;
  }


  public InMageAzureV2ProtectedDiskDetails rpoInSeconds(Long rpoInSeconds) {
    this.rpoInSeconds = rpoInSeconds;
    return this;
  }

  /**
   * The RPO in seconds.
   * @return rpoInSeconds
   */
  @javax.annotation.Nullable
  public Long getRpoInSeconds() {
    return rpoInSeconds;
  }

  public void setRpoInSeconds(Long rpoInSeconds) {
    this.rpoInSeconds = rpoInSeconds;
  }


  public InMageAzureV2ProtectedDiskDetails sourceDataInMegaBytes(Double sourceDataInMegaBytes) {
    this.sourceDataInMegaBytes = sourceDataInMegaBytes;
    return this;
  }

  /**
   * The source data transit in MB.
   * @return sourceDataInMegaBytes
   */
  @javax.annotation.Nullable
  public Double getSourceDataInMegaBytes() {
    return sourceDataInMegaBytes;
  }

  public void setSourceDataInMegaBytes(Double sourceDataInMegaBytes) {
    this.sourceDataInMegaBytes = sourceDataInMegaBytes;
  }


  public InMageAzureV2ProtectedDiskDetails targetDataInMegaBytes(Double targetDataInMegaBytes) {
    this.targetDataInMegaBytes = targetDataInMegaBytes;
    return this;
  }

  /**
   * The target data transit in MB.
   * @return targetDataInMegaBytes
   */
  @javax.annotation.Nullable
  public Double getTargetDataInMegaBytes() {
    return targetDataInMegaBytes;
  }

  public void setTargetDataInMegaBytes(Double targetDataInMegaBytes) {
    this.targetDataInMegaBytes = targetDataInMegaBytes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InMageAzureV2ProtectedDiskDetails inMageAzureV2ProtectedDiskDetails = (InMageAzureV2ProtectedDiskDetails) o;
    return Objects.equals(this.diskCapacityInBytes, inMageAzureV2ProtectedDiskDetails.diskCapacityInBytes) &&
        Objects.equals(this.diskId, inMageAzureV2ProtectedDiskDetails.diskId) &&
        Objects.equals(this.diskName, inMageAzureV2ProtectedDiskDetails.diskName) &&
        Objects.equals(this.diskResized, inMageAzureV2ProtectedDiskDetails.diskResized) &&
        Objects.equals(this.fileSystemCapacityInBytes, inMageAzureV2ProtectedDiskDetails.fileSystemCapacityInBytes) &&
        Objects.equals(this.healthErrorCode, inMageAzureV2ProtectedDiskDetails.healthErrorCode) &&
        Objects.equals(this.lastRpoCalculatedTime, inMageAzureV2ProtectedDiskDetails.lastRpoCalculatedTime) &&
        Objects.equals(this.protectionStage, inMageAzureV2ProtectedDiskDetails.protectionStage) &&
        Objects.equals(this.psDataInMegaBytes, inMageAzureV2ProtectedDiskDetails.psDataInMegaBytes) &&
        Objects.equals(this.resyncDurationInSeconds, inMageAzureV2ProtectedDiskDetails.resyncDurationInSeconds) &&
        Objects.equals(this.resyncProgressPercentage, inMageAzureV2ProtectedDiskDetails.resyncProgressPercentage) &&
        Objects.equals(this.resyncRequired, inMageAzureV2ProtectedDiskDetails.resyncRequired) &&
        Objects.equals(this.rpoInSeconds, inMageAzureV2ProtectedDiskDetails.rpoInSeconds) &&
        Objects.equals(this.sourceDataInMegaBytes, inMageAzureV2ProtectedDiskDetails.sourceDataInMegaBytes) &&
        Objects.equals(this.targetDataInMegaBytes, inMageAzureV2ProtectedDiskDetails.targetDataInMegaBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diskCapacityInBytes, diskId, diskName, diskResized, fileSystemCapacityInBytes, healthErrorCode, lastRpoCalculatedTime, protectionStage, psDataInMegaBytes, resyncDurationInSeconds, resyncProgressPercentage, resyncRequired, rpoInSeconds, sourceDataInMegaBytes, targetDataInMegaBytes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InMageAzureV2ProtectedDiskDetails {\n");
    sb.append("    diskCapacityInBytes: ").append(toIndentedString(diskCapacityInBytes)).append("\n");
    sb.append("    diskId: ").append(toIndentedString(diskId)).append("\n");
    sb.append("    diskName: ").append(toIndentedString(diskName)).append("\n");
    sb.append("    diskResized: ").append(toIndentedString(diskResized)).append("\n");
    sb.append("    fileSystemCapacityInBytes: ").append(toIndentedString(fileSystemCapacityInBytes)).append("\n");
    sb.append("    healthErrorCode: ").append(toIndentedString(healthErrorCode)).append("\n");
    sb.append("    lastRpoCalculatedTime: ").append(toIndentedString(lastRpoCalculatedTime)).append("\n");
    sb.append("    protectionStage: ").append(toIndentedString(protectionStage)).append("\n");
    sb.append("    psDataInMegaBytes: ").append(toIndentedString(psDataInMegaBytes)).append("\n");
    sb.append("    resyncDurationInSeconds: ").append(toIndentedString(resyncDurationInSeconds)).append("\n");
    sb.append("    resyncProgressPercentage: ").append(toIndentedString(resyncProgressPercentage)).append("\n");
    sb.append("    resyncRequired: ").append(toIndentedString(resyncRequired)).append("\n");
    sb.append("    rpoInSeconds: ").append(toIndentedString(rpoInSeconds)).append("\n");
    sb.append("    sourceDataInMegaBytes: ").append(toIndentedString(sourceDataInMegaBytes)).append("\n");
    sb.append("    targetDataInMegaBytes: ").append(toIndentedString(targetDataInMegaBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("diskCapacityInBytes");
    openapiFields.add("diskId");
    openapiFields.add("diskName");
    openapiFields.add("diskResized");
    openapiFields.add("fileSystemCapacityInBytes");
    openapiFields.add("healthErrorCode");
    openapiFields.add("lastRpoCalculatedTime");
    openapiFields.add("protectionStage");
    openapiFields.add("psDataInMegaBytes");
    openapiFields.add("resyncDurationInSeconds");
    openapiFields.add("resyncProgressPercentage");
    openapiFields.add("resyncRequired");
    openapiFields.add("rpoInSeconds");
    openapiFields.add("sourceDataInMegaBytes");
    openapiFields.add("targetDataInMegaBytes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InMageAzureV2ProtectedDiskDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InMageAzureV2ProtectedDiskDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InMageAzureV2ProtectedDiskDetails is not found in the empty JSON string", InMageAzureV2ProtectedDiskDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InMageAzureV2ProtectedDiskDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InMageAzureV2ProtectedDiskDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("diskId") != null && !jsonObj.get("diskId").isJsonNull()) && !jsonObj.get("diskId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `diskId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("diskId").toString()));
      }
      if ((jsonObj.get("diskName") != null && !jsonObj.get("diskName").isJsonNull()) && !jsonObj.get("diskName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `diskName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("diskName").toString()));
      }
      if ((jsonObj.get("diskResized") != null && !jsonObj.get("diskResized").isJsonNull()) && !jsonObj.get("diskResized").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `diskResized` to be a primitive type in the JSON string but got `%s`", jsonObj.get("diskResized").toString()));
      }
      if ((jsonObj.get("healthErrorCode") != null && !jsonObj.get("healthErrorCode").isJsonNull()) && !jsonObj.get("healthErrorCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `healthErrorCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("healthErrorCode").toString()));
      }
      if ((jsonObj.get("protectionStage") != null && !jsonObj.get("protectionStage").isJsonNull()) && !jsonObj.get("protectionStage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protectionStage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protectionStage").toString()));
      }
      if ((jsonObj.get("resyncRequired") != null && !jsonObj.get("resyncRequired").isJsonNull()) && !jsonObj.get("resyncRequired").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resyncRequired` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resyncRequired").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InMageAzureV2ProtectedDiskDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InMageAzureV2ProtectedDiskDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InMageAzureV2ProtectedDiskDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InMageAzureV2ProtectedDiskDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<InMageAzureV2ProtectedDiskDetails>() {
           @Override
           public void write(JsonWriter out, InMageAzureV2ProtectedDiskDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InMageAzureV2ProtectedDiskDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InMageAzureV2ProtectedDiskDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InMageAzureV2ProtectedDiskDetails
   * @throws IOException if the JSON string is invalid with respect to InMageAzureV2ProtectedDiskDetails
   */
  public static InMageAzureV2ProtectedDiskDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InMageAzureV2ProtectedDiskDetails.class);
  }

  /**
   * Convert an instance of InMageAzureV2ProtectedDiskDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

