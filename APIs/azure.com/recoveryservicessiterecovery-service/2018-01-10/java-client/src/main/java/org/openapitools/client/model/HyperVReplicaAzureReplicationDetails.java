/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AzureVmDiskDetails;
import org.openapitools.client.model.InitialReplicationDetails;
import org.openapitools.client.model.OSDetails;
import org.openapitools.client.model.ReplicationProviderSpecificSettings;
import org.openapitools.client.model.VMNicDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Hyper V Replica Azure provider specific settings.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:47.451286-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class HyperVReplicaAzureReplicationDetails extends ReplicationProviderSpecificSettings {
  public static final String SERIALIZED_NAME_AZURE_VM_DISK_DETAILS = "azureVmDiskDetails";
  @SerializedName(SERIALIZED_NAME_AZURE_VM_DISK_DETAILS)
  private List<AzureVmDiskDetails> azureVmDiskDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLE_RDP_ON_TARGET_OPTION = "enableRdpOnTargetOption";
  @SerializedName(SERIALIZED_NAME_ENABLE_RDP_ON_TARGET_OPTION)
  private String enableRdpOnTargetOption;

  public static final String SERIALIZED_NAME_ENCRYPTION = "encryption";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION)
  private String encryption;

  public static final String SERIALIZED_NAME_INITIAL_REPLICATION_DETAILS = "initialReplicationDetails";
  @SerializedName(SERIALIZED_NAME_INITIAL_REPLICATION_DETAILS)
  private InitialReplicationDetails initialReplicationDetails;

  public static final String SERIALIZED_NAME_LAST_REPLICATED_TIME = "lastReplicatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_REPLICATED_TIME)
  private OffsetDateTime lastReplicatedTime;

  public static final String SERIALIZED_NAME_LAST_RPO_CALCULATED_TIME = "lastRpoCalculatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_RPO_CALCULATED_TIME)
  private OffsetDateTime lastRpoCalculatedTime;

  public static final String SERIALIZED_NAME_LICENSE_TYPE = "licenseType";
  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE)
  private String licenseType;

  public static final String SERIALIZED_NAME_O_S_DETAILS = "oSDetails";
  @SerializedName(SERIALIZED_NAME_O_S_DETAILS)
  private OSDetails oSDetails;

  public static final String SERIALIZED_NAME_RECOVERY_AVAILABILITY_SET_ID = "recoveryAvailabilitySetId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AVAILABILITY_SET_ID)
  private String recoveryAvailabilitySetId;

  public static final String SERIALIZED_NAME_RECOVERY_AZURE_LOG_STORAGE_ACCOUNT_ID = "recoveryAzureLogStorageAccountId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AZURE_LOG_STORAGE_ACCOUNT_ID)
  private String recoveryAzureLogStorageAccountId;

  public static final String SERIALIZED_NAME_RECOVERY_AZURE_RESOURCE_GROUP_ID = "recoveryAzureResourceGroupId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AZURE_RESOURCE_GROUP_ID)
  private String recoveryAzureResourceGroupId;

  public static final String SERIALIZED_NAME_RECOVERY_AZURE_STORAGE_ACCOUNT = "recoveryAzureStorageAccount";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AZURE_STORAGE_ACCOUNT)
  private String recoveryAzureStorageAccount;

  public static final String SERIALIZED_NAME_RECOVERY_AZURE_V_M_SIZE = "recoveryAzureVMSize";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AZURE_V_M_SIZE)
  private String recoveryAzureVMSize;

  public static final String SERIALIZED_NAME_RECOVERY_AZURE_VM_NAME = "recoveryAzureVmName";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AZURE_VM_NAME)
  private String recoveryAzureVmName;

  public static final String SERIALIZED_NAME_RPO_IN_SECONDS = "rpoInSeconds";
  @SerializedName(SERIALIZED_NAME_RPO_IN_SECONDS)
  private Long rpoInSeconds;

  public static final String SERIALIZED_NAME_SELECTED_RECOVERY_AZURE_NETWORK_ID = "selectedRecoveryAzureNetworkId";
  @SerializedName(SERIALIZED_NAME_SELECTED_RECOVERY_AZURE_NETWORK_ID)
  private String selectedRecoveryAzureNetworkId;

  public static final String SERIALIZED_NAME_SELECTED_SOURCE_NIC_ID = "selectedSourceNicId";
  @SerializedName(SERIALIZED_NAME_SELECTED_SOURCE_NIC_ID)
  private String selectedSourceNicId;

  public static final String SERIALIZED_NAME_SOURCE_VM_CPU_COUNT = "sourceVmCpuCount";
  @SerializedName(SERIALIZED_NAME_SOURCE_VM_CPU_COUNT)
  private Integer sourceVmCpuCount;

  public static final String SERIALIZED_NAME_SOURCE_VM_RAM_SIZE_IN_M_B = "sourceVmRamSizeInMB";
  @SerializedName(SERIALIZED_NAME_SOURCE_VM_RAM_SIZE_IN_M_B)
  private Integer sourceVmRamSizeInMB;

  public static final String SERIALIZED_NAME_USE_MANAGED_DISKS = "useManagedDisks";
  @SerializedName(SERIALIZED_NAME_USE_MANAGED_DISKS)
  private String useManagedDisks;

  public static final String SERIALIZED_NAME_VM_ID = "vmId";
  @SerializedName(SERIALIZED_NAME_VM_ID)
  private String vmId;

  public static final String SERIALIZED_NAME_VM_NICS = "vmNics";
  @SerializedName(SERIALIZED_NAME_VM_NICS)
  private List<VMNicDetails> vmNics = new ArrayList<>();

  public static final String SERIALIZED_NAME_VM_PROTECTION_STATE = "vmProtectionState";
  @SerializedName(SERIALIZED_NAME_VM_PROTECTION_STATE)
  private String vmProtectionState;

  public static final String SERIALIZED_NAME_VM_PROTECTION_STATE_DESCRIPTION = "vmProtectionStateDescription";
  @SerializedName(SERIALIZED_NAME_VM_PROTECTION_STATE_DESCRIPTION)
  private String vmProtectionStateDescription;

  public HyperVReplicaAzureReplicationDetails() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public HyperVReplicaAzureReplicationDetails(
     String instanceType
  ) {
    this();
    this.instanceType = instanceType;
  }

  public HyperVReplicaAzureReplicationDetails azureVmDiskDetails(List<AzureVmDiskDetails> azureVmDiskDetails) {
    this.azureVmDiskDetails = azureVmDiskDetails;
    return this;
  }

  public HyperVReplicaAzureReplicationDetails addAzureVmDiskDetailsItem(AzureVmDiskDetails azureVmDiskDetailsItem) {
    if (this.azureVmDiskDetails == null) {
      this.azureVmDiskDetails = new ArrayList<>();
    }
    this.azureVmDiskDetails.add(azureVmDiskDetailsItem);
    return this;
  }

  /**
   * Azure VM Disk details.
   * @return azureVmDiskDetails
   */
  @javax.annotation.Nullable
  public List<AzureVmDiskDetails> getAzureVmDiskDetails() {
    return azureVmDiskDetails;
  }

  public void setAzureVmDiskDetails(List<AzureVmDiskDetails> azureVmDiskDetails) {
    this.azureVmDiskDetails = azureVmDiskDetails;
  }


  public HyperVReplicaAzureReplicationDetails enableRdpOnTargetOption(String enableRdpOnTargetOption) {
    this.enableRdpOnTargetOption = enableRdpOnTargetOption;
    return this;
  }

  /**
   * The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
   * @return enableRdpOnTargetOption
   */
  @javax.annotation.Nullable
  public String getEnableRdpOnTargetOption() {
    return enableRdpOnTargetOption;
  }

  public void setEnableRdpOnTargetOption(String enableRdpOnTargetOption) {
    this.enableRdpOnTargetOption = enableRdpOnTargetOption;
  }


  public HyperVReplicaAzureReplicationDetails encryption(String encryption) {
    this.encryption = encryption;
    return this;
  }

  /**
   * The encryption info.
   * @return encryption
   */
  @javax.annotation.Nullable
  public String getEncryption() {
    return encryption;
  }

  public void setEncryption(String encryption) {
    this.encryption = encryption;
  }


  public HyperVReplicaAzureReplicationDetails initialReplicationDetails(InitialReplicationDetails initialReplicationDetails) {
    this.initialReplicationDetails = initialReplicationDetails;
    return this;
  }

  /**
   * Get initialReplicationDetails
   * @return initialReplicationDetails
   */
  @javax.annotation.Nullable
  public InitialReplicationDetails getInitialReplicationDetails() {
    return initialReplicationDetails;
  }

  public void setInitialReplicationDetails(InitialReplicationDetails initialReplicationDetails) {
    this.initialReplicationDetails = initialReplicationDetails;
  }


  public HyperVReplicaAzureReplicationDetails lastReplicatedTime(OffsetDateTime lastReplicatedTime) {
    this.lastReplicatedTime = lastReplicatedTime;
    return this;
  }

  /**
   * The Last replication time.
   * @return lastReplicatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastReplicatedTime() {
    return lastReplicatedTime;
  }

  public void setLastReplicatedTime(OffsetDateTime lastReplicatedTime) {
    this.lastReplicatedTime = lastReplicatedTime;
  }


  public HyperVReplicaAzureReplicationDetails lastRpoCalculatedTime(OffsetDateTime lastRpoCalculatedTime) {
    this.lastRpoCalculatedTime = lastRpoCalculatedTime;
    return this;
  }

  /**
   * The last RPO calculated time.
   * @return lastRpoCalculatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastRpoCalculatedTime() {
    return lastRpoCalculatedTime;
  }

  public void setLastRpoCalculatedTime(OffsetDateTime lastRpoCalculatedTime) {
    this.lastRpoCalculatedTime = lastRpoCalculatedTime;
  }


  public HyperVReplicaAzureReplicationDetails licenseType(String licenseType) {
    this.licenseType = licenseType;
    return this;
  }

  /**
   * License Type of the VM to be used.
   * @return licenseType
   */
  @javax.annotation.Nullable
  public String getLicenseType() {
    return licenseType;
  }

  public void setLicenseType(String licenseType) {
    this.licenseType = licenseType;
  }


  public HyperVReplicaAzureReplicationDetails oSDetails(OSDetails oSDetails) {
    this.oSDetails = oSDetails;
    return this;
  }

  /**
   * Get oSDetails
   * @return oSDetails
   */
  @javax.annotation.Nullable
  public OSDetails getoSDetails() {
    return oSDetails;
  }

  public void setoSDetails(OSDetails oSDetails) {
    this.oSDetails = oSDetails;
  }


  public HyperVReplicaAzureReplicationDetails recoveryAvailabilitySetId(String recoveryAvailabilitySetId) {
    this.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
    return this;
  }

  /**
   * The recovery availability set Id.
   * @return recoveryAvailabilitySetId
   */
  @javax.annotation.Nullable
  public String getRecoveryAvailabilitySetId() {
    return recoveryAvailabilitySetId;
  }

  public void setRecoveryAvailabilitySetId(String recoveryAvailabilitySetId) {
    this.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
  }


  public HyperVReplicaAzureReplicationDetails recoveryAzureLogStorageAccountId(String recoveryAzureLogStorageAccountId) {
    this.recoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
    return this;
  }

  /**
   * The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
   * @return recoveryAzureLogStorageAccountId
   */
  @javax.annotation.Nullable
  public String getRecoveryAzureLogStorageAccountId() {
    return recoveryAzureLogStorageAccountId;
  }

  public void setRecoveryAzureLogStorageAccountId(String recoveryAzureLogStorageAccountId) {
    this.recoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
  }


  public HyperVReplicaAzureReplicationDetails recoveryAzureResourceGroupId(String recoveryAzureResourceGroupId) {
    this.recoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
    return this;
  }

  /**
   * The target resource group Id.
   * @return recoveryAzureResourceGroupId
   */
  @javax.annotation.Nullable
  public String getRecoveryAzureResourceGroupId() {
    return recoveryAzureResourceGroupId;
  }

  public void setRecoveryAzureResourceGroupId(String recoveryAzureResourceGroupId) {
    this.recoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
  }


  public HyperVReplicaAzureReplicationDetails recoveryAzureStorageAccount(String recoveryAzureStorageAccount) {
    this.recoveryAzureStorageAccount = recoveryAzureStorageAccount;
    return this;
  }

  /**
   * The recovery Azure storage account.
   * @return recoveryAzureStorageAccount
   */
  @javax.annotation.Nullable
  public String getRecoveryAzureStorageAccount() {
    return recoveryAzureStorageAccount;
  }

  public void setRecoveryAzureStorageAccount(String recoveryAzureStorageAccount) {
    this.recoveryAzureStorageAccount = recoveryAzureStorageAccount;
  }


  public HyperVReplicaAzureReplicationDetails recoveryAzureVMSize(String recoveryAzureVMSize) {
    this.recoveryAzureVMSize = recoveryAzureVMSize;
    return this;
  }

  /**
   * The Recovery Azure VM size.
   * @return recoveryAzureVMSize
   */
  @javax.annotation.Nullable
  public String getRecoveryAzureVMSize() {
    return recoveryAzureVMSize;
  }

  public void setRecoveryAzureVMSize(String recoveryAzureVMSize) {
    this.recoveryAzureVMSize = recoveryAzureVMSize;
  }


  public HyperVReplicaAzureReplicationDetails recoveryAzureVmName(String recoveryAzureVmName) {
    this.recoveryAzureVmName = recoveryAzureVmName;
    return this;
  }

  /**
   * Recovery Azure given name.
   * @return recoveryAzureVmName
   */
  @javax.annotation.Nullable
  public String getRecoveryAzureVmName() {
    return recoveryAzureVmName;
  }

  public void setRecoveryAzureVmName(String recoveryAzureVmName) {
    this.recoveryAzureVmName = recoveryAzureVmName;
  }


  public HyperVReplicaAzureReplicationDetails rpoInSeconds(Long rpoInSeconds) {
    this.rpoInSeconds = rpoInSeconds;
    return this;
  }

  /**
   * Last RPO value.
   * @return rpoInSeconds
   */
  @javax.annotation.Nullable
  public Long getRpoInSeconds() {
    return rpoInSeconds;
  }

  public void setRpoInSeconds(Long rpoInSeconds) {
    this.rpoInSeconds = rpoInSeconds;
  }


  public HyperVReplicaAzureReplicationDetails selectedRecoveryAzureNetworkId(String selectedRecoveryAzureNetworkId) {
    this.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
    return this;
  }

  /**
   * The selected recovery azure network Id.
   * @return selectedRecoveryAzureNetworkId
   */
  @javax.annotation.Nullable
  public String getSelectedRecoveryAzureNetworkId() {
    return selectedRecoveryAzureNetworkId;
  }

  public void setSelectedRecoveryAzureNetworkId(String selectedRecoveryAzureNetworkId) {
    this.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
  }


  public HyperVReplicaAzureReplicationDetails selectedSourceNicId(String selectedSourceNicId) {
    this.selectedSourceNicId = selectedSourceNicId;
    return this;
  }

  /**
   * The selected source nic Id which will be used as the primary nic during failover.
   * @return selectedSourceNicId
   */
  @javax.annotation.Nullable
  public String getSelectedSourceNicId() {
    return selectedSourceNicId;
  }

  public void setSelectedSourceNicId(String selectedSourceNicId) {
    this.selectedSourceNicId = selectedSourceNicId;
  }


  public HyperVReplicaAzureReplicationDetails sourceVmCpuCount(Integer sourceVmCpuCount) {
    this.sourceVmCpuCount = sourceVmCpuCount;
    return this;
  }

  /**
   * The CPU count of the VM on the primary side.
   * @return sourceVmCpuCount
   */
  @javax.annotation.Nullable
  public Integer getSourceVmCpuCount() {
    return sourceVmCpuCount;
  }

  public void setSourceVmCpuCount(Integer sourceVmCpuCount) {
    this.sourceVmCpuCount = sourceVmCpuCount;
  }


  public HyperVReplicaAzureReplicationDetails sourceVmRamSizeInMB(Integer sourceVmRamSizeInMB) {
    this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
    return this;
  }

  /**
   * The RAM size of the VM on the primary side.
   * @return sourceVmRamSizeInMB
   */
  @javax.annotation.Nullable
  public Integer getSourceVmRamSizeInMB() {
    return sourceVmRamSizeInMB;
  }

  public void setSourceVmRamSizeInMB(Integer sourceVmRamSizeInMB) {
    this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
  }


  public HyperVReplicaAzureReplicationDetails useManagedDisks(String useManagedDisks) {
    this.useManagedDisks = useManagedDisks;
    return this;
  }

  /**
   * A value indicating whether managed disks should be used during failover.
   * @return useManagedDisks
   */
  @javax.annotation.Nullable
  public String getUseManagedDisks() {
    return useManagedDisks;
  }

  public void setUseManagedDisks(String useManagedDisks) {
    this.useManagedDisks = useManagedDisks;
  }


  public HyperVReplicaAzureReplicationDetails vmId(String vmId) {
    this.vmId = vmId;
    return this;
  }

  /**
   * The virtual machine Id.
   * @return vmId
   */
  @javax.annotation.Nullable
  public String getVmId() {
    return vmId;
  }

  public void setVmId(String vmId) {
    this.vmId = vmId;
  }


  public HyperVReplicaAzureReplicationDetails vmNics(List<VMNicDetails> vmNics) {
    this.vmNics = vmNics;
    return this;
  }

  public HyperVReplicaAzureReplicationDetails addVmNicsItem(VMNicDetails vmNicsItem) {
    if (this.vmNics == null) {
      this.vmNics = new ArrayList<>();
    }
    this.vmNics.add(vmNicsItem);
    return this;
  }

  /**
   * The PE Network details.
   * @return vmNics
   */
  @javax.annotation.Nullable
  public List<VMNicDetails> getVmNics() {
    return vmNics;
  }

  public void setVmNics(List<VMNicDetails> vmNics) {
    this.vmNics = vmNics;
  }


  public HyperVReplicaAzureReplicationDetails vmProtectionState(String vmProtectionState) {
    this.vmProtectionState = vmProtectionState;
    return this;
  }

  /**
   * The protection state for the vm.
   * @return vmProtectionState
   */
  @javax.annotation.Nullable
  public String getVmProtectionState() {
    return vmProtectionState;
  }

  public void setVmProtectionState(String vmProtectionState) {
    this.vmProtectionState = vmProtectionState;
  }


  public HyperVReplicaAzureReplicationDetails vmProtectionStateDescription(String vmProtectionStateDescription) {
    this.vmProtectionStateDescription = vmProtectionStateDescription;
    return this;
  }

  /**
   * The protection state description for the vm.
   * @return vmProtectionStateDescription
   */
  @javax.annotation.Nullable
  public String getVmProtectionStateDescription() {
    return vmProtectionStateDescription;
  }

  public void setVmProtectionStateDescription(String vmProtectionStateDescription) {
    this.vmProtectionStateDescription = vmProtectionStateDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HyperVReplicaAzureReplicationDetails hyperVReplicaAzureReplicationDetails = (HyperVReplicaAzureReplicationDetails) o;
    return Objects.equals(this.azureVmDiskDetails, hyperVReplicaAzureReplicationDetails.azureVmDiskDetails) &&
        Objects.equals(this.enableRdpOnTargetOption, hyperVReplicaAzureReplicationDetails.enableRdpOnTargetOption) &&
        Objects.equals(this.encryption, hyperVReplicaAzureReplicationDetails.encryption) &&
        Objects.equals(this.initialReplicationDetails, hyperVReplicaAzureReplicationDetails.initialReplicationDetails) &&
        Objects.equals(this.lastReplicatedTime, hyperVReplicaAzureReplicationDetails.lastReplicatedTime) &&
        Objects.equals(this.lastRpoCalculatedTime, hyperVReplicaAzureReplicationDetails.lastRpoCalculatedTime) &&
        Objects.equals(this.licenseType, hyperVReplicaAzureReplicationDetails.licenseType) &&
        Objects.equals(this.oSDetails, hyperVReplicaAzureReplicationDetails.oSDetails) &&
        Objects.equals(this.recoveryAvailabilitySetId, hyperVReplicaAzureReplicationDetails.recoveryAvailabilitySetId) &&
        Objects.equals(this.recoveryAzureLogStorageAccountId, hyperVReplicaAzureReplicationDetails.recoveryAzureLogStorageAccountId) &&
        Objects.equals(this.recoveryAzureResourceGroupId, hyperVReplicaAzureReplicationDetails.recoveryAzureResourceGroupId) &&
        Objects.equals(this.recoveryAzureStorageAccount, hyperVReplicaAzureReplicationDetails.recoveryAzureStorageAccount) &&
        Objects.equals(this.recoveryAzureVMSize, hyperVReplicaAzureReplicationDetails.recoveryAzureVMSize) &&
        Objects.equals(this.recoveryAzureVmName, hyperVReplicaAzureReplicationDetails.recoveryAzureVmName) &&
        Objects.equals(this.rpoInSeconds, hyperVReplicaAzureReplicationDetails.rpoInSeconds) &&
        Objects.equals(this.selectedRecoveryAzureNetworkId, hyperVReplicaAzureReplicationDetails.selectedRecoveryAzureNetworkId) &&
        Objects.equals(this.selectedSourceNicId, hyperVReplicaAzureReplicationDetails.selectedSourceNicId) &&
        Objects.equals(this.sourceVmCpuCount, hyperVReplicaAzureReplicationDetails.sourceVmCpuCount) &&
        Objects.equals(this.sourceVmRamSizeInMB, hyperVReplicaAzureReplicationDetails.sourceVmRamSizeInMB) &&
        Objects.equals(this.useManagedDisks, hyperVReplicaAzureReplicationDetails.useManagedDisks) &&
        Objects.equals(this.vmId, hyperVReplicaAzureReplicationDetails.vmId) &&
        Objects.equals(this.vmNics, hyperVReplicaAzureReplicationDetails.vmNics) &&
        Objects.equals(this.vmProtectionState, hyperVReplicaAzureReplicationDetails.vmProtectionState) &&
        Objects.equals(this.vmProtectionStateDescription, hyperVReplicaAzureReplicationDetails.vmProtectionStateDescription) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(azureVmDiskDetails, enableRdpOnTargetOption, encryption, initialReplicationDetails, lastReplicatedTime, lastRpoCalculatedTime, licenseType, oSDetails, recoveryAvailabilitySetId, recoveryAzureLogStorageAccountId, recoveryAzureResourceGroupId, recoveryAzureStorageAccount, recoveryAzureVMSize, recoveryAzureVmName, rpoInSeconds, selectedRecoveryAzureNetworkId, selectedSourceNicId, sourceVmCpuCount, sourceVmRamSizeInMB, useManagedDisks, vmId, vmNics, vmProtectionState, vmProtectionStateDescription, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HyperVReplicaAzureReplicationDetails {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    azureVmDiskDetails: ").append(toIndentedString(azureVmDiskDetails)).append("\n");
    sb.append("    enableRdpOnTargetOption: ").append(toIndentedString(enableRdpOnTargetOption)).append("\n");
    sb.append("    encryption: ").append(toIndentedString(encryption)).append("\n");
    sb.append("    initialReplicationDetails: ").append(toIndentedString(initialReplicationDetails)).append("\n");
    sb.append("    lastReplicatedTime: ").append(toIndentedString(lastReplicatedTime)).append("\n");
    sb.append("    lastRpoCalculatedTime: ").append(toIndentedString(lastRpoCalculatedTime)).append("\n");
    sb.append("    licenseType: ").append(toIndentedString(licenseType)).append("\n");
    sb.append("    oSDetails: ").append(toIndentedString(oSDetails)).append("\n");
    sb.append("    recoveryAvailabilitySetId: ").append(toIndentedString(recoveryAvailabilitySetId)).append("\n");
    sb.append("    recoveryAzureLogStorageAccountId: ").append(toIndentedString(recoveryAzureLogStorageAccountId)).append("\n");
    sb.append("    recoveryAzureResourceGroupId: ").append(toIndentedString(recoveryAzureResourceGroupId)).append("\n");
    sb.append("    recoveryAzureStorageAccount: ").append(toIndentedString(recoveryAzureStorageAccount)).append("\n");
    sb.append("    recoveryAzureVMSize: ").append(toIndentedString(recoveryAzureVMSize)).append("\n");
    sb.append("    recoveryAzureVmName: ").append(toIndentedString(recoveryAzureVmName)).append("\n");
    sb.append("    rpoInSeconds: ").append(toIndentedString(rpoInSeconds)).append("\n");
    sb.append("    selectedRecoveryAzureNetworkId: ").append(toIndentedString(selectedRecoveryAzureNetworkId)).append("\n");
    sb.append("    selectedSourceNicId: ").append(toIndentedString(selectedSourceNicId)).append("\n");
    sb.append("    sourceVmCpuCount: ").append(toIndentedString(sourceVmCpuCount)).append("\n");
    sb.append("    sourceVmRamSizeInMB: ").append(toIndentedString(sourceVmRamSizeInMB)).append("\n");
    sb.append("    useManagedDisks: ").append(toIndentedString(useManagedDisks)).append("\n");
    sb.append("    vmId: ").append(toIndentedString(vmId)).append("\n");
    sb.append("    vmNics: ").append(toIndentedString(vmNics)).append("\n");
    sb.append("    vmProtectionState: ").append(toIndentedString(vmProtectionState)).append("\n");
    sb.append("    vmProtectionStateDescription: ").append(toIndentedString(vmProtectionStateDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to HyperVReplicaAzureReplicationDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!HyperVReplicaAzureReplicationDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in HyperVReplicaAzureReplicationDetails is not found in the empty JSON string", HyperVReplicaAzureReplicationDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!HyperVReplicaAzureReplicationDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `HyperVReplicaAzureReplicationDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HyperVReplicaAzureReplicationDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HyperVReplicaAzureReplicationDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HyperVReplicaAzureReplicationDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HyperVReplicaAzureReplicationDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<HyperVReplicaAzureReplicationDetails>() {
           @Override
           public void write(JsonWriter out, HyperVReplicaAzureReplicationDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public HyperVReplicaAzureReplicationDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of HyperVReplicaAzureReplicationDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of HyperVReplicaAzureReplicationDetails
   * @throws IOException if the JSON string is invalid with respect to HyperVReplicaAzureReplicationDetails
   */
  public static HyperVReplicaAzureReplicationDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HyperVReplicaAzureReplicationDetails.class);
  }

  /**
   * Convert an instance of HyperVReplicaAzureReplicationDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

