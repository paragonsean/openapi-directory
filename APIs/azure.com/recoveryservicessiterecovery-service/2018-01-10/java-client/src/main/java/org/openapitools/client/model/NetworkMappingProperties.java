/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.NetworkMappingFabricSpecificSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Network Mapping Properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:47.451286-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NetworkMappingProperties {
  public static final String SERIALIZED_NAME_FABRIC_SPECIFIC_SETTINGS = "fabricSpecificSettings";
  @SerializedName(SERIALIZED_NAME_FABRIC_SPECIFIC_SETTINGS)
  private NetworkMappingFabricSpecificSettings fabricSpecificSettings;

  public static final String SERIALIZED_NAME_PRIMARY_FABRIC_FRIENDLY_NAME = "primaryFabricFriendlyName";
  @SerializedName(SERIALIZED_NAME_PRIMARY_FABRIC_FRIENDLY_NAME)
  private String primaryFabricFriendlyName;

  public static final String SERIALIZED_NAME_PRIMARY_NETWORK_FRIENDLY_NAME = "primaryNetworkFriendlyName";
  @SerializedName(SERIALIZED_NAME_PRIMARY_NETWORK_FRIENDLY_NAME)
  private String primaryNetworkFriendlyName;

  public static final String SERIALIZED_NAME_PRIMARY_NETWORK_ID = "primaryNetworkId";
  @SerializedName(SERIALIZED_NAME_PRIMARY_NETWORK_ID)
  private String primaryNetworkId;

  public static final String SERIALIZED_NAME_RECOVERY_FABRIC_ARM_ID = "recoveryFabricArmId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_FABRIC_ARM_ID)
  private String recoveryFabricArmId;

  public static final String SERIALIZED_NAME_RECOVERY_FABRIC_FRIENDLY_NAME = "recoveryFabricFriendlyName";
  @SerializedName(SERIALIZED_NAME_RECOVERY_FABRIC_FRIENDLY_NAME)
  private String recoveryFabricFriendlyName;

  public static final String SERIALIZED_NAME_RECOVERY_NETWORK_FRIENDLY_NAME = "recoveryNetworkFriendlyName";
  @SerializedName(SERIALIZED_NAME_RECOVERY_NETWORK_FRIENDLY_NAME)
  private String recoveryNetworkFriendlyName;

  public static final String SERIALIZED_NAME_RECOVERY_NETWORK_ID = "recoveryNetworkId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_NETWORK_ID)
  private String recoveryNetworkId;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public NetworkMappingProperties() {
  }

  public NetworkMappingProperties fabricSpecificSettings(NetworkMappingFabricSpecificSettings fabricSpecificSettings) {
    this.fabricSpecificSettings = fabricSpecificSettings;
    return this;
  }

  /**
   * Get fabricSpecificSettings
   * @return fabricSpecificSettings
   */
  @javax.annotation.Nullable
  public NetworkMappingFabricSpecificSettings getFabricSpecificSettings() {
    return fabricSpecificSettings;
  }

  public void setFabricSpecificSettings(NetworkMappingFabricSpecificSettings fabricSpecificSettings) {
    this.fabricSpecificSettings = fabricSpecificSettings;
  }


  public NetworkMappingProperties primaryFabricFriendlyName(String primaryFabricFriendlyName) {
    this.primaryFabricFriendlyName = primaryFabricFriendlyName;
    return this;
  }

  /**
   * The primary fabric friendly name.
   * @return primaryFabricFriendlyName
   */
  @javax.annotation.Nullable
  public String getPrimaryFabricFriendlyName() {
    return primaryFabricFriendlyName;
  }

  public void setPrimaryFabricFriendlyName(String primaryFabricFriendlyName) {
    this.primaryFabricFriendlyName = primaryFabricFriendlyName;
  }


  public NetworkMappingProperties primaryNetworkFriendlyName(String primaryNetworkFriendlyName) {
    this.primaryNetworkFriendlyName = primaryNetworkFriendlyName;
    return this;
  }

  /**
   * The primary network friendly name.
   * @return primaryNetworkFriendlyName
   */
  @javax.annotation.Nullable
  public String getPrimaryNetworkFriendlyName() {
    return primaryNetworkFriendlyName;
  }

  public void setPrimaryNetworkFriendlyName(String primaryNetworkFriendlyName) {
    this.primaryNetworkFriendlyName = primaryNetworkFriendlyName;
  }


  public NetworkMappingProperties primaryNetworkId(String primaryNetworkId) {
    this.primaryNetworkId = primaryNetworkId;
    return this;
  }

  /**
   * The primary network id for network mapping.
   * @return primaryNetworkId
   */
  @javax.annotation.Nullable
  public String getPrimaryNetworkId() {
    return primaryNetworkId;
  }

  public void setPrimaryNetworkId(String primaryNetworkId) {
    this.primaryNetworkId = primaryNetworkId;
  }


  public NetworkMappingProperties recoveryFabricArmId(String recoveryFabricArmId) {
    this.recoveryFabricArmId = recoveryFabricArmId;
    return this;
  }

  /**
   * The recovery fabric ARM id.
   * @return recoveryFabricArmId
   */
  @javax.annotation.Nullable
  public String getRecoveryFabricArmId() {
    return recoveryFabricArmId;
  }

  public void setRecoveryFabricArmId(String recoveryFabricArmId) {
    this.recoveryFabricArmId = recoveryFabricArmId;
  }


  public NetworkMappingProperties recoveryFabricFriendlyName(String recoveryFabricFriendlyName) {
    this.recoveryFabricFriendlyName = recoveryFabricFriendlyName;
    return this;
  }

  /**
   * The recovery fabric friendly name.
   * @return recoveryFabricFriendlyName
   */
  @javax.annotation.Nullable
  public String getRecoveryFabricFriendlyName() {
    return recoveryFabricFriendlyName;
  }

  public void setRecoveryFabricFriendlyName(String recoveryFabricFriendlyName) {
    this.recoveryFabricFriendlyName = recoveryFabricFriendlyName;
  }


  public NetworkMappingProperties recoveryNetworkFriendlyName(String recoveryNetworkFriendlyName) {
    this.recoveryNetworkFriendlyName = recoveryNetworkFriendlyName;
    return this;
  }

  /**
   * The recovery network friendly name.
   * @return recoveryNetworkFriendlyName
   */
  @javax.annotation.Nullable
  public String getRecoveryNetworkFriendlyName() {
    return recoveryNetworkFriendlyName;
  }

  public void setRecoveryNetworkFriendlyName(String recoveryNetworkFriendlyName) {
    this.recoveryNetworkFriendlyName = recoveryNetworkFriendlyName;
  }


  public NetworkMappingProperties recoveryNetworkId(String recoveryNetworkId) {
    this.recoveryNetworkId = recoveryNetworkId;
    return this;
  }

  /**
   * The recovery network id for network mapping.
   * @return recoveryNetworkId
   */
  @javax.annotation.Nullable
  public String getRecoveryNetworkId() {
    return recoveryNetworkId;
  }

  public void setRecoveryNetworkId(String recoveryNetworkId) {
    this.recoveryNetworkId = recoveryNetworkId;
  }


  public NetworkMappingProperties state(String state) {
    this.state = state;
    return this;
  }

  /**
   * The pairing state for network mapping.
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkMappingProperties networkMappingProperties = (NetworkMappingProperties) o;
    return Objects.equals(this.fabricSpecificSettings, networkMappingProperties.fabricSpecificSettings) &&
        Objects.equals(this.primaryFabricFriendlyName, networkMappingProperties.primaryFabricFriendlyName) &&
        Objects.equals(this.primaryNetworkFriendlyName, networkMappingProperties.primaryNetworkFriendlyName) &&
        Objects.equals(this.primaryNetworkId, networkMappingProperties.primaryNetworkId) &&
        Objects.equals(this.recoveryFabricArmId, networkMappingProperties.recoveryFabricArmId) &&
        Objects.equals(this.recoveryFabricFriendlyName, networkMappingProperties.recoveryFabricFriendlyName) &&
        Objects.equals(this.recoveryNetworkFriendlyName, networkMappingProperties.recoveryNetworkFriendlyName) &&
        Objects.equals(this.recoveryNetworkId, networkMappingProperties.recoveryNetworkId) &&
        Objects.equals(this.state, networkMappingProperties.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fabricSpecificSettings, primaryFabricFriendlyName, primaryNetworkFriendlyName, primaryNetworkId, recoveryFabricArmId, recoveryFabricFriendlyName, recoveryNetworkFriendlyName, recoveryNetworkId, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkMappingProperties {\n");
    sb.append("    fabricSpecificSettings: ").append(toIndentedString(fabricSpecificSettings)).append("\n");
    sb.append("    primaryFabricFriendlyName: ").append(toIndentedString(primaryFabricFriendlyName)).append("\n");
    sb.append("    primaryNetworkFriendlyName: ").append(toIndentedString(primaryNetworkFriendlyName)).append("\n");
    sb.append("    primaryNetworkId: ").append(toIndentedString(primaryNetworkId)).append("\n");
    sb.append("    recoveryFabricArmId: ").append(toIndentedString(recoveryFabricArmId)).append("\n");
    sb.append("    recoveryFabricFriendlyName: ").append(toIndentedString(recoveryFabricFriendlyName)).append("\n");
    sb.append("    recoveryNetworkFriendlyName: ").append(toIndentedString(recoveryNetworkFriendlyName)).append("\n");
    sb.append("    recoveryNetworkId: ").append(toIndentedString(recoveryNetworkId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fabricSpecificSettings");
    openapiFields.add("primaryFabricFriendlyName");
    openapiFields.add("primaryNetworkFriendlyName");
    openapiFields.add("primaryNetworkId");
    openapiFields.add("recoveryFabricArmId");
    openapiFields.add("recoveryFabricFriendlyName");
    openapiFields.add("recoveryNetworkFriendlyName");
    openapiFields.add("recoveryNetworkId");
    openapiFields.add("state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NetworkMappingProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NetworkMappingProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NetworkMappingProperties is not found in the empty JSON string", NetworkMappingProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NetworkMappingProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NetworkMappingProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `fabricSpecificSettings`
      if (jsonObj.get("fabricSpecificSettings") != null && !jsonObj.get("fabricSpecificSettings").isJsonNull()) {
        NetworkMappingFabricSpecificSettings.validateJsonElement(jsonObj.get("fabricSpecificSettings"));
      }
      if ((jsonObj.get("primaryFabricFriendlyName") != null && !jsonObj.get("primaryFabricFriendlyName").isJsonNull()) && !jsonObj.get("primaryFabricFriendlyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryFabricFriendlyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryFabricFriendlyName").toString()));
      }
      if ((jsonObj.get("primaryNetworkFriendlyName") != null && !jsonObj.get("primaryNetworkFriendlyName").isJsonNull()) && !jsonObj.get("primaryNetworkFriendlyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryNetworkFriendlyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryNetworkFriendlyName").toString()));
      }
      if ((jsonObj.get("primaryNetworkId") != null && !jsonObj.get("primaryNetworkId").isJsonNull()) && !jsonObj.get("primaryNetworkId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryNetworkId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryNetworkId").toString()));
      }
      if ((jsonObj.get("recoveryFabricArmId") != null && !jsonObj.get("recoveryFabricArmId").isJsonNull()) && !jsonObj.get("recoveryFabricArmId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryFabricArmId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryFabricArmId").toString()));
      }
      if ((jsonObj.get("recoveryFabricFriendlyName") != null && !jsonObj.get("recoveryFabricFriendlyName").isJsonNull()) && !jsonObj.get("recoveryFabricFriendlyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryFabricFriendlyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryFabricFriendlyName").toString()));
      }
      if ((jsonObj.get("recoveryNetworkFriendlyName") != null && !jsonObj.get("recoveryNetworkFriendlyName").isJsonNull()) && !jsonObj.get("recoveryNetworkFriendlyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryNetworkFriendlyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryNetworkFriendlyName").toString()));
      }
      if ((jsonObj.get("recoveryNetworkId") != null && !jsonObj.get("recoveryNetworkId").isJsonNull()) && !jsonObj.get("recoveryNetworkId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryNetworkId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryNetworkId").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NetworkMappingProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NetworkMappingProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NetworkMappingProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NetworkMappingProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<NetworkMappingProperties>() {
           @Override
           public void write(JsonWriter out, NetworkMappingProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NetworkMappingProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NetworkMappingProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NetworkMappingProperties
   * @throws IOException if the JSON string is invalid with respect to NetworkMappingProperties
   */
  public static NetworkMappingProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NetworkMappingProperties.class);
  }

  /**
   * Convert an instance of NetworkMappingProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

