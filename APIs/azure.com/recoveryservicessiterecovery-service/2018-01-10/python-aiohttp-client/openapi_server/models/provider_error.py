# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProviderError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_code: int=None, error_id: str=None, error_message: str=None, possible_causes: str=None, recommended_action: str=None):
        """ProviderError - a model defined in OpenAPI

        :param error_code: The error_code of this ProviderError.
        :param error_id: The error_id of this ProviderError.
        :param error_message: The error_message of this ProviderError.
        :param possible_causes: The possible_causes of this ProviderError.
        :param recommended_action: The recommended_action of this ProviderError.
        """
        self.openapi_types = {
            'error_code': int,
            'error_id': str,
            'error_message': str,
            'possible_causes': str,
            'recommended_action': str
        }

        self.attribute_map = {
            'error_code': 'errorCode',
            'error_id': 'errorId',
            'error_message': 'errorMessage',
            'possible_causes': 'possibleCauses',
            'recommended_action': 'recommendedAction'
        }

        self._error_code = error_code
        self._error_id = error_id
        self._error_message = error_message
        self._possible_causes = possible_causes
        self._recommended_action = recommended_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProviderError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProviderError of this ProviderError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_code(self):
        """Gets the error_code of this ProviderError.

        The Error code.

        :return: The error_code of this ProviderError.
        :rtype: int
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this ProviderError.

        The Error code.

        :param error_code: The error_code of this ProviderError.
        :type error_code: int
        """

        self._error_code = error_code

    @property
    def error_id(self):
        """Gets the error_id of this ProviderError.

        The Provider error Id.

        :return: The error_id of this ProviderError.
        :rtype: str
        """
        return self._error_id

    @error_id.setter
    def error_id(self, error_id):
        """Sets the error_id of this ProviderError.

        The Provider error Id.

        :param error_id: The error_id of this ProviderError.
        :type error_id: str
        """

        self._error_id = error_id

    @property
    def error_message(self):
        """Gets the error_message of this ProviderError.

        The Error message.

        :return: The error_message of this ProviderError.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this ProviderError.

        The Error message.

        :param error_message: The error_message of this ProviderError.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def possible_causes(self):
        """Gets the possible_causes of this ProviderError.

        The possible causes for the error.

        :return: The possible_causes of this ProviderError.
        :rtype: str
        """
        return self._possible_causes

    @possible_causes.setter
    def possible_causes(self, possible_causes):
        """Sets the possible_causes of this ProviderError.

        The possible causes for the error.

        :param possible_causes: The possible_causes of this ProviderError.
        :type possible_causes: str
        """

        self._possible_causes = possible_causes

    @property
    def recommended_action(self):
        """Gets the recommended_action of this ProviderError.

        The recommended action to resolve the error.

        :return: The recommended_action of this ProviderError.
        :rtype: str
        """
        return self._recommended_action

    @recommended_action.setter
    def recommended_action(self, recommended_action):
        """Sets the recommended_action of this ProviderError.

        The recommended action to resolve the error.

        :param recommended_action: The recommended_action of this ProviderError.
        :type recommended_action: str
        """

        self._recommended_action = recommended_action
