# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_settings import ConfigurationSettings
from openapi_server.models.health_error import HealthError
from openapi_server.models.in_mage_disk_details import InMageDiskDetails
from openapi_server import util


class VMwareVirtualMachineDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_generated_id: str=None, agent_installed: str=None, agent_version: str=None, discovery_type: str=None, disk_details: List[InMageDiskDetails]=None, ip_address: str=None, os_type: str=None, powered_on: str=None, v_center_infrastructure_id: str=None, validation_errors: List[HealthError]=None, instance_type: str=None):
        """VMwareVirtualMachineDetails - a model defined in OpenAPI

        :param agent_generated_id: The agent_generated_id of this VMwareVirtualMachineDetails.
        :param agent_installed: The agent_installed of this VMwareVirtualMachineDetails.
        :param agent_version: The agent_version of this VMwareVirtualMachineDetails.
        :param discovery_type: The discovery_type of this VMwareVirtualMachineDetails.
        :param disk_details: The disk_details of this VMwareVirtualMachineDetails.
        :param ip_address: The ip_address of this VMwareVirtualMachineDetails.
        :param os_type: The os_type of this VMwareVirtualMachineDetails.
        :param powered_on: The powered_on of this VMwareVirtualMachineDetails.
        :param v_center_infrastructure_id: The v_center_infrastructure_id of this VMwareVirtualMachineDetails.
        :param validation_errors: The validation_errors of this VMwareVirtualMachineDetails.
        :param instance_type: The instance_type of this VMwareVirtualMachineDetails.
        """
        self.openapi_types = {
            'agent_generated_id': str,
            'agent_installed': str,
            'agent_version': str,
            'discovery_type': str,
            'disk_details': List[InMageDiskDetails],
            'ip_address': str,
            'os_type': str,
            'powered_on': str,
            'v_center_infrastructure_id': str,
            'validation_errors': List[HealthError],
            'instance_type': str
        }

        self.attribute_map = {
            'agent_generated_id': 'agentGeneratedId',
            'agent_installed': 'agentInstalled',
            'agent_version': 'agentVersion',
            'discovery_type': 'discoveryType',
            'disk_details': 'diskDetails',
            'ip_address': 'ipAddress',
            'os_type': 'osType',
            'powered_on': 'poweredOn',
            'v_center_infrastructure_id': 'vCenterInfrastructureId',
            'validation_errors': 'validationErrors',
            'instance_type': 'instanceType'
        }

        self._agent_generated_id = agent_generated_id
        self._agent_installed = agent_installed
        self._agent_version = agent_version
        self._discovery_type = discovery_type
        self._disk_details = disk_details
        self._ip_address = ip_address
        self._os_type = os_type
        self._powered_on = powered_on
        self._v_center_infrastructure_id = v_center_infrastructure_id
        self._validation_errors = validation_errors
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VMwareVirtualMachineDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VMwareVirtualMachineDetails of this VMwareVirtualMachineDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_generated_id(self):
        """Gets the agent_generated_id of this VMwareVirtualMachineDetails.

        The ID generated by the InMage agent after it gets installed on guest. This is the ID to be used during InMage CreateProtection.

        :return: The agent_generated_id of this VMwareVirtualMachineDetails.
        :rtype: str
        """
        return self._agent_generated_id

    @agent_generated_id.setter
    def agent_generated_id(self, agent_generated_id):
        """Sets the agent_generated_id of this VMwareVirtualMachineDetails.

        The ID generated by the InMage agent after it gets installed on guest. This is the ID to be used during InMage CreateProtection.

        :param agent_generated_id: The agent_generated_id of this VMwareVirtualMachineDetails.
        :type agent_generated_id: str
        """

        self._agent_generated_id = agent_generated_id

    @property
    def agent_installed(self):
        """Gets the agent_installed of this VMwareVirtualMachineDetails.

        The value indicating if InMage scout agent is installed on guest.

        :return: The agent_installed of this VMwareVirtualMachineDetails.
        :rtype: str
        """
        return self._agent_installed

    @agent_installed.setter
    def agent_installed(self, agent_installed):
        """Sets the agent_installed of this VMwareVirtualMachineDetails.

        The value indicating if InMage scout agent is installed on guest.

        :param agent_installed: The agent_installed of this VMwareVirtualMachineDetails.
        :type agent_installed: str
        """

        self._agent_installed = agent_installed

    @property
    def agent_version(self):
        """Gets the agent_version of this VMwareVirtualMachineDetails.

        The agent version.

        :return: The agent_version of this VMwareVirtualMachineDetails.
        :rtype: str
        """
        return self._agent_version

    @agent_version.setter
    def agent_version(self, agent_version):
        """Sets the agent_version of this VMwareVirtualMachineDetails.

        The agent version.

        :param agent_version: The agent_version of this VMwareVirtualMachineDetails.
        :type agent_version: str
        """

        self._agent_version = agent_version

    @property
    def discovery_type(self):
        """Gets the discovery_type of this VMwareVirtualMachineDetails.

        A value indicating the discovery type of the machine. Value can be vCenter or physical.

        :return: The discovery_type of this VMwareVirtualMachineDetails.
        :rtype: str
        """
        return self._discovery_type

    @discovery_type.setter
    def discovery_type(self, discovery_type):
        """Sets the discovery_type of this VMwareVirtualMachineDetails.

        A value indicating the discovery type of the machine. Value can be vCenter or physical.

        :param discovery_type: The discovery_type of this VMwareVirtualMachineDetails.
        :type discovery_type: str
        """

        self._discovery_type = discovery_type

    @property
    def disk_details(self):
        """Gets the disk_details of this VMwareVirtualMachineDetails.

        The disk details.

        :return: The disk_details of this VMwareVirtualMachineDetails.
        :rtype: List[InMageDiskDetails]
        """
        return self._disk_details

    @disk_details.setter
    def disk_details(self, disk_details):
        """Sets the disk_details of this VMwareVirtualMachineDetails.

        The disk details.

        :param disk_details: The disk_details of this VMwareVirtualMachineDetails.
        :type disk_details: List[InMageDiskDetails]
        """

        self._disk_details = disk_details

    @property
    def ip_address(self):
        """Gets the ip_address of this VMwareVirtualMachineDetails.

        The IP address.

        :return: The ip_address of this VMwareVirtualMachineDetails.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this VMwareVirtualMachineDetails.

        The IP address.

        :param ip_address: The ip_address of this VMwareVirtualMachineDetails.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def os_type(self):
        """Gets the os_type of this VMwareVirtualMachineDetails.

        The OsType installed on VM.

        :return: The os_type of this VMwareVirtualMachineDetails.
        :rtype: str
        """
        return self._os_type

    @os_type.setter
    def os_type(self, os_type):
        """Sets the os_type of this VMwareVirtualMachineDetails.

        The OsType installed on VM.

        :param os_type: The os_type of this VMwareVirtualMachineDetails.
        :type os_type: str
        """

        self._os_type = os_type

    @property
    def powered_on(self):
        """Gets the powered_on of this VMwareVirtualMachineDetails.

        The value indicating whether VM is powered on.

        :return: The powered_on of this VMwareVirtualMachineDetails.
        :rtype: str
        """
        return self._powered_on

    @powered_on.setter
    def powered_on(self, powered_on):
        """Sets the powered_on of this VMwareVirtualMachineDetails.

        The value indicating whether VM is powered on.

        :param powered_on: The powered_on of this VMwareVirtualMachineDetails.
        :type powered_on: str
        """

        self._powered_on = powered_on

    @property
    def v_center_infrastructure_id(self):
        """Gets the v_center_infrastructure_id of this VMwareVirtualMachineDetails.

        The VCenter infrastructure Id.

        :return: The v_center_infrastructure_id of this VMwareVirtualMachineDetails.
        :rtype: str
        """
        return self._v_center_infrastructure_id

    @v_center_infrastructure_id.setter
    def v_center_infrastructure_id(self, v_center_infrastructure_id):
        """Sets the v_center_infrastructure_id of this VMwareVirtualMachineDetails.

        The VCenter infrastructure Id.

        :param v_center_infrastructure_id: The v_center_infrastructure_id of this VMwareVirtualMachineDetails.
        :type v_center_infrastructure_id: str
        """

        self._v_center_infrastructure_id = v_center_infrastructure_id

    @property
    def validation_errors(self):
        """Gets the validation_errors of this VMwareVirtualMachineDetails.

        The validation errors.

        :return: The validation_errors of this VMwareVirtualMachineDetails.
        :rtype: List[HealthError]
        """
        return self._validation_errors

    @validation_errors.setter
    def validation_errors(self, validation_errors):
        """Sets the validation_errors of this VMwareVirtualMachineDetails.

        The validation errors.

        :param validation_errors: The validation_errors of this VMwareVirtualMachineDetails.
        :type validation_errors: List[HealthError]
        """

        self._validation_errors = validation_errors

    @property
    def instance_type(self):
        """Gets the instance_type of this VMwareVirtualMachineDetails.

        Gets the class type. Overridden in derived classes.

        :return: The instance_type of this VMwareVirtualMachineDetails.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this VMwareVirtualMachineDetails.

        Gets the class type. Overridden in derived classes.

        :param instance_type: The instance_type of this VMwareVirtualMachineDetails.
        :type instance_type: str
        """

        self._instance_type = instance_type
