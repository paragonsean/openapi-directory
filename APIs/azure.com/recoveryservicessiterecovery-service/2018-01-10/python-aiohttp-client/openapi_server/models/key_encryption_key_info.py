# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KeyEncryptionKeyInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_identifier: str=None, key_vault_resource_arm_id: str=None):
        """KeyEncryptionKeyInfo - a model defined in OpenAPI

        :param key_identifier: The key_identifier of this KeyEncryptionKeyInfo.
        :param key_vault_resource_arm_id: The key_vault_resource_arm_id of this KeyEncryptionKeyInfo.
        """
        self.openapi_types = {
            'key_identifier': str,
            'key_vault_resource_arm_id': str
        }

        self.attribute_map = {
            'key_identifier': 'keyIdentifier',
            'key_vault_resource_arm_id': 'keyVaultResourceArmId'
        }

        self._key_identifier = key_identifier
        self._key_vault_resource_arm_id = key_vault_resource_arm_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeyEncryptionKeyInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeyEncryptionKeyInfo of this KeyEncryptionKeyInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_identifier(self):
        """Gets the key_identifier of this KeyEncryptionKeyInfo.

        The key url / identifier.

        :return: The key_identifier of this KeyEncryptionKeyInfo.
        :rtype: str
        """
        return self._key_identifier

    @key_identifier.setter
    def key_identifier(self, key_identifier):
        """Sets the key_identifier of this KeyEncryptionKeyInfo.

        The key url / identifier.

        :param key_identifier: The key_identifier of this KeyEncryptionKeyInfo.
        :type key_identifier: str
        """

        self._key_identifier = key_identifier

    @property
    def key_vault_resource_arm_id(self):
        """Gets the key_vault_resource_arm_id of this KeyEncryptionKeyInfo.

        The KeyVault resource ARM id for key.

        :return: The key_vault_resource_arm_id of this KeyEncryptionKeyInfo.
        :rtype: str
        """
        return self._key_vault_resource_arm_id

    @key_vault_resource_arm_id.setter
    def key_vault_resource_arm_id(self, key_vault_resource_arm_id):
        """Sets the key_vault_resource_arm_id of this KeyEncryptionKeyInfo.

        The KeyVault resource ARM id for key.

        :param key_vault_resource_arm_id: The key_vault_resource_arm_id of this KeyEncryptionKeyInfo.
        :type key_vault_resource_arm_id: str
        """

        self._key_vault_resource_arm_id = key_vault_resource_arm_id
