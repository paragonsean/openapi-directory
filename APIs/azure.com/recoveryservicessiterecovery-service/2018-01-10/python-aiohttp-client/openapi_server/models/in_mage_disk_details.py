# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.disk_volume_details import DiskVolumeDetails
from openapi_server import util


class InMageDiskDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk_configuration: str=None, disk_id: str=None, disk_name: str=None, disk_size_in_mb: str=None, disk_type: str=None, volume_list: List[DiskVolumeDetails]=None):
        """InMageDiskDetails - a model defined in OpenAPI

        :param disk_configuration: The disk_configuration of this InMageDiskDetails.
        :param disk_id: The disk_id of this InMageDiskDetails.
        :param disk_name: The disk_name of this InMageDiskDetails.
        :param disk_size_in_mb: The disk_size_in_mb of this InMageDiskDetails.
        :param disk_type: The disk_type of this InMageDiskDetails.
        :param volume_list: The volume_list of this InMageDiskDetails.
        """
        self.openapi_types = {
            'disk_configuration': str,
            'disk_id': str,
            'disk_name': str,
            'disk_size_in_mb': str,
            'disk_type': str,
            'volume_list': List[DiskVolumeDetails]
        }

        self.attribute_map = {
            'disk_configuration': 'diskConfiguration',
            'disk_id': 'diskId',
            'disk_name': 'diskName',
            'disk_size_in_mb': 'diskSizeInMB',
            'disk_type': 'diskType',
            'volume_list': 'volumeList'
        }

        self._disk_configuration = disk_configuration
        self._disk_id = disk_id
        self._disk_name = disk_name
        self._disk_size_in_mb = disk_size_in_mb
        self._disk_type = disk_type
        self._volume_list = volume_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InMageDiskDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InMageDiskDetails of this InMageDiskDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk_configuration(self):
        """Gets the disk_configuration of this InMageDiskDetails.

        Whether disk is dynamic disk or basic disk.

        :return: The disk_configuration of this InMageDiskDetails.
        :rtype: str
        """
        return self._disk_configuration

    @disk_configuration.setter
    def disk_configuration(self, disk_configuration):
        """Sets the disk_configuration of this InMageDiskDetails.

        Whether disk is dynamic disk or basic disk.

        :param disk_configuration: The disk_configuration of this InMageDiskDetails.
        :type disk_configuration: str
        """

        self._disk_configuration = disk_configuration

    @property
    def disk_id(self):
        """Gets the disk_id of this InMageDiskDetails.

        The disk Id.

        :return: The disk_id of this InMageDiskDetails.
        :rtype: str
        """
        return self._disk_id

    @disk_id.setter
    def disk_id(self, disk_id):
        """Sets the disk_id of this InMageDiskDetails.

        The disk Id.

        :param disk_id: The disk_id of this InMageDiskDetails.
        :type disk_id: str
        """

        self._disk_id = disk_id

    @property
    def disk_name(self):
        """Gets the disk_name of this InMageDiskDetails.

        The disk name.

        :return: The disk_name of this InMageDiskDetails.
        :rtype: str
        """
        return self._disk_name

    @disk_name.setter
    def disk_name(self, disk_name):
        """Sets the disk_name of this InMageDiskDetails.

        The disk name.

        :param disk_name: The disk_name of this InMageDiskDetails.
        :type disk_name: str
        """

        self._disk_name = disk_name

    @property
    def disk_size_in_mb(self):
        """Gets the disk_size_in_mb of this InMageDiskDetails.

        The disk size in MB.

        :return: The disk_size_in_mb of this InMageDiskDetails.
        :rtype: str
        """
        return self._disk_size_in_mb

    @disk_size_in_mb.setter
    def disk_size_in_mb(self, disk_size_in_mb):
        """Sets the disk_size_in_mb of this InMageDiskDetails.

        The disk size in MB.

        :param disk_size_in_mb: The disk_size_in_mb of this InMageDiskDetails.
        :type disk_size_in_mb: str
        """

        self._disk_size_in_mb = disk_size_in_mb

    @property
    def disk_type(self):
        """Gets the disk_type of this InMageDiskDetails.

        Whether disk is system disk or data disk.

        :return: The disk_type of this InMageDiskDetails.
        :rtype: str
        """
        return self._disk_type

    @disk_type.setter
    def disk_type(self, disk_type):
        """Sets the disk_type of this InMageDiskDetails.

        Whether disk is system disk or data disk.

        :param disk_type: The disk_type of this InMageDiskDetails.
        :type disk_type: str
        """

        self._disk_type = disk_type

    @property
    def volume_list(self):
        """Gets the volume_list of this InMageDiskDetails.

        Volumes of the disk.

        :return: The volume_list of this InMageDiskDetails.
        :rtype: List[DiskVolumeDetails]
        """
        return self._volume_list

    @volume_list.setter
    def volume_list(self, volume_list):
        """Sets the volume_list of this InMageDiskDetails.

        Volumes of the disk.

        :param volume_list: The volume_list of this InMageDiskDetails.
        :type volume_list: List[DiskVolumeDetails]
        """

        self._volume_list = volume_list
