# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy_provider_specific_details import PolicyProviderSpecificDetails
from openapi_server import util


class HyperVReplicaBasePolicyDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_authentication_type: int=None, application_consistent_snapshot_frequency_in_hours: int=None, compression: str=None, initial_replication_method: str=None, offline_replication_export_path: str=None, offline_replication_import_path: str=None, online_replication_start_time: str=None, recovery_points: int=None, replica_deletion_option: str=None, replication_port: int=None, instance_type: str=None):
        """HyperVReplicaBasePolicyDetails - a model defined in OpenAPI

        :param allowed_authentication_type: The allowed_authentication_type of this HyperVReplicaBasePolicyDetails.
        :param application_consistent_snapshot_frequency_in_hours: The application_consistent_snapshot_frequency_in_hours of this HyperVReplicaBasePolicyDetails.
        :param compression: The compression of this HyperVReplicaBasePolicyDetails.
        :param initial_replication_method: The initial_replication_method of this HyperVReplicaBasePolicyDetails.
        :param offline_replication_export_path: The offline_replication_export_path of this HyperVReplicaBasePolicyDetails.
        :param offline_replication_import_path: The offline_replication_import_path of this HyperVReplicaBasePolicyDetails.
        :param online_replication_start_time: The online_replication_start_time of this HyperVReplicaBasePolicyDetails.
        :param recovery_points: The recovery_points of this HyperVReplicaBasePolicyDetails.
        :param replica_deletion_option: The replica_deletion_option of this HyperVReplicaBasePolicyDetails.
        :param replication_port: The replication_port of this HyperVReplicaBasePolicyDetails.
        :param instance_type: The instance_type of this HyperVReplicaBasePolicyDetails.
        """
        self.openapi_types = {
            'allowed_authentication_type': int,
            'application_consistent_snapshot_frequency_in_hours': int,
            'compression': str,
            'initial_replication_method': str,
            'offline_replication_export_path': str,
            'offline_replication_import_path': str,
            'online_replication_start_time': str,
            'recovery_points': int,
            'replica_deletion_option': str,
            'replication_port': int,
            'instance_type': str
        }

        self.attribute_map = {
            'allowed_authentication_type': 'allowedAuthenticationType',
            'application_consistent_snapshot_frequency_in_hours': 'applicationConsistentSnapshotFrequencyInHours',
            'compression': 'compression',
            'initial_replication_method': 'initialReplicationMethod',
            'offline_replication_export_path': 'offlineReplicationExportPath',
            'offline_replication_import_path': 'offlineReplicationImportPath',
            'online_replication_start_time': 'onlineReplicationStartTime',
            'recovery_points': 'recoveryPoints',
            'replica_deletion_option': 'replicaDeletionOption',
            'replication_port': 'replicationPort',
            'instance_type': 'instanceType'
        }

        self._allowed_authentication_type = allowed_authentication_type
        self._application_consistent_snapshot_frequency_in_hours = application_consistent_snapshot_frequency_in_hours
        self._compression = compression
        self._initial_replication_method = initial_replication_method
        self._offline_replication_export_path = offline_replication_export_path
        self._offline_replication_import_path = offline_replication_import_path
        self._online_replication_start_time = online_replication_start_time
        self._recovery_points = recovery_points
        self._replica_deletion_option = replica_deletion_option
        self._replication_port = replication_port
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HyperVReplicaBasePolicyDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HyperVReplicaBasePolicyDetails of this HyperVReplicaBasePolicyDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_authentication_type(self):
        """Gets the allowed_authentication_type of this HyperVReplicaBasePolicyDetails.

        A value indicating the authentication type.

        :return: The allowed_authentication_type of this HyperVReplicaBasePolicyDetails.
        :rtype: int
        """
        return self._allowed_authentication_type

    @allowed_authentication_type.setter
    def allowed_authentication_type(self, allowed_authentication_type):
        """Sets the allowed_authentication_type of this HyperVReplicaBasePolicyDetails.

        A value indicating the authentication type.

        :param allowed_authentication_type: The allowed_authentication_type of this HyperVReplicaBasePolicyDetails.
        :type allowed_authentication_type: int
        """

        self._allowed_authentication_type = allowed_authentication_type

    @property
    def application_consistent_snapshot_frequency_in_hours(self):
        """Gets the application_consistent_snapshot_frequency_in_hours of this HyperVReplicaBasePolicyDetails.

        A value indicating the application consistent frequency.

        :return: The application_consistent_snapshot_frequency_in_hours of this HyperVReplicaBasePolicyDetails.
        :rtype: int
        """
        return self._application_consistent_snapshot_frequency_in_hours

    @application_consistent_snapshot_frequency_in_hours.setter
    def application_consistent_snapshot_frequency_in_hours(self, application_consistent_snapshot_frequency_in_hours):
        """Sets the application_consistent_snapshot_frequency_in_hours of this HyperVReplicaBasePolicyDetails.

        A value indicating the application consistent frequency.

        :param application_consistent_snapshot_frequency_in_hours: The application_consistent_snapshot_frequency_in_hours of this HyperVReplicaBasePolicyDetails.
        :type application_consistent_snapshot_frequency_in_hours: int
        """

        self._application_consistent_snapshot_frequency_in_hours = application_consistent_snapshot_frequency_in_hours

    @property
    def compression(self):
        """Gets the compression of this HyperVReplicaBasePolicyDetails.

        A value indicating whether compression has to be enabled.

        :return: The compression of this HyperVReplicaBasePolicyDetails.
        :rtype: str
        """
        return self._compression

    @compression.setter
    def compression(self, compression):
        """Sets the compression of this HyperVReplicaBasePolicyDetails.

        A value indicating whether compression has to be enabled.

        :param compression: The compression of this HyperVReplicaBasePolicyDetails.
        :type compression: str
        """

        self._compression = compression

    @property
    def initial_replication_method(self):
        """Gets the initial_replication_method of this HyperVReplicaBasePolicyDetails.

        A value indicating whether IR is online.

        :return: The initial_replication_method of this HyperVReplicaBasePolicyDetails.
        :rtype: str
        """
        return self._initial_replication_method

    @initial_replication_method.setter
    def initial_replication_method(self, initial_replication_method):
        """Sets the initial_replication_method of this HyperVReplicaBasePolicyDetails.

        A value indicating whether IR is online.

        :param initial_replication_method: The initial_replication_method of this HyperVReplicaBasePolicyDetails.
        :type initial_replication_method: str
        """

        self._initial_replication_method = initial_replication_method

    @property
    def offline_replication_export_path(self):
        """Gets the offline_replication_export_path of this HyperVReplicaBasePolicyDetails.

        A value indicating the offline IR export path.

        :return: The offline_replication_export_path of this HyperVReplicaBasePolicyDetails.
        :rtype: str
        """
        return self._offline_replication_export_path

    @offline_replication_export_path.setter
    def offline_replication_export_path(self, offline_replication_export_path):
        """Sets the offline_replication_export_path of this HyperVReplicaBasePolicyDetails.

        A value indicating the offline IR export path.

        :param offline_replication_export_path: The offline_replication_export_path of this HyperVReplicaBasePolicyDetails.
        :type offline_replication_export_path: str
        """

        self._offline_replication_export_path = offline_replication_export_path

    @property
    def offline_replication_import_path(self):
        """Gets the offline_replication_import_path of this HyperVReplicaBasePolicyDetails.

        A value indicating the offline IR import path.

        :return: The offline_replication_import_path of this HyperVReplicaBasePolicyDetails.
        :rtype: str
        """
        return self._offline_replication_import_path

    @offline_replication_import_path.setter
    def offline_replication_import_path(self, offline_replication_import_path):
        """Sets the offline_replication_import_path of this HyperVReplicaBasePolicyDetails.

        A value indicating the offline IR import path.

        :param offline_replication_import_path: The offline_replication_import_path of this HyperVReplicaBasePolicyDetails.
        :type offline_replication_import_path: str
        """

        self._offline_replication_import_path = offline_replication_import_path

    @property
    def online_replication_start_time(self):
        """Gets the online_replication_start_time of this HyperVReplicaBasePolicyDetails.

        A value indicating the online IR start time.

        :return: The online_replication_start_time of this HyperVReplicaBasePolicyDetails.
        :rtype: str
        """
        return self._online_replication_start_time

    @online_replication_start_time.setter
    def online_replication_start_time(self, online_replication_start_time):
        """Sets the online_replication_start_time of this HyperVReplicaBasePolicyDetails.

        A value indicating the online IR start time.

        :param online_replication_start_time: The online_replication_start_time of this HyperVReplicaBasePolicyDetails.
        :type online_replication_start_time: str
        """

        self._online_replication_start_time = online_replication_start_time

    @property
    def recovery_points(self):
        """Gets the recovery_points of this HyperVReplicaBasePolicyDetails.

        A value indicating the number of recovery points.

        :return: The recovery_points of this HyperVReplicaBasePolicyDetails.
        :rtype: int
        """
        return self._recovery_points

    @recovery_points.setter
    def recovery_points(self, recovery_points):
        """Sets the recovery_points of this HyperVReplicaBasePolicyDetails.

        A value indicating the number of recovery points.

        :param recovery_points: The recovery_points of this HyperVReplicaBasePolicyDetails.
        :type recovery_points: int
        """

        self._recovery_points = recovery_points

    @property
    def replica_deletion_option(self):
        """Gets the replica_deletion_option of this HyperVReplicaBasePolicyDetails.

        A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud

        :return: The replica_deletion_option of this HyperVReplicaBasePolicyDetails.
        :rtype: str
        """
        return self._replica_deletion_option

    @replica_deletion_option.setter
    def replica_deletion_option(self, replica_deletion_option):
        """Sets the replica_deletion_option of this HyperVReplicaBasePolicyDetails.

        A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud

        :param replica_deletion_option: The replica_deletion_option of this HyperVReplicaBasePolicyDetails.
        :type replica_deletion_option: str
        """

        self._replica_deletion_option = replica_deletion_option

    @property
    def replication_port(self):
        """Gets the replication_port of this HyperVReplicaBasePolicyDetails.

        A value indicating the recovery HTTPS port.

        :return: The replication_port of this HyperVReplicaBasePolicyDetails.
        :rtype: int
        """
        return self._replication_port

    @replication_port.setter
    def replication_port(self, replication_port):
        """Sets the replication_port of this HyperVReplicaBasePolicyDetails.

        A value indicating the recovery HTTPS port.

        :param replication_port: The replication_port of this HyperVReplicaBasePolicyDetails.
        :type replication_port: int
        """

        self._replication_port = replication_port

    @property
    def instance_type(self):
        """Gets the instance_type of this HyperVReplicaBasePolicyDetails.

        Gets the class type. Overridden in derived classes.

        :return: The instance_type of this HyperVReplicaBasePolicyDetails.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this HyperVReplicaBasePolicyDetails.

        Gets the class type. Overridden in derived classes.

        :param instance_type: The instance_type of this HyperVReplicaBasePolicyDetails.
        :type instance_type: str
        """

        self._instance_type = instance_type
