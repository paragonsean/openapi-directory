# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_migrate_provider_specific_input import TestMigrateProviderSpecificInput
from openapi_server import util


class VMwareCbtTestMigrateInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network_id: str=None, recovery_point_id: str=None, instance_type: str=None):
        """VMwareCbtTestMigrateInput - a model defined in OpenAPI

        :param network_id: The network_id of this VMwareCbtTestMigrateInput.
        :param recovery_point_id: The recovery_point_id of this VMwareCbtTestMigrateInput.
        :param instance_type: The instance_type of this VMwareCbtTestMigrateInput.
        """
        self.openapi_types = {
            'network_id': str,
            'recovery_point_id': str,
            'instance_type': str
        }

        self.attribute_map = {
            'network_id': 'networkId',
            'recovery_point_id': 'recoveryPointId',
            'instance_type': 'instanceType'
        }

        self._network_id = network_id
        self._recovery_point_id = recovery_point_id
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VMwareCbtTestMigrateInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VMwareCbtTestMigrateInput of this VMwareCbtTestMigrateInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network_id(self):
        """Gets the network_id of this VMwareCbtTestMigrateInput.

        The test network Id.

        :return: The network_id of this VMwareCbtTestMigrateInput.
        :rtype: str
        """
        return self._network_id

    @network_id.setter
    def network_id(self, network_id):
        """Sets the network_id of this VMwareCbtTestMigrateInput.

        The test network Id.

        :param network_id: The network_id of this VMwareCbtTestMigrateInput.
        :type network_id: str
        """
        if network_id is None:
            raise ValueError("Invalid value for `network_id`, must not be `None`")

        self._network_id = network_id

    @property
    def recovery_point_id(self):
        """Gets the recovery_point_id of this VMwareCbtTestMigrateInput.

        The recovery point Id.

        :return: The recovery_point_id of this VMwareCbtTestMigrateInput.
        :rtype: str
        """
        return self._recovery_point_id

    @recovery_point_id.setter
    def recovery_point_id(self, recovery_point_id):
        """Sets the recovery_point_id of this VMwareCbtTestMigrateInput.

        The recovery point Id.

        :param recovery_point_id: The recovery_point_id of this VMwareCbtTestMigrateInput.
        :type recovery_point_id: str
        """
        if recovery_point_id is None:
            raise ValueError("Invalid value for `recovery_point_id`, must not be `None`")

        self._recovery_point_id = recovery_point_id

    @property
    def instance_type(self):
        """Gets the instance_type of this VMwareCbtTestMigrateInput.

        The class type.

        :return: The instance_type of this VMwareCbtTestMigrateInput.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this VMwareCbtTestMigrateInput.

        The class type.

        :param instance_type: The instance_type of this VMwareCbtTestMigrateInput.
        :type instance_type: str
        """
        if instance_type is None:
            raise ValueError("Invalid value for `instance_type`, must not be `None`")

        self._instance_type = instance_type
