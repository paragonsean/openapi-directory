# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_migration_item_provider_specific_input import UpdateMigrationItemProviderSpecificInput
from openapi_server.models.v_mware_cbt_nic_input import VMwareCbtNicInput
from openapi_server import util


class VMwareCbtUpdateMigrationItemInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, license_type: str=None, perform_auto_resync: str=None, target_availability_set_id: str=None, target_boot_diagnostics_storage_account_id: str=None, target_network_id: str=None, target_resource_group_id: str=None, target_vm_name: str=None, target_vm_size: str=None, vm_nics: List[VMwareCbtNicInput]=None, instance_type: str=None):
        """VMwareCbtUpdateMigrationItemInput - a model defined in OpenAPI

        :param license_type: The license_type of this VMwareCbtUpdateMigrationItemInput.
        :param perform_auto_resync: The perform_auto_resync of this VMwareCbtUpdateMigrationItemInput.
        :param target_availability_set_id: The target_availability_set_id of this VMwareCbtUpdateMigrationItemInput.
        :param target_boot_diagnostics_storage_account_id: The target_boot_diagnostics_storage_account_id of this VMwareCbtUpdateMigrationItemInput.
        :param target_network_id: The target_network_id of this VMwareCbtUpdateMigrationItemInput.
        :param target_resource_group_id: The target_resource_group_id of this VMwareCbtUpdateMigrationItemInput.
        :param target_vm_name: The target_vm_name of this VMwareCbtUpdateMigrationItemInput.
        :param target_vm_size: The target_vm_size of this VMwareCbtUpdateMigrationItemInput.
        :param vm_nics: The vm_nics of this VMwareCbtUpdateMigrationItemInput.
        :param instance_type: The instance_type of this VMwareCbtUpdateMigrationItemInput.
        """
        self.openapi_types = {
            'license_type': str,
            'perform_auto_resync': str,
            'target_availability_set_id': str,
            'target_boot_diagnostics_storage_account_id': str,
            'target_network_id': str,
            'target_resource_group_id': str,
            'target_vm_name': str,
            'target_vm_size': str,
            'vm_nics': List[VMwareCbtNicInput],
            'instance_type': str
        }

        self.attribute_map = {
            'license_type': 'licenseType',
            'perform_auto_resync': 'performAutoResync',
            'target_availability_set_id': 'targetAvailabilitySetId',
            'target_boot_diagnostics_storage_account_id': 'targetBootDiagnosticsStorageAccountId',
            'target_network_id': 'targetNetworkId',
            'target_resource_group_id': 'targetResourceGroupId',
            'target_vm_name': 'targetVmName',
            'target_vm_size': 'targetVmSize',
            'vm_nics': 'vmNics',
            'instance_type': 'instanceType'
        }

        self._license_type = license_type
        self._perform_auto_resync = perform_auto_resync
        self._target_availability_set_id = target_availability_set_id
        self._target_boot_diagnostics_storage_account_id = target_boot_diagnostics_storage_account_id
        self._target_network_id = target_network_id
        self._target_resource_group_id = target_resource_group_id
        self._target_vm_name = target_vm_name
        self._target_vm_size = target_vm_size
        self._vm_nics = vm_nics
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VMwareCbtUpdateMigrationItemInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VMwareCbtUpdateMigrationItemInput of this VMwareCbtUpdateMigrationItemInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def license_type(self):
        """Gets the license_type of this VMwareCbtUpdateMigrationItemInput.

        The license type.

        :return: The license_type of this VMwareCbtUpdateMigrationItemInput.
        :rtype: str
        """
        return self._license_type

    @license_type.setter
    def license_type(self, license_type):
        """Sets the license_type of this VMwareCbtUpdateMigrationItemInput.

        The license type.

        :param license_type: The license_type of this VMwareCbtUpdateMigrationItemInput.
        :type license_type: str
        """
        allowed_values = ["NotSpecified", "NoLicenseType", "WindowsServer"]  # noqa: E501
        if license_type not in allowed_values:
            raise ValueError(
                "Invalid value for `license_type` ({0}), must be one of {1}"
                .format(license_type, allowed_values)
            )

        self._license_type = license_type

    @property
    def perform_auto_resync(self):
        """Gets the perform_auto_resync of this VMwareCbtUpdateMigrationItemInput.

        A value indicating whether auto resync is to be done.

        :return: The perform_auto_resync of this VMwareCbtUpdateMigrationItemInput.
        :rtype: str
        """
        return self._perform_auto_resync

    @perform_auto_resync.setter
    def perform_auto_resync(self, perform_auto_resync):
        """Sets the perform_auto_resync of this VMwareCbtUpdateMigrationItemInput.

        A value indicating whether auto resync is to be done.

        :param perform_auto_resync: The perform_auto_resync of this VMwareCbtUpdateMigrationItemInput.
        :type perform_auto_resync: str
        """

        self._perform_auto_resync = perform_auto_resync

    @property
    def target_availability_set_id(self):
        """Gets the target_availability_set_id of this VMwareCbtUpdateMigrationItemInput.

        The target availability set ARM Id.

        :return: The target_availability_set_id of this VMwareCbtUpdateMigrationItemInput.
        :rtype: str
        """
        return self._target_availability_set_id

    @target_availability_set_id.setter
    def target_availability_set_id(self, target_availability_set_id):
        """Sets the target_availability_set_id of this VMwareCbtUpdateMigrationItemInput.

        The target availability set ARM Id.

        :param target_availability_set_id: The target_availability_set_id of this VMwareCbtUpdateMigrationItemInput.
        :type target_availability_set_id: str
        """

        self._target_availability_set_id = target_availability_set_id

    @property
    def target_boot_diagnostics_storage_account_id(self):
        """Gets the target_boot_diagnostics_storage_account_id of this VMwareCbtUpdateMigrationItemInput.

        The target boot diagnostics storage account ARM Id.

        :return: The target_boot_diagnostics_storage_account_id of this VMwareCbtUpdateMigrationItemInput.
        :rtype: str
        """
        return self._target_boot_diagnostics_storage_account_id

    @target_boot_diagnostics_storage_account_id.setter
    def target_boot_diagnostics_storage_account_id(self, target_boot_diagnostics_storage_account_id):
        """Sets the target_boot_diagnostics_storage_account_id of this VMwareCbtUpdateMigrationItemInput.

        The target boot diagnostics storage account ARM Id.

        :param target_boot_diagnostics_storage_account_id: The target_boot_diagnostics_storage_account_id of this VMwareCbtUpdateMigrationItemInput.
        :type target_boot_diagnostics_storage_account_id: str
        """

        self._target_boot_diagnostics_storage_account_id = target_boot_diagnostics_storage_account_id

    @property
    def target_network_id(self):
        """Gets the target_network_id of this VMwareCbtUpdateMigrationItemInput.

        The target network ARM Id.

        :return: The target_network_id of this VMwareCbtUpdateMigrationItemInput.
        :rtype: str
        """
        return self._target_network_id

    @target_network_id.setter
    def target_network_id(self, target_network_id):
        """Sets the target_network_id of this VMwareCbtUpdateMigrationItemInput.

        The target network ARM Id.

        :param target_network_id: The target_network_id of this VMwareCbtUpdateMigrationItemInput.
        :type target_network_id: str
        """

        self._target_network_id = target_network_id

    @property
    def target_resource_group_id(self):
        """Gets the target_resource_group_id of this VMwareCbtUpdateMigrationItemInput.

        The target resource group ARM Id.

        :return: The target_resource_group_id of this VMwareCbtUpdateMigrationItemInput.
        :rtype: str
        """
        return self._target_resource_group_id

    @target_resource_group_id.setter
    def target_resource_group_id(self, target_resource_group_id):
        """Sets the target_resource_group_id of this VMwareCbtUpdateMigrationItemInput.

        The target resource group ARM Id.

        :param target_resource_group_id: The target_resource_group_id of this VMwareCbtUpdateMigrationItemInput.
        :type target_resource_group_id: str
        """

        self._target_resource_group_id = target_resource_group_id

    @property
    def target_vm_name(self):
        """Gets the target_vm_name of this VMwareCbtUpdateMigrationItemInput.

        The target VM name.

        :return: The target_vm_name of this VMwareCbtUpdateMigrationItemInput.
        :rtype: str
        """
        return self._target_vm_name

    @target_vm_name.setter
    def target_vm_name(self, target_vm_name):
        """Sets the target_vm_name of this VMwareCbtUpdateMigrationItemInput.

        The target VM name.

        :param target_vm_name: The target_vm_name of this VMwareCbtUpdateMigrationItemInput.
        :type target_vm_name: str
        """

        self._target_vm_name = target_vm_name

    @property
    def target_vm_size(self):
        """Gets the target_vm_size of this VMwareCbtUpdateMigrationItemInput.

        The target VM size.

        :return: The target_vm_size of this VMwareCbtUpdateMigrationItemInput.
        :rtype: str
        """
        return self._target_vm_size

    @target_vm_size.setter
    def target_vm_size(self, target_vm_size):
        """Sets the target_vm_size of this VMwareCbtUpdateMigrationItemInput.

        The target VM size.

        :param target_vm_size: The target_vm_size of this VMwareCbtUpdateMigrationItemInput.
        :type target_vm_size: str
        """

        self._target_vm_size = target_vm_size

    @property
    def vm_nics(self):
        """Gets the vm_nics of this VMwareCbtUpdateMigrationItemInput.

        The list of NIC details.

        :return: The vm_nics of this VMwareCbtUpdateMigrationItemInput.
        :rtype: List[VMwareCbtNicInput]
        """
        return self._vm_nics

    @vm_nics.setter
    def vm_nics(self, vm_nics):
        """Sets the vm_nics of this VMwareCbtUpdateMigrationItemInput.

        The list of NIC details.

        :param vm_nics: The vm_nics of this VMwareCbtUpdateMigrationItemInput.
        :type vm_nics: List[VMwareCbtNicInput]
        """

        self._vm_nics = vm_nics

    @property
    def instance_type(self):
        """Gets the instance_type of this VMwareCbtUpdateMigrationItemInput.

        The class type.

        :return: The instance_type of this VMwareCbtUpdateMigrationItemInput.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this VMwareCbtUpdateMigrationItemInput.

        The class type.

        :param instance_type: The instance_type of this VMwareCbtUpdateMigrationItemInput.
        :type instance_type: str
        """

        self._instance_type = instance_type
