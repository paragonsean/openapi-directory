# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RenewCertificateInputProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, renew_certificate_type: str=None):
        """RenewCertificateInputProperties - a model defined in OpenAPI

        :param renew_certificate_type: The renew_certificate_type of this RenewCertificateInputProperties.
        """
        self.openapi_types = {
            'renew_certificate_type': str
        }

        self.attribute_map = {
            'renew_certificate_type': 'renewCertificateType'
        }

        self._renew_certificate_type = renew_certificate_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RenewCertificateInputProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RenewCertificateInputProperties of this RenewCertificateInputProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def renew_certificate_type(self):
        """Gets the renew_certificate_type of this RenewCertificateInputProperties.

        Renew certificate type.

        :return: The renew_certificate_type of this RenewCertificateInputProperties.
        :rtype: str
        """
        return self._renew_certificate_type

    @renew_certificate_type.setter
    def renew_certificate_type(self, renew_certificate_type):
        """Sets the renew_certificate_type of this RenewCertificateInputProperties.

        Renew certificate type.

        :param renew_certificate_type: The renew_certificate_type of this RenewCertificateInputProperties.
        :type renew_certificate_type: str
        """

        self._renew_certificate_type = renew_certificate_type
