# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VMwareCbtProtectedDiskDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capacity_in_bytes: int=None, disk_id: str=None, disk_name: str=None, disk_path: str=None, disk_type: str=None, is_os_disk: str=None, log_storage_account_id: str=None, log_storage_account_sas_secret_name: str=None, seed_managed_disk_id: str=None, target_managed_disk_id: str=None):
        """VMwareCbtProtectedDiskDetails - a model defined in OpenAPI

        :param capacity_in_bytes: The capacity_in_bytes of this VMwareCbtProtectedDiskDetails.
        :param disk_id: The disk_id of this VMwareCbtProtectedDiskDetails.
        :param disk_name: The disk_name of this VMwareCbtProtectedDiskDetails.
        :param disk_path: The disk_path of this VMwareCbtProtectedDiskDetails.
        :param disk_type: The disk_type of this VMwareCbtProtectedDiskDetails.
        :param is_os_disk: The is_os_disk of this VMwareCbtProtectedDiskDetails.
        :param log_storage_account_id: The log_storage_account_id of this VMwareCbtProtectedDiskDetails.
        :param log_storage_account_sas_secret_name: The log_storage_account_sas_secret_name of this VMwareCbtProtectedDiskDetails.
        :param seed_managed_disk_id: The seed_managed_disk_id of this VMwareCbtProtectedDiskDetails.
        :param target_managed_disk_id: The target_managed_disk_id of this VMwareCbtProtectedDiskDetails.
        """
        self.openapi_types = {
            'capacity_in_bytes': int,
            'disk_id': str,
            'disk_name': str,
            'disk_path': str,
            'disk_type': str,
            'is_os_disk': str,
            'log_storage_account_id': str,
            'log_storage_account_sas_secret_name': str,
            'seed_managed_disk_id': str,
            'target_managed_disk_id': str
        }

        self.attribute_map = {
            'capacity_in_bytes': 'capacityInBytes',
            'disk_id': 'diskId',
            'disk_name': 'diskName',
            'disk_path': 'diskPath',
            'disk_type': 'diskType',
            'is_os_disk': 'isOSDisk',
            'log_storage_account_id': 'logStorageAccountId',
            'log_storage_account_sas_secret_name': 'logStorageAccountSasSecretName',
            'seed_managed_disk_id': 'seedManagedDiskId',
            'target_managed_disk_id': 'targetManagedDiskId'
        }

        self._capacity_in_bytes = capacity_in_bytes
        self._disk_id = disk_id
        self._disk_name = disk_name
        self._disk_path = disk_path
        self._disk_type = disk_type
        self._is_os_disk = is_os_disk
        self._log_storage_account_id = log_storage_account_id
        self._log_storage_account_sas_secret_name = log_storage_account_sas_secret_name
        self._seed_managed_disk_id = seed_managed_disk_id
        self._target_managed_disk_id = target_managed_disk_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VMwareCbtProtectedDiskDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VMwareCbtProtectedDiskDetails of this VMwareCbtProtectedDiskDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capacity_in_bytes(self):
        """Gets the capacity_in_bytes of this VMwareCbtProtectedDiskDetails.

        The disk capacity in bytes.

        :return: The capacity_in_bytes of this VMwareCbtProtectedDiskDetails.
        :rtype: int
        """
        return self._capacity_in_bytes

    @capacity_in_bytes.setter
    def capacity_in_bytes(self, capacity_in_bytes):
        """Sets the capacity_in_bytes of this VMwareCbtProtectedDiskDetails.

        The disk capacity in bytes.

        :param capacity_in_bytes: The capacity_in_bytes of this VMwareCbtProtectedDiskDetails.
        :type capacity_in_bytes: int
        """

        self._capacity_in_bytes = capacity_in_bytes

    @property
    def disk_id(self):
        """Gets the disk_id of this VMwareCbtProtectedDiskDetails.

        The disk id.

        :return: The disk_id of this VMwareCbtProtectedDiskDetails.
        :rtype: str
        """
        return self._disk_id

    @disk_id.setter
    def disk_id(self, disk_id):
        """Sets the disk_id of this VMwareCbtProtectedDiskDetails.

        The disk id.

        :param disk_id: The disk_id of this VMwareCbtProtectedDiskDetails.
        :type disk_id: str
        """

        self._disk_id = disk_id

    @property
    def disk_name(self):
        """Gets the disk_name of this VMwareCbtProtectedDiskDetails.

        The disk name.

        :return: The disk_name of this VMwareCbtProtectedDiskDetails.
        :rtype: str
        """
        return self._disk_name

    @disk_name.setter
    def disk_name(self, disk_name):
        """Sets the disk_name of this VMwareCbtProtectedDiskDetails.

        The disk name.

        :param disk_name: The disk_name of this VMwareCbtProtectedDiskDetails.
        :type disk_name: str
        """

        self._disk_name = disk_name

    @property
    def disk_path(self):
        """Gets the disk_path of this VMwareCbtProtectedDiskDetails.

        The disk path.

        :return: The disk_path of this VMwareCbtProtectedDiskDetails.
        :rtype: str
        """
        return self._disk_path

    @disk_path.setter
    def disk_path(self, disk_path):
        """Sets the disk_path of this VMwareCbtProtectedDiskDetails.

        The disk path.

        :param disk_path: The disk_path of this VMwareCbtProtectedDiskDetails.
        :type disk_path: str
        """

        self._disk_path = disk_path

    @property
    def disk_type(self):
        """Gets the disk_type of this VMwareCbtProtectedDiskDetails.

        The disk type.

        :return: The disk_type of this VMwareCbtProtectedDiskDetails.
        :rtype: str
        """
        return self._disk_type

    @disk_type.setter
    def disk_type(self, disk_type):
        """Sets the disk_type of this VMwareCbtProtectedDiskDetails.

        The disk type.

        :param disk_type: The disk_type of this VMwareCbtProtectedDiskDetails.
        :type disk_type: str
        """
        allowed_values = ["Standard_LRS", "Premium_LRS", "StandardSSD_LRS"]  # noqa: E501
        if disk_type not in allowed_values:
            raise ValueError(
                "Invalid value for `disk_type` ({0}), must be one of {1}"
                .format(disk_type, allowed_values)
            )

        self._disk_type = disk_type

    @property
    def is_os_disk(self):
        """Gets the is_os_disk of this VMwareCbtProtectedDiskDetails.

        A value indicating whether the disk is the OS disk.

        :return: The is_os_disk of this VMwareCbtProtectedDiskDetails.
        :rtype: str
        """
        return self._is_os_disk

    @is_os_disk.setter
    def is_os_disk(self, is_os_disk):
        """Sets the is_os_disk of this VMwareCbtProtectedDiskDetails.

        A value indicating whether the disk is the OS disk.

        :param is_os_disk: The is_os_disk of this VMwareCbtProtectedDiskDetails.
        :type is_os_disk: str
        """

        self._is_os_disk = is_os_disk

    @property
    def log_storage_account_id(self):
        """Gets the log_storage_account_id of this VMwareCbtProtectedDiskDetails.

        The log storage account ARM Id.

        :return: The log_storage_account_id of this VMwareCbtProtectedDiskDetails.
        :rtype: str
        """
        return self._log_storage_account_id

    @log_storage_account_id.setter
    def log_storage_account_id(self, log_storage_account_id):
        """Sets the log_storage_account_id of this VMwareCbtProtectedDiskDetails.

        The log storage account ARM Id.

        :param log_storage_account_id: The log_storage_account_id of this VMwareCbtProtectedDiskDetails.
        :type log_storage_account_id: str
        """

        self._log_storage_account_id = log_storage_account_id

    @property
    def log_storage_account_sas_secret_name(self):
        """Gets the log_storage_account_sas_secret_name of this VMwareCbtProtectedDiskDetails.

        The key vault secret name of the log storage account.

        :return: The log_storage_account_sas_secret_name of this VMwareCbtProtectedDiskDetails.
        :rtype: str
        """
        return self._log_storage_account_sas_secret_name

    @log_storage_account_sas_secret_name.setter
    def log_storage_account_sas_secret_name(self, log_storage_account_sas_secret_name):
        """Sets the log_storage_account_sas_secret_name of this VMwareCbtProtectedDiskDetails.

        The key vault secret name of the log storage account.

        :param log_storage_account_sas_secret_name: The log_storage_account_sas_secret_name of this VMwareCbtProtectedDiskDetails.
        :type log_storage_account_sas_secret_name: str
        """

        self._log_storage_account_sas_secret_name = log_storage_account_sas_secret_name

    @property
    def seed_managed_disk_id(self):
        """Gets the seed_managed_disk_id of this VMwareCbtProtectedDiskDetails.

        The ARM Id of the seed managed disk.

        :return: The seed_managed_disk_id of this VMwareCbtProtectedDiskDetails.
        :rtype: str
        """
        return self._seed_managed_disk_id

    @seed_managed_disk_id.setter
    def seed_managed_disk_id(self, seed_managed_disk_id):
        """Sets the seed_managed_disk_id of this VMwareCbtProtectedDiskDetails.

        The ARM Id of the seed managed disk.

        :param seed_managed_disk_id: The seed_managed_disk_id of this VMwareCbtProtectedDiskDetails.
        :type seed_managed_disk_id: str
        """

        self._seed_managed_disk_id = seed_managed_disk_id

    @property
    def target_managed_disk_id(self):
        """Gets the target_managed_disk_id of this VMwareCbtProtectedDiskDetails.

        The ARM Id of the target managed disk.

        :return: The target_managed_disk_id of this VMwareCbtProtectedDiskDetails.
        :rtype: str
        """
        return self._target_managed_disk_id

    @target_managed_disk_id.setter
    def target_managed_disk_id(self, target_managed_disk_id):
        """Sets the target_managed_disk_id of this VMwareCbtProtectedDiskDetails.

        The ARM Id of the target managed disk.

        :param target_managed_disk_id: The target_managed_disk_id of this VMwareCbtProtectedDiskDetails.
        :type target_managed_disk_id: str
        """

        self._target_managed_disk_id = target_managed_disk_id
