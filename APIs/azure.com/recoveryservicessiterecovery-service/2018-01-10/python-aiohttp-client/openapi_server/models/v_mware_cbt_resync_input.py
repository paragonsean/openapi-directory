# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resync_provider_specific_input import ResyncProviderSpecificInput
from openapi_server import util


class VMwareCbtResyncInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, skip_cbt_reset: str=None, instance_type: str=None):
        """VMwareCbtResyncInput - a model defined in OpenAPI

        :param skip_cbt_reset: The skip_cbt_reset of this VMwareCbtResyncInput.
        :param instance_type: The instance_type of this VMwareCbtResyncInput.
        """
        self.openapi_types = {
            'skip_cbt_reset': str,
            'instance_type': str
        }

        self.attribute_map = {
            'skip_cbt_reset': 'skipCbtReset',
            'instance_type': 'instanceType'
        }

        self._skip_cbt_reset = skip_cbt_reset
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VMwareCbtResyncInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VMwareCbtResyncInput of this VMwareCbtResyncInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def skip_cbt_reset(self):
        """Gets the skip_cbt_reset of this VMwareCbtResyncInput.

        A value indicating whether CBT is to be reset.

        :return: The skip_cbt_reset of this VMwareCbtResyncInput.
        :rtype: str
        """
        return self._skip_cbt_reset

    @skip_cbt_reset.setter
    def skip_cbt_reset(self, skip_cbt_reset):
        """Sets the skip_cbt_reset of this VMwareCbtResyncInput.

        A value indicating whether CBT is to be reset.

        :param skip_cbt_reset: The skip_cbt_reset of this VMwareCbtResyncInput.
        :type skip_cbt_reset: str
        """
        if skip_cbt_reset is None:
            raise ValueError("Invalid value for `skip_cbt_reset`, must not be `None`")

        self._skip_cbt_reset = skip_cbt_reset

    @property
    def instance_type(self):
        """Gets the instance_type of this VMwareCbtResyncInput.

        The class type.

        :return: The instance_type of this VMwareCbtResyncInput.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this VMwareCbtResyncInput.

        The class type.

        :param instance_type: The instance_type of this VMwareCbtResyncInput.
        :type instance_type: str
        """
        if instance_type is None:
            raise ValueError("Invalid value for `instance_type`, must not be `None`")

        self._instance_type = instance_type
