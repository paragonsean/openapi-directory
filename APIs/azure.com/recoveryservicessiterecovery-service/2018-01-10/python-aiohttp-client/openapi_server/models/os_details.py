# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OSDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, o_s_major_version: str=None, o_s_minor_version: str=None, o_s_version: str=None, os_edition: str=None, os_type: str=None, product_type: str=None):
        """OSDetails - a model defined in OpenAPI

        :param o_s_major_version: The o_s_major_version of this OSDetails.
        :param o_s_minor_version: The o_s_minor_version of this OSDetails.
        :param o_s_version: The o_s_version of this OSDetails.
        :param os_edition: The os_edition of this OSDetails.
        :param os_type: The os_type of this OSDetails.
        :param product_type: The product_type of this OSDetails.
        """
        self.openapi_types = {
            'o_s_major_version': str,
            'o_s_minor_version': str,
            'o_s_version': str,
            'os_edition': str,
            'os_type': str,
            'product_type': str
        }

        self.attribute_map = {
            'o_s_major_version': 'oSMajorVersion',
            'o_s_minor_version': 'oSMinorVersion',
            'o_s_version': 'oSVersion',
            'os_edition': 'osEdition',
            'os_type': 'osType',
            'product_type': 'productType'
        }

        self._o_s_major_version = o_s_major_version
        self._o_s_minor_version = o_s_minor_version
        self._o_s_version = o_s_version
        self._os_edition = os_edition
        self._os_type = os_type
        self._product_type = product_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OSDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OSDetails of this OSDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def o_s_major_version(self):
        """Gets the o_s_major_version of this OSDetails.

        The OS Major Version.

        :return: The o_s_major_version of this OSDetails.
        :rtype: str
        """
        return self._o_s_major_version

    @o_s_major_version.setter
    def o_s_major_version(self, o_s_major_version):
        """Sets the o_s_major_version of this OSDetails.

        The OS Major Version.

        :param o_s_major_version: The o_s_major_version of this OSDetails.
        :type o_s_major_version: str
        """

        self._o_s_major_version = o_s_major_version

    @property
    def o_s_minor_version(self):
        """Gets the o_s_minor_version of this OSDetails.

        The OS Minor Version.

        :return: The o_s_minor_version of this OSDetails.
        :rtype: str
        """
        return self._o_s_minor_version

    @o_s_minor_version.setter
    def o_s_minor_version(self, o_s_minor_version):
        """Sets the o_s_minor_version of this OSDetails.

        The OS Minor Version.

        :param o_s_minor_version: The o_s_minor_version of this OSDetails.
        :type o_s_minor_version: str
        """

        self._o_s_minor_version = o_s_minor_version

    @property
    def o_s_version(self):
        """Gets the o_s_version of this OSDetails.

        The OS Version.

        :return: The o_s_version of this OSDetails.
        :rtype: str
        """
        return self._o_s_version

    @o_s_version.setter
    def o_s_version(self, o_s_version):
        """Sets the o_s_version of this OSDetails.

        The OS Version.

        :param o_s_version: The o_s_version of this OSDetails.
        :type o_s_version: str
        """

        self._o_s_version = o_s_version

    @property
    def os_edition(self):
        """Gets the os_edition of this OSDetails.

        The OSEdition.

        :return: The os_edition of this OSDetails.
        :rtype: str
        """
        return self._os_edition

    @os_edition.setter
    def os_edition(self, os_edition):
        """Sets the os_edition of this OSDetails.

        The OSEdition.

        :param os_edition: The os_edition of this OSDetails.
        :type os_edition: str
        """

        self._os_edition = os_edition

    @property
    def os_type(self):
        """Gets the os_type of this OSDetails.

        VM Disk details.

        :return: The os_type of this OSDetails.
        :rtype: str
        """
        return self._os_type

    @os_type.setter
    def os_type(self, os_type):
        """Sets the os_type of this OSDetails.

        VM Disk details.

        :param os_type: The os_type of this OSDetails.
        :type os_type: str
        """

        self._os_type = os_type

    @property
    def product_type(self):
        """Gets the product_type of this OSDetails.

        Product type.

        :return: The product_type of this OSDetails.
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this OSDetails.

        Product type.

        :param product_type: The product_type of this OSDetails.
        :type product_type: str
        """

        self._product_type = product_type
