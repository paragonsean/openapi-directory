# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recovery_plan_provider_specific_failover_input import RecoveryPlanProviderSpecificFailoverInput
from openapi_server import util


class RecoveryPlanInMageAzureV2FailoverInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recovery_point_type: str=None, use_multi_vm_sync_point: str=None, vault_location: str=None, instance_type: str=None):
        """RecoveryPlanInMageAzureV2FailoverInput - a model defined in OpenAPI

        :param recovery_point_type: The recovery_point_type of this RecoveryPlanInMageAzureV2FailoverInput.
        :param use_multi_vm_sync_point: The use_multi_vm_sync_point of this RecoveryPlanInMageAzureV2FailoverInput.
        :param vault_location: The vault_location of this RecoveryPlanInMageAzureV2FailoverInput.
        :param instance_type: The instance_type of this RecoveryPlanInMageAzureV2FailoverInput.
        """
        self.openapi_types = {
            'recovery_point_type': str,
            'use_multi_vm_sync_point': str,
            'vault_location': str,
            'instance_type': str
        }

        self.attribute_map = {
            'recovery_point_type': 'recoveryPointType',
            'use_multi_vm_sync_point': 'useMultiVmSyncPoint',
            'vault_location': 'vaultLocation',
            'instance_type': 'instanceType'
        }

        self._recovery_point_type = recovery_point_type
        self._use_multi_vm_sync_point = use_multi_vm_sync_point
        self._vault_location = vault_location
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecoveryPlanInMageAzureV2FailoverInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecoveryPlanInMageAzureV2FailoverInput of this RecoveryPlanInMageAzureV2FailoverInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recovery_point_type(self):
        """Gets the recovery_point_type of this RecoveryPlanInMageAzureV2FailoverInput.

        The recovery point type.

        :return: The recovery_point_type of this RecoveryPlanInMageAzureV2FailoverInput.
        :rtype: str
        """
        return self._recovery_point_type

    @recovery_point_type.setter
    def recovery_point_type(self, recovery_point_type):
        """Sets the recovery_point_type of this RecoveryPlanInMageAzureV2FailoverInput.

        The recovery point type.

        :param recovery_point_type: The recovery_point_type of this RecoveryPlanInMageAzureV2FailoverInput.
        :type recovery_point_type: str
        """
        allowed_values = ["Latest", "LatestApplicationConsistent", "LatestCrashConsistent", "LatestProcessed"]  # noqa: E501
        if recovery_point_type not in allowed_values:
            raise ValueError(
                "Invalid value for `recovery_point_type` ({0}), must be one of {1}"
                .format(recovery_point_type, allowed_values)
            )

        self._recovery_point_type = recovery_point_type

    @property
    def use_multi_vm_sync_point(self):
        """Gets the use_multi_vm_sync_point of this RecoveryPlanInMageAzureV2FailoverInput.

        A value indicating whether multi VM sync enabled VMs should use multi VM sync points for failover.

        :return: The use_multi_vm_sync_point of this RecoveryPlanInMageAzureV2FailoverInput.
        :rtype: str
        """
        return self._use_multi_vm_sync_point

    @use_multi_vm_sync_point.setter
    def use_multi_vm_sync_point(self, use_multi_vm_sync_point):
        """Sets the use_multi_vm_sync_point of this RecoveryPlanInMageAzureV2FailoverInput.

        A value indicating whether multi VM sync enabled VMs should use multi VM sync points for failover.

        :param use_multi_vm_sync_point: The use_multi_vm_sync_point of this RecoveryPlanInMageAzureV2FailoverInput.
        :type use_multi_vm_sync_point: str
        """

        self._use_multi_vm_sync_point = use_multi_vm_sync_point

    @property
    def vault_location(self):
        """Gets the vault_location of this RecoveryPlanInMageAzureV2FailoverInput.

        The vault location.

        :return: The vault_location of this RecoveryPlanInMageAzureV2FailoverInput.
        :rtype: str
        """
        return self._vault_location

    @vault_location.setter
    def vault_location(self, vault_location):
        """Sets the vault_location of this RecoveryPlanInMageAzureV2FailoverInput.

        The vault location.

        :param vault_location: The vault_location of this RecoveryPlanInMageAzureV2FailoverInput.
        :type vault_location: str
        """
        if vault_location is None:
            raise ValueError("Invalid value for `vault_location`, must not be `None`")

        self._vault_location = vault_location

    @property
    def instance_type(self):
        """Gets the instance_type of this RecoveryPlanInMageAzureV2FailoverInput.

        The class type.

        :return: The instance_type of this RecoveryPlanInMageAzureV2FailoverInput.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this RecoveryPlanInMageAzureV2FailoverInput.

        The class type.

        :param instance_type: The instance_type of this RecoveryPlanInMageAzureV2FailoverInput.
        :type instance_type: str
        """

        self._instance_type = instance_type
