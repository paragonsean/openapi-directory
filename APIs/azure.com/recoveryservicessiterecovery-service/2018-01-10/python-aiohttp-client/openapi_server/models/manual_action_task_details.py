# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_type_details import TaskTypeDetails
from openapi_server import util


class ManualActionTaskDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instructions: str=None, name: str=None, observation: str=None, instance_type: str=None):
        """ManualActionTaskDetails - a model defined in OpenAPI

        :param instructions: The instructions of this ManualActionTaskDetails.
        :param name: The name of this ManualActionTaskDetails.
        :param observation: The observation of this ManualActionTaskDetails.
        :param instance_type: The instance_type of this ManualActionTaskDetails.
        """
        self.openapi_types = {
            'instructions': str,
            'name': str,
            'observation': str,
            'instance_type': str
        }

        self.attribute_map = {
            'instructions': 'instructions',
            'name': 'name',
            'observation': 'observation',
            'instance_type': 'instanceType'
        }

        self._instructions = instructions
        self._name = name
        self._observation = observation
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManualActionTaskDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManualActionTaskDetails of this ManualActionTaskDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instructions(self):
        """Gets the instructions of this ManualActionTaskDetails.

        The instructions.

        :return: The instructions of this ManualActionTaskDetails.
        :rtype: str
        """
        return self._instructions

    @instructions.setter
    def instructions(self, instructions):
        """Sets the instructions of this ManualActionTaskDetails.

        The instructions.

        :param instructions: The instructions of this ManualActionTaskDetails.
        :type instructions: str
        """

        self._instructions = instructions

    @property
    def name(self):
        """Gets the name of this ManualActionTaskDetails.

        The name.

        :return: The name of this ManualActionTaskDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ManualActionTaskDetails.

        The name.

        :param name: The name of this ManualActionTaskDetails.
        :type name: str
        """

        self._name = name

    @property
    def observation(self):
        """Gets the observation of this ManualActionTaskDetails.

        The observation.

        :return: The observation of this ManualActionTaskDetails.
        :rtype: str
        """
        return self._observation

    @observation.setter
    def observation(self, observation):
        """Sets the observation of this ManualActionTaskDetails.

        The observation.

        :param observation: The observation of this ManualActionTaskDetails.
        :type observation: str
        """

        self._observation = observation

    @property
    def instance_type(self):
        """Gets the instance_type of this ManualActionTaskDetails.

        The type of task details.

        :return: The instance_type of this ManualActionTaskDetails.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this ManualActionTaskDetails.

        The type of task details.

        :param instance_type: The instance_type of this ManualActionTaskDetails.
        :type instance_type: str
        """

        self._instance_type = instance_type
