# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_type_details import TaskTypeDetails
from openapi_server import util


class VmNicUpdatesTaskDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, nic_id: str=None, vm_id: str=None, instance_type: str=None):
        """VmNicUpdatesTaskDetails - a model defined in OpenAPI

        :param name: The name of this VmNicUpdatesTaskDetails.
        :param nic_id: The nic_id of this VmNicUpdatesTaskDetails.
        :param vm_id: The vm_id of this VmNicUpdatesTaskDetails.
        :param instance_type: The instance_type of this VmNicUpdatesTaskDetails.
        """
        self.openapi_types = {
            'name': str,
            'nic_id': str,
            'vm_id': str,
            'instance_type': str
        }

        self.attribute_map = {
            'name': 'name',
            'nic_id': 'nicId',
            'vm_id': 'vmId',
            'instance_type': 'instanceType'
        }

        self._name = name
        self._nic_id = nic_id
        self._vm_id = vm_id
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmNicUpdatesTaskDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmNicUpdatesTaskDetails of this VmNicUpdatesTaskDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this VmNicUpdatesTaskDetails.

        Name of the Nic.

        :return: The name of this VmNicUpdatesTaskDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VmNicUpdatesTaskDetails.

        Name of the Nic.

        :param name: The name of this VmNicUpdatesTaskDetails.
        :type name: str
        """

        self._name = name

    @property
    def nic_id(self):
        """Gets the nic_id of this VmNicUpdatesTaskDetails.

        Nic Id.

        :return: The nic_id of this VmNicUpdatesTaskDetails.
        :rtype: str
        """
        return self._nic_id

    @nic_id.setter
    def nic_id(self, nic_id):
        """Sets the nic_id of this VmNicUpdatesTaskDetails.

        Nic Id.

        :param nic_id: The nic_id of this VmNicUpdatesTaskDetails.
        :type nic_id: str
        """

        self._nic_id = nic_id

    @property
    def vm_id(self):
        """Gets the vm_id of this VmNicUpdatesTaskDetails.

        Virtual machine Id.

        :return: The vm_id of this VmNicUpdatesTaskDetails.
        :rtype: str
        """
        return self._vm_id

    @vm_id.setter
    def vm_id(self, vm_id):
        """Sets the vm_id of this VmNicUpdatesTaskDetails.

        Virtual machine Id.

        :param vm_id: The vm_id of this VmNicUpdatesTaskDetails.
        :type vm_id: str
        """

        self._vm_id = vm_id

    @property
    def instance_type(self):
        """Gets the instance_type of this VmNicUpdatesTaskDetails.

        The type of task details.

        :return: The instance_type of this VmNicUpdatesTaskDetails.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this VmNicUpdatesTaskDetails.

        The type of task details.

        :param instance_type: The instance_type of this VmNicUpdatesTaskDetails.
        :type instance_type: str
        """

        self._instance_type = instance_type
