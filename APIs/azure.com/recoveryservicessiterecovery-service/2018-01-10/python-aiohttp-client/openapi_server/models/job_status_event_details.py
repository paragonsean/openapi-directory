# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_specific_details import EventSpecificDetails
from openapi_server import util


class JobStatusEventDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, affected_object_type: str=None, job_friendly_name: str=None, job_id: str=None, job_status: str=None, instance_type: str=None):
        """JobStatusEventDetails - a model defined in OpenAPI

        :param affected_object_type: The affected_object_type of this JobStatusEventDetails.
        :param job_friendly_name: The job_friendly_name of this JobStatusEventDetails.
        :param job_id: The job_id of this JobStatusEventDetails.
        :param job_status: The job_status of this JobStatusEventDetails.
        :param instance_type: The instance_type of this JobStatusEventDetails.
        """
        self.openapi_types = {
            'affected_object_type': str,
            'job_friendly_name': str,
            'job_id': str,
            'job_status': str,
            'instance_type': str
        }

        self.attribute_map = {
            'affected_object_type': 'affectedObjectType',
            'job_friendly_name': 'jobFriendlyName',
            'job_id': 'jobId',
            'job_status': 'jobStatus',
            'instance_type': 'instanceType'
        }

        self._affected_object_type = affected_object_type
        self._job_friendly_name = job_friendly_name
        self._job_id = job_id
        self._job_status = job_status
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobStatusEventDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobStatusEventDetails of this JobStatusEventDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def affected_object_type(self):
        """Gets the affected_object_type of this JobStatusEventDetails.

        AffectedObjectType for the event.

        :return: The affected_object_type of this JobStatusEventDetails.
        :rtype: str
        """
        return self._affected_object_type

    @affected_object_type.setter
    def affected_object_type(self, affected_object_type):
        """Sets the affected_object_type of this JobStatusEventDetails.

        AffectedObjectType for the event.

        :param affected_object_type: The affected_object_type of this JobStatusEventDetails.
        :type affected_object_type: str
        """

        self._affected_object_type = affected_object_type

    @property
    def job_friendly_name(self):
        """Gets the job_friendly_name of this JobStatusEventDetails.

        JobName for the Event.

        :return: The job_friendly_name of this JobStatusEventDetails.
        :rtype: str
        """
        return self._job_friendly_name

    @job_friendly_name.setter
    def job_friendly_name(self, job_friendly_name):
        """Sets the job_friendly_name of this JobStatusEventDetails.

        JobName for the Event.

        :param job_friendly_name: The job_friendly_name of this JobStatusEventDetails.
        :type job_friendly_name: str
        """

        self._job_friendly_name = job_friendly_name

    @property
    def job_id(self):
        """Gets the job_id of this JobStatusEventDetails.

        Job arm id for the event.

        :return: The job_id of this JobStatusEventDetails.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this JobStatusEventDetails.

        Job arm id for the event.

        :param job_id: The job_id of this JobStatusEventDetails.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def job_status(self):
        """Gets the job_status of this JobStatusEventDetails.

        JobStatus for the Event.

        :return: The job_status of this JobStatusEventDetails.
        :rtype: str
        """
        return self._job_status

    @job_status.setter
    def job_status(self, job_status):
        """Sets the job_status of this JobStatusEventDetails.

        JobStatus for the Event.

        :param job_status: The job_status of this JobStatusEventDetails.
        :type job_status: str
        """

        self._job_status = job_status

    @property
    def instance_type(self):
        """Gets the instance_type of this JobStatusEventDetails.

        Gets the class type. Overridden in derived classes.

        :return: The instance_type of this JobStatusEventDetails.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this JobStatusEventDetails.

        Gets the class type. Overridden in derived classes.

        :param instance_type: The instance_type of this JobStatusEventDetails.
        :type instance_type: str
        """

        self._instance_type = instance_type
