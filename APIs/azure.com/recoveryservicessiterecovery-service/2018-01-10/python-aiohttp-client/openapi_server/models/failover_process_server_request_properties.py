# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FailoverProcessServerRequestProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_name: str=None, source_process_server_id: str=None, target_process_server_id: str=None, update_type: str=None, vms_to_migrate: List[str]=None):
        """FailoverProcessServerRequestProperties - a model defined in OpenAPI

        :param container_name: The container_name of this FailoverProcessServerRequestProperties.
        :param source_process_server_id: The source_process_server_id of this FailoverProcessServerRequestProperties.
        :param target_process_server_id: The target_process_server_id of this FailoverProcessServerRequestProperties.
        :param update_type: The update_type of this FailoverProcessServerRequestProperties.
        :param vms_to_migrate: The vms_to_migrate of this FailoverProcessServerRequestProperties.
        """
        self.openapi_types = {
            'container_name': str,
            'source_process_server_id': str,
            'target_process_server_id': str,
            'update_type': str,
            'vms_to_migrate': List[str]
        }

        self.attribute_map = {
            'container_name': 'containerName',
            'source_process_server_id': 'sourceProcessServerId',
            'target_process_server_id': 'targetProcessServerId',
            'update_type': 'updateType',
            'vms_to_migrate': 'vmsToMigrate'
        }

        self._container_name = container_name
        self._source_process_server_id = source_process_server_id
        self._target_process_server_id = target_process_server_id
        self._update_type = update_type
        self._vms_to_migrate = vms_to_migrate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailoverProcessServerRequestProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailoverProcessServerRequestProperties of this FailoverProcessServerRequestProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_name(self):
        """Gets the container_name of this FailoverProcessServerRequestProperties.

        The container identifier.

        :return: The container_name of this FailoverProcessServerRequestProperties.
        :rtype: str
        """
        return self._container_name

    @container_name.setter
    def container_name(self, container_name):
        """Sets the container_name of this FailoverProcessServerRequestProperties.

        The container identifier.

        :param container_name: The container_name of this FailoverProcessServerRequestProperties.
        :type container_name: str
        """

        self._container_name = container_name

    @property
    def source_process_server_id(self):
        """Gets the source_process_server_id of this FailoverProcessServerRequestProperties.

        The source process server.

        :return: The source_process_server_id of this FailoverProcessServerRequestProperties.
        :rtype: str
        """
        return self._source_process_server_id

    @source_process_server_id.setter
    def source_process_server_id(self, source_process_server_id):
        """Sets the source_process_server_id of this FailoverProcessServerRequestProperties.

        The source process server.

        :param source_process_server_id: The source_process_server_id of this FailoverProcessServerRequestProperties.
        :type source_process_server_id: str
        """

        self._source_process_server_id = source_process_server_id

    @property
    def target_process_server_id(self):
        """Gets the target_process_server_id of this FailoverProcessServerRequestProperties.

        The new process server.

        :return: The target_process_server_id of this FailoverProcessServerRequestProperties.
        :rtype: str
        """
        return self._target_process_server_id

    @target_process_server_id.setter
    def target_process_server_id(self, target_process_server_id):
        """Sets the target_process_server_id of this FailoverProcessServerRequestProperties.

        The new process server.

        :param target_process_server_id: The target_process_server_id of this FailoverProcessServerRequestProperties.
        :type target_process_server_id: str
        """

        self._target_process_server_id = target_process_server_id

    @property
    def update_type(self):
        """Gets the update_type of this FailoverProcessServerRequestProperties.

        A value for failover type. It can be systemlevel/serverlevel

        :return: The update_type of this FailoverProcessServerRequestProperties.
        :rtype: str
        """
        return self._update_type

    @update_type.setter
    def update_type(self, update_type):
        """Sets the update_type of this FailoverProcessServerRequestProperties.

        A value for failover type. It can be systemlevel/serverlevel

        :param update_type: The update_type of this FailoverProcessServerRequestProperties.
        :type update_type: str
        """

        self._update_type = update_type

    @property
    def vms_to_migrate(self):
        """Gets the vms_to_migrate of this FailoverProcessServerRequestProperties.

        The VMS to migrate.

        :return: The vms_to_migrate of this FailoverProcessServerRequestProperties.
        :rtype: List[str]
        """
        return self._vms_to_migrate

    @vms_to_migrate.setter
    def vms_to_migrate(self, vms_to_migrate):
        """Sets the vms_to_migrate of this FailoverProcessServerRequestProperties.

        The VMS to migrate.

        :param vms_to_migrate: The vms_to_migrate of this FailoverProcessServerRequestProperties.
        :type vms_to_migrate: List[str]
        """

        self._vms_to_migrate = vms_to_migrate
