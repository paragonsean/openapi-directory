/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInMageAzureV2ReplicationDetails.h
 *
 * InMageAzureV2 provider specific settings
 */

#ifndef OAIInMageAzureV2ReplicationDetails_H
#define OAIInMageAzureV2ReplicationDetails_H

#include <QJsonObject>

#include "OAIAzureVmDiskDetails.h"
#include "OAIHealthError.h"
#include "OAIInMageAzureV2ProtectedDiskDetails.h"
#include "OAIReplicationProviderSpecificSettings.h"
#include "OAIVMNicDetails.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAzureVmDiskDetails;
class OAIInMageAzureV2ProtectedDiskDetails;
class OAIHealthError;
class OAIVMNicDetails;

class OAIInMageAzureV2ReplicationDetails : public OAIObject {
public:
    OAIInMageAzureV2ReplicationDetails();
    OAIInMageAzureV2ReplicationDetails(QString json);
    ~OAIInMageAzureV2ReplicationDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAgentExpiryDate() const;
    void setAgentExpiryDate(const QDateTime &agent_expiry_date);
    bool is_agent_expiry_date_Set() const;
    bool is_agent_expiry_date_Valid() const;

    QString getAgentVersion() const;
    void setAgentVersion(const QString &agent_version);
    bool is_agent_version_Set() const;
    bool is_agent_version_Valid() const;

    QList<OAIAzureVmDiskDetails> getAzureVmDiskDetails() const;
    void setAzureVmDiskDetails(const QList<OAIAzureVmDiskDetails> &azure_vm_disk_details);
    bool is_azure_vm_disk_details_Set() const;
    bool is_azure_vm_disk_details_Valid() const;

    double getCompressedDataRateInMb() const;
    void setCompressedDataRateInMb(const double &compressed_data_rate_in_mb);
    bool is_compressed_data_rate_in_mb_Set() const;
    bool is_compressed_data_rate_in_mb_Valid() const;

    QList<QString> getDatastores() const;
    void setDatastores(const QList<QString> &datastores);
    bool is_datastores_Set() const;
    bool is_datastores_Valid() const;

    QString getDiscoveryType() const;
    void setDiscoveryType(const QString &discovery_type);
    bool is_discovery_type_Set() const;
    bool is_discovery_type_Valid() const;

    QString getDiskResized() const;
    void setDiskResized(const QString &disk_resized);
    bool is_disk_resized_Set() const;
    bool is_disk_resized_Valid() const;

    QString getEnableRdpOnTargetOption() const;
    void setEnableRdpOnTargetOption(const QString &enable_rdp_on_target_option);
    bool is_enable_rdp_on_target_option_Set() const;
    bool is_enable_rdp_on_target_option_Valid() const;

    QString getInfrastructureVmId() const;
    void setInfrastructureVmId(const QString &infrastructure_vm_id);
    bool is_infrastructure_vm_id_Set() const;
    bool is_infrastructure_vm_id_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    QString getIsAgentUpdateRequired() const;
    void setIsAgentUpdateRequired(const QString &is_agent_update_required);
    bool is_is_agent_update_required_Set() const;
    bool is_is_agent_update_required_Valid() const;

    QString getIsRebootAfterUpdateRequired() const;
    void setIsRebootAfterUpdateRequired(const QString &is_reboot_after_update_required);
    bool is_is_reboot_after_update_required_Set() const;
    bool is_is_reboot_after_update_required_Valid() const;

    QDateTime getLastHeartbeat() const;
    void setLastHeartbeat(const QDateTime &last_heartbeat);
    bool is_last_heartbeat_Set() const;
    bool is_last_heartbeat_Valid() const;

    QDateTime getLastRpoCalculatedTime() const;
    void setLastRpoCalculatedTime(const QDateTime &last_rpo_calculated_time);
    bool is_last_rpo_calculated_time_Set() const;
    bool is_last_rpo_calculated_time_Valid() const;

    QDateTime getLastUpdateReceivedTime() const;
    void setLastUpdateReceivedTime(const QDateTime &last_update_received_time);
    bool is_last_update_received_time_Set() const;
    bool is_last_update_received_time_Valid() const;

    QString getLicenseType() const;
    void setLicenseType(const QString &license_type);
    bool is_license_type_Set() const;
    bool is_license_type_Valid() const;

    QString getMasterTargetId() const;
    void setMasterTargetId(const QString &master_target_id);
    bool is_master_target_id_Set() const;
    bool is_master_target_id_Valid() const;

    QString getMultiVmGroupId() const;
    void setMultiVmGroupId(const QString &multi_vm_group_id);
    bool is_multi_vm_group_id_Set() const;
    bool is_multi_vm_group_id_Valid() const;

    QString getMultiVmGroupName() const;
    void setMultiVmGroupName(const QString &multi_vm_group_name);
    bool is_multi_vm_group_name_Set() const;
    bool is_multi_vm_group_name_Valid() const;

    QString getMultiVmSyncStatus() const;
    void setMultiVmSyncStatus(const QString &multi_vm_sync_status);
    bool is_multi_vm_sync_status_Set() const;
    bool is_multi_vm_sync_status_Valid() const;

    QString getOsDiskId() const;
    void setOsDiskId(const QString &os_disk_id);
    bool is_os_disk_id_Set() const;
    bool is_os_disk_id_Valid() const;

    QString getOsType() const;
    void setOsType(const QString &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    QString getOsVersion() const;
    void setOsVersion(const QString &os_version);
    bool is_os_version_Set() const;
    bool is_os_version_Valid() const;

    QString getProcessServerId() const;
    void setProcessServerId(const QString &process_server_id);
    bool is_process_server_id_Set() const;
    bool is_process_server_id_Valid() const;

    QList<OAIInMageAzureV2ProtectedDiskDetails> getProtectedDisks() const;
    void setProtectedDisks(const QList<OAIInMageAzureV2ProtectedDiskDetails> &protected_disks);
    bool is_protected_disks_Set() const;
    bool is_protected_disks_Valid() const;

    QString getProtectionStage() const;
    void setProtectionStage(const QString &protection_stage);
    bool is_protection_stage_Set() const;
    bool is_protection_stage_Valid() const;

    QString getRecoveryAvailabilitySetId() const;
    void setRecoveryAvailabilitySetId(const QString &recovery_availability_set_id);
    bool is_recovery_availability_set_id_Set() const;
    bool is_recovery_availability_set_id_Valid() const;

    QString getRecoveryAzureLogStorageAccountId() const;
    void setRecoveryAzureLogStorageAccountId(const QString &recovery_azure_log_storage_account_id);
    bool is_recovery_azure_log_storage_account_id_Set() const;
    bool is_recovery_azure_log_storage_account_id_Valid() const;

    QString getRecoveryAzureResourceGroupId() const;
    void setRecoveryAzureResourceGroupId(const QString &recovery_azure_resource_group_id);
    bool is_recovery_azure_resource_group_id_Set() const;
    bool is_recovery_azure_resource_group_id_Valid() const;

    QString getRecoveryAzureStorageAccount() const;
    void setRecoveryAzureStorageAccount(const QString &recovery_azure_storage_account);
    bool is_recovery_azure_storage_account_Set() const;
    bool is_recovery_azure_storage_account_Valid() const;

    QString getRecoveryAzureVmName() const;
    void setRecoveryAzureVmName(const QString &recovery_azure_vm_name);
    bool is_recovery_azure_vm_name_Set() const;
    bool is_recovery_azure_vm_name_Valid() const;

    QString getRecoveryAzureVmSize() const;
    void setRecoveryAzureVmSize(const QString &recovery_azure_vm_size);
    bool is_recovery_azure_vm_size_Set() const;
    bool is_recovery_azure_vm_size_Valid() const;

    QString getReplicaId() const;
    void setReplicaId(const QString &replica_id);
    bool is_replica_id_Set() const;
    bool is_replica_id_Valid() const;

    qint32 getResyncProgressPercentage() const;
    void setResyncProgressPercentage(const qint32 &resync_progress_percentage);
    bool is_resync_progress_percentage_Set() const;
    bool is_resync_progress_percentage_Valid() const;

    qint64 getRpoInSeconds() const;
    void setRpoInSeconds(const qint64 &rpo_in_seconds);
    bool is_rpo_in_seconds_Set() const;
    bool is_rpo_in_seconds_Valid() const;

    QString getSelectedRecoveryAzureNetworkId() const;
    void setSelectedRecoveryAzureNetworkId(const QString &selected_recovery_azure_network_id);
    bool is_selected_recovery_azure_network_id_Set() const;
    bool is_selected_recovery_azure_network_id_Valid() const;

    QString getSelectedSourceNicId() const;
    void setSelectedSourceNicId(const QString &selected_source_nic_id);
    bool is_selected_source_nic_id_Set() const;
    bool is_selected_source_nic_id_Valid() const;

    qint32 getSourceVmCpuCount() const;
    void setSourceVmCpuCount(const qint32 &source_vm_cpu_count);
    bool is_source_vm_cpu_count_Set() const;
    bool is_source_vm_cpu_count_Valid() const;

    qint32 getSourceVmRamSizeInMb() const;
    void setSourceVmRamSizeInMb(const qint32 &source_vm_ram_size_in_mb);
    bool is_source_vm_ram_size_in_mb_Set() const;
    bool is_source_vm_ram_size_in_mb_Valid() const;

    QString getTargetVmId() const;
    void setTargetVmId(const QString &target_vm_id);
    bool is_target_vm_id_Set() const;
    bool is_target_vm_id_Valid() const;

    double getUncompressedDataRateInMb() const;
    void setUncompressedDataRateInMb(const double &uncompressed_data_rate_in_mb);
    bool is_uncompressed_data_rate_in_mb_Set() const;
    bool is_uncompressed_data_rate_in_mb_Valid() const;

    QString getUseManagedDisks() const;
    void setUseManagedDisks(const QString &use_managed_disks);
    bool is_use_managed_disks_Set() const;
    bool is_use_managed_disks_Valid() const;

    QString getVCenterInfrastructureId() const;
    void setVCenterInfrastructureId(const QString &v_center_infrastructure_id);
    bool is_v_center_infrastructure_id_Set() const;
    bool is_v_center_infrastructure_id_Valid() const;

    QList<OAIHealthError> getValidationErrors() const;
    void setValidationErrors(const QList<OAIHealthError> &validation_errors);
    bool is_validation_errors_Set() const;
    bool is_validation_errors_Valid() const;

    QString getVhdName() const;
    void setVhdName(const QString &vhd_name);
    bool is_vhd_name_Set() const;
    bool is_vhd_name_Valid() const;

    QString getVmId() const;
    void setVmId(const QString &vm_id);
    bool is_vm_id_Set() const;
    bool is_vm_id_Valid() const;

    QList<OAIVMNicDetails> getVmNics() const;
    void setVmNics(const QList<OAIVMNicDetails> &vm_nics);
    bool is_vm_nics_Set() const;
    bool is_vm_nics_Valid() const;

    QString getVmProtectionState() const;
    void setVmProtectionState(const QString &vm_protection_state);
    bool is_vm_protection_state_Set() const;
    bool is_vm_protection_state_Valid() const;

    QString getVmProtectionStateDescription() const;
    void setVmProtectionStateDescription(const QString &vm_protection_state_description);
    bool is_vm_protection_state_description_Set() const;
    bool is_vm_protection_state_description_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_agent_expiry_date;
    bool m_agent_expiry_date_isSet;
    bool m_agent_expiry_date_isValid;

    QString m_agent_version;
    bool m_agent_version_isSet;
    bool m_agent_version_isValid;

    QList<OAIAzureVmDiskDetails> m_azure_vm_disk_details;
    bool m_azure_vm_disk_details_isSet;
    bool m_azure_vm_disk_details_isValid;

    double m_compressed_data_rate_in_mb;
    bool m_compressed_data_rate_in_mb_isSet;
    bool m_compressed_data_rate_in_mb_isValid;

    QList<QString> m_datastores;
    bool m_datastores_isSet;
    bool m_datastores_isValid;

    QString m_discovery_type;
    bool m_discovery_type_isSet;
    bool m_discovery_type_isValid;

    QString m_disk_resized;
    bool m_disk_resized_isSet;
    bool m_disk_resized_isValid;

    QString m_enable_rdp_on_target_option;
    bool m_enable_rdp_on_target_option_isSet;
    bool m_enable_rdp_on_target_option_isValid;

    QString m_infrastructure_vm_id;
    bool m_infrastructure_vm_id_isSet;
    bool m_infrastructure_vm_id_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    QString m_is_agent_update_required;
    bool m_is_agent_update_required_isSet;
    bool m_is_agent_update_required_isValid;

    QString m_is_reboot_after_update_required;
    bool m_is_reboot_after_update_required_isSet;
    bool m_is_reboot_after_update_required_isValid;

    QDateTime m_last_heartbeat;
    bool m_last_heartbeat_isSet;
    bool m_last_heartbeat_isValid;

    QDateTime m_last_rpo_calculated_time;
    bool m_last_rpo_calculated_time_isSet;
    bool m_last_rpo_calculated_time_isValid;

    QDateTime m_last_update_received_time;
    bool m_last_update_received_time_isSet;
    bool m_last_update_received_time_isValid;

    QString m_license_type;
    bool m_license_type_isSet;
    bool m_license_type_isValid;

    QString m_master_target_id;
    bool m_master_target_id_isSet;
    bool m_master_target_id_isValid;

    QString m_multi_vm_group_id;
    bool m_multi_vm_group_id_isSet;
    bool m_multi_vm_group_id_isValid;

    QString m_multi_vm_group_name;
    bool m_multi_vm_group_name_isSet;
    bool m_multi_vm_group_name_isValid;

    QString m_multi_vm_sync_status;
    bool m_multi_vm_sync_status_isSet;
    bool m_multi_vm_sync_status_isValid;

    QString m_os_disk_id;
    bool m_os_disk_id_isSet;
    bool m_os_disk_id_isValid;

    QString m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;

    QString m_os_version;
    bool m_os_version_isSet;
    bool m_os_version_isValid;

    QString m_process_server_id;
    bool m_process_server_id_isSet;
    bool m_process_server_id_isValid;

    QList<OAIInMageAzureV2ProtectedDiskDetails> m_protected_disks;
    bool m_protected_disks_isSet;
    bool m_protected_disks_isValid;

    QString m_protection_stage;
    bool m_protection_stage_isSet;
    bool m_protection_stage_isValid;

    QString m_recovery_availability_set_id;
    bool m_recovery_availability_set_id_isSet;
    bool m_recovery_availability_set_id_isValid;

    QString m_recovery_azure_log_storage_account_id;
    bool m_recovery_azure_log_storage_account_id_isSet;
    bool m_recovery_azure_log_storage_account_id_isValid;

    QString m_recovery_azure_resource_group_id;
    bool m_recovery_azure_resource_group_id_isSet;
    bool m_recovery_azure_resource_group_id_isValid;

    QString m_recovery_azure_storage_account;
    bool m_recovery_azure_storage_account_isSet;
    bool m_recovery_azure_storage_account_isValid;

    QString m_recovery_azure_vm_name;
    bool m_recovery_azure_vm_name_isSet;
    bool m_recovery_azure_vm_name_isValid;

    QString m_recovery_azure_vm_size;
    bool m_recovery_azure_vm_size_isSet;
    bool m_recovery_azure_vm_size_isValid;

    QString m_replica_id;
    bool m_replica_id_isSet;
    bool m_replica_id_isValid;

    qint32 m_resync_progress_percentage;
    bool m_resync_progress_percentage_isSet;
    bool m_resync_progress_percentage_isValid;

    qint64 m_rpo_in_seconds;
    bool m_rpo_in_seconds_isSet;
    bool m_rpo_in_seconds_isValid;

    QString m_selected_recovery_azure_network_id;
    bool m_selected_recovery_azure_network_id_isSet;
    bool m_selected_recovery_azure_network_id_isValid;

    QString m_selected_source_nic_id;
    bool m_selected_source_nic_id_isSet;
    bool m_selected_source_nic_id_isValid;

    qint32 m_source_vm_cpu_count;
    bool m_source_vm_cpu_count_isSet;
    bool m_source_vm_cpu_count_isValid;

    qint32 m_source_vm_ram_size_in_mb;
    bool m_source_vm_ram_size_in_mb_isSet;
    bool m_source_vm_ram_size_in_mb_isValid;

    QString m_target_vm_id;
    bool m_target_vm_id_isSet;
    bool m_target_vm_id_isValid;

    double m_uncompressed_data_rate_in_mb;
    bool m_uncompressed_data_rate_in_mb_isSet;
    bool m_uncompressed_data_rate_in_mb_isValid;

    QString m_use_managed_disks;
    bool m_use_managed_disks_isSet;
    bool m_use_managed_disks_isValid;

    QString m_v_center_infrastructure_id;
    bool m_v_center_infrastructure_id_isSet;
    bool m_v_center_infrastructure_id_isValid;

    QList<OAIHealthError> m_validation_errors;
    bool m_validation_errors_isSet;
    bool m_validation_errors_isValid;

    QString m_vhd_name;
    bool m_vhd_name_isSet;
    bool m_vhd_name_isValid;

    QString m_vm_id;
    bool m_vm_id_isSet;
    bool m_vm_id_isValid;

    QList<OAIVMNicDetails> m_vm_nics;
    bool m_vm_nics_isSet;
    bool m_vm_nics_isValid;

    QString m_vm_protection_state;
    bool m_vm_protection_state_isSet;
    bool m_vm_protection_state_isValid;

    QString m_vm_protection_state_description;
    bool m_vm_protection_state_description_isSet;
    bool m_vm_protection_state_description_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInMageAzureV2ReplicationDetails)

#endif // OAIInMageAzureV2ReplicationDetails_H
