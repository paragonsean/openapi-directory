/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInMageVolumeExclusionOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInMageVolumeExclusionOptions::OAIInMageVolumeExclusionOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInMageVolumeExclusionOptions::OAIInMageVolumeExclusionOptions() {
    this->initializeModel();
}

OAIInMageVolumeExclusionOptions::~OAIInMageVolumeExclusionOptions() {}

void OAIInMageVolumeExclusionOptions::initializeModel() {

    m_only_exclude_if_single_volume_isSet = false;
    m_only_exclude_if_single_volume_isValid = false;

    m_volume_label_isSet = false;
    m_volume_label_isValid = false;
}

void OAIInMageVolumeExclusionOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInMageVolumeExclusionOptions::fromJsonObject(QJsonObject json) {

    m_only_exclude_if_single_volume_isValid = ::OpenAPI::fromJsonValue(m_only_exclude_if_single_volume, json[QString("onlyExcludeIfSingleVolume")]);
    m_only_exclude_if_single_volume_isSet = !json[QString("onlyExcludeIfSingleVolume")].isNull() && m_only_exclude_if_single_volume_isValid;

    m_volume_label_isValid = ::OpenAPI::fromJsonValue(m_volume_label, json[QString("volumeLabel")]);
    m_volume_label_isSet = !json[QString("volumeLabel")].isNull() && m_volume_label_isValid;
}

QString OAIInMageVolumeExclusionOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInMageVolumeExclusionOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_only_exclude_if_single_volume_isSet) {
        obj.insert(QString("onlyExcludeIfSingleVolume"), ::OpenAPI::toJsonValue(m_only_exclude_if_single_volume));
    }
    if (m_volume_label_isSet) {
        obj.insert(QString("volumeLabel"), ::OpenAPI::toJsonValue(m_volume_label));
    }
    return obj;
}

QString OAIInMageVolumeExclusionOptions::getOnlyExcludeIfSingleVolume() const {
    return m_only_exclude_if_single_volume;
}
void OAIInMageVolumeExclusionOptions::setOnlyExcludeIfSingleVolume(const QString &only_exclude_if_single_volume) {
    m_only_exclude_if_single_volume = only_exclude_if_single_volume;
    m_only_exclude_if_single_volume_isSet = true;
}

bool OAIInMageVolumeExclusionOptions::is_only_exclude_if_single_volume_Set() const{
    return m_only_exclude_if_single_volume_isSet;
}

bool OAIInMageVolumeExclusionOptions::is_only_exclude_if_single_volume_Valid() const{
    return m_only_exclude_if_single_volume_isValid;
}

QString OAIInMageVolumeExclusionOptions::getVolumeLabel() const {
    return m_volume_label;
}
void OAIInMageVolumeExclusionOptions::setVolumeLabel(const QString &volume_label) {
    m_volume_label = volume_label;
    m_volume_label_isSet = true;
}

bool OAIInMageVolumeExclusionOptions::is_volume_label_Set() const{
    return m_volume_label_isSet;
}

bool OAIInMageVolumeExclusionOptions::is_volume_label_Valid() const{
    return m_volume_label_isValid;
}

bool OAIInMageVolumeExclusionOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_only_exclude_if_single_volume_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_volume_label_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInMageVolumeExclusionOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
