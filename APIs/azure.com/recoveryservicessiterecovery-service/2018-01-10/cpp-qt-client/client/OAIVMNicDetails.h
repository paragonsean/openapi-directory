/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVMNicDetails.h
 *
 * Hyper V VM network details.
 */

#ifndef OAIVMNicDetails_H
#define OAIVMNicDetails_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVMNicDetails : public OAIObject {
public:
    OAIVMNicDetails();
    OAIVMNicDetails(QString json);
    ~OAIVMNicDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnableAcceleratedNetworkingOnRecovery() const;
    void setEnableAcceleratedNetworkingOnRecovery(const bool &enable_accelerated_networking_on_recovery);
    bool is_enable_accelerated_networking_on_recovery_Set() const;
    bool is_enable_accelerated_networking_on_recovery_Valid() const;

    QString getIpAddressType() const;
    void setIpAddressType(const QString &ip_address_type);
    bool is_ip_address_type_Set() const;
    bool is_ip_address_type_Valid() const;

    QString getNicId() const;
    void setNicId(const QString &nic_id);
    bool is_nic_id_Set() const;
    bool is_nic_id_Valid() const;

    QString getPrimaryNicStaticIpAddress() const;
    void setPrimaryNicStaticIpAddress(const QString &primary_nic_static_ip_address);
    bool is_primary_nic_static_ip_address_Set() const;
    bool is_primary_nic_static_ip_address_Valid() const;

    QString getRecoveryNicIpAddressType() const;
    void setRecoveryNicIpAddressType(const QString &recovery_nic_ip_address_type);
    bool is_recovery_nic_ip_address_type_Set() const;
    bool is_recovery_nic_ip_address_type_Valid() const;

    QString getRecoveryVmNetworkId() const;
    void setRecoveryVmNetworkId(const QString &recovery_vm_network_id);
    bool is_recovery_vm_network_id_Set() const;
    bool is_recovery_vm_network_id_Valid() const;

    QString getRecoveryVmSubnetName() const;
    void setRecoveryVmSubnetName(const QString &recovery_vm_subnet_name);
    bool is_recovery_vm_subnet_name_Set() const;
    bool is_recovery_vm_subnet_name_Valid() const;

    QString getReplicaNicId() const;
    void setReplicaNicId(const QString &replica_nic_id);
    bool is_replica_nic_id_Set() const;
    bool is_replica_nic_id_Valid() const;

    QString getReplicaNicStaticIpAddress() const;
    void setReplicaNicStaticIpAddress(const QString &replica_nic_static_ip_address);
    bool is_replica_nic_static_ip_address_Set() const;
    bool is_replica_nic_static_ip_address_Valid() const;

    QString getSelectionType() const;
    void setSelectionType(const QString &selection_type);
    bool is_selection_type_Set() const;
    bool is_selection_type_Valid() const;

    QString getSourceNicArmId() const;
    void setSourceNicArmId(const QString &source_nic_arm_id);
    bool is_source_nic_arm_id_Set() const;
    bool is_source_nic_arm_id_Valid() const;

    QString getVMNetworkName() const;
    void setVMNetworkName(const QString &v_m_network_name);
    bool is_v_m_network_name_Set() const;
    bool is_v_m_network_name_Valid() const;

    QString getVMSubnetName() const;
    void setVMSubnetName(const QString &v_m_subnet_name);
    bool is_v_m_subnet_name_Set() const;
    bool is_v_m_subnet_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enable_accelerated_networking_on_recovery;
    bool m_enable_accelerated_networking_on_recovery_isSet;
    bool m_enable_accelerated_networking_on_recovery_isValid;

    QString m_ip_address_type;
    bool m_ip_address_type_isSet;
    bool m_ip_address_type_isValid;

    QString m_nic_id;
    bool m_nic_id_isSet;
    bool m_nic_id_isValid;

    QString m_primary_nic_static_ip_address;
    bool m_primary_nic_static_ip_address_isSet;
    bool m_primary_nic_static_ip_address_isValid;

    QString m_recovery_nic_ip_address_type;
    bool m_recovery_nic_ip_address_type_isSet;
    bool m_recovery_nic_ip_address_type_isValid;

    QString m_recovery_vm_network_id;
    bool m_recovery_vm_network_id_isSet;
    bool m_recovery_vm_network_id_isValid;

    QString m_recovery_vm_subnet_name;
    bool m_recovery_vm_subnet_name_isSet;
    bool m_recovery_vm_subnet_name_isValid;

    QString m_replica_nic_id;
    bool m_replica_nic_id_isSet;
    bool m_replica_nic_id_isValid;

    QString m_replica_nic_static_ip_address;
    bool m_replica_nic_static_ip_address_isSet;
    bool m_replica_nic_static_ip_address_isValid;

    QString m_selection_type;
    bool m_selection_type_isSet;
    bool m_selection_type_isValid;

    QString m_source_nic_arm_id;
    bool m_source_nic_arm_id_isSet;
    bool m_source_nic_arm_id_isValid;

    QString m_v_m_network_name;
    bool m_v_m_network_name_isSet;
    bool m_v_m_network_name_isValid;

    QString m_v_m_subnet_name;
    bool m_v_m_subnet_name_isSet;
    bool m_v_m_subnet_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVMNicDetails)

#endif // OAIVMNicDetails_H
