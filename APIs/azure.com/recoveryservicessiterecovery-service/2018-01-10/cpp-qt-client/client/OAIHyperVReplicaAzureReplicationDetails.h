/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHyperVReplicaAzureReplicationDetails.h
 *
 * Hyper V Replica Azure provider specific settings.
 */

#ifndef OAIHyperVReplicaAzureReplicationDetails_H
#define OAIHyperVReplicaAzureReplicationDetails_H

#include <QJsonObject>

#include "OAIAzureVmDiskDetails.h"
#include "OAIInitialReplicationDetails.h"
#include "OAIOSDetails.h"
#include "OAIReplicationProviderSpecificSettings.h"
#include "OAIVMNicDetails.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAzureVmDiskDetails;
class OAIInitialReplicationDetails;
class OAIOSDetails;
class OAIVMNicDetails;

class OAIHyperVReplicaAzureReplicationDetails : public OAIObject {
public:
    OAIHyperVReplicaAzureReplicationDetails();
    OAIHyperVReplicaAzureReplicationDetails(QString json);
    ~OAIHyperVReplicaAzureReplicationDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAzureVmDiskDetails> getAzureVmDiskDetails() const;
    void setAzureVmDiskDetails(const QList<OAIAzureVmDiskDetails> &azure_vm_disk_details);
    bool is_azure_vm_disk_details_Set() const;
    bool is_azure_vm_disk_details_Valid() const;

    QString getEnableRdpOnTargetOption() const;
    void setEnableRdpOnTargetOption(const QString &enable_rdp_on_target_option);
    bool is_enable_rdp_on_target_option_Set() const;
    bool is_enable_rdp_on_target_option_Valid() const;

    QString getEncryption() const;
    void setEncryption(const QString &encryption);
    bool is_encryption_Set() const;
    bool is_encryption_Valid() const;

    OAIInitialReplicationDetails getInitialReplicationDetails() const;
    void setInitialReplicationDetails(const OAIInitialReplicationDetails &initial_replication_details);
    bool is_initial_replication_details_Set() const;
    bool is_initial_replication_details_Valid() const;

    QDateTime getLastReplicatedTime() const;
    void setLastReplicatedTime(const QDateTime &last_replicated_time);
    bool is_last_replicated_time_Set() const;
    bool is_last_replicated_time_Valid() const;

    QDateTime getLastRpoCalculatedTime() const;
    void setLastRpoCalculatedTime(const QDateTime &last_rpo_calculated_time);
    bool is_last_rpo_calculated_time_Set() const;
    bool is_last_rpo_calculated_time_Valid() const;

    QString getLicenseType() const;
    void setLicenseType(const QString &license_type);
    bool is_license_type_Set() const;
    bool is_license_type_Valid() const;

    OAIOSDetails getOSDetails() const;
    void setOSDetails(const OAIOSDetails &o_s_details);
    bool is_o_s_details_Set() const;
    bool is_o_s_details_Valid() const;

    QString getRecoveryAvailabilitySetId() const;
    void setRecoveryAvailabilitySetId(const QString &recovery_availability_set_id);
    bool is_recovery_availability_set_id_Set() const;
    bool is_recovery_availability_set_id_Valid() const;

    QString getRecoveryAzureLogStorageAccountId() const;
    void setRecoveryAzureLogStorageAccountId(const QString &recovery_azure_log_storage_account_id);
    bool is_recovery_azure_log_storage_account_id_Set() const;
    bool is_recovery_azure_log_storage_account_id_Valid() const;

    QString getRecoveryAzureResourceGroupId() const;
    void setRecoveryAzureResourceGroupId(const QString &recovery_azure_resource_group_id);
    bool is_recovery_azure_resource_group_id_Set() const;
    bool is_recovery_azure_resource_group_id_Valid() const;

    QString getRecoveryAzureStorageAccount() const;
    void setRecoveryAzureStorageAccount(const QString &recovery_azure_storage_account);
    bool is_recovery_azure_storage_account_Set() const;
    bool is_recovery_azure_storage_account_Valid() const;

    QString getRecoveryAzureVmSize() const;
    void setRecoveryAzureVmSize(const QString &recovery_azure_vm_size);
    bool is_recovery_azure_vm_size_Set() const;
    bool is_recovery_azure_vm_size_Valid() const;

    QString getRecoveryAzureVmName() const;
    void setRecoveryAzureVmName(const QString &recovery_azure_vm_name);
    bool is_recovery_azure_vm_name_Set() const;
    bool is_recovery_azure_vm_name_Valid() const;

    qint64 getRpoInSeconds() const;
    void setRpoInSeconds(const qint64 &rpo_in_seconds);
    bool is_rpo_in_seconds_Set() const;
    bool is_rpo_in_seconds_Valid() const;

    QString getSelectedRecoveryAzureNetworkId() const;
    void setSelectedRecoveryAzureNetworkId(const QString &selected_recovery_azure_network_id);
    bool is_selected_recovery_azure_network_id_Set() const;
    bool is_selected_recovery_azure_network_id_Valid() const;

    QString getSelectedSourceNicId() const;
    void setSelectedSourceNicId(const QString &selected_source_nic_id);
    bool is_selected_source_nic_id_Set() const;
    bool is_selected_source_nic_id_Valid() const;

    qint32 getSourceVmCpuCount() const;
    void setSourceVmCpuCount(const qint32 &source_vm_cpu_count);
    bool is_source_vm_cpu_count_Set() const;
    bool is_source_vm_cpu_count_Valid() const;

    qint32 getSourceVmRamSizeInMb() const;
    void setSourceVmRamSizeInMb(const qint32 &source_vm_ram_size_in_mb);
    bool is_source_vm_ram_size_in_mb_Set() const;
    bool is_source_vm_ram_size_in_mb_Valid() const;

    QString getUseManagedDisks() const;
    void setUseManagedDisks(const QString &use_managed_disks);
    bool is_use_managed_disks_Set() const;
    bool is_use_managed_disks_Valid() const;

    QString getVmId() const;
    void setVmId(const QString &vm_id);
    bool is_vm_id_Set() const;
    bool is_vm_id_Valid() const;

    QList<OAIVMNicDetails> getVmNics() const;
    void setVmNics(const QList<OAIVMNicDetails> &vm_nics);
    bool is_vm_nics_Set() const;
    bool is_vm_nics_Valid() const;

    QString getVmProtectionState() const;
    void setVmProtectionState(const QString &vm_protection_state);
    bool is_vm_protection_state_Set() const;
    bool is_vm_protection_state_Valid() const;

    QString getVmProtectionStateDescription() const;
    void setVmProtectionStateDescription(const QString &vm_protection_state_description);
    bool is_vm_protection_state_description_Set() const;
    bool is_vm_protection_state_description_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAzureVmDiskDetails> m_azure_vm_disk_details;
    bool m_azure_vm_disk_details_isSet;
    bool m_azure_vm_disk_details_isValid;

    QString m_enable_rdp_on_target_option;
    bool m_enable_rdp_on_target_option_isSet;
    bool m_enable_rdp_on_target_option_isValid;

    QString m_encryption;
    bool m_encryption_isSet;
    bool m_encryption_isValid;

    OAIInitialReplicationDetails m_initial_replication_details;
    bool m_initial_replication_details_isSet;
    bool m_initial_replication_details_isValid;

    QDateTime m_last_replicated_time;
    bool m_last_replicated_time_isSet;
    bool m_last_replicated_time_isValid;

    QDateTime m_last_rpo_calculated_time;
    bool m_last_rpo_calculated_time_isSet;
    bool m_last_rpo_calculated_time_isValid;

    QString m_license_type;
    bool m_license_type_isSet;
    bool m_license_type_isValid;

    OAIOSDetails m_o_s_details;
    bool m_o_s_details_isSet;
    bool m_o_s_details_isValid;

    QString m_recovery_availability_set_id;
    bool m_recovery_availability_set_id_isSet;
    bool m_recovery_availability_set_id_isValid;

    QString m_recovery_azure_log_storage_account_id;
    bool m_recovery_azure_log_storage_account_id_isSet;
    bool m_recovery_azure_log_storage_account_id_isValid;

    QString m_recovery_azure_resource_group_id;
    bool m_recovery_azure_resource_group_id_isSet;
    bool m_recovery_azure_resource_group_id_isValid;

    QString m_recovery_azure_storage_account;
    bool m_recovery_azure_storage_account_isSet;
    bool m_recovery_azure_storage_account_isValid;

    QString m_recovery_azure_vm_size;
    bool m_recovery_azure_vm_size_isSet;
    bool m_recovery_azure_vm_size_isValid;

    QString m_recovery_azure_vm_name;
    bool m_recovery_azure_vm_name_isSet;
    bool m_recovery_azure_vm_name_isValid;

    qint64 m_rpo_in_seconds;
    bool m_rpo_in_seconds_isSet;
    bool m_rpo_in_seconds_isValid;

    QString m_selected_recovery_azure_network_id;
    bool m_selected_recovery_azure_network_id_isSet;
    bool m_selected_recovery_azure_network_id_isValid;

    QString m_selected_source_nic_id;
    bool m_selected_source_nic_id_isSet;
    bool m_selected_source_nic_id_isValid;

    qint32 m_source_vm_cpu_count;
    bool m_source_vm_cpu_count_isSet;
    bool m_source_vm_cpu_count_isValid;

    qint32 m_source_vm_ram_size_in_mb;
    bool m_source_vm_ram_size_in_mb_isSet;
    bool m_source_vm_ram_size_in_mb_isValid;

    QString m_use_managed_disks;
    bool m_use_managed_disks_isSet;
    bool m_use_managed_disks_isValid;

    QString m_vm_id;
    bool m_vm_id_isSet;
    bool m_vm_id_isValid;

    QList<OAIVMNicDetails> m_vm_nics;
    bool m_vm_nics_isSet;
    bool m_vm_nics_isValid;

    QString m_vm_protection_state;
    bool m_vm_protection_state_isSet;
    bool m_vm_protection_state_isValid;

    QString m_vm_protection_state_description;
    bool m_vm_protection_state_description_isSet;
    bool m_vm_protection_state_description_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHyperVReplicaAzureReplicationDetails)

#endif // OAIHyperVReplicaAzureReplicationDetails_H
