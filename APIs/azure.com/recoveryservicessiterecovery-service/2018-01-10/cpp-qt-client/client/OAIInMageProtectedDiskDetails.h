/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInMageProtectedDiskDetails.h
 *
 * InMage protected disk details.
 */

#ifndef OAIInMageProtectedDiskDetails_H
#define OAIInMageProtectedDiskDetails_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInMageProtectedDiskDetails : public OAIObject {
public:
    OAIInMageProtectedDiskDetails();
    OAIInMageProtectedDiskDetails(QString json);
    ~OAIInMageProtectedDiskDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getDiskCapacityInBytes() const;
    void setDiskCapacityInBytes(const qint64 &disk_capacity_in_bytes);
    bool is_disk_capacity_in_bytes_Set() const;
    bool is_disk_capacity_in_bytes_Valid() const;

    QString getDiskId() const;
    void setDiskId(const QString &disk_id);
    bool is_disk_id_Set() const;
    bool is_disk_id_Valid() const;

    QString getDiskName() const;
    void setDiskName(const QString &disk_name);
    bool is_disk_name_Set() const;
    bool is_disk_name_Valid() const;

    QString getDiskResized() const;
    void setDiskResized(const QString &disk_resized);
    bool is_disk_resized_Set() const;
    bool is_disk_resized_Valid() const;

    qint64 getFileSystemCapacityInBytes() const;
    void setFileSystemCapacityInBytes(const qint64 &file_system_capacity_in_bytes);
    bool is_file_system_capacity_in_bytes_Set() const;
    bool is_file_system_capacity_in_bytes_Valid() const;

    QString getHealthErrorCode() const;
    void setHealthErrorCode(const QString &health_error_code);
    bool is_health_error_code_Set() const;
    bool is_health_error_code_Valid() const;

    QDateTime getLastRpoCalculatedTime() const;
    void setLastRpoCalculatedTime(const QDateTime &last_rpo_calculated_time);
    bool is_last_rpo_calculated_time_Set() const;
    bool is_last_rpo_calculated_time_Valid() const;

    QString getProtectionStage() const;
    void setProtectionStage(const QString &protection_stage);
    bool is_protection_stage_Set() const;
    bool is_protection_stage_Valid() const;

    double getPsDataInMb() const;
    void setPsDataInMb(const double &ps_data_in_mb);
    bool is_ps_data_in_mb_Set() const;
    bool is_ps_data_in_mb_Valid() const;

    qint64 getResyncDurationInSeconds() const;
    void setResyncDurationInSeconds(const qint64 &resync_duration_in_seconds);
    bool is_resync_duration_in_seconds_Set() const;
    bool is_resync_duration_in_seconds_Valid() const;

    qint32 getResyncProgressPercentage() const;
    void setResyncProgressPercentage(const qint32 &resync_progress_percentage);
    bool is_resync_progress_percentage_Set() const;
    bool is_resync_progress_percentage_Valid() const;

    QString getResyncRequired() const;
    void setResyncRequired(const QString &resync_required);
    bool is_resync_required_Set() const;
    bool is_resync_required_Valid() const;

    qint64 getRpoInSeconds() const;
    void setRpoInSeconds(const qint64 &rpo_in_seconds);
    bool is_rpo_in_seconds_Set() const;
    bool is_rpo_in_seconds_Valid() const;

    double getSourceDataInMb() const;
    void setSourceDataInMb(const double &source_data_in_mb);
    bool is_source_data_in_mb_Set() const;
    bool is_source_data_in_mb_Valid() const;

    double getTargetDataInMb() const;
    void setTargetDataInMb(const double &target_data_in_mb);
    bool is_target_data_in_mb_Set() const;
    bool is_target_data_in_mb_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_disk_capacity_in_bytes;
    bool m_disk_capacity_in_bytes_isSet;
    bool m_disk_capacity_in_bytes_isValid;

    QString m_disk_id;
    bool m_disk_id_isSet;
    bool m_disk_id_isValid;

    QString m_disk_name;
    bool m_disk_name_isSet;
    bool m_disk_name_isValid;

    QString m_disk_resized;
    bool m_disk_resized_isSet;
    bool m_disk_resized_isValid;

    qint64 m_file_system_capacity_in_bytes;
    bool m_file_system_capacity_in_bytes_isSet;
    bool m_file_system_capacity_in_bytes_isValid;

    QString m_health_error_code;
    bool m_health_error_code_isSet;
    bool m_health_error_code_isValid;

    QDateTime m_last_rpo_calculated_time;
    bool m_last_rpo_calculated_time_isSet;
    bool m_last_rpo_calculated_time_isValid;

    QString m_protection_stage;
    bool m_protection_stage_isSet;
    bool m_protection_stage_isValid;

    double m_ps_data_in_mb;
    bool m_ps_data_in_mb_isSet;
    bool m_ps_data_in_mb_isValid;

    qint64 m_resync_duration_in_seconds;
    bool m_resync_duration_in_seconds_isSet;
    bool m_resync_duration_in_seconds_isValid;

    qint32 m_resync_progress_percentage;
    bool m_resync_progress_percentage_isSet;
    bool m_resync_progress_percentage_isValid;

    QString m_resync_required;
    bool m_resync_required_isSet;
    bool m_resync_required_isValid;

    qint64 m_rpo_in_seconds;
    bool m_rpo_in_seconds_isSet;
    bool m_rpo_in_seconds_isValid;

    double m_source_data_in_mb;
    bool m_source_data_in_mb_isSet;
    bool m_source_data_in_mb_isValid;

    double m_target_data_in_mb;
    bool m_target_data_in_mb_isSet;
    bool m_target_data_in_mb_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInMageProtectedDiskDetails)

#endif // OAIInMageProtectedDiskDetails_H
