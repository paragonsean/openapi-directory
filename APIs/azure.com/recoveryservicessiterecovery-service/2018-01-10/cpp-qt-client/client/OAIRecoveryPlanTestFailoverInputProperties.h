/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecoveryPlanTestFailoverInputProperties.h
 *
 * Recovery plan test failover input properties.
 */

#ifndef OAIRecoveryPlanTestFailoverInputProperties_H
#define OAIRecoveryPlanTestFailoverInputProperties_H

#include <QJsonObject>

#include "OAIRecoveryPlanProviderSpecificFailoverInput.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecoveryPlanProviderSpecificFailoverInput;

class OAIRecoveryPlanTestFailoverInputProperties : public OAIObject {
public:
    OAIRecoveryPlanTestFailoverInputProperties();
    OAIRecoveryPlanTestFailoverInputProperties(QString json);
    ~OAIRecoveryPlanTestFailoverInputProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFailoverDirection() const;
    void setFailoverDirection(const QString &failover_direction);
    bool is_failover_direction_Set() const;
    bool is_failover_direction_Valid() const;

    QString getNetworkId() const;
    void setNetworkId(const QString &network_id);
    bool is_network_id_Set() const;
    bool is_network_id_Valid() const;

    QString getNetworkType() const;
    void setNetworkType(const QString &network_type);
    bool is_network_type_Set() const;
    bool is_network_type_Valid() const;

    QList<OAIRecoveryPlanProviderSpecificFailoverInput> getProviderSpecificDetails() const;
    void setProviderSpecificDetails(const QList<OAIRecoveryPlanProviderSpecificFailoverInput> &provider_specific_details);
    bool is_provider_specific_details_Set() const;
    bool is_provider_specific_details_Valid() const;

    QString getSkipTestFailoverCleanup() const;
    void setSkipTestFailoverCleanup(const QString &skip_test_failover_cleanup);
    bool is_skip_test_failover_cleanup_Set() const;
    bool is_skip_test_failover_cleanup_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_failover_direction;
    bool m_failover_direction_isSet;
    bool m_failover_direction_isValid;

    QString m_network_id;
    bool m_network_id_isSet;
    bool m_network_id_isValid;

    QString m_network_type;
    bool m_network_type_isSet;
    bool m_network_type_isValid;

    QList<OAIRecoveryPlanProviderSpecificFailoverInput> m_provider_specific_details;
    bool m_provider_specific_details_isSet;
    bool m_provider_specific_details_isValid;

    QString m_skip_test_failover_cleanup;
    bool m_skip_test_failover_cleanup_isSet;
    bool m_skip_test_failover_cleanup_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecoveryPlanTestFailoverInputProperties)

#endif // OAIRecoveryPlanTestFailoverInputProperties_H
