/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFailoverProcessServerRequestProperties.h
 *
 * The properties of the Failover Process Server request.
 */

#ifndef OAIFailoverProcessServerRequestProperties_H
#define OAIFailoverProcessServerRequestProperties_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFailoverProcessServerRequestProperties : public OAIObject {
public:
    OAIFailoverProcessServerRequestProperties();
    OAIFailoverProcessServerRequestProperties(QString json);
    ~OAIFailoverProcessServerRequestProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContainerName() const;
    void setContainerName(const QString &container_name);
    bool is_container_name_Set() const;
    bool is_container_name_Valid() const;

    QString getSourceProcessServerId() const;
    void setSourceProcessServerId(const QString &source_process_server_id);
    bool is_source_process_server_id_Set() const;
    bool is_source_process_server_id_Valid() const;

    QString getTargetProcessServerId() const;
    void setTargetProcessServerId(const QString &target_process_server_id);
    bool is_target_process_server_id_Set() const;
    bool is_target_process_server_id_Valid() const;

    QString getUpdateType() const;
    void setUpdateType(const QString &update_type);
    bool is_update_type_Set() const;
    bool is_update_type_Valid() const;

    QList<QString> getVmsToMigrate() const;
    void setVmsToMigrate(const QList<QString> &vms_to_migrate);
    bool is_vms_to_migrate_Set() const;
    bool is_vms_to_migrate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_container_name;
    bool m_container_name_isSet;
    bool m_container_name_isValid;

    QString m_source_process_server_id;
    bool m_source_process_server_id_isSet;
    bool m_source_process_server_id_isValid;

    QString m_target_process_server_id;
    bool m_target_process_server_id_isSet;
    bool m_target_process_server_id_isValid;

    QString m_update_type;
    bool m_update_type_isSet;
    bool m_update_type_isValid;

    QList<QString> m_vms_to_migrate;
    bool m_vms_to_migrate_isSet;
    bool m_vms_to_migrate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFailoverProcessServerRequestProperties)

#endif // OAIFailoverProcessServerRequestProperties_H
