/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHyperVReplicaAzurePolicyInput.h
 *
 * Hyper-V Replica Azure specific input for creating a protection profile.
 */

#ifndef OAIHyperVReplicaAzurePolicyInput_H
#define OAIHyperVReplicaAzurePolicyInput_H

#include <QJsonObject>

#include "OAIPolicyProviderSpecificInput.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHyperVReplicaAzurePolicyInput : public OAIObject {
public:
    OAIHyperVReplicaAzurePolicyInput();
    OAIHyperVReplicaAzurePolicyInput(QString json);
    ~OAIHyperVReplicaAzurePolicyInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getApplicationConsistentSnapshotFrequencyInHours() const;
    void setApplicationConsistentSnapshotFrequencyInHours(const qint32 &application_consistent_snapshot_frequency_in_hours);
    bool is_application_consistent_snapshot_frequency_in_hours_Set() const;
    bool is_application_consistent_snapshot_frequency_in_hours_Valid() const;

    QString getOnlineReplicationStartTime() const;
    void setOnlineReplicationStartTime(const QString &online_replication_start_time);
    bool is_online_replication_start_time_Set() const;
    bool is_online_replication_start_time_Valid() const;

    qint32 getRecoveryPointHistoryDuration() const;
    void setRecoveryPointHistoryDuration(const qint32 &recovery_point_history_duration);
    bool is_recovery_point_history_duration_Set() const;
    bool is_recovery_point_history_duration_Valid() const;

    qint32 getReplicationInterval() const;
    void setReplicationInterval(const qint32 &replication_interval);
    bool is_replication_interval_Set() const;
    bool is_replication_interval_Valid() const;

    QList<QString> getStorageAccounts() const;
    void setStorageAccounts(const QList<QString> &storage_accounts);
    bool is_storage_accounts_Set() const;
    bool is_storage_accounts_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_application_consistent_snapshot_frequency_in_hours;
    bool m_application_consistent_snapshot_frequency_in_hours_isSet;
    bool m_application_consistent_snapshot_frequency_in_hours_isValid;

    QString m_online_replication_start_time;
    bool m_online_replication_start_time_isSet;
    bool m_online_replication_start_time_isValid;

    qint32 m_recovery_point_history_duration;
    bool m_recovery_point_history_duration_isSet;
    bool m_recovery_point_history_duration_isValid;

    qint32 m_replication_interval;
    bool m_replication_interval_isSet;
    bool m_replication_interval_isValid;

    QList<QString> m_storage_accounts;
    bool m_storage_accounts_isSet;
    bool m_storage_accounts_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHyperVReplicaAzurePolicyInput)

#endif // OAIHyperVReplicaAzurePolicyInput_H
