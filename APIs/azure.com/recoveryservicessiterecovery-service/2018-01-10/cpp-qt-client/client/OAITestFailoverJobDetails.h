/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestFailoverJobDetails.h
 *
 * This class represents the details for a test failover job.
 */

#ifndef OAITestFailoverJobDetails_H
#define OAITestFailoverJobDetails_H

#include <QJsonObject>

#include "OAIFailoverReplicationProtectedItemDetails.h"
#include "OAIJobDetails.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFailoverReplicationProtectedItemDetails;

class OAITestFailoverJobDetails : public OAIObject {
public:
    OAITestFailoverJobDetails();
    OAITestFailoverJobDetails(QString json);
    ~OAITestFailoverJobDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QString getNetworkFriendlyName() const;
    void setNetworkFriendlyName(const QString &network_friendly_name);
    bool is_network_friendly_name_Set() const;
    bool is_network_friendly_name_Valid() const;

    QString getNetworkName() const;
    void setNetworkName(const QString &network_name);
    bool is_network_name_Set() const;
    bool is_network_name_Valid() const;

    QString getNetworkType() const;
    void setNetworkType(const QString &network_type);
    bool is_network_type_Set() const;
    bool is_network_type_Valid() const;

    QList<OAIFailoverReplicationProtectedItemDetails> getProtectedItemDetails() const;
    void setProtectedItemDetails(const QList<OAIFailoverReplicationProtectedItemDetails> &protected_item_details);
    bool is_protected_item_details_Set() const;
    bool is_protected_item_details_Valid() const;

    QString getTestFailoverStatus() const;
    void setTestFailoverStatus(const QString &test_failover_status);
    bool is_test_failover_status_Set() const;
    bool is_test_failover_status_Valid() const;

    QMap<QString, QString> getAffectedObjectDetails() const;
    void setAffectedObjectDetails(const QMap<QString, QString> &affected_object_details);
    bool is_affected_object_details_Set() const;
    bool is_affected_object_details_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QString m_network_friendly_name;
    bool m_network_friendly_name_isSet;
    bool m_network_friendly_name_isValid;

    QString m_network_name;
    bool m_network_name_isSet;
    bool m_network_name_isValid;

    QString m_network_type;
    bool m_network_type_isSet;
    bool m_network_type_isValid;

    QList<OAIFailoverReplicationProtectedItemDetails> m_protected_item_details;
    bool m_protected_item_details_isSet;
    bool m_protected_item_details_isValid;

    QString m_test_failover_status;
    bool m_test_failover_status_isSet;
    bool m_test_failover_status_isValid;

    QMap<QString, QString> m_affected_object_details;
    bool m_affected_object_details_isSet;
    bool m_affected_object_details_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestFailoverJobDetails)

#endif // OAITestFailoverJobDetails_H
