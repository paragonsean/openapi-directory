/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVMwareVirtualMachineDetails.h
 *
 * VMware provider specific settings
 */

#ifndef OAIVMwareVirtualMachineDetails_H
#define OAIVMwareVirtualMachineDetails_H

#include <QJsonObject>

#include "OAIConfigurationSettings.h"
#include "OAIHealthError.h"
#include "OAIInMageDiskDetails.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInMageDiskDetails;
class OAIHealthError;

class OAIVMwareVirtualMachineDetails : public OAIObject {
public:
    OAIVMwareVirtualMachineDetails();
    OAIVMwareVirtualMachineDetails(QString json);
    ~OAIVMwareVirtualMachineDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAgentGeneratedId() const;
    void setAgentGeneratedId(const QString &agent_generated_id);
    bool is_agent_generated_id_Set() const;
    bool is_agent_generated_id_Valid() const;

    QString getAgentInstalled() const;
    void setAgentInstalled(const QString &agent_installed);
    bool is_agent_installed_Set() const;
    bool is_agent_installed_Valid() const;

    QString getAgentVersion() const;
    void setAgentVersion(const QString &agent_version);
    bool is_agent_version_Set() const;
    bool is_agent_version_Valid() const;

    QString getDiscoveryType() const;
    void setDiscoveryType(const QString &discovery_type);
    bool is_discovery_type_Set() const;
    bool is_discovery_type_Valid() const;

    QList<OAIInMageDiskDetails> getDiskDetails() const;
    void setDiskDetails(const QList<OAIInMageDiskDetails> &disk_details);
    bool is_disk_details_Set() const;
    bool is_disk_details_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    QString getOsType() const;
    void setOsType(const QString &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    QString getPoweredOn() const;
    void setPoweredOn(const QString &powered_on);
    bool is_powered_on_Set() const;
    bool is_powered_on_Valid() const;

    QString getVCenterInfrastructureId() const;
    void setVCenterInfrastructureId(const QString &v_center_infrastructure_id);
    bool is_v_center_infrastructure_id_Set() const;
    bool is_v_center_infrastructure_id_Valid() const;

    QList<OAIHealthError> getValidationErrors() const;
    void setValidationErrors(const QList<OAIHealthError> &validation_errors);
    bool is_validation_errors_Set() const;
    bool is_validation_errors_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_agent_generated_id;
    bool m_agent_generated_id_isSet;
    bool m_agent_generated_id_isValid;

    QString m_agent_installed;
    bool m_agent_installed_isSet;
    bool m_agent_installed_isValid;

    QString m_agent_version;
    bool m_agent_version_isSet;
    bool m_agent_version_isValid;

    QString m_discovery_type;
    bool m_discovery_type_isSet;
    bool m_discovery_type_isValid;

    QList<OAIInMageDiskDetails> m_disk_details;
    bool m_disk_details_isSet;
    bool m_disk_details_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    QString m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;

    QString m_powered_on;
    bool m_powered_on_isSet;
    bool m_powered_on_isValid;

    QString m_v_center_infrastructure_id;
    bool m_v_center_infrastructure_id_isSet;
    bool m_v_center_infrastructure_id_isValid;

    QList<OAIHealthError> m_validation_errors;
    bool m_validation_errors_isSet;
    bool m_validation_errors_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVMwareVirtualMachineDetails)

#endif // OAIVMwareVirtualMachineDetails_H
