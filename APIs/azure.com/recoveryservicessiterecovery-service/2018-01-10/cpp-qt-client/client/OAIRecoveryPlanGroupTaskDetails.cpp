/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecoveryPlanGroupTaskDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecoveryPlanGroupTaskDetails::OAIRecoveryPlanGroupTaskDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecoveryPlanGroupTaskDetails::OAIRecoveryPlanGroupTaskDetails() {
    this->initializeModel();
}

OAIRecoveryPlanGroupTaskDetails::~OAIRecoveryPlanGroupTaskDetails() {}

void OAIRecoveryPlanGroupTaskDetails::initializeModel() {

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_rp_group_type_isSet = false;
    m_rp_group_type_isValid = false;

    m_child_tasks_isSet = false;
    m_child_tasks_isValid = false;

    m_instance_type_isSet = false;
    m_instance_type_isValid = false;
}

void OAIRecoveryPlanGroupTaskDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecoveryPlanGroupTaskDetails::fromJsonObject(QJsonObject json) {

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("groupId")]);
    m_group_id_isSet = !json[QString("groupId")].isNull() && m_group_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_rp_group_type_isValid = ::OpenAPI::fromJsonValue(m_rp_group_type, json[QString("rpGroupType")]);
    m_rp_group_type_isSet = !json[QString("rpGroupType")].isNull() && m_rp_group_type_isValid;

    m_child_tasks_isValid = ::OpenAPI::fromJsonValue(m_child_tasks, json[QString("childTasks")]);
    m_child_tasks_isSet = !json[QString("childTasks")].isNull() && m_child_tasks_isValid;

    m_instance_type_isValid = ::OpenAPI::fromJsonValue(m_instance_type, json[QString("instanceType")]);
    m_instance_type_isSet = !json[QString("instanceType")].isNull() && m_instance_type_isValid;
}

QString OAIRecoveryPlanGroupTaskDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecoveryPlanGroupTaskDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_group_id_isSet) {
        obj.insert(QString("groupId"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_rp_group_type_isSet) {
        obj.insert(QString("rpGroupType"), ::OpenAPI::toJsonValue(m_rp_group_type));
    }
    if (m_child_tasks.size() > 0) {
        obj.insert(QString("childTasks"), ::OpenAPI::toJsonValue(m_child_tasks));
    }
    if (m_instance_type_isSet) {
        obj.insert(QString("instanceType"), ::OpenAPI::toJsonValue(m_instance_type));
    }
    return obj;
}

QString OAIRecoveryPlanGroupTaskDetails::getGroupId() const {
    return m_group_id;
}
void OAIRecoveryPlanGroupTaskDetails::setGroupId(const QString &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIRecoveryPlanGroupTaskDetails::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIRecoveryPlanGroupTaskDetails::is_group_id_Valid() const{
    return m_group_id_isValid;
}

QString OAIRecoveryPlanGroupTaskDetails::getName() const {
    return m_name;
}
void OAIRecoveryPlanGroupTaskDetails::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRecoveryPlanGroupTaskDetails::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRecoveryPlanGroupTaskDetails::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIRecoveryPlanGroupTaskDetails::getRpGroupType() const {
    return m_rp_group_type;
}
void OAIRecoveryPlanGroupTaskDetails::setRpGroupType(const QString &rp_group_type) {
    m_rp_group_type = rp_group_type;
    m_rp_group_type_isSet = true;
}

bool OAIRecoveryPlanGroupTaskDetails::is_rp_group_type_Set() const{
    return m_rp_group_type_isSet;
}

bool OAIRecoveryPlanGroupTaskDetails::is_rp_group_type_Valid() const{
    return m_rp_group_type_isValid;
}

QList<OAIASRTask> OAIRecoveryPlanGroupTaskDetails::getChildTasks() const {
    return m_child_tasks;
}
void OAIRecoveryPlanGroupTaskDetails::setChildTasks(const QList<OAIASRTask> &child_tasks) {
    m_child_tasks = child_tasks;
    m_child_tasks_isSet = true;
}

bool OAIRecoveryPlanGroupTaskDetails::is_child_tasks_Set() const{
    return m_child_tasks_isSet;
}

bool OAIRecoveryPlanGroupTaskDetails::is_child_tasks_Valid() const{
    return m_child_tasks_isValid;
}

QString OAIRecoveryPlanGroupTaskDetails::getInstanceType() const {
    return m_instance_type;
}
void OAIRecoveryPlanGroupTaskDetails::setInstanceType(const QString &instance_type) {
    m_instance_type = instance_type;
    m_instance_type_isSet = true;
}

bool OAIRecoveryPlanGroupTaskDetails::is_instance_type_Set() const{
    return m_instance_type_isSet;
}

bool OAIRecoveryPlanGroupTaskDetails::is_instance_type_Valid() const{
    return m_instance_type_isValid;
}

bool OAIRecoveryPlanGroupTaskDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rp_group_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_child_tasks.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecoveryPlanGroupTaskDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
