/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobQueryParameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobQueryParameter::OAIJobQueryParameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobQueryParameter::OAIJobQueryParameter() {
    this->initializeModel();
}

OAIJobQueryParameter::~OAIJobQueryParameter() {}

void OAIJobQueryParameter::initializeModel() {

    m_affected_object_types_isSet = false;
    m_affected_object_types_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_fabric_id_isSet = false;
    m_fabric_id_isValid = false;

    m_job_status_isSet = false;
    m_job_status_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIJobQueryParameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobQueryParameter::fromJsonObject(QJsonObject json) {

    m_affected_object_types_isValid = ::OpenAPI::fromJsonValue(m_affected_object_types, json[QString("affectedObjectTypes")]);
    m_affected_object_types_isSet = !json[QString("affectedObjectTypes")].isNull() && m_affected_object_types_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_fabric_id_isValid = ::OpenAPI::fromJsonValue(m_fabric_id, json[QString("fabricId")]);
    m_fabric_id_isSet = !json[QString("fabricId")].isNull() && m_fabric_id_isValid;

    m_job_status_isValid = ::OpenAPI::fromJsonValue(m_job_status, json[QString("jobStatus")]);
    m_job_status_isSet = !json[QString("jobStatus")].isNull() && m_job_status_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIJobQueryParameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobQueryParameter::asJsonObject() const {
    QJsonObject obj;
    if (m_affected_object_types_isSet) {
        obj.insert(QString("affectedObjectTypes"), ::OpenAPI::toJsonValue(m_affected_object_types));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_fabric_id_isSet) {
        obj.insert(QString("fabricId"), ::OpenAPI::toJsonValue(m_fabric_id));
    }
    if (m_job_status_isSet) {
        obj.insert(QString("jobStatus"), ::OpenAPI::toJsonValue(m_job_status));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIJobQueryParameter::getAffectedObjectTypes() const {
    return m_affected_object_types;
}
void OAIJobQueryParameter::setAffectedObjectTypes(const QString &affected_object_types) {
    m_affected_object_types = affected_object_types;
    m_affected_object_types_isSet = true;
}

bool OAIJobQueryParameter::is_affected_object_types_Set() const{
    return m_affected_object_types_isSet;
}

bool OAIJobQueryParameter::is_affected_object_types_Valid() const{
    return m_affected_object_types_isValid;
}

QString OAIJobQueryParameter::getEndTime() const {
    return m_end_time;
}
void OAIJobQueryParameter::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIJobQueryParameter::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIJobQueryParameter::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIJobQueryParameter::getFabricId() const {
    return m_fabric_id;
}
void OAIJobQueryParameter::setFabricId(const QString &fabric_id) {
    m_fabric_id = fabric_id;
    m_fabric_id_isSet = true;
}

bool OAIJobQueryParameter::is_fabric_id_Set() const{
    return m_fabric_id_isSet;
}

bool OAIJobQueryParameter::is_fabric_id_Valid() const{
    return m_fabric_id_isValid;
}

QString OAIJobQueryParameter::getJobStatus() const {
    return m_job_status;
}
void OAIJobQueryParameter::setJobStatus(const QString &job_status) {
    m_job_status = job_status;
    m_job_status_isSet = true;
}

bool OAIJobQueryParameter::is_job_status_Set() const{
    return m_job_status_isSet;
}

bool OAIJobQueryParameter::is_job_status_Valid() const{
    return m_job_status_isValid;
}

QString OAIJobQueryParameter::getStartTime() const {
    return m_start_time;
}
void OAIJobQueryParameter::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIJobQueryParameter::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIJobQueryParameter::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIJobQueryParameter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_affected_object_types_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fabric_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobQueryParameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
