/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVMwareCbtNicDetails.h
 *
 * VMwareCbt NIC details.
 */

#ifndef OAIVMwareCbtNicDetails_H
#define OAIVMwareCbtNicDetails_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVMwareCbtNicDetails : public OAIObject {
public:
    OAIVMwareCbtNicDetails();
    OAIVMwareCbtNicDetails(QString json);
    ~OAIVMwareCbtNicDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIsPrimaryNic() const;
    void setIsPrimaryNic(const QString &is_primary_nic);
    bool is_is_primary_nic_Set() const;
    bool is_is_primary_nic_Valid() const;

    QString getIsSelectedForMigration() const;
    void setIsSelectedForMigration(const QString &is_selected_for_migration);
    bool is_is_selected_for_migration_Set() const;
    bool is_is_selected_for_migration_Valid() const;

    QString getNicId() const;
    void setNicId(const QString &nic_id);
    bool is_nic_id_Set() const;
    bool is_nic_id_Valid() const;

    QString getSourceIpAddress() const;
    void setSourceIpAddress(const QString &source_ip_address);
    bool is_source_ip_address_Set() const;
    bool is_source_ip_address_Valid() const;

    QString getSourceIpAddressType() const;
    void setSourceIpAddressType(const QString &source_ip_address_type);
    bool is_source_ip_address_type_Set() const;
    bool is_source_ip_address_type_Valid() const;

    QString getSourceNetworkId() const;
    void setSourceNetworkId(const QString &source_network_id);
    bool is_source_network_id_Set() const;
    bool is_source_network_id_Valid() const;

    QString getTargetIpAddress() const;
    void setTargetIpAddress(const QString &target_ip_address);
    bool is_target_ip_address_Set() const;
    bool is_target_ip_address_Valid() const;

    QString getTargetIpAddressType() const;
    void setTargetIpAddressType(const QString &target_ip_address_type);
    bool is_target_ip_address_type_Set() const;
    bool is_target_ip_address_type_Valid() const;

    QString getTargetSubnetName() const;
    void setTargetSubnetName(const QString &target_subnet_name);
    bool is_target_subnet_name_Set() const;
    bool is_target_subnet_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_is_primary_nic;
    bool m_is_primary_nic_isSet;
    bool m_is_primary_nic_isValid;

    QString m_is_selected_for_migration;
    bool m_is_selected_for_migration_isSet;
    bool m_is_selected_for_migration_isValid;

    QString m_nic_id;
    bool m_nic_id_isSet;
    bool m_nic_id_isValid;

    QString m_source_ip_address;
    bool m_source_ip_address_isSet;
    bool m_source_ip_address_isValid;

    QString m_source_ip_address_type;
    bool m_source_ip_address_type_isSet;
    bool m_source_ip_address_type_isValid;

    QString m_source_network_id;
    bool m_source_network_id_isSet;
    bool m_source_network_id_isValid;

    QString m_target_ip_address;
    bool m_target_ip_address_isSet;
    bool m_target_ip_address_isValid;

    QString m_target_ip_address_type;
    bool m_target_ip_address_type_isSet;
    bool m_target_ip_address_type_isValid;

    QString m_target_subnet_name;
    bool m_target_subnet_name_isSet;
    bool m_target_subnet_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVMwareCbtNicDetails)

#endif // OAIVMwareCbtNicDetails_H
