/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RecoveryServicesProvider;
import org.openapitools.client.model.RecoveryServicesProviderCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReplicationRecoveryServicesProvidersApi
 */
@Disabled
public class ReplicationRecoveryServicesProvidersApiTest {

    private final ReplicationRecoveryServicesProvidersApi api = new ReplicationRecoveryServicesProvidersApi();

    /**
     * Deletes provider from fabric. Note: Deleting provider for any fabric other than SingleHost is unsupported. To maintain backward compatibility for released clients the object \&quot;deleteRspInput\&quot; is used (if the object is empty we assume that it is old client and continue the old behavior).
     *
     * The operation to removes/delete(unregister) a recovery services provider from the vault
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationRecoveryServicesProvidersDeleteTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String providerName = null;
        api.replicationRecoveryServicesProvidersDelete(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, providerName);
        // TODO: test validations
    }

    /**
     * Gets the details of a recovery services provider.
     *
     * Gets the details of registered recovery services provider.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationRecoveryServicesProvidersGetTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String providerName = null;
        RecoveryServicesProvider response = api.replicationRecoveryServicesProvidersGet(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, providerName);
        // TODO: test validations
    }

    /**
     * Gets the list of registered recovery services providers in the vault. This is a view only api.
     *
     * Lists the registered recovery services providers in the vault
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationRecoveryServicesProvidersListTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        RecoveryServicesProviderCollection response = api.replicationRecoveryServicesProvidersList(apiVersion, resourceName, resourceGroupName, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the list of registered recovery services providers for the fabric.
     *
     * Lists the registered recovery services providers for the specified fabric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationRecoveryServicesProvidersListByReplicationFabricsTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        RecoveryServicesProviderCollection response = api.replicationRecoveryServicesProvidersListByReplicationFabrics(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName);
        // TODO: test validations
    }

    /**
     * Purges recovery service provider from fabric
     *
     * The operation to purge(force delete) a recovery services provider from the vault.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationRecoveryServicesProvidersPurgeTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String providerName = null;
        api.replicationRecoveryServicesProvidersPurge(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, providerName);
        // TODO: test validations
    }

    /**
     * Refresh details from the recovery services provider.
     *
     * The operation to refresh the information from the recovery services provider.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replicationRecoveryServicesProvidersRefreshProviderTest() throws ApiException {
        String apiVersion = null;
        String resourceName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String fabricName = null;
        String providerName = null;
        RecoveryServicesProvider response = api.replicationRecoveryServicesProvidersRefreshProvider(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, providerName);
        // TODO: test validations
    }

}
