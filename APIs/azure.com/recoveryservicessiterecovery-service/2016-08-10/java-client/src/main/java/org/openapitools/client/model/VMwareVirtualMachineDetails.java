/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConfigurationSettings;
import org.openapitools.client.model.HealthError;
import org.openapitools.client.model.InMageDiskDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VMware provider specific settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:52.295489-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VMwareVirtualMachineDetails extends ConfigurationSettings {
  public static final String SERIALIZED_NAME_AGENT_GENERATED_ID = "agentGeneratedId";
  @SerializedName(SERIALIZED_NAME_AGENT_GENERATED_ID)
  private String agentGeneratedId;

  public static final String SERIALIZED_NAME_AGENT_INSTALLED = "agentInstalled";
  @SerializedName(SERIALIZED_NAME_AGENT_INSTALLED)
  private String agentInstalled;

  public static final String SERIALIZED_NAME_AGENT_VERSION = "agentVersion";
  @SerializedName(SERIALIZED_NAME_AGENT_VERSION)
  private String agentVersion;

  public static final String SERIALIZED_NAME_DISCOVERY_TYPE = "discoveryType";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_TYPE)
  private String discoveryType;

  public static final String SERIALIZED_NAME_DISK_DETAILS = "diskDetails";
  @SerializedName(SERIALIZED_NAME_DISK_DETAILS)
  private List<InMageDiskDetails> diskDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ipAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_OS_TYPE = "osType";
  @SerializedName(SERIALIZED_NAME_OS_TYPE)
  private String osType;

  public static final String SERIALIZED_NAME_POWERED_ON = "poweredOn";
  @SerializedName(SERIALIZED_NAME_POWERED_ON)
  private String poweredOn;

  public static final String SERIALIZED_NAME_V_CENTER_INFRASTRUCTURE_ID = "vCenterInfrastructureId";
  @SerializedName(SERIALIZED_NAME_V_CENTER_INFRASTRUCTURE_ID)
  private String vCenterInfrastructureId;

  public static final String SERIALIZED_NAME_VALIDATION_ERRORS = "validationErrors";
  @SerializedName(SERIALIZED_NAME_VALIDATION_ERRORS)
  private List<HealthError> validationErrors = new ArrayList<>();

  public VMwareVirtualMachineDetails() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public VMwareVirtualMachineDetails(
     String instanceType
  ) {
    this();
    this.instanceType = instanceType;
  }

  public VMwareVirtualMachineDetails agentGeneratedId(String agentGeneratedId) {
    this.agentGeneratedId = agentGeneratedId;
    return this;
  }

  /**
   * The ID generated by the InMage agent after it gets installed on guest. This is the ID to be used during InMage CreateProtection.
   * @return agentGeneratedId
   */
  @javax.annotation.Nullable
  public String getAgentGeneratedId() {
    return agentGeneratedId;
  }

  public void setAgentGeneratedId(String agentGeneratedId) {
    this.agentGeneratedId = agentGeneratedId;
  }


  public VMwareVirtualMachineDetails agentInstalled(String agentInstalled) {
    this.agentInstalled = agentInstalled;
    return this;
  }

  /**
   * The value indicating if InMage scout agent is installed on guest.
   * @return agentInstalled
   */
  @javax.annotation.Nullable
  public String getAgentInstalled() {
    return agentInstalled;
  }

  public void setAgentInstalled(String agentInstalled) {
    this.agentInstalled = agentInstalled;
  }


  public VMwareVirtualMachineDetails agentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
    return this;
  }

  /**
   * The agent version.
   * @return agentVersion
   */
  @javax.annotation.Nullable
  public String getAgentVersion() {
    return agentVersion;
  }

  public void setAgentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
  }


  public VMwareVirtualMachineDetails discoveryType(String discoveryType) {
    this.discoveryType = discoveryType;
    return this;
  }

  /**
   * A value indicating the discovery type of the machine. Value can be vCenter or physical.
   * @return discoveryType
   */
  @javax.annotation.Nullable
  public String getDiscoveryType() {
    return discoveryType;
  }

  public void setDiscoveryType(String discoveryType) {
    this.discoveryType = discoveryType;
  }


  public VMwareVirtualMachineDetails diskDetails(List<InMageDiskDetails> diskDetails) {
    this.diskDetails = diskDetails;
    return this;
  }

  public VMwareVirtualMachineDetails addDiskDetailsItem(InMageDiskDetails diskDetailsItem) {
    if (this.diskDetails == null) {
      this.diskDetails = new ArrayList<>();
    }
    this.diskDetails.add(diskDetailsItem);
    return this;
  }

  /**
   * The disk details.
   * @return diskDetails
   */
  @javax.annotation.Nullable
  public List<InMageDiskDetails> getDiskDetails() {
    return diskDetails;
  }

  public void setDiskDetails(List<InMageDiskDetails> diskDetails) {
    this.diskDetails = diskDetails;
  }


  public VMwareVirtualMachineDetails ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * The IP address.
   * @return ipAddress
   */
  @javax.annotation.Nullable
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public VMwareVirtualMachineDetails osType(String osType) {
    this.osType = osType;
    return this;
  }

  /**
   * The OsType installed on VM.
   * @return osType
   */
  @javax.annotation.Nullable
  public String getOsType() {
    return osType;
  }

  public void setOsType(String osType) {
    this.osType = osType;
  }


  public VMwareVirtualMachineDetails poweredOn(String poweredOn) {
    this.poweredOn = poweredOn;
    return this;
  }

  /**
   * The value indicating whether VM is powered on.
   * @return poweredOn
   */
  @javax.annotation.Nullable
  public String getPoweredOn() {
    return poweredOn;
  }

  public void setPoweredOn(String poweredOn) {
    this.poweredOn = poweredOn;
  }


  public VMwareVirtualMachineDetails vCenterInfrastructureId(String vCenterInfrastructureId) {
    this.vCenterInfrastructureId = vCenterInfrastructureId;
    return this;
  }

  /**
   * The VCenter infrastructure Id.
   * @return vCenterInfrastructureId
   */
  @javax.annotation.Nullable
  public String getvCenterInfrastructureId() {
    return vCenterInfrastructureId;
  }

  public void setvCenterInfrastructureId(String vCenterInfrastructureId) {
    this.vCenterInfrastructureId = vCenterInfrastructureId;
  }


  public VMwareVirtualMachineDetails validationErrors(List<HealthError> validationErrors) {
    this.validationErrors = validationErrors;
    return this;
  }

  public VMwareVirtualMachineDetails addValidationErrorsItem(HealthError validationErrorsItem) {
    if (this.validationErrors == null) {
      this.validationErrors = new ArrayList<>();
    }
    this.validationErrors.add(validationErrorsItem);
    return this;
  }

  /**
   * The validation errors.
   * @return validationErrors
   */
  @javax.annotation.Nullable
  public List<HealthError> getValidationErrors() {
    return validationErrors;
  }

  public void setValidationErrors(List<HealthError> validationErrors) {
    this.validationErrors = validationErrors;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VMwareVirtualMachineDetails vmwareVirtualMachineDetails = (VMwareVirtualMachineDetails) o;
    return Objects.equals(this.agentGeneratedId, vmwareVirtualMachineDetails.agentGeneratedId) &&
        Objects.equals(this.agentInstalled, vmwareVirtualMachineDetails.agentInstalled) &&
        Objects.equals(this.agentVersion, vmwareVirtualMachineDetails.agentVersion) &&
        Objects.equals(this.discoveryType, vmwareVirtualMachineDetails.discoveryType) &&
        Objects.equals(this.diskDetails, vmwareVirtualMachineDetails.diskDetails) &&
        Objects.equals(this.ipAddress, vmwareVirtualMachineDetails.ipAddress) &&
        Objects.equals(this.osType, vmwareVirtualMachineDetails.osType) &&
        Objects.equals(this.poweredOn, vmwareVirtualMachineDetails.poweredOn) &&
        Objects.equals(this.vCenterInfrastructureId, vmwareVirtualMachineDetails.vCenterInfrastructureId) &&
        Objects.equals(this.validationErrors, vmwareVirtualMachineDetails.validationErrors) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentGeneratedId, agentInstalled, agentVersion, discoveryType, diskDetails, ipAddress, osType, poweredOn, vCenterInfrastructureId, validationErrors, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VMwareVirtualMachineDetails {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    agentGeneratedId: ").append(toIndentedString(agentGeneratedId)).append("\n");
    sb.append("    agentInstalled: ").append(toIndentedString(agentInstalled)).append("\n");
    sb.append("    agentVersion: ").append(toIndentedString(agentVersion)).append("\n");
    sb.append("    discoveryType: ").append(toIndentedString(discoveryType)).append("\n");
    sb.append("    diskDetails: ").append(toIndentedString(diskDetails)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    osType: ").append(toIndentedString(osType)).append("\n");
    sb.append("    poweredOn: ").append(toIndentedString(poweredOn)).append("\n");
    sb.append("    vCenterInfrastructureId: ").append(toIndentedString(vCenterInfrastructureId)).append("\n");
    sb.append("    validationErrors: ").append(toIndentedString(validationErrors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VMwareVirtualMachineDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VMwareVirtualMachineDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VMwareVirtualMachineDetails is not found in the empty JSON string", VMwareVirtualMachineDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VMwareVirtualMachineDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VMwareVirtualMachineDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VMwareVirtualMachineDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VMwareVirtualMachineDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VMwareVirtualMachineDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VMwareVirtualMachineDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<VMwareVirtualMachineDetails>() {
           @Override
           public void write(JsonWriter out, VMwareVirtualMachineDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VMwareVirtualMachineDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VMwareVirtualMachineDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VMwareVirtualMachineDetails
   * @throws IOException if the JSON string is invalid with respect to VMwareVirtualMachineDetails
   */
  public static VMwareVirtualMachineDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VMwareVirtualMachineDetails.class);
  }

  /**
   * Convert an instance of VMwareVirtualMachineDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

