/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.UpdateReplicationProtectedItemProviderInput;
import org.openapitools.client.model.VMNicInputDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Update protected item input properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:52.295489-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateReplicationProtectedItemInputProperties {
  public static final String SERIALIZED_NAME_ENABLE_R_D_P_ON_TARGET_OPTION = "enableRDPOnTargetOption";
  @SerializedName(SERIALIZED_NAME_ENABLE_R_D_P_ON_TARGET_OPTION)
  private String enableRDPOnTargetOption;

  /**
   * License type.
   */
  @JsonAdapter(LicenseTypeEnum.Adapter.class)
  public enum LicenseTypeEnum {
    NOT_SPECIFIED("NotSpecified"),
    
    NO_LICENSE_TYPE("NoLicenseType"),
    
    WINDOWS_SERVER("WindowsServer");

    private String value;

    LicenseTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LicenseTypeEnum fromValue(String value) {
      for (LicenseTypeEnum b : LicenseTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LicenseTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LicenseTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LicenseTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LicenseTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LicenseTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LICENSE_TYPE = "licenseType";
  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE)
  private LicenseTypeEnum licenseType;

  public static final String SERIALIZED_NAME_PROVIDER_SPECIFIC_DETAILS = "providerSpecificDetails";
  @SerializedName(SERIALIZED_NAME_PROVIDER_SPECIFIC_DETAILS)
  private UpdateReplicationProtectedItemProviderInput providerSpecificDetails;

  public static final String SERIALIZED_NAME_RECOVERY_AVAILABILITY_SET_ID = "recoveryAvailabilitySetId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AVAILABILITY_SET_ID)
  private String recoveryAvailabilitySetId;

  public static final String SERIALIZED_NAME_RECOVERY_AZURE_V_M_NAME = "recoveryAzureVMName";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AZURE_V_M_NAME)
  private String recoveryAzureVMName;

  public static final String SERIALIZED_NAME_RECOVERY_AZURE_V_M_SIZE = "recoveryAzureVMSize";
  @SerializedName(SERIALIZED_NAME_RECOVERY_AZURE_V_M_SIZE)
  private String recoveryAzureVMSize;

  public static final String SERIALIZED_NAME_SELECTED_RECOVERY_AZURE_NETWORK_ID = "selectedRecoveryAzureNetworkId";
  @SerializedName(SERIALIZED_NAME_SELECTED_RECOVERY_AZURE_NETWORK_ID)
  private String selectedRecoveryAzureNetworkId;

  public static final String SERIALIZED_NAME_VM_NICS = "vmNics";
  @SerializedName(SERIALIZED_NAME_VM_NICS)
  private List<VMNicInputDetails> vmNics = new ArrayList<>();

  public UpdateReplicationProtectedItemInputProperties() {
  }

  public UpdateReplicationProtectedItemInputProperties enableRDPOnTargetOption(String enableRDPOnTargetOption) {
    this.enableRDPOnTargetOption = enableRDPOnTargetOption;
    return this;
  }

  /**
   * The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
   * @return enableRDPOnTargetOption
   */
  @javax.annotation.Nullable
  public String getEnableRDPOnTargetOption() {
    return enableRDPOnTargetOption;
  }

  public void setEnableRDPOnTargetOption(String enableRDPOnTargetOption) {
    this.enableRDPOnTargetOption = enableRDPOnTargetOption;
  }


  public UpdateReplicationProtectedItemInputProperties licenseType(LicenseTypeEnum licenseType) {
    this.licenseType = licenseType;
    return this;
  }

  /**
   * License type.
   * @return licenseType
   */
  @javax.annotation.Nullable
  public LicenseTypeEnum getLicenseType() {
    return licenseType;
  }

  public void setLicenseType(LicenseTypeEnum licenseType) {
    this.licenseType = licenseType;
  }


  public UpdateReplicationProtectedItemInputProperties providerSpecificDetails(UpdateReplicationProtectedItemProviderInput providerSpecificDetails) {
    this.providerSpecificDetails = providerSpecificDetails;
    return this;
  }

  /**
   * Get providerSpecificDetails
   * @return providerSpecificDetails
   */
  @javax.annotation.Nullable
  public UpdateReplicationProtectedItemProviderInput getProviderSpecificDetails() {
    return providerSpecificDetails;
  }

  public void setProviderSpecificDetails(UpdateReplicationProtectedItemProviderInput providerSpecificDetails) {
    this.providerSpecificDetails = providerSpecificDetails;
  }


  public UpdateReplicationProtectedItemInputProperties recoveryAvailabilitySetId(String recoveryAvailabilitySetId) {
    this.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
    return this;
  }

  /**
   * The target availability set id.
   * @return recoveryAvailabilitySetId
   */
  @javax.annotation.Nullable
  public String getRecoveryAvailabilitySetId() {
    return recoveryAvailabilitySetId;
  }

  public void setRecoveryAvailabilitySetId(String recoveryAvailabilitySetId) {
    this.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
  }


  public UpdateReplicationProtectedItemInputProperties recoveryAzureVMName(String recoveryAzureVMName) {
    this.recoveryAzureVMName = recoveryAzureVMName;
    return this;
  }

  /**
   * Target azure VM name given by the user.
   * @return recoveryAzureVMName
   */
  @javax.annotation.Nullable
  public String getRecoveryAzureVMName() {
    return recoveryAzureVMName;
  }

  public void setRecoveryAzureVMName(String recoveryAzureVMName) {
    this.recoveryAzureVMName = recoveryAzureVMName;
  }


  public UpdateReplicationProtectedItemInputProperties recoveryAzureVMSize(String recoveryAzureVMSize) {
    this.recoveryAzureVMSize = recoveryAzureVMSize;
    return this;
  }

  /**
   * Target Azure Vm size.
   * @return recoveryAzureVMSize
   */
  @javax.annotation.Nullable
  public String getRecoveryAzureVMSize() {
    return recoveryAzureVMSize;
  }

  public void setRecoveryAzureVMSize(String recoveryAzureVMSize) {
    this.recoveryAzureVMSize = recoveryAzureVMSize;
  }


  public UpdateReplicationProtectedItemInputProperties selectedRecoveryAzureNetworkId(String selectedRecoveryAzureNetworkId) {
    this.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
    return this;
  }

  /**
   * Target Azure Network Id.
   * @return selectedRecoveryAzureNetworkId
   */
  @javax.annotation.Nullable
  public String getSelectedRecoveryAzureNetworkId() {
    return selectedRecoveryAzureNetworkId;
  }

  public void setSelectedRecoveryAzureNetworkId(String selectedRecoveryAzureNetworkId) {
    this.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
  }


  public UpdateReplicationProtectedItemInputProperties vmNics(List<VMNicInputDetails> vmNics) {
    this.vmNics = vmNics;
    return this;
  }

  public UpdateReplicationProtectedItemInputProperties addVmNicsItem(VMNicInputDetails vmNicsItem) {
    if (this.vmNics == null) {
      this.vmNics = new ArrayList<>();
    }
    this.vmNics.add(vmNicsItem);
    return this;
  }

  /**
   * The list of vm nic details.
   * @return vmNics
   */
  @javax.annotation.Nullable
  public List<VMNicInputDetails> getVmNics() {
    return vmNics;
  }

  public void setVmNics(List<VMNicInputDetails> vmNics) {
    this.vmNics = vmNics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateReplicationProtectedItemInputProperties updateReplicationProtectedItemInputProperties = (UpdateReplicationProtectedItemInputProperties) o;
    return Objects.equals(this.enableRDPOnTargetOption, updateReplicationProtectedItemInputProperties.enableRDPOnTargetOption) &&
        Objects.equals(this.licenseType, updateReplicationProtectedItemInputProperties.licenseType) &&
        Objects.equals(this.providerSpecificDetails, updateReplicationProtectedItemInputProperties.providerSpecificDetails) &&
        Objects.equals(this.recoveryAvailabilitySetId, updateReplicationProtectedItemInputProperties.recoveryAvailabilitySetId) &&
        Objects.equals(this.recoveryAzureVMName, updateReplicationProtectedItemInputProperties.recoveryAzureVMName) &&
        Objects.equals(this.recoveryAzureVMSize, updateReplicationProtectedItemInputProperties.recoveryAzureVMSize) &&
        Objects.equals(this.selectedRecoveryAzureNetworkId, updateReplicationProtectedItemInputProperties.selectedRecoveryAzureNetworkId) &&
        Objects.equals(this.vmNics, updateReplicationProtectedItemInputProperties.vmNics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableRDPOnTargetOption, licenseType, providerSpecificDetails, recoveryAvailabilitySetId, recoveryAzureVMName, recoveryAzureVMSize, selectedRecoveryAzureNetworkId, vmNics);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateReplicationProtectedItemInputProperties {\n");
    sb.append("    enableRDPOnTargetOption: ").append(toIndentedString(enableRDPOnTargetOption)).append("\n");
    sb.append("    licenseType: ").append(toIndentedString(licenseType)).append("\n");
    sb.append("    providerSpecificDetails: ").append(toIndentedString(providerSpecificDetails)).append("\n");
    sb.append("    recoveryAvailabilitySetId: ").append(toIndentedString(recoveryAvailabilitySetId)).append("\n");
    sb.append("    recoveryAzureVMName: ").append(toIndentedString(recoveryAzureVMName)).append("\n");
    sb.append("    recoveryAzureVMSize: ").append(toIndentedString(recoveryAzureVMSize)).append("\n");
    sb.append("    selectedRecoveryAzureNetworkId: ").append(toIndentedString(selectedRecoveryAzureNetworkId)).append("\n");
    sb.append("    vmNics: ").append(toIndentedString(vmNics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enableRDPOnTargetOption");
    openapiFields.add("licenseType");
    openapiFields.add("providerSpecificDetails");
    openapiFields.add("recoveryAvailabilitySetId");
    openapiFields.add("recoveryAzureVMName");
    openapiFields.add("recoveryAzureVMSize");
    openapiFields.add("selectedRecoveryAzureNetworkId");
    openapiFields.add("vmNics");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateReplicationProtectedItemInputProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateReplicationProtectedItemInputProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateReplicationProtectedItemInputProperties is not found in the empty JSON string", UpdateReplicationProtectedItemInputProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateReplicationProtectedItemInputProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateReplicationProtectedItemInputProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("enableRDPOnTargetOption") != null && !jsonObj.get("enableRDPOnTargetOption").isJsonNull()) && !jsonObj.get("enableRDPOnTargetOption").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enableRDPOnTargetOption` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enableRDPOnTargetOption").toString()));
      }
      if ((jsonObj.get("licenseType") != null && !jsonObj.get("licenseType").isJsonNull()) && !jsonObj.get("licenseType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `licenseType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("licenseType").toString()));
      }
      // validate the optional field `licenseType`
      if (jsonObj.get("licenseType") != null && !jsonObj.get("licenseType").isJsonNull()) {
        LicenseTypeEnum.validateJsonElement(jsonObj.get("licenseType"));
      }
      // validate the optional field `providerSpecificDetails`
      if (jsonObj.get("providerSpecificDetails") != null && !jsonObj.get("providerSpecificDetails").isJsonNull()) {
        UpdateReplicationProtectedItemProviderInput.validateJsonElement(jsonObj.get("providerSpecificDetails"));
      }
      if ((jsonObj.get("recoveryAvailabilitySetId") != null && !jsonObj.get("recoveryAvailabilitySetId").isJsonNull()) && !jsonObj.get("recoveryAvailabilitySetId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryAvailabilitySetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryAvailabilitySetId").toString()));
      }
      if ((jsonObj.get("recoveryAzureVMName") != null && !jsonObj.get("recoveryAzureVMName").isJsonNull()) && !jsonObj.get("recoveryAzureVMName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryAzureVMName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryAzureVMName").toString()));
      }
      if ((jsonObj.get("recoveryAzureVMSize") != null && !jsonObj.get("recoveryAzureVMSize").isJsonNull()) && !jsonObj.get("recoveryAzureVMSize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryAzureVMSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryAzureVMSize").toString()));
      }
      if ((jsonObj.get("selectedRecoveryAzureNetworkId") != null && !jsonObj.get("selectedRecoveryAzureNetworkId").isJsonNull()) && !jsonObj.get("selectedRecoveryAzureNetworkId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `selectedRecoveryAzureNetworkId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("selectedRecoveryAzureNetworkId").toString()));
      }
      if (jsonObj.get("vmNics") != null && !jsonObj.get("vmNics").isJsonNull()) {
        JsonArray jsonArrayvmNics = jsonObj.getAsJsonArray("vmNics");
        if (jsonArrayvmNics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("vmNics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `vmNics` to be an array in the JSON string but got `%s`", jsonObj.get("vmNics").toString()));
          }

          // validate the optional field `vmNics` (array)
          for (int i = 0; i < jsonArrayvmNics.size(); i++) {
            VMNicInputDetails.validateJsonElement(jsonArrayvmNics.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateReplicationProtectedItemInputProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateReplicationProtectedItemInputProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateReplicationProtectedItemInputProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateReplicationProtectedItemInputProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateReplicationProtectedItemInputProperties>() {
           @Override
           public void write(JsonWriter out, UpdateReplicationProtectedItemInputProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateReplicationProtectedItemInputProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateReplicationProtectedItemInputProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateReplicationProtectedItemInputProperties
   * @throws IOException if the JSON string is invalid with respect to UpdateReplicationProtectedItemInputProperties
   */
  public static UpdateReplicationProtectedItemInputProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateReplicationProtectedItemInputProperties.class);
  }

  /**
   * Convert an instance of UpdateReplicationProtectedItemInputProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

