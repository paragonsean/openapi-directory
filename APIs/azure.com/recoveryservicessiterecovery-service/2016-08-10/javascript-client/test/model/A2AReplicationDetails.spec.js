/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SiteRecoveryManagementClient);
  }
}(this, function(expect, SiteRecoveryManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('A2AReplicationDetails', function() {
    it('should create an instance of A2AReplicationDetails', function() {
      // uncomment below and update the code to test A2AReplicationDetails
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be.a(SiteRecoveryManagementClient.A2AReplicationDetails);
    });

    it('should have the property agentVersion (base name: "agentVersion")', function() {
      // uncomment below and update the code to test the property agentVersion
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property fabricObjectId (base name: "fabricObjectId")', function() {
      // uncomment below and update the code to test the property fabricObjectId
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property isReplicationAgentUpdateRequired (base name: "isReplicationAgentUpdateRequired")', function() {
      // uncomment below and update the code to test the property isReplicationAgentUpdateRequired
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property lastHeartbeat (base name: "lastHeartbeat")', function() {
      // uncomment below and update the code to test the property lastHeartbeat
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property lastRpoCalculatedTime (base name: "lastRpoCalculatedTime")', function() {
      // uncomment below and update the code to test the property lastRpoCalculatedTime
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property lifecycleId (base name: "lifecycleId")', function() {
      // uncomment below and update the code to test the property lifecycleId
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property managementId (base name: "managementId")', function() {
      // uncomment below and update the code to test the property managementId
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property monitoringJobType (base name: "monitoringJobType")', function() {
      // uncomment below and update the code to test the property monitoringJobType
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property monitoringPercentageCompletion (base name: "monitoringPercentageCompletion")', function() {
      // uncomment below and update the code to test the property monitoringPercentageCompletion
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property multiVmGroupId (base name: "multiVmGroupId")', function() {
      // uncomment below and update the code to test the property multiVmGroupId
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property multiVmGroupName (base name: "multiVmGroupName")', function() {
      // uncomment below and update the code to test the property multiVmGroupName
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property osType (base name: "osType")', function() {
      // uncomment below and update the code to test the property osType
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property primaryFabricLocation (base name: "primaryFabricLocation")', function() {
      // uncomment below and update the code to test the property primaryFabricLocation
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property protectedDisks (base name: "protectedDisks")', function() {
      // uncomment below and update the code to test the property protectedDisks
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property protectedManagedDisks (base name: "protectedManagedDisks")', function() {
      // uncomment below and update the code to test the property protectedManagedDisks
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryAvailabilitySet (base name: "recoveryAvailabilitySet")', function() {
      // uncomment below and update the code to test the property recoveryAvailabilitySet
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryAzureResourceGroupId (base name: "recoveryAzureResourceGroupId")', function() {
      // uncomment below and update the code to test the property recoveryAzureResourceGroupId
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryAzureVMName (base name: "recoveryAzureVMName")', function() {
      // uncomment below and update the code to test the property recoveryAzureVMName
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryAzureVMSize (base name: "recoveryAzureVMSize")', function() {
      // uncomment below and update the code to test the property recoveryAzureVMSize
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryCloudService (base name: "recoveryCloudService")', function() {
      // uncomment below and update the code to test the property recoveryCloudService
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryFabricLocation (base name: "recoveryFabricLocation")', function() {
      // uncomment below and update the code to test the property recoveryFabricLocation
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property recoveryFabricObjectId (base name: "recoveryFabricObjectId")', function() {
      // uncomment below and update the code to test the property recoveryFabricObjectId
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property rpoInSeconds (base name: "rpoInSeconds")', function() {
      // uncomment below and update the code to test the property rpoInSeconds
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property selectedRecoveryAzureNetworkId (base name: "selectedRecoveryAzureNetworkId")', function() {
      // uncomment below and update the code to test the property selectedRecoveryAzureNetworkId
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property testFailoverRecoveryFabricObjectId (base name: "testFailoverRecoveryFabricObjectId")', function() {
      // uncomment below and update the code to test the property testFailoverRecoveryFabricObjectId
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmNics (base name: "vmNics")', function() {
      // uncomment below and update the code to test the property vmNics
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmProtectionState (base name: "vmProtectionState")', function() {
      // uncomment below and update the code to test the property vmProtectionState
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmProtectionStateDescription (base name: "vmProtectionStateDescription")', function() {
      // uncomment below and update the code to test the property vmProtectionStateDescription
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmSyncedConfigDetails (base name: "vmSyncedConfigDetails")', function() {
      // uncomment below and update the code to test the property vmSyncedConfigDetails
      //var instance = new SiteRecoveryManagementClient.A2AReplicationDetails();
      //expect(instance).to.be();
    });

  });

}));
