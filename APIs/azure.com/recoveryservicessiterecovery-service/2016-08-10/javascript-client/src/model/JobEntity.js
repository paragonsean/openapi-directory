/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobEntity model module.
 * @module model/JobEntity
 * @version 2016-08-10
 */
class JobEntity {
    /**
     * Constructs a new <code>JobEntity</code>.
     * This class contains the minimal job details required to navigate to the desired drill down.
     * @alias module:model/JobEntity
     */
    constructor() { 
        
        JobEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobEntity} obj Optional instance to populate.
     * @return {module:model/JobEntity} The populated <code>JobEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobEntity();

            if (data.hasOwnProperty('jobFriendlyName')) {
                obj['jobFriendlyName'] = ApiClient.convertToType(data['jobFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
            }
            if (data.hasOwnProperty('jobScenarioName')) {
                obj['jobScenarioName'] = ApiClient.convertToType(data['jobScenarioName'], 'String');
            }
            if (data.hasOwnProperty('targetInstanceType')) {
                obj['targetInstanceType'] = ApiClient.convertToType(data['targetInstanceType'], 'String');
            }
            if (data.hasOwnProperty('targetObjectId')) {
                obj['targetObjectId'] = ApiClient.convertToType(data['targetObjectId'], 'String');
            }
            if (data.hasOwnProperty('targetObjectName')) {
                obj['targetObjectName'] = ApiClient.convertToType(data['targetObjectName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['jobFriendlyName'] && !(typeof data['jobFriendlyName'] === 'string' || data['jobFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `jobFriendlyName` to be a primitive type in the JSON string but got " + data['jobFriendlyName']);
        }
        // ensure the json data is a string
        if (data['jobId'] && !(typeof data['jobId'] === 'string' || data['jobId'] instanceof String)) {
            throw new Error("Expected the field `jobId` to be a primitive type in the JSON string but got " + data['jobId']);
        }
        // ensure the json data is a string
        if (data['jobScenarioName'] && !(typeof data['jobScenarioName'] === 'string' || data['jobScenarioName'] instanceof String)) {
            throw new Error("Expected the field `jobScenarioName` to be a primitive type in the JSON string but got " + data['jobScenarioName']);
        }
        // ensure the json data is a string
        if (data['targetInstanceType'] && !(typeof data['targetInstanceType'] === 'string' || data['targetInstanceType'] instanceof String)) {
            throw new Error("Expected the field `targetInstanceType` to be a primitive type in the JSON string but got " + data['targetInstanceType']);
        }
        // ensure the json data is a string
        if (data['targetObjectId'] && !(typeof data['targetObjectId'] === 'string' || data['targetObjectId'] instanceof String)) {
            throw new Error("Expected the field `targetObjectId` to be a primitive type in the JSON string but got " + data['targetObjectId']);
        }
        // ensure the json data is a string
        if (data['targetObjectName'] && !(typeof data['targetObjectName'] === 'string' || data['targetObjectName'] instanceof String)) {
            throw new Error("Expected the field `targetObjectName` to be a primitive type in the JSON string but got " + data['targetObjectName']);
        }

        return true;
    }


}



/**
 * The job display name.
 * @member {String} jobFriendlyName
 */
JobEntity.prototype['jobFriendlyName'] = undefined;

/**
 * The job id.
 * @member {String} jobId
 */
JobEntity.prototype['jobId'] = undefined;

/**
 * The job name. Enum type ScenarioName.
 * @member {String} jobScenarioName
 */
JobEntity.prototype['jobScenarioName'] = undefined;

/**
 * The workflow affected object type.
 * @member {String} targetInstanceType
 */
JobEntity.prototype['targetInstanceType'] = undefined;

/**
 * The object id.
 * @member {String} targetObjectId
 */
JobEntity.prototype['targetObjectId'] = undefined;

/**
 * The object name.
 * @member {String} targetObjectName
 */
JobEntity.prototype['targetObjectName'] = undefined;






export default JobEntity;

