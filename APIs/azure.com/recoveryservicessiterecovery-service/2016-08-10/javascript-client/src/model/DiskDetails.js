/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DiskDetails model module.
 * @module model/DiskDetails
 * @version 2016-08-10
 */
class DiskDetails {
    /**
     * Constructs a new <code>DiskDetails</code>.
     * On-prem disk details data.
     * @alias module:model/DiskDetails
     */
    constructor() { 
        
        DiskDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiskDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiskDetails} obj Optional instance to populate.
     * @return {module:model/DiskDetails} The populated <code>DiskDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiskDetails();

            if (data.hasOwnProperty('maxSizeMB')) {
                obj['maxSizeMB'] = ApiClient.convertToType(data['maxSizeMB'], 'Number');
            }
            if (data.hasOwnProperty('vhdId')) {
                obj['vhdId'] = ApiClient.convertToType(data['vhdId'], 'String');
            }
            if (data.hasOwnProperty('vhdName')) {
                obj['vhdName'] = ApiClient.convertToType(data['vhdName'], 'String');
            }
            if (data.hasOwnProperty('vhdType')) {
                obj['vhdType'] = ApiClient.convertToType(data['vhdType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiskDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiskDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['vhdId'] && !(typeof data['vhdId'] === 'string' || data['vhdId'] instanceof String)) {
            throw new Error("Expected the field `vhdId` to be a primitive type in the JSON string but got " + data['vhdId']);
        }
        // ensure the json data is a string
        if (data['vhdName'] && !(typeof data['vhdName'] === 'string' || data['vhdName'] instanceof String)) {
            throw new Error("Expected the field `vhdName` to be a primitive type in the JSON string but got " + data['vhdName']);
        }
        // ensure the json data is a string
        if (data['vhdType'] && !(typeof data['vhdType'] === 'string' || data['vhdType'] instanceof String)) {
            throw new Error("Expected the field `vhdType` to be a primitive type in the JSON string but got " + data['vhdType']);
        }

        return true;
    }


}



/**
 * The hard disk max size in MB.
 * @member {Number} maxSizeMB
 */
DiskDetails.prototype['maxSizeMB'] = undefined;

/**
 * The VHD Id.
 * @member {String} vhdId
 */
DiskDetails.prototype['vhdId'] = undefined;

/**
 * The VHD name.
 * @member {String} vhdName
 */
DiskDetails.prototype['vhdName'] = undefined;

/**
 * The type of the volume.
 * @member {String} vhdType
 */
DiskDetails.prototype['vhdType'] = undefined;






export default DiskDetails;

