/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigurationSettings from './ConfigurationSettings';
import DiskDetails from './DiskDetails';
import OSDetails from './OSDetails';

/**
 * The HyperVVirtualMachineDetails model module.
 * @module model/HyperVVirtualMachineDetails
 * @version 2016-08-10
 */
class HyperVVirtualMachineDetails {
    /**
     * Constructs a new <code>HyperVVirtualMachineDetails</code>.
     * Hyper V replica provider specific settings
     * @alias module:model/HyperVVirtualMachineDetails
     * @extends module:model/ConfigurationSettings
     * @implements module:model/ConfigurationSettings
     */
    constructor() { 
        ConfigurationSettings.initialize(this);
        HyperVVirtualMachineDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HyperVVirtualMachineDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HyperVVirtualMachineDetails} obj Optional instance to populate.
     * @return {module:model/HyperVVirtualMachineDetails} The populated <code>HyperVVirtualMachineDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HyperVVirtualMachineDetails();
            ConfigurationSettings.constructFromObject(data, obj);
            ConfigurationSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('diskDetails')) {
                obj['diskDetails'] = ApiClient.convertToType(data['diskDetails'], [DiskDetails]);
            }
            if (data.hasOwnProperty('generation')) {
                obj['generation'] = ApiClient.convertToType(data['generation'], 'String');
            }
            if (data.hasOwnProperty('osDetails')) {
                obj['osDetails'] = OSDetails.constructFromObject(data['osDetails']);
            }
            if (data.hasOwnProperty('sourceItemId')) {
                obj['sourceItemId'] = ApiClient.convertToType(data['sourceItemId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HyperVVirtualMachineDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HyperVVirtualMachineDetails</code>.
     */
    static validateJSON(data) {
        if (data['diskDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['diskDetails'])) {
                throw new Error("Expected the field `diskDetails` to be an array in the JSON data but got " + data['diskDetails']);
            }
            // validate the optional field `diskDetails` (array)
            for (const item of data['diskDetails']) {
                DiskDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['generation'] && !(typeof data['generation'] === 'string' || data['generation'] instanceof String)) {
            throw new Error("Expected the field `generation` to be a primitive type in the JSON string but got " + data['generation']);
        }
        // validate the optional field `osDetails`
        if (data['osDetails']) { // data not null
          OSDetails.validateJSON(data['osDetails']);
        }
        // ensure the json data is a string
        if (data['sourceItemId'] && !(typeof data['sourceItemId'] === 'string' || data['sourceItemId'] instanceof String)) {
            throw new Error("Expected the field `sourceItemId` to be a primitive type in the JSON string but got " + data['sourceItemId']);
        }

        return true;
    }


}



/**
 * The Last successful failover time.
 * @member {Array.<module:model/DiskDetails>} diskDetails
 */
HyperVVirtualMachineDetails.prototype['diskDetails'] = undefined;

/**
 * The id of the object in fabric.
 * @member {String} generation
 */
HyperVVirtualMachineDetails.prototype['generation'] = undefined;

/**
 * @member {module:model/OSDetails} osDetails
 */
HyperVVirtualMachineDetails.prototype['osDetails'] = undefined;

/**
 * The source id of the object.
 * @member {String} sourceItemId
 */
HyperVVirtualMachineDetails.prototype['sourceItemId'] = undefined;


// Implement ConfigurationSettings interface:
/**
 * Gets the class type. Overridden in derived classes.
 * @member {String} instanceType
 */
ConfigurationSettings.prototype['instanceType'] = undefined;




export default HyperVVirtualMachineDetails;

