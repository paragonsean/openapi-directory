/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FailoverProcessServerRequestProperties model module.
 * @module model/FailoverProcessServerRequestProperties
 * @version 2016-08-10
 */
class FailoverProcessServerRequestProperties {
    /**
     * Constructs a new <code>FailoverProcessServerRequestProperties</code>.
     * The properties of the Failover Process Server request.
     * @alias module:model/FailoverProcessServerRequestProperties
     */
    constructor() { 
        
        FailoverProcessServerRequestProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FailoverProcessServerRequestProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FailoverProcessServerRequestProperties} obj Optional instance to populate.
     * @return {module:model/FailoverProcessServerRequestProperties} The populated <code>FailoverProcessServerRequestProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FailoverProcessServerRequestProperties();

            if (data.hasOwnProperty('containerName')) {
                obj['containerName'] = ApiClient.convertToType(data['containerName'], 'String');
            }
            if (data.hasOwnProperty('sourceProcessServerId')) {
                obj['sourceProcessServerId'] = ApiClient.convertToType(data['sourceProcessServerId'], 'String');
            }
            if (data.hasOwnProperty('targetProcessServerId')) {
                obj['targetProcessServerId'] = ApiClient.convertToType(data['targetProcessServerId'], 'String');
            }
            if (data.hasOwnProperty('updateType')) {
                obj['updateType'] = ApiClient.convertToType(data['updateType'], 'String');
            }
            if (data.hasOwnProperty('vmsToMigrate')) {
                obj['vmsToMigrate'] = ApiClient.convertToType(data['vmsToMigrate'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FailoverProcessServerRequestProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FailoverProcessServerRequestProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['containerName'] && !(typeof data['containerName'] === 'string' || data['containerName'] instanceof String)) {
            throw new Error("Expected the field `containerName` to be a primitive type in the JSON string but got " + data['containerName']);
        }
        // ensure the json data is a string
        if (data['sourceProcessServerId'] && !(typeof data['sourceProcessServerId'] === 'string' || data['sourceProcessServerId'] instanceof String)) {
            throw new Error("Expected the field `sourceProcessServerId` to be a primitive type in the JSON string but got " + data['sourceProcessServerId']);
        }
        // ensure the json data is a string
        if (data['targetProcessServerId'] && !(typeof data['targetProcessServerId'] === 'string' || data['targetProcessServerId'] instanceof String)) {
            throw new Error("Expected the field `targetProcessServerId` to be a primitive type in the JSON string but got " + data['targetProcessServerId']);
        }
        // ensure the json data is a string
        if (data['updateType'] && !(typeof data['updateType'] === 'string' || data['updateType'] instanceof String)) {
            throw new Error("Expected the field `updateType` to be a primitive type in the JSON string but got " + data['updateType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['vmsToMigrate'])) {
            throw new Error("Expected the field `vmsToMigrate` to be an array in the JSON data but got " + data['vmsToMigrate']);
        }

        return true;
    }


}



/**
 * The container identifier.
 * @member {String} containerName
 */
FailoverProcessServerRequestProperties.prototype['containerName'] = undefined;

/**
 * The source process server.
 * @member {String} sourceProcessServerId
 */
FailoverProcessServerRequestProperties.prototype['sourceProcessServerId'] = undefined;

/**
 * The new process server.
 * @member {String} targetProcessServerId
 */
FailoverProcessServerRequestProperties.prototype['targetProcessServerId'] = undefined;

/**
 * A value for failover type. It can be systemlevel/serverlevel
 * @member {String} updateType
 */
FailoverProcessServerRequestProperties.prototype['updateType'] = undefined;

/**
 * The VMS to migrate.
 * @member {Array.<String>} vmsToMigrate
 */
FailoverProcessServerRequestProperties.prototype['vmsToMigrate'] = undefined;






export default FailoverProcessServerRequestProperties;

