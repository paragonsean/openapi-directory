/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Subnet from './Subnet';

/**
 * The NetworkProperties model module.
 * @module model/NetworkProperties
 * @version 2016-08-10
 */
class NetworkProperties {
    /**
     * Constructs a new <code>NetworkProperties</code>.
     * Network Properties
     * @alias module:model/NetworkProperties
     */
    constructor() { 
        
        NetworkProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkProperties} obj Optional instance to populate.
     * @return {module:model/NetworkProperties} The populated <code>NetworkProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkProperties();

            if (data.hasOwnProperty('fabricType')) {
                obj['fabricType'] = ApiClient.convertToType(data['fabricType'], 'String');
            }
            if (data.hasOwnProperty('friendlyName')) {
                obj['friendlyName'] = ApiClient.convertToType(data['friendlyName'], 'String');
            }
            if (data.hasOwnProperty('networkType')) {
                obj['networkType'] = ApiClient.convertToType(data['networkType'], 'String');
            }
            if (data.hasOwnProperty('subnets')) {
                obj['subnets'] = ApiClient.convertToType(data['subnets'], [Subnet]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fabricType'] && !(typeof data['fabricType'] === 'string' || data['fabricType'] instanceof String)) {
            throw new Error("Expected the field `fabricType` to be a primitive type in the JSON string but got " + data['fabricType']);
        }
        // ensure the json data is a string
        if (data['friendlyName'] && !(typeof data['friendlyName'] === 'string' || data['friendlyName'] instanceof String)) {
            throw new Error("Expected the field `friendlyName` to be a primitive type in the JSON string but got " + data['friendlyName']);
        }
        // ensure the json data is a string
        if (data['networkType'] && !(typeof data['networkType'] === 'string' || data['networkType'] instanceof String)) {
            throw new Error("Expected the field `networkType` to be a primitive type in the JSON string but got " + data['networkType']);
        }
        if (data['subnets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['subnets'])) {
                throw new Error("Expected the field `subnets` to be an array in the JSON data but got " + data['subnets']);
            }
            // validate the optional field `subnets` (array)
            for (const item of data['subnets']) {
                Subnet.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The Fabric Type.
 * @member {String} fabricType
 */
NetworkProperties.prototype['fabricType'] = undefined;

/**
 * The Friendly Name.
 * @member {String} friendlyName
 */
NetworkProperties.prototype['friendlyName'] = undefined;

/**
 * The Network Type.
 * @member {String} networkType
 */
NetworkProperties.prototype['networkType'] = undefined;

/**
 * The List of subnets.
 * @member {Array.<module:model/Subnet>} subnets
 */
NetworkProperties.prototype['subnets'] = undefined;






export default NetworkProperties;

