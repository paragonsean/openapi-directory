/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthError from './HealthError';
import ResourceHealthSummary from './ResourceHealthSummary';

/**
 * The VaultHealthProperties model module.
 * @module model/VaultHealthProperties
 * @version 2016-08-10
 */
class VaultHealthProperties {
    /**
     * Constructs a new <code>VaultHealthProperties</code>.
     * class to define the health summary of the Vault.
     * @alias module:model/VaultHealthProperties
     */
    constructor() { 
        
        VaultHealthProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VaultHealthProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VaultHealthProperties} obj Optional instance to populate.
     * @return {module:model/VaultHealthProperties} The populated <code>VaultHealthProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VaultHealthProperties();

            if (data.hasOwnProperty('fabricsHealth')) {
                obj['fabricsHealth'] = ResourceHealthSummary.constructFromObject(data['fabricsHealth']);
            }
            if (data.hasOwnProperty('protectedItemsHealth')) {
                obj['protectedItemsHealth'] = ResourceHealthSummary.constructFromObject(data['protectedItemsHealth']);
            }
            if (data.hasOwnProperty('vaultErrors')) {
                obj['vaultErrors'] = ApiClient.convertToType(data['vaultErrors'], [HealthError]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VaultHealthProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VaultHealthProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `fabricsHealth`
        if (data['fabricsHealth']) { // data not null
          ResourceHealthSummary.validateJSON(data['fabricsHealth']);
        }
        // validate the optional field `protectedItemsHealth`
        if (data['protectedItemsHealth']) { // data not null
          ResourceHealthSummary.validateJSON(data['protectedItemsHealth']);
        }
        if (data['vaultErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vaultErrors'])) {
                throw new Error("Expected the field `vaultErrors` to be an array in the JSON data but got " + data['vaultErrors']);
            }
            // validate the optional field `vaultErrors` (array)
            for (const item of data['vaultErrors']) {
                HealthError.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/ResourceHealthSummary} fabricsHealth
 */
VaultHealthProperties.prototype['fabricsHealth'] = undefined;

/**
 * @member {module:model/ResourceHealthSummary} protectedItemsHealth
 */
VaultHealthProperties.prototype['protectedItemsHealth'] = undefined;

/**
 * The list of errors on the vault.
 * @member {Array.<module:model/HealthError>} vaultErrors
 */
VaultHealthProperties.prototype['vaultErrors'] = undefined;






export default VaultHealthProperties;

