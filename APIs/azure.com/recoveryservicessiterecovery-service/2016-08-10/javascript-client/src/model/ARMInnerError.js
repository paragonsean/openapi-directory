/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MethodCallStatus from './MethodCallStatus';

/**
 * The ARMInnerError model module.
 * @module model/ARMInnerError
 * @version 2016-08-10
 */
class ARMInnerError {
    /**
     * Constructs a new <code>ARMInnerError</code>.
     * ARM internal error class for providing additional debug data.
     * @alias module:model/ARMInnerError
     */
    constructor() { 
        
        ARMInnerError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ARMInnerError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ARMInnerError} obj Optional instance to populate.
     * @return {module:model/ARMInnerError} The populated <code>ARMInnerError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ARMInnerError();

            if (data.hasOwnProperty('cloudId')) {
                obj['cloudId'] = ApiClient.convertToType(data['cloudId'], 'String');
            }
            if (data.hasOwnProperty('containerId')) {
                obj['containerId'] = ApiClient.convertToType(data['containerId'], 'String');
            }
            if (data.hasOwnProperty('fabricId')) {
                obj['fabricId'] = ApiClient.convertToType(data['fabricId'], 'String');
            }
            if (data.hasOwnProperty('hVClusterId')) {
                obj['hVClusterId'] = ApiClient.convertToType(data['hVClusterId'], 'String');
            }
            if (data.hasOwnProperty('hVHostId')) {
                obj['hVHostId'] = ApiClient.convertToType(data['hVHostId'], 'String');
            }
            if (data.hasOwnProperty('liveId')) {
                obj['liveId'] = ApiClient.convertToType(data['liveId'], 'String');
            }
            if (data.hasOwnProperty('methodStatus')) {
                obj['methodStatus'] = MethodCallStatus.constructFromObject(data['methodStatus']);
            }
            if (data.hasOwnProperty('networkId')) {
                obj['networkId'] = ApiClient.convertToType(data['networkId'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
            if (data.hasOwnProperty('serializedSRSLogContext')) {
                obj['serializedSRSLogContext'] = ApiClient.convertToType(data['serializedSRSLogContext'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
            if (data.hasOwnProperty('trace')) {
                obj['trace'] = ApiClient.convertToType(data['trace'], 'String');
            }
            if (data.hasOwnProperty('vmId')) {
                obj['vmId'] = ApiClient.convertToType(data['vmId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ARMInnerError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ARMInnerError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cloudId'] && !(typeof data['cloudId'] === 'string' || data['cloudId'] instanceof String)) {
            throw new Error("Expected the field `cloudId` to be a primitive type in the JSON string but got " + data['cloudId']);
        }
        // ensure the json data is a string
        if (data['containerId'] && !(typeof data['containerId'] === 'string' || data['containerId'] instanceof String)) {
            throw new Error("Expected the field `containerId` to be a primitive type in the JSON string but got " + data['containerId']);
        }
        // ensure the json data is a string
        if (data['fabricId'] && !(typeof data['fabricId'] === 'string' || data['fabricId'] instanceof String)) {
            throw new Error("Expected the field `fabricId` to be a primitive type in the JSON string but got " + data['fabricId']);
        }
        // ensure the json data is a string
        if (data['hVClusterId'] && !(typeof data['hVClusterId'] === 'string' || data['hVClusterId'] instanceof String)) {
            throw new Error("Expected the field `hVClusterId` to be a primitive type in the JSON string but got " + data['hVClusterId']);
        }
        // ensure the json data is a string
        if (data['hVHostId'] && !(typeof data['hVHostId'] === 'string' || data['hVHostId'] instanceof String)) {
            throw new Error("Expected the field `hVHostId` to be a primitive type in the JSON string but got " + data['hVHostId']);
        }
        // ensure the json data is a string
        if (data['liveId'] && !(typeof data['liveId'] === 'string' || data['liveId'] instanceof String)) {
            throw new Error("Expected the field `liveId` to be a primitive type in the JSON string but got " + data['liveId']);
        }
        // validate the optional field `methodStatus`
        if (data['methodStatus']) { // data not null
          MethodCallStatus.validateJSON(data['methodStatus']);
        }
        // ensure the json data is a string
        if (data['networkId'] && !(typeof data['networkId'] === 'string' || data['networkId'] instanceof String)) {
            throw new Error("Expected the field `networkId` to be a primitive type in the JSON string but got " + data['networkId']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }
        // ensure the json data is a string
        if (data['serializedSRSLogContext'] && !(typeof data['serializedSRSLogContext'] === 'string' || data['serializedSRSLogContext'] instanceof String)) {
            throw new Error("Expected the field `serializedSRSLogContext` to be a primitive type in the JSON string but got " + data['serializedSRSLogContext']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }
        // ensure the json data is a string
        if (data['trace'] && !(typeof data['trace'] === 'string' || data['trace'] instanceof String)) {
            throw new Error("Expected the field `trace` to be a primitive type in the JSON string but got " + data['trace']);
        }
        // ensure the json data is a string
        if (data['vmId'] && !(typeof data['vmId'] === 'string' || data['vmId'] instanceof String)) {
            throw new Error("Expected the field `vmId` to be a primitive type in the JSON string but got " + data['vmId']);
        }

        return true;
    }


}



/**
 * Gets cloud Id in exception.
 * @member {String} cloudId
 */
ARMInnerError.prototype['cloudId'] = undefined;

/**
 * Gets container Id of the caller.
 * @member {String} containerId
 */
ARMInnerError.prototype['containerId'] = undefined;

/**
 * Gets Fabric Id.
 * @member {String} fabricId
 */
ARMInnerError.prototype['fabricId'] = undefined;

/**
 * Gets hyperV cluster Id.
 * @member {String} hVClusterId
 */
ARMInnerError.prototype['hVClusterId'] = undefined;

/**
 * Gets hyperV host ID.
 * @member {String} hVHostId
 */
ARMInnerError.prototype['hVHostId'] = undefined;

/**
 * Gets Live Id of the caller.
 * @member {String} liveId
 */
ARMInnerError.prototype['liveId'] = undefined;

/**
 * @member {module:model/MethodCallStatus} methodStatus
 */
ARMInnerError.prototype['methodStatus'] = undefined;

/**
 * Gets network Id.
 * @member {String} networkId
 */
ARMInnerError.prototype['networkId'] = undefined;

/**
 * Gets resource id used in the call.
 * @member {String} resourceId
 */
ARMInnerError.prototype['resourceId'] = undefined;

/**
 * Gets caller resource name.
 * @member {String} resourceName
 */
ARMInnerError.prototype['resourceName'] = undefined;

/**
 * Gets serialized SRS log context.
 * @member {String} serializedSRSLogContext
 */
ARMInnerError.prototype['serializedSRSLogContext'] = undefined;

/**
 * Gets exception source.
 * @member {String} source
 */
ARMInnerError.prototype['source'] = undefined;

/**
 * Gets subscription Id.
 * @member {String} subscriptionId
 */
ARMInnerError.prototype['subscriptionId'] = undefined;

/**
 * Gets complete stack trace of the exception.
 * @member {String} trace
 */
ARMInnerError.prototype['trace'] = undefined;

/**
 * Gets Vm Id.
 * @member {String} vmId
 */
ARMInnerError.prototype['vmId'] = undefined;






export default ARMInnerError;

