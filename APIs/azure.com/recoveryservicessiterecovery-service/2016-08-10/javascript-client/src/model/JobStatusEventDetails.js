/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventSpecificDetails from './EventSpecificDetails';

/**
 * The JobStatusEventDetails model module.
 * @module model/JobStatusEventDetails
 * @version 2016-08-10
 */
class JobStatusEventDetails {
    /**
     * Constructs a new <code>JobStatusEventDetails</code>.
     * Model class for event details of a job status event.
     * @alias module:model/JobStatusEventDetails
     * @extends module:model/EventSpecificDetails
     * @implements module:model/EventSpecificDetails
     */
    constructor() { 
        EventSpecificDetails.initialize(this);
        JobStatusEventDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobStatusEventDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobStatusEventDetails} obj Optional instance to populate.
     * @return {module:model/JobStatusEventDetails} The populated <code>JobStatusEventDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobStatusEventDetails();
            EventSpecificDetails.constructFromObject(data, obj);
            EventSpecificDetails.constructFromObject(data, obj);

            if (data.hasOwnProperty('affectedObjectType')) {
                obj['affectedObjectType'] = ApiClient.convertToType(data['affectedObjectType'], 'String');
            }
            if (data.hasOwnProperty('jobFriendlyName')) {
                obj['jobFriendlyName'] = ApiClient.convertToType(data['jobFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
            }
            if (data.hasOwnProperty('jobStatus')) {
                obj['jobStatus'] = ApiClient.convertToType(data['jobStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobStatusEventDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobStatusEventDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['affectedObjectType'] && !(typeof data['affectedObjectType'] === 'string' || data['affectedObjectType'] instanceof String)) {
            throw new Error("Expected the field `affectedObjectType` to be a primitive type in the JSON string but got " + data['affectedObjectType']);
        }
        // ensure the json data is a string
        if (data['jobFriendlyName'] && !(typeof data['jobFriendlyName'] === 'string' || data['jobFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `jobFriendlyName` to be a primitive type in the JSON string but got " + data['jobFriendlyName']);
        }
        // ensure the json data is a string
        if (data['jobId'] && !(typeof data['jobId'] === 'string' || data['jobId'] instanceof String)) {
            throw new Error("Expected the field `jobId` to be a primitive type in the JSON string but got " + data['jobId']);
        }
        // ensure the json data is a string
        if (data['jobStatus'] && !(typeof data['jobStatus'] === 'string' || data['jobStatus'] instanceof String)) {
            throw new Error("Expected the field `jobStatus` to be a primitive type in the JSON string but got " + data['jobStatus']);
        }

        return true;
    }


}



/**
 * AffectedObjectType for the event.
 * @member {String} affectedObjectType
 */
JobStatusEventDetails.prototype['affectedObjectType'] = undefined;

/**
 * JobName for the Event.
 * @member {String} jobFriendlyName
 */
JobStatusEventDetails.prototype['jobFriendlyName'] = undefined;

/**
 * Job arm id for the event.
 * @member {String} jobId
 */
JobStatusEventDetails.prototype['jobId'] = undefined;

/**
 * JobStatus for the Event.
 * @member {String} jobStatus
 */
JobStatusEventDetails.prototype['jobStatus'] = undefined;


// Implement EventSpecificDetails interface:
/**
 * Gets the class type. Overridden in derived classes.
 * @member {String} instanceType
 */
EventSpecificDetails.prototype['instanceType'] = undefined;




export default JobStatusEventDetails;

