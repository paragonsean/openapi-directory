/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthError from './HealthError';
import ProtectionContainerMappingProviderSpecificDetails from './ProtectionContainerMappingProviderSpecificDetails';

/**
 * The ProtectionContainerMappingProperties model module.
 * @module model/ProtectionContainerMappingProperties
 * @version 2016-08-10
 */
class ProtectionContainerMappingProperties {
    /**
     * Constructs a new <code>ProtectionContainerMappingProperties</code>.
     * Protection container mapping properties.
     * @alias module:model/ProtectionContainerMappingProperties
     */
    constructor() { 
        
        ProtectionContainerMappingProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProtectionContainerMappingProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProtectionContainerMappingProperties} obj Optional instance to populate.
     * @return {module:model/ProtectionContainerMappingProperties} The populated <code>ProtectionContainerMappingProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProtectionContainerMappingProperties();

            if (data.hasOwnProperty('health')) {
                obj['health'] = ApiClient.convertToType(data['health'], 'String');
            }
            if (data.hasOwnProperty('healthErrorDetails')) {
                obj['healthErrorDetails'] = ApiClient.convertToType(data['healthErrorDetails'], [HealthError]);
            }
            if (data.hasOwnProperty('policyFriendlyName')) {
                obj['policyFriendlyName'] = ApiClient.convertToType(data['policyFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('policyId')) {
                obj['policyId'] = ApiClient.convertToType(data['policyId'], 'String');
            }
            if (data.hasOwnProperty('providerSpecificDetails')) {
                obj['providerSpecificDetails'] = ProtectionContainerMappingProviderSpecificDetails.constructFromObject(data['providerSpecificDetails']);
            }
            if (data.hasOwnProperty('sourceFabricFriendlyName')) {
                obj['sourceFabricFriendlyName'] = ApiClient.convertToType(data['sourceFabricFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('sourceProtectionContainerFriendlyName')) {
                obj['sourceProtectionContainerFriendlyName'] = ApiClient.convertToType(data['sourceProtectionContainerFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('targetFabricFriendlyName')) {
                obj['targetFabricFriendlyName'] = ApiClient.convertToType(data['targetFabricFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('targetProtectionContainerFriendlyName')) {
                obj['targetProtectionContainerFriendlyName'] = ApiClient.convertToType(data['targetProtectionContainerFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('targetProtectionContainerId')) {
                obj['targetProtectionContainerId'] = ApiClient.convertToType(data['targetProtectionContainerId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProtectionContainerMappingProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProtectionContainerMappingProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['health'] && !(typeof data['health'] === 'string' || data['health'] instanceof String)) {
            throw new Error("Expected the field `health` to be a primitive type in the JSON string but got " + data['health']);
        }
        if (data['healthErrorDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['healthErrorDetails'])) {
                throw new Error("Expected the field `healthErrorDetails` to be an array in the JSON data but got " + data['healthErrorDetails']);
            }
            // validate the optional field `healthErrorDetails` (array)
            for (const item of data['healthErrorDetails']) {
                HealthError.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['policyFriendlyName'] && !(typeof data['policyFriendlyName'] === 'string' || data['policyFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `policyFriendlyName` to be a primitive type in the JSON string but got " + data['policyFriendlyName']);
        }
        // ensure the json data is a string
        if (data['policyId'] && !(typeof data['policyId'] === 'string' || data['policyId'] instanceof String)) {
            throw new Error("Expected the field `policyId` to be a primitive type in the JSON string but got " + data['policyId']);
        }
        // validate the optional field `providerSpecificDetails`
        if (data['providerSpecificDetails']) { // data not null
          ProtectionContainerMappingProviderSpecificDetails.validateJSON(data['providerSpecificDetails']);
        }
        // ensure the json data is a string
        if (data['sourceFabricFriendlyName'] && !(typeof data['sourceFabricFriendlyName'] === 'string' || data['sourceFabricFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `sourceFabricFriendlyName` to be a primitive type in the JSON string but got " + data['sourceFabricFriendlyName']);
        }
        // ensure the json data is a string
        if (data['sourceProtectionContainerFriendlyName'] && !(typeof data['sourceProtectionContainerFriendlyName'] === 'string' || data['sourceProtectionContainerFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `sourceProtectionContainerFriendlyName` to be a primitive type in the JSON string but got " + data['sourceProtectionContainerFriendlyName']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['targetFabricFriendlyName'] && !(typeof data['targetFabricFriendlyName'] === 'string' || data['targetFabricFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `targetFabricFriendlyName` to be a primitive type in the JSON string but got " + data['targetFabricFriendlyName']);
        }
        // ensure the json data is a string
        if (data['targetProtectionContainerFriendlyName'] && !(typeof data['targetProtectionContainerFriendlyName'] === 'string' || data['targetProtectionContainerFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `targetProtectionContainerFriendlyName` to be a primitive type in the JSON string but got " + data['targetProtectionContainerFriendlyName']);
        }
        // ensure the json data is a string
        if (data['targetProtectionContainerId'] && !(typeof data['targetProtectionContainerId'] === 'string' || data['targetProtectionContainerId'] instanceof String)) {
            throw new Error("Expected the field `targetProtectionContainerId` to be a primitive type in the JSON string but got " + data['targetProtectionContainerId']);
        }

        return true;
    }


}



/**
 * Health of pairing.
 * @member {String} health
 */
ProtectionContainerMappingProperties.prototype['health'] = undefined;

/**
 * Health error.
 * @member {Array.<module:model/HealthError>} healthErrorDetails
 */
ProtectionContainerMappingProperties.prototype['healthErrorDetails'] = undefined;

/**
 * Friendly name of replication policy.
 * @member {String} policyFriendlyName
 */
ProtectionContainerMappingProperties.prototype['policyFriendlyName'] = undefined;

/**
 * Policy ARM Id.
 * @member {String} policyId
 */
ProtectionContainerMappingProperties.prototype['policyId'] = undefined;

/**
 * @member {module:model/ProtectionContainerMappingProviderSpecificDetails} providerSpecificDetails
 */
ProtectionContainerMappingProperties.prototype['providerSpecificDetails'] = undefined;

/**
 * Friendly name of source fabric.
 * @member {String} sourceFabricFriendlyName
 */
ProtectionContainerMappingProperties.prototype['sourceFabricFriendlyName'] = undefined;

/**
 * Friendly name of source protection container.
 * @member {String} sourceProtectionContainerFriendlyName
 */
ProtectionContainerMappingProperties.prototype['sourceProtectionContainerFriendlyName'] = undefined;

/**
 * Association Status
 * @member {String} state
 */
ProtectionContainerMappingProperties.prototype['state'] = undefined;

/**
 * Friendly name of target fabric.
 * @member {String} targetFabricFriendlyName
 */
ProtectionContainerMappingProperties.prototype['targetFabricFriendlyName'] = undefined;

/**
 * Friendly name of paired container.
 * @member {String} targetProtectionContainerFriendlyName
 */
ProtectionContainerMappingProperties.prototype['targetProtectionContainerFriendlyName'] = undefined;

/**
 * Paired protection container ARM ID.
 * @member {String} targetProtectionContainerId
 */
ProtectionContainerMappingProperties.prototype['targetProtectionContainerId'] = undefined;






export default ProtectionContainerMappingProperties;

