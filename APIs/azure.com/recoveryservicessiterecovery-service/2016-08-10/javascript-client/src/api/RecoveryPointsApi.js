/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RecoveryPoint from '../model/RecoveryPoint';
import RecoveryPointCollection from '../model/RecoveryPointCollection';

/**
* RecoveryPoints service.
* @module api/RecoveryPointsApi
* @version 2016-08-10
*/
export default class RecoveryPointsApi {

    /**
    * Constructs a new RecoveryPointsApi. 
    * @alias module:api/RecoveryPointsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the recoveryPointsGet operation.
     * @callback module:api/RecoveryPointsApi~recoveryPointsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RecoveryPoint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a recovery point.
     * Get the details of specified recovery point.
     * @param {String} apiVersion Client Api Version.
     * @param {String} resourceName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} fabricName The fabric name.
     * @param {String} protectionContainerName The protection container name.
     * @param {String} replicatedProtectedItemName The replication protected item's name.
     * @param {String} recoveryPointName The recovery point name.
     * @param {module:api/RecoveryPointsApi~recoveryPointsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RecoveryPoint}
     */
    recoveryPointsGet(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, protectionContainerName, replicatedProtectedItemName, recoveryPointName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling recoveryPointsGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling recoveryPointsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling recoveryPointsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling recoveryPointsGet");
      }
      // verify the required parameter 'fabricName' is set
      if (fabricName === undefined || fabricName === null) {
        throw new Error("Missing the required parameter 'fabricName' when calling recoveryPointsGet");
      }
      // verify the required parameter 'protectionContainerName' is set
      if (protectionContainerName === undefined || protectionContainerName === null) {
        throw new Error("Missing the required parameter 'protectionContainerName' when calling recoveryPointsGet");
      }
      // verify the required parameter 'replicatedProtectedItemName' is set
      if (replicatedProtectedItemName === undefined || replicatedProtectedItemName === null) {
        throw new Error("Missing the required parameter 'replicatedProtectedItemName' when calling recoveryPointsGet");
      }
      // verify the required parameter 'recoveryPointName' is set
      if (recoveryPointName === undefined || recoveryPointName === null) {
        throw new Error("Missing the required parameter 'recoveryPointName' when calling recoveryPointsGet");
      }

      let pathParams = {
        'resourceName': resourceName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'fabricName': fabricName,
        'protectionContainerName': protectionContainerName,
        'replicatedProtectedItemName': replicatedProtectedItemName,
        'recoveryPointName': recoveryPointName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RecoveryPoint;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/recoveryPoints/{recoveryPointName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the recoveryPointsListByReplicationProtectedItems operation.
     * @callback module:api/RecoveryPointsApi~recoveryPointsListByReplicationProtectedItemsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RecoveryPointCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get recovery points for a replication protected item.
     * Lists the available recovery points for a replication protected item.
     * @param {String} apiVersion Client Api Version.
     * @param {String} resourceName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} fabricName The fabric name.
     * @param {String} protectionContainerName The protection container name.
     * @param {String} replicatedProtectedItemName The replication protected item's name.
     * @param {module:api/RecoveryPointsApi~recoveryPointsListByReplicationProtectedItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RecoveryPointCollection}
     */
    recoveryPointsListByReplicationProtectedItems(apiVersion, resourceName, resourceGroupName, subscriptionId, fabricName, protectionContainerName, replicatedProtectedItemName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling recoveryPointsListByReplicationProtectedItems");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling recoveryPointsListByReplicationProtectedItems");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling recoveryPointsListByReplicationProtectedItems");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling recoveryPointsListByReplicationProtectedItems");
      }
      // verify the required parameter 'fabricName' is set
      if (fabricName === undefined || fabricName === null) {
        throw new Error("Missing the required parameter 'fabricName' when calling recoveryPointsListByReplicationProtectedItems");
      }
      // verify the required parameter 'protectionContainerName' is set
      if (protectionContainerName === undefined || protectionContainerName === null) {
        throw new Error("Missing the required parameter 'protectionContainerName' when calling recoveryPointsListByReplicationProtectedItems");
      }
      // verify the required parameter 'replicatedProtectedItemName' is set
      if (replicatedProtectedItemName === undefined || replicatedProtectedItemName === null) {
        throw new Error("Missing the required parameter 'replicatedProtectedItemName' when calling recoveryPointsListByReplicationProtectedItems");
      }

      let pathParams = {
        'resourceName': resourceName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'fabricName': fabricName,
        'protectionContainerName': protectionContainerName,
        'replicatedProtectedItemName': replicatedProtectedItemName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RecoveryPointCollection;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/recoveryPoints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
