/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMethodCallStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMethodCallStatus::OAIMethodCallStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMethodCallStatus::OAIMethodCallStatus() {
    this->initializeModel();
}

OAIMethodCallStatus::~OAIMethodCallStatus() {}

void OAIMethodCallStatus::initializeModel() {

    m_contains_generic_parameters_isSet = false;
    m_contains_generic_parameters_isValid = false;

    m_is_virtual_isSet = false;
    m_is_virtual_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;
}

void OAIMethodCallStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMethodCallStatus::fromJsonObject(QJsonObject json) {

    m_contains_generic_parameters_isValid = ::OpenAPI::fromJsonValue(m_contains_generic_parameters, json[QString("containsGenericParameters")]);
    m_contains_generic_parameters_isSet = !json[QString("containsGenericParameters")].isNull() && m_contains_generic_parameters_isValid;

    m_is_virtual_isValid = ::OpenAPI::fromJsonValue(m_is_virtual, json[QString("isVirtual")]);
    m_is_virtual_isSet = !json[QString("isVirtual")].isNull() && m_is_virtual_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;
}

QString OAIMethodCallStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMethodCallStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_contains_generic_parameters_isSet) {
        obj.insert(QString("containsGenericParameters"), ::OpenAPI::toJsonValue(m_contains_generic_parameters));
    }
    if (m_is_virtual_isSet) {
        obj.insert(QString("isVirtual"), ::OpenAPI::toJsonValue(m_is_virtual));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    return obj;
}

QString OAIMethodCallStatus::getContainsGenericParameters() const {
    return m_contains_generic_parameters;
}
void OAIMethodCallStatus::setContainsGenericParameters(const QString &contains_generic_parameters) {
    m_contains_generic_parameters = contains_generic_parameters;
    m_contains_generic_parameters_isSet = true;
}

bool OAIMethodCallStatus::is_contains_generic_parameters_Set() const{
    return m_contains_generic_parameters_isSet;
}

bool OAIMethodCallStatus::is_contains_generic_parameters_Valid() const{
    return m_contains_generic_parameters_isValid;
}

QString OAIMethodCallStatus::getIsVirtual() const {
    return m_is_virtual;
}
void OAIMethodCallStatus::setIsVirtual(const QString &is_virtual) {
    m_is_virtual = is_virtual;
    m_is_virtual_isSet = true;
}

bool OAIMethodCallStatus::is_is_virtual_Set() const{
    return m_is_virtual_isSet;
}

bool OAIMethodCallStatus::is_is_virtual_Valid() const{
    return m_is_virtual_isValid;
}

QList<QString> OAIMethodCallStatus::getParameters() const {
    return m_parameters;
}
void OAIMethodCallStatus::setParameters(const QList<QString> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIMethodCallStatus::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIMethodCallStatus::is_parameters_Valid() const{
    return m_parameters_isValid;
}

bool OAIMethodCallStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contains_generic_parameters_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_virtual_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMethodCallStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
