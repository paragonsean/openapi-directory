/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfigureAlertRequestProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfigureAlertRequestProperties::OAIConfigureAlertRequestProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfigureAlertRequestProperties::OAIConfigureAlertRequestProperties() {
    this->initializeModel();
}

OAIConfigureAlertRequestProperties::~OAIConfigureAlertRequestProperties() {}

void OAIConfigureAlertRequestProperties::initializeModel() {

    m_custom_email_addresses_isSet = false;
    m_custom_email_addresses_isValid = false;

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_send_to_owners_isSet = false;
    m_send_to_owners_isValid = false;
}

void OAIConfigureAlertRequestProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfigureAlertRequestProperties::fromJsonObject(QJsonObject json) {

    m_custom_email_addresses_isValid = ::OpenAPI::fromJsonValue(m_custom_email_addresses, json[QString("customEmailAddresses")]);
    m_custom_email_addresses_isSet = !json[QString("customEmailAddresses")].isNull() && m_custom_email_addresses_isValid;

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;

    m_send_to_owners_isValid = ::OpenAPI::fromJsonValue(m_send_to_owners, json[QString("sendToOwners")]);
    m_send_to_owners_isSet = !json[QString("sendToOwners")].isNull() && m_send_to_owners_isValid;
}

QString OAIConfigureAlertRequestProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfigureAlertRequestProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_email_addresses.size() > 0) {
        obj.insert(QString("customEmailAddresses"), ::OpenAPI::toJsonValue(m_custom_email_addresses));
    }
    if (m_locale_isSet) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_send_to_owners_isSet) {
        obj.insert(QString("sendToOwners"), ::OpenAPI::toJsonValue(m_send_to_owners));
    }
    return obj;
}

QList<QString> OAIConfigureAlertRequestProperties::getCustomEmailAddresses() const {
    return m_custom_email_addresses;
}
void OAIConfigureAlertRequestProperties::setCustomEmailAddresses(const QList<QString> &custom_email_addresses) {
    m_custom_email_addresses = custom_email_addresses;
    m_custom_email_addresses_isSet = true;
}

bool OAIConfigureAlertRequestProperties::is_custom_email_addresses_Set() const{
    return m_custom_email_addresses_isSet;
}

bool OAIConfigureAlertRequestProperties::is_custom_email_addresses_Valid() const{
    return m_custom_email_addresses_isValid;
}

QString OAIConfigureAlertRequestProperties::getLocale() const {
    return m_locale;
}
void OAIConfigureAlertRequestProperties::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIConfigureAlertRequestProperties::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIConfigureAlertRequestProperties::is_locale_Valid() const{
    return m_locale_isValid;
}

QString OAIConfigureAlertRequestProperties::getSendToOwners() const {
    return m_send_to_owners;
}
void OAIConfigureAlertRequestProperties::setSendToOwners(const QString &send_to_owners) {
    m_send_to_owners = send_to_owners;
    m_send_to_owners_isSet = true;
}

bool OAIConfigureAlertRequestProperties::is_send_to_owners_Set() const{
    return m_send_to_owners_isSet;
}

bool OAIConfigureAlertRequestProperties::is_send_to_owners_Valid() const{
    return m_send_to_owners_isValid;
}

bool OAIConfigureAlertRequestProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_email_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_to_owners_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfigureAlertRequestProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
