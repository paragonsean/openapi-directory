/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecoveryServicesProviderProperties.h
 *
 * Recovery services provider properties.
 */

#ifndef OAIRecoveryServicesProviderProperties_H
#define OAIRecoveryServicesProviderProperties_H

#include <QJsonObject>

#include "OAIHealthError.h"
#include "OAIIdentityInformation.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHealthError;
class OAIIdentityInformation;

class OAIRecoveryServicesProviderProperties : public OAIObject {
public:
    OAIRecoveryServicesProviderProperties();
    OAIRecoveryServicesProviderProperties(QString json);
    ~OAIRecoveryServicesProviderProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedScenarios() const;
    void setAllowedScenarios(const QList<QString> &allowed_scenarios);
    bool is_allowed_scenarios_Set() const;
    bool is_allowed_scenarios_Valid() const;

    QString getConnectionStatus() const;
    void setConnectionStatus(const QString &connection_status);
    bool is_connection_status_Set() const;
    bool is_connection_status_Valid() const;

    QString getDraIdentifier() const;
    void setDraIdentifier(const QString &dra_identifier);
    bool is_dra_identifier_Set() const;
    bool is_dra_identifier_Valid() const;

    QString getFabricFriendlyName() const;
    void setFabricFriendlyName(const QString &fabric_friendly_name);
    bool is_fabric_friendly_name_Set() const;
    bool is_fabric_friendly_name_Valid() const;

    QString getFabricType() const;
    void setFabricType(const QString &fabric_type);
    bool is_fabric_type_Set() const;
    bool is_fabric_type_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QList<OAIHealthError> getHealthErrorDetails() const;
    void setHealthErrorDetails(const QList<OAIHealthError> &health_error_details);
    bool is_health_error_details_Set() const;
    bool is_health_error_details_Valid() const;

    OAIIdentityInformation getIdentityDetails() const;
    void setIdentityDetails(const OAIIdentityInformation &identity_details);
    bool is_identity_details_Set() const;
    bool is_identity_details_Valid() const;

    QDateTime getLastHeartBeat() const;
    void setLastHeartBeat(const QDateTime &last_heart_beat);
    bool is_last_heart_beat_Set() const;
    bool is_last_heart_beat_Valid() const;

    qint32 getProtectedItemCount() const;
    void setProtectedItemCount(const qint32 &protected_item_count);
    bool is_protected_item_count_Set() const;
    bool is_protected_item_count_Valid() const;

    QString getProviderVersion() const;
    void setProviderVersion(const QString &provider_version);
    bool is_provider_version_Set() const;
    bool is_provider_version_Valid() const;

    QDateTime getProviderVersionExpiryDate() const;
    void setProviderVersionExpiryDate(const QDateTime &provider_version_expiry_date);
    bool is_provider_version_expiry_date_Set() const;
    bool is_provider_version_expiry_date_Valid() const;

    QString getProviderVersionState() const;
    void setProviderVersionState(const QString &provider_version_state);
    bool is_provider_version_state_Set() const;
    bool is_provider_version_state_Valid() const;

    QString getServerVersion() const;
    void setServerVersion(const QString &server_version);
    bool is_server_version_Set() const;
    bool is_server_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_scenarios;
    bool m_allowed_scenarios_isSet;
    bool m_allowed_scenarios_isValid;

    QString m_connection_status;
    bool m_connection_status_isSet;
    bool m_connection_status_isValid;

    QString m_dra_identifier;
    bool m_dra_identifier_isSet;
    bool m_dra_identifier_isValid;

    QString m_fabric_friendly_name;
    bool m_fabric_friendly_name_isSet;
    bool m_fabric_friendly_name_isValid;

    QString m_fabric_type;
    bool m_fabric_type_isSet;
    bool m_fabric_type_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QList<OAIHealthError> m_health_error_details;
    bool m_health_error_details_isSet;
    bool m_health_error_details_isValid;

    OAIIdentityInformation m_identity_details;
    bool m_identity_details_isSet;
    bool m_identity_details_isValid;

    QDateTime m_last_heart_beat;
    bool m_last_heart_beat_isSet;
    bool m_last_heart_beat_isValid;

    qint32 m_protected_item_count;
    bool m_protected_item_count_isSet;
    bool m_protected_item_count_isValid;

    QString m_provider_version;
    bool m_provider_version_isSet;
    bool m_provider_version_isValid;

    QDateTime m_provider_version_expiry_date;
    bool m_provider_version_expiry_date_isSet;
    bool m_provider_version_expiry_date_isValid;

    QString m_provider_version_state;
    bool m_provider_version_state_isSet;
    bool m_provider_version_state_isValid;

    QString m_server_version;
    bool m_server_version_isSet;
    bool m_server_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecoveryServicesProviderProperties)

#endif // OAIRecoveryServicesProviderProperties_H
