/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHealthErrorSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHealthErrorSummary::OAIHealthErrorSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHealthErrorSummary::OAIHealthErrorSummary() {
    this->initializeModel();
}

OAIHealthErrorSummary::~OAIHealthErrorSummary() {}

void OAIHealthErrorSummary::initializeModel() {

    m_affected_resource_correlation_ids_isSet = false;
    m_affected_resource_correlation_ids_isValid = false;

    m_affected_resource_subtype_isSet = false;
    m_affected_resource_subtype_isValid = false;

    m_affected_resource_type_isSet = false;
    m_affected_resource_type_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;

    m_severity_isSet = false;
    m_severity_isValid = false;

    m_summary_code_isSet = false;
    m_summary_code_isValid = false;

    m_summary_message_isSet = false;
    m_summary_message_isValid = false;
}

void OAIHealthErrorSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHealthErrorSummary::fromJsonObject(QJsonObject json) {

    m_affected_resource_correlation_ids_isValid = ::OpenAPI::fromJsonValue(m_affected_resource_correlation_ids, json[QString("affectedResourceCorrelationIds")]);
    m_affected_resource_correlation_ids_isSet = !json[QString("affectedResourceCorrelationIds")].isNull() && m_affected_resource_correlation_ids_isValid;

    m_affected_resource_subtype_isValid = ::OpenAPI::fromJsonValue(m_affected_resource_subtype, json[QString("affectedResourceSubtype")]);
    m_affected_resource_subtype_isSet = !json[QString("affectedResourceSubtype")].isNull() && m_affected_resource_subtype_isValid;

    m_affected_resource_type_isValid = ::OpenAPI::fromJsonValue(m_affected_resource_type, json[QString("affectedResourceType")]);
    m_affected_resource_type_isSet = !json[QString("affectedResourceType")].isNull() && m_affected_resource_type_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_severity_isValid = ::OpenAPI::fromJsonValue(m_severity, json[QString("severity")]);
    m_severity_isSet = !json[QString("severity")].isNull() && m_severity_isValid;

    m_summary_code_isValid = ::OpenAPI::fromJsonValue(m_summary_code, json[QString("summaryCode")]);
    m_summary_code_isSet = !json[QString("summaryCode")].isNull() && m_summary_code_isValid;

    m_summary_message_isValid = ::OpenAPI::fromJsonValue(m_summary_message, json[QString("summaryMessage")]);
    m_summary_message_isSet = !json[QString("summaryMessage")].isNull() && m_summary_message_isValid;
}

QString OAIHealthErrorSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHealthErrorSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_affected_resource_correlation_ids.size() > 0) {
        obj.insert(QString("affectedResourceCorrelationIds"), ::OpenAPI::toJsonValue(m_affected_resource_correlation_ids));
    }
    if (m_affected_resource_subtype_isSet) {
        obj.insert(QString("affectedResourceSubtype"), ::OpenAPI::toJsonValue(m_affected_resource_subtype));
    }
    if (m_affected_resource_type_isSet) {
        obj.insert(QString("affectedResourceType"), ::OpenAPI::toJsonValue(m_affected_resource_type));
    }
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_severity_isSet) {
        obj.insert(QString("severity"), ::OpenAPI::toJsonValue(m_severity));
    }
    if (m_summary_code_isSet) {
        obj.insert(QString("summaryCode"), ::OpenAPI::toJsonValue(m_summary_code));
    }
    if (m_summary_message_isSet) {
        obj.insert(QString("summaryMessage"), ::OpenAPI::toJsonValue(m_summary_message));
    }
    return obj;
}

QList<QString> OAIHealthErrorSummary::getAffectedResourceCorrelationIds() const {
    return m_affected_resource_correlation_ids;
}
void OAIHealthErrorSummary::setAffectedResourceCorrelationIds(const QList<QString> &affected_resource_correlation_ids) {
    m_affected_resource_correlation_ids = affected_resource_correlation_ids;
    m_affected_resource_correlation_ids_isSet = true;
}

bool OAIHealthErrorSummary::is_affected_resource_correlation_ids_Set() const{
    return m_affected_resource_correlation_ids_isSet;
}

bool OAIHealthErrorSummary::is_affected_resource_correlation_ids_Valid() const{
    return m_affected_resource_correlation_ids_isValid;
}

QString OAIHealthErrorSummary::getAffectedResourceSubtype() const {
    return m_affected_resource_subtype;
}
void OAIHealthErrorSummary::setAffectedResourceSubtype(const QString &affected_resource_subtype) {
    m_affected_resource_subtype = affected_resource_subtype;
    m_affected_resource_subtype_isSet = true;
}

bool OAIHealthErrorSummary::is_affected_resource_subtype_Set() const{
    return m_affected_resource_subtype_isSet;
}

bool OAIHealthErrorSummary::is_affected_resource_subtype_Valid() const{
    return m_affected_resource_subtype_isValid;
}

QString OAIHealthErrorSummary::getAffectedResourceType() const {
    return m_affected_resource_type;
}
void OAIHealthErrorSummary::setAffectedResourceType(const QString &affected_resource_type) {
    m_affected_resource_type = affected_resource_type;
    m_affected_resource_type_isSet = true;
}

bool OAIHealthErrorSummary::is_affected_resource_type_Set() const{
    return m_affected_resource_type_isSet;
}

bool OAIHealthErrorSummary::is_affected_resource_type_Valid() const{
    return m_affected_resource_type_isValid;
}

QString OAIHealthErrorSummary::getCategory() const {
    return m_category;
}
void OAIHealthErrorSummary::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIHealthErrorSummary::is_category_Set() const{
    return m_category_isSet;
}

bool OAIHealthErrorSummary::is_category_Valid() const{
    return m_category_isValid;
}

QString OAIHealthErrorSummary::getSeverity() const {
    return m_severity;
}
void OAIHealthErrorSummary::setSeverity(const QString &severity) {
    m_severity = severity;
    m_severity_isSet = true;
}

bool OAIHealthErrorSummary::is_severity_Set() const{
    return m_severity_isSet;
}

bool OAIHealthErrorSummary::is_severity_Valid() const{
    return m_severity_isValid;
}

QString OAIHealthErrorSummary::getSummaryCode() const {
    return m_summary_code;
}
void OAIHealthErrorSummary::setSummaryCode(const QString &summary_code) {
    m_summary_code = summary_code;
    m_summary_code_isSet = true;
}

bool OAIHealthErrorSummary::is_summary_code_Set() const{
    return m_summary_code_isSet;
}

bool OAIHealthErrorSummary::is_summary_code_Valid() const{
    return m_summary_code_isValid;
}

QString OAIHealthErrorSummary::getSummaryMessage() const {
    return m_summary_message;
}
void OAIHealthErrorSummary::setSummaryMessage(const QString &summary_message) {
    m_summary_message = summary_message;
    m_summary_message_isSet = true;
}

bool OAIHealthErrorSummary::is_summary_message_Set() const{
    return m_summary_message_isSet;
}

bool OAIHealthErrorSummary::is_summary_message_Valid() const{
    return m_summary_message_isValid;
}

bool OAIHealthErrorSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_affected_resource_correlation_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_affected_resource_subtype_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_affected_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_severity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHealthErrorSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
