/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProtectedItemsQueryParameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProtectedItemsQueryParameter::OAIProtectedItemsQueryParameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProtectedItemsQueryParameter::OAIProtectedItemsQueryParameter() {
    this->initializeModel();
}

OAIProtectedItemsQueryParameter::~OAIProtectedItemsQueryParameter() {}

void OAIProtectedItemsQueryParameter::initializeModel() {

    m_recovery_plan_name_isSet = false;
    m_recovery_plan_name_isValid = false;

    m_source_fabric_name_isSet = false;
    m_source_fabric_name_isValid = false;

    m_v_center_name_isSet = false;
    m_v_center_name_isValid = false;
}

void OAIProtectedItemsQueryParameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProtectedItemsQueryParameter::fromJsonObject(QJsonObject json) {

    m_recovery_plan_name_isValid = ::OpenAPI::fromJsonValue(m_recovery_plan_name, json[QString("recoveryPlanName")]);
    m_recovery_plan_name_isSet = !json[QString("recoveryPlanName")].isNull() && m_recovery_plan_name_isValid;

    m_source_fabric_name_isValid = ::OpenAPI::fromJsonValue(m_source_fabric_name, json[QString("sourceFabricName")]);
    m_source_fabric_name_isSet = !json[QString("sourceFabricName")].isNull() && m_source_fabric_name_isValid;

    m_v_center_name_isValid = ::OpenAPI::fromJsonValue(m_v_center_name, json[QString("vCenterName")]);
    m_v_center_name_isSet = !json[QString("vCenterName")].isNull() && m_v_center_name_isValid;
}

QString OAIProtectedItemsQueryParameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProtectedItemsQueryParameter::asJsonObject() const {
    QJsonObject obj;
    if (m_recovery_plan_name_isSet) {
        obj.insert(QString("recoveryPlanName"), ::OpenAPI::toJsonValue(m_recovery_plan_name));
    }
    if (m_source_fabric_name_isSet) {
        obj.insert(QString("sourceFabricName"), ::OpenAPI::toJsonValue(m_source_fabric_name));
    }
    if (m_v_center_name_isSet) {
        obj.insert(QString("vCenterName"), ::OpenAPI::toJsonValue(m_v_center_name));
    }
    return obj;
}

QString OAIProtectedItemsQueryParameter::getRecoveryPlanName() const {
    return m_recovery_plan_name;
}
void OAIProtectedItemsQueryParameter::setRecoveryPlanName(const QString &recovery_plan_name) {
    m_recovery_plan_name = recovery_plan_name;
    m_recovery_plan_name_isSet = true;
}

bool OAIProtectedItemsQueryParameter::is_recovery_plan_name_Set() const{
    return m_recovery_plan_name_isSet;
}

bool OAIProtectedItemsQueryParameter::is_recovery_plan_name_Valid() const{
    return m_recovery_plan_name_isValid;
}

QString OAIProtectedItemsQueryParameter::getSourceFabricName() const {
    return m_source_fabric_name;
}
void OAIProtectedItemsQueryParameter::setSourceFabricName(const QString &source_fabric_name) {
    m_source_fabric_name = source_fabric_name;
    m_source_fabric_name_isSet = true;
}

bool OAIProtectedItemsQueryParameter::is_source_fabric_name_Set() const{
    return m_source_fabric_name_isSet;
}

bool OAIProtectedItemsQueryParameter::is_source_fabric_name_Valid() const{
    return m_source_fabric_name_isValid;
}

QString OAIProtectedItemsQueryParameter::getVCenterName() const {
    return m_v_center_name;
}
void OAIProtectedItemsQueryParameter::setVCenterName(const QString &v_center_name) {
    m_v_center_name = v_center_name;
    m_v_center_name_isSet = true;
}

bool OAIProtectedItemsQueryParameter::is_v_center_name_Set() const{
    return m_v_center_name_isSet;
}

bool OAIProtectedItemsQueryParameter::is_v_center_name_Valid() const{
    return m_v_center_name_isValid;
}

bool OAIProtectedItemsQueryParameter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recovery_plan_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_fabric_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_v_center_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProtectedItemsQueryParameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
