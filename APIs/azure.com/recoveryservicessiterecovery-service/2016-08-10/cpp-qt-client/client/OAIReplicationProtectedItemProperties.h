/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplicationProtectedItemProperties.h
 *
 * Replication protected item custom data details.
 */

#ifndef OAIReplicationProtectedItemProperties_H
#define OAIReplicationProtectedItemProperties_H

#include <QJsonObject>

#include "OAICurrentScenarioDetails.h"
#include "OAIHealthError.h"
#include "OAIReplicationProviderSpecificSettings.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICurrentScenarioDetails;
class OAIHealthError;
class OAIReplicationProviderSpecificSettings;

class OAIReplicationProtectedItemProperties : public OAIObject {
public:
    OAIReplicationProtectedItemProperties();
    OAIReplicationProtectedItemProperties(QString json);
    ~OAIReplicationProtectedItemProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActiveLocation() const;
    void setActiveLocation(const QString &active_location);
    bool is_active_location_Set() const;
    bool is_active_location_Valid() const;

    QList<QString> getAllowedOperations() const;
    void setAllowedOperations(const QList<QString> &allowed_operations);
    bool is_allowed_operations_Set() const;
    bool is_allowed_operations_Valid() const;

    OAICurrentScenarioDetails getCurrentScenario() const;
    void setCurrentScenario(const OAICurrentScenarioDetails &current_scenario);
    bool is_current_scenario_Set() const;
    bool is_current_scenario_Valid() const;

    QString getFailoverHealth() const;
    void setFailoverHealth(const QString &failover_health);
    bool is_failover_health_Set() const;
    bool is_failover_health_Valid() const;

    QList<OAIHealthError> getFailoverHealthErrors() const;
    void setFailoverHealthErrors(const QList<OAIHealthError> &failover_health_errors);
    bool is_failover_health_errors_Set() const;
    bool is_failover_health_errors_Valid() const;

    QString getFailoverRecoveryPointId() const;
    void setFailoverRecoveryPointId(const QString &failover_recovery_point_id);
    bool is_failover_recovery_point_id_Set() const;
    bool is_failover_recovery_point_id_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QDateTime getLastSuccessfulFailoverTime() const;
    void setLastSuccessfulFailoverTime(const QDateTime &last_successful_failover_time);
    bool is_last_successful_failover_time_Set() const;
    bool is_last_successful_failover_time_Valid() const;

    QDateTime getLastSuccessfulTestFailoverTime() const;
    void setLastSuccessfulTestFailoverTime(const QDateTime &last_successful_test_failover_time);
    bool is_last_successful_test_failover_time_Set() const;
    bool is_last_successful_test_failover_time_Valid() const;

    QString getPolicyFriendlyName() const;
    void setPolicyFriendlyName(const QString &policy_friendly_name);
    bool is_policy_friendly_name_Set() const;
    bool is_policy_friendly_name_Valid() const;

    QString getPolicyId() const;
    void setPolicyId(const QString &policy_id);
    bool is_policy_id_Set() const;
    bool is_policy_id_Valid() const;

    QString getPrimaryFabricFriendlyName() const;
    void setPrimaryFabricFriendlyName(const QString &primary_fabric_friendly_name);
    bool is_primary_fabric_friendly_name_Set() const;
    bool is_primary_fabric_friendly_name_Valid() const;

    QString getPrimaryProtectionContainerFriendlyName() const;
    void setPrimaryProtectionContainerFriendlyName(const QString &primary_protection_container_friendly_name);
    bool is_primary_protection_container_friendly_name_Set() const;
    bool is_primary_protection_container_friendly_name_Valid() const;

    QString getProtectableItemId() const;
    void setProtectableItemId(const QString &protectable_item_id);
    bool is_protectable_item_id_Set() const;
    bool is_protectable_item_id_Valid() const;

    QString getProtectedItemType() const;
    void setProtectedItemType(const QString &protected_item_type);
    bool is_protected_item_type_Set() const;
    bool is_protected_item_type_Valid() const;

    QString getProtectionState() const;
    void setProtectionState(const QString &protection_state);
    bool is_protection_state_Set() const;
    bool is_protection_state_Valid() const;

    QString getProtectionStateDescription() const;
    void setProtectionStateDescription(const QString &protection_state_description);
    bool is_protection_state_description_Set() const;
    bool is_protection_state_description_Valid() const;

    OAIReplicationProviderSpecificSettings getProviderSpecificDetails() const;
    void setProviderSpecificDetails(const OAIReplicationProviderSpecificSettings &provider_specific_details);
    bool is_provider_specific_details_Set() const;
    bool is_provider_specific_details_Valid() const;

    QString getRecoveryContainerId() const;
    void setRecoveryContainerId(const QString &recovery_container_id);
    bool is_recovery_container_id_Set() const;
    bool is_recovery_container_id_Valid() const;

    QString getRecoveryFabricFriendlyName() const;
    void setRecoveryFabricFriendlyName(const QString &recovery_fabric_friendly_name);
    bool is_recovery_fabric_friendly_name_Set() const;
    bool is_recovery_fabric_friendly_name_Valid() const;

    QString getRecoveryFabricId() const;
    void setRecoveryFabricId(const QString &recovery_fabric_id);
    bool is_recovery_fabric_id_Set() const;
    bool is_recovery_fabric_id_Valid() const;

    QString getRecoveryProtectionContainerFriendlyName() const;
    void setRecoveryProtectionContainerFriendlyName(const QString &recovery_protection_container_friendly_name);
    bool is_recovery_protection_container_friendly_name_Set() const;
    bool is_recovery_protection_container_friendly_name_Valid() const;

    QString getRecoveryServicesProviderId() const;
    void setRecoveryServicesProviderId(const QString &recovery_services_provider_id);
    bool is_recovery_services_provider_id_Set() const;
    bool is_recovery_services_provider_id_Valid() const;

    QString getReplicationHealth() const;
    void setReplicationHealth(const QString &replication_health);
    bool is_replication_health_Set() const;
    bool is_replication_health_Valid() const;

    QList<OAIHealthError> getReplicationHealthErrors() const;
    void setReplicationHealthErrors(const QList<OAIHealthError> &replication_health_errors);
    bool is_replication_health_errors_Set() const;
    bool is_replication_health_errors_Valid() const;

    QString getTestFailoverState() const;
    void setTestFailoverState(const QString &test_failover_state);
    bool is_test_failover_state_Set() const;
    bool is_test_failover_state_Valid() const;

    QString getTestFailoverStateDescription() const;
    void setTestFailoverStateDescription(const QString &test_failover_state_description);
    bool is_test_failover_state_description_Set() const;
    bool is_test_failover_state_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active_location;
    bool m_active_location_isSet;
    bool m_active_location_isValid;

    QList<QString> m_allowed_operations;
    bool m_allowed_operations_isSet;
    bool m_allowed_operations_isValid;

    OAICurrentScenarioDetails m_current_scenario;
    bool m_current_scenario_isSet;
    bool m_current_scenario_isValid;

    QString m_failover_health;
    bool m_failover_health_isSet;
    bool m_failover_health_isValid;

    QList<OAIHealthError> m_failover_health_errors;
    bool m_failover_health_errors_isSet;
    bool m_failover_health_errors_isValid;

    QString m_failover_recovery_point_id;
    bool m_failover_recovery_point_id_isSet;
    bool m_failover_recovery_point_id_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QDateTime m_last_successful_failover_time;
    bool m_last_successful_failover_time_isSet;
    bool m_last_successful_failover_time_isValid;

    QDateTime m_last_successful_test_failover_time;
    bool m_last_successful_test_failover_time_isSet;
    bool m_last_successful_test_failover_time_isValid;

    QString m_policy_friendly_name;
    bool m_policy_friendly_name_isSet;
    bool m_policy_friendly_name_isValid;

    QString m_policy_id;
    bool m_policy_id_isSet;
    bool m_policy_id_isValid;

    QString m_primary_fabric_friendly_name;
    bool m_primary_fabric_friendly_name_isSet;
    bool m_primary_fabric_friendly_name_isValid;

    QString m_primary_protection_container_friendly_name;
    bool m_primary_protection_container_friendly_name_isSet;
    bool m_primary_protection_container_friendly_name_isValid;

    QString m_protectable_item_id;
    bool m_protectable_item_id_isSet;
    bool m_protectable_item_id_isValid;

    QString m_protected_item_type;
    bool m_protected_item_type_isSet;
    bool m_protected_item_type_isValid;

    QString m_protection_state;
    bool m_protection_state_isSet;
    bool m_protection_state_isValid;

    QString m_protection_state_description;
    bool m_protection_state_description_isSet;
    bool m_protection_state_description_isValid;

    OAIReplicationProviderSpecificSettings m_provider_specific_details;
    bool m_provider_specific_details_isSet;
    bool m_provider_specific_details_isValid;

    QString m_recovery_container_id;
    bool m_recovery_container_id_isSet;
    bool m_recovery_container_id_isValid;

    QString m_recovery_fabric_friendly_name;
    bool m_recovery_fabric_friendly_name_isSet;
    bool m_recovery_fabric_friendly_name_isValid;

    QString m_recovery_fabric_id;
    bool m_recovery_fabric_id_isSet;
    bool m_recovery_fabric_id_isValid;

    QString m_recovery_protection_container_friendly_name;
    bool m_recovery_protection_container_friendly_name_isSet;
    bool m_recovery_protection_container_friendly_name_isValid;

    QString m_recovery_services_provider_id;
    bool m_recovery_services_provider_id_isSet;
    bool m_recovery_services_provider_id_isValid;

    QString m_replication_health;
    bool m_replication_health_isSet;
    bool m_replication_health_isValid;

    QList<OAIHealthError> m_replication_health_errors;
    bool m_replication_health_errors_isSet;
    bool m_replication_health_errors_isValid;

    QString m_test_failover_state;
    bool m_test_failover_state_isSet;
    bool m_test_failover_state_isValid;

    QString m_test_failover_state_description;
    bool m_test_failover_state_description_isSet;
    bool m_test_failover_state_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplicationProtectedItemProperties)

#endif // OAIReplicationProtectedItemProperties_H
