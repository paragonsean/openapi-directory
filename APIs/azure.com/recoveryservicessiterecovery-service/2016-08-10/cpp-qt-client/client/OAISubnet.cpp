/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubnet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubnet::OAISubnet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubnet::OAISubnet() {
    this->initializeModel();
}

OAISubnet::~OAISubnet() {}

void OAISubnet::initializeModel() {

    m_address_list_isSet = false;
    m_address_list_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAISubnet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubnet::fromJsonObject(QJsonObject json) {

    m_address_list_isValid = ::OpenAPI::fromJsonValue(m_address_list, json[QString("addressList")]);
    m_address_list_isSet = !json[QString("addressList")].isNull() && m_address_list_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendlyName")]);
    m_friendly_name_isSet = !json[QString("friendlyName")].isNull() && m_friendly_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAISubnet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubnet::asJsonObject() const {
    QJsonObject obj;
    if (m_address_list.size() > 0) {
        obj.insert(QString("addressList"), ::OpenAPI::toJsonValue(m_address_list));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendlyName"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QList<QString> OAISubnet::getAddressList() const {
    return m_address_list;
}
void OAISubnet::setAddressList(const QList<QString> &address_list) {
    m_address_list = address_list;
    m_address_list_isSet = true;
}

bool OAISubnet::is_address_list_Set() const{
    return m_address_list_isSet;
}

bool OAISubnet::is_address_list_Valid() const{
    return m_address_list_isValid;
}

QString OAISubnet::getFriendlyName() const {
    return m_friendly_name;
}
void OAISubnet::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAISubnet::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAISubnet::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAISubnet::getName() const {
    return m_name;
}
void OAISubnet::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISubnet::is_name_Set() const{
    return m_name_isSet;
}

bool OAISubnet::is_name_Valid() const{
    return m_name_isValid;
}

bool OAISubnet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubnet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
