/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIASRTask.h
 *
 * Task of the Job.
 */

#ifndef OAIASRTask_H
#define OAIASRTask_H

#include <QJsonObject>

#include "OAIGroupTaskDetails.h"
#include "OAIJobErrorDetails.h"
#include "OAITaskTypeDetails.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITaskTypeDetails;
class OAIJobErrorDetails;
class OAIGroupTaskDetails;

class OAIASRTask : public OAIObject {
public:
    OAIASRTask();
    OAIASRTask(QString json);
    ~OAIASRTask() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedActions() const;
    void setAllowedActions(const QList<QString> &allowed_actions);
    bool is_allowed_actions_Set() const;
    bool is_allowed_actions_Valid() const;

    OAITaskTypeDetails getCustomDetails() const;
    void setCustomDetails(const OAITaskTypeDetails &custom_details);
    bool is_custom_details_Set() const;
    bool is_custom_details_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QList<OAIJobErrorDetails> getErrors() const;
    void setErrors(const QList<OAIJobErrorDetails> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    OAIGroupTaskDetails getGroupTaskCustomDetails() const;
    void setGroupTaskCustomDetails(const OAIGroupTaskDetails &group_task_custom_details);
    bool is_group_task_custom_details_Set() const;
    bool is_group_task_custom_details_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStateDescription() const;
    void setStateDescription(const QString &state_description);
    bool is_state_description_Set() const;
    bool is_state_description_Valid() const;

    QString getTaskId() const;
    void setTaskId(const QString &task_id);
    bool is_task_id_Set() const;
    bool is_task_id_Valid() const;

    QString getTaskType() const;
    void setTaskType(const QString &task_type);
    bool is_task_type_Set() const;
    bool is_task_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_actions;
    bool m_allowed_actions_isSet;
    bool m_allowed_actions_isValid;

    OAITaskTypeDetails m_custom_details;
    bool m_custom_details_isSet;
    bool m_custom_details_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QList<OAIJobErrorDetails> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    OAIGroupTaskDetails m_group_task_custom_details;
    bool m_group_task_custom_details_isSet;
    bool m_group_task_custom_details_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_state_description;
    bool m_state_description_isSet;
    bool m_state_description_isValid;

    QString m_task_id;
    bool m_task_id_isSet;
    bool m_task_id_isValid;

    QString m_task_type;
    bool m_task_type_isSet;
    bool m_task_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIASRTask)

#endif // OAIASRTask_H
