/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecoveryPlanGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecoveryPlanGroup::OAIRecoveryPlanGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecoveryPlanGroup::OAIRecoveryPlanGroup() {
    this->initializeModel();
}

OAIRecoveryPlanGroup::~OAIRecoveryPlanGroup() {}

void OAIRecoveryPlanGroup::initializeModel() {

    m_end_group_actions_isSet = false;
    m_end_group_actions_isValid = false;

    m_group_type_isSet = false;
    m_group_type_isValid = false;

    m_replication_protected_items_isSet = false;
    m_replication_protected_items_isValid = false;

    m_start_group_actions_isSet = false;
    m_start_group_actions_isValid = false;
}

void OAIRecoveryPlanGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecoveryPlanGroup::fromJsonObject(QJsonObject json) {

    m_end_group_actions_isValid = ::OpenAPI::fromJsonValue(m_end_group_actions, json[QString("endGroupActions")]);
    m_end_group_actions_isSet = !json[QString("endGroupActions")].isNull() && m_end_group_actions_isValid;

    m_group_type_isValid = ::OpenAPI::fromJsonValue(m_group_type, json[QString("groupType")]);
    m_group_type_isSet = !json[QString("groupType")].isNull() && m_group_type_isValid;

    m_replication_protected_items_isValid = ::OpenAPI::fromJsonValue(m_replication_protected_items, json[QString("replicationProtectedItems")]);
    m_replication_protected_items_isSet = !json[QString("replicationProtectedItems")].isNull() && m_replication_protected_items_isValid;

    m_start_group_actions_isValid = ::OpenAPI::fromJsonValue(m_start_group_actions, json[QString("startGroupActions")]);
    m_start_group_actions_isSet = !json[QString("startGroupActions")].isNull() && m_start_group_actions_isValid;
}

QString OAIRecoveryPlanGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecoveryPlanGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_end_group_actions.size() > 0) {
        obj.insert(QString("endGroupActions"), ::OpenAPI::toJsonValue(m_end_group_actions));
    }
    if (m_group_type_isSet) {
        obj.insert(QString("groupType"), ::OpenAPI::toJsonValue(m_group_type));
    }
    if (m_replication_protected_items.size() > 0) {
        obj.insert(QString("replicationProtectedItems"), ::OpenAPI::toJsonValue(m_replication_protected_items));
    }
    if (m_start_group_actions.size() > 0) {
        obj.insert(QString("startGroupActions"), ::OpenAPI::toJsonValue(m_start_group_actions));
    }
    return obj;
}

QList<OAIRecoveryPlanAction> OAIRecoveryPlanGroup::getEndGroupActions() const {
    return m_end_group_actions;
}
void OAIRecoveryPlanGroup::setEndGroupActions(const QList<OAIRecoveryPlanAction> &end_group_actions) {
    m_end_group_actions = end_group_actions;
    m_end_group_actions_isSet = true;
}

bool OAIRecoveryPlanGroup::is_end_group_actions_Set() const{
    return m_end_group_actions_isSet;
}

bool OAIRecoveryPlanGroup::is_end_group_actions_Valid() const{
    return m_end_group_actions_isValid;
}

QString OAIRecoveryPlanGroup::getGroupType() const {
    return m_group_type;
}
void OAIRecoveryPlanGroup::setGroupType(const QString &group_type) {
    m_group_type = group_type;
    m_group_type_isSet = true;
}

bool OAIRecoveryPlanGroup::is_group_type_Set() const{
    return m_group_type_isSet;
}

bool OAIRecoveryPlanGroup::is_group_type_Valid() const{
    return m_group_type_isValid;
}

QList<OAIRecoveryPlanProtectedItem> OAIRecoveryPlanGroup::getReplicationProtectedItems() const {
    return m_replication_protected_items;
}
void OAIRecoveryPlanGroup::setReplicationProtectedItems(const QList<OAIRecoveryPlanProtectedItem> &replication_protected_items) {
    m_replication_protected_items = replication_protected_items;
    m_replication_protected_items_isSet = true;
}

bool OAIRecoveryPlanGroup::is_replication_protected_items_Set() const{
    return m_replication_protected_items_isSet;
}

bool OAIRecoveryPlanGroup::is_replication_protected_items_Valid() const{
    return m_replication_protected_items_isValid;
}

QList<OAIRecoveryPlanAction> OAIRecoveryPlanGroup::getStartGroupActions() const {
    return m_start_group_actions;
}
void OAIRecoveryPlanGroup::setStartGroupActions(const QList<OAIRecoveryPlanAction> &start_group_actions) {
    m_start_group_actions = start_group_actions;
    m_start_group_actions_isSet = true;
}

bool OAIRecoveryPlanGroup::is_start_group_actions_Set() const{
    return m_start_group_actions_isSet;
}

bool OAIRecoveryPlanGroup::is_start_group_actions_Valid() const{
    return m_start_group_actions_isValid;
}

bool OAIRecoveryPlanGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_group_actions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_replication_protected_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_group_actions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecoveryPlanGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_group_type_isValid && true;
}

} // namespace OpenAPI
