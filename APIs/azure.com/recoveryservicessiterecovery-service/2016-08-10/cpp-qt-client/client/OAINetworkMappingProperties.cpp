/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINetworkMappingProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINetworkMappingProperties::OAINetworkMappingProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINetworkMappingProperties::OAINetworkMappingProperties() {
    this->initializeModel();
}

OAINetworkMappingProperties::~OAINetworkMappingProperties() {}

void OAINetworkMappingProperties::initializeModel() {

    m_fabric_specific_settings_isSet = false;
    m_fabric_specific_settings_isValid = false;

    m_primary_fabric_friendly_name_isSet = false;
    m_primary_fabric_friendly_name_isValid = false;

    m_primary_network_friendly_name_isSet = false;
    m_primary_network_friendly_name_isValid = false;

    m_primary_network_id_isSet = false;
    m_primary_network_id_isValid = false;

    m_recovery_fabric_arm_id_isSet = false;
    m_recovery_fabric_arm_id_isValid = false;

    m_recovery_fabric_friendly_name_isSet = false;
    m_recovery_fabric_friendly_name_isValid = false;

    m_recovery_network_friendly_name_isSet = false;
    m_recovery_network_friendly_name_isValid = false;

    m_recovery_network_id_isSet = false;
    m_recovery_network_id_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAINetworkMappingProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINetworkMappingProperties::fromJsonObject(QJsonObject json) {

    m_fabric_specific_settings_isValid = ::OpenAPI::fromJsonValue(m_fabric_specific_settings, json[QString("fabricSpecificSettings")]);
    m_fabric_specific_settings_isSet = !json[QString("fabricSpecificSettings")].isNull() && m_fabric_specific_settings_isValid;

    m_primary_fabric_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_primary_fabric_friendly_name, json[QString("primaryFabricFriendlyName")]);
    m_primary_fabric_friendly_name_isSet = !json[QString("primaryFabricFriendlyName")].isNull() && m_primary_fabric_friendly_name_isValid;

    m_primary_network_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_primary_network_friendly_name, json[QString("primaryNetworkFriendlyName")]);
    m_primary_network_friendly_name_isSet = !json[QString("primaryNetworkFriendlyName")].isNull() && m_primary_network_friendly_name_isValid;

    m_primary_network_id_isValid = ::OpenAPI::fromJsonValue(m_primary_network_id, json[QString("primaryNetworkId")]);
    m_primary_network_id_isSet = !json[QString("primaryNetworkId")].isNull() && m_primary_network_id_isValid;

    m_recovery_fabric_arm_id_isValid = ::OpenAPI::fromJsonValue(m_recovery_fabric_arm_id, json[QString("recoveryFabricArmId")]);
    m_recovery_fabric_arm_id_isSet = !json[QString("recoveryFabricArmId")].isNull() && m_recovery_fabric_arm_id_isValid;

    m_recovery_fabric_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_recovery_fabric_friendly_name, json[QString("recoveryFabricFriendlyName")]);
    m_recovery_fabric_friendly_name_isSet = !json[QString("recoveryFabricFriendlyName")].isNull() && m_recovery_fabric_friendly_name_isValid;

    m_recovery_network_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_recovery_network_friendly_name, json[QString("recoveryNetworkFriendlyName")]);
    m_recovery_network_friendly_name_isSet = !json[QString("recoveryNetworkFriendlyName")].isNull() && m_recovery_network_friendly_name_isValid;

    m_recovery_network_id_isValid = ::OpenAPI::fromJsonValue(m_recovery_network_id, json[QString("recoveryNetworkId")]);
    m_recovery_network_id_isSet = !json[QString("recoveryNetworkId")].isNull() && m_recovery_network_id_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAINetworkMappingProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINetworkMappingProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_fabric_specific_settings.isSet()) {
        obj.insert(QString("fabricSpecificSettings"), ::OpenAPI::toJsonValue(m_fabric_specific_settings));
    }
    if (m_primary_fabric_friendly_name_isSet) {
        obj.insert(QString("primaryFabricFriendlyName"), ::OpenAPI::toJsonValue(m_primary_fabric_friendly_name));
    }
    if (m_primary_network_friendly_name_isSet) {
        obj.insert(QString("primaryNetworkFriendlyName"), ::OpenAPI::toJsonValue(m_primary_network_friendly_name));
    }
    if (m_primary_network_id_isSet) {
        obj.insert(QString("primaryNetworkId"), ::OpenAPI::toJsonValue(m_primary_network_id));
    }
    if (m_recovery_fabric_arm_id_isSet) {
        obj.insert(QString("recoveryFabricArmId"), ::OpenAPI::toJsonValue(m_recovery_fabric_arm_id));
    }
    if (m_recovery_fabric_friendly_name_isSet) {
        obj.insert(QString("recoveryFabricFriendlyName"), ::OpenAPI::toJsonValue(m_recovery_fabric_friendly_name));
    }
    if (m_recovery_network_friendly_name_isSet) {
        obj.insert(QString("recoveryNetworkFriendlyName"), ::OpenAPI::toJsonValue(m_recovery_network_friendly_name));
    }
    if (m_recovery_network_id_isSet) {
        obj.insert(QString("recoveryNetworkId"), ::OpenAPI::toJsonValue(m_recovery_network_id));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

OAINetworkMappingFabricSpecificSettings OAINetworkMappingProperties::getFabricSpecificSettings() const {
    return m_fabric_specific_settings;
}
void OAINetworkMappingProperties::setFabricSpecificSettings(const OAINetworkMappingFabricSpecificSettings &fabric_specific_settings) {
    m_fabric_specific_settings = fabric_specific_settings;
    m_fabric_specific_settings_isSet = true;
}

bool OAINetworkMappingProperties::is_fabric_specific_settings_Set() const{
    return m_fabric_specific_settings_isSet;
}

bool OAINetworkMappingProperties::is_fabric_specific_settings_Valid() const{
    return m_fabric_specific_settings_isValid;
}

QString OAINetworkMappingProperties::getPrimaryFabricFriendlyName() const {
    return m_primary_fabric_friendly_name;
}
void OAINetworkMappingProperties::setPrimaryFabricFriendlyName(const QString &primary_fabric_friendly_name) {
    m_primary_fabric_friendly_name = primary_fabric_friendly_name;
    m_primary_fabric_friendly_name_isSet = true;
}

bool OAINetworkMappingProperties::is_primary_fabric_friendly_name_Set() const{
    return m_primary_fabric_friendly_name_isSet;
}

bool OAINetworkMappingProperties::is_primary_fabric_friendly_name_Valid() const{
    return m_primary_fabric_friendly_name_isValid;
}

QString OAINetworkMappingProperties::getPrimaryNetworkFriendlyName() const {
    return m_primary_network_friendly_name;
}
void OAINetworkMappingProperties::setPrimaryNetworkFriendlyName(const QString &primary_network_friendly_name) {
    m_primary_network_friendly_name = primary_network_friendly_name;
    m_primary_network_friendly_name_isSet = true;
}

bool OAINetworkMappingProperties::is_primary_network_friendly_name_Set() const{
    return m_primary_network_friendly_name_isSet;
}

bool OAINetworkMappingProperties::is_primary_network_friendly_name_Valid() const{
    return m_primary_network_friendly_name_isValid;
}

QString OAINetworkMappingProperties::getPrimaryNetworkId() const {
    return m_primary_network_id;
}
void OAINetworkMappingProperties::setPrimaryNetworkId(const QString &primary_network_id) {
    m_primary_network_id = primary_network_id;
    m_primary_network_id_isSet = true;
}

bool OAINetworkMappingProperties::is_primary_network_id_Set() const{
    return m_primary_network_id_isSet;
}

bool OAINetworkMappingProperties::is_primary_network_id_Valid() const{
    return m_primary_network_id_isValid;
}

QString OAINetworkMappingProperties::getRecoveryFabricArmId() const {
    return m_recovery_fabric_arm_id;
}
void OAINetworkMappingProperties::setRecoveryFabricArmId(const QString &recovery_fabric_arm_id) {
    m_recovery_fabric_arm_id = recovery_fabric_arm_id;
    m_recovery_fabric_arm_id_isSet = true;
}

bool OAINetworkMappingProperties::is_recovery_fabric_arm_id_Set() const{
    return m_recovery_fabric_arm_id_isSet;
}

bool OAINetworkMappingProperties::is_recovery_fabric_arm_id_Valid() const{
    return m_recovery_fabric_arm_id_isValid;
}

QString OAINetworkMappingProperties::getRecoveryFabricFriendlyName() const {
    return m_recovery_fabric_friendly_name;
}
void OAINetworkMappingProperties::setRecoveryFabricFriendlyName(const QString &recovery_fabric_friendly_name) {
    m_recovery_fabric_friendly_name = recovery_fabric_friendly_name;
    m_recovery_fabric_friendly_name_isSet = true;
}

bool OAINetworkMappingProperties::is_recovery_fabric_friendly_name_Set() const{
    return m_recovery_fabric_friendly_name_isSet;
}

bool OAINetworkMappingProperties::is_recovery_fabric_friendly_name_Valid() const{
    return m_recovery_fabric_friendly_name_isValid;
}

QString OAINetworkMappingProperties::getRecoveryNetworkFriendlyName() const {
    return m_recovery_network_friendly_name;
}
void OAINetworkMappingProperties::setRecoveryNetworkFriendlyName(const QString &recovery_network_friendly_name) {
    m_recovery_network_friendly_name = recovery_network_friendly_name;
    m_recovery_network_friendly_name_isSet = true;
}

bool OAINetworkMappingProperties::is_recovery_network_friendly_name_Set() const{
    return m_recovery_network_friendly_name_isSet;
}

bool OAINetworkMappingProperties::is_recovery_network_friendly_name_Valid() const{
    return m_recovery_network_friendly_name_isValid;
}

QString OAINetworkMappingProperties::getRecoveryNetworkId() const {
    return m_recovery_network_id;
}
void OAINetworkMappingProperties::setRecoveryNetworkId(const QString &recovery_network_id) {
    m_recovery_network_id = recovery_network_id;
    m_recovery_network_id_isSet = true;
}

bool OAINetworkMappingProperties::is_recovery_network_id_Set() const{
    return m_recovery_network_id_isSet;
}

bool OAINetworkMappingProperties::is_recovery_network_id_Valid() const{
    return m_recovery_network_id_isValid;
}

QString OAINetworkMappingProperties::getState() const {
    return m_state;
}
void OAINetworkMappingProperties::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAINetworkMappingProperties::is_state_Set() const{
    return m_state_isSet;
}

bool OAINetworkMappingProperties::is_state_Valid() const{
    return m_state_isValid;
}

bool OAINetworkMappingProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fabric_specific_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_fabric_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_network_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_network_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_fabric_arm_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_fabric_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_network_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_network_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINetworkMappingProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
