# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_friendly_name: str=None, job_id: str=None, job_scenario_name: str=None, target_instance_type: str=None, target_object_id: str=None, target_object_name: str=None):
        """JobEntity - a model defined in OpenAPI

        :param job_friendly_name: The job_friendly_name of this JobEntity.
        :param job_id: The job_id of this JobEntity.
        :param job_scenario_name: The job_scenario_name of this JobEntity.
        :param target_instance_type: The target_instance_type of this JobEntity.
        :param target_object_id: The target_object_id of this JobEntity.
        :param target_object_name: The target_object_name of this JobEntity.
        """
        self.openapi_types = {
            'job_friendly_name': str,
            'job_id': str,
            'job_scenario_name': str,
            'target_instance_type': str,
            'target_object_id': str,
            'target_object_name': str
        }

        self.attribute_map = {
            'job_friendly_name': 'jobFriendlyName',
            'job_id': 'jobId',
            'job_scenario_name': 'jobScenarioName',
            'target_instance_type': 'targetInstanceType',
            'target_object_id': 'targetObjectId',
            'target_object_name': 'targetObjectName'
        }

        self._job_friendly_name = job_friendly_name
        self._job_id = job_id
        self._job_scenario_name = job_scenario_name
        self._target_instance_type = target_instance_type
        self._target_object_id = target_object_id
        self._target_object_name = target_object_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobEntity of this JobEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_friendly_name(self):
        """Gets the job_friendly_name of this JobEntity.

        The job display name.

        :return: The job_friendly_name of this JobEntity.
        :rtype: str
        """
        return self._job_friendly_name

    @job_friendly_name.setter
    def job_friendly_name(self, job_friendly_name):
        """Sets the job_friendly_name of this JobEntity.

        The job display name.

        :param job_friendly_name: The job_friendly_name of this JobEntity.
        :type job_friendly_name: str
        """

        self._job_friendly_name = job_friendly_name

    @property
    def job_id(self):
        """Gets the job_id of this JobEntity.

        The job id.

        :return: The job_id of this JobEntity.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this JobEntity.

        The job id.

        :param job_id: The job_id of this JobEntity.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def job_scenario_name(self):
        """Gets the job_scenario_name of this JobEntity.

        The job name. Enum type ScenarioName.

        :return: The job_scenario_name of this JobEntity.
        :rtype: str
        """
        return self._job_scenario_name

    @job_scenario_name.setter
    def job_scenario_name(self, job_scenario_name):
        """Sets the job_scenario_name of this JobEntity.

        The job name. Enum type ScenarioName.

        :param job_scenario_name: The job_scenario_name of this JobEntity.
        :type job_scenario_name: str
        """

        self._job_scenario_name = job_scenario_name

    @property
    def target_instance_type(self):
        """Gets the target_instance_type of this JobEntity.

        The workflow affected object type.

        :return: The target_instance_type of this JobEntity.
        :rtype: str
        """
        return self._target_instance_type

    @target_instance_type.setter
    def target_instance_type(self, target_instance_type):
        """Sets the target_instance_type of this JobEntity.

        The workflow affected object type.

        :param target_instance_type: The target_instance_type of this JobEntity.
        :type target_instance_type: str
        """

        self._target_instance_type = target_instance_type

    @property
    def target_object_id(self):
        """Gets the target_object_id of this JobEntity.

        The object id.

        :return: The target_object_id of this JobEntity.
        :rtype: str
        """
        return self._target_object_id

    @target_object_id.setter
    def target_object_id(self, target_object_id):
        """Sets the target_object_id of this JobEntity.

        The object id.

        :param target_object_id: The target_object_id of this JobEntity.
        :type target_object_id: str
        """

        self._target_object_id = target_object_id

    @property
    def target_object_name(self):
        """Gets the target_object_name of this JobEntity.

        The object name.

        :return: The target_object_name of this JobEntity.
        :rtype: str
        """
        return self._target_object_name

    @target_object_name.setter
    def target_object_name(self, target_object_name):
        """Sets the target_object_name of this JobEntity.

        The object name.

        :param target_object_name: The target_object_name of this JobEntity.
        :type target_object_name: str
        """

        self._target_object_name = target_object_name
