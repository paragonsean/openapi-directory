# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddVCenterRequestProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, friendly_name: str=None, ip_address: str=None, port: str=None, process_server_id: str=None, run_as_account_id: str=None):
        """AddVCenterRequestProperties - a model defined in OpenAPI

        :param friendly_name: The friendly_name of this AddVCenterRequestProperties.
        :param ip_address: The ip_address of this AddVCenterRequestProperties.
        :param port: The port of this AddVCenterRequestProperties.
        :param process_server_id: The process_server_id of this AddVCenterRequestProperties.
        :param run_as_account_id: The run_as_account_id of this AddVCenterRequestProperties.
        """
        self.openapi_types = {
            'friendly_name': str,
            'ip_address': str,
            'port': str,
            'process_server_id': str,
            'run_as_account_id': str
        }

        self.attribute_map = {
            'friendly_name': 'friendlyName',
            'ip_address': 'ipAddress',
            'port': 'port',
            'process_server_id': 'processServerId',
            'run_as_account_id': 'runAsAccountId'
        }

        self._friendly_name = friendly_name
        self._ip_address = ip_address
        self._port = port
        self._process_server_id = process_server_id
        self._run_as_account_id = run_as_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddVCenterRequestProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddVCenterRequestProperties of this AddVCenterRequestProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def friendly_name(self):
        """Gets the friendly_name of this AddVCenterRequestProperties.

        The friendly name of the vCenter.

        :return: The friendly_name of this AddVCenterRequestProperties.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this AddVCenterRequestProperties.

        The friendly name of the vCenter.

        :param friendly_name: The friendly_name of this AddVCenterRequestProperties.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def ip_address(self):
        """Gets the ip_address of this AddVCenterRequestProperties.

        The IP address of the vCenter to be discovered.

        :return: The ip_address of this AddVCenterRequestProperties.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this AddVCenterRequestProperties.

        The IP address of the vCenter to be discovered.

        :param ip_address: The ip_address of this AddVCenterRequestProperties.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def port(self):
        """Gets the port of this AddVCenterRequestProperties.

        The port number for discovery.

        :return: The port of this AddVCenterRequestProperties.
        :rtype: str
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this AddVCenterRequestProperties.

        The port number for discovery.

        :param port: The port of this AddVCenterRequestProperties.
        :type port: str
        """

        self._port = port

    @property
    def process_server_id(self):
        """Gets the process_server_id of this AddVCenterRequestProperties.

        The process server Id from where the discovery is orchestrated.

        :return: The process_server_id of this AddVCenterRequestProperties.
        :rtype: str
        """
        return self._process_server_id

    @process_server_id.setter
    def process_server_id(self, process_server_id):
        """Sets the process_server_id of this AddVCenterRequestProperties.

        The process server Id from where the discovery is orchestrated.

        :param process_server_id: The process_server_id of this AddVCenterRequestProperties.
        :type process_server_id: str
        """

        self._process_server_id = process_server_id

    @property
    def run_as_account_id(self):
        """Gets the run_as_account_id of this AddVCenterRequestProperties.

        The account Id which has privileges to discover the vCenter.

        :return: The run_as_account_id of this AddVCenterRequestProperties.
        :rtype: str
        """
        return self._run_as_account_id

    @run_as_account_id.setter
    def run_as_account_id(self, run_as_account_id):
        """Sets the run_as_account_id of this AddVCenterRequestProperties.

        The account Id which has privileges to discover the vCenter.

        :param run_as_account_id: The run_as_account_id of this AddVCenterRequestProperties.
        :type run_as_account_id: str
        """

        self._run_as_account_id = run_as_account_id
