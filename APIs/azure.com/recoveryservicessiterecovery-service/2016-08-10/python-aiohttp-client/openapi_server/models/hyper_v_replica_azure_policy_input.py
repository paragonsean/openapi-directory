# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy_provider_specific_input import PolicyProviderSpecificInput
from openapi_server import util


class HyperVReplicaAzurePolicyInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_consistent_snapshot_frequency_in_hours: int=None, encryption: str=None, online_replication_start_time: str=None, recovery_point_history_duration: int=None, replication_interval: int=None, storage_accounts: List[str]=None, instance_type: str=None):
        """HyperVReplicaAzurePolicyInput - a model defined in OpenAPI

        :param application_consistent_snapshot_frequency_in_hours: The application_consistent_snapshot_frequency_in_hours of this HyperVReplicaAzurePolicyInput.
        :param encryption: The encryption of this HyperVReplicaAzurePolicyInput.
        :param online_replication_start_time: The online_replication_start_time of this HyperVReplicaAzurePolicyInput.
        :param recovery_point_history_duration: The recovery_point_history_duration of this HyperVReplicaAzurePolicyInput.
        :param replication_interval: The replication_interval of this HyperVReplicaAzurePolicyInput.
        :param storage_accounts: The storage_accounts of this HyperVReplicaAzurePolicyInput.
        :param instance_type: The instance_type of this HyperVReplicaAzurePolicyInput.
        """
        self.openapi_types = {
            'application_consistent_snapshot_frequency_in_hours': int,
            'encryption': str,
            'online_replication_start_time': str,
            'recovery_point_history_duration': int,
            'replication_interval': int,
            'storage_accounts': List[str],
            'instance_type': str
        }

        self.attribute_map = {
            'application_consistent_snapshot_frequency_in_hours': 'applicationConsistentSnapshotFrequencyInHours',
            'encryption': 'encryption',
            'online_replication_start_time': 'onlineReplicationStartTime',
            'recovery_point_history_duration': 'recoveryPointHistoryDuration',
            'replication_interval': 'replicationInterval',
            'storage_accounts': 'storageAccounts',
            'instance_type': 'instanceType'
        }

        self._application_consistent_snapshot_frequency_in_hours = application_consistent_snapshot_frequency_in_hours
        self._encryption = encryption
        self._online_replication_start_time = online_replication_start_time
        self._recovery_point_history_duration = recovery_point_history_duration
        self._replication_interval = replication_interval
        self._storage_accounts = storage_accounts
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HyperVReplicaAzurePolicyInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HyperVReplicaAzurePolicyInput of this HyperVReplicaAzurePolicyInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_consistent_snapshot_frequency_in_hours(self):
        """Gets the application_consistent_snapshot_frequency_in_hours of this HyperVReplicaAzurePolicyInput.

        The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.

        :return: The application_consistent_snapshot_frequency_in_hours of this HyperVReplicaAzurePolicyInput.
        :rtype: int
        """
        return self._application_consistent_snapshot_frequency_in_hours

    @application_consistent_snapshot_frequency_in_hours.setter
    def application_consistent_snapshot_frequency_in_hours(self, application_consistent_snapshot_frequency_in_hours):
        """Sets the application_consistent_snapshot_frequency_in_hours of this HyperVReplicaAzurePolicyInput.

        The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.

        :param application_consistent_snapshot_frequency_in_hours: The application_consistent_snapshot_frequency_in_hours of this HyperVReplicaAzurePolicyInput.
        :type application_consistent_snapshot_frequency_in_hours: int
        """

        self._application_consistent_snapshot_frequency_in_hours = application_consistent_snapshot_frequency_in_hours

    @property
    def encryption(self):
        """Gets the encryption of this HyperVReplicaAzurePolicyInput.

        A value indicating whether encryption needs to be enabled for Vms in this cloud.

        :return: The encryption of this HyperVReplicaAzurePolicyInput.
        :rtype: str
        """
        return self._encryption

    @encryption.setter
    def encryption(self, encryption):
        """Sets the encryption of this HyperVReplicaAzurePolicyInput.

        A value indicating whether encryption needs to be enabled for Vms in this cloud.

        :param encryption: The encryption of this HyperVReplicaAzurePolicyInput.
        :type encryption: str
        """

        self._encryption = encryption

    @property
    def online_replication_start_time(self):
        """Gets the online_replication_start_time of this HyperVReplicaAzurePolicyInput.

        The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.

        :return: The online_replication_start_time of this HyperVReplicaAzurePolicyInput.
        :rtype: str
        """
        return self._online_replication_start_time

    @online_replication_start_time.setter
    def online_replication_start_time(self, online_replication_start_time):
        """Sets the online_replication_start_time of this HyperVReplicaAzurePolicyInput.

        The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.

        :param online_replication_start_time: The online_replication_start_time of this HyperVReplicaAzurePolicyInput.
        :type online_replication_start_time: str
        """

        self._online_replication_start_time = online_replication_start_time

    @property
    def recovery_point_history_duration(self):
        """Gets the recovery_point_history_duration of this HyperVReplicaAzurePolicyInput.

        The duration (in hours) to which point the recovery history needs to be maintained.

        :return: The recovery_point_history_duration of this HyperVReplicaAzurePolicyInput.
        :rtype: int
        """
        return self._recovery_point_history_duration

    @recovery_point_history_duration.setter
    def recovery_point_history_duration(self, recovery_point_history_duration):
        """Sets the recovery_point_history_duration of this HyperVReplicaAzurePolicyInput.

        The duration (in hours) to which point the recovery history needs to be maintained.

        :param recovery_point_history_duration: The recovery_point_history_duration of this HyperVReplicaAzurePolicyInput.
        :type recovery_point_history_duration: int
        """

        self._recovery_point_history_duration = recovery_point_history_duration

    @property
    def replication_interval(self):
        """Gets the replication_interval of this HyperVReplicaAzurePolicyInput.

        The replication interval.

        :return: The replication_interval of this HyperVReplicaAzurePolicyInput.
        :rtype: int
        """
        return self._replication_interval

    @replication_interval.setter
    def replication_interval(self, replication_interval):
        """Sets the replication_interval of this HyperVReplicaAzurePolicyInput.

        The replication interval.

        :param replication_interval: The replication_interval of this HyperVReplicaAzurePolicyInput.
        :type replication_interval: int
        """

        self._replication_interval = replication_interval

    @property
    def storage_accounts(self):
        """Gets the storage_accounts of this HyperVReplicaAzurePolicyInput.

        The list of storage accounts to which the VMs in the primary cloud can replicate to.

        :return: The storage_accounts of this HyperVReplicaAzurePolicyInput.
        :rtype: List[str]
        """
        return self._storage_accounts

    @storage_accounts.setter
    def storage_accounts(self, storage_accounts):
        """Sets the storage_accounts of this HyperVReplicaAzurePolicyInput.

        The list of storage accounts to which the VMs in the primary cloud can replicate to.

        :param storage_accounts: The storage_accounts of this HyperVReplicaAzurePolicyInput.
        :type storage_accounts: List[str]
        """

        self._storage_accounts = storage_accounts

    @property
    def instance_type(self):
        """Gets the instance_type of this HyperVReplicaAzurePolicyInput.

        The class type.

        :return: The instance_type of this HyperVReplicaAzurePolicyInput.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this HyperVReplicaAzurePolicyInput.

        The class type.

        :param instance_type: The instance_type of this HyperVReplicaAzurePolicyInput.
        :type instance_type: str
        """

        self._instance_type = instance_type
