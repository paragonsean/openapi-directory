# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mobility_service_update import MobilityServiceUpdate
from openapi_server import util


class ProcessServer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_version: str=None, available_memory_in_bytes: int=None, available_space_in_bytes: int=None, cpu_load: str=None, cpu_load_status: str=None, friendly_name: str=None, host_id: str=None, id: str=None, ip_address: str=None, last_heartbeat: datetime=None, machine_count: str=None, memory_usage_status: str=None, mobility_service_updates: List[MobilityServiceUpdate]=None, os_type: str=None, os_version: str=None, ps_service_status: str=None, replication_pair_count: str=None, space_usage_status: str=None, ssl_cert_expiry_date: datetime=None, ssl_cert_expiry_remaining_days: int=None, system_load: str=None, system_load_status: str=None, total_memory_in_bytes: int=None, total_space_in_bytes: int=None, version_status: str=None):
        """ProcessServer - a model defined in OpenAPI

        :param agent_version: The agent_version of this ProcessServer.
        :param available_memory_in_bytes: The available_memory_in_bytes of this ProcessServer.
        :param available_space_in_bytes: The available_space_in_bytes of this ProcessServer.
        :param cpu_load: The cpu_load of this ProcessServer.
        :param cpu_load_status: The cpu_load_status of this ProcessServer.
        :param friendly_name: The friendly_name of this ProcessServer.
        :param host_id: The host_id of this ProcessServer.
        :param id: The id of this ProcessServer.
        :param ip_address: The ip_address of this ProcessServer.
        :param last_heartbeat: The last_heartbeat of this ProcessServer.
        :param machine_count: The machine_count of this ProcessServer.
        :param memory_usage_status: The memory_usage_status of this ProcessServer.
        :param mobility_service_updates: The mobility_service_updates of this ProcessServer.
        :param os_type: The os_type of this ProcessServer.
        :param os_version: The os_version of this ProcessServer.
        :param ps_service_status: The ps_service_status of this ProcessServer.
        :param replication_pair_count: The replication_pair_count of this ProcessServer.
        :param space_usage_status: The space_usage_status of this ProcessServer.
        :param ssl_cert_expiry_date: The ssl_cert_expiry_date of this ProcessServer.
        :param ssl_cert_expiry_remaining_days: The ssl_cert_expiry_remaining_days of this ProcessServer.
        :param system_load: The system_load of this ProcessServer.
        :param system_load_status: The system_load_status of this ProcessServer.
        :param total_memory_in_bytes: The total_memory_in_bytes of this ProcessServer.
        :param total_space_in_bytes: The total_space_in_bytes of this ProcessServer.
        :param version_status: The version_status of this ProcessServer.
        """
        self.openapi_types = {
            'agent_version': str,
            'available_memory_in_bytes': int,
            'available_space_in_bytes': int,
            'cpu_load': str,
            'cpu_load_status': str,
            'friendly_name': str,
            'host_id': str,
            'id': str,
            'ip_address': str,
            'last_heartbeat': datetime,
            'machine_count': str,
            'memory_usage_status': str,
            'mobility_service_updates': List[MobilityServiceUpdate],
            'os_type': str,
            'os_version': str,
            'ps_service_status': str,
            'replication_pair_count': str,
            'space_usage_status': str,
            'ssl_cert_expiry_date': datetime,
            'ssl_cert_expiry_remaining_days': int,
            'system_load': str,
            'system_load_status': str,
            'total_memory_in_bytes': int,
            'total_space_in_bytes': int,
            'version_status': str
        }

        self.attribute_map = {
            'agent_version': 'agentVersion',
            'available_memory_in_bytes': 'availableMemoryInBytes',
            'available_space_in_bytes': 'availableSpaceInBytes',
            'cpu_load': 'cpuLoad',
            'cpu_load_status': 'cpuLoadStatus',
            'friendly_name': 'friendlyName',
            'host_id': 'hostId',
            'id': 'id',
            'ip_address': 'ipAddress',
            'last_heartbeat': 'lastHeartbeat',
            'machine_count': 'machineCount',
            'memory_usage_status': 'memoryUsageStatus',
            'mobility_service_updates': 'mobilityServiceUpdates',
            'os_type': 'osType',
            'os_version': 'osVersion',
            'ps_service_status': 'psServiceStatus',
            'replication_pair_count': 'replicationPairCount',
            'space_usage_status': 'spaceUsageStatus',
            'ssl_cert_expiry_date': 'sslCertExpiryDate',
            'ssl_cert_expiry_remaining_days': 'sslCertExpiryRemainingDays',
            'system_load': 'systemLoad',
            'system_load_status': 'systemLoadStatus',
            'total_memory_in_bytes': 'totalMemoryInBytes',
            'total_space_in_bytes': 'totalSpaceInBytes',
            'version_status': 'versionStatus'
        }

        self._agent_version = agent_version
        self._available_memory_in_bytes = available_memory_in_bytes
        self._available_space_in_bytes = available_space_in_bytes
        self._cpu_load = cpu_load
        self._cpu_load_status = cpu_load_status
        self._friendly_name = friendly_name
        self._host_id = host_id
        self._id = id
        self._ip_address = ip_address
        self._last_heartbeat = last_heartbeat
        self._machine_count = machine_count
        self._memory_usage_status = memory_usage_status
        self._mobility_service_updates = mobility_service_updates
        self._os_type = os_type
        self._os_version = os_version
        self._ps_service_status = ps_service_status
        self._replication_pair_count = replication_pair_count
        self._space_usage_status = space_usage_status
        self._ssl_cert_expiry_date = ssl_cert_expiry_date
        self._ssl_cert_expiry_remaining_days = ssl_cert_expiry_remaining_days
        self._system_load = system_load
        self._system_load_status = system_load_status
        self._total_memory_in_bytes = total_memory_in_bytes
        self._total_space_in_bytes = total_space_in_bytes
        self._version_status = version_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProcessServer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProcessServer of this ProcessServer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_version(self):
        """Gets the agent_version of this ProcessServer.

        The version of the scout component on the server.

        :return: The agent_version of this ProcessServer.
        :rtype: str
        """
        return self._agent_version

    @agent_version.setter
    def agent_version(self, agent_version):
        """Sets the agent_version of this ProcessServer.

        The version of the scout component on the server.

        :param agent_version: The agent_version of this ProcessServer.
        :type agent_version: str
        """

        self._agent_version = agent_version

    @property
    def available_memory_in_bytes(self):
        """Gets the available_memory_in_bytes of this ProcessServer.

        The available memory.

        :return: The available_memory_in_bytes of this ProcessServer.
        :rtype: int
        """
        return self._available_memory_in_bytes

    @available_memory_in_bytes.setter
    def available_memory_in_bytes(self, available_memory_in_bytes):
        """Sets the available_memory_in_bytes of this ProcessServer.

        The available memory.

        :param available_memory_in_bytes: The available_memory_in_bytes of this ProcessServer.
        :type available_memory_in_bytes: int
        """

        self._available_memory_in_bytes = available_memory_in_bytes

    @property
    def available_space_in_bytes(self):
        """Gets the available_space_in_bytes of this ProcessServer.

        The available space.

        :return: The available_space_in_bytes of this ProcessServer.
        :rtype: int
        """
        return self._available_space_in_bytes

    @available_space_in_bytes.setter
    def available_space_in_bytes(self, available_space_in_bytes):
        """Sets the available_space_in_bytes of this ProcessServer.

        The available space.

        :param available_space_in_bytes: The available_space_in_bytes of this ProcessServer.
        :type available_space_in_bytes: int
        """

        self._available_space_in_bytes = available_space_in_bytes

    @property
    def cpu_load(self):
        """Gets the cpu_load of this ProcessServer.

        The percentage of the CPU load.

        :return: The cpu_load of this ProcessServer.
        :rtype: str
        """
        return self._cpu_load

    @cpu_load.setter
    def cpu_load(self, cpu_load):
        """Sets the cpu_load of this ProcessServer.

        The percentage of the CPU load.

        :param cpu_load: The cpu_load of this ProcessServer.
        :type cpu_load: str
        """

        self._cpu_load = cpu_load

    @property
    def cpu_load_status(self):
        """Gets the cpu_load_status of this ProcessServer.

        The CPU load status.

        :return: The cpu_load_status of this ProcessServer.
        :rtype: str
        """
        return self._cpu_load_status

    @cpu_load_status.setter
    def cpu_load_status(self, cpu_load_status):
        """Sets the cpu_load_status of this ProcessServer.

        The CPU load status.

        :param cpu_load_status: The cpu_load_status of this ProcessServer.
        :type cpu_load_status: str
        """

        self._cpu_load_status = cpu_load_status

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ProcessServer.

        The Process Server's friendly name.

        :return: The friendly_name of this ProcessServer.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ProcessServer.

        The Process Server's friendly name.

        :param friendly_name: The friendly_name of this ProcessServer.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def host_id(self):
        """Gets the host_id of this ProcessServer.

        The agent generated Id.

        :return: The host_id of this ProcessServer.
        :rtype: str
        """
        return self._host_id

    @host_id.setter
    def host_id(self, host_id):
        """Sets the host_id of this ProcessServer.

        The agent generated Id.

        :param host_id: The host_id of this ProcessServer.
        :type host_id: str
        """

        self._host_id = host_id

    @property
    def id(self):
        """Gets the id of this ProcessServer.

        The Process Server Id.

        :return: The id of this ProcessServer.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProcessServer.

        The Process Server Id.

        :param id: The id of this ProcessServer.
        :type id: str
        """

        self._id = id

    @property
    def ip_address(self):
        """Gets the ip_address of this ProcessServer.

        The IP address of the server.

        :return: The ip_address of this ProcessServer.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this ProcessServer.

        The IP address of the server.

        :param ip_address: The ip_address of this ProcessServer.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def last_heartbeat(self):
        """Gets the last_heartbeat of this ProcessServer.

        The last heartbeat received from the server.

        :return: The last_heartbeat of this ProcessServer.
        :rtype: datetime
        """
        return self._last_heartbeat

    @last_heartbeat.setter
    def last_heartbeat(self, last_heartbeat):
        """Sets the last_heartbeat of this ProcessServer.

        The last heartbeat received from the server.

        :param last_heartbeat: The last_heartbeat of this ProcessServer.
        :type last_heartbeat: datetime
        """

        self._last_heartbeat = last_heartbeat

    @property
    def machine_count(self):
        """Gets the machine_count of this ProcessServer.

        The servers configured with this PS.

        :return: The machine_count of this ProcessServer.
        :rtype: str
        """
        return self._machine_count

    @machine_count.setter
    def machine_count(self, machine_count):
        """Sets the machine_count of this ProcessServer.

        The servers configured with this PS.

        :param machine_count: The machine_count of this ProcessServer.
        :type machine_count: str
        """

        self._machine_count = machine_count

    @property
    def memory_usage_status(self):
        """Gets the memory_usage_status of this ProcessServer.

        The memory usage status.

        :return: The memory_usage_status of this ProcessServer.
        :rtype: str
        """
        return self._memory_usage_status

    @memory_usage_status.setter
    def memory_usage_status(self, memory_usage_status):
        """Sets the memory_usage_status of this ProcessServer.

        The memory usage status.

        :param memory_usage_status: The memory_usage_status of this ProcessServer.
        :type memory_usage_status: str
        """

        self._memory_usage_status = memory_usage_status

    @property
    def mobility_service_updates(self):
        """Gets the mobility_service_updates of this ProcessServer.

        The list of the mobility service updates available on the Process Server.

        :return: The mobility_service_updates of this ProcessServer.
        :rtype: List[MobilityServiceUpdate]
        """
        return self._mobility_service_updates

    @mobility_service_updates.setter
    def mobility_service_updates(self, mobility_service_updates):
        """Sets the mobility_service_updates of this ProcessServer.

        The list of the mobility service updates available on the Process Server.

        :param mobility_service_updates: The mobility_service_updates of this ProcessServer.
        :type mobility_service_updates: List[MobilityServiceUpdate]
        """

        self._mobility_service_updates = mobility_service_updates

    @property
    def os_type(self):
        """Gets the os_type of this ProcessServer.

        The OS type of the server.

        :return: The os_type of this ProcessServer.
        :rtype: str
        """
        return self._os_type

    @os_type.setter
    def os_type(self, os_type):
        """Sets the os_type of this ProcessServer.

        The OS type of the server.

        :param os_type: The os_type of this ProcessServer.
        :type os_type: str
        """

        self._os_type = os_type

    @property
    def os_version(self):
        """Gets the os_version of this ProcessServer.

        OS Version of the process server. Note: This will get populated if user has CS version greater than 9.12.0.0.

        :return: The os_version of this ProcessServer.
        :rtype: str
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """Sets the os_version of this ProcessServer.

        OS Version of the process server. Note: This will get populated if user has CS version greater than 9.12.0.0.

        :param os_version: The os_version of this ProcessServer.
        :type os_version: str
        """

        self._os_version = os_version

    @property
    def ps_service_status(self):
        """Gets the ps_service_status of this ProcessServer.

        The PS service status.

        :return: The ps_service_status of this ProcessServer.
        :rtype: str
        """
        return self._ps_service_status

    @ps_service_status.setter
    def ps_service_status(self, ps_service_status):
        """Sets the ps_service_status of this ProcessServer.

        The PS service status.

        :param ps_service_status: The ps_service_status of this ProcessServer.
        :type ps_service_status: str
        """

        self._ps_service_status = ps_service_status

    @property
    def replication_pair_count(self):
        """Gets the replication_pair_count of this ProcessServer.

        The number of replication pairs configured in this PS.

        :return: The replication_pair_count of this ProcessServer.
        :rtype: str
        """
        return self._replication_pair_count

    @replication_pair_count.setter
    def replication_pair_count(self, replication_pair_count):
        """Sets the replication_pair_count of this ProcessServer.

        The number of replication pairs configured in this PS.

        :param replication_pair_count: The replication_pair_count of this ProcessServer.
        :type replication_pair_count: str
        """

        self._replication_pair_count = replication_pair_count

    @property
    def space_usage_status(self):
        """Gets the space_usage_status of this ProcessServer.

        The space usage status.

        :return: The space_usage_status of this ProcessServer.
        :rtype: str
        """
        return self._space_usage_status

    @space_usage_status.setter
    def space_usage_status(self, space_usage_status):
        """Sets the space_usage_status of this ProcessServer.

        The space usage status.

        :param space_usage_status: The space_usage_status of this ProcessServer.
        :type space_usage_status: str
        """

        self._space_usage_status = space_usage_status

    @property
    def ssl_cert_expiry_date(self):
        """Gets the ssl_cert_expiry_date of this ProcessServer.

        The PS SSL cert expiry date.

        :return: The ssl_cert_expiry_date of this ProcessServer.
        :rtype: datetime
        """
        return self._ssl_cert_expiry_date

    @ssl_cert_expiry_date.setter
    def ssl_cert_expiry_date(self, ssl_cert_expiry_date):
        """Sets the ssl_cert_expiry_date of this ProcessServer.

        The PS SSL cert expiry date.

        :param ssl_cert_expiry_date: The ssl_cert_expiry_date of this ProcessServer.
        :type ssl_cert_expiry_date: datetime
        """

        self._ssl_cert_expiry_date = ssl_cert_expiry_date

    @property
    def ssl_cert_expiry_remaining_days(self):
        """Gets the ssl_cert_expiry_remaining_days of this ProcessServer.

        CS SSL cert expiry date.

        :return: The ssl_cert_expiry_remaining_days of this ProcessServer.
        :rtype: int
        """
        return self._ssl_cert_expiry_remaining_days

    @ssl_cert_expiry_remaining_days.setter
    def ssl_cert_expiry_remaining_days(self, ssl_cert_expiry_remaining_days):
        """Sets the ssl_cert_expiry_remaining_days of this ProcessServer.

        CS SSL cert expiry date.

        :param ssl_cert_expiry_remaining_days: The ssl_cert_expiry_remaining_days of this ProcessServer.
        :type ssl_cert_expiry_remaining_days: int
        """

        self._ssl_cert_expiry_remaining_days = ssl_cert_expiry_remaining_days

    @property
    def system_load(self):
        """Gets the system_load of this ProcessServer.

        The percentage of the system load.

        :return: The system_load of this ProcessServer.
        :rtype: str
        """
        return self._system_load

    @system_load.setter
    def system_load(self, system_load):
        """Sets the system_load of this ProcessServer.

        The percentage of the system load.

        :param system_load: The system_load of this ProcessServer.
        :type system_load: str
        """

        self._system_load = system_load

    @property
    def system_load_status(self):
        """Gets the system_load_status of this ProcessServer.

        The system load status.

        :return: The system_load_status of this ProcessServer.
        :rtype: str
        """
        return self._system_load_status

    @system_load_status.setter
    def system_load_status(self, system_load_status):
        """Sets the system_load_status of this ProcessServer.

        The system load status.

        :param system_load_status: The system_load_status of this ProcessServer.
        :type system_load_status: str
        """

        self._system_load_status = system_load_status

    @property
    def total_memory_in_bytes(self):
        """Gets the total_memory_in_bytes of this ProcessServer.

        The total memory.

        :return: The total_memory_in_bytes of this ProcessServer.
        :rtype: int
        """
        return self._total_memory_in_bytes

    @total_memory_in_bytes.setter
    def total_memory_in_bytes(self, total_memory_in_bytes):
        """Sets the total_memory_in_bytes of this ProcessServer.

        The total memory.

        :param total_memory_in_bytes: The total_memory_in_bytes of this ProcessServer.
        :type total_memory_in_bytes: int
        """

        self._total_memory_in_bytes = total_memory_in_bytes

    @property
    def total_space_in_bytes(self):
        """Gets the total_space_in_bytes of this ProcessServer.

        The total space.

        :return: The total_space_in_bytes of this ProcessServer.
        :rtype: int
        """
        return self._total_space_in_bytes

    @total_space_in_bytes.setter
    def total_space_in_bytes(self, total_space_in_bytes):
        """Sets the total_space_in_bytes of this ProcessServer.

        The total space.

        :param total_space_in_bytes: The total_space_in_bytes of this ProcessServer.
        :type total_space_in_bytes: int
        """

        self._total_space_in_bytes = total_space_in_bytes

    @property
    def version_status(self):
        """Gets the version_status of this ProcessServer.

        Version status

        :return: The version_status of this ProcessServer.
        :rtype: str
        """
        return self._version_status

    @version_status.setter
    def version_status(self, version_status):
        """Sets the version_status of this ProcessServer.

        Version status

        :param version_status: The version_status of this ProcessServer.
        :type version_status: str
        """

        self._version_status = version_status
