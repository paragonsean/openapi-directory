# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VMNicInputDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nic_id: str=None, recovery_vm_subnet_name: str=None, replica_nic_static_ip_address: str=None, selection_type: str=None):
        """VMNicInputDetails - a model defined in OpenAPI

        :param nic_id: The nic_id of this VMNicInputDetails.
        :param recovery_vm_subnet_name: The recovery_vm_subnet_name of this VMNicInputDetails.
        :param replica_nic_static_ip_address: The replica_nic_static_ip_address of this VMNicInputDetails.
        :param selection_type: The selection_type of this VMNicInputDetails.
        """
        self.openapi_types = {
            'nic_id': str,
            'recovery_vm_subnet_name': str,
            'replica_nic_static_ip_address': str,
            'selection_type': str
        }

        self.attribute_map = {
            'nic_id': 'nicId',
            'recovery_vm_subnet_name': 'recoveryVMSubnetName',
            'replica_nic_static_ip_address': 'replicaNicStaticIPAddress',
            'selection_type': 'selectionType'
        }

        self._nic_id = nic_id
        self._recovery_vm_subnet_name = recovery_vm_subnet_name
        self._replica_nic_static_ip_address = replica_nic_static_ip_address
        self._selection_type = selection_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VMNicInputDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VMNicInputDetails of this VMNicInputDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nic_id(self):
        """Gets the nic_id of this VMNicInputDetails.

        The nic Id.

        :return: The nic_id of this VMNicInputDetails.
        :rtype: str
        """
        return self._nic_id

    @nic_id.setter
    def nic_id(self, nic_id):
        """Sets the nic_id of this VMNicInputDetails.

        The nic Id.

        :param nic_id: The nic_id of this VMNicInputDetails.
        :type nic_id: str
        """

        self._nic_id = nic_id

    @property
    def recovery_vm_subnet_name(self):
        """Gets the recovery_vm_subnet_name of this VMNicInputDetails.

        Recovery VM subnet name.

        :return: The recovery_vm_subnet_name of this VMNicInputDetails.
        :rtype: str
        """
        return self._recovery_vm_subnet_name

    @recovery_vm_subnet_name.setter
    def recovery_vm_subnet_name(self, recovery_vm_subnet_name):
        """Sets the recovery_vm_subnet_name of this VMNicInputDetails.

        Recovery VM subnet name.

        :param recovery_vm_subnet_name: The recovery_vm_subnet_name of this VMNicInputDetails.
        :type recovery_vm_subnet_name: str
        """

        self._recovery_vm_subnet_name = recovery_vm_subnet_name

    @property
    def replica_nic_static_ip_address(self):
        """Gets the replica_nic_static_ip_address of this VMNicInputDetails.

        Replica nic static IP address.

        :return: The replica_nic_static_ip_address of this VMNicInputDetails.
        :rtype: str
        """
        return self._replica_nic_static_ip_address

    @replica_nic_static_ip_address.setter
    def replica_nic_static_ip_address(self, replica_nic_static_ip_address):
        """Sets the replica_nic_static_ip_address of this VMNicInputDetails.

        Replica nic static IP address.

        :param replica_nic_static_ip_address: The replica_nic_static_ip_address of this VMNicInputDetails.
        :type replica_nic_static_ip_address: str
        """

        self._replica_nic_static_ip_address = replica_nic_static_ip_address

    @property
    def selection_type(self):
        """Gets the selection_type of this VMNicInputDetails.

        Selection type for failover.

        :return: The selection_type of this VMNicInputDetails.
        :rtype: str
        """
        return self._selection_type

    @selection_type.setter
    def selection_type(self, selection_type):
        """Sets the selection_type of this VMNicInputDetails.

        Selection type for failover.

        :param selection_type: The selection_type of this VMNicInputDetails.
        :type selection_type: str
        """

        self._selection_type = selection_type
