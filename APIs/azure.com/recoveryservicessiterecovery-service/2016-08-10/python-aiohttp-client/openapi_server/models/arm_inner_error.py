# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.method_call_status import MethodCallStatus
from openapi_server import util


class ARMInnerError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_id: str=None, container_id: str=None, fabric_id: str=None, h_v_cluster_id: str=None, h_v_host_id: str=None, live_id: str=None, method_status: MethodCallStatus=None, network_id: str=None, resource_id: str=None, resource_name: str=None, serialized_srs_log_context: str=None, source: str=None, subscription_id: str=None, trace: str=None, vm_id: str=None):
        """ARMInnerError - a model defined in OpenAPI

        :param cloud_id: The cloud_id of this ARMInnerError.
        :param container_id: The container_id of this ARMInnerError.
        :param fabric_id: The fabric_id of this ARMInnerError.
        :param h_v_cluster_id: The h_v_cluster_id of this ARMInnerError.
        :param h_v_host_id: The h_v_host_id of this ARMInnerError.
        :param live_id: The live_id of this ARMInnerError.
        :param method_status: The method_status of this ARMInnerError.
        :param network_id: The network_id of this ARMInnerError.
        :param resource_id: The resource_id of this ARMInnerError.
        :param resource_name: The resource_name of this ARMInnerError.
        :param serialized_srs_log_context: The serialized_srs_log_context of this ARMInnerError.
        :param source: The source of this ARMInnerError.
        :param subscription_id: The subscription_id of this ARMInnerError.
        :param trace: The trace of this ARMInnerError.
        :param vm_id: The vm_id of this ARMInnerError.
        """
        self.openapi_types = {
            'cloud_id': str,
            'container_id': str,
            'fabric_id': str,
            'h_v_cluster_id': str,
            'h_v_host_id': str,
            'live_id': str,
            'method_status': MethodCallStatus,
            'network_id': str,
            'resource_id': str,
            'resource_name': str,
            'serialized_srs_log_context': str,
            'source': str,
            'subscription_id': str,
            'trace': str,
            'vm_id': str
        }

        self.attribute_map = {
            'cloud_id': 'cloudId',
            'container_id': 'containerId',
            'fabric_id': 'fabricId',
            'h_v_cluster_id': 'hVClusterId',
            'h_v_host_id': 'hVHostId',
            'live_id': 'liveId',
            'method_status': 'methodStatus',
            'network_id': 'networkId',
            'resource_id': 'resourceId',
            'resource_name': 'resourceName',
            'serialized_srs_log_context': 'serializedSRSLogContext',
            'source': 'source',
            'subscription_id': 'subscriptionId',
            'trace': 'trace',
            'vm_id': 'vmId'
        }

        self._cloud_id = cloud_id
        self._container_id = container_id
        self._fabric_id = fabric_id
        self._h_v_cluster_id = h_v_cluster_id
        self._h_v_host_id = h_v_host_id
        self._live_id = live_id
        self._method_status = method_status
        self._network_id = network_id
        self._resource_id = resource_id
        self._resource_name = resource_name
        self._serialized_srs_log_context = serialized_srs_log_context
        self._source = source
        self._subscription_id = subscription_id
        self._trace = trace
        self._vm_id = vm_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ARMInnerError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ARMInnerError of this ARMInnerError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_id(self):
        """Gets the cloud_id of this ARMInnerError.

        Gets cloud Id in exception.

        :return: The cloud_id of this ARMInnerError.
        :rtype: str
        """
        return self._cloud_id

    @cloud_id.setter
    def cloud_id(self, cloud_id):
        """Sets the cloud_id of this ARMInnerError.

        Gets cloud Id in exception.

        :param cloud_id: The cloud_id of this ARMInnerError.
        :type cloud_id: str
        """

        self._cloud_id = cloud_id

    @property
    def container_id(self):
        """Gets the container_id of this ARMInnerError.

        Gets container Id of the caller.

        :return: The container_id of this ARMInnerError.
        :rtype: str
        """
        return self._container_id

    @container_id.setter
    def container_id(self, container_id):
        """Sets the container_id of this ARMInnerError.

        Gets container Id of the caller.

        :param container_id: The container_id of this ARMInnerError.
        :type container_id: str
        """

        self._container_id = container_id

    @property
    def fabric_id(self):
        """Gets the fabric_id of this ARMInnerError.

        Gets Fabric Id.

        :return: The fabric_id of this ARMInnerError.
        :rtype: str
        """
        return self._fabric_id

    @fabric_id.setter
    def fabric_id(self, fabric_id):
        """Sets the fabric_id of this ARMInnerError.

        Gets Fabric Id.

        :param fabric_id: The fabric_id of this ARMInnerError.
        :type fabric_id: str
        """

        self._fabric_id = fabric_id

    @property
    def h_v_cluster_id(self):
        """Gets the h_v_cluster_id of this ARMInnerError.

        Gets hyperV cluster Id.

        :return: The h_v_cluster_id of this ARMInnerError.
        :rtype: str
        """
        return self._h_v_cluster_id

    @h_v_cluster_id.setter
    def h_v_cluster_id(self, h_v_cluster_id):
        """Sets the h_v_cluster_id of this ARMInnerError.

        Gets hyperV cluster Id.

        :param h_v_cluster_id: The h_v_cluster_id of this ARMInnerError.
        :type h_v_cluster_id: str
        """

        self._h_v_cluster_id = h_v_cluster_id

    @property
    def h_v_host_id(self):
        """Gets the h_v_host_id of this ARMInnerError.

        Gets hyperV host ID.

        :return: The h_v_host_id of this ARMInnerError.
        :rtype: str
        """
        return self._h_v_host_id

    @h_v_host_id.setter
    def h_v_host_id(self, h_v_host_id):
        """Sets the h_v_host_id of this ARMInnerError.

        Gets hyperV host ID.

        :param h_v_host_id: The h_v_host_id of this ARMInnerError.
        :type h_v_host_id: str
        """

        self._h_v_host_id = h_v_host_id

    @property
    def live_id(self):
        """Gets the live_id of this ARMInnerError.

        Gets Live Id of the caller.

        :return: The live_id of this ARMInnerError.
        :rtype: str
        """
        return self._live_id

    @live_id.setter
    def live_id(self, live_id):
        """Sets the live_id of this ARMInnerError.

        Gets Live Id of the caller.

        :param live_id: The live_id of this ARMInnerError.
        :type live_id: str
        """

        self._live_id = live_id

    @property
    def method_status(self):
        """Gets the method_status of this ARMInnerError.


        :return: The method_status of this ARMInnerError.
        :rtype: MethodCallStatus
        """
        return self._method_status

    @method_status.setter
    def method_status(self, method_status):
        """Sets the method_status of this ARMInnerError.


        :param method_status: The method_status of this ARMInnerError.
        :type method_status: MethodCallStatus
        """

        self._method_status = method_status

    @property
    def network_id(self):
        """Gets the network_id of this ARMInnerError.

        Gets network Id.

        :return: The network_id of this ARMInnerError.
        :rtype: str
        """
        return self._network_id

    @network_id.setter
    def network_id(self, network_id):
        """Sets the network_id of this ARMInnerError.

        Gets network Id.

        :param network_id: The network_id of this ARMInnerError.
        :type network_id: str
        """

        self._network_id = network_id

    @property
    def resource_id(self):
        """Gets the resource_id of this ARMInnerError.

        Gets resource id used in the call.

        :return: The resource_id of this ARMInnerError.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this ARMInnerError.

        Gets resource id used in the call.

        :param resource_id: The resource_id of this ARMInnerError.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def resource_name(self):
        """Gets the resource_name of this ARMInnerError.

        Gets caller resource name.

        :return: The resource_name of this ARMInnerError.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this ARMInnerError.

        Gets caller resource name.

        :param resource_name: The resource_name of this ARMInnerError.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def serialized_srs_log_context(self):
        """Gets the serialized_srs_log_context of this ARMInnerError.

        Gets serialized SRS log context.

        :return: The serialized_srs_log_context of this ARMInnerError.
        :rtype: str
        """
        return self._serialized_srs_log_context

    @serialized_srs_log_context.setter
    def serialized_srs_log_context(self, serialized_srs_log_context):
        """Sets the serialized_srs_log_context of this ARMInnerError.

        Gets serialized SRS log context.

        :param serialized_srs_log_context: The serialized_srs_log_context of this ARMInnerError.
        :type serialized_srs_log_context: str
        """

        self._serialized_srs_log_context = serialized_srs_log_context

    @property
    def source(self):
        """Gets the source of this ARMInnerError.

        Gets exception source.

        :return: The source of this ARMInnerError.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this ARMInnerError.

        Gets exception source.

        :param source: The source of this ARMInnerError.
        :type source: str
        """

        self._source = source

    @property
    def subscription_id(self):
        """Gets the subscription_id of this ARMInnerError.

        Gets subscription Id.

        :return: The subscription_id of this ARMInnerError.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this ARMInnerError.

        Gets subscription Id.

        :param subscription_id: The subscription_id of this ARMInnerError.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def trace(self):
        """Gets the trace of this ARMInnerError.

        Gets complete stack trace of the exception.

        :return: The trace of this ARMInnerError.
        :rtype: str
        """
        return self._trace

    @trace.setter
    def trace(self, trace):
        """Sets the trace of this ARMInnerError.

        Gets complete stack trace of the exception.

        :param trace: The trace of this ARMInnerError.
        :type trace: str
        """

        self._trace = trace

    @property
    def vm_id(self):
        """Gets the vm_id of this ARMInnerError.

        Gets Vm Id.

        :return: The vm_id of this ARMInnerError.
        :rtype: str
        """
        return self._vm_id

    @vm_id.setter
    def vm_id(self, vm_id):
        """Sets the vm_id of this ARMInnerError.

        Gets Vm Id.

        :param vm_id: The vm_id of this ARMInnerError.
        :type vm_id: str
        """

        self._vm_id = vm_id
