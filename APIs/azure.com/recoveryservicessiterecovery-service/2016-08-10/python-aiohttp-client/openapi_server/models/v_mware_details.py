# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fabric_specific_details import FabricSpecificDetails
from openapi_server.models.master_target_server import MasterTargetServer
from openapi_server.models.process_server import ProcessServer
from openapi_server.models.run_as_account import RunAsAccount
from openapi_server import util


class VMwareDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_count: str=None, agent_version: str=None, available_memory_in_bytes: int=None, available_space_in_bytes: int=None, cpu_load: str=None, cpu_load_status: str=None, cs_service_status: str=None, database_server_load: str=None, database_server_load_status: str=None, host_name: str=None, ip_address: str=None, last_heartbeat: datetime=None, master_target_servers: List[MasterTargetServer]=None, memory_usage_status: str=None, process_server_count: str=None, process_servers: List[ProcessServer]=None, protected_servers: str=None, ps_template_version: str=None, replication_pair_count: str=None, run_as_accounts: List[RunAsAccount]=None, space_usage_status: str=None, ssl_cert_expiry_date: datetime=None, ssl_cert_expiry_remaining_days: int=None, system_load: str=None, system_load_status: str=None, total_memory_in_bytes: int=None, total_space_in_bytes: int=None, version_status: str=None, web_load: str=None, web_load_status: str=None, instance_type: str=None):
        """VMwareDetails - a model defined in OpenAPI

        :param agent_count: The agent_count of this VMwareDetails.
        :param agent_version: The agent_version of this VMwareDetails.
        :param available_memory_in_bytes: The available_memory_in_bytes of this VMwareDetails.
        :param available_space_in_bytes: The available_space_in_bytes of this VMwareDetails.
        :param cpu_load: The cpu_load of this VMwareDetails.
        :param cpu_load_status: The cpu_load_status of this VMwareDetails.
        :param cs_service_status: The cs_service_status of this VMwareDetails.
        :param database_server_load: The database_server_load of this VMwareDetails.
        :param database_server_load_status: The database_server_load_status of this VMwareDetails.
        :param host_name: The host_name of this VMwareDetails.
        :param ip_address: The ip_address of this VMwareDetails.
        :param last_heartbeat: The last_heartbeat of this VMwareDetails.
        :param master_target_servers: The master_target_servers of this VMwareDetails.
        :param memory_usage_status: The memory_usage_status of this VMwareDetails.
        :param process_server_count: The process_server_count of this VMwareDetails.
        :param process_servers: The process_servers of this VMwareDetails.
        :param protected_servers: The protected_servers of this VMwareDetails.
        :param ps_template_version: The ps_template_version of this VMwareDetails.
        :param replication_pair_count: The replication_pair_count of this VMwareDetails.
        :param run_as_accounts: The run_as_accounts of this VMwareDetails.
        :param space_usage_status: The space_usage_status of this VMwareDetails.
        :param ssl_cert_expiry_date: The ssl_cert_expiry_date of this VMwareDetails.
        :param ssl_cert_expiry_remaining_days: The ssl_cert_expiry_remaining_days of this VMwareDetails.
        :param system_load: The system_load of this VMwareDetails.
        :param system_load_status: The system_load_status of this VMwareDetails.
        :param total_memory_in_bytes: The total_memory_in_bytes of this VMwareDetails.
        :param total_space_in_bytes: The total_space_in_bytes of this VMwareDetails.
        :param version_status: The version_status of this VMwareDetails.
        :param web_load: The web_load of this VMwareDetails.
        :param web_load_status: The web_load_status of this VMwareDetails.
        :param instance_type: The instance_type of this VMwareDetails.
        """
        self.openapi_types = {
            'agent_count': str,
            'agent_version': str,
            'available_memory_in_bytes': int,
            'available_space_in_bytes': int,
            'cpu_load': str,
            'cpu_load_status': str,
            'cs_service_status': str,
            'database_server_load': str,
            'database_server_load_status': str,
            'host_name': str,
            'ip_address': str,
            'last_heartbeat': datetime,
            'master_target_servers': List[MasterTargetServer],
            'memory_usage_status': str,
            'process_server_count': str,
            'process_servers': List[ProcessServer],
            'protected_servers': str,
            'ps_template_version': str,
            'replication_pair_count': str,
            'run_as_accounts': List[RunAsAccount],
            'space_usage_status': str,
            'ssl_cert_expiry_date': datetime,
            'ssl_cert_expiry_remaining_days': int,
            'system_load': str,
            'system_load_status': str,
            'total_memory_in_bytes': int,
            'total_space_in_bytes': int,
            'version_status': str,
            'web_load': str,
            'web_load_status': str,
            'instance_type': str
        }

        self.attribute_map = {
            'agent_count': 'agentCount',
            'agent_version': 'agentVersion',
            'available_memory_in_bytes': 'availableMemoryInBytes',
            'available_space_in_bytes': 'availableSpaceInBytes',
            'cpu_load': 'cpuLoad',
            'cpu_load_status': 'cpuLoadStatus',
            'cs_service_status': 'csServiceStatus',
            'database_server_load': 'databaseServerLoad',
            'database_server_load_status': 'databaseServerLoadStatus',
            'host_name': 'hostName',
            'ip_address': 'ipAddress',
            'last_heartbeat': 'lastHeartbeat',
            'master_target_servers': 'masterTargetServers',
            'memory_usage_status': 'memoryUsageStatus',
            'process_server_count': 'processServerCount',
            'process_servers': 'processServers',
            'protected_servers': 'protectedServers',
            'ps_template_version': 'psTemplateVersion',
            'replication_pair_count': 'replicationPairCount',
            'run_as_accounts': 'runAsAccounts',
            'space_usage_status': 'spaceUsageStatus',
            'ssl_cert_expiry_date': 'sslCertExpiryDate',
            'ssl_cert_expiry_remaining_days': 'sslCertExpiryRemainingDays',
            'system_load': 'systemLoad',
            'system_load_status': 'systemLoadStatus',
            'total_memory_in_bytes': 'totalMemoryInBytes',
            'total_space_in_bytes': 'totalSpaceInBytes',
            'version_status': 'versionStatus',
            'web_load': 'webLoad',
            'web_load_status': 'webLoadStatus',
            'instance_type': 'instanceType'
        }

        self._agent_count = agent_count
        self._agent_version = agent_version
        self._available_memory_in_bytes = available_memory_in_bytes
        self._available_space_in_bytes = available_space_in_bytes
        self._cpu_load = cpu_load
        self._cpu_load_status = cpu_load_status
        self._cs_service_status = cs_service_status
        self._database_server_load = database_server_load
        self._database_server_load_status = database_server_load_status
        self._host_name = host_name
        self._ip_address = ip_address
        self._last_heartbeat = last_heartbeat
        self._master_target_servers = master_target_servers
        self._memory_usage_status = memory_usage_status
        self._process_server_count = process_server_count
        self._process_servers = process_servers
        self._protected_servers = protected_servers
        self._ps_template_version = ps_template_version
        self._replication_pair_count = replication_pair_count
        self._run_as_accounts = run_as_accounts
        self._space_usage_status = space_usage_status
        self._ssl_cert_expiry_date = ssl_cert_expiry_date
        self._ssl_cert_expiry_remaining_days = ssl_cert_expiry_remaining_days
        self._system_load = system_load
        self._system_load_status = system_load_status
        self._total_memory_in_bytes = total_memory_in_bytes
        self._total_space_in_bytes = total_space_in_bytes
        self._version_status = version_status
        self._web_load = web_load
        self._web_load_status = web_load_status
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VMwareDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VMwareDetails of this VMwareDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_count(self):
        """Gets the agent_count of this VMwareDetails.

        The number of source and target servers configured to talk to this CS.

        :return: The agent_count of this VMwareDetails.
        :rtype: str
        """
        return self._agent_count

    @agent_count.setter
    def agent_count(self, agent_count):
        """Sets the agent_count of this VMwareDetails.

        The number of source and target servers configured to talk to this CS.

        :param agent_count: The agent_count of this VMwareDetails.
        :type agent_count: str
        """

        self._agent_count = agent_count

    @property
    def agent_version(self):
        """Gets the agent_version of this VMwareDetails.

        The agent Version.

        :return: The agent_version of this VMwareDetails.
        :rtype: str
        """
        return self._agent_version

    @agent_version.setter
    def agent_version(self, agent_version):
        """Sets the agent_version of this VMwareDetails.

        The agent Version.

        :param agent_version: The agent_version of this VMwareDetails.
        :type agent_version: str
        """

        self._agent_version = agent_version

    @property
    def available_memory_in_bytes(self):
        """Gets the available_memory_in_bytes of this VMwareDetails.

        The available memory.

        :return: The available_memory_in_bytes of this VMwareDetails.
        :rtype: int
        """
        return self._available_memory_in_bytes

    @available_memory_in_bytes.setter
    def available_memory_in_bytes(self, available_memory_in_bytes):
        """Sets the available_memory_in_bytes of this VMwareDetails.

        The available memory.

        :param available_memory_in_bytes: The available_memory_in_bytes of this VMwareDetails.
        :type available_memory_in_bytes: int
        """

        self._available_memory_in_bytes = available_memory_in_bytes

    @property
    def available_space_in_bytes(self):
        """Gets the available_space_in_bytes of this VMwareDetails.

        The available space.

        :return: The available_space_in_bytes of this VMwareDetails.
        :rtype: int
        """
        return self._available_space_in_bytes

    @available_space_in_bytes.setter
    def available_space_in_bytes(self, available_space_in_bytes):
        """Sets the available_space_in_bytes of this VMwareDetails.

        The available space.

        :param available_space_in_bytes: The available_space_in_bytes of this VMwareDetails.
        :type available_space_in_bytes: int
        """

        self._available_space_in_bytes = available_space_in_bytes

    @property
    def cpu_load(self):
        """Gets the cpu_load of this VMwareDetails.

        The percentage of the CPU load.

        :return: The cpu_load of this VMwareDetails.
        :rtype: str
        """
        return self._cpu_load

    @cpu_load.setter
    def cpu_load(self, cpu_load):
        """Sets the cpu_load of this VMwareDetails.

        The percentage of the CPU load.

        :param cpu_load: The cpu_load of this VMwareDetails.
        :type cpu_load: str
        """

        self._cpu_load = cpu_load

    @property
    def cpu_load_status(self):
        """Gets the cpu_load_status of this VMwareDetails.

        The CPU load status.

        :return: The cpu_load_status of this VMwareDetails.
        :rtype: str
        """
        return self._cpu_load_status

    @cpu_load_status.setter
    def cpu_load_status(self, cpu_load_status):
        """Sets the cpu_load_status of this VMwareDetails.

        The CPU load status.

        :param cpu_load_status: The cpu_load_status of this VMwareDetails.
        :type cpu_load_status: str
        """

        self._cpu_load_status = cpu_load_status

    @property
    def cs_service_status(self):
        """Gets the cs_service_status of this VMwareDetails.

        The CS service status.

        :return: The cs_service_status of this VMwareDetails.
        :rtype: str
        """
        return self._cs_service_status

    @cs_service_status.setter
    def cs_service_status(self, cs_service_status):
        """Sets the cs_service_status of this VMwareDetails.

        The CS service status.

        :param cs_service_status: The cs_service_status of this VMwareDetails.
        :type cs_service_status: str
        """

        self._cs_service_status = cs_service_status

    @property
    def database_server_load(self):
        """Gets the database_server_load of this VMwareDetails.

        The database server load.

        :return: The database_server_load of this VMwareDetails.
        :rtype: str
        """
        return self._database_server_load

    @database_server_load.setter
    def database_server_load(self, database_server_load):
        """Sets the database_server_load of this VMwareDetails.

        The database server load.

        :param database_server_load: The database_server_load of this VMwareDetails.
        :type database_server_load: str
        """

        self._database_server_load = database_server_load

    @property
    def database_server_load_status(self):
        """Gets the database_server_load_status of this VMwareDetails.

        The database server load status.

        :return: The database_server_load_status of this VMwareDetails.
        :rtype: str
        """
        return self._database_server_load_status

    @database_server_load_status.setter
    def database_server_load_status(self, database_server_load_status):
        """Sets the database_server_load_status of this VMwareDetails.

        The database server load status.

        :param database_server_load_status: The database_server_load_status of this VMwareDetails.
        :type database_server_load_status: str
        """

        self._database_server_load_status = database_server_load_status

    @property
    def host_name(self):
        """Gets the host_name of this VMwareDetails.

        The host name.

        :return: The host_name of this VMwareDetails.
        :rtype: str
        """
        return self._host_name

    @host_name.setter
    def host_name(self, host_name):
        """Sets the host_name of this VMwareDetails.

        The host name.

        :param host_name: The host_name of this VMwareDetails.
        :type host_name: str
        """

        self._host_name = host_name

    @property
    def ip_address(self):
        """Gets the ip_address of this VMwareDetails.

        The IP address.

        :return: The ip_address of this VMwareDetails.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this VMwareDetails.

        The IP address.

        :param ip_address: The ip_address of this VMwareDetails.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def last_heartbeat(self):
        """Gets the last_heartbeat of this VMwareDetails.

        The last heartbeat received from CS server.

        :return: The last_heartbeat of this VMwareDetails.
        :rtype: datetime
        """
        return self._last_heartbeat

    @last_heartbeat.setter
    def last_heartbeat(self, last_heartbeat):
        """Sets the last_heartbeat of this VMwareDetails.

        The last heartbeat received from CS server.

        :param last_heartbeat: The last_heartbeat of this VMwareDetails.
        :type last_heartbeat: datetime
        """

        self._last_heartbeat = last_heartbeat

    @property
    def master_target_servers(self):
        """Gets the master_target_servers of this VMwareDetails.

        The list of Master Target servers associated with the fabric.

        :return: The master_target_servers of this VMwareDetails.
        :rtype: List[MasterTargetServer]
        """
        return self._master_target_servers

    @master_target_servers.setter
    def master_target_servers(self, master_target_servers):
        """Sets the master_target_servers of this VMwareDetails.

        The list of Master Target servers associated with the fabric.

        :param master_target_servers: The master_target_servers of this VMwareDetails.
        :type master_target_servers: List[MasterTargetServer]
        """

        self._master_target_servers = master_target_servers

    @property
    def memory_usage_status(self):
        """Gets the memory_usage_status of this VMwareDetails.

        The memory usage status.

        :return: The memory_usage_status of this VMwareDetails.
        :rtype: str
        """
        return self._memory_usage_status

    @memory_usage_status.setter
    def memory_usage_status(self, memory_usage_status):
        """Sets the memory_usage_status of this VMwareDetails.

        The memory usage status.

        :param memory_usage_status: The memory_usage_status of this VMwareDetails.
        :type memory_usage_status: str
        """

        self._memory_usage_status = memory_usage_status

    @property
    def process_server_count(self):
        """Gets the process_server_count of this VMwareDetails.

        The number of process servers.

        :return: The process_server_count of this VMwareDetails.
        :rtype: str
        """
        return self._process_server_count

    @process_server_count.setter
    def process_server_count(self, process_server_count):
        """Sets the process_server_count of this VMwareDetails.

        The number of process servers.

        :param process_server_count: The process_server_count of this VMwareDetails.
        :type process_server_count: str
        """

        self._process_server_count = process_server_count

    @property
    def process_servers(self):
        """Gets the process_servers of this VMwareDetails.

        The list of Process Servers associated with the fabric.

        :return: The process_servers of this VMwareDetails.
        :rtype: List[ProcessServer]
        """
        return self._process_servers

    @process_servers.setter
    def process_servers(self, process_servers):
        """Sets the process_servers of this VMwareDetails.

        The list of Process Servers associated with the fabric.

        :param process_servers: The process_servers of this VMwareDetails.
        :type process_servers: List[ProcessServer]
        """

        self._process_servers = process_servers

    @property
    def protected_servers(self):
        """Gets the protected_servers of this VMwareDetails.

        The number of protected servers.

        :return: The protected_servers of this VMwareDetails.
        :rtype: str
        """
        return self._protected_servers

    @protected_servers.setter
    def protected_servers(self, protected_servers):
        """Sets the protected_servers of this VMwareDetails.

        The number of protected servers.

        :param protected_servers: The protected_servers of this VMwareDetails.
        :type protected_servers: str
        """

        self._protected_servers = protected_servers

    @property
    def ps_template_version(self):
        """Gets the ps_template_version of this VMwareDetails.

        PS template version.

        :return: The ps_template_version of this VMwareDetails.
        :rtype: str
        """
        return self._ps_template_version

    @ps_template_version.setter
    def ps_template_version(self, ps_template_version):
        """Sets the ps_template_version of this VMwareDetails.

        PS template version.

        :param ps_template_version: The ps_template_version of this VMwareDetails.
        :type ps_template_version: str
        """

        self._ps_template_version = ps_template_version

    @property
    def replication_pair_count(self):
        """Gets the replication_pair_count of this VMwareDetails.

        The number of replication pairs configured in this CS.

        :return: The replication_pair_count of this VMwareDetails.
        :rtype: str
        """
        return self._replication_pair_count

    @replication_pair_count.setter
    def replication_pair_count(self, replication_pair_count):
        """Sets the replication_pair_count of this VMwareDetails.

        The number of replication pairs configured in this CS.

        :param replication_pair_count: The replication_pair_count of this VMwareDetails.
        :type replication_pair_count: str
        """

        self._replication_pair_count = replication_pair_count

    @property
    def run_as_accounts(self):
        """Gets the run_as_accounts of this VMwareDetails.

        The list of run as accounts created on the server.

        :return: The run_as_accounts of this VMwareDetails.
        :rtype: List[RunAsAccount]
        """
        return self._run_as_accounts

    @run_as_accounts.setter
    def run_as_accounts(self, run_as_accounts):
        """Sets the run_as_accounts of this VMwareDetails.

        The list of run as accounts created on the server.

        :param run_as_accounts: The run_as_accounts of this VMwareDetails.
        :type run_as_accounts: List[RunAsAccount]
        """

        self._run_as_accounts = run_as_accounts

    @property
    def space_usage_status(self):
        """Gets the space_usage_status of this VMwareDetails.

        The space usage status.

        :return: The space_usage_status of this VMwareDetails.
        :rtype: str
        """
        return self._space_usage_status

    @space_usage_status.setter
    def space_usage_status(self, space_usage_status):
        """Sets the space_usage_status of this VMwareDetails.

        The space usage status.

        :param space_usage_status: The space_usage_status of this VMwareDetails.
        :type space_usage_status: str
        """

        self._space_usage_status = space_usage_status

    @property
    def ssl_cert_expiry_date(self):
        """Gets the ssl_cert_expiry_date of this VMwareDetails.

        CS SSL cert expiry date.

        :return: The ssl_cert_expiry_date of this VMwareDetails.
        :rtype: datetime
        """
        return self._ssl_cert_expiry_date

    @ssl_cert_expiry_date.setter
    def ssl_cert_expiry_date(self, ssl_cert_expiry_date):
        """Sets the ssl_cert_expiry_date of this VMwareDetails.

        CS SSL cert expiry date.

        :param ssl_cert_expiry_date: The ssl_cert_expiry_date of this VMwareDetails.
        :type ssl_cert_expiry_date: datetime
        """

        self._ssl_cert_expiry_date = ssl_cert_expiry_date

    @property
    def ssl_cert_expiry_remaining_days(self):
        """Gets the ssl_cert_expiry_remaining_days of this VMwareDetails.

        CS SSL cert expiry date.

        :return: The ssl_cert_expiry_remaining_days of this VMwareDetails.
        :rtype: int
        """
        return self._ssl_cert_expiry_remaining_days

    @ssl_cert_expiry_remaining_days.setter
    def ssl_cert_expiry_remaining_days(self, ssl_cert_expiry_remaining_days):
        """Sets the ssl_cert_expiry_remaining_days of this VMwareDetails.

        CS SSL cert expiry date.

        :param ssl_cert_expiry_remaining_days: The ssl_cert_expiry_remaining_days of this VMwareDetails.
        :type ssl_cert_expiry_remaining_days: int
        """

        self._ssl_cert_expiry_remaining_days = ssl_cert_expiry_remaining_days

    @property
    def system_load(self):
        """Gets the system_load of this VMwareDetails.

        The percentage of the system load.

        :return: The system_load of this VMwareDetails.
        :rtype: str
        """
        return self._system_load

    @system_load.setter
    def system_load(self, system_load):
        """Sets the system_load of this VMwareDetails.

        The percentage of the system load.

        :param system_load: The system_load of this VMwareDetails.
        :type system_load: str
        """

        self._system_load = system_load

    @property
    def system_load_status(self):
        """Gets the system_load_status of this VMwareDetails.

        The system load status.

        :return: The system_load_status of this VMwareDetails.
        :rtype: str
        """
        return self._system_load_status

    @system_load_status.setter
    def system_load_status(self, system_load_status):
        """Sets the system_load_status of this VMwareDetails.

        The system load status.

        :param system_load_status: The system_load_status of this VMwareDetails.
        :type system_load_status: str
        """

        self._system_load_status = system_load_status

    @property
    def total_memory_in_bytes(self):
        """Gets the total_memory_in_bytes of this VMwareDetails.

        The total memory.

        :return: The total_memory_in_bytes of this VMwareDetails.
        :rtype: int
        """
        return self._total_memory_in_bytes

    @total_memory_in_bytes.setter
    def total_memory_in_bytes(self, total_memory_in_bytes):
        """Sets the total_memory_in_bytes of this VMwareDetails.

        The total memory.

        :param total_memory_in_bytes: The total_memory_in_bytes of this VMwareDetails.
        :type total_memory_in_bytes: int
        """

        self._total_memory_in_bytes = total_memory_in_bytes

    @property
    def total_space_in_bytes(self):
        """Gets the total_space_in_bytes of this VMwareDetails.

        The total space.

        :return: The total_space_in_bytes of this VMwareDetails.
        :rtype: int
        """
        return self._total_space_in_bytes

    @total_space_in_bytes.setter
    def total_space_in_bytes(self, total_space_in_bytes):
        """Sets the total_space_in_bytes of this VMwareDetails.

        The total space.

        :param total_space_in_bytes: The total_space_in_bytes of this VMwareDetails.
        :type total_space_in_bytes: int
        """

        self._total_space_in_bytes = total_space_in_bytes

    @property
    def version_status(self):
        """Gets the version_status of this VMwareDetails.

        Version status

        :return: The version_status of this VMwareDetails.
        :rtype: str
        """
        return self._version_status

    @version_status.setter
    def version_status(self, version_status):
        """Sets the version_status of this VMwareDetails.

        Version status

        :param version_status: The version_status of this VMwareDetails.
        :type version_status: str
        """

        self._version_status = version_status

    @property
    def web_load(self):
        """Gets the web_load of this VMwareDetails.

        The web load.

        :return: The web_load of this VMwareDetails.
        :rtype: str
        """
        return self._web_load

    @web_load.setter
    def web_load(self, web_load):
        """Sets the web_load of this VMwareDetails.

        The web load.

        :param web_load: The web_load of this VMwareDetails.
        :type web_load: str
        """

        self._web_load = web_load

    @property
    def web_load_status(self):
        """Gets the web_load_status of this VMwareDetails.

        The web load status.

        :return: The web_load_status of this VMwareDetails.
        :rtype: str
        """
        return self._web_load_status

    @web_load_status.setter
    def web_load_status(self, web_load_status):
        """Sets the web_load_status of this VMwareDetails.

        The web load status.

        :param web_load_status: The web_load_status of this VMwareDetails.
        :type web_load_status: str
        """

        self._web_load_status = web_load_status

    @property
    def instance_type(self):
        """Gets the instance_type of this VMwareDetails.

        Gets the class type. Overridden in derived classes.

        :return: The instance_type of this VMwareDetails.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this VMwareDetails.

        Gets the class type. Overridden in derived classes.

        :param instance_type: The instance_type of this VMwareDetails.
        :type instance_type: str
        """

        self._instance_type = instance_type
