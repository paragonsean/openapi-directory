# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.group_task_details import GroupTaskDetails
from openapi_server.models.job_error_details import JobErrorDetails
from openapi_server.models.task_type_details import TaskTypeDetails
from openapi_server import util


class ASRTask(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_actions: List[str]=None, custom_details: TaskTypeDetails=None, end_time: datetime=None, errors: List[JobErrorDetails]=None, friendly_name: str=None, group_task_custom_details: GroupTaskDetails=None, name: str=None, start_time: datetime=None, state: str=None, state_description: str=None, task_id: str=None, task_type: str=None):
        """ASRTask - a model defined in OpenAPI

        :param allowed_actions: The allowed_actions of this ASRTask.
        :param custom_details: The custom_details of this ASRTask.
        :param end_time: The end_time of this ASRTask.
        :param errors: The errors of this ASRTask.
        :param friendly_name: The friendly_name of this ASRTask.
        :param group_task_custom_details: The group_task_custom_details of this ASRTask.
        :param name: The name of this ASRTask.
        :param start_time: The start_time of this ASRTask.
        :param state: The state of this ASRTask.
        :param state_description: The state_description of this ASRTask.
        :param task_id: The task_id of this ASRTask.
        :param task_type: The task_type of this ASRTask.
        """
        self.openapi_types = {
            'allowed_actions': List[str],
            'custom_details': TaskTypeDetails,
            'end_time': datetime,
            'errors': List[JobErrorDetails],
            'friendly_name': str,
            'group_task_custom_details': GroupTaskDetails,
            'name': str,
            'start_time': datetime,
            'state': str,
            'state_description': str,
            'task_id': str,
            'task_type': str
        }

        self.attribute_map = {
            'allowed_actions': 'allowedActions',
            'custom_details': 'customDetails',
            'end_time': 'endTime',
            'errors': 'errors',
            'friendly_name': 'friendlyName',
            'group_task_custom_details': 'groupTaskCustomDetails',
            'name': 'name',
            'start_time': 'startTime',
            'state': 'state',
            'state_description': 'stateDescription',
            'task_id': 'taskId',
            'task_type': 'taskType'
        }

        self._allowed_actions = allowed_actions
        self._custom_details = custom_details
        self._end_time = end_time
        self._errors = errors
        self._friendly_name = friendly_name
        self._group_task_custom_details = group_task_custom_details
        self._name = name
        self._start_time = start_time
        self._state = state
        self._state_description = state_description
        self._task_id = task_id
        self._task_type = task_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ASRTask':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ASRTask of this ASRTask.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_actions(self):
        """Gets the allowed_actions of this ASRTask.

        The state/actions applicable on this task.

        :return: The allowed_actions of this ASRTask.
        :rtype: List[str]
        """
        return self._allowed_actions

    @allowed_actions.setter
    def allowed_actions(self, allowed_actions):
        """Sets the allowed_actions of this ASRTask.

        The state/actions applicable on this task.

        :param allowed_actions: The allowed_actions of this ASRTask.
        :type allowed_actions: List[str]
        """

        self._allowed_actions = allowed_actions

    @property
    def custom_details(self):
        """Gets the custom_details of this ASRTask.


        :return: The custom_details of this ASRTask.
        :rtype: TaskTypeDetails
        """
        return self._custom_details

    @custom_details.setter
    def custom_details(self, custom_details):
        """Sets the custom_details of this ASRTask.


        :param custom_details: The custom_details of this ASRTask.
        :type custom_details: TaskTypeDetails
        """

        self._custom_details = custom_details

    @property
    def end_time(self):
        """Gets the end_time of this ASRTask.

        The end time.

        :return: The end_time of this ASRTask.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this ASRTask.

        The end time.

        :param end_time: The end_time of this ASRTask.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def errors(self):
        """Gets the errors of this ASRTask.

        The task error details.

        :return: The errors of this ASRTask.
        :rtype: List[JobErrorDetails]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this ASRTask.

        The task error details.

        :param errors: The errors of this ASRTask.
        :type errors: List[JobErrorDetails]
        """

        self._errors = errors

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ASRTask.

        The name.

        :return: The friendly_name of this ASRTask.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ASRTask.

        The name.

        :param friendly_name: The friendly_name of this ASRTask.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def group_task_custom_details(self):
        """Gets the group_task_custom_details of this ASRTask.


        :return: The group_task_custom_details of this ASRTask.
        :rtype: GroupTaskDetails
        """
        return self._group_task_custom_details

    @group_task_custom_details.setter
    def group_task_custom_details(self, group_task_custom_details):
        """Sets the group_task_custom_details of this ASRTask.


        :param group_task_custom_details: The group_task_custom_details of this ASRTask.
        :type group_task_custom_details: GroupTaskDetails
        """

        self._group_task_custom_details = group_task_custom_details

    @property
    def name(self):
        """Gets the name of this ASRTask.

        The unique Task name.

        :return: The name of this ASRTask.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ASRTask.

        The unique Task name.

        :param name: The name of this ASRTask.
        :type name: str
        """

        self._name = name

    @property
    def start_time(self):
        """Gets the start_time of this ASRTask.

        The start time.

        :return: The start_time of this ASRTask.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ASRTask.

        The start time.

        :param start_time: The start_time of this ASRTask.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this ASRTask.

        The State. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled, Suspended or Other.

        :return: The state of this ASRTask.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ASRTask.

        The State. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled, Suspended or Other.

        :param state: The state of this ASRTask.
        :type state: str
        """

        self._state = state

    @property
    def state_description(self):
        """Gets the state_description of this ASRTask.

        The description of the task state. For example - For Succeeded state, description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped.

        :return: The state_description of this ASRTask.
        :rtype: str
        """
        return self._state_description

    @state_description.setter
    def state_description(self, state_description):
        """Sets the state_description of this ASRTask.

        The description of the task state. For example - For Succeeded state, description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped.

        :param state_description: The state_description of this ASRTask.
        :type state_description: str
        """

        self._state_description = state_description

    @property
    def task_id(self):
        """Gets the task_id of this ASRTask.

        The Id.

        :return: The task_id of this ASRTask.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this ASRTask.

        The Id.

        :param task_id: The task_id of this ASRTask.
        :type task_id: str
        """

        self._task_id = task_id

    @property
    def task_type(self):
        """Gets the task_type of this ASRTask.

        The type of task. Details in CustomDetails property depend on this type.

        :return: The task_type of this ASRTask.
        :rtype: str
        """
        return self._task_type

    @task_type.setter
    def task_type(self, task_type):
        """Sets the task_type of this ASRTask.

        The type of task. Details in CustomDetails property depend on this type.

        :param task_type: The task_type of this ASRTask.
        :type task_type: str
        """

        self._task_type = task_type
