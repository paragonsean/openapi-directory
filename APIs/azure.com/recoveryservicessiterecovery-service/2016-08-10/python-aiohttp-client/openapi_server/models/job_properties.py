# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asr_task import ASRTask
from openapi_server.models.job_details import JobDetails
from openapi_server.models.job_error_details import JobErrorDetails
from openapi_server import util


class JobProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_id: str=None, allowed_actions: List[str]=None, custom_details: JobDetails=None, end_time: datetime=None, errors: List[JobErrorDetails]=None, friendly_name: str=None, scenario_name: str=None, start_time: datetime=None, state: str=None, state_description: str=None, target_instance_type: str=None, target_object_id: str=None, target_object_name: str=None, tasks: List[ASRTask]=None):
        """JobProperties - a model defined in OpenAPI

        :param activity_id: The activity_id of this JobProperties.
        :param allowed_actions: The allowed_actions of this JobProperties.
        :param custom_details: The custom_details of this JobProperties.
        :param end_time: The end_time of this JobProperties.
        :param errors: The errors of this JobProperties.
        :param friendly_name: The friendly_name of this JobProperties.
        :param scenario_name: The scenario_name of this JobProperties.
        :param start_time: The start_time of this JobProperties.
        :param state: The state of this JobProperties.
        :param state_description: The state_description of this JobProperties.
        :param target_instance_type: The target_instance_type of this JobProperties.
        :param target_object_id: The target_object_id of this JobProperties.
        :param target_object_name: The target_object_name of this JobProperties.
        :param tasks: The tasks of this JobProperties.
        """
        self.openapi_types = {
            'activity_id': str,
            'allowed_actions': List[str],
            'custom_details': JobDetails,
            'end_time': datetime,
            'errors': List[JobErrorDetails],
            'friendly_name': str,
            'scenario_name': str,
            'start_time': datetime,
            'state': str,
            'state_description': str,
            'target_instance_type': str,
            'target_object_id': str,
            'target_object_name': str,
            'tasks': List[ASRTask]
        }

        self.attribute_map = {
            'activity_id': 'activityId',
            'allowed_actions': 'allowedActions',
            'custom_details': 'customDetails',
            'end_time': 'endTime',
            'errors': 'errors',
            'friendly_name': 'friendlyName',
            'scenario_name': 'scenarioName',
            'start_time': 'startTime',
            'state': 'state',
            'state_description': 'stateDescription',
            'target_instance_type': 'targetInstanceType',
            'target_object_id': 'targetObjectId',
            'target_object_name': 'targetObjectName',
            'tasks': 'tasks'
        }

        self._activity_id = activity_id
        self._allowed_actions = allowed_actions
        self._custom_details = custom_details
        self._end_time = end_time
        self._errors = errors
        self._friendly_name = friendly_name
        self._scenario_name = scenario_name
        self._start_time = start_time
        self._state = state
        self._state_description = state_description
        self._target_instance_type = target_instance_type
        self._target_object_id = target_object_id
        self._target_object_name = target_object_name
        self._tasks = tasks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobProperties of this JobProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_id(self):
        """Gets the activity_id of this JobProperties.

        The activity id.

        :return: The activity_id of this JobProperties.
        :rtype: str
        """
        return self._activity_id

    @activity_id.setter
    def activity_id(self, activity_id):
        """Sets the activity_id of this JobProperties.

        The activity id.

        :param activity_id: The activity_id of this JobProperties.
        :type activity_id: str
        """

        self._activity_id = activity_id

    @property
    def allowed_actions(self):
        """Gets the allowed_actions of this JobProperties.

        The Allowed action the job.

        :return: The allowed_actions of this JobProperties.
        :rtype: List[str]
        """
        return self._allowed_actions

    @allowed_actions.setter
    def allowed_actions(self, allowed_actions):
        """Sets the allowed_actions of this JobProperties.

        The Allowed action the job.

        :param allowed_actions: The allowed_actions of this JobProperties.
        :type allowed_actions: List[str]
        """

        self._allowed_actions = allowed_actions

    @property
    def custom_details(self):
        """Gets the custom_details of this JobProperties.


        :return: The custom_details of this JobProperties.
        :rtype: JobDetails
        """
        return self._custom_details

    @custom_details.setter
    def custom_details(self, custom_details):
        """Sets the custom_details of this JobProperties.


        :param custom_details: The custom_details of this JobProperties.
        :type custom_details: JobDetails
        """

        self._custom_details = custom_details

    @property
    def end_time(self):
        """Gets the end_time of this JobProperties.

        The end time.

        :return: The end_time of this JobProperties.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this JobProperties.

        The end time.

        :param end_time: The end_time of this JobProperties.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def errors(self):
        """Gets the errors of this JobProperties.

        The errors.

        :return: The errors of this JobProperties.
        :rtype: List[JobErrorDetails]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this JobProperties.

        The errors.

        :param errors: The errors of this JobProperties.
        :type errors: List[JobErrorDetails]
        """

        self._errors = errors

    @property
    def friendly_name(self):
        """Gets the friendly_name of this JobProperties.

        The DisplayName.

        :return: The friendly_name of this JobProperties.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this JobProperties.

        The DisplayName.

        :param friendly_name: The friendly_name of this JobProperties.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def scenario_name(self):
        """Gets the scenario_name of this JobProperties.

        The ScenarioName.

        :return: The scenario_name of this JobProperties.
        :rtype: str
        """
        return self._scenario_name

    @scenario_name.setter
    def scenario_name(self, scenario_name):
        """Sets the scenario_name of this JobProperties.

        The ScenarioName.

        :param scenario_name: The scenario_name of this JobProperties.
        :type scenario_name: str
        """

        self._scenario_name = scenario_name

    @property
    def start_time(self):
        """Gets the start_time of this JobProperties.

        The start time.

        :return: The start_time of this JobProperties.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this JobProperties.

        The start time.

        :param start_time: The start_time of this JobProperties.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this JobProperties.

        The status of the Job. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled, Suspended or Other.

        :return: The state of this JobProperties.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this JobProperties.

        The status of the Job. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled, Suspended or Other.

        :param state: The state of this JobProperties.
        :type state: str
        """

        self._state = state

    @property
    def state_description(self):
        """Gets the state_description of this JobProperties.

        The description of the state of the Job. For e.g. - For Succeeded state, description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped.

        :return: The state_description of this JobProperties.
        :rtype: str
        """
        return self._state_description

    @state_description.setter
    def state_description(self, state_description):
        """Sets the state_description of this JobProperties.

        The description of the state of the Job. For e.g. - For Succeeded state, description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped.

        :param state_description: The state_description of this JobProperties.
        :type state_description: str
        """

        self._state_description = state_description

    @property
    def target_instance_type(self):
        """Gets the target_instance_type of this JobProperties.

        The type of the affected object which is of {Microsoft.Azure.SiteRecovery.V2015_11_10.AffectedObjectType} class.

        :return: The target_instance_type of this JobProperties.
        :rtype: str
        """
        return self._target_instance_type

    @target_instance_type.setter
    def target_instance_type(self, target_instance_type):
        """Sets the target_instance_type of this JobProperties.

        The type of the affected object which is of {Microsoft.Azure.SiteRecovery.V2015_11_10.AffectedObjectType} class.

        :param target_instance_type: The target_instance_type of this JobProperties.
        :type target_instance_type: str
        """

        self._target_instance_type = target_instance_type

    @property
    def target_object_id(self):
        """Gets the target_object_id of this JobProperties.

        The affected Object Id.

        :return: The target_object_id of this JobProperties.
        :rtype: str
        """
        return self._target_object_id

    @target_object_id.setter
    def target_object_id(self, target_object_id):
        """Sets the target_object_id of this JobProperties.

        The affected Object Id.

        :param target_object_id: The target_object_id of this JobProperties.
        :type target_object_id: str
        """

        self._target_object_id = target_object_id

    @property
    def target_object_name(self):
        """Gets the target_object_name of this JobProperties.

        The name of the affected object.

        :return: The target_object_name of this JobProperties.
        :rtype: str
        """
        return self._target_object_name

    @target_object_name.setter
    def target_object_name(self, target_object_name):
        """Sets the target_object_name of this JobProperties.

        The name of the affected object.

        :param target_object_name: The target_object_name of this JobProperties.
        :type target_object_name: str
        """

        self._target_object_name = target_object_name

    @property
    def tasks(self):
        """Gets the tasks of this JobProperties.

        The tasks.

        :return: The tasks of this JobProperties.
        :rtype: List[ASRTask]
        """
        return self._tasks

    @tasks.setter
    def tasks(self, tasks):
        """Sets the tasks of this JobProperties.

        The tasks.

        :param tasks: The tasks of this JobProperties.
        :type tasks: List[ASRTask]
        """

        self._tasks = tasks
