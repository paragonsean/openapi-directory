# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enable_protection_provider_specific_input import EnableProtectionProviderSpecificInput
from openapi_server.models.in_mage_disk_exclusion_input import InMageDiskExclusionInput
from openapi_server import util


class InMageEnableProtectionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datastore_name: str=None, disk_exclusion_input: InMageDiskExclusionInput=None, disks_to_include: List[str]=None, master_target_id: str=None, multi_vm_group_id: str=None, multi_vm_group_name: str=None, process_server_id: str=None, retention_drive: str=None, run_as_account_id: str=None, vm_friendly_name: str=None, instance_type: str=None):
        """InMageEnableProtectionInput - a model defined in OpenAPI

        :param datastore_name: The datastore_name of this InMageEnableProtectionInput.
        :param disk_exclusion_input: The disk_exclusion_input of this InMageEnableProtectionInput.
        :param disks_to_include: The disks_to_include of this InMageEnableProtectionInput.
        :param master_target_id: The master_target_id of this InMageEnableProtectionInput.
        :param multi_vm_group_id: The multi_vm_group_id of this InMageEnableProtectionInput.
        :param multi_vm_group_name: The multi_vm_group_name of this InMageEnableProtectionInput.
        :param process_server_id: The process_server_id of this InMageEnableProtectionInput.
        :param retention_drive: The retention_drive of this InMageEnableProtectionInput.
        :param run_as_account_id: The run_as_account_id of this InMageEnableProtectionInput.
        :param vm_friendly_name: The vm_friendly_name of this InMageEnableProtectionInput.
        :param instance_type: The instance_type of this InMageEnableProtectionInput.
        """
        self.openapi_types = {
            'datastore_name': str,
            'disk_exclusion_input': InMageDiskExclusionInput,
            'disks_to_include': List[str],
            'master_target_id': str,
            'multi_vm_group_id': str,
            'multi_vm_group_name': str,
            'process_server_id': str,
            'retention_drive': str,
            'run_as_account_id': str,
            'vm_friendly_name': str,
            'instance_type': str
        }

        self.attribute_map = {
            'datastore_name': 'datastoreName',
            'disk_exclusion_input': 'diskExclusionInput',
            'disks_to_include': 'disksToInclude',
            'master_target_id': 'masterTargetId',
            'multi_vm_group_id': 'multiVmGroupId',
            'multi_vm_group_name': 'multiVmGroupName',
            'process_server_id': 'processServerId',
            'retention_drive': 'retentionDrive',
            'run_as_account_id': 'runAsAccountId',
            'vm_friendly_name': 'vmFriendlyName',
            'instance_type': 'instanceType'
        }

        self._datastore_name = datastore_name
        self._disk_exclusion_input = disk_exclusion_input
        self._disks_to_include = disks_to_include
        self._master_target_id = master_target_id
        self._multi_vm_group_id = multi_vm_group_id
        self._multi_vm_group_name = multi_vm_group_name
        self._process_server_id = process_server_id
        self._retention_drive = retention_drive
        self._run_as_account_id = run_as_account_id
        self._vm_friendly_name = vm_friendly_name
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InMageEnableProtectionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InMageEnableProtectionInput of this InMageEnableProtectionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datastore_name(self):
        """Gets the datastore_name of this InMageEnableProtectionInput.

        The target data store name.

        :return: The datastore_name of this InMageEnableProtectionInput.
        :rtype: str
        """
        return self._datastore_name

    @datastore_name.setter
    def datastore_name(self, datastore_name):
        """Sets the datastore_name of this InMageEnableProtectionInput.

        The target data store name.

        :param datastore_name: The datastore_name of this InMageEnableProtectionInput.
        :type datastore_name: str
        """

        self._datastore_name = datastore_name

    @property
    def disk_exclusion_input(self):
        """Gets the disk_exclusion_input of this InMageEnableProtectionInput.


        :return: The disk_exclusion_input of this InMageEnableProtectionInput.
        :rtype: InMageDiskExclusionInput
        """
        return self._disk_exclusion_input

    @disk_exclusion_input.setter
    def disk_exclusion_input(self, disk_exclusion_input):
        """Sets the disk_exclusion_input of this InMageEnableProtectionInput.


        :param disk_exclusion_input: The disk_exclusion_input of this InMageEnableProtectionInput.
        :type disk_exclusion_input: InMageDiskExclusionInput
        """

        self._disk_exclusion_input = disk_exclusion_input

    @property
    def disks_to_include(self):
        """Gets the disks_to_include of this InMageEnableProtectionInput.

        The disks to include list.

        :return: The disks_to_include of this InMageEnableProtectionInput.
        :rtype: List[str]
        """
        return self._disks_to_include

    @disks_to_include.setter
    def disks_to_include(self, disks_to_include):
        """Sets the disks_to_include of this InMageEnableProtectionInput.

        The disks to include list.

        :param disks_to_include: The disks_to_include of this InMageEnableProtectionInput.
        :type disks_to_include: List[str]
        """

        self._disks_to_include = disks_to_include

    @property
    def master_target_id(self):
        """Gets the master_target_id of this InMageEnableProtectionInput.

        The Master Target Id.

        :return: The master_target_id of this InMageEnableProtectionInput.
        :rtype: str
        """
        return self._master_target_id

    @master_target_id.setter
    def master_target_id(self, master_target_id):
        """Sets the master_target_id of this InMageEnableProtectionInput.

        The Master Target Id.

        :param master_target_id: The master_target_id of this InMageEnableProtectionInput.
        :type master_target_id: str
        """
        if master_target_id is None:
            raise ValueError("Invalid value for `master_target_id`, must not be `None`")

        self._master_target_id = master_target_id

    @property
    def multi_vm_group_id(self):
        """Gets the multi_vm_group_id of this InMageEnableProtectionInput.

        The multi vm group Id.

        :return: The multi_vm_group_id of this InMageEnableProtectionInput.
        :rtype: str
        """
        return self._multi_vm_group_id

    @multi_vm_group_id.setter
    def multi_vm_group_id(self, multi_vm_group_id):
        """Sets the multi_vm_group_id of this InMageEnableProtectionInput.

        The multi vm group Id.

        :param multi_vm_group_id: The multi_vm_group_id of this InMageEnableProtectionInput.
        :type multi_vm_group_id: str
        """
        if multi_vm_group_id is None:
            raise ValueError("Invalid value for `multi_vm_group_id`, must not be `None`")

        self._multi_vm_group_id = multi_vm_group_id

    @property
    def multi_vm_group_name(self):
        """Gets the multi_vm_group_name of this InMageEnableProtectionInput.

        The multi vm group name.

        :return: The multi_vm_group_name of this InMageEnableProtectionInput.
        :rtype: str
        """
        return self._multi_vm_group_name

    @multi_vm_group_name.setter
    def multi_vm_group_name(self, multi_vm_group_name):
        """Sets the multi_vm_group_name of this InMageEnableProtectionInput.

        The multi vm group name.

        :param multi_vm_group_name: The multi_vm_group_name of this InMageEnableProtectionInput.
        :type multi_vm_group_name: str
        """
        if multi_vm_group_name is None:
            raise ValueError("Invalid value for `multi_vm_group_name`, must not be `None`")

        self._multi_vm_group_name = multi_vm_group_name

    @property
    def process_server_id(self):
        """Gets the process_server_id of this InMageEnableProtectionInput.

        The Process Server Id.

        :return: The process_server_id of this InMageEnableProtectionInput.
        :rtype: str
        """
        return self._process_server_id

    @process_server_id.setter
    def process_server_id(self, process_server_id):
        """Sets the process_server_id of this InMageEnableProtectionInput.

        The Process Server Id.

        :param process_server_id: The process_server_id of this InMageEnableProtectionInput.
        :type process_server_id: str
        """
        if process_server_id is None:
            raise ValueError("Invalid value for `process_server_id`, must not be `None`")

        self._process_server_id = process_server_id

    @property
    def retention_drive(self):
        """Gets the retention_drive of this InMageEnableProtectionInput.

        The retention drive to use on the MT.

        :return: The retention_drive of this InMageEnableProtectionInput.
        :rtype: str
        """
        return self._retention_drive

    @retention_drive.setter
    def retention_drive(self, retention_drive):
        """Sets the retention_drive of this InMageEnableProtectionInput.

        The retention drive to use on the MT.

        :param retention_drive: The retention_drive of this InMageEnableProtectionInput.
        :type retention_drive: str
        """
        if retention_drive is None:
            raise ValueError("Invalid value for `retention_drive`, must not be `None`")

        self._retention_drive = retention_drive

    @property
    def run_as_account_id(self):
        """Gets the run_as_account_id of this InMageEnableProtectionInput.

        The CS account Id.

        :return: The run_as_account_id of this InMageEnableProtectionInput.
        :rtype: str
        """
        return self._run_as_account_id

    @run_as_account_id.setter
    def run_as_account_id(self, run_as_account_id):
        """Sets the run_as_account_id of this InMageEnableProtectionInput.

        The CS account Id.

        :param run_as_account_id: The run_as_account_id of this InMageEnableProtectionInput.
        :type run_as_account_id: str
        """

        self._run_as_account_id = run_as_account_id

    @property
    def vm_friendly_name(self):
        """Gets the vm_friendly_name of this InMageEnableProtectionInput.

        The Vm Name.

        :return: The vm_friendly_name of this InMageEnableProtectionInput.
        :rtype: str
        """
        return self._vm_friendly_name

    @vm_friendly_name.setter
    def vm_friendly_name(self, vm_friendly_name):
        """Sets the vm_friendly_name of this InMageEnableProtectionInput.

        The Vm Name.

        :param vm_friendly_name: The vm_friendly_name of this InMageEnableProtectionInput.
        :type vm_friendly_name: str
        """

        self._vm_friendly_name = vm_friendly_name

    @property
    def instance_type(self):
        """Gets the instance_type of this InMageEnableProtectionInput.

        The class type.

        :return: The instance_type of this InMageEnableProtectionInput.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this InMageEnableProtectionInput.

        The class type.

        :param instance_type: The instance_type of this InMageEnableProtectionInput.
        :type instance_type: str
        """

        self._instance_type = instance_type
