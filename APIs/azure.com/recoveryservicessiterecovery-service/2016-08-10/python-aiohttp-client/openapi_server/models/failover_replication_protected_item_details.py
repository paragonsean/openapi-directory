# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FailoverReplicationProtectedItemDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, friendly_name: str=None, name: str=None, network_connection_status: str=None, network_friendly_name: str=None, recovery_point_id: str=None, recovery_point_time: datetime=None, subnet: str=None, test_vm_friendly_name: str=None, test_vm_name: str=None):
        """FailoverReplicationProtectedItemDetails - a model defined in OpenAPI

        :param friendly_name: The friendly_name of this FailoverReplicationProtectedItemDetails.
        :param name: The name of this FailoverReplicationProtectedItemDetails.
        :param network_connection_status: The network_connection_status of this FailoverReplicationProtectedItemDetails.
        :param network_friendly_name: The network_friendly_name of this FailoverReplicationProtectedItemDetails.
        :param recovery_point_id: The recovery_point_id of this FailoverReplicationProtectedItemDetails.
        :param recovery_point_time: The recovery_point_time of this FailoverReplicationProtectedItemDetails.
        :param subnet: The subnet of this FailoverReplicationProtectedItemDetails.
        :param test_vm_friendly_name: The test_vm_friendly_name of this FailoverReplicationProtectedItemDetails.
        :param test_vm_name: The test_vm_name of this FailoverReplicationProtectedItemDetails.
        """
        self.openapi_types = {
            'friendly_name': str,
            'name': str,
            'network_connection_status': str,
            'network_friendly_name': str,
            'recovery_point_id': str,
            'recovery_point_time': datetime,
            'subnet': str,
            'test_vm_friendly_name': str,
            'test_vm_name': str
        }

        self.attribute_map = {
            'friendly_name': 'friendlyName',
            'name': 'name',
            'network_connection_status': 'networkConnectionStatus',
            'network_friendly_name': 'networkFriendlyName',
            'recovery_point_id': 'recoveryPointId',
            'recovery_point_time': 'recoveryPointTime',
            'subnet': 'subnet',
            'test_vm_friendly_name': 'testVmFriendlyName',
            'test_vm_name': 'testVmName'
        }

        self._friendly_name = friendly_name
        self._name = name
        self._network_connection_status = network_connection_status
        self._network_friendly_name = network_friendly_name
        self._recovery_point_id = recovery_point_id
        self._recovery_point_time = recovery_point_time
        self._subnet = subnet
        self._test_vm_friendly_name = test_vm_friendly_name
        self._test_vm_name = test_vm_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailoverReplicationProtectedItemDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailoverReplicationProtectedItemDetails of this FailoverReplicationProtectedItemDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def friendly_name(self):
        """Gets the friendly_name of this FailoverReplicationProtectedItemDetails.

        The friendly name.

        :return: The friendly_name of this FailoverReplicationProtectedItemDetails.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this FailoverReplicationProtectedItemDetails.

        The friendly name.

        :param friendly_name: The friendly_name of this FailoverReplicationProtectedItemDetails.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def name(self):
        """Gets the name of this FailoverReplicationProtectedItemDetails.

        The name.

        :return: The name of this FailoverReplicationProtectedItemDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FailoverReplicationProtectedItemDetails.

        The name.

        :param name: The name of this FailoverReplicationProtectedItemDetails.
        :type name: str
        """

        self._name = name

    @property
    def network_connection_status(self):
        """Gets the network_connection_status of this FailoverReplicationProtectedItemDetails.

        The network connection status.

        :return: The network_connection_status of this FailoverReplicationProtectedItemDetails.
        :rtype: str
        """
        return self._network_connection_status

    @network_connection_status.setter
    def network_connection_status(self, network_connection_status):
        """Sets the network_connection_status of this FailoverReplicationProtectedItemDetails.

        The network connection status.

        :param network_connection_status: The network_connection_status of this FailoverReplicationProtectedItemDetails.
        :type network_connection_status: str
        """

        self._network_connection_status = network_connection_status

    @property
    def network_friendly_name(self):
        """Gets the network_friendly_name of this FailoverReplicationProtectedItemDetails.

        The network friendly name.

        :return: The network_friendly_name of this FailoverReplicationProtectedItemDetails.
        :rtype: str
        """
        return self._network_friendly_name

    @network_friendly_name.setter
    def network_friendly_name(self, network_friendly_name):
        """Sets the network_friendly_name of this FailoverReplicationProtectedItemDetails.

        The network friendly name.

        :param network_friendly_name: The network_friendly_name of this FailoverReplicationProtectedItemDetails.
        :type network_friendly_name: str
        """

        self._network_friendly_name = network_friendly_name

    @property
    def recovery_point_id(self):
        """Gets the recovery_point_id of this FailoverReplicationProtectedItemDetails.

        The recovery point Id.

        :return: The recovery_point_id of this FailoverReplicationProtectedItemDetails.
        :rtype: str
        """
        return self._recovery_point_id

    @recovery_point_id.setter
    def recovery_point_id(self, recovery_point_id):
        """Sets the recovery_point_id of this FailoverReplicationProtectedItemDetails.

        The recovery point Id.

        :param recovery_point_id: The recovery_point_id of this FailoverReplicationProtectedItemDetails.
        :type recovery_point_id: str
        """

        self._recovery_point_id = recovery_point_id

    @property
    def recovery_point_time(self):
        """Gets the recovery_point_time of this FailoverReplicationProtectedItemDetails.

        The recovery point time.

        :return: The recovery_point_time of this FailoverReplicationProtectedItemDetails.
        :rtype: datetime
        """
        return self._recovery_point_time

    @recovery_point_time.setter
    def recovery_point_time(self, recovery_point_time):
        """Sets the recovery_point_time of this FailoverReplicationProtectedItemDetails.

        The recovery point time.

        :param recovery_point_time: The recovery_point_time of this FailoverReplicationProtectedItemDetails.
        :type recovery_point_time: datetime
        """

        self._recovery_point_time = recovery_point_time

    @property
    def subnet(self):
        """Gets the subnet of this FailoverReplicationProtectedItemDetails.

        The network subnet.

        :return: The subnet of this FailoverReplicationProtectedItemDetails.
        :rtype: str
        """
        return self._subnet

    @subnet.setter
    def subnet(self, subnet):
        """Sets the subnet of this FailoverReplicationProtectedItemDetails.

        The network subnet.

        :param subnet: The subnet of this FailoverReplicationProtectedItemDetails.
        :type subnet: str
        """

        self._subnet = subnet

    @property
    def test_vm_friendly_name(self):
        """Gets the test_vm_friendly_name of this FailoverReplicationProtectedItemDetails.

        The test Vm friendly name.

        :return: The test_vm_friendly_name of this FailoverReplicationProtectedItemDetails.
        :rtype: str
        """
        return self._test_vm_friendly_name

    @test_vm_friendly_name.setter
    def test_vm_friendly_name(self, test_vm_friendly_name):
        """Sets the test_vm_friendly_name of this FailoverReplicationProtectedItemDetails.

        The test Vm friendly name.

        :param test_vm_friendly_name: The test_vm_friendly_name of this FailoverReplicationProtectedItemDetails.
        :type test_vm_friendly_name: str
        """

        self._test_vm_friendly_name = test_vm_friendly_name

    @property
    def test_vm_name(self):
        """Gets the test_vm_name of this FailoverReplicationProtectedItemDetails.

        The test Vm name.

        :return: The test_vm_name of this FailoverReplicationProtectedItemDetails.
        :rtype: str
        """
        return self._test_vm_name

    @test_vm_name.setter
    def test_vm_name(self, test_vm_name):
        """Sets the test_vm_name of this FailoverReplicationProtectedItemDetails.

        The test Vm name.

        :param test_vm_name: The test_vm_name of this FailoverReplicationProtectedItemDetails.
        :type test_vm_name: str
        """

        self._test_vm_name = test_vm_name
