# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_settings import ConfigurationSettings
from openapi_server.models.disk_details import DiskDetails
from openapi_server.models.os_details import OSDetails
from openapi_server import util


class HyperVVirtualMachineDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk_details: List[DiskDetails]=None, generation: str=None, os_details: OSDetails=None, source_item_id: str=None, instance_type: str=None):
        """HyperVVirtualMachineDetails - a model defined in OpenAPI

        :param disk_details: The disk_details of this HyperVVirtualMachineDetails.
        :param generation: The generation of this HyperVVirtualMachineDetails.
        :param os_details: The os_details of this HyperVVirtualMachineDetails.
        :param source_item_id: The source_item_id of this HyperVVirtualMachineDetails.
        :param instance_type: The instance_type of this HyperVVirtualMachineDetails.
        """
        self.openapi_types = {
            'disk_details': List[DiskDetails],
            'generation': str,
            'os_details': OSDetails,
            'source_item_id': str,
            'instance_type': str
        }

        self.attribute_map = {
            'disk_details': 'diskDetails',
            'generation': 'generation',
            'os_details': 'osDetails',
            'source_item_id': 'sourceItemId',
            'instance_type': 'instanceType'
        }

        self._disk_details = disk_details
        self._generation = generation
        self._os_details = os_details
        self._source_item_id = source_item_id
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HyperVVirtualMachineDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HyperVVirtualMachineDetails of this HyperVVirtualMachineDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk_details(self):
        """Gets the disk_details of this HyperVVirtualMachineDetails.

        The Last successful failover time.

        :return: The disk_details of this HyperVVirtualMachineDetails.
        :rtype: List[DiskDetails]
        """
        return self._disk_details

    @disk_details.setter
    def disk_details(self, disk_details):
        """Sets the disk_details of this HyperVVirtualMachineDetails.

        The Last successful failover time.

        :param disk_details: The disk_details of this HyperVVirtualMachineDetails.
        :type disk_details: List[DiskDetails]
        """

        self._disk_details = disk_details

    @property
    def generation(self):
        """Gets the generation of this HyperVVirtualMachineDetails.

        The id of the object in fabric.

        :return: The generation of this HyperVVirtualMachineDetails.
        :rtype: str
        """
        return self._generation

    @generation.setter
    def generation(self, generation):
        """Sets the generation of this HyperVVirtualMachineDetails.

        The id of the object in fabric.

        :param generation: The generation of this HyperVVirtualMachineDetails.
        :type generation: str
        """

        self._generation = generation

    @property
    def os_details(self):
        """Gets the os_details of this HyperVVirtualMachineDetails.


        :return: The os_details of this HyperVVirtualMachineDetails.
        :rtype: OSDetails
        """
        return self._os_details

    @os_details.setter
    def os_details(self, os_details):
        """Sets the os_details of this HyperVVirtualMachineDetails.


        :param os_details: The os_details of this HyperVVirtualMachineDetails.
        :type os_details: OSDetails
        """

        self._os_details = os_details

    @property
    def source_item_id(self):
        """Gets the source_item_id of this HyperVVirtualMachineDetails.

        The source id of the object.

        :return: The source_item_id of this HyperVVirtualMachineDetails.
        :rtype: str
        """
        return self._source_item_id

    @source_item_id.setter
    def source_item_id(self, source_item_id):
        """Sets the source_item_id of this HyperVVirtualMachineDetails.

        The source id of the object.

        :param source_item_id: The source_item_id of this HyperVVirtualMachineDetails.
        :type source_item_id: str
        """

        self._source_item_id = source_item_id

    @property
    def instance_type(self):
        """Gets the instance_type of this HyperVVirtualMachineDetails.

        Gets the class type. Overridden in derived classes.

        :return: The instance_type of this HyperVVirtualMachineDetails.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this HyperVVirtualMachineDetails.

        Gets the class type. Overridden in derived classes.

        :param instance_type: The instance_type of this HyperVVirtualMachineDetails.
        :type instance_type: str
        """

        self._instance_type = instance_type
