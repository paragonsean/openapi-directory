/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReplicationProviderSpecificContainerMappingInput from './ReplicationProviderSpecificContainerMappingInput';

/**
 * The VMwareCbtContainerMappingInput model module.
 * @module model/VMwareCbtContainerMappingInput
 * @version 2018-07-10
 */
class VMwareCbtContainerMappingInput {
    /**
     * Constructs a new <code>VMwareCbtContainerMappingInput</code>.
     * VMwareCbt container mapping input.
     * @alias module:model/VMwareCbtContainerMappingInput
     * @extends module:model/ReplicationProviderSpecificContainerMappingInput
     * @implements module:model/ReplicationProviderSpecificContainerMappingInput
     */
    constructor() { 
        ReplicationProviderSpecificContainerMappingInput.initialize(this);
        VMwareCbtContainerMappingInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['keyVaultId'] = keyVaultId;
        obj['keyVaultUri'] = keyVaultUri;
        obj['serviceBusConnectionStringSecretName'] = serviceBusConnectionStringSecretName;
        obj['storageAccountId'] = storageAccountId;
        obj['storageAccountSasSecretName'] = storageAccountSasSecretName;
        obj['targetLocation'] = targetLocation;
    }

    /**
     * Constructs a <code>VMwareCbtContainerMappingInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VMwareCbtContainerMappingInput} obj Optional instance to populate.
     * @return {module:model/VMwareCbtContainerMappingInput} The populated <code>VMwareCbtContainerMappingInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VMwareCbtContainerMappingInput();
            ReplicationProviderSpecificContainerMappingInput.constructFromObject(data, obj);
            ReplicationProviderSpecificContainerMappingInput.constructFromObject(data, obj);

            if (data.hasOwnProperty('keyVaultId')) {
                obj['keyVaultId'] = ApiClient.convertToType(data['keyVaultId'], 'String');
            }
            if (data.hasOwnProperty('keyVaultUri')) {
                obj['keyVaultUri'] = ApiClient.convertToType(data['keyVaultUri'], 'String');
            }
            if (data.hasOwnProperty('serviceBusConnectionStringSecretName')) {
                obj['serviceBusConnectionStringSecretName'] = ApiClient.convertToType(data['serviceBusConnectionStringSecretName'], 'String');
            }
            if (data.hasOwnProperty('storageAccountId')) {
                obj['storageAccountId'] = ApiClient.convertToType(data['storageAccountId'], 'String');
            }
            if (data.hasOwnProperty('storageAccountSasSecretName')) {
                obj['storageAccountSasSecretName'] = ApiClient.convertToType(data['storageAccountSasSecretName'], 'String');
            }
            if (data.hasOwnProperty('targetLocation')) {
                obj['targetLocation'] = ApiClient.convertToType(data['targetLocation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VMwareCbtContainerMappingInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VMwareCbtContainerMappingInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VMwareCbtContainerMappingInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['keyVaultId'] && !(typeof data['keyVaultId'] === 'string' || data['keyVaultId'] instanceof String)) {
            throw new Error("Expected the field `keyVaultId` to be a primitive type in the JSON string but got " + data['keyVaultId']);
        }
        // ensure the json data is a string
        if (data['keyVaultUri'] && !(typeof data['keyVaultUri'] === 'string' || data['keyVaultUri'] instanceof String)) {
            throw new Error("Expected the field `keyVaultUri` to be a primitive type in the JSON string but got " + data['keyVaultUri']);
        }
        // ensure the json data is a string
        if (data['serviceBusConnectionStringSecretName'] && !(typeof data['serviceBusConnectionStringSecretName'] === 'string' || data['serviceBusConnectionStringSecretName'] instanceof String)) {
            throw new Error("Expected the field `serviceBusConnectionStringSecretName` to be a primitive type in the JSON string but got " + data['serviceBusConnectionStringSecretName']);
        }
        // ensure the json data is a string
        if (data['storageAccountId'] && !(typeof data['storageAccountId'] === 'string' || data['storageAccountId'] instanceof String)) {
            throw new Error("Expected the field `storageAccountId` to be a primitive type in the JSON string but got " + data['storageAccountId']);
        }
        // ensure the json data is a string
        if (data['storageAccountSasSecretName'] && !(typeof data['storageAccountSasSecretName'] === 'string' || data['storageAccountSasSecretName'] instanceof String)) {
            throw new Error("Expected the field `storageAccountSasSecretName` to be a primitive type in the JSON string but got " + data['storageAccountSasSecretName']);
        }
        // ensure the json data is a string
        if (data['targetLocation'] && !(typeof data['targetLocation'] === 'string' || data['targetLocation'] instanceof String)) {
            throw new Error("Expected the field `targetLocation` to be a primitive type in the JSON string but got " + data['targetLocation']);
        }

        return true;
    }


}

VMwareCbtContainerMappingInput.RequiredProperties = ["keyVaultId", "keyVaultUri", "serviceBusConnectionStringSecretName", "storageAccountId", "storageAccountSasSecretName", "targetLocation"];

/**
 * The target key vault ARM Id.
 * @member {String} keyVaultId
 */
VMwareCbtContainerMappingInput.prototype['keyVaultId'] = undefined;

/**
 * The target key vault URL.
 * @member {String} keyVaultUri
 */
VMwareCbtContainerMappingInput.prototype['keyVaultUri'] = undefined;

/**
 * The secret name of the service bus connection string.
 * @member {String} serviceBusConnectionStringSecretName
 */
VMwareCbtContainerMappingInput.prototype['serviceBusConnectionStringSecretName'] = undefined;

/**
 * The storage account ARM Id.
 * @member {String} storageAccountId
 */
VMwareCbtContainerMappingInput.prototype['storageAccountId'] = undefined;

/**
 * The secret name of the storage account.
 * @member {String} storageAccountSasSecretName
 */
VMwareCbtContainerMappingInput.prototype['storageAccountSasSecretName'] = undefined;

/**
 * The target location.
 * @member {String} targetLocation
 */
VMwareCbtContainerMappingInput.prototype['targetLocation'] = undefined;


// Implement ReplicationProviderSpecificContainerMappingInput interface:
/**
 * The class type.
 * @member {String} instanceType
 */
ReplicationProviderSpecificContainerMappingInput.prototype['instanceType'] = undefined;




export default VMwareCbtContainerMappingInput;

