/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RemoveDisksProviderSpecificInput from './RemoveDisksProviderSpecificInput';

/**
 * The A2ARemoveDisksInput model module.
 * @module model/A2ARemoveDisksInput
 * @version 2018-07-10
 */
class A2ARemoveDisksInput {
    /**
     * Constructs a new <code>A2ARemoveDisksInput</code>.
     * A2A remove disk(s) input.
     * @alias module:model/A2ARemoveDisksInput
     * @extends module:model/RemoveDisksProviderSpecificInput
     * @implements module:model/RemoveDisksProviderSpecificInput
     */
    constructor() { 
        RemoveDisksProviderSpecificInput.initialize(this);
        A2ARemoveDisksInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>A2ARemoveDisksInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/A2ARemoveDisksInput} obj Optional instance to populate.
     * @return {module:model/A2ARemoveDisksInput} The populated <code>A2ARemoveDisksInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new A2ARemoveDisksInput();
            RemoveDisksProviderSpecificInput.constructFromObject(data, obj);
            RemoveDisksProviderSpecificInput.constructFromObject(data, obj);

            if (data.hasOwnProperty('vmDisksUris')) {
                obj['vmDisksUris'] = ApiClient.convertToType(data['vmDisksUris'], ['String']);
            }
            if (data.hasOwnProperty('vmManagedDisksIds')) {
                obj['vmManagedDisksIds'] = ApiClient.convertToType(data['vmManagedDisksIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>A2ARemoveDisksInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>A2ARemoveDisksInput</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['vmDisksUris'])) {
            throw new Error("Expected the field `vmDisksUris` to be an array in the JSON data but got " + data['vmDisksUris']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['vmManagedDisksIds'])) {
            throw new Error("Expected the field `vmManagedDisksIds` to be an array in the JSON data but got " + data['vmManagedDisksIds']);
        }

        return true;
    }


}



/**
 * The list of vm disk vhd URIs.
 * @member {Array.<String>} vmDisksUris
 */
A2ARemoveDisksInput.prototype['vmDisksUris'] = undefined;

/**
 * The list of vm managed disk Ids.
 * @member {Array.<String>} vmManagedDisksIds
 */
A2ARemoveDisksInput.prototype['vmManagedDisksIds'] = undefined;


// Implement RemoveDisksProviderSpecificInput interface:
/**
 * The class type.
 * @member {String} instanceType
 */
RemoveDisksProviderSpecificInput.prototype['instanceType'] = undefined;




export default A2ARemoveDisksInput;

