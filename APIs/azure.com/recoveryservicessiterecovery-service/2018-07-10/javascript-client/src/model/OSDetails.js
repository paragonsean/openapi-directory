/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OSDetails model module.
 * @module model/OSDetails
 * @version 2018-07-10
 */
class OSDetails {
    /**
     * Constructs a new <code>OSDetails</code>.
     * Disk Details.
     * @alias module:model/OSDetails
     */
    constructor() { 
        
        OSDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OSDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OSDetails} obj Optional instance to populate.
     * @return {module:model/OSDetails} The populated <code>OSDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OSDetails();

            if (data.hasOwnProperty('oSMajorVersion')) {
                obj['oSMajorVersion'] = ApiClient.convertToType(data['oSMajorVersion'], 'String');
            }
            if (data.hasOwnProperty('oSMinorVersion')) {
                obj['oSMinorVersion'] = ApiClient.convertToType(data['oSMinorVersion'], 'String');
            }
            if (data.hasOwnProperty('oSVersion')) {
                obj['oSVersion'] = ApiClient.convertToType(data['oSVersion'], 'String');
            }
            if (data.hasOwnProperty('osEdition')) {
                obj['osEdition'] = ApiClient.convertToType(data['osEdition'], 'String');
            }
            if (data.hasOwnProperty('osType')) {
                obj['osType'] = ApiClient.convertToType(data['osType'], 'String');
            }
            if (data.hasOwnProperty('productType')) {
                obj['productType'] = ApiClient.convertToType(data['productType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OSDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OSDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['oSMajorVersion'] && !(typeof data['oSMajorVersion'] === 'string' || data['oSMajorVersion'] instanceof String)) {
            throw new Error("Expected the field `oSMajorVersion` to be a primitive type in the JSON string but got " + data['oSMajorVersion']);
        }
        // ensure the json data is a string
        if (data['oSMinorVersion'] && !(typeof data['oSMinorVersion'] === 'string' || data['oSMinorVersion'] instanceof String)) {
            throw new Error("Expected the field `oSMinorVersion` to be a primitive type in the JSON string but got " + data['oSMinorVersion']);
        }
        // ensure the json data is a string
        if (data['oSVersion'] && !(typeof data['oSVersion'] === 'string' || data['oSVersion'] instanceof String)) {
            throw new Error("Expected the field `oSVersion` to be a primitive type in the JSON string but got " + data['oSVersion']);
        }
        // ensure the json data is a string
        if (data['osEdition'] && !(typeof data['osEdition'] === 'string' || data['osEdition'] instanceof String)) {
            throw new Error("Expected the field `osEdition` to be a primitive type in the JSON string but got " + data['osEdition']);
        }
        // ensure the json data is a string
        if (data['osType'] && !(typeof data['osType'] === 'string' || data['osType'] instanceof String)) {
            throw new Error("Expected the field `osType` to be a primitive type in the JSON string but got " + data['osType']);
        }
        // ensure the json data is a string
        if (data['productType'] && !(typeof data['productType'] === 'string' || data['productType'] instanceof String)) {
            throw new Error("Expected the field `productType` to be a primitive type in the JSON string but got " + data['productType']);
        }

        return true;
    }


}



/**
 * The OS Major Version.
 * @member {String} oSMajorVersion
 */
OSDetails.prototype['oSMajorVersion'] = undefined;

/**
 * The OS Minor Version.
 * @member {String} oSMinorVersion
 */
OSDetails.prototype['oSMinorVersion'] = undefined;

/**
 * The OS Version.
 * @member {String} oSVersion
 */
OSDetails.prototype['oSVersion'] = undefined;

/**
 * The OSEdition.
 * @member {String} osEdition
 */
OSDetails.prototype['osEdition'] = undefined;

/**
 * VM Disk details.
 * @member {String} osType
 */
OSDetails.prototype['osType'] = undefined;

/**
 * Product type.
 * @member {String} productType
 */
OSDetails.prototype['productType'] = undefined;






export default OSDetails;

