/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IdentityProviderInput from './IdentityProviderInput';

/**
 * The AddRecoveryServicesProviderInputProperties model module.
 * @module model/AddRecoveryServicesProviderInputProperties
 * @version 2018-07-10
 */
class AddRecoveryServicesProviderInputProperties {
    /**
     * Constructs a new <code>AddRecoveryServicesProviderInputProperties</code>.
     * The properties of an add provider request.
     * @alias module:model/AddRecoveryServicesProviderInputProperties
     * @param authenticationIdentityInput {module:model/IdentityProviderInput} 
     * @param machineName {String} The name of the machine where the provider is getting added.
     * @param resourceAccessIdentityInput {module:model/IdentityProviderInput} 
     */
    constructor(authenticationIdentityInput, machineName, resourceAccessIdentityInput) { 
        
        AddRecoveryServicesProviderInputProperties.initialize(this, authenticationIdentityInput, machineName, resourceAccessIdentityInput);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, authenticationIdentityInput, machineName, resourceAccessIdentityInput) { 
        obj['authenticationIdentityInput'] = authenticationIdentityInput;
        obj['machineName'] = machineName;
        obj['resourceAccessIdentityInput'] = resourceAccessIdentityInput;
    }

    /**
     * Constructs a <code>AddRecoveryServicesProviderInputProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddRecoveryServicesProviderInputProperties} obj Optional instance to populate.
     * @return {module:model/AddRecoveryServicesProviderInputProperties} The populated <code>AddRecoveryServicesProviderInputProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddRecoveryServicesProviderInputProperties();

            if (data.hasOwnProperty('authenticationIdentityInput')) {
                obj['authenticationIdentityInput'] = IdentityProviderInput.constructFromObject(data['authenticationIdentityInput']);
            }
            if (data.hasOwnProperty('machineName')) {
                obj['machineName'] = ApiClient.convertToType(data['machineName'], 'String');
            }
            if (data.hasOwnProperty('resourceAccessIdentityInput')) {
                obj['resourceAccessIdentityInput'] = IdentityProviderInput.constructFromObject(data['resourceAccessIdentityInput']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddRecoveryServicesProviderInputProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddRecoveryServicesProviderInputProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddRecoveryServicesProviderInputProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `authenticationIdentityInput`
        if (data['authenticationIdentityInput']) { // data not null
          IdentityProviderInput.validateJSON(data['authenticationIdentityInput']);
        }
        // ensure the json data is a string
        if (data['machineName'] && !(typeof data['machineName'] === 'string' || data['machineName'] instanceof String)) {
            throw new Error("Expected the field `machineName` to be a primitive type in the JSON string but got " + data['machineName']);
        }
        // validate the optional field `resourceAccessIdentityInput`
        if (data['resourceAccessIdentityInput']) { // data not null
          IdentityProviderInput.validateJSON(data['resourceAccessIdentityInput']);
        }

        return true;
    }


}

AddRecoveryServicesProviderInputProperties.RequiredProperties = ["authenticationIdentityInput", "machineName", "resourceAccessIdentityInput"];

/**
 * @member {module:model/IdentityProviderInput} authenticationIdentityInput
 */
AddRecoveryServicesProviderInputProperties.prototype['authenticationIdentityInput'] = undefined;

/**
 * The name of the machine where the provider is getting added.
 * @member {String} machineName
 */
AddRecoveryServicesProviderInputProperties.prototype['machineName'] = undefined;

/**
 * @member {module:model/IdentityProviderInput} resourceAccessIdentityInput
 */
AddRecoveryServicesProviderInputProperties.prototype['resourceAccessIdentityInput'] = undefined;






export default AddRecoveryServicesProviderInputProperties;

