/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RecoveryPlanAction from './RecoveryPlanAction';
import RecoveryPlanProtectedItem from './RecoveryPlanProtectedItem';

/**
 * The RecoveryPlanGroup model module.
 * @module model/RecoveryPlanGroup
 * @version 2018-07-10
 */
class RecoveryPlanGroup {
    /**
     * Constructs a new <code>RecoveryPlanGroup</code>.
     * Recovery plan group details.
     * @alias module:model/RecoveryPlanGroup
     * @param groupType {module:model/RecoveryPlanGroup.GroupTypeEnum} The group type.
     */
    constructor(groupType) { 
        
        RecoveryPlanGroup.initialize(this, groupType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, groupType) { 
        obj['groupType'] = groupType;
    }

    /**
     * Constructs a <code>RecoveryPlanGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RecoveryPlanGroup} obj Optional instance to populate.
     * @return {module:model/RecoveryPlanGroup} The populated <code>RecoveryPlanGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecoveryPlanGroup();

            if (data.hasOwnProperty('endGroupActions')) {
                obj['endGroupActions'] = ApiClient.convertToType(data['endGroupActions'], [RecoveryPlanAction]);
            }
            if (data.hasOwnProperty('groupType')) {
                obj['groupType'] = ApiClient.convertToType(data['groupType'], 'String');
            }
            if (data.hasOwnProperty('replicationProtectedItems')) {
                obj['replicationProtectedItems'] = ApiClient.convertToType(data['replicationProtectedItems'], [RecoveryPlanProtectedItem]);
            }
            if (data.hasOwnProperty('startGroupActions')) {
                obj['startGroupActions'] = ApiClient.convertToType(data['startGroupActions'], [RecoveryPlanAction]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RecoveryPlanGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RecoveryPlanGroup</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RecoveryPlanGroup.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['endGroupActions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['endGroupActions'])) {
                throw new Error("Expected the field `endGroupActions` to be an array in the JSON data but got " + data['endGroupActions']);
            }
            // validate the optional field `endGroupActions` (array)
            for (const item of data['endGroupActions']) {
                RecoveryPlanAction.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['groupType'] && !(typeof data['groupType'] === 'string' || data['groupType'] instanceof String)) {
            throw new Error("Expected the field `groupType` to be a primitive type in the JSON string but got " + data['groupType']);
        }
        if (data['replicationProtectedItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['replicationProtectedItems'])) {
                throw new Error("Expected the field `replicationProtectedItems` to be an array in the JSON data but got " + data['replicationProtectedItems']);
            }
            // validate the optional field `replicationProtectedItems` (array)
            for (const item of data['replicationProtectedItems']) {
                RecoveryPlanProtectedItem.validateJSON(item);
            };
        }
        if (data['startGroupActions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['startGroupActions'])) {
                throw new Error("Expected the field `startGroupActions` to be an array in the JSON data but got " + data['startGroupActions']);
            }
            // validate the optional field `startGroupActions` (array)
            for (const item of data['startGroupActions']) {
                RecoveryPlanAction.validateJSON(item);
            };
        }

        return true;
    }


}

RecoveryPlanGroup.RequiredProperties = ["groupType"];

/**
 * The end group actions.
 * @member {Array.<module:model/RecoveryPlanAction>} endGroupActions
 */
RecoveryPlanGroup.prototype['endGroupActions'] = undefined;

/**
 * The group type.
 * @member {module:model/RecoveryPlanGroup.GroupTypeEnum} groupType
 */
RecoveryPlanGroup.prototype['groupType'] = undefined;

/**
 * The list of protected items.
 * @member {Array.<module:model/RecoveryPlanProtectedItem>} replicationProtectedItems
 */
RecoveryPlanGroup.prototype['replicationProtectedItems'] = undefined;

/**
 * The start group actions.
 * @member {Array.<module:model/RecoveryPlanAction>} startGroupActions
 */
RecoveryPlanGroup.prototype['startGroupActions'] = undefined;





/**
 * Allowed values for the <code>groupType</code> property.
 * @enum {String}
 * @readonly
 */
RecoveryPlanGroup['GroupTypeEnum'] = {

    /**
     * value: "Shutdown"
     * @const
     */
    "Shutdown": "Shutdown",

    /**
     * value: "Boot"
     * @const
     */
    "Boot": "Boot",

    /**
     * value: "Failover"
     * @const
     */
    "Failover": "Failover"
};



export default RecoveryPlanGroup;

