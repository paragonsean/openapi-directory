/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworkMappingProperties from './NetworkMappingProperties';
import Resource from './Resource';

/**
 * The NetworkMapping model module.
 * @module model/NetworkMapping
 * @version 2018-07-10
 */
class NetworkMapping {
    /**
     * Constructs a new <code>NetworkMapping</code>.
     * Network Mapping model. Ideally it should have been possible to inherit this class from prev version in InheritedModels as long as there is no difference in structure or method signature. Since there were no base Models for certain fields and methods viz NetworkMappingProperties and Load with required return type, the class has been introduced in its entirety with references to base models to facilitate extensions in subsequent versions.
     * @alias module:model/NetworkMapping
     * @implements module:model/Resource
     */
    constructor() { 
        Resource.initialize(this);
        NetworkMapping.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkMapping</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkMapping} obj Optional instance to populate.
     * @return {module:model/NetworkMapping} The populated <code>NetworkMapping</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkMapping();
            Resource.constructFromObject(data, obj);

            if (data.hasOwnProperty('properties')) {
                obj['properties'] = NetworkMappingProperties.constructFromObject(data['properties']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkMapping</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkMapping</code>.
     */
    static validateJSON(data) {
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          NetworkMappingProperties.validateJSON(data['properties']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/NetworkMappingProperties} properties
 */
NetworkMapping.prototype['properties'] = undefined;

/**
 * Resource Id
 * @member {String} id
 */
NetworkMapping.prototype['id'] = undefined;

/**
 * Resource Location
 * @member {String} location
 */
NetworkMapping.prototype['location'] = undefined;

/**
 * Resource Name
 * @member {String} name
 */
NetworkMapping.prototype['name'] = undefined;

/**
 * Resource Type
 * @member {String} type
 */
NetworkMapping.prototype['type'] = undefined;


// Implement Resource interface:
/**
 * Resource Id
 * @member {String} id
 */
Resource.prototype['id'] = undefined;
/**
 * Resource Location
 * @member {String} location
 */
Resource.prototype['location'] = undefined;
/**
 * Resource Name
 * @member {String} name
 */
Resource.prototype['name'] = undefined;
/**
 * Resource Type
 * @member {String} type
 */
Resource.prototype['type'] = undefined;




export default NetworkMapping;

