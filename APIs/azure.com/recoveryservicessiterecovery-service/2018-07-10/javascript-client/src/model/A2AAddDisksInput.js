/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import A2AVmDiskInputDetails from './A2AVmDiskInputDetails';
import A2AVmManagedDiskInputDetails from './A2AVmManagedDiskInputDetails';
import AddDisksProviderSpecificInput from './AddDisksProviderSpecificInput';

/**
 * The A2AAddDisksInput model module.
 * @module model/A2AAddDisksInput
 * @version 2018-07-10
 */
class A2AAddDisksInput {
    /**
     * Constructs a new <code>A2AAddDisksInput</code>.
     * A2A add disk(s) input.
     * @alias module:model/A2AAddDisksInput
     * @extends module:model/AddDisksProviderSpecificInput
     * @implements module:model/AddDisksProviderSpecificInput
     */
    constructor() { 
        AddDisksProviderSpecificInput.initialize(this);
        A2AAddDisksInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>A2AAddDisksInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/A2AAddDisksInput} obj Optional instance to populate.
     * @return {module:model/A2AAddDisksInput} The populated <code>A2AAddDisksInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new A2AAddDisksInput();
            AddDisksProviderSpecificInput.constructFromObject(data, obj);
            AddDisksProviderSpecificInput.constructFromObject(data, obj);

            if (data.hasOwnProperty('vmDisks')) {
                obj['vmDisks'] = ApiClient.convertToType(data['vmDisks'], [A2AVmDiskInputDetails]);
            }
            if (data.hasOwnProperty('vmManagedDisks')) {
                obj['vmManagedDisks'] = ApiClient.convertToType(data['vmManagedDisks'], [A2AVmManagedDiskInputDetails]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>A2AAddDisksInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>A2AAddDisksInput</code>.
     */
    static validateJSON(data) {
        if (data['vmDisks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vmDisks'])) {
                throw new Error("Expected the field `vmDisks` to be an array in the JSON data but got " + data['vmDisks']);
            }
            // validate the optional field `vmDisks` (array)
            for (const item of data['vmDisks']) {
                A2AVmDiskInputDetails.validateJSON(item);
            };
        }
        if (data['vmManagedDisks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vmManagedDisks'])) {
                throw new Error("Expected the field `vmManagedDisks` to be an array in the JSON data but got " + data['vmManagedDisks']);
            }
            // validate the optional field `vmManagedDisks` (array)
            for (const item of data['vmManagedDisks']) {
                A2AVmManagedDiskInputDetails.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The list of vm disk details.
 * @member {Array.<module:model/A2AVmDiskInputDetails>} vmDisks
 */
A2AAddDisksInput.prototype['vmDisks'] = undefined;

/**
 * The list of vm managed disk details.
 * @member {Array.<module:model/A2AVmManagedDiskInputDetails>} vmManagedDisks
 */
A2AAddDisksInput.prototype['vmManagedDisks'] = undefined;


// Implement AddDisksProviderSpecificInput interface:
/**
 * The class type.
 * @member {String} instanceType
 */
AddDisksProviderSpecificInput.prototype['instanceType'] = undefined;




export default A2AAddDisksInput;

