/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Display from './Display';

/**
 * The OperationsDiscovery model module.
 * @module model/OperationsDiscovery
 * @version 2018-07-10
 */
class OperationsDiscovery {
    /**
     * Constructs a new <code>OperationsDiscovery</code>.
     * Operations discovery class.
     * @alias module:model/OperationsDiscovery
     */
    constructor() { 
        
        OperationsDiscovery.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationsDiscovery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationsDiscovery} obj Optional instance to populate.
     * @return {module:model/OperationsDiscovery} The populated <code>OperationsDiscovery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationsDiscovery();

            if (data.hasOwnProperty('display')) {
                obj['display'] = Display.constructFromObject(data['display']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = ApiClient.convertToType(data['origin'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationsDiscovery</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationsDiscovery</code>.
     */
    static validateJSON(data) {
        // validate the optional field `display`
        if (data['display']) { // data not null
          Display.validateJSON(data['display']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['origin'] && !(typeof data['origin'] === 'string' || data['origin'] instanceof String)) {
            throw new Error("Expected the field `origin` to be a primitive type in the JSON string but got " + data['origin']);
        }

        return true;
    }


}



/**
 * @member {module:model/Display} display
 */
OperationsDiscovery.prototype['display'] = undefined;

/**
 * Name of the API. The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service. Examples of operations include: * Microsoft.Compute/virtualMachine/capture/action * Microsoft.Compute/virtualMachine/restart/action * Microsoft.Compute/virtualMachine/write * Microsoft.Compute/virtualMachine/read * Microsoft.Compute/virtualMachine/delete Each action should include, in order: (1) Resource Provider Namespace (2) Type hierarchy for which the action applies (e.g. server/databases for a SQL Azure database) (3) Read, Write, Action or Delete indicating which type applies. If it is a PUT/PATCH on a collection or named value, Write should be used. If it is a GET, Read should be used. If it is a DELETE, Delete should be used. If it is a POST, Action should be used. As a note: all resource providers would need to include the \"{Resource Provider Namespace}/register/action\" operation in their response. This API is used to register for their service, and should include details about the operation (e.g. a localized name for the resource provider + any special considerations like PII release)
 * @member {String} name
 */
OperationsDiscovery.prototype['name'] = undefined;

/**
 * Origin. The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX. Default value is \"user,system\"
 * @member {String} origin
 */
OperationsDiscovery.prototype['origin'] = undefined;

/**
 * ClientDiscovery properties.
 * @member {Object} properties
 */
OperationsDiscovery.prototype['properties'] = undefined;






export default OperationsDiscovery;

