/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CurrentJobDetails from './CurrentJobDetails';
import HealthError from './HealthError';
import MigrationProviderSpecificSettings from './MigrationProviderSpecificSettings';

/**
 * The MigrationItemProperties model module.
 * @module model/MigrationItemProperties
 * @version 2018-07-10
 */
class MigrationItemProperties {
    /**
     * Constructs a new <code>MigrationItemProperties</code>.
     * Migration item properties.
     * @alias module:model/MigrationItemProperties
     */
    constructor() { 
        
        MigrationItemProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MigrationItemProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MigrationItemProperties} obj Optional instance to populate.
     * @return {module:model/MigrationItemProperties} The populated <code>MigrationItemProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MigrationItemProperties();

            if (data.hasOwnProperty('allowedOperations')) {
                obj['allowedOperations'] = ApiClient.convertToType(data['allowedOperations'], ['String']);
            }
            if (data.hasOwnProperty('currentJob')) {
                obj['currentJob'] = CurrentJobDetails.constructFromObject(data['currentJob']);
            }
            if (data.hasOwnProperty('health')) {
                obj['health'] = ApiClient.convertToType(data['health'], 'String');
            }
            if (data.hasOwnProperty('healthErrors')) {
                obj['healthErrors'] = ApiClient.convertToType(data['healthErrors'], [HealthError]);
            }
            if (data.hasOwnProperty('machineName')) {
                obj['machineName'] = ApiClient.convertToType(data['machineName'], 'String');
            }
            if (data.hasOwnProperty('migrationState')) {
                obj['migrationState'] = ApiClient.convertToType(data['migrationState'], 'String');
            }
            if (data.hasOwnProperty('migrationStateDescription')) {
                obj['migrationStateDescription'] = ApiClient.convertToType(data['migrationStateDescription'], 'String');
            }
            if (data.hasOwnProperty('policyFriendlyName')) {
                obj['policyFriendlyName'] = ApiClient.convertToType(data['policyFriendlyName'], 'String');
            }
            if (data.hasOwnProperty('policyId')) {
                obj['policyId'] = ApiClient.convertToType(data['policyId'], 'String');
            }
            if (data.hasOwnProperty('providerSpecificDetails')) {
                obj['providerSpecificDetails'] = MigrationProviderSpecificSettings.constructFromObject(data['providerSpecificDetails']);
            }
            if (data.hasOwnProperty('recoveryServicesProviderId')) {
                obj['recoveryServicesProviderId'] = ApiClient.convertToType(data['recoveryServicesProviderId'], 'String');
            }
            if (data.hasOwnProperty('testMigrateState')) {
                obj['testMigrateState'] = ApiClient.convertToType(data['testMigrateState'], 'String');
            }
            if (data.hasOwnProperty('testMigrateStateDescription')) {
                obj['testMigrateStateDescription'] = ApiClient.convertToType(data['testMigrateStateDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MigrationItemProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MigrationItemProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowedOperations'])) {
            throw new Error("Expected the field `allowedOperations` to be an array in the JSON data but got " + data['allowedOperations']);
        }
        // validate the optional field `currentJob`
        if (data['currentJob']) { // data not null
          CurrentJobDetails.validateJSON(data['currentJob']);
        }
        // ensure the json data is a string
        if (data['health'] && !(typeof data['health'] === 'string' || data['health'] instanceof String)) {
            throw new Error("Expected the field `health` to be a primitive type in the JSON string but got " + data['health']);
        }
        if (data['healthErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['healthErrors'])) {
                throw new Error("Expected the field `healthErrors` to be an array in the JSON data but got " + data['healthErrors']);
            }
            // validate the optional field `healthErrors` (array)
            for (const item of data['healthErrors']) {
                HealthError.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['machineName'] && !(typeof data['machineName'] === 'string' || data['machineName'] instanceof String)) {
            throw new Error("Expected the field `machineName` to be a primitive type in the JSON string but got " + data['machineName']);
        }
        // ensure the json data is a string
        if (data['migrationState'] && !(typeof data['migrationState'] === 'string' || data['migrationState'] instanceof String)) {
            throw new Error("Expected the field `migrationState` to be a primitive type in the JSON string but got " + data['migrationState']);
        }
        // ensure the json data is a string
        if (data['migrationStateDescription'] && !(typeof data['migrationStateDescription'] === 'string' || data['migrationStateDescription'] instanceof String)) {
            throw new Error("Expected the field `migrationStateDescription` to be a primitive type in the JSON string but got " + data['migrationStateDescription']);
        }
        // ensure the json data is a string
        if (data['policyFriendlyName'] && !(typeof data['policyFriendlyName'] === 'string' || data['policyFriendlyName'] instanceof String)) {
            throw new Error("Expected the field `policyFriendlyName` to be a primitive type in the JSON string but got " + data['policyFriendlyName']);
        }
        // ensure the json data is a string
        if (data['policyId'] && !(typeof data['policyId'] === 'string' || data['policyId'] instanceof String)) {
            throw new Error("Expected the field `policyId` to be a primitive type in the JSON string but got " + data['policyId']);
        }
        // validate the optional field `providerSpecificDetails`
        if (data['providerSpecificDetails']) { // data not null
          MigrationProviderSpecificSettings.validateJSON(data['providerSpecificDetails']);
        }
        // ensure the json data is a string
        if (data['recoveryServicesProviderId'] && !(typeof data['recoveryServicesProviderId'] === 'string' || data['recoveryServicesProviderId'] instanceof String)) {
            throw new Error("Expected the field `recoveryServicesProviderId` to be a primitive type in the JSON string but got " + data['recoveryServicesProviderId']);
        }
        // ensure the json data is a string
        if (data['testMigrateState'] && !(typeof data['testMigrateState'] === 'string' || data['testMigrateState'] instanceof String)) {
            throw new Error("Expected the field `testMigrateState` to be a primitive type in the JSON string but got " + data['testMigrateState']);
        }
        // ensure the json data is a string
        if (data['testMigrateStateDescription'] && !(typeof data['testMigrateStateDescription'] === 'string' || data['testMigrateStateDescription'] instanceof String)) {
            throw new Error("Expected the field `testMigrateStateDescription` to be a primitive type in the JSON string but got " + data['testMigrateStateDescription']);
        }

        return true;
    }


}



/**
 * The allowed operations on the migration item, based on the current migration state of the item.
 * @member {Array.<module:model/MigrationItemProperties.AllowedOperationsEnum>} allowedOperations
 */
MigrationItemProperties.prototype['allowedOperations'] = undefined;

/**
 * @member {module:model/CurrentJobDetails} currentJob
 */
MigrationItemProperties.prototype['currentJob'] = undefined;

/**
 * The consolidated health.
 * @member {String} health
 */
MigrationItemProperties.prototype['health'] = undefined;

/**
 * The list of health errors.
 * @member {Array.<module:model/HealthError>} healthErrors
 */
MigrationItemProperties.prototype['healthErrors'] = undefined;

/**
 * The on-premise virtual machine name.
 * @member {String} machineName
 */
MigrationItemProperties.prototype['machineName'] = undefined;

/**
 * The migration status.
 * @member {module:model/MigrationItemProperties.MigrationStateEnum} migrationState
 */
MigrationItemProperties.prototype['migrationState'] = undefined;

/**
 * The migration state description.
 * @member {String} migrationStateDescription
 */
MigrationItemProperties.prototype['migrationStateDescription'] = undefined;

/**
 * The name of policy governing this item.
 * @member {String} policyFriendlyName
 */
MigrationItemProperties.prototype['policyFriendlyName'] = undefined;

/**
 * The ARM Id of policy governing this item.
 * @member {String} policyId
 */
MigrationItemProperties.prototype['policyId'] = undefined;

/**
 * @member {module:model/MigrationProviderSpecificSettings} providerSpecificDetails
 */
MigrationItemProperties.prototype['providerSpecificDetails'] = undefined;

/**
 * The recovery services provider ARM Id.
 * @member {String} recoveryServicesProviderId
 */
MigrationItemProperties.prototype['recoveryServicesProviderId'] = undefined;

/**
 * The test migrate state.
 * @member {module:model/MigrationItemProperties.TestMigrateStateEnum} testMigrateState
 */
MigrationItemProperties.prototype['testMigrateState'] = undefined;

/**
 * The test migrate state description.
 * @member {String} testMigrateStateDescription
 */
MigrationItemProperties.prototype['testMigrateStateDescription'] = undefined;





/**
 * Allowed values for the <code>allowedOperations</code> property.
 * @enum {String}
 * @readonly
 */
MigrationItemProperties['AllowedOperationsEnum'] = {

    /**
     * value: "DisableMigration"
     * @const
     */
    "DisableMigration": "DisableMigration",

    /**
     * value: "TestMigrate"
     * @const
     */
    "TestMigrate": "TestMigrate",

    /**
     * value: "TestMigrateCleanup"
     * @const
     */
    "TestMigrateCleanup": "TestMigrateCleanup",

    /**
     * value: "Migrate"
     * @const
     */
    "Migrate": "Migrate"
};


/**
 * Allowed values for the <code>migrationState</code> property.
 * @enum {String}
 * @readonly
 */
MigrationItemProperties['MigrationStateEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "EnableMigrationInProgress"
     * @const
     */
    "EnableMigrationInProgress": "EnableMigrationInProgress",

    /**
     * value: "EnableMigrationFailed"
     * @const
     */
    "EnableMigrationFailed": "EnableMigrationFailed",

    /**
     * value: "DisableMigrationInProgress"
     * @const
     */
    "DisableMigrationInProgress": "DisableMigrationInProgress",

    /**
     * value: "DisableMigrationFailed"
     * @const
     */
    "DisableMigrationFailed": "DisableMigrationFailed",

    /**
     * value: "InitialSeedingInProgress"
     * @const
     */
    "InitialSeedingInProgress": "InitialSeedingInProgress",

    /**
     * value: "InitialSeedingFailed"
     * @const
     */
    "InitialSeedingFailed": "InitialSeedingFailed",

    /**
     * value: "Replicating"
     * @const
     */
    "Replicating": "Replicating",

    /**
     * value: "MigrationInProgress"
     * @const
     */
    "MigrationInProgress": "MigrationInProgress",

    /**
     * value: "MigrationSucceeded"
     * @const
     */
    "MigrationSucceeded": "MigrationSucceeded",

    /**
     * value: "MigrationFailed"
     * @const
     */
    "MigrationFailed": "MigrationFailed"
};


/**
 * Allowed values for the <code>testMigrateState</code> property.
 * @enum {String}
 * @readonly
 */
MigrationItemProperties['TestMigrateStateEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "TestMigrationInProgress"
     * @const
     */
    "TestMigrationInProgress": "TestMigrationInProgress",

    /**
     * value: "TestMigrationSucceeded"
     * @const
     */
    "TestMigrationSucceeded": "TestMigrationSucceeded",

    /**
     * value: "TestMigrationFailed"
     * @const
     */
    "TestMigrationFailed": "TestMigrationFailed",

    /**
     * value: "TestMigrationCleanupInProgress"
     * @const
     */
    "TestMigrationCleanupInProgress": "TestMigrationCleanupInProgress"
};



export default MigrationItemProperties;

