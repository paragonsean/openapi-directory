/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VaultSetting from '../model/VaultSetting';
import VaultSettingCollection from '../model/VaultSettingCollection';
import VaultSettingCreationInput from '../model/VaultSettingCreationInput';

/**
* ReplicationVaultSetting service.
* @module api/ReplicationVaultSettingApi
* @version 2018-07-10
*/
export default class ReplicationVaultSettingApi {

    /**
    * Constructs a new ReplicationVaultSettingApi. 
    * @alias module:api/ReplicationVaultSettingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the replicationVaultSettingCreate operation.
     * @callback module:api/ReplicationVaultSettingApi~replicationVaultSettingCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VaultSetting} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates vault setting. A vault setting object is a singleton per vault and it is always present by default.
     * The operation to configure vault setting.
     * @param {String} apiVersion Client Api Version.
     * @param {String} resourceName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} vaultSettingName Vault setting name.
     * @param {module:model/VaultSettingCreationInput} input Vault setting creation input.
     * @param {module:api/ReplicationVaultSettingApi~replicationVaultSettingCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VaultSetting}
     */
    replicationVaultSettingCreate(apiVersion, resourceName, resourceGroupName, subscriptionId, vaultSettingName, input, callback) {
      let postBody = input;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling replicationVaultSettingCreate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling replicationVaultSettingCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling replicationVaultSettingCreate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling replicationVaultSettingCreate");
      }
      // verify the required parameter 'vaultSettingName' is set
      if (vaultSettingName === undefined || vaultSettingName === null) {
        throw new Error("Missing the required parameter 'vaultSettingName' when calling replicationVaultSettingCreate");
      }
      // verify the required parameter 'input' is set
      if (input === undefined || input === null) {
        throw new Error("Missing the required parameter 'input' when calling replicationVaultSettingCreate");
      }

      let pathParams = {
        'resourceName': resourceName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'vaultSettingName': vaultSettingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VaultSetting;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationVaultSettings/{vaultSettingName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the replicationVaultSettingGet operation.
     * @callback module:api/ReplicationVaultSettingApi~replicationVaultSettingGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VaultSetting} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the vault setting.
     * Gets the vault setting. This includes the Migration Hub connection settings.
     * @param {String} apiVersion Client Api Version.
     * @param {String} resourceName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} vaultSettingName Vault setting name.
     * @param {module:api/ReplicationVaultSettingApi~replicationVaultSettingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VaultSetting}
     */
    replicationVaultSettingGet(apiVersion, resourceName, resourceGroupName, subscriptionId, vaultSettingName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling replicationVaultSettingGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling replicationVaultSettingGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling replicationVaultSettingGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling replicationVaultSettingGet");
      }
      // verify the required parameter 'vaultSettingName' is set
      if (vaultSettingName === undefined || vaultSettingName === null) {
        throw new Error("Missing the required parameter 'vaultSettingName' when calling replicationVaultSettingGet");
      }

      let pathParams = {
        'resourceName': resourceName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'vaultSettingName': vaultSettingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VaultSetting;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationVaultSettings/{vaultSettingName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the replicationVaultSettingList operation.
     * @callback module:api/ReplicationVaultSettingApi~replicationVaultSettingListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VaultSettingCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the list of vault setting.
     * Gets the list of vault setting. This includes the Migration Hub connection settings.
     * @param {String} apiVersion Client Api Version.
     * @param {String} resourceName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {module:api/ReplicationVaultSettingApi~replicationVaultSettingListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VaultSettingCollection}
     */
    replicationVaultSettingList(apiVersion, resourceName, resourceGroupName, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling replicationVaultSettingList");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling replicationVaultSettingList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling replicationVaultSettingList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling replicationVaultSettingList");
      }

      let pathParams = {
        'resourceName': resourceName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VaultSettingCollection;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationVaultSettings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
