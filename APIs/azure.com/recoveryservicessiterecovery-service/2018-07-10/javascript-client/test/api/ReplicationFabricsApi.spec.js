/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SiteRecoveryManagementClient);
  }
}(this, function(expect, SiteRecoveryManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SiteRecoveryManagementClient.ReplicationFabricsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReplicationFabricsApi', function() {
    describe('replicationFabricsCheckConsistency', function() {
      it('should call replicationFabricsCheckConsistency successfully', function(done) {
        //uncomment below and update the code to test replicationFabricsCheckConsistency
        //instance.replicationFabricsCheckConsistency(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicationFabricsCreate', function() {
      it('should call replicationFabricsCreate successfully', function(done) {
        //uncomment below and update the code to test replicationFabricsCreate
        //instance.replicationFabricsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicationFabricsDelete', function() {
      it('should call replicationFabricsDelete successfully', function(done) {
        //uncomment below and update the code to test replicationFabricsDelete
        //instance.replicationFabricsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicationFabricsGet', function() {
      it('should call replicationFabricsGet successfully', function(done) {
        //uncomment below and update the code to test replicationFabricsGet
        //instance.replicationFabricsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicationFabricsList', function() {
      it('should call replicationFabricsList successfully', function(done) {
        //uncomment below and update the code to test replicationFabricsList
        //instance.replicationFabricsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicationFabricsMigrateToAad', function() {
      it('should call replicationFabricsMigrateToAad successfully', function(done) {
        //uncomment below and update the code to test replicationFabricsMigrateToAad
        //instance.replicationFabricsMigrateToAad(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicationFabricsPurge', function() {
      it('should call replicationFabricsPurge successfully', function(done) {
        //uncomment below and update the code to test replicationFabricsPurge
        //instance.replicationFabricsPurge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicationFabricsReassociateGateway', function() {
      it('should call replicationFabricsReassociateGateway successfully', function(done) {
        //uncomment below and update the code to test replicationFabricsReassociateGateway
        //instance.replicationFabricsReassociateGateway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replicationFabricsRenewCertificate', function() {
      it('should call replicationFabricsRenewCertificate successfully', function(done) {
        //uncomment below and update the code to test replicationFabricsRenewCertificate
        //instance.replicationFabricsRenewCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
