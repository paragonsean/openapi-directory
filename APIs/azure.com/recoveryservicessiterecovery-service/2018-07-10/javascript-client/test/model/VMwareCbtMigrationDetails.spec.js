/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SiteRecoveryManagementClient);
  }
}(this, function(expect, SiteRecoveryManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VMwareCbtMigrationDetails', function() {
    it('should create an instance of VMwareCbtMigrationDetails', function() {
      // uncomment below and update the code to test VMwareCbtMigrationDetails
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be.a(SiteRecoveryManagementClient.VMwareCbtMigrationDetails);
    });

    it('should have the property dataMoverRunAsAccountId (base name: "dataMoverRunAsAccountId")', function() {
      // uncomment below and update the code to test the property dataMoverRunAsAccountId
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property lastRecoveryPointReceived (base name: "lastRecoveryPointReceived")', function() {
      // uncomment below and update the code to test the property lastRecoveryPointReceived
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property licenseType (base name: "licenseType")', function() {
      // uncomment below and update the code to test the property licenseType
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property migrationRecoveryPointId (base name: "migrationRecoveryPointId")', function() {
      // uncomment below and update the code to test the property migrationRecoveryPointId
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property osType (base name: "osType")', function() {
      // uncomment below and update the code to test the property osType
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property protectedDisks (base name: "protectedDisks")', function() {
      // uncomment below and update the code to test the property protectedDisks
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property snapshotRunAsAccountId (base name: "snapshotRunAsAccountId")', function() {
      // uncomment below and update the code to test the property snapshotRunAsAccountId
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property targetAvailabilitySetId (base name: "targetAvailabilitySetId")', function() {
      // uncomment below and update the code to test the property targetAvailabilitySetId
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property targetBootDiagnosticsStorageAccountId (base name: "targetBootDiagnosticsStorageAccountId")', function() {
      // uncomment below and update the code to test the property targetBootDiagnosticsStorageAccountId
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property targetLocation (base name: "targetLocation")', function() {
      // uncomment below and update the code to test the property targetLocation
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property targetNetworkId (base name: "targetNetworkId")', function() {
      // uncomment below and update the code to test the property targetNetworkId
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property targetResourceGroupId (base name: "targetResourceGroupId")', function() {
      // uncomment below and update the code to test the property targetResourceGroupId
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property targetVmName (base name: "targetVmName")', function() {
      // uncomment below and update the code to test the property targetVmName
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property targetVmSize (base name: "targetVmSize")', function() {
      // uncomment below and update the code to test the property targetVmSize
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmNics (base name: "vmNics")', function() {
      // uncomment below and update the code to test the property vmNics
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmwareMachineId (base name: "vmwareMachineId")', function() {
      // uncomment below and update the code to test the property vmwareMachineId
      //var instance = new SiteRecoveryManagementClient.VMwareCbtMigrationDetails();
      //expect(instance).to.be();
    });

  });

}));
