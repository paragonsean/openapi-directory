/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SiteRecoveryManagementClient);
  }
}(this, function(expect, SiteRecoveryManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReplicationProtectedItemProperties', function() {
    it('should create an instance of ReplicationProtectedItemProperties', function() {
      // uncomment below and update the code to test ReplicationProtectedItemProperties
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be.a(SiteRecoveryManagementClient.ReplicationProtectedItemProperties);
    });

    it('should have the property activeLocation (base name: "activeLocation")', function() {
      // uncomment below and update the code to test the property activeLocation
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property allowedOperations (base name: "allowedOperations")', function() {
      // uncomment below and update the code to test the property allowedOperations
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property currentScenario (base name: "currentScenario")', function() {
      // uncomment below and update the code to test the property currentScenario
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property failoverHealth (base name: "failoverHealth")', function() {
      // uncomment below and update the code to test the property failoverHealth
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property failoverRecoveryPointId (base name: "failoverRecoveryPointId")', function() {
      // uncomment below and update the code to test the property failoverRecoveryPointId
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property friendlyName (base name: "friendlyName")', function() {
      // uncomment below and update the code to test the property friendlyName
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property healthErrors (base name: "healthErrors")', function() {
      // uncomment below and update the code to test the property healthErrors
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property lastSuccessfulFailoverTime (base name: "lastSuccessfulFailoverTime")', function() {
      // uncomment below and update the code to test the property lastSuccessfulFailoverTime
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property lastSuccessfulTestFailoverTime (base name: "lastSuccessfulTestFailoverTime")', function() {
      // uncomment below and update the code to test the property lastSuccessfulTestFailoverTime
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property policyFriendlyName (base name: "policyFriendlyName")', function() {
      // uncomment below and update the code to test the property policyFriendlyName
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property policyId (base name: "policyId")', function() {
      // uncomment below and update the code to test the property policyId
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property primaryFabricFriendlyName (base name: "primaryFabricFriendlyName")', function() {
      // uncomment below and update the code to test the property primaryFabricFriendlyName
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property primaryFabricProvider (base name: "primaryFabricProvider")', function() {
      // uncomment below and update the code to test the property primaryFabricProvider
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property primaryProtectionContainerFriendlyName (base name: "primaryProtectionContainerFriendlyName")', function() {
      // uncomment below and update the code to test the property primaryProtectionContainerFriendlyName
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property protectableItemId (base name: "protectableItemId")', function() {
      // uncomment below and update the code to test the property protectableItemId
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property protectedItemType (base name: "protectedItemType")', function() {
      // uncomment below and update the code to test the property protectedItemType
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property protectionState (base name: "protectionState")', function() {
      // uncomment below and update the code to test the property protectionState
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property protectionStateDescription (base name: "protectionStateDescription")', function() {
      // uncomment below and update the code to test the property protectionStateDescription
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property providerSpecificDetails (base name: "providerSpecificDetails")', function() {
      // uncomment below and update the code to test the property providerSpecificDetails
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property recoveryContainerId (base name: "recoveryContainerId")', function() {
      // uncomment below and update the code to test the property recoveryContainerId
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property recoveryFabricFriendlyName (base name: "recoveryFabricFriendlyName")', function() {
      // uncomment below and update the code to test the property recoveryFabricFriendlyName
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property recoveryFabricId (base name: "recoveryFabricId")', function() {
      // uncomment below and update the code to test the property recoveryFabricId
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property recoveryProtectionContainerFriendlyName (base name: "recoveryProtectionContainerFriendlyName")', function() {
      // uncomment below and update the code to test the property recoveryProtectionContainerFriendlyName
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property recoveryServicesProviderId (base name: "recoveryServicesProviderId")', function() {
      // uncomment below and update the code to test the property recoveryServicesProviderId
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property replicationHealth (base name: "replicationHealth")', function() {
      // uncomment below and update the code to test the property replicationHealth
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property testFailoverState (base name: "testFailoverState")', function() {
      // uncomment below and update the code to test the property testFailoverState
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

    it('should have the property testFailoverStateDescription (base name: "testFailoverStateDescription")', function() {
      // uncomment below and update the code to test the property testFailoverStateDescription
      //var instance = new SiteRecoveryManagementClient.ReplicationProtectedItemProperties();
      //expect(instance).to.be();
    });

  });

}));
