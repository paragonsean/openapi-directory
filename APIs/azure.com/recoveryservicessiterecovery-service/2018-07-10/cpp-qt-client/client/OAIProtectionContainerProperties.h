/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProtectionContainerProperties.h
 *
 * Protection profile custom data details.
 */

#ifndef OAIProtectionContainerProperties_H
#define OAIProtectionContainerProperties_H

#include <QJsonObject>

#include "OAIProtectionContainerFabricSpecificDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProtectionContainerFabricSpecificDetails;

class OAIProtectionContainerProperties : public OAIObject {
public:
    OAIProtectionContainerProperties();
    OAIProtectionContainerProperties(QString json);
    ~OAIProtectionContainerProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFabricFriendlyName() const;
    void setFabricFriendlyName(const QString &fabric_friendly_name);
    bool is_fabric_friendly_name_Set() const;
    bool is_fabric_friendly_name_Valid() const;

    OAIProtectionContainerFabricSpecificDetails getFabricSpecificDetails() const;
    void setFabricSpecificDetails(const OAIProtectionContainerFabricSpecificDetails &fabric_specific_details);
    bool is_fabric_specific_details_Set() const;
    bool is_fabric_specific_details_Valid() const;

    QString getFabricType() const;
    void setFabricType(const QString &fabric_type);
    bool is_fabric_type_Set() const;
    bool is_fabric_type_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QString getPairingStatus() const;
    void setPairingStatus(const QString &pairing_status);
    bool is_pairing_status_Set() const;
    bool is_pairing_status_Valid() const;

    qint32 getProtectedItemCount() const;
    void setProtectedItemCount(const qint32 &protected_item_count);
    bool is_protected_item_count_Set() const;
    bool is_protected_item_count_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_fabric_friendly_name;
    bool m_fabric_friendly_name_isSet;
    bool m_fabric_friendly_name_isValid;

    OAIProtectionContainerFabricSpecificDetails m_fabric_specific_details;
    bool m_fabric_specific_details_isSet;
    bool m_fabric_specific_details_isValid;

    QString m_fabric_type;
    bool m_fabric_type_isSet;
    bool m_fabric_type_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QString m_pairing_status;
    bool m_pairing_status_isSet;
    bool m_pairing_status_isValid;

    qint32 m_protected_item_count;
    bool m_protected_item_count_isSet;
    bool m_protected_item_count_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProtectionContainerProperties)

#endif // OAIProtectionContainerProperties_H
