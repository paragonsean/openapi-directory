/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRunAsAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRunAsAccount::OAIRunAsAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRunAsAccount::OAIRunAsAccount() {
    this->initializeModel();
}

OAIRunAsAccount::~OAIRunAsAccount() {}

void OAIRunAsAccount::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_account_name_isSet = false;
    m_account_name_isValid = false;
}

void OAIRunAsAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRunAsAccount::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("accountName")]);
    m_account_name_isSet = !json[QString("accountName")].isNull() && m_account_name_isValid;
}

QString OAIRunAsAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRunAsAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_account_name_isSet) {
        obj.insert(QString("accountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    return obj;
}

QString OAIRunAsAccount::getAccountId() const {
    return m_account_id;
}
void OAIRunAsAccount::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIRunAsAccount::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIRunAsAccount::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIRunAsAccount::getAccountName() const {
    return m_account_name;
}
void OAIRunAsAccount::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIRunAsAccount::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIRunAsAccount::is_account_name_Valid() const{
    return m_account_name_isValid;
}

bool OAIRunAsAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRunAsAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
