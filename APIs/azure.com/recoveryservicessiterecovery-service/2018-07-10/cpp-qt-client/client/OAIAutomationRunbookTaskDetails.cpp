/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutomationRunbookTaskDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutomationRunbookTaskDetails::OAIAutomationRunbookTaskDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutomationRunbookTaskDetails::OAIAutomationRunbookTaskDetails() {
    this->initializeModel();
}

OAIAutomationRunbookTaskDetails::~OAIAutomationRunbookTaskDetails() {}

void OAIAutomationRunbookTaskDetails::initializeModel() {

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_cloud_service_name_isSet = false;
    m_cloud_service_name_isValid = false;

    m_is_primary_side_script_isSet = false;
    m_is_primary_side_script_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_job_output_isSet = false;
    m_job_output_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_runbook_id_isSet = false;
    m_runbook_id_isValid = false;

    m_runbook_name_isSet = false;
    m_runbook_name_isValid = false;

    m_subscription_id_isSet = false;
    m_subscription_id_isValid = false;

    m_instance_type_isSet = false;
    m_instance_type_isValid = false;
}

void OAIAutomationRunbookTaskDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutomationRunbookTaskDetails::fromJsonObject(QJsonObject json) {

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("accountName")]);
    m_account_name_isSet = !json[QString("accountName")].isNull() && m_account_name_isValid;

    m_cloud_service_name_isValid = ::OpenAPI::fromJsonValue(m_cloud_service_name, json[QString("cloudServiceName")]);
    m_cloud_service_name_isSet = !json[QString("cloudServiceName")].isNull() && m_cloud_service_name_isValid;

    m_is_primary_side_script_isValid = ::OpenAPI::fromJsonValue(m_is_primary_side_script, json[QString("isPrimarySideScript")]);
    m_is_primary_side_script_isSet = !json[QString("isPrimarySideScript")].isNull() && m_is_primary_side_script_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("jobId")]);
    m_job_id_isSet = !json[QString("jobId")].isNull() && m_job_id_isValid;

    m_job_output_isValid = ::OpenAPI::fromJsonValue(m_job_output, json[QString("jobOutput")]);
    m_job_output_isSet = !json[QString("jobOutput")].isNull() && m_job_output_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_runbook_id_isValid = ::OpenAPI::fromJsonValue(m_runbook_id, json[QString("runbookId")]);
    m_runbook_id_isSet = !json[QString("runbookId")].isNull() && m_runbook_id_isValid;

    m_runbook_name_isValid = ::OpenAPI::fromJsonValue(m_runbook_name, json[QString("runbookName")]);
    m_runbook_name_isSet = !json[QString("runbookName")].isNull() && m_runbook_name_isValid;

    m_subscription_id_isValid = ::OpenAPI::fromJsonValue(m_subscription_id, json[QString("subscriptionId")]);
    m_subscription_id_isSet = !json[QString("subscriptionId")].isNull() && m_subscription_id_isValid;

    m_instance_type_isValid = ::OpenAPI::fromJsonValue(m_instance_type, json[QString("instanceType")]);
    m_instance_type_isSet = !json[QString("instanceType")].isNull() && m_instance_type_isValid;
}

QString OAIAutomationRunbookTaskDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutomationRunbookTaskDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_account_name_isSet) {
        obj.insert(QString("accountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_cloud_service_name_isSet) {
        obj.insert(QString("cloudServiceName"), ::OpenAPI::toJsonValue(m_cloud_service_name));
    }
    if (m_is_primary_side_script_isSet) {
        obj.insert(QString("isPrimarySideScript"), ::OpenAPI::toJsonValue(m_is_primary_side_script));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("jobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_job_output_isSet) {
        obj.insert(QString("jobOutput"), ::OpenAPI::toJsonValue(m_job_output));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_runbook_id_isSet) {
        obj.insert(QString("runbookId"), ::OpenAPI::toJsonValue(m_runbook_id));
    }
    if (m_runbook_name_isSet) {
        obj.insert(QString("runbookName"), ::OpenAPI::toJsonValue(m_runbook_name));
    }
    if (m_subscription_id_isSet) {
        obj.insert(QString("subscriptionId"), ::OpenAPI::toJsonValue(m_subscription_id));
    }
    if (m_instance_type_isSet) {
        obj.insert(QString("instanceType"), ::OpenAPI::toJsonValue(m_instance_type));
    }
    return obj;
}

QString OAIAutomationRunbookTaskDetails::getAccountName() const {
    return m_account_name;
}
void OAIAutomationRunbookTaskDetails::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIAutomationRunbookTaskDetails::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIAutomationRunbookTaskDetails::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAIAutomationRunbookTaskDetails::getCloudServiceName() const {
    return m_cloud_service_name;
}
void OAIAutomationRunbookTaskDetails::setCloudServiceName(const QString &cloud_service_name) {
    m_cloud_service_name = cloud_service_name;
    m_cloud_service_name_isSet = true;
}

bool OAIAutomationRunbookTaskDetails::is_cloud_service_name_Set() const{
    return m_cloud_service_name_isSet;
}

bool OAIAutomationRunbookTaskDetails::is_cloud_service_name_Valid() const{
    return m_cloud_service_name_isValid;
}

bool OAIAutomationRunbookTaskDetails::isIsPrimarySideScript() const {
    return m_is_primary_side_script;
}
void OAIAutomationRunbookTaskDetails::setIsPrimarySideScript(const bool &is_primary_side_script) {
    m_is_primary_side_script = is_primary_side_script;
    m_is_primary_side_script_isSet = true;
}

bool OAIAutomationRunbookTaskDetails::is_is_primary_side_script_Set() const{
    return m_is_primary_side_script_isSet;
}

bool OAIAutomationRunbookTaskDetails::is_is_primary_side_script_Valid() const{
    return m_is_primary_side_script_isValid;
}

QString OAIAutomationRunbookTaskDetails::getJobId() const {
    return m_job_id;
}
void OAIAutomationRunbookTaskDetails::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIAutomationRunbookTaskDetails::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIAutomationRunbookTaskDetails::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAIAutomationRunbookTaskDetails::getJobOutput() const {
    return m_job_output;
}
void OAIAutomationRunbookTaskDetails::setJobOutput(const QString &job_output) {
    m_job_output = job_output;
    m_job_output_isSet = true;
}

bool OAIAutomationRunbookTaskDetails::is_job_output_Set() const{
    return m_job_output_isSet;
}

bool OAIAutomationRunbookTaskDetails::is_job_output_Valid() const{
    return m_job_output_isValid;
}

QString OAIAutomationRunbookTaskDetails::getName() const {
    return m_name;
}
void OAIAutomationRunbookTaskDetails::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAutomationRunbookTaskDetails::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAutomationRunbookTaskDetails::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAutomationRunbookTaskDetails::getRunbookId() const {
    return m_runbook_id;
}
void OAIAutomationRunbookTaskDetails::setRunbookId(const QString &runbook_id) {
    m_runbook_id = runbook_id;
    m_runbook_id_isSet = true;
}

bool OAIAutomationRunbookTaskDetails::is_runbook_id_Set() const{
    return m_runbook_id_isSet;
}

bool OAIAutomationRunbookTaskDetails::is_runbook_id_Valid() const{
    return m_runbook_id_isValid;
}

QString OAIAutomationRunbookTaskDetails::getRunbookName() const {
    return m_runbook_name;
}
void OAIAutomationRunbookTaskDetails::setRunbookName(const QString &runbook_name) {
    m_runbook_name = runbook_name;
    m_runbook_name_isSet = true;
}

bool OAIAutomationRunbookTaskDetails::is_runbook_name_Set() const{
    return m_runbook_name_isSet;
}

bool OAIAutomationRunbookTaskDetails::is_runbook_name_Valid() const{
    return m_runbook_name_isValid;
}

QString OAIAutomationRunbookTaskDetails::getSubscriptionId() const {
    return m_subscription_id;
}
void OAIAutomationRunbookTaskDetails::setSubscriptionId(const QString &subscription_id) {
    m_subscription_id = subscription_id;
    m_subscription_id_isSet = true;
}

bool OAIAutomationRunbookTaskDetails::is_subscription_id_Set() const{
    return m_subscription_id_isSet;
}

bool OAIAutomationRunbookTaskDetails::is_subscription_id_Valid() const{
    return m_subscription_id_isValid;
}

QString OAIAutomationRunbookTaskDetails::getInstanceType() const {
    return m_instance_type;
}
void OAIAutomationRunbookTaskDetails::setInstanceType(const QString &instance_type) {
    m_instance_type = instance_type;
    m_instance_type_isSet = true;
}

bool OAIAutomationRunbookTaskDetails::is_instance_type_Set() const{
    return m_instance_type_isSet;
}

bool OAIAutomationRunbookTaskDetails::is_instance_type_Valid() const{
    return m_instance_type_isValid;
}

bool OAIAutomationRunbookTaskDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_service_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_primary_side_script_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_output_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_runbook_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_runbook_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutomationRunbookTaskDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
