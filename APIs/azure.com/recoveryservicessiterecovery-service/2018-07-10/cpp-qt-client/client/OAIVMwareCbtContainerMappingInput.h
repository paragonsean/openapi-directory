/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVMwareCbtContainerMappingInput.h
 *
 * VMwareCbt container mapping input.
 */

#ifndef OAIVMwareCbtContainerMappingInput_H
#define OAIVMwareCbtContainerMappingInput_H

#include <QJsonObject>

#include "OAIReplicationProviderSpecificContainerMappingInput.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVMwareCbtContainerMappingInput : public OAIObject {
public:
    OAIVMwareCbtContainerMappingInput();
    OAIVMwareCbtContainerMappingInput(QString json);
    ~OAIVMwareCbtContainerMappingInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKeyVaultId() const;
    void setKeyVaultId(const QString &key_vault_id);
    bool is_key_vault_id_Set() const;
    bool is_key_vault_id_Valid() const;

    QString getKeyVaultUri() const;
    void setKeyVaultUri(const QString &key_vault_uri);
    bool is_key_vault_uri_Set() const;
    bool is_key_vault_uri_Valid() const;

    QString getServiceBusConnectionStringSecretName() const;
    void setServiceBusConnectionStringSecretName(const QString &service_bus_connection_string_secret_name);
    bool is_service_bus_connection_string_secret_name_Set() const;
    bool is_service_bus_connection_string_secret_name_Valid() const;

    QString getStorageAccountId() const;
    void setStorageAccountId(const QString &storage_account_id);
    bool is_storage_account_id_Set() const;
    bool is_storage_account_id_Valid() const;

    QString getStorageAccountSasSecretName() const;
    void setStorageAccountSasSecretName(const QString &storage_account_sas_secret_name);
    bool is_storage_account_sas_secret_name_Set() const;
    bool is_storage_account_sas_secret_name_Valid() const;

    QString getTargetLocation() const;
    void setTargetLocation(const QString &target_location);
    bool is_target_location_Set() const;
    bool is_target_location_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_key_vault_id;
    bool m_key_vault_id_isSet;
    bool m_key_vault_id_isValid;

    QString m_key_vault_uri;
    bool m_key_vault_uri_isSet;
    bool m_key_vault_uri_isValid;

    QString m_service_bus_connection_string_secret_name;
    bool m_service_bus_connection_string_secret_name_isSet;
    bool m_service_bus_connection_string_secret_name_isValid;

    QString m_storage_account_id;
    bool m_storage_account_id_isSet;
    bool m_storage_account_id_isValid;

    QString m_storage_account_sas_secret_name;
    bool m_storage_account_sas_secret_name_isSet;
    bool m_storage_account_sas_secret_name_isValid;

    QString m_target_location;
    bool m_target_location_isSet;
    bool m_target_location_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVMwareCbtContainerMappingInput)

#endif // OAIVMwareCbtContainerMappingInput_H
