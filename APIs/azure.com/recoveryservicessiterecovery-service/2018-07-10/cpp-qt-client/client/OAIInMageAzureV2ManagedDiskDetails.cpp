/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInMageAzureV2ManagedDiskDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInMageAzureV2ManagedDiskDetails::OAIInMageAzureV2ManagedDiskDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInMageAzureV2ManagedDiskDetails::OAIInMageAzureV2ManagedDiskDetails() {
    this->initializeModel();
}

OAIInMageAzureV2ManagedDiskDetails::~OAIInMageAzureV2ManagedDiskDetails() {}

void OAIInMageAzureV2ManagedDiskDetails::initializeModel() {

    m_disk_id_isSet = false;
    m_disk_id_isValid = false;

    m_replica_disk_type_isSet = false;
    m_replica_disk_type_isValid = false;

    m_seed_managed_disk_id_isSet = false;
    m_seed_managed_disk_id_isValid = false;
}

void OAIInMageAzureV2ManagedDiskDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInMageAzureV2ManagedDiskDetails::fromJsonObject(QJsonObject json) {

    m_disk_id_isValid = ::OpenAPI::fromJsonValue(m_disk_id, json[QString("diskId")]);
    m_disk_id_isSet = !json[QString("diskId")].isNull() && m_disk_id_isValid;

    m_replica_disk_type_isValid = ::OpenAPI::fromJsonValue(m_replica_disk_type, json[QString("replicaDiskType")]);
    m_replica_disk_type_isSet = !json[QString("replicaDiskType")].isNull() && m_replica_disk_type_isValid;

    m_seed_managed_disk_id_isValid = ::OpenAPI::fromJsonValue(m_seed_managed_disk_id, json[QString("seedManagedDiskId")]);
    m_seed_managed_disk_id_isSet = !json[QString("seedManagedDiskId")].isNull() && m_seed_managed_disk_id_isValid;
}

QString OAIInMageAzureV2ManagedDiskDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInMageAzureV2ManagedDiskDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_disk_id_isSet) {
        obj.insert(QString("diskId"), ::OpenAPI::toJsonValue(m_disk_id));
    }
    if (m_replica_disk_type_isSet) {
        obj.insert(QString("replicaDiskType"), ::OpenAPI::toJsonValue(m_replica_disk_type));
    }
    if (m_seed_managed_disk_id_isSet) {
        obj.insert(QString("seedManagedDiskId"), ::OpenAPI::toJsonValue(m_seed_managed_disk_id));
    }
    return obj;
}

QString OAIInMageAzureV2ManagedDiskDetails::getDiskId() const {
    return m_disk_id;
}
void OAIInMageAzureV2ManagedDiskDetails::setDiskId(const QString &disk_id) {
    m_disk_id = disk_id;
    m_disk_id_isSet = true;
}

bool OAIInMageAzureV2ManagedDiskDetails::is_disk_id_Set() const{
    return m_disk_id_isSet;
}

bool OAIInMageAzureV2ManagedDiskDetails::is_disk_id_Valid() const{
    return m_disk_id_isValid;
}

QString OAIInMageAzureV2ManagedDiskDetails::getReplicaDiskType() const {
    return m_replica_disk_type;
}
void OAIInMageAzureV2ManagedDiskDetails::setReplicaDiskType(const QString &replica_disk_type) {
    m_replica_disk_type = replica_disk_type;
    m_replica_disk_type_isSet = true;
}

bool OAIInMageAzureV2ManagedDiskDetails::is_replica_disk_type_Set() const{
    return m_replica_disk_type_isSet;
}

bool OAIInMageAzureV2ManagedDiskDetails::is_replica_disk_type_Valid() const{
    return m_replica_disk_type_isValid;
}

QString OAIInMageAzureV2ManagedDiskDetails::getSeedManagedDiskId() const {
    return m_seed_managed_disk_id;
}
void OAIInMageAzureV2ManagedDiskDetails::setSeedManagedDiskId(const QString &seed_managed_disk_id) {
    m_seed_managed_disk_id = seed_managed_disk_id;
    m_seed_managed_disk_id_isSet = true;
}

bool OAIInMageAzureV2ManagedDiskDetails::is_seed_managed_disk_id_Set() const{
    return m_seed_managed_disk_id_isSet;
}

bool OAIInMageAzureV2ManagedDiskDetails::is_seed_managed_disk_id_Valid() const{
    return m_seed_managed_disk_id_isValid;
}

bool OAIInMageAzureV2ManagedDiskDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disk_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_replica_disk_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_seed_managed_disk_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInMageAzureV2ManagedDiskDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
