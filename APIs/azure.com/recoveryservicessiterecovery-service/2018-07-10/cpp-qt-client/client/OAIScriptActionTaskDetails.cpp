/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScriptActionTaskDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScriptActionTaskDetails::OAIScriptActionTaskDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScriptActionTaskDetails::OAIScriptActionTaskDetails() {
    this->initializeModel();
}

OAIScriptActionTaskDetails::~OAIScriptActionTaskDetails() {}

void OAIScriptActionTaskDetails::initializeModel() {

    m_is_primary_side_script_isSet = false;
    m_is_primary_side_script_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_output_isSet = false;
    m_output_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_instance_type_isSet = false;
    m_instance_type_isValid = false;
}

void OAIScriptActionTaskDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScriptActionTaskDetails::fromJsonObject(QJsonObject json) {

    m_is_primary_side_script_isValid = ::OpenAPI::fromJsonValue(m_is_primary_side_script, json[QString("isPrimarySideScript")]);
    m_is_primary_side_script_isSet = !json[QString("isPrimarySideScript")].isNull() && m_is_primary_side_script_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_output_isValid = ::OpenAPI::fromJsonValue(m_output, json[QString("output")]);
    m_output_isSet = !json[QString("output")].isNull() && m_output_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_instance_type_isValid = ::OpenAPI::fromJsonValue(m_instance_type, json[QString("instanceType")]);
    m_instance_type_isSet = !json[QString("instanceType")].isNull() && m_instance_type_isValid;
}

QString OAIScriptActionTaskDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScriptActionTaskDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_is_primary_side_script_isSet) {
        obj.insert(QString("isPrimarySideScript"), ::OpenAPI::toJsonValue(m_is_primary_side_script));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_output_isSet) {
        obj.insert(QString("output"), ::OpenAPI::toJsonValue(m_output));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_instance_type_isSet) {
        obj.insert(QString("instanceType"), ::OpenAPI::toJsonValue(m_instance_type));
    }
    return obj;
}

bool OAIScriptActionTaskDetails::isIsPrimarySideScript() const {
    return m_is_primary_side_script;
}
void OAIScriptActionTaskDetails::setIsPrimarySideScript(const bool &is_primary_side_script) {
    m_is_primary_side_script = is_primary_side_script;
    m_is_primary_side_script_isSet = true;
}

bool OAIScriptActionTaskDetails::is_is_primary_side_script_Set() const{
    return m_is_primary_side_script_isSet;
}

bool OAIScriptActionTaskDetails::is_is_primary_side_script_Valid() const{
    return m_is_primary_side_script_isValid;
}

QString OAIScriptActionTaskDetails::getName() const {
    return m_name;
}
void OAIScriptActionTaskDetails::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIScriptActionTaskDetails::is_name_Set() const{
    return m_name_isSet;
}

bool OAIScriptActionTaskDetails::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIScriptActionTaskDetails::getOutput() const {
    return m_output;
}
void OAIScriptActionTaskDetails::setOutput(const QString &output) {
    m_output = output;
    m_output_isSet = true;
}

bool OAIScriptActionTaskDetails::is_output_Set() const{
    return m_output_isSet;
}

bool OAIScriptActionTaskDetails::is_output_Valid() const{
    return m_output_isValid;
}

QString OAIScriptActionTaskDetails::getPath() const {
    return m_path;
}
void OAIScriptActionTaskDetails::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIScriptActionTaskDetails::is_path_Set() const{
    return m_path_isSet;
}

bool OAIScriptActionTaskDetails::is_path_Valid() const{
    return m_path_isValid;
}

QString OAIScriptActionTaskDetails::getInstanceType() const {
    return m_instance_type;
}
void OAIScriptActionTaskDetails::setInstanceType(const QString &instance_type) {
    m_instance_type = instance_type;
    m_instance_type_isSet = true;
}

bool OAIScriptActionTaskDetails::is_instance_type_Set() const{
    return m_instance_type_isSet;
}

bool OAIScriptActionTaskDetails::is_instance_type_Valid() const{
    return m_instance_type_isValid;
}

bool OAIScriptActionTaskDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_primary_side_script_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScriptActionTaskDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
