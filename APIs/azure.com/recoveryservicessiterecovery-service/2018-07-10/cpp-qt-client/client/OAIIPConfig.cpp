/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIPConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIPConfig::OAIIPConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIPConfig::OAIIPConfig() {
    this->initializeModel();
}

OAIIPConfig::~OAIIPConfig() {}

void OAIIPConfig::initializeModel() {

    m_l_b_backend_address_pool_ids_isSet = false;
    m_l_b_backend_address_pool_ids_isValid = false;

    m_public_ip_address_id_isSet = false;
    m_public_ip_address_id_isValid = false;

    m_static_ip_address_isSet = false;
    m_static_ip_address_isValid = false;
}

void OAIIPConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIPConfig::fromJsonObject(QJsonObject json) {

    m_l_b_backend_address_pool_ids_isValid = ::OpenAPI::fromJsonValue(m_l_b_backend_address_pool_ids, json[QString("lBBackendAddressPoolIds")]);
    m_l_b_backend_address_pool_ids_isSet = !json[QString("lBBackendAddressPoolIds")].isNull() && m_l_b_backend_address_pool_ids_isValid;

    m_public_ip_address_id_isValid = ::OpenAPI::fromJsonValue(m_public_ip_address_id, json[QString("publicIpAddressId")]);
    m_public_ip_address_id_isSet = !json[QString("publicIpAddressId")].isNull() && m_public_ip_address_id_isValid;

    m_static_ip_address_isValid = ::OpenAPI::fromJsonValue(m_static_ip_address, json[QString("staticIPAddress")]);
    m_static_ip_address_isSet = !json[QString("staticIPAddress")].isNull() && m_static_ip_address_isValid;
}

QString OAIIPConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIPConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_l_b_backend_address_pool_ids.size() > 0) {
        obj.insert(QString("lBBackendAddressPoolIds"), ::OpenAPI::toJsonValue(m_l_b_backend_address_pool_ids));
    }
    if (m_public_ip_address_id_isSet) {
        obj.insert(QString("publicIpAddressId"), ::OpenAPI::toJsonValue(m_public_ip_address_id));
    }
    if (m_static_ip_address_isSet) {
        obj.insert(QString("staticIPAddress"), ::OpenAPI::toJsonValue(m_static_ip_address));
    }
    return obj;
}

QList<QString> OAIIPConfig::getLBBackendAddressPoolIds() const {
    return m_l_b_backend_address_pool_ids;
}
void OAIIPConfig::setLBBackendAddressPoolIds(const QList<QString> &l_b_backend_address_pool_ids) {
    m_l_b_backend_address_pool_ids = l_b_backend_address_pool_ids;
    m_l_b_backend_address_pool_ids_isSet = true;
}

bool OAIIPConfig::is_l_b_backend_address_pool_ids_Set() const{
    return m_l_b_backend_address_pool_ids_isSet;
}

bool OAIIPConfig::is_l_b_backend_address_pool_ids_Valid() const{
    return m_l_b_backend_address_pool_ids_isValid;
}

QString OAIIPConfig::getPublicIpAddressId() const {
    return m_public_ip_address_id;
}
void OAIIPConfig::setPublicIpAddressId(const QString &public_ip_address_id) {
    m_public_ip_address_id = public_ip_address_id;
    m_public_ip_address_id_isSet = true;
}

bool OAIIPConfig::is_public_ip_address_id_Set() const{
    return m_public_ip_address_id_isSet;
}

bool OAIIPConfig::is_public_ip_address_id_Valid() const{
    return m_public_ip_address_id_isValid;
}

QString OAIIPConfig::getStaticIpAddress() const {
    return m_static_ip_address;
}
void OAIIPConfig::setStaticIpAddress(const QString &static_ip_address) {
    m_static_ip_address = static_ip_address;
    m_static_ip_address_isSet = true;
}

bool OAIIPConfig::is_static_ip_address_Set() const{
    return m_static_ip_address_isSet;
}

bool OAIIPConfig::is_static_ip_address_Valid() const{
    return m_static_ip_address_isValid;
}

bool OAIIPConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_l_b_backend_address_pool_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_ip_address_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_static_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIPConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
