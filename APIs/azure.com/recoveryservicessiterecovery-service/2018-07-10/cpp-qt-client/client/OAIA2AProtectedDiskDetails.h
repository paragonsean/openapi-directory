/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIA2AProtectedDiskDetails.h
 *
 * A2A protected disk details.
 */

#ifndef OAIA2AProtectedDiskDetails_H
#define OAIA2AProtectedDiskDetails_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIA2AProtectedDiskDetails : public OAIObject {
public:
    OAIA2AProtectedDiskDetails();
    OAIA2AProtectedDiskDetails(QString json);
    ~OAIA2AProtectedDiskDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedDiskLevelOperation() const;
    void setAllowedDiskLevelOperation(const QList<QString> &allowed_disk_level_operation);
    bool is_allowed_disk_level_operation_Set() const;
    bool is_allowed_disk_level_operation_Valid() const;

    double getDataPendingAtSourceAgentInMb() const;
    void setDataPendingAtSourceAgentInMb(const double &data_pending_at_source_agent_in_mb);
    bool is_data_pending_at_source_agent_in_mb_Set() const;
    bool is_data_pending_at_source_agent_in_mb_Valid() const;

    double getDataPendingInStagingStorageAccountInMb() const;
    void setDataPendingInStagingStorageAccountInMb(const double &data_pending_in_staging_storage_account_in_mb);
    bool is_data_pending_in_staging_storage_account_in_mb_Set() const;
    bool is_data_pending_in_staging_storage_account_in_mb_Valid() const;

    QString getDekKeyVaultArmId() const;
    void setDekKeyVaultArmId(const QString &dek_key_vault_arm_id);
    bool is_dek_key_vault_arm_id_Set() const;
    bool is_dek_key_vault_arm_id_Valid() const;

    qint64 getDiskCapacityInBytes() const;
    void setDiskCapacityInBytes(const qint64 &disk_capacity_in_bytes);
    bool is_disk_capacity_in_bytes_Set() const;
    bool is_disk_capacity_in_bytes_Valid() const;

    QString getDiskName() const;
    void setDiskName(const QString &disk_name);
    bool is_disk_name_Set() const;
    bool is_disk_name_Valid() const;

    QString getDiskState() const;
    void setDiskState(const QString &disk_state);
    bool is_disk_state_Set() const;
    bool is_disk_state_Valid() const;

    QString getDiskType() const;
    void setDiskType(const QString &disk_type);
    bool is_disk_type_Set() const;
    bool is_disk_type_Valid() const;

    QString getDiskUri() const;
    void setDiskUri(const QString &disk_uri);
    bool is_disk_uri_Set() const;
    bool is_disk_uri_Valid() const;

    bool isIsDiskEncrypted() const;
    void setIsDiskEncrypted(const bool &is_disk_encrypted);
    bool is_is_disk_encrypted_Set() const;
    bool is_is_disk_encrypted_Valid() const;

    bool isIsDiskKeyEncrypted() const;
    void setIsDiskKeyEncrypted(const bool &is_disk_key_encrypted);
    bool is_is_disk_key_encrypted_Set() const;
    bool is_is_disk_key_encrypted_Valid() const;

    QString getKekKeyVaultArmId() const;
    void setKekKeyVaultArmId(const QString &kek_key_vault_arm_id);
    bool is_kek_key_vault_arm_id_Set() const;
    bool is_kek_key_vault_arm_id_Valid() const;

    QString getKeyIdentifier() const;
    void setKeyIdentifier(const QString &key_identifier);
    bool is_key_identifier_Set() const;
    bool is_key_identifier_Valid() const;

    QString getMonitoringJobType() const;
    void setMonitoringJobType(const QString &monitoring_job_type);
    bool is_monitoring_job_type_Set() const;
    bool is_monitoring_job_type_Valid() const;

    qint32 getMonitoringPercentageCompletion() const;
    void setMonitoringPercentageCompletion(const qint32 &monitoring_percentage_completion);
    bool is_monitoring_percentage_completion_Set() const;
    bool is_monitoring_percentage_completion_Valid() const;

    QString getPrimaryDiskAzureStorageAccountId() const;
    void setPrimaryDiskAzureStorageAccountId(const QString &primary_disk_azure_storage_account_id);
    bool is_primary_disk_azure_storage_account_id_Set() const;
    bool is_primary_disk_azure_storage_account_id_Valid() const;

    QString getPrimaryStagingAzureStorageAccountId() const;
    void setPrimaryStagingAzureStorageAccountId(const QString &primary_staging_azure_storage_account_id);
    bool is_primary_staging_azure_storage_account_id_Set() const;
    bool is_primary_staging_azure_storage_account_id_Valid() const;

    QString getRecoveryAzureStorageAccountId() const;
    void setRecoveryAzureStorageAccountId(const QString &recovery_azure_storage_account_id);
    bool is_recovery_azure_storage_account_id_Set() const;
    bool is_recovery_azure_storage_account_id_Valid() const;

    QString getRecoveryDiskUri() const;
    void setRecoveryDiskUri(const QString &recovery_disk_uri);
    bool is_recovery_disk_uri_Set() const;
    bool is_recovery_disk_uri_Valid() const;

    bool isResyncRequired() const;
    void setResyncRequired(const bool &resync_required);
    bool is_resync_required_Set() const;
    bool is_resync_required_Valid() const;

    QString getSecretIdentifier() const;
    void setSecretIdentifier(const QString &secret_identifier);
    bool is_secret_identifier_Set() const;
    bool is_secret_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_disk_level_operation;
    bool m_allowed_disk_level_operation_isSet;
    bool m_allowed_disk_level_operation_isValid;

    double m_data_pending_at_source_agent_in_mb;
    bool m_data_pending_at_source_agent_in_mb_isSet;
    bool m_data_pending_at_source_agent_in_mb_isValid;

    double m_data_pending_in_staging_storage_account_in_mb;
    bool m_data_pending_in_staging_storage_account_in_mb_isSet;
    bool m_data_pending_in_staging_storage_account_in_mb_isValid;

    QString m_dek_key_vault_arm_id;
    bool m_dek_key_vault_arm_id_isSet;
    bool m_dek_key_vault_arm_id_isValid;

    qint64 m_disk_capacity_in_bytes;
    bool m_disk_capacity_in_bytes_isSet;
    bool m_disk_capacity_in_bytes_isValid;

    QString m_disk_name;
    bool m_disk_name_isSet;
    bool m_disk_name_isValid;

    QString m_disk_state;
    bool m_disk_state_isSet;
    bool m_disk_state_isValid;

    QString m_disk_type;
    bool m_disk_type_isSet;
    bool m_disk_type_isValid;

    QString m_disk_uri;
    bool m_disk_uri_isSet;
    bool m_disk_uri_isValid;

    bool m_is_disk_encrypted;
    bool m_is_disk_encrypted_isSet;
    bool m_is_disk_encrypted_isValid;

    bool m_is_disk_key_encrypted;
    bool m_is_disk_key_encrypted_isSet;
    bool m_is_disk_key_encrypted_isValid;

    QString m_kek_key_vault_arm_id;
    bool m_kek_key_vault_arm_id_isSet;
    bool m_kek_key_vault_arm_id_isValid;

    QString m_key_identifier;
    bool m_key_identifier_isSet;
    bool m_key_identifier_isValid;

    QString m_monitoring_job_type;
    bool m_monitoring_job_type_isSet;
    bool m_monitoring_job_type_isValid;

    qint32 m_monitoring_percentage_completion;
    bool m_monitoring_percentage_completion_isSet;
    bool m_monitoring_percentage_completion_isValid;

    QString m_primary_disk_azure_storage_account_id;
    bool m_primary_disk_azure_storage_account_id_isSet;
    bool m_primary_disk_azure_storage_account_id_isValid;

    QString m_primary_staging_azure_storage_account_id;
    bool m_primary_staging_azure_storage_account_id_isSet;
    bool m_primary_staging_azure_storage_account_id_isValid;

    QString m_recovery_azure_storage_account_id;
    bool m_recovery_azure_storage_account_id_isSet;
    bool m_recovery_azure_storage_account_id_isValid;

    QString m_recovery_disk_uri;
    bool m_recovery_disk_uri_isSet;
    bool m_recovery_disk_uri_isValid;

    bool m_resync_required;
    bool m_resync_required_isSet;
    bool m_resync_required_isValid;

    QString m_secret_identifier;
    bool m_secret_identifier_isSet;
    bool m_secret_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIA2AProtectedDiskDetails)

#endif // OAIA2AProtectedDiskDetails_H
