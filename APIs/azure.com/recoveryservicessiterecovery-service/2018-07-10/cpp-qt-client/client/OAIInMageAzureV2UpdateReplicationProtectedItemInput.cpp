/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInMageAzureV2UpdateReplicationProtectedItemInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInMageAzureV2UpdateReplicationProtectedItemInput::OAIInMageAzureV2UpdateReplicationProtectedItemInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInMageAzureV2UpdateReplicationProtectedItemInput::OAIInMageAzureV2UpdateReplicationProtectedItemInput() {
    this->initializeModel();
}

OAIInMageAzureV2UpdateReplicationProtectedItemInput::~OAIInMageAzureV2UpdateReplicationProtectedItemInput() {}

void OAIInMageAzureV2UpdateReplicationProtectedItemInput::initializeModel() {

    m_recovery_azure_v1_resource_group_id_isSet = false;
    m_recovery_azure_v1_resource_group_id_isValid = false;

    m_recovery_azure_v2_resource_group_id_isSet = false;
    m_recovery_azure_v2_resource_group_id_isValid = false;

    m_use_managed_disks_isSet = false;
    m_use_managed_disks_isValid = false;

    m_instance_type_isSet = false;
    m_instance_type_isValid = false;
}

void OAIInMageAzureV2UpdateReplicationProtectedItemInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInMageAzureV2UpdateReplicationProtectedItemInput::fromJsonObject(QJsonObject json) {

    m_recovery_azure_v1_resource_group_id_isValid = ::OpenAPI::fromJsonValue(m_recovery_azure_v1_resource_group_id, json[QString("recoveryAzureV1ResourceGroupId")]);
    m_recovery_azure_v1_resource_group_id_isSet = !json[QString("recoveryAzureV1ResourceGroupId")].isNull() && m_recovery_azure_v1_resource_group_id_isValid;

    m_recovery_azure_v2_resource_group_id_isValid = ::OpenAPI::fromJsonValue(m_recovery_azure_v2_resource_group_id, json[QString("recoveryAzureV2ResourceGroupId")]);
    m_recovery_azure_v2_resource_group_id_isSet = !json[QString("recoveryAzureV2ResourceGroupId")].isNull() && m_recovery_azure_v2_resource_group_id_isValid;

    m_use_managed_disks_isValid = ::OpenAPI::fromJsonValue(m_use_managed_disks, json[QString("useManagedDisks")]);
    m_use_managed_disks_isSet = !json[QString("useManagedDisks")].isNull() && m_use_managed_disks_isValid;

    m_instance_type_isValid = ::OpenAPI::fromJsonValue(m_instance_type, json[QString("instanceType")]);
    m_instance_type_isSet = !json[QString("instanceType")].isNull() && m_instance_type_isValid;
}

QString OAIInMageAzureV2UpdateReplicationProtectedItemInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInMageAzureV2UpdateReplicationProtectedItemInput::asJsonObject() const {
    QJsonObject obj;
    if (m_recovery_azure_v1_resource_group_id_isSet) {
        obj.insert(QString("recoveryAzureV1ResourceGroupId"), ::OpenAPI::toJsonValue(m_recovery_azure_v1_resource_group_id));
    }
    if (m_recovery_azure_v2_resource_group_id_isSet) {
        obj.insert(QString("recoveryAzureV2ResourceGroupId"), ::OpenAPI::toJsonValue(m_recovery_azure_v2_resource_group_id));
    }
    if (m_use_managed_disks_isSet) {
        obj.insert(QString("useManagedDisks"), ::OpenAPI::toJsonValue(m_use_managed_disks));
    }
    if (m_instance_type_isSet) {
        obj.insert(QString("instanceType"), ::OpenAPI::toJsonValue(m_instance_type));
    }
    return obj;
}

QString OAIInMageAzureV2UpdateReplicationProtectedItemInput::getRecoveryAzureV1ResourceGroupId() const {
    return m_recovery_azure_v1_resource_group_id;
}
void OAIInMageAzureV2UpdateReplicationProtectedItemInput::setRecoveryAzureV1ResourceGroupId(const QString &recovery_azure_v1_resource_group_id) {
    m_recovery_azure_v1_resource_group_id = recovery_azure_v1_resource_group_id;
    m_recovery_azure_v1_resource_group_id_isSet = true;
}

bool OAIInMageAzureV2UpdateReplicationProtectedItemInput::is_recovery_azure_v1_resource_group_id_Set() const{
    return m_recovery_azure_v1_resource_group_id_isSet;
}

bool OAIInMageAzureV2UpdateReplicationProtectedItemInput::is_recovery_azure_v1_resource_group_id_Valid() const{
    return m_recovery_azure_v1_resource_group_id_isValid;
}

QString OAIInMageAzureV2UpdateReplicationProtectedItemInput::getRecoveryAzureV2ResourceGroupId() const {
    return m_recovery_azure_v2_resource_group_id;
}
void OAIInMageAzureV2UpdateReplicationProtectedItemInput::setRecoveryAzureV2ResourceGroupId(const QString &recovery_azure_v2_resource_group_id) {
    m_recovery_azure_v2_resource_group_id = recovery_azure_v2_resource_group_id;
    m_recovery_azure_v2_resource_group_id_isSet = true;
}

bool OAIInMageAzureV2UpdateReplicationProtectedItemInput::is_recovery_azure_v2_resource_group_id_Set() const{
    return m_recovery_azure_v2_resource_group_id_isSet;
}

bool OAIInMageAzureV2UpdateReplicationProtectedItemInput::is_recovery_azure_v2_resource_group_id_Valid() const{
    return m_recovery_azure_v2_resource_group_id_isValid;
}

QString OAIInMageAzureV2UpdateReplicationProtectedItemInput::getUseManagedDisks() const {
    return m_use_managed_disks;
}
void OAIInMageAzureV2UpdateReplicationProtectedItemInput::setUseManagedDisks(const QString &use_managed_disks) {
    m_use_managed_disks = use_managed_disks;
    m_use_managed_disks_isSet = true;
}

bool OAIInMageAzureV2UpdateReplicationProtectedItemInput::is_use_managed_disks_Set() const{
    return m_use_managed_disks_isSet;
}

bool OAIInMageAzureV2UpdateReplicationProtectedItemInput::is_use_managed_disks_Valid() const{
    return m_use_managed_disks_isValid;
}

QString OAIInMageAzureV2UpdateReplicationProtectedItemInput::getInstanceType() const {
    return m_instance_type;
}
void OAIInMageAzureV2UpdateReplicationProtectedItemInput::setInstanceType(const QString &instance_type) {
    m_instance_type = instance_type;
    m_instance_type_isSet = true;
}

bool OAIInMageAzureV2UpdateReplicationProtectedItemInput::is_instance_type_Set() const{
    return m_instance_type_isSet;
}

bool OAIInMageAzureV2UpdateReplicationProtectedItemInput::is_instance_type_Valid() const{
    return m_instance_type_isValid;
}

bool OAIInMageAzureV2UpdateReplicationProtectedItemInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recovery_azure_v1_resource_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_azure_v2_resource_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_managed_disks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInMageAzureV2UpdateReplicationProtectedItemInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
