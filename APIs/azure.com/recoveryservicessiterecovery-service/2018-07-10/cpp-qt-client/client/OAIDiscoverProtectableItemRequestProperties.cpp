/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiscoverProtectableItemRequestProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiscoverProtectableItemRequestProperties::OAIDiscoverProtectableItemRequestProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiscoverProtectableItemRequestProperties::OAIDiscoverProtectableItemRequestProperties() {
    this->initializeModel();
}

OAIDiscoverProtectableItemRequestProperties::~OAIDiscoverProtectableItemRequestProperties() {}

void OAIDiscoverProtectableItemRequestProperties::initializeModel() {

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_ip_address_isSet = false;
    m_ip_address_isValid = false;

    m_os_type_isSet = false;
    m_os_type_isValid = false;
}

void OAIDiscoverProtectableItemRequestProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiscoverProtectableItemRequestProperties::fromJsonObject(QJsonObject json) {

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendlyName")]);
    m_friendly_name_isSet = !json[QString("friendlyName")].isNull() && m_friendly_name_isValid;

    m_ip_address_isValid = ::OpenAPI::fromJsonValue(m_ip_address, json[QString("ipAddress")]);
    m_ip_address_isSet = !json[QString("ipAddress")].isNull() && m_ip_address_isValid;

    m_os_type_isValid = ::OpenAPI::fromJsonValue(m_os_type, json[QString("osType")]);
    m_os_type_isSet = !json[QString("osType")].isNull() && m_os_type_isValid;
}

QString OAIDiscoverProtectableItemRequestProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiscoverProtectableItemRequestProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendlyName"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_ip_address_isSet) {
        obj.insert(QString("ipAddress"), ::OpenAPI::toJsonValue(m_ip_address));
    }
    if (m_os_type_isSet) {
        obj.insert(QString("osType"), ::OpenAPI::toJsonValue(m_os_type));
    }
    return obj;
}

QString OAIDiscoverProtectableItemRequestProperties::getFriendlyName() const {
    return m_friendly_name;
}
void OAIDiscoverProtectableItemRequestProperties::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIDiscoverProtectableItemRequestProperties::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIDiscoverProtectableItemRequestProperties::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIDiscoverProtectableItemRequestProperties::getIpAddress() const {
    return m_ip_address;
}
void OAIDiscoverProtectableItemRequestProperties::setIpAddress(const QString &ip_address) {
    m_ip_address = ip_address;
    m_ip_address_isSet = true;
}

bool OAIDiscoverProtectableItemRequestProperties::is_ip_address_Set() const{
    return m_ip_address_isSet;
}

bool OAIDiscoverProtectableItemRequestProperties::is_ip_address_Valid() const{
    return m_ip_address_isValid;
}

QString OAIDiscoverProtectableItemRequestProperties::getOsType() const {
    return m_os_type;
}
void OAIDiscoverProtectableItemRequestProperties::setOsType(const QString &os_type) {
    m_os_type = os_type;
    m_os_type_isSet = true;
}

bool OAIDiscoverProtectableItemRequestProperties::is_os_type_Set() const{
    return m_os_type_isSet;
}

bool OAIDiscoverProtectableItemRequestProperties::is_os_type_Valid() const{
    return m_os_type_isValid;
}

bool OAIDiscoverProtectableItemRequestProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_os_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiscoverProtectableItemRequestProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
