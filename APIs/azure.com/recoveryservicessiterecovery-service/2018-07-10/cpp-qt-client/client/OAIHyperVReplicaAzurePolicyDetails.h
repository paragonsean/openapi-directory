/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHyperVReplicaAzurePolicyDetails.h
 *
 * Hyper-V Replica Azure specific protection profile details.
 */

#ifndef OAIHyperVReplicaAzurePolicyDetails_H
#define OAIHyperVReplicaAzurePolicyDetails_H

#include <QJsonObject>

#include "OAIPolicyProviderSpecificDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHyperVReplicaAzurePolicyDetails : public OAIObject {
public:
    OAIHyperVReplicaAzurePolicyDetails();
    OAIHyperVReplicaAzurePolicyDetails(QString json);
    ~OAIHyperVReplicaAzurePolicyDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActiveStorageAccountId() const;
    void setActiveStorageAccountId(const QString &active_storage_account_id);
    bool is_active_storage_account_id_Set() const;
    bool is_active_storage_account_id_Valid() const;

    qint32 getApplicationConsistentSnapshotFrequencyInHours() const;
    void setApplicationConsistentSnapshotFrequencyInHours(const qint32 &application_consistent_snapshot_frequency_in_hours);
    bool is_application_consistent_snapshot_frequency_in_hours_Set() const;
    bool is_application_consistent_snapshot_frequency_in_hours_Valid() const;

    QString getEncryption() const;
    void setEncryption(const QString &encryption);
    bool is_encryption_Set() const;
    bool is_encryption_Valid() const;

    QString getOnlineReplicationStartTime() const;
    void setOnlineReplicationStartTime(const QString &online_replication_start_time);
    bool is_online_replication_start_time_Set() const;
    bool is_online_replication_start_time_Valid() const;

    qint32 getRecoveryPointHistoryDurationInHours() const;
    void setRecoveryPointHistoryDurationInHours(const qint32 &recovery_point_history_duration_in_hours);
    bool is_recovery_point_history_duration_in_hours_Set() const;
    bool is_recovery_point_history_duration_in_hours_Valid() const;

    qint32 getReplicationInterval() const;
    void setReplicationInterval(const qint32 &replication_interval);
    bool is_replication_interval_Set() const;
    bool is_replication_interval_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active_storage_account_id;
    bool m_active_storage_account_id_isSet;
    bool m_active_storage_account_id_isValid;

    qint32 m_application_consistent_snapshot_frequency_in_hours;
    bool m_application_consistent_snapshot_frequency_in_hours_isSet;
    bool m_application_consistent_snapshot_frequency_in_hours_isValid;

    QString m_encryption;
    bool m_encryption_isSet;
    bool m_encryption_isValid;

    QString m_online_replication_start_time;
    bool m_online_replication_start_time_isSet;
    bool m_online_replication_start_time_isValid;

    qint32 m_recovery_point_history_duration_in_hours;
    bool m_recovery_point_history_duration_in_hours_isSet;
    bool m_recovery_point_history_duration_in_hours_isValid;

    qint32 m_replication_interval;
    bool m_replication_interval_isSet;
    bool m_replication_interval_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHyperVReplicaAzurePolicyDetails)

#endif // OAIHyperVReplicaAzurePolicyDetails_H
