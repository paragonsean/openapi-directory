/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProtectionContainerMappingProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProtectionContainerMappingProperties::OAIProtectionContainerMappingProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProtectionContainerMappingProperties::OAIProtectionContainerMappingProperties() {
    this->initializeModel();
}

OAIProtectionContainerMappingProperties::~OAIProtectionContainerMappingProperties() {}

void OAIProtectionContainerMappingProperties::initializeModel() {

    m_health_isSet = false;
    m_health_isValid = false;

    m_health_error_details_isSet = false;
    m_health_error_details_isValid = false;

    m_policy_friendly_name_isSet = false;
    m_policy_friendly_name_isValid = false;

    m_policy_id_isSet = false;
    m_policy_id_isValid = false;

    m_provider_specific_details_isSet = false;
    m_provider_specific_details_isValid = false;

    m_source_fabric_friendly_name_isSet = false;
    m_source_fabric_friendly_name_isValid = false;

    m_source_protection_container_friendly_name_isSet = false;
    m_source_protection_container_friendly_name_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_target_fabric_friendly_name_isSet = false;
    m_target_fabric_friendly_name_isValid = false;

    m_target_protection_container_friendly_name_isSet = false;
    m_target_protection_container_friendly_name_isValid = false;

    m_target_protection_container_id_isSet = false;
    m_target_protection_container_id_isValid = false;
}

void OAIProtectionContainerMappingProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProtectionContainerMappingProperties::fromJsonObject(QJsonObject json) {

    m_health_isValid = ::OpenAPI::fromJsonValue(m_health, json[QString("health")]);
    m_health_isSet = !json[QString("health")].isNull() && m_health_isValid;

    m_health_error_details_isValid = ::OpenAPI::fromJsonValue(m_health_error_details, json[QString("healthErrorDetails")]);
    m_health_error_details_isSet = !json[QString("healthErrorDetails")].isNull() && m_health_error_details_isValid;

    m_policy_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_policy_friendly_name, json[QString("policyFriendlyName")]);
    m_policy_friendly_name_isSet = !json[QString("policyFriendlyName")].isNull() && m_policy_friendly_name_isValid;

    m_policy_id_isValid = ::OpenAPI::fromJsonValue(m_policy_id, json[QString("policyId")]);
    m_policy_id_isSet = !json[QString("policyId")].isNull() && m_policy_id_isValid;

    m_provider_specific_details_isValid = ::OpenAPI::fromJsonValue(m_provider_specific_details, json[QString("providerSpecificDetails")]);
    m_provider_specific_details_isSet = !json[QString("providerSpecificDetails")].isNull() && m_provider_specific_details_isValid;

    m_source_fabric_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_source_fabric_friendly_name, json[QString("sourceFabricFriendlyName")]);
    m_source_fabric_friendly_name_isSet = !json[QString("sourceFabricFriendlyName")].isNull() && m_source_fabric_friendly_name_isValid;

    m_source_protection_container_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_source_protection_container_friendly_name, json[QString("sourceProtectionContainerFriendlyName")]);
    m_source_protection_container_friendly_name_isSet = !json[QString("sourceProtectionContainerFriendlyName")].isNull() && m_source_protection_container_friendly_name_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_target_fabric_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_target_fabric_friendly_name, json[QString("targetFabricFriendlyName")]);
    m_target_fabric_friendly_name_isSet = !json[QString("targetFabricFriendlyName")].isNull() && m_target_fabric_friendly_name_isValid;

    m_target_protection_container_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_target_protection_container_friendly_name, json[QString("targetProtectionContainerFriendlyName")]);
    m_target_protection_container_friendly_name_isSet = !json[QString("targetProtectionContainerFriendlyName")].isNull() && m_target_protection_container_friendly_name_isValid;

    m_target_protection_container_id_isValid = ::OpenAPI::fromJsonValue(m_target_protection_container_id, json[QString("targetProtectionContainerId")]);
    m_target_protection_container_id_isSet = !json[QString("targetProtectionContainerId")].isNull() && m_target_protection_container_id_isValid;
}

QString OAIProtectionContainerMappingProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProtectionContainerMappingProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_health_isSet) {
        obj.insert(QString("health"), ::OpenAPI::toJsonValue(m_health));
    }
    if (m_health_error_details.size() > 0) {
        obj.insert(QString("healthErrorDetails"), ::OpenAPI::toJsonValue(m_health_error_details));
    }
    if (m_policy_friendly_name_isSet) {
        obj.insert(QString("policyFriendlyName"), ::OpenAPI::toJsonValue(m_policy_friendly_name));
    }
    if (m_policy_id_isSet) {
        obj.insert(QString("policyId"), ::OpenAPI::toJsonValue(m_policy_id));
    }
    if (m_provider_specific_details.isSet()) {
        obj.insert(QString("providerSpecificDetails"), ::OpenAPI::toJsonValue(m_provider_specific_details));
    }
    if (m_source_fabric_friendly_name_isSet) {
        obj.insert(QString("sourceFabricFriendlyName"), ::OpenAPI::toJsonValue(m_source_fabric_friendly_name));
    }
    if (m_source_protection_container_friendly_name_isSet) {
        obj.insert(QString("sourceProtectionContainerFriendlyName"), ::OpenAPI::toJsonValue(m_source_protection_container_friendly_name));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_target_fabric_friendly_name_isSet) {
        obj.insert(QString("targetFabricFriendlyName"), ::OpenAPI::toJsonValue(m_target_fabric_friendly_name));
    }
    if (m_target_protection_container_friendly_name_isSet) {
        obj.insert(QString("targetProtectionContainerFriendlyName"), ::OpenAPI::toJsonValue(m_target_protection_container_friendly_name));
    }
    if (m_target_protection_container_id_isSet) {
        obj.insert(QString("targetProtectionContainerId"), ::OpenAPI::toJsonValue(m_target_protection_container_id));
    }
    return obj;
}

QString OAIProtectionContainerMappingProperties::getHealth() const {
    return m_health;
}
void OAIProtectionContainerMappingProperties::setHealth(const QString &health) {
    m_health = health;
    m_health_isSet = true;
}

bool OAIProtectionContainerMappingProperties::is_health_Set() const{
    return m_health_isSet;
}

bool OAIProtectionContainerMappingProperties::is_health_Valid() const{
    return m_health_isValid;
}

QList<OAIHealthError> OAIProtectionContainerMappingProperties::getHealthErrorDetails() const {
    return m_health_error_details;
}
void OAIProtectionContainerMappingProperties::setHealthErrorDetails(const QList<OAIHealthError> &health_error_details) {
    m_health_error_details = health_error_details;
    m_health_error_details_isSet = true;
}

bool OAIProtectionContainerMappingProperties::is_health_error_details_Set() const{
    return m_health_error_details_isSet;
}

bool OAIProtectionContainerMappingProperties::is_health_error_details_Valid() const{
    return m_health_error_details_isValid;
}

QString OAIProtectionContainerMappingProperties::getPolicyFriendlyName() const {
    return m_policy_friendly_name;
}
void OAIProtectionContainerMappingProperties::setPolicyFriendlyName(const QString &policy_friendly_name) {
    m_policy_friendly_name = policy_friendly_name;
    m_policy_friendly_name_isSet = true;
}

bool OAIProtectionContainerMappingProperties::is_policy_friendly_name_Set() const{
    return m_policy_friendly_name_isSet;
}

bool OAIProtectionContainerMappingProperties::is_policy_friendly_name_Valid() const{
    return m_policy_friendly_name_isValid;
}

QString OAIProtectionContainerMappingProperties::getPolicyId() const {
    return m_policy_id;
}
void OAIProtectionContainerMappingProperties::setPolicyId(const QString &policy_id) {
    m_policy_id = policy_id;
    m_policy_id_isSet = true;
}

bool OAIProtectionContainerMappingProperties::is_policy_id_Set() const{
    return m_policy_id_isSet;
}

bool OAIProtectionContainerMappingProperties::is_policy_id_Valid() const{
    return m_policy_id_isValid;
}

OAIProtectionContainerMappingProviderSpecificDetails OAIProtectionContainerMappingProperties::getProviderSpecificDetails() const {
    return m_provider_specific_details;
}
void OAIProtectionContainerMappingProperties::setProviderSpecificDetails(const OAIProtectionContainerMappingProviderSpecificDetails &provider_specific_details) {
    m_provider_specific_details = provider_specific_details;
    m_provider_specific_details_isSet = true;
}

bool OAIProtectionContainerMappingProperties::is_provider_specific_details_Set() const{
    return m_provider_specific_details_isSet;
}

bool OAIProtectionContainerMappingProperties::is_provider_specific_details_Valid() const{
    return m_provider_specific_details_isValid;
}

QString OAIProtectionContainerMappingProperties::getSourceFabricFriendlyName() const {
    return m_source_fabric_friendly_name;
}
void OAIProtectionContainerMappingProperties::setSourceFabricFriendlyName(const QString &source_fabric_friendly_name) {
    m_source_fabric_friendly_name = source_fabric_friendly_name;
    m_source_fabric_friendly_name_isSet = true;
}

bool OAIProtectionContainerMappingProperties::is_source_fabric_friendly_name_Set() const{
    return m_source_fabric_friendly_name_isSet;
}

bool OAIProtectionContainerMappingProperties::is_source_fabric_friendly_name_Valid() const{
    return m_source_fabric_friendly_name_isValid;
}

QString OAIProtectionContainerMappingProperties::getSourceProtectionContainerFriendlyName() const {
    return m_source_protection_container_friendly_name;
}
void OAIProtectionContainerMappingProperties::setSourceProtectionContainerFriendlyName(const QString &source_protection_container_friendly_name) {
    m_source_protection_container_friendly_name = source_protection_container_friendly_name;
    m_source_protection_container_friendly_name_isSet = true;
}

bool OAIProtectionContainerMappingProperties::is_source_protection_container_friendly_name_Set() const{
    return m_source_protection_container_friendly_name_isSet;
}

bool OAIProtectionContainerMappingProperties::is_source_protection_container_friendly_name_Valid() const{
    return m_source_protection_container_friendly_name_isValid;
}

QString OAIProtectionContainerMappingProperties::getState() const {
    return m_state;
}
void OAIProtectionContainerMappingProperties::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIProtectionContainerMappingProperties::is_state_Set() const{
    return m_state_isSet;
}

bool OAIProtectionContainerMappingProperties::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIProtectionContainerMappingProperties::getTargetFabricFriendlyName() const {
    return m_target_fabric_friendly_name;
}
void OAIProtectionContainerMappingProperties::setTargetFabricFriendlyName(const QString &target_fabric_friendly_name) {
    m_target_fabric_friendly_name = target_fabric_friendly_name;
    m_target_fabric_friendly_name_isSet = true;
}

bool OAIProtectionContainerMappingProperties::is_target_fabric_friendly_name_Set() const{
    return m_target_fabric_friendly_name_isSet;
}

bool OAIProtectionContainerMappingProperties::is_target_fabric_friendly_name_Valid() const{
    return m_target_fabric_friendly_name_isValid;
}

QString OAIProtectionContainerMappingProperties::getTargetProtectionContainerFriendlyName() const {
    return m_target_protection_container_friendly_name;
}
void OAIProtectionContainerMappingProperties::setTargetProtectionContainerFriendlyName(const QString &target_protection_container_friendly_name) {
    m_target_protection_container_friendly_name = target_protection_container_friendly_name;
    m_target_protection_container_friendly_name_isSet = true;
}

bool OAIProtectionContainerMappingProperties::is_target_protection_container_friendly_name_Set() const{
    return m_target_protection_container_friendly_name_isSet;
}

bool OAIProtectionContainerMappingProperties::is_target_protection_container_friendly_name_Valid() const{
    return m_target_protection_container_friendly_name_isValid;
}

QString OAIProtectionContainerMappingProperties::getTargetProtectionContainerId() const {
    return m_target_protection_container_id;
}
void OAIProtectionContainerMappingProperties::setTargetProtectionContainerId(const QString &target_protection_container_id) {
    m_target_protection_container_id = target_protection_container_id;
    m_target_protection_container_id_isSet = true;
}

bool OAIProtectionContainerMappingProperties::is_target_protection_container_id_Set() const{
    return m_target_protection_container_id_isSet;
}

bool OAIProtectionContainerMappingProperties::is_target_protection_container_id_Valid() const{
    return m_target_protection_container_id_isValid;
}

bool OAIProtectionContainerMappingProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_health_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_error_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_specific_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_fabric_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_protection_container_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_fabric_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_protection_container_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_protection_container_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProtectionContainerMappingProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
