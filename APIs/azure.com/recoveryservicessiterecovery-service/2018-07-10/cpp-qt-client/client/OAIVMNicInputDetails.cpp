/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVMNicInputDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVMNicInputDetails::OAIVMNicInputDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVMNicInputDetails::OAIVMNicInputDetails() {
    this->initializeModel();
}

OAIVMNicInputDetails::~OAIVMNicInputDetails() {}

void OAIVMNicInputDetails::initializeModel() {

    m_enable_accelerated_networking_on_recovery_isSet = false;
    m_enable_accelerated_networking_on_recovery_isValid = false;

    m_enable_accelerated_networking_on_tfo_isSet = false;
    m_enable_accelerated_networking_on_tfo_isValid = false;

    m_nic_id_isSet = false;
    m_nic_id_isValid = false;

    m_recovery_lb_backend_address_pool_ids_isSet = false;
    m_recovery_lb_backend_address_pool_ids_isValid = false;

    m_recovery_network_security_group_id_isSet = false;
    m_recovery_network_security_group_id_isValid = false;

    m_recovery_public_ip_address_id_isSet = false;
    m_recovery_public_ip_address_id_isValid = false;

    m_recovery_vm_subnet_name_isSet = false;
    m_recovery_vm_subnet_name_isValid = false;

    m_replica_nic_static_ip_address_isSet = false;
    m_replica_nic_static_ip_address_isValid = false;

    m_selection_type_isSet = false;
    m_selection_type_isValid = false;

    m_tfo_ip_configs_isSet = false;
    m_tfo_ip_configs_isValid = false;

    m_tfo_network_security_group_id_isSet = false;
    m_tfo_network_security_group_id_isValid = false;

    m_tfo_vm_subnet_name_isSet = false;
    m_tfo_vm_subnet_name_isValid = false;
}

void OAIVMNicInputDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVMNicInputDetails::fromJsonObject(QJsonObject json) {

    m_enable_accelerated_networking_on_recovery_isValid = ::OpenAPI::fromJsonValue(m_enable_accelerated_networking_on_recovery, json[QString("enableAcceleratedNetworkingOnRecovery")]);
    m_enable_accelerated_networking_on_recovery_isSet = !json[QString("enableAcceleratedNetworkingOnRecovery")].isNull() && m_enable_accelerated_networking_on_recovery_isValid;

    m_enable_accelerated_networking_on_tfo_isValid = ::OpenAPI::fromJsonValue(m_enable_accelerated_networking_on_tfo, json[QString("enableAcceleratedNetworkingOnTfo")]);
    m_enable_accelerated_networking_on_tfo_isSet = !json[QString("enableAcceleratedNetworkingOnTfo")].isNull() && m_enable_accelerated_networking_on_tfo_isValid;

    m_nic_id_isValid = ::OpenAPI::fromJsonValue(m_nic_id, json[QString("nicId")]);
    m_nic_id_isSet = !json[QString("nicId")].isNull() && m_nic_id_isValid;

    m_recovery_lb_backend_address_pool_ids_isValid = ::OpenAPI::fromJsonValue(m_recovery_lb_backend_address_pool_ids, json[QString("recoveryLBBackendAddressPoolIds")]);
    m_recovery_lb_backend_address_pool_ids_isSet = !json[QString("recoveryLBBackendAddressPoolIds")].isNull() && m_recovery_lb_backend_address_pool_ids_isValid;

    m_recovery_network_security_group_id_isValid = ::OpenAPI::fromJsonValue(m_recovery_network_security_group_id, json[QString("recoveryNetworkSecurityGroupId")]);
    m_recovery_network_security_group_id_isSet = !json[QString("recoveryNetworkSecurityGroupId")].isNull() && m_recovery_network_security_group_id_isValid;

    m_recovery_public_ip_address_id_isValid = ::OpenAPI::fromJsonValue(m_recovery_public_ip_address_id, json[QString("recoveryPublicIpAddressId")]);
    m_recovery_public_ip_address_id_isSet = !json[QString("recoveryPublicIpAddressId")].isNull() && m_recovery_public_ip_address_id_isValid;

    m_recovery_vm_subnet_name_isValid = ::OpenAPI::fromJsonValue(m_recovery_vm_subnet_name, json[QString("recoveryVMSubnetName")]);
    m_recovery_vm_subnet_name_isSet = !json[QString("recoveryVMSubnetName")].isNull() && m_recovery_vm_subnet_name_isValid;

    m_replica_nic_static_ip_address_isValid = ::OpenAPI::fromJsonValue(m_replica_nic_static_ip_address, json[QString("replicaNicStaticIPAddress")]);
    m_replica_nic_static_ip_address_isSet = !json[QString("replicaNicStaticIPAddress")].isNull() && m_replica_nic_static_ip_address_isValid;

    m_selection_type_isValid = ::OpenAPI::fromJsonValue(m_selection_type, json[QString("selectionType")]);
    m_selection_type_isSet = !json[QString("selectionType")].isNull() && m_selection_type_isValid;

    m_tfo_ip_configs_isValid = ::OpenAPI::fromJsonValue(m_tfo_ip_configs, json[QString("tfoIPConfigs")]);
    m_tfo_ip_configs_isSet = !json[QString("tfoIPConfigs")].isNull() && m_tfo_ip_configs_isValid;

    m_tfo_network_security_group_id_isValid = ::OpenAPI::fromJsonValue(m_tfo_network_security_group_id, json[QString("tfoNetworkSecurityGroupId")]);
    m_tfo_network_security_group_id_isSet = !json[QString("tfoNetworkSecurityGroupId")].isNull() && m_tfo_network_security_group_id_isValid;

    m_tfo_vm_subnet_name_isValid = ::OpenAPI::fromJsonValue(m_tfo_vm_subnet_name, json[QString("tfoVMSubnetName")]);
    m_tfo_vm_subnet_name_isSet = !json[QString("tfoVMSubnetName")].isNull() && m_tfo_vm_subnet_name_isValid;
}

QString OAIVMNicInputDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVMNicInputDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_enable_accelerated_networking_on_recovery_isSet) {
        obj.insert(QString("enableAcceleratedNetworkingOnRecovery"), ::OpenAPI::toJsonValue(m_enable_accelerated_networking_on_recovery));
    }
    if (m_enable_accelerated_networking_on_tfo_isSet) {
        obj.insert(QString("enableAcceleratedNetworkingOnTfo"), ::OpenAPI::toJsonValue(m_enable_accelerated_networking_on_tfo));
    }
    if (m_nic_id_isSet) {
        obj.insert(QString("nicId"), ::OpenAPI::toJsonValue(m_nic_id));
    }
    if (m_recovery_lb_backend_address_pool_ids.size() > 0) {
        obj.insert(QString("recoveryLBBackendAddressPoolIds"), ::OpenAPI::toJsonValue(m_recovery_lb_backend_address_pool_ids));
    }
    if (m_recovery_network_security_group_id_isSet) {
        obj.insert(QString("recoveryNetworkSecurityGroupId"), ::OpenAPI::toJsonValue(m_recovery_network_security_group_id));
    }
    if (m_recovery_public_ip_address_id_isSet) {
        obj.insert(QString("recoveryPublicIpAddressId"), ::OpenAPI::toJsonValue(m_recovery_public_ip_address_id));
    }
    if (m_recovery_vm_subnet_name_isSet) {
        obj.insert(QString("recoveryVMSubnetName"), ::OpenAPI::toJsonValue(m_recovery_vm_subnet_name));
    }
    if (m_replica_nic_static_ip_address_isSet) {
        obj.insert(QString("replicaNicStaticIPAddress"), ::OpenAPI::toJsonValue(m_replica_nic_static_ip_address));
    }
    if (m_selection_type_isSet) {
        obj.insert(QString("selectionType"), ::OpenAPI::toJsonValue(m_selection_type));
    }
    if (m_tfo_ip_configs.size() > 0) {
        obj.insert(QString("tfoIPConfigs"), ::OpenAPI::toJsonValue(m_tfo_ip_configs));
    }
    if (m_tfo_network_security_group_id_isSet) {
        obj.insert(QString("tfoNetworkSecurityGroupId"), ::OpenAPI::toJsonValue(m_tfo_network_security_group_id));
    }
    if (m_tfo_vm_subnet_name_isSet) {
        obj.insert(QString("tfoVMSubnetName"), ::OpenAPI::toJsonValue(m_tfo_vm_subnet_name));
    }
    return obj;
}

bool OAIVMNicInputDetails::isEnableAcceleratedNetworkingOnRecovery() const {
    return m_enable_accelerated_networking_on_recovery;
}
void OAIVMNicInputDetails::setEnableAcceleratedNetworkingOnRecovery(const bool &enable_accelerated_networking_on_recovery) {
    m_enable_accelerated_networking_on_recovery = enable_accelerated_networking_on_recovery;
    m_enable_accelerated_networking_on_recovery_isSet = true;
}

bool OAIVMNicInputDetails::is_enable_accelerated_networking_on_recovery_Set() const{
    return m_enable_accelerated_networking_on_recovery_isSet;
}

bool OAIVMNicInputDetails::is_enable_accelerated_networking_on_recovery_Valid() const{
    return m_enable_accelerated_networking_on_recovery_isValid;
}

bool OAIVMNicInputDetails::isEnableAcceleratedNetworkingOnTfo() const {
    return m_enable_accelerated_networking_on_tfo;
}
void OAIVMNicInputDetails::setEnableAcceleratedNetworkingOnTfo(const bool &enable_accelerated_networking_on_tfo) {
    m_enable_accelerated_networking_on_tfo = enable_accelerated_networking_on_tfo;
    m_enable_accelerated_networking_on_tfo_isSet = true;
}

bool OAIVMNicInputDetails::is_enable_accelerated_networking_on_tfo_Set() const{
    return m_enable_accelerated_networking_on_tfo_isSet;
}

bool OAIVMNicInputDetails::is_enable_accelerated_networking_on_tfo_Valid() const{
    return m_enable_accelerated_networking_on_tfo_isValid;
}

QString OAIVMNicInputDetails::getNicId() const {
    return m_nic_id;
}
void OAIVMNicInputDetails::setNicId(const QString &nic_id) {
    m_nic_id = nic_id;
    m_nic_id_isSet = true;
}

bool OAIVMNicInputDetails::is_nic_id_Set() const{
    return m_nic_id_isSet;
}

bool OAIVMNicInputDetails::is_nic_id_Valid() const{
    return m_nic_id_isValid;
}

QList<QString> OAIVMNicInputDetails::getRecoveryLbBackendAddressPoolIds() const {
    return m_recovery_lb_backend_address_pool_ids;
}
void OAIVMNicInputDetails::setRecoveryLbBackendAddressPoolIds(const QList<QString> &recovery_lb_backend_address_pool_ids) {
    m_recovery_lb_backend_address_pool_ids = recovery_lb_backend_address_pool_ids;
    m_recovery_lb_backend_address_pool_ids_isSet = true;
}

bool OAIVMNicInputDetails::is_recovery_lb_backend_address_pool_ids_Set() const{
    return m_recovery_lb_backend_address_pool_ids_isSet;
}

bool OAIVMNicInputDetails::is_recovery_lb_backend_address_pool_ids_Valid() const{
    return m_recovery_lb_backend_address_pool_ids_isValid;
}

QString OAIVMNicInputDetails::getRecoveryNetworkSecurityGroupId() const {
    return m_recovery_network_security_group_id;
}
void OAIVMNicInputDetails::setRecoveryNetworkSecurityGroupId(const QString &recovery_network_security_group_id) {
    m_recovery_network_security_group_id = recovery_network_security_group_id;
    m_recovery_network_security_group_id_isSet = true;
}

bool OAIVMNicInputDetails::is_recovery_network_security_group_id_Set() const{
    return m_recovery_network_security_group_id_isSet;
}

bool OAIVMNicInputDetails::is_recovery_network_security_group_id_Valid() const{
    return m_recovery_network_security_group_id_isValid;
}

QString OAIVMNicInputDetails::getRecoveryPublicIpAddressId() const {
    return m_recovery_public_ip_address_id;
}
void OAIVMNicInputDetails::setRecoveryPublicIpAddressId(const QString &recovery_public_ip_address_id) {
    m_recovery_public_ip_address_id = recovery_public_ip_address_id;
    m_recovery_public_ip_address_id_isSet = true;
}

bool OAIVMNicInputDetails::is_recovery_public_ip_address_id_Set() const{
    return m_recovery_public_ip_address_id_isSet;
}

bool OAIVMNicInputDetails::is_recovery_public_ip_address_id_Valid() const{
    return m_recovery_public_ip_address_id_isValid;
}

QString OAIVMNicInputDetails::getRecoveryVmSubnetName() const {
    return m_recovery_vm_subnet_name;
}
void OAIVMNicInputDetails::setRecoveryVmSubnetName(const QString &recovery_vm_subnet_name) {
    m_recovery_vm_subnet_name = recovery_vm_subnet_name;
    m_recovery_vm_subnet_name_isSet = true;
}

bool OAIVMNicInputDetails::is_recovery_vm_subnet_name_Set() const{
    return m_recovery_vm_subnet_name_isSet;
}

bool OAIVMNicInputDetails::is_recovery_vm_subnet_name_Valid() const{
    return m_recovery_vm_subnet_name_isValid;
}

QString OAIVMNicInputDetails::getReplicaNicStaticIpAddress() const {
    return m_replica_nic_static_ip_address;
}
void OAIVMNicInputDetails::setReplicaNicStaticIpAddress(const QString &replica_nic_static_ip_address) {
    m_replica_nic_static_ip_address = replica_nic_static_ip_address;
    m_replica_nic_static_ip_address_isSet = true;
}

bool OAIVMNicInputDetails::is_replica_nic_static_ip_address_Set() const{
    return m_replica_nic_static_ip_address_isSet;
}

bool OAIVMNicInputDetails::is_replica_nic_static_ip_address_Valid() const{
    return m_replica_nic_static_ip_address_isValid;
}

QString OAIVMNicInputDetails::getSelectionType() const {
    return m_selection_type;
}
void OAIVMNicInputDetails::setSelectionType(const QString &selection_type) {
    m_selection_type = selection_type;
    m_selection_type_isSet = true;
}

bool OAIVMNicInputDetails::is_selection_type_Set() const{
    return m_selection_type_isSet;
}

bool OAIVMNicInputDetails::is_selection_type_Valid() const{
    return m_selection_type_isValid;
}

QList<OAIIPConfig> OAIVMNicInputDetails::getTfoIpConfigs() const {
    return m_tfo_ip_configs;
}
void OAIVMNicInputDetails::setTfoIpConfigs(const QList<OAIIPConfig> &tfo_ip_configs) {
    m_tfo_ip_configs = tfo_ip_configs;
    m_tfo_ip_configs_isSet = true;
}

bool OAIVMNicInputDetails::is_tfo_ip_configs_Set() const{
    return m_tfo_ip_configs_isSet;
}

bool OAIVMNicInputDetails::is_tfo_ip_configs_Valid() const{
    return m_tfo_ip_configs_isValid;
}

QString OAIVMNicInputDetails::getTfoNetworkSecurityGroupId() const {
    return m_tfo_network_security_group_id;
}
void OAIVMNicInputDetails::setTfoNetworkSecurityGroupId(const QString &tfo_network_security_group_id) {
    m_tfo_network_security_group_id = tfo_network_security_group_id;
    m_tfo_network_security_group_id_isSet = true;
}

bool OAIVMNicInputDetails::is_tfo_network_security_group_id_Set() const{
    return m_tfo_network_security_group_id_isSet;
}

bool OAIVMNicInputDetails::is_tfo_network_security_group_id_Valid() const{
    return m_tfo_network_security_group_id_isValid;
}

QString OAIVMNicInputDetails::getTfoVmSubnetName() const {
    return m_tfo_vm_subnet_name;
}
void OAIVMNicInputDetails::setTfoVmSubnetName(const QString &tfo_vm_subnet_name) {
    m_tfo_vm_subnet_name = tfo_vm_subnet_name;
    m_tfo_vm_subnet_name_isSet = true;
}

bool OAIVMNicInputDetails::is_tfo_vm_subnet_name_Set() const{
    return m_tfo_vm_subnet_name_isSet;
}

bool OAIVMNicInputDetails::is_tfo_vm_subnet_name_Valid() const{
    return m_tfo_vm_subnet_name_isValid;
}

bool OAIVMNicInputDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enable_accelerated_networking_on_recovery_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_accelerated_networking_on_tfo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nic_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_lb_backend_address_pool_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_network_security_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_public_ip_address_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_vm_subnet_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_replica_nic_static_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_selection_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tfo_ip_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tfo_network_security_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tfo_vm_subnet_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVMNicInputDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
