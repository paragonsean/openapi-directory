/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFabricProperties.h
 *
 * Fabric properties.
 */

#ifndef OAIFabricProperties_H
#define OAIFabricProperties_H

#include <QJsonObject>

#include "OAIEncryptionDetails.h"
#include "OAIFabricSpecificDetails.h"
#include "OAIHealthError.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFabricSpecificDetails;
class OAIEncryptionDetails;
class OAIHealthError;

class OAIFabricProperties : public OAIObject {
public:
    OAIFabricProperties();
    OAIFabricProperties(QString json);
    ~OAIFabricProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBcdrState() const;
    void setBcdrState(const QString &bcdr_state);
    bool is_bcdr_state_Set() const;
    bool is_bcdr_state_Valid() const;

    OAIFabricSpecificDetails getCustomDetails() const;
    void setCustomDetails(const OAIFabricSpecificDetails &custom_details);
    bool is_custom_details_Set() const;
    bool is_custom_details_Valid() const;

    OAIEncryptionDetails getEncryptionDetails() const;
    void setEncryptionDetails(const OAIEncryptionDetails &encryption_details);
    bool is_encryption_details_Set() const;
    bool is_encryption_details_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QString getHealth() const;
    void setHealth(const QString &health);
    bool is_health_Set() const;
    bool is_health_Valid() const;

    QList<OAIHealthError> getHealthErrorDetails() const;
    void setHealthErrorDetails(const QList<OAIHealthError> &health_error_details);
    bool is_health_error_details_Set() const;
    bool is_health_error_details_Valid() const;

    QString getInternalIdentifier() const;
    void setInternalIdentifier(const QString &internal_identifier);
    bool is_internal_identifier_Set() const;
    bool is_internal_identifier_Valid() const;

    OAIEncryptionDetails getRolloverEncryptionDetails() const;
    void setRolloverEncryptionDetails(const OAIEncryptionDetails &rollover_encryption_details);
    bool is_rollover_encryption_details_Set() const;
    bool is_rollover_encryption_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bcdr_state;
    bool m_bcdr_state_isSet;
    bool m_bcdr_state_isValid;

    OAIFabricSpecificDetails m_custom_details;
    bool m_custom_details_isSet;
    bool m_custom_details_isValid;

    OAIEncryptionDetails m_encryption_details;
    bool m_encryption_details_isSet;
    bool m_encryption_details_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QString m_health;
    bool m_health_isSet;
    bool m_health_isValid;

    QList<OAIHealthError> m_health_error_details;
    bool m_health_error_details_isSet;
    bool m_health_error_details_isValid;

    QString m_internal_identifier;
    bool m_internal_identifier_isSet;
    bool m_internal_identifier_isValid;

    OAIEncryptionDetails m_rollover_encryption_details;
    bool m_rollover_encryption_details_isSet;
    bool m_rollover_encryption_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFabricProperties)

#endif // OAIFabricProperties_H
