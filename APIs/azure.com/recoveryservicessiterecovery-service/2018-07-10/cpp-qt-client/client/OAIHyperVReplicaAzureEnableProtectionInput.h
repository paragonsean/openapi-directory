/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHyperVReplicaAzureEnableProtectionInput.h
 *
 * Azure specific enable protection input.
 */

#ifndef OAIHyperVReplicaAzureEnableProtectionInput_H
#define OAIHyperVReplicaAzureEnableProtectionInput_H

#include <QJsonObject>

#include "OAIEnableProtectionProviderSpecificInput.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHyperVReplicaAzureEnableProtectionInput : public OAIObject {
public:
    OAIHyperVReplicaAzureEnableProtectionInput();
    OAIHyperVReplicaAzureEnableProtectionInput(QString json);
    ~OAIHyperVReplicaAzureEnableProtectionInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getDisksToInclude() const;
    void setDisksToInclude(const QList<QString> &disks_to_include);
    bool is_disks_to_include_Set() const;
    bool is_disks_to_include_Valid() const;

    QString getEnableRdpOnTargetOption() const;
    void setEnableRdpOnTargetOption(const QString &enable_rdp_on_target_option);
    bool is_enable_rdp_on_target_option_Set() const;
    bool is_enable_rdp_on_target_option_Valid() const;

    QString getHvHostVmId() const;
    void setHvHostVmId(const QString &hv_host_vm_id);
    bool is_hv_host_vm_id_Set() const;
    bool is_hv_host_vm_id_Valid() const;

    QString getLogStorageAccountId() const;
    void setLogStorageAccountId(const QString &log_storage_account_id);
    bool is_log_storage_account_id_Set() const;
    bool is_log_storage_account_id_Valid() const;

    QString getOsType() const;
    void setOsType(const QString &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    QString getTargetAzureNetworkId() const;
    void setTargetAzureNetworkId(const QString &target_azure_network_id);
    bool is_target_azure_network_id_Set() const;
    bool is_target_azure_network_id_Valid() const;

    QString getTargetAzureSubnetId() const;
    void setTargetAzureSubnetId(const QString &target_azure_subnet_id);
    bool is_target_azure_subnet_id_Set() const;
    bool is_target_azure_subnet_id_Valid() const;

    QString getTargetAzureV1ResourceGroupId() const;
    void setTargetAzureV1ResourceGroupId(const QString &target_azure_v1_resource_group_id);
    bool is_target_azure_v1_resource_group_id_Set() const;
    bool is_target_azure_v1_resource_group_id_Valid() const;

    QString getTargetAzureV2ResourceGroupId() const;
    void setTargetAzureV2ResourceGroupId(const QString &target_azure_v2_resource_group_id);
    bool is_target_azure_v2_resource_group_id_Set() const;
    bool is_target_azure_v2_resource_group_id_Valid() const;

    QString getTargetAzureVmName() const;
    void setTargetAzureVmName(const QString &target_azure_vm_name);
    bool is_target_azure_vm_name_Set() const;
    bool is_target_azure_vm_name_Valid() const;

    QString getTargetStorageAccountId() const;
    void setTargetStorageAccountId(const QString &target_storage_account_id);
    bool is_target_storage_account_id_Set() const;
    bool is_target_storage_account_id_Valid() const;

    QString getUseManagedDisks() const;
    void setUseManagedDisks(const QString &use_managed_disks);
    bool is_use_managed_disks_Set() const;
    bool is_use_managed_disks_Valid() const;

    QString getVhdId() const;
    void setVhdId(const QString &vhd_id);
    bool is_vhd_id_Set() const;
    bool is_vhd_id_Valid() const;

    QString getVmName() const;
    void setVmName(const QString &vm_name);
    bool is_vm_name_Set() const;
    bool is_vm_name_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_disks_to_include;
    bool m_disks_to_include_isSet;
    bool m_disks_to_include_isValid;

    QString m_enable_rdp_on_target_option;
    bool m_enable_rdp_on_target_option_isSet;
    bool m_enable_rdp_on_target_option_isValid;

    QString m_hv_host_vm_id;
    bool m_hv_host_vm_id_isSet;
    bool m_hv_host_vm_id_isValid;

    QString m_log_storage_account_id;
    bool m_log_storage_account_id_isSet;
    bool m_log_storage_account_id_isValid;

    QString m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;

    QString m_target_azure_network_id;
    bool m_target_azure_network_id_isSet;
    bool m_target_azure_network_id_isValid;

    QString m_target_azure_subnet_id;
    bool m_target_azure_subnet_id_isSet;
    bool m_target_azure_subnet_id_isValid;

    QString m_target_azure_v1_resource_group_id;
    bool m_target_azure_v1_resource_group_id_isSet;
    bool m_target_azure_v1_resource_group_id_isValid;

    QString m_target_azure_v2_resource_group_id;
    bool m_target_azure_v2_resource_group_id_isSet;
    bool m_target_azure_v2_resource_group_id_isValid;

    QString m_target_azure_vm_name;
    bool m_target_azure_vm_name_isSet;
    bool m_target_azure_vm_name_isValid;

    QString m_target_storage_account_id;
    bool m_target_storage_account_id_isSet;
    bool m_target_storage_account_id_isValid;

    QString m_use_managed_disks;
    bool m_use_managed_disks_isSet;
    bool m_use_managed_disks_isValid;

    QString m_vhd_id;
    bool m_vhd_id_isSet;
    bool m_vhd_id_isValid;

    QString m_vm_name;
    bool m_vm_name_isSet;
    bool m_vm_name_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHyperVReplicaAzureEnableProtectionInput)

#endif // OAIHyperVReplicaAzureEnableProtectionInput_H
