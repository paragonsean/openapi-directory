/**
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddRecoveryServicesProviderInputProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddRecoveryServicesProviderInputProperties::OAIAddRecoveryServicesProviderInputProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddRecoveryServicesProviderInputProperties::OAIAddRecoveryServicesProviderInputProperties() {
    this->initializeModel();
}

OAIAddRecoveryServicesProviderInputProperties::~OAIAddRecoveryServicesProviderInputProperties() {}

void OAIAddRecoveryServicesProviderInputProperties::initializeModel() {

    m_authentication_identity_input_isSet = false;
    m_authentication_identity_input_isValid = false;

    m_machine_name_isSet = false;
    m_machine_name_isValid = false;

    m_resource_access_identity_input_isSet = false;
    m_resource_access_identity_input_isValid = false;
}

void OAIAddRecoveryServicesProviderInputProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddRecoveryServicesProviderInputProperties::fromJsonObject(QJsonObject json) {

    m_authentication_identity_input_isValid = ::OpenAPI::fromJsonValue(m_authentication_identity_input, json[QString("authenticationIdentityInput")]);
    m_authentication_identity_input_isSet = !json[QString("authenticationIdentityInput")].isNull() && m_authentication_identity_input_isValid;

    m_machine_name_isValid = ::OpenAPI::fromJsonValue(m_machine_name, json[QString("machineName")]);
    m_machine_name_isSet = !json[QString("machineName")].isNull() && m_machine_name_isValid;

    m_resource_access_identity_input_isValid = ::OpenAPI::fromJsonValue(m_resource_access_identity_input, json[QString("resourceAccessIdentityInput")]);
    m_resource_access_identity_input_isSet = !json[QString("resourceAccessIdentityInput")].isNull() && m_resource_access_identity_input_isValid;
}

QString OAIAddRecoveryServicesProviderInputProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddRecoveryServicesProviderInputProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_authentication_identity_input.isSet()) {
        obj.insert(QString("authenticationIdentityInput"), ::OpenAPI::toJsonValue(m_authentication_identity_input));
    }
    if (m_machine_name_isSet) {
        obj.insert(QString("machineName"), ::OpenAPI::toJsonValue(m_machine_name));
    }
    if (m_resource_access_identity_input.isSet()) {
        obj.insert(QString("resourceAccessIdentityInput"), ::OpenAPI::toJsonValue(m_resource_access_identity_input));
    }
    return obj;
}

OAIIdentityProviderInput OAIAddRecoveryServicesProviderInputProperties::getAuthenticationIdentityInput() const {
    return m_authentication_identity_input;
}
void OAIAddRecoveryServicesProviderInputProperties::setAuthenticationIdentityInput(const OAIIdentityProviderInput &authentication_identity_input) {
    m_authentication_identity_input = authentication_identity_input;
    m_authentication_identity_input_isSet = true;
}

bool OAIAddRecoveryServicesProviderInputProperties::is_authentication_identity_input_Set() const{
    return m_authentication_identity_input_isSet;
}

bool OAIAddRecoveryServicesProviderInputProperties::is_authentication_identity_input_Valid() const{
    return m_authentication_identity_input_isValid;
}

QString OAIAddRecoveryServicesProviderInputProperties::getMachineName() const {
    return m_machine_name;
}
void OAIAddRecoveryServicesProviderInputProperties::setMachineName(const QString &machine_name) {
    m_machine_name = machine_name;
    m_machine_name_isSet = true;
}

bool OAIAddRecoveryServicesProviderInputProperties::is_machine_name_Set() const{
    return m_machine_name_isSet;
}

bool OAIAddRecoveryServicesProviderInputProperties::is_machine_name_Valid() const{
    return m_machine_name_isValid;
}

OAIIdentityProviderInput OAIAddRecoveryServicesProviderInputProperties::getResourceAccessIdentityInput() const {
    return m_resource_access_identity_input;
}
void OAIAddRecoveryServicesProviderInputProperties::setResourceAccessIdentityInput(const OAIIdentityProviderInput &resource_access_identity_input) {
    m_resource_access_identity_input = resource_access_identity_input;
    m_resource_access_identity_input_isSet = true;
}

bool OAIAddRecoveryServicesProviderInputProperties::is_resource_access_identity_input_Set() const{
    return m_resource_access_identity_input_isSet;
}

bool OAIAddRecoveryServicesProviderInputProperties::is_resource_access_identity_input_Valid() const{
    return m_resource_access_identity_input_isValid;
}

bool OAIAddRecoveryServicesProviderInputProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_authentication_identity_input.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_machine_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_access_identity_input.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddRecoveryServicesProviderInputProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_authentication_identity_input_isValid && m_machine_name_isValid && m_resource_access_identity_input_isValid && true;
}

} // namespace OpenAPI
