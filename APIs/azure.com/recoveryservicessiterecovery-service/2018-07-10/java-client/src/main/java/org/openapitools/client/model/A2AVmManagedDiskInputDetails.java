/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DiskEncryptionInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Azure VM managed disk input details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:43.351731-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class A2AVmManagedDiskInputDetails {
  public static final String SERIALIZED_NAME_DISK_ENCRYPTION_INFO = "diskEncryptionInfo";
  @SerializedName(SERIALIZED_NAME_DISK_ENCRYPTION_INFO)
  private DiskEncryptionInfo diskEncryptionInfo;

  public static final String SERIALIZED_NAME_DISK_ID = "diskId";
  @SerializedName(SERIALIZED_NAME_DISK_ID)
  private String diskId;

  public static final String SERIALIZED_NAME_PRIMARY_STAGING_AZURE_STORAGE_ACCOUNT_ID = "primaryStagingAzureStorageAccountId";
  @SerializedName(SERIALIZED_NAME_PRIMARY_STAGING_AZURE_STORAGE_ACCOUNT_ID)
  private String primaryStagingAzureStorageAccountId;

  public static final String SERIALIZED_NAME_RECOVERY_DISK_ENCRYPTION_SET_ID = "recoveryDiskEncryptionSetId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_DISK_ENCRYPTION_SET_ID)
  private String recoveryDiskEncryptionSetId;

  public static final String SERIALIZED_NAME_RECOVERY_REPLICA_DISK_ACCOUNT_TYPE = "recoveryReplicaDiskAccountType";
  @SerializedName(SERIALIZED_NAME_RECOVERY_REPLICA_DISK_ACCOUNT_TYPE)
  private String recoveryReplicaDiskAccountType;

  public static final String SERIALIZED_NAME_RECOVERY_RESOURCE_GROUP_ID = "recoveryResourceGroupId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_RESOURCE_GROUP_ID)
  private String recoveryResourceGroupId;

  public static final String SERIALIZED_NAME_RECOVERY_TARGET_DISK_ACCOUNT_TYPE = "recoveryTargetDiskAccountType";
  @SerializedName(SERIALIZED_NAME_RECOVERY_TARGET_DISK_ACCOUNT_TYPE)
  private String recoveryTargetDiskAccountType;

  public A2AVmManagedDiskInputDetails() {
  }

  public A2AVmManagedDiskInputDetails diskEncryptionInfo(DiskEncryptionInfo diskEncryptionInfo) {
    this.diskEncryptionInfo = diskEncryptionInfo;
    return this;
  }

  /**
   * Get diskEncryptionInfo
   * @return diskEncryptionInfo
   */
  @javax.annotation.Nullable
  public DiskEncryptionInfo getDiskEncryptionInfo() {
    return diskEncryptionInfo;
  }

  public void setDiskEncryptionInfo(DiskEncryptionInfo diskEncryptionInfo) {
    this.diskEncryptionInfo = diskEncryptionInfo;
  }


  public A2AVmManagedDiskInputDetails diskId(String diskId) {
    this.diskId = diskId;
    return this;
  }

  /**
   * The disk Id.
   * @return diskId
   */
  @javax.annotation.Nullable
  public String getDiskId() {
    return diskId;
  }

  public void setDiskId(String diskId) {
    this.diskId = diskId;
  }


  public A2AVmManagedDiskInputDetails primaryStagingAzureStorageAccountId(String primaryStagingAzureStorageAccountId) {
    this.primaryStagingAzureStorageAccountId = primaryStagingAzureStorageAccountId;
    return this;
  }

  /**
   * The primary staging storage account Arm Id.
   * @return primaryStagingAzureStorageAccountId
   */
  @javax.annotation.Nullable
  public String getPrimaryStagingAzureStorageAccountId() {
    return primaryStagingAzureStorageAccountId;
  }

  public void setPrimaryStagingAzureStorageAccountId(String primaryStagingAzureStorageAccountId) {
    this.primaryStagingAzureStorageAccountId = primaryStagingAzureStorageAccountId;
  }


  public A2AVmManagedDiskInputDetails recoveryDiskEncryptionSetId(String recoveryDiskEncryptionSetId) {
    this.recoveryDiskEncryptionSetId = recoveryDiskEncryptionSetId;
    return this;
  }

  /**
   * The recovery disk encryption set Id.
   * @return recoveryDiskEncryptionSetId
   */
  @javax.annotation.Nullable
  public String getRecoveryDiskEncryptionSetId() {
    return recoveryDiskEncryptionSetId;
  }

  public void setRecoveryDiskEncryptionSetId(String recoveryDiskEncryptionSetId) {
    this.recoveryDiskEncryptionSetId = recoveryDiskEncryptionSetId;
  }


  public A2AVmManagedDiskInputDetails recoveryReplicaDiskAccountType(String recoveryReplicaDiskAccountType) {
    this.recoveryReplicaDiskAccountType = recoveryReplicaDiskAccountType;
    return this;
  }

  /**
   * The replica disk type. Its an optional value and will be same as source disk type if not user provided.
   * @return recoveryReplicaDiskAccountType
   */
  @javax.annotation.Nullable
  public String getRecoveryReplicaDiskAccountType() {
    return recoveryReplicaDiskAccountType;
  }

  public void setRecoveryReplicaDiskAccountType(String recoveryReplicaDiskAccountType) {
    this.recoveryReplicaDiskAccountType = recoveryReplicaDiskAccountType;
  }


  public A2AVmManagedDiskInputDetails recoveryResourceGroupId(String recoveryResourceGroupId) {
    this.recoveryResourceGroupId = recoveryResourceGroupId;
    return this;
  }

  /**
   * The target resource group Arm Id.
   * @return recoveryResourceGroupId
   */
  @javax.annotation.Nullable
  public String getRecoveryResourceGroupId() {
    return recoveryResourceGroupId;
  }

  public void setRecoveryResourceGroupId(String recoveryResourceGroupId) {
    this.recoveryResourceGroupId = recoveryResourceGroupId;
  }


  public A2AVmManagedDiskInputDetails recoveryTargetDiskAccountType(String recoveryTargetDiskAccountType) {
    this.recoveryTargetDiskAccountType = recoveryTargetDiskAccountType;
    return this;
  }

  /**
   * The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
   * @return recoveryTargetDiskAccountType
   */
  @javax.annotation.Nullable
  public String getRecoveryTargetDiskAccountType() {
    return recoveryTargetDiskAccountType;
  }

  public void setRecoveryTargetDiskAccountType(String recoveryTargetDiskAccountType) {
    this.recoveryTargetDiskAccountType = recoveryTargetDiskAccountType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    A2AVmManagedDiskInputDetails a2AVmManagedDiskInputDetails = (A2AVmManagedDiskInputDetails) o;
    return Objects.equals(this.diskEncryptionInfo, a2AVmManagedDiskInputDetails.diskEncryptionInfo) &&
        Objects.equals(this.diskId, a2AVmManagedDiskInputDetails.diskId) &&
        Objects.equals(this.primaryStagingAzureStorageAccountId, a2AVmManagedDiskInputDetails.primaryStagingAzureStorageAccountId) &&
        Objects.equals(this.recoveryDiskEncryptionSetId, a2AVmManagedDiskInputDetails.recoveryDiskEncryptionSetId) &&
        Objects.equals(this.recoveryReplicaDiskAccountType, a2AVmManagedDiskInputDetails.recoveryReplicaDiskAccountType) &&
        Objects.equals(this.recoveryResourceGroupId, a2AVmManagedDiskInputDetails.recoveryResourceGroupId) &&
        Objects.equals(this.recoveryTargetDiskAccountType, a2AVmManagedDiskInputDetails.recoveryTargetDiskAccountType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diskEncryptionInfo, diskId, primaryStagingAzureStorageAccountId, recoveryDiskEncryptionSetId, recoveryReplicaDiskAccountType, recoveryResourceGroupId, recoveryTargetDiskAccountType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class A2AVmManagedDiskInputDetails {\n");
    sb.append("    diskEncryptionInfo: ").append(toIndentedString(diskEncryptionInfo)).append("\n");
    sb.append("    diskId: ").append(toIndentedString(diskId)).append("\n");
    sb.append("    primaryStagingAzureStorageAccountId: ").append(toIndentedString(primaryStagingAzureStorageAccountId)).append("\n");
    sb.append("    recoveryDiskEncryptionSetId: ").append(toIndentedString(recoveryDiskEncryptionSetId)).append("\n");
    sb.append("    recoveryReplicaDiskAccountType: ").append(toIndentedString(recoveryReplicaDiskAccountType)).append("\n");
    sb.append("    recoveryResourceGroupId: ").append(toIndentedString(recoveryResourceGroupId)).append("\n");
    sb.append("    recoveryTargetDiskAccountType: ").append(toIndentedString(recoveryTargetDiskAccountType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("diskEncryptionInfo");
    openapiFields.add("diskId");
    openapiFields.add("primaryStagingAzureStorageAccountId");
    openapiFields.add("recoveryDiskEncryptionSetId");
    openapiFields.add("recoveryReplicaDiskAccountType");
    openapiFields.add("recoveryResourceGroupId");
    openapiFields.add("recoveryTargetDiskAccountType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to A2AVmManagedDiskInputDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!A2AVmManagedDiskInputDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in A2AVmManagedDiskInputDetails is not found in the empty JSON string", A2AVmManagedDiskInputDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!A2AVmManagedDiskInputDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `A2AVmManagedDiskInputDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `diskEncryptionInfo`
      if (jsonObj.get("diskEncryptionInfo") != null && !jsonObj.get("diskEncryptionInfo").isJsonNull()) {
        DiskEncryptionInfo.validateJsonElement(jsonObj.get("diskEncryptionInfo"));
      }
      if ((jsonObj.get("diskId") != null && !jsonObj.get("diskId").isJsonNull()) && !jsonObj.get("diskId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `diskId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("diskId").toString()));
      }
      if ((jsonObj.get("primaryStagingAzureStorageAccountId") != null && !jsonObj.get("primaryStagingAzureStorageAccountId").isJsonNull()) && !jsonObj.get("primaryStagingAzureStorageAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryStagingAzureStorageAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryStagingAzureStorageAccountId").toString()));
      }
      if ((jsonObj.get("recoveryDiskEncryptionSetId") != null && !jsonObj.get("recoveryDiskEncryptionSetId").isJsonNull()) && !jsonObj.get("recoveryDiskEncryptionSetId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryDiskEncryptionSetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryDiskEncryptionSetId").toString()));
      }
      if ((jsonObj.get("recoveryReplicaDiskAccountType") != null && !jsonObj.get("recoveryReplicaDiskAccountType").isJsonNull()) && !jsonObj.get("recoveryReplicaDiskAccountType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryReplicaDiskAccountType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryReplicaDiskAccountType").toString()));
      }
      if ((jsonObj.get("recoveryResourceGroupId") != null && !jsonObj.get("recoveryResourceGroupId").isJsonNull()) && !jsonObj.get("recoveryResourceGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryResourceGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryResourceGroupId").toString()));
      }
      if ((jsonObj.get("recoveryTargetDiskAccountType") != null && !jsonObj.get("recoveryTargetDiskAccountType").isJsonNull()) && !jsonObj.get("recoveryTargetDiskAccountType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryTargetDiskAccountType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryTargetDiskAccountType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!A2AVmManagedDiskInputDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'A2AVmManagedDiskInputDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<A2AVmManagedDiskInputDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(A2AVmManagedDiskInputDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<A2AVmManagedDiskInputDetails>() {
           @Override
           public void write(JsonWriter out, A2AVmManagedDiskInputDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public A2AVmManagedDiskInputDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of A2AVmManagedDiskInputDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of A2AVmManagedDiskInputDetails
   * @throws IOException if the JSON string is invalid with respect to A2AVmManagedDiskInputDetails
   */
  public static A2AVmManagedDiskInputDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, A2AVmManagedDiskInputDetails.class);
  }

  /**
   * Convert an instance of A2AVmManagedDiskInputDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

