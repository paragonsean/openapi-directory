/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EnableProtectionProviderSpecificInput;
import org.openapitools.client.model.InMageAzureV2DiskInputDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VMware Azure specific enable protection input.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:43.351731-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InMageAzureV2EnableProtectionInput extends EnableProtectionProviderSpecificInput {
  public static final String SERIALIZED_NAME_DISK_ENCRYPTION_SET_ID = "diskEncryptionSetId";
  @SerializedName(SERIALIZED_NAME_DISK_ENCRYPTION_SET_ID)
  private String diskEncryptionSetId;

  /**
   * The DiskType.
   */
  @JsonAdapter(DiskTypeEnum.Adapter.class)
  public enum DiskTypeEnum {
    STANDARD_LRS("Standard_LRS"),
    
    PREMIUM_LRS("Premium_LRS"),
    
    STANDARD_SSD_LRS("StandardSSD_LRS");

    private String value;

    DiskTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DiskTypeEnum fromValue(String value) {
      for (DiskTypeEnum b : DiskTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DiskTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DiskTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DiskTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DiskTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DiskTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DISK_TYPE = "diskType";
  @SerializedName(SERIALIZED_NAME_DISK_TYPE)
  private DiskTypeEnum diskType;

  public static final String SERIALIZED_NAME_DISKS_TO_INCLUDE = "disksToInclude";
  @SerializedName(SERIALIZED_NAME_DISKS_TO_INCLUDE)
  private List<InMageAzureV2DiskInputDetails> disksToInclude = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLE_RDP_ON_TARGET_OPTION = "enableRdpOnTargetOption";
  @SerializedName(SERIALIZED_NAME_ENABLE_RDP_ON_TARGET_OPTION)
  private String enableRdpOnTargetOption;

  public static final String SERIALIZED_NAME_LOG_STORAGE_ACCOUNT_ID = "logStorageAccountId";
  @SerializedName(SERIALIZED_NAME_LOG_STORAGE_ACCOUNT_ID)
  private String logStorageAccountId;

  public static final String SERIALIZED_NAME_MASTER_TARGET_ID = "masterTargetId";
  @SerializedName(SERIALIZED_NAME_MASTER_TARGET_ID)
  private String masterTargetId;

  public static final String SERIALIZED_NAME_MULTI_VM_GROUP_ID = "multiVmGroupId";
  @SerializedName(SERIALIZED_NAME_MULTI_VM_GROUP_ID)
  private String multiVmGroupId;

  public static final String SERIALIZED_NAME_MULTI_VM_GROUP_NAME = "multiVmGroupName";
  @SerializedName(SERIALIZED_NAME_MULTI_VM_GROUP_NAME)
  private String multiVmGroupName;

  public static final String SERIALIZED_NAME_PROCESS_SERVER_ID = "processServerId";
  @SerializedName(SERIALIZED_NAME_PROCESS_SERVER_ID)
  private String processServerId;

  public static final String SERIALIZED_NAME_RUN_AS_ACCOUNT_ID = "runAsAccountId";
  @SerializedName(SERIALIZED_NAME_RUN_AS_ACCOUNT_ID)
  private String runAsAccountId;

  public static final String SERIALIZED_NAME_STORAGE_ACCOUNT_ID = "storageAccountId";
  @SerializedName(SERIALIZED_NAME_STORAGE_ACCOUNT_ID)
  private String storageAccountId;

  public static final String SERIALIZED_NAME_TARGET_AZURE_NETWORK_ID = "targetAzureNetworkId";
  @SerializedName(SERIALIZED_NAME_TARGET_AZURE_NETWORK_ID)
  private String targetAzureNetworkId;

  public static final String SERIALIZED_NAME_TARGET_AZURE_SUBNET_ID = "targetAzureSubnetId";
  @SerializedName(SERIALIZED_NAME_TARGET_AZURE_SUBNET_ID)
  private String targetAzureSubnetId;

  public static final String SERIALIZED_NAME_TARGET_AZURE_V1_RESOURCE_GROUP_ID = "targetAzureV1ResourceGroupId";
  @SerializedName(SERIALIZED_NAME_TARGET_AZURE_V1_RESOURCE_GROUP_ID)
  private String targetAzureV1ResourceGroupId;

  public static final String SERIALIZED_NAME_TARGET_AZURE_V2_RESOURCE_GROUP_ID = "targetAzureV2ResourceGroupId";
  @SerializedName(SERIALIZED_NAME_TARGET_AZURE_V2_RESOURCE_GROUP_ID)
  private String targetAzureV2ResourceGroupId;

  public static final String SERIALIZED_NAME_TARGET_AZURE_VM_NAME = "targetAzureVmName";
  @SerializedName(SERIALIZED_NAME_TARGET_AZURE_VM_NAME)
  private String targetAzureVmName;

  public InMageAzureV2EnableProtectionInput() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public InMageAzureV2EnableProtectionInput diskEncryptionSetId(String diskEncryptionSetId) {
    this.diskEncryptionSetId = diskEncryptionSetId;
    return this;
  }

  /**
   * The DiskEncryptionSet ARM ID.
   * @return diskEncryptionSetId
   */
  @javax.annotation.Nullable
  public String getDiskEncryptionSetId() {
    return diskEncryptionSetId;
  }

  public void setDiskEncryptionSetId(String diskEncryptionSetId) {
    this.diskEncryptionSetId = diskEncryptionSetId;
  }


  public InMageAzureV2EnableProtectionInput diskType(DiskTypeEnum diskType) {
    this.diskType = diskType;
    return this;
  }

  /**
   * The DiskType.
   * @return diskType
   */
  @javax.annotation.Nullable
  public DiskTypeEnum getDiskType() {
    return diskType;
  }

  public void setDiskType(DiskTypeEnum diskType) {
    this.diskType = diskType;
  }


  public InMageAzureV2EnableProtectionInput disksToInclude(List<InMageAzureV2DiskInputDetails> disksToInclude) {
    this.disksToInclude = disksToInclude;
    return this;
  }

  public InMageAzureV2EnableProtectionInput addDisksToIncludeItem(InMageAzureV2DiskInputDetails disksToIncludeItem) {
    if (this.disksToInclude == null) {
      this.disksToInclude = new ArrayList<>();
    }
    this.disksToInclude.add(disksToIncludeItem);
    return this;
  }

  /**
   * The disks to include list.
   * @return disksToInclude
   */
  @javax.annotation.Nullable
  public List<InMageAzureV2DiskInputDetails> getDisksToInclude() {
    return disksToInclude;
  }

  public void setDisksToInclude(List<InMageAzureV2DiskInputDetails> disksToInclude) {
    this.disksToInclude = disksToInclude;
  }


  public InMageAzureV2EnableProtectionInput enableRdpOnTargetOption(String enableRdpOnTargetOption) {
    this.enableRdpOnTargetOption = enableRdpOnTargetOption;
    return this;
  }

  /**
   * The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
   * @return enableRdpOnTargetOption
   */
  @javax.annotation.Nullable
  public String getEnableRdpOnTargetOption() {
    return enableRdpOnTargetOption;
  }

  public void setEnableRdpOnTargetOption(String enableRdpOnTargetOption) {
    this.enableRdpOnTargetOption = enableRdpOnTargetOption;
  }


  public InMageAzureV2EnableProtectionInput logStorageAccountId(String logStorageAccountId) {
    this.logStorageAccountId = logStorageAccountId;
    return this;
  }

  /**
   * The storage account to be used for logging during replication.
   * @return logStorageAccountId
   */
  @javax.annotation.Nullable
  public String getLogStorageAccountId() {
    return logStorageAccountId;
  }

  public void setLogStorageAccountId(String logStorageAccountId) {
    this.logStorageAccountId = logStorageAccountId;
  }


  public InMageAzureV2EnableProtectionInput masterTargetId(String masterTargetId) {
    this.masterTargetId = masterTargetId;
    return this;
  }

  /**
   * The Master target Id.
   * @return masterTargetId
   */
  @javax.annotation.Nullable
  public String getMasterTargetId() {
    return masterTargetId;
  }

  public void setMasterTargetId(String masterTargetId) {
    this.masterTargetId = masterTargetId;
  }


  public InMageAzureV2EnableProtectionInput multiVmGroupId(String multiVmGroupId) {
    this.multiVmGroupId = multiVmGroupId;
    return this;
  }

  /**
   * The multi vm group Id.
   * @return multiVmGroupId
   */
  @javax.annotation.Nullable
  public String getMultiVmGroupId() {
    return multiVmGroupId;
  }

  public void setMultiVmGroupId(String multiVmGroupId) {
    this.multiVmGroupId = multiVmGroupId;
  }


  public InMageAzureV2EnableProtectionInput multiVmGroupName(String multiVmGroupName) {
    this.multiVmGroupName = multiVmGroupName;
    return this;
  }

  /**
   * The multi vm group name.
   * @return multiVmGroupName
   */
  @javax.annotation.Nullable
  public String getMultiVmGroupName() {
    return multiVmGroupName;
  }

  public void setMultiVmGroupName(String multiVmGroupName) {
    this.multiVmGroupName = multiVmGroupName;
  }


  public InMageAzureV2EnableProtectionInput processServerId(String processServerId) {
    this.processServerId = processServerId;
    return this;
  }

  /**
   * The Process Server Id.
   * @return processServerId
   */
  @javax.annotation.Nullable
  public String getProcessServerId() {
    return processServerId;
  }

  public void setProcessServerId(String processServerId) {
    this.processServerId = processServerId;
  }


  public InMageAzureV2EnableProtectionInput runAsAccountId(String runAsAccountId) {
    this.runAsAccountId = runAsAccountId;
    return this;
  }

  /**
   * The CS account Id.
   * @return runAsAccountId
   */
  @javax.annotation.Nullable
  public String getRunAsAccountId() {
    return runAsAccountId;
  }

  public void setRunAsAccountId(String runAsAccountId) {
    this.runAsAccountId = runAsAccountId;
  }


  public InMageAzureV2EnableProtectionInput storageAccountId(String storageAccountId) {
    this.storageAccountId = storageAccountId;
    return this;
  }

  /**
   * The storage account name.
   * @return storageAccountId
   */
  @javax.annotation.Nullable
  public String getStorageAccountId() {
    return storageAccountId;
  }

  public void setStorageAccountId(String storageAccountId) {
    this.storageAccountId = storageAccountId;
  }


  public InMageAzureV2EnableProtectionInput targetAzureNetworkId(String targetAzureNetworkId) {
    this.targetAzureNetworkId = targetAzureNetworkId;
    return this;
  }

  /**
   * The selected target Azure network Id.
   * @return targetAzureNetworkId
   */
  @javax.annotation.Nullable
  public String getTargetAzureNetworkId() {
    return targetAzureNetworkId;
  }

  public void setTargetAzureNetworkId(String targetAzureNetworkId) {
    this.targetAzureNetworkId = targetAzureNetworkId;
  }


  public InMageAzureV2EnableProtectionInput targetAzureSubnetId(String targetAzureSubnetId) {
    this.targetAzureSubnetId = targetAzureSubnetId;
    return this;
  }

  /**
   * The selected target Azure subnet Id.
   * @return targetAzureSubnetId
   */
  @javax.annotation.Nullable
  public String getTargetAzureSubnetId() {
    return targetAzureSubnetId;
  }

  public void setTargetAzureSubnetId(String targetAzureSubnetId) {
    this.targetAzureSubnetId = targetAzureSubnetId;
  }


  public InMageAzureV2EnableProtectionInput targetAzureV1ResourceGroupId(String targetAzureV1ResourceGroupId) {
    this.targetAzureV1ResourceGroupId = targetAzureV1ResourceGroupId;
    return this;
  }

  /**
   * The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
   * @return targetAzureV1ResourceGroupId
   */
  @javax.annotation.Nullable
  public String getTargetAzureV1ResourceGroupId() {
    return targetAzureV1ResourceGroupId;
  }

  public void setTargetAzureV1ResourceGroupId(String targetAzureV1ResourceGroupId) {
    this.targetAzureV1ResourceGroupId = targetAzureV1ResourceGroupId;
  }


  public InMageAzureV2EnableProtectionInput targetAzureV2ResourceGroupId(String targetAzureV2ResourceGroupId) {
    this.targetAzureV2ResourceGroupId = targetAzureV2ResourceGroupId;
    return this;
  }

  /**
   * The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
   * @return targetAzureV2ResourceGroupId
   */
  @javax.annotation.Nullable
  public String getTargetAzureV2ResourceGroupId() {
    return targetAzureV2ResourceGroupId;
  }

  public void setTargetAzureV2ResourceGroupId(String targetAzureV2ResourceGroupId) {
    this.targetAzureV2ResourceGroupId = targetAzureV2ResourceGroupId;
  }


  public InMageAzureV2EnableProtectionInput targetAzureVmName(String targetAzureVmName) {
    this.targetAzureVmName = targetAzureVmName;
    return this;
  }

  /**
   * The target azure Vm Name.
   * @return targetAzureVmName
   */
  @javax.annotation.Nullable
  public String getTargetAzureVmName() {
    return targetAzureVmName;
  }

  public void setTargetAzureVmName(String targetAzureVmName) {
    this.targetAzureVmName = targetAzureVmName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InMageAzureV2EnableProtectionInput inMageAzureV2EnableProtectionInput = (InMageAzureV2EnableProtectionInput) o;
    return Objects.equals(this.diskEncryptionSetId, inMageAzureV2EnableProtectionInput.diskEncryptionSetId) &&
        Objects.equals(this.diskType, inMageAzureV2EnableProtectionInput.diskType) &&
        Objects.equals(this.disksToInclude, inMageAzureV2EnableProtectionInput.disksToInclude) &&
        Objects.equals(this.enableRdpOnTargetOption, inMageAzureV2EnableProtectionInput.enableRdpOnTargetOption) &&
        Objects.equals(this.logStorageAccountId, inMageAzureV2EnableProtectionInput.logStorageAccountId) &&
        Objects.equals(this.masterTargetId, inMageAzureV2EnableProtectionInput.masterTargetId) &&
        Objects.equals(this.multiVmGroupId, inMageAzureV2EnableProtectionInput.multiVmGroupId) &&
        Objects.equals(this.multiVmGroupName, inMageAzureV2EnableProtectionInput.multiVmGroupName) &&
        Objects.equals(this.processServerId, inMageAzureV2EnableProtectionInput.processServerId) &&
        Objects.equals(this.runAsAccountId, inMageAzureV2EnableProtectionInput.runAsAccountId) &&
        Objects.equals(this.storageAccountId, inMageAzureV2EnableProtectionInput.storageAccountId) &&
        Objects.equals(this.targetAzureNetworkId, inMageAzureV2EnableProtectionInput.targetAzureNetworkId) &&
        Objects.equals(this.targetAzureSubnetId, inMageAzureV2EnableProtectionInput.targetAzureSubnetId) &&
        Objects.equals(this.targetAzureV1ResourceGroupId, inMageAzureV2EnableProtectionInput.targetAzureV1ResourceGroupId) &&
        Objects.equals(this.targetAzureV2ResourceGroupId, inMageAzureV2EnableProtectionInput.targetAzureV2ResourceGroupId) &&
        Objects.equals(this.targetAzureVmName, inMageAzureV2EnableProtectionInput.targetAzureVmName) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diskEncryptionSetId, diskType, disksToInclude, enableRdpOnTargetOption, logStorageAccountId, masterTargetId, multiVmGroupId, multiVmGroupName, processServerId, runAsAccountId, storageAccountId, targetAzureNetworkId, targetAzureSubnetId, targetAzureV1ResourceGroupId, targetAzureV2ResourceGroupId, targetAzureVmName, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InMageAzureV2EnableProtectionInput {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    diskEncryptionSetId: ").append(toIndentedString(diskEncryptionSetId)).append("\n");
    sb.append("    diskType: ").append(toIndentedString(diskType)).append("\n");
    sb.append("    disksToInclude: ").append(toIndentedString(disksToInclude)).append("\n");
    sb.append("    enableRdpOnTargetOption: ").append(toIndentedString(enableRdpOnTargetOption)).append("\n");
    sb.append("    logStorageAccountId: ").append(toIndentedString(logStorageAccountId)).append("\n");
    sb.append("    masterTargetId: ").append(toIndentedString(masterTargetId)).append("\n");
    sb.append("    multiVmGroupId: ").append(toIndentedString(multiVmGroupId)).append("\n");
    sb.append("    multiVmGroupName: ").append(toIndentedString(multiVmGroupName)).append("\n");
    sb.append("    processServerId: ").append(toIndentedString(processServerId)).append("\n");
    sb.append("    runAsAccountId: ").append(toIndentedString(runAsAccountId)).append("\n");
    sb.append("    storageAccountId: ").append(toIndentedString(storageAccountId)).append("\n");
    sb.append("    targetAzureNetworkId: ").append(toIndentedString(targetAzureNetworkId)).append("\n");
    sb.append("    targetAzureSubnetId: ").append(toIndentedString(targetAzureSubnetId)).append("\n");
    sb.append("    targetAzureV1ResourceGroupId: ").append(toIndentedString(targetAzureV1ResourceGroupId)).append("\n");
    sb.append("    targetAzureV2ResourceGroupId: ").append(toIndentedString(targetAzureV2ResourceGroupId)).append("\n");
    sb.append("    targetAzureVmName: ").append(toIndentedString(targetAzureVmName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InMageAzureV2EnableProtectionInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InMageAzureV2EnableProtectionInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InMageAzureV2EnableProtectionInput is not found in the empty JSON string", InMageAzureV2EnableProtectionInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InMageAzureV2EnableProtectionInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InMageAzureV2EnableProtectionInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InMageAzureV2EnableProtectionInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InMageAzureV2EnableProtectionInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InMageAzureV2EnableProtectionInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InMageAzureV2EnableProtectionInput.class));

       return (TypeAdapter<T>) new TypeAdapter<InMageAzureV2EnableProtectionInput>() {
           @Override
           public void write(JsonWriter out, InMageAzureV2EnableProtectionInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InMageAzureV2EnableProtectionInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InMageAzureV2EnableProtectionInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InMageAzureV2EnableProtectionInput
   * @throws IOException if the JSON string is invalid with respect to InMageAzureV2EnableProtectionInput
   */
  public static InMageAzureV2EnableProtectionInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InMageAzureV2EnableProtectionInput.class);
  }

  /**
   * Convert an instance of InMageAzureV2EnableProtectionInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

