/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Failover details for a replication protected item.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:43.351731-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FailoverReplicationProtectedItemDetails {
  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendlyName";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NETWORK_CONNECTION_STATUS = "networkConnectionStatus";
  @SerializedName(SERIALIZED_NAME_NETWORK_CONNECTION_STATUS)
  private String networkConnectionStatus;

  public static final String SERIALIZED_NAME_NETWORK_FRIENDLY_NAME = "networkFriendlyName";
  @SerializedName(SERIALIZED_NAME_NETWORK_FRIENDLY_NAME)
  private String networkFriendlyName;

  public static final String SERIALIZED_NAME_RECOVERY_POINT_ID = "recoveryPointId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_ID)
  private String recoveryPointId;

  public static final String SERIALIZED_NAME_RECOVERY_POINT_TIME = "recoveryPointTime";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_TIME)
  private OffsetDateTime recoveryPointTime;

  public static final String SERIALIZED_NAME_SUBNET = "subnet";
  @SerializedName(SERIALIZED_NAME_SUBNET)
  private String subnet;

  public static final String SERIALIZED_NAME_TEST_VM_FRIENDLY_NAME = "testVmFriendlyName";
  @SerializedName(SERIALIZED_NAME_TEST_VM_FRIENDLY_NAME)
  private String testVmFriendlyName;

  public static final String SERIALIZED_NAME_TEST_VM_NAME = "testVmName";
  @SerializedName(SERIALIZED_NAME_TEST_VM_NAME)
  private String testVmName;

  public FailoverReplicationProtectedItemDetails() {
  }

  public FailoverReplicationProtectedItemDetails friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The friendly name.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public FailoverReplicationProtectedItemDetails name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public FailoverReplicationProtectedItemDetails networkConnectionStatus(String networkConnectionStatus) {
    this.networkConnectionStatus = networkConnectionStatus;
    return this;
  }

  /**
   * The network connection status.
   * @return networkConnectionStatus
   */
  @javax.annotation.Nullable
  public String getNetworkConnectionStatus() {
    return networkConnectionStatus;
  }

  public void setNetworkConnectionStatus(String networkConnectionStatus) {
    this.networkConnectionStatus = networkConnectionStatus;
  }


  public FailoverReplicationProtectedItemDetails networkFriendlyName(String networkFriendlyName) {
    this.networkFriendlyName = networkFriendlyName;
    return this;
  }

  /**
   * The network friendly name.
   * @return networkFriendlyName
   */
  @javax.annotation.Nullable
  public String getNetworkFriendlyName() {
    return networkFriendlyName;
  }

  public void setNetworkFriendlyName(String networkFriendlyName) {
    this.networkFriendlyName = networkFriendlyName;
  }


  public FailoverReplicationProtectedItemDetails recoveryPointId(String recoveryPointId) {
    this.recoveryPointId = recoveryPointId;
    return this;
  }

  /**
   * The recovery point Id.
   * @return recoveryPointId
   */
  @javax.annotation.Nullable
  public String getRecoveryPointId() {
    return recoveryPointId;
  }

  public void setRecoveryPointId(String recoveryPointId) {
    this.recoveryPointId = recoveryPointId;
  }


  public FailoverReplicationProtectedItemDetails recoveryPointTime(OffsetDateTime recoveryPointTime) {
    this.recoveryPointTime = recoveryPointTime;
    return this;
  }

  /**
   * The recovery point time.
   * @return recoveryPointTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getRecoveryPointTime() {
    return recoveryPointTime;
  }

  public void setRecoveryPointTime(OffsetDateTime recoveryPointTime) {
    this.recoveryPointTime = recoveryPointTime;
  }


  public FailoverReplicationProtectedItemDetails subnet(String subnet) {
    this.subnet = subnet;
    return this;
  }

  /**
   * The network subnet.
   * @return subnet
   */
  @javax.annotation.Nullable
  public String getSubnet() {
    return subnet;
  }

  public void setSubnet(String subnet) {
    this.subnet = subnet;
  }


  public FailoverReplicationProtectedItemDetails testVmFriendlyName(String testVmFriendlyName) {
    this.testVmFriendlyName = testVmFriendlyName;
    return this;
  }

  /**
   * The test Vm friendly name.
   * @return testVmFriendlyName
   */
  @javax.annotation.Nullable
  public String getTestVmFriendlyName() {
    return testVmFriendlyName;
  }

  public void setTestVmFriendlyName(String testVmFriendlyName) {
    this.testVmFriendlyName = testVmFriendlyName;
  }


  public FailoverReplicationProtectedItemDetails testVmName(String testVmName) {
    this.testVmName = testVmName;
    return this;
  }

  /**
   * The test Vm name.
   * @return testVmName
   */
  @javax.annotation.Nullable
  public String getTestVmName() {
    return testVmName;
  }

  public void setTestVmName(String testVmName) {
    this.testVmName = testVmName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FailoverReplicationProtectedItemDetails failoverReplicationProtectedItemDetails = (FailoverReplicationProtectedItemDetails) o;
    return Objects.equals(this.friendlyName, failoverReplicationProtectedItemDetails.friendlyName) &&
        Objects.equals(this.name, failoverReplicationProtectedItemDetails.name) &&
        Objects.equals(this.networkConnectionStatus, failoverReplicationProtectedItemDetails.networkConnectionStatus) &&
        Objects.equals(this.networkFriendlyName, failoverReplicationProtectedItemDetails.networkFriendlyName) &&
        Objects.equals(this.recoveryPointId, failoverReplicationProtectedItemDetails.recoveryPointId) &&
        Objects.equals(this.recoveryPointTime, failoverReplicationProtectedItemDetails.recoveryPointTime) &&
        Objects.equals(this.subnet, failoverReplicationProtectedItemDetails.subnet) &&
        Objects.equals(this.testVmFriendlyName, failoverReplicationProtectedItemDetails.testVmFriendlyName) &&
        Objects.equals(this.testVmName, failoverReplicationProtectedItemDetails.testVmName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(friendlyName, name, networkConnectionStatus, networkFriendlyName, recoveryPointId, recoveryPointTime, subnet, testVmFriendlyName, testVmName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FailoverReplicationProtectedItemDetails {\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    networkConnectionStatus: ").append(toIndentedString(networkConnectionStatus)).append("\n");
    sb.append("    networkFriendlyName: ").append(toIndentedString(networkFriendlyName)).append("\n");
    sb.append("    recoveryPointId: ").append(toIndentedString(recoveryPointId)).append("\n");
    sb.append("    recoveryPointTime: ").append(toIndentedString(recoveryPointTime)).append("\n");
    sb.append("    subnet: ").append(toIndentedString(subnet)).append("\n");
    sb.append("    testVmFriendlyName: ").append(toIndentedString(testVmFriendlyName)).append("\n");
    sb.append("    testVmName: ").append(toIndentedString(testVmName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("friendlyName");
    openapiFields.add("name");
    openapiFields.add("networkConnectionStatus");
    openapiFields.add("networkFriendlyName");
    openapiFields.add("recoveryPointId");
    openapiFields.add("recoveryPointTime");
    openapiFields.add("subnet");
    openapiFields.add("testVmFriendlyName");
    openapiFields.add("testVmName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FailoverReplicationProtectedItemDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FailoverReplicationProtectedItemDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FailoverReplicationProtectedItemDetails is not found in the empty JSON string", FailoverReplicationProtectedItemDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FailoverReplicationProtectedItemDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FailoverReplicationProtectedItemDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("friendlyName") != null && !jsonObj.get("friendlyName").isJsonNull()) && !jsonObj.get("friendlyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendlyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendlyName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("networkConnectionStatus") != null && !jsonObj.get("networkConnectionStatus").isJsonNull()) && !jsonObj.get("networkConnectionStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `networkConnectionStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("networkConnectionStatus").toString()));
      }
      if ((jsonObj.get("networkFriendlyName") != null && !jsonObj.get("networkFriendlyName").isJsonNull()) && !jsonObj.get("networkFriendlyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `networkFriendlyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("networkFriendlyName").toString()));
      }
      if ((jsonObj.get("recoveryPointId") != null && !jsonObj.get("recoveryPointId").isJsonNull()) && !jsonObj.get("recoveryPointId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryPointId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryPointId").toString()));
      }
      if ((jsonObj.get("subnet") != null && !jsonObj.get("subnet").isJsonNull()) && !jsonObj.get("subnet").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subnet` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subnet").toString()));
      }
      if ((jsonObj.get("testVmFriendlyName") != null && !jsonObj.get("testVmFriendlyName").isJsonNull()) && !jsonObj.get("testVmFriendlyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `testVmFriendlyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("testVmFriendlyName").toString()));
      }
      if ((jsonObj.get("testVmName") != null && !jsonObj.get("testVmName").isJsonNull()) && !jsonObj.get("testVmName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `testVmName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("testVmName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FailoverReplicationProtectedItemDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FailoverReplicationProtectedItemDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FailoverReplicationProtectedItemDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FailoverReplicationProtectedItemDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<FailoverReplicationProtectedItemDetails>() {
           @Override
           public void write(JsonWriter out, FailoverReplicationProtectedItemDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FailoverReplicationProtectedItemDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FailoverReplicationProtectedItemDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FailoverReplicationProtectedItemDetails
   * @throws IOException if the JSON string is invalid with respect to FailoverReplicationProtectedItemDetails
   */
  public static FailoverReplicationProtectedItemDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FailoverReplicationProtectedItemDetails.class);
  }

  /**
   * Convert an instance of FailoverReplicationProtectedItemDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

