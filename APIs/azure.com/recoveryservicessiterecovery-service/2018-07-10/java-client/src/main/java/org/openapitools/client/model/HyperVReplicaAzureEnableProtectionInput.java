/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EnableProtectionProviderSpecificInput;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Azure specific enable protection input.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:43.351731-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class HyperVReplicaAzureEnableProtectionInput extends EnableProtectionProviderSpecificInput {
  public static final String SERIALIZED_NAME_DISKS_TO_INCLUDE = "disksToInclude";
  @SerializedName(SERIALIZED_NAME_DISKS_TO_INCLUDE)
  private List<String> disksToInclude = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLE_RDP_ON_TARGET_OPTION = "enableRdpOnTargetOption";
  @SerializedName(SERIALIZED_NAME_ENABLE_RDP_ON_TARGET_OPTION)
  private String enableRdpOnTargetOption;

  public static final String SERIALIZED_NAME_HV_HOST_VM_ID = "hvHostVmId";
  @SerializedName(SERIALIZED_NAME_HV_HOST_VM_ID)
  private String hvHostVmId;

  public static final String SERIALIZED_NAME_LOG_STORAGE_ACCOUNT_ID = "logStorageAccountId";
  @SerializedName(SERIALIZED_NAME_LOG_STORAGE_ACCOUNT_ID)
  private String logStorageAccountId;

  public static final String SERIALIZED_NAME_OS_TYPE = "osType";
  @SerializedName(SERIALIZED_NAME_OS_TYPE)
  private String osType;

  public static final String SERIALIZED_NAME_TARGET_AZURE_NETWORK_ID = "targetAzureNetworkId";
  @SerializedName(SERIALIZED_NAME_TARGET_AZURE_NETWORK_ID)
  private String targetAzureNetworkId;

  public static final String SERIALIZED_NAME_TARGET_AZURE_SUBNET_ID = "targetAzureSubnetId";
  @SerializedName(SERIALIZED_NAME_TARGET_AZURE_SUBNET_ID)
  private String targetAzureSubnetId;

  public static final String SERIALIZED_NAME_TARGET_AZURE_V1_RESOURCE_GROUP_ID = "targetAzureV1ResourceGroupId";
  @SerializedName(SERIALIZED_NAME_TARGET_AZURE_V1_RESOURCE_GROUP_ID)
  private String targetAzureV1ResourceGroupId;

  public static final String SERIALIZED_NAME_TARGET_AZURE_V2_RESOURCE_GROUP_ID = "targetAzureV2ResourceGroupId";
  @SerializedName(SERIALIZED_NAME_TARGET_AZURE_V2_RESOURCE_GROUP_ID)
  private String targetAzureV2ResourceGroupId;

  public static final String SERIALIZED_NAME_TARGET_AZURE_VM_NAME = "targetAzureVmName";
  @SerializedName(SERIALIZED_NAME_TARGET_AZURE_VM_NAME)
  private String targetAzureVmName;

  public static final String SERIALIZED_NAME_TARGET_STORAGE_ACCOUNT_ID = "targetStorageAccountId";
  @SerializedName(SERIALIZED_NAME_TARGET_STORAGE_ACCOUNT_ID)
  private String targetStorageAccountId;

  public static final String SERIALIZED_NAME_USE_MANAGED_DISKS = "useManagedDisks";
  @SerializedName(SERIALIZED_NAME_USE_MANAGED_DISKS)
  private String useManagedDisks;

  public static final String SERIALIZED_NAME_VHD_ID = "vhdId";
  @SerializedName(SERIALIZED_NAME_VHD_ID)
  private String vhdId;

  public static final String SERIALIZED_NAME_VM_NAME = "vmName";
  @SerializedName(SERIALIZED_NAME_VM_NAME)
  private String vmName;

  public HyperVReplicaAzureEnableProtectionInput() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public HyperVReplicaAzureEnableProtectionInput disksToInclude(List<String> disksToInclude) {
    this.disksToInclude = disksToInclude;
    return this;
  }

  public HyperVReplicaAzureEnableProtectionInput addDisksToIncludeItem(String disksToIncludeItem) {
    if (this.disksToInclude == null) {
      this.disksToInclude = new ArrayList<>();
    }
    this.disksToInclude.add(disksToIncludeItem);
    return this;
  }

  /**
   * The list of VHD IDs of disks to be protected.
   * @return disksToInclude
   */
  @javax.annotation.Nullable
  public List<String> getDisksToInclude() {
    return disksToInclude;
  }

  public void setDisksToInclude(List<String> disksToInclude) {
    this.disksToInclude = disksToInclude;
  }


  public HyperVReplicaAzureEnableProtectionInput enableRdpOnTargetOption(String enableRdpOnTargetOption) {
    this.enableRdpOnTargetOption = enableRdpOnTargetOption;
    return this;
  }

  /**
   * The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
   * @return enableRdpOnTargetOption
   */
  @javax.annotation.Nullable
  public String getEnableRdpOnTargetOption() {
    return enableRdpOnTargetOption;
  }

  public void setEnableRdpOnTargetOption(String enableRdpOnTargetOption) {
    this.enableRdpOnTargetOption = enableRdpOnTargetOption;
  }


  public HyperVReplicaAzureEnableProtectionInput hvHostVmId(String hvHostVmId) {
    this.hvHostVmId = hvHostVmId;
    return this;
  }

  /**
   * The Hyper-V host Vm Id.
   * @return hvHostVmId
   */
  @javax.annotation.Nullable
  public String getHvHostVmId() {
    return hvHostVmId;
  }

  public void setHvHostVmId(String hvHostVmId) {
    this.hvHostVmId = hvHostVmId;
  }


  public HyperVReplicaAzureEnableProtectionInput logStorageAccountId(String logStorageAccountId) {
    this.logStorageAccountId = logStorageAccountId;
    return this;
  }

  /**
   * The storage account to be used for logging during replication.
   * @return logStorageAccountId
   */
  @javax.annotation.Nullable
  public String getLogStorageAccountId() {
    return logStorageAccountId;
  }

  public void setLogStorageAccountId(String logStorageAccountId) {
    this.logStorageAccountId = logStorageAccountId;
  }


  public HyperVReplicaAzureEnableProtectionInput osType(String osType) {
    this.osType = osType;
    return this;
  }

  /**
   * The OS type associated with vm.
   * @return osType
   */
  @javax.annotation.Nullable
  public String getOsType() {
    return osType;
  }

  public void setOsType(String osType) {
    this.osType = osType;
  }


  public HyperVReplicaAzureEnableProtectionInput targetAzureNetworkId(String targetAzureNetworkId) {
    this.targetAzureNetworkId = targetAzureNetworkId;
    return this;
  }

  /**
   * The selected target Azure network Id.
   * @return targetAzureNetworkId
   */
  @javax.annotation.Nullable
  public String getTargetAzureNetworkId() {
    return targetAzureNetworkId;
  }

  public void setTargetAzureNetworkId(String targetAzureNetworkId) {
    this.targetAzureNetworkId = targetAzureNetworkId;
  }


  public HyperVReplicaAzureEnableProtectionInput targetAzureSubnetId(String targetAzureSubnetId) {
    this.targetAzureSubnetId = targetAzureSubnetId;
    return this;
  }

  /**
   * The selected target Azure subnet Id.
   * @return targetAzureSubnetId
   */
  @javax.annotation.Nullable
  public String getTargetAzureSubnetId() {
    return targetAzureSubnetId;
  }

  public void setTargetAzureSubnetId(String targetAzureSubnetId) {
    this.targetAzureSubnetId = targetAzureSubnetId;
  }


  public HyperVReplicaAzureEnableProtectionInput targetAzureV1ResourceGroupId(String targetAzureV1ResourceGroupId) {
    this.targetAzureV1ResourceGroupId = targetAzureV1ResourceGroupId;
    return this;
  }

  /**
   * The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
   * @return targetAzureV1ResourceGroupId
   */
  @javax.annotation.Nullable
  public String getTargetAzureV1ResourceGroupId() {
    return targetAzureV1ResourceGroupId;
  }

  public void setTargetAzureV1ResourceGroupId(String targetAzureV1ResourceGroupId) {
    this.targetAzureV1ResourceGroupId = targetAzureV1ResourceGroupId;
  }


  public HyperVReplicaAzureEnableProtectionInput targetAzureV2ResourceGroupId(String targetAzureV2ResourceGroupId) {
    this.targetAzureV2ResourceGroupId = targetAzureV2ResourceGroupId;
    return this;
  }

  /**
   * The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
   * @return targetAzureV2ResourceGroupId
   */
  @javax.annotation.Nullable
  public String getTargetAzureV2ResourceGroupId() {
    return targetAzureV2ResourceGroupId;
  }

  public void setTargetAzureV2ResourceGroupId(String targetAzureV2ResourceGroupId) {
    this.targetAzureV2ResourceGroupId = targetAzureV2ResourceGroupId;
  }


  public HyperVReplicaAzureEnableProtectionInput targetAzureVmName(String targetAzureVmName) {
    this.targetAzureVmName = targetAzureVmName;
    return this;
  }

  /**
   * The target azure Vm Name.
   * @return targetAzureVmName
   */
  @javax.annotation.Nullable
  public String getTargetAzureVmName() {
    return targetAzureVmName;
  }

  public void setTargetAzureVmName(String targetAzureVmName) {
    this.targetAzureVmName = targetAzureVmName;
  }


  public HyperVReplicaAzureEnableProtectionInput targetStorageAccountId(String targetStorageAccountId) {
    this.targetStorageAccountId = targetStorageAccountId;
    return this;
  }

  /**
   * The storage account name.
   * @return targetStorageAccountId
   */
  @javax.annotation.Nullable
  public String getTargetStorageAccountId() {
    return targetStorageAccountId;
  }

  public void setTargetStorageAccountId(String targetStorageAccountId) {
    this.targetStorageAccountId = targetStorageAccountId;
  }


  public HyperVReplicaAzureEnableProtectionInput useManagedDisks(String useManagedDisks) {
    this.useManagedDisks = useManagedDisks;
    return this;
  }

  /**
   * A value indicating whether managed disks should be used during failover.
   * @return useManagedDisks
   */
  @javax.annotation.Nullable
  public String getUseManagedDisks() {
    return useManagedDisks;
  }

  public void setUseManagedDisks(String useManagedDisks) {
    this.useManagedDisks = useManagedDisks;
  }


  public HyperVReplicaAzureEnableProtectionInput vhdId(String vhdId) {
    this.vhdId = vhdId;
    return this;
  }

  /**
   * The OS disk VHD id associated with vm.
   * @return vhdId
   */
  @javax.annotation.Nullable
  public String getVhdId() {
    return vhdId;
  }

  public void setVhdId(String vhdId) {
    this.vhdId = vhdId;
  }


  public HyperVReplicaAzureEnableProtectionInput vmName(String vmName) {
    this.vmName = vmName;
    return this;
  }

  /**
   * The Vm Name.
   * @return vmName
   */
  @javax.annotation.Nullable
  public String getVmName() {
    return vmName;
  }

  public void setVmName(String vmName) {
    this.vmName = vmName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HyperVReplicaAzureEnableProtectionInput hyperVReplicaAzureEnableProtectionInput = (HyperVReplicaAzureEnableProtectionInput) o;
    return Objects.equals(this.disksToInclude, hyperVReplicaAzureEnableProtectionInput.disksToInclude) &&
        Objects.equals(this.enableRdpOnTargetOption, hyperVReplicaAzureEnableProtectionInput.enableRdpOnTargetOption) &&
        Objects.equals(this.hvHostVmId, hyperVReplicaAzureEnableProtectionInput.hvHostVmId) &&
        Objects.equals(this.logStorageAccountId, hyperVReplicaAzureEnableProtectionInput.logStorageAccountId) &&
        Objects.equals(this.osType, hyperVReplicaAzureEnableProtectionInput.osType) &&
        Objects.equals(this.targetAzureNetworkId, hyperVReplicaAzureEnableProtectionInput.targetAzureNetworkId) &&
        Objects.equals(this.targetAzureSubnetId, hyperVReplicaAzureEnableProtectionInput.targetAzureSubnetId) &&
        Objects.equals(this.targetAzureV1ResourceGroupId, hyperVReplicaAzureEnableProtectionInput.targetAzureV1ResourceGroupId) &&
        Objects.equals(this.targetAzureV2ResourceGroupId, hyperVReplicaAzureEnableProtectionInput.targetAzureV2ResourceGroupId) &&
        Objects.equals(this.targetAzureVmName, hyperVReplicaAzureEnableProtectionInput.targetAzureVmName) &&
        Objects.equals(this.targetStorageAccountId, hyperVReplicaAzureEnableProtectionInput.targetStorageAccountId) &&
        Objects.equals(this.useManagedDisks, hyperVReplicaAzureEnableProtectionInput.useManagedDisks) &&
        Objects.equals(this.vhdId, hyperVReplicaAzureEnableProtectionInput.vhdId) &&
        Objects.equals(this.vmName, hyperVReplicaAzureEnableProtectionInput.vmName) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disksToInclude, enableRdpOnTargetOption, hvHostVmId, logStorageAccountId, osType, targetAzureNetworkId, targetAzureSubnetId, targetAzureV1ResourceGroupId, targetAzureV2ResourceGroupId, targetAzureVmName, targetStorageAccountId, useManagedDisks, vhdId, vmName, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HyperVReplicaAzureEnableProtectionInput {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    disksToInclude: ").append(toIndentedString(disksToInclude)).append("\n");
    sb.append("    enableRdpOnTargetOption: ").append(toIndentedString(enableRdpOnTargetOption)).append("\n");
    sb.append("    hvHostVmId: ").append(toIndentedString(hvHostVmId)).append("\n");
    sb.append("    logStorageAccountId: ").append(toIndentedString(logStorageAccountId)).append("\n");
    sb.append("    osType: ").append(toIndentedString(osType)).append("\n");
    sb.append("    targetAzureNetworkId: ").append(toIndentedString(targetAzureNetworkId)).append("\n");
    sb.append("    targetAzureSubnetId: ").append(toIndentedString(targetAzureSubnetId)).append("\n");
    sb.append("    targetAzureV1ResourceGroupId: ").append(toIndentedString(targetAzureV1ResourceGroupId)).append("\n");
    sb.append("    targetAzureV2ResourceGroupId: ").append(toIndentedString(targetAzureV2ResourceGroupId)).append("\n");
    sb.append("    targetAzureVmName: ").append(toIndentedString(targetAzureVmName)).append("\n");
    sb.append("    targetStorageAccountId: ").append(toIndentedString(targetStorageAccountId)).append("\n");
    sb.append("    useManagedDisks: ").append(toIndentedString(useManagedDisks)).append("\n");
    sb.append("    vhdId: ").append(toIndentedString(vhdId)).append("\n");
    sb.append("    vmName: ").append(toIndentedString(vmName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to HyperVReplicaAzureEnableProtectionInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!HyperVReplicaAzureEnableProtectionInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in HyperVReplicaAzureEnableProtectionInput is not found in the empty JSON string", HyperVReplicaAzureEnableProtectionInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!HyperVReplicaAzureEnableProtectionInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `HyperVReplicaAzureEnableProtectionInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HyperVReplicaAzureEnableProtectionInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HyperVReplicaAzureEnableProtectionInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HyperVReplicaAzureEnableProtectionInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HyperVReplicaAzureEnableProtectionInput.class));

       return (TypeAdapter<T>) new TypeAdapter<HyperVReplicaAzureEnableProtectionInput>() {
           @Override
           public void write(JsonWriter out, HyperVReplicaAzureEnableProtectionInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public HyperVReplicaAzureEnableProtectionInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of HyperVReplicaAzureEnableProtectionInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of HyperVReplicaAzureEnableProtectionInput
   * @throws IOException if the JSON string is invalid with respect to HyperVReplicaAzureEnableProtectionInput
   */
  public static HyperVReplicaAzureEnableProtectionInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HyperVReplicaAzureEnableProtectionInput.class);
  }

  /**
   * Convert an instance of HyperVReplicaAzureEnableProtectionInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

