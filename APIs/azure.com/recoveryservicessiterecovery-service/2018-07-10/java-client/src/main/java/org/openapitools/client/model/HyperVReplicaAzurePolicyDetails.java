/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.PolicyProviderSpecificDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Hyper-V Replica Azure specific protection profile details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:43.351731-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class HyperVReplicaAzurePolicyDetails extends PolicyProviderSpecificDetails {
  public static final String SERIALIZED_NAME_ACTIVE_STORAGE_ACCOUNT_ID = "activeStorageAccountId";
  @SerializedName(SERIALIZED_NAME_ACTIVE_STORAGE_ACCOUNT_ID)
  private String activeStorageAccountId;

  public static final String SERIALIZED_NAME_APPLICATION_CONSISTENT_SNAPSHOT_FREQUENCY_IN_HOURS = "applicationConsistentSnapshotFrequencyInHours";
  @SerializedName(SERIALIZED_NAME_APPLICATION_CONSISTENT_SNAPSHOT_FREQUENCY_IN_HOURS)
  private Integer applicationConsistentSnapshotFrequencyInHours;

  public static final String SERIALIZED_NAME_ENCRYPTION = "encryption";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION)
  private String encryption;

  public static final String SERIALIZED_NAME_ONLINE_REPLICATION_START_TIME = "onlineReplicationStartTime";
  @SerializedName(SERIALIZED_NAME_ONLINE_REPLICATION_START_TIME)
  private String onlineReplicationStartTime;

  public static final String SERIALIZED_NAME_RECOVERY_POINT_HISTORY_DURATION_IN_HOURS = "recoveryPointHistoryDurationInHours";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_HISTORY_DURATION_IN_HOURS)
  private Integer recoveryPointHistoryDurationInHours;

  public static final String SERIALIZED_NAME_REPLICATION_INTERVAL = "replicationInterval";
  @SerializedName(SERIALIZED_NAME_REPLICATION_INTERVAL)
  private Integer replicationInterval;

  public HyperVReplicaAzurePolicyDetails() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public HyperVReplicaAzurePolicyDetails(
     String instanceType
  ) {
    this();
    this.instanceType = instanceType;
  }

  public HyperVReplicaAzurePolicyDetails activeStorageAccountId(String activeStorageAccountId) {
    this.activeStorageAccountId = activeStorageAccountId;
    return this;
  }

  /**
   * The active storage account Id.
   * @return activeStorageAccountId
   */
  @javax.annotation.Nullable
  public String getActiveStorageAccountId() {
    return activeStorageAccountId;
  }

  public void setActiveStorageAccountId(String activeStorageAccountId) {
    this.activeStorageAccountId = activeStorageAccountId;
  }


  public HyperVReplicaAzurePolicyDetails applicationConsistentSnapshotFrequencyInHours(Integer applicationConsistentSnapshotFrequencyInHours) {
    this.applicationConsistentSnapshotFrequencyInHours = applicationConsistentSnapshotFrequencyInHours;
    return this;
  }

  /**
   * The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
   * @return applicationConsistentSnapshotFrequencyInHours
   */
  @javax.annotation.Nullable
  public Integer getApplicationConsistentSnapshotFrequencyInHours() {
    return applicationConsistentSnapshotFrequencyInHours;
  }

  public void setApplicationConsistentSnapshotFrequencyInHours(Integer applicationConsistentSnapshotFrequencyInHours) {
    this.applicationConsistentSnapshotFrequencyInHours = applicationConsistentSnapshotFrequencyInHours;
  }


  public HyperVReplicaAzurePolicyDetails encryption(String encryption) {
    this.encryption = encryption;
    return this;
  }

  /**
   * A value indicating whether encryption is enabled for virtual machines in this cloud.
   * @return encryption
   */
  @javax.annotation.Nullable
  public String getEncryption() {
    return encryption;
  }

  public void setEncryption(String encryption) {
    this.encryption = encryption;
  }


  public HyperVReplicaAzurePolicyDetails onlineReplicationStartTime(String onlineReplicationStartTime) {
    this.onlineReplicationStartTime = onlineReplicationStartTime;
    return this;
  }

  /**
   * The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
   * @return onlineReplicationStartTime
   */
  @javax.annotation.Nullable
  public String getOnlineReplicationStartTime() {
    return onlineReplicationStartTime;
  }

  public void setOnlineReplicationStartTime(String onlineReplicationStartTime) {
    this.onlineReplicationStartTime = onlineReplicationStartTime;
  }


  public HyperVReplicaAzurePolicyDetails recoveryPointHistoryDurationInHours(Integer recoveryPointHistoryDurationInHours) {
    this.recoveryPointHistoryDurationInHours = recoveryPointHistoryDurationInHours;
    return this;
  }

  /**
   * The duration (in hours) to which point the recovery history needs to be maintained.
   * @return recoveryPointHistoryDurationInHours
   */
  @javax.annotation.Nullable
  public Integer getRecoveryPointHistoryDurationInHours() {
    return recoveryPointHistoryDurationInHours;
  }

  public void setRecoveryPointHistoryDurationInHours(Integer recoveryPointHistoryDurationInHours) {
    this.recoveryPointHistoryDurationInHours = recoveryPointHistoryDurationInHours;
  }


  public HyperVReplicaAzurePolicyDetails replicationInterval(Integer replicationInterval) {
    this.replicationInterval = replicationInterval;
    return this;
  }

  /**
   * The replication interval.
   * @return replicationInterval
   */
  @javax.annotation.Nullable
  public Integer getReplicationInterval() {
    return replicationInterval;
  }

  public void setReplicationInterval(Integer replicationInterval) {
    this.replicationInterval = replicationInterval;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HyperVReplicaAzurePolicyDetails hyperVReplicaAzurePolicyDetails = (HyperVReplicaAzurePolicyDetails) o;
    return Objects.equals(this.activeStorageAccountId, hyperVReplicaAzurePolicyDetails.activeStorageAccountId) &&
        Objects.equals(this.applicationConsistentSnapshotFrequencyInHours, hyperVReplicaAzurePolicyDetails.applicationConsistentSnapshotFrequencyInHours) &&
        Objects.equals(this.encryption, hyperVReplicaAzurePolicyDetails.encryption) &&
        Objects.equals(this.onlineReplicationStartTime, hyperVReplicaAzurePolicyDetails.onlineReplicationStartTime) &&
        Objects.equals(this.recoveryPointHistoryDurationInHours, hyperVReplicaAzurePolicyDetails.recoveryPointHistoryDurationInHours) &&
        Objects.equals(this.replicationInterval, hyperVReplicaAzurePolicyDetails.replicationInterval) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeStorageAccountId, applicationConsistentSnapshotFrequencyInHours, encryption, onlineReplicationStartTime, recoveryPointHistoryDurationInHours, replicationInterval, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HyperVReplicaAzurePolicyDetails {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    activeStorageAccountId: ").append(toIndentedString(activeStorageAccountId)).append("\n");
    sb.append("    applicationConsistentSnapshotFrequencyInHours: ").append(toIndentedString(applicationConsistentSnapshotFrequencyInHours)).append("\n");
    sb.append("    encryption: ").append(toIndentedString(encryption)).append("\n");
    sb.append("    onlineReplicationStartTime: ").append(toIndentedString(onlineReplicationStartTime)).append("\n");
    sb.append("    recoveryPointHistoryDurationInHours: ").append(toIndentedString(recoveryPointHistoryDurationInHours)).append("\n");
    sb.append("    replicationInterval: ").append(toIndentedString(replicationInterval)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to HyperVReplicaAzurePolicyDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!HyperVReplicaAzurePolicyDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in HyperVReplicaAzurePolicyDetails is not found in the empty JSON string", HyperVReplicaAzurePolicyDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!HyperVReplicaAzurePolicyDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `HyperVReplicaAzurePolicyDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HyperVReplicaAzurePolicyDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HyperVReplicaAzurePolicyDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HyperVReplicaAzurePolicyDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HyperVReplicaAzurePolicyDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<HyperVReplicaAzurePolicyDetails>() {
           @Override
           public void write(JsonWriter out, HyperVReplicaAzurePolicyDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public HyperVReplicaAzurePolicyDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of HyperVReplicaAzurePolicyDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of HyperVReplicaAzurePolicyDetails
   * @throws IOException if the JSON string is invalid with respect to HyperVReplicaAzurePolicyDetails
   */
  public static HyperVReplicaAzurePolicyDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HyperVReplicaAzurePolicyDetails.class);
  }

  /**
   * Convert an instance of HyperVReplicaAzurePolicyDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

