/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.EventProviderSpecificDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Model class for event details of a VMwareAzureV2 event.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:43.351731-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InMageAzureV2EventDetails extends EventProviderSpecificDetails {
  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_COMPONENT = "component";
  @SerializedName(SERIALIZED_NAME_COMPONENT)
  private String component;

  public static final String SERIALIZED_NAME_CORRECTIVE_ACTION = "correctiveAction";
  @SerializedName(SERIALIZED_NAME_CORRECTIVE_ACTION)
  private String correctiveAction;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private String details;

  public static final String SERIALIZED_NAME_EVENT_TYPE = "eventType";
  @SerializedName(SERIALIZED_NAME_EVENT_TYPE)
  private String eventType;

  public static final String SERIALIZED_NAME_SITE_NAME = "siteName";
  @SerializedName(SERIALIZED_NAME_SITE_NAME)
  private String siteName;

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private String summary;

  public InMageAzureV2EventDetails() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public InMageAzureV2EventDetails(
     String instanceType
  ) {
    this();
    this.instanceType = instanceType;
  }

  public InMageAzureV2EventDetails category(String category) {
    this.category = category;
    return this;
  }

  /**
   * InMage Event Category.
   * @return category
   */
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }


  public InMageAzureV2EventDetails component(String component) {
    this.component = component;
    return this;
  }

  /**
   * InMage Event Component.
   * @return component
   */
  @javax.annotation.Nullable
  public String getComponent() {
    return component;
  }

  public void setComponent(String component) {
    this.component = component;
  }


  public InMageAzureV2EventDetails correctiveAction(String correctiveAction) {
    this.correctiveAction = correctiveAction;
    return this;
  }

  /**
   * Corrective Action string for the event.
   * @return correctiveAction
   */
  @javax.annotation.Nullable
  public String getCorrectiveAction() {
    return correctiveAction;
  }

  public void setCorrectiveAction(String correctiveAction) {
    this.correctiveAction = correctiveAction;
  }


  public InMageAzureV2EventDetails details(String details) {
    this.details = details;
    return this;
  }

  /**
   * InMage Event Details.
   * @return details
   */
  @javax.annotation.Nullable
  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }


  public InMageAzureV2EventDetails eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }

  /**
   * InMage Event type. Takes one of the values of {InMageDataContract.InMageMonitoringEventType}.
   * @return eventType
   */
  @javax.annotation.Nullable
  public String getEventType() {
    return eventType;
  }

  public void setEventType(String eventType) {
    this.eventType = eventType;
  }


  public InMageAzureV2EventDetails siteName(String siteName) {
    this.siteName = siteName;
    return this;
  }

  /**
   * VMware Site name.
   * @return siteName
   */
  @javax.annotation.Nullable
  public String getSiteName() {
    return siteName;
  }

  public void setSiteName(String siteName) {
    this.siteName = siteName;
  }


  public InMageAzureV2EventDetails summary(String summary) {
    this.summary = summary;
    return this;
  }

  /**
   * InMage Event Summary.
   * @return summary
   */
  @javax.annotation.Nullable
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InMageAzureV2EventDetails inMageAzureV2EventDetails = (InMageAzureV2EventDetails) o;
    return Objects.equals(this.category, inMageAzureV2EventDetails.category) &&
        Objects.equals(this.component, inMageAzureV2EventDetails.component) &&
        Objects.equals(this.correctiveAction, inMageAzureV2EventDetails.correctiveAction) &&
        Objects.equals(this.details, inMageAzureV2EventDetails.details) &&
        Objects.equals(this.eventType, inMageAzureV2EventDetails.eventType) &&
        Objects.equals(this.siteName, inMageAzureV2EventDetails.siteName) &&
        Objects.equals(this.summary, inMageAzureV2EventDetails.summary) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, component, correctiveAction, details, eventType, siteName, summary, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InMageAzureV2EventDetails {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    correctiveAction: ").append(toIndentedString(correctiveAction)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    siteName: ").append(toIndentedString(siteName)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InMageAzureV2EventDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InMageAzureV2EventDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InMageAzureV2EventDetails is not found in the empty JSON string", InMageAzureV2EventDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InMageAzureV2EventDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InMageAzureV2EventDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InMageAzureV2EventDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InMageAzureV2EventDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InMageAzureV2EventDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InMageAzureV2EventDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<InMageAzureV2EventDetails>() {
           @Override
           public void write(JsonWriter out, InMageAzureV2EventDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InMageAzureV2EventDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InMageAzureV2EventDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InMageAzureV2EventDetails
   * @throws IOException if the JSON string is invalid with respect to InMageAzureV2EventDetails
   */
  public static InMageAzureV2EventDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InMageAzureV2EventDetails.class);
  }

  /**
   * Convert an instance of InMageAzureV2EventDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

