/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.TaskTypeDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This class represents the task details for an automation runbook.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:43.351731-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AutomationRunbookTaskDetails extends TaskTypeDetails {
  public static final String SERIALIZED_NAME_ACCOUNT_NAME = "accountName";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NAME)
  private String accountName;

  public static final String SERIALIZED_NAME_CLOUD_SERVICE_NAME = "cloudServiceName";
  @SerializedName(SERIALIZED_NAME_CLOUD_SERVICE_NAME)
  private String cloudServiceName;

  public static final String SERIALIZED_NAME_IS_PRIMARY_SIDE_SCRIPT = "isPrimarySideScript";
  @SerializedName(SERIALIZED_NAME_IS_PRIMARY_SIDE_SCRIPT)
  private Boolean isPrimarySideScript;

  public static final String SERIALIZED_NAME_JOB_ID = "jobId";
  @SerializedName(SERIALIZED_NAME_JOB_ID)
  private String jobId;

  public static final String SERIALIZED_NAME_JOB_OUTPUT = "jobOutput";
  @SerializedName(SERIALIZED_NAME_JOB_OUTPUT)
  private String jobOutput;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RUNBOOK_ID = "runbookId";
  @SerializedName(SERIALIZED_NAME_RUNBOOK_ID)
  private String runbookId;

  public static final String SERIALIZED_NAME_RUNBOOK_NAME = "runbookName";
  @SerializedName(SERIALIZED_NAME_RUNBOOK_NAME)
  private String runbookName;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_ID = "subscriptionId";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_ID)
  private String subscriptionId;

  public AutomationRunbookTaskDetails() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public AutomationRunbookTaskDetails accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

  /**
   * The automation account name of the runbook.
   * @return accountName
   */
  @javax.annotation.Nullable
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }


  public AutomationRunbookTaskDetails cloudServiceName(String cloudServiceName) {
    this.cloudServiceName = cloudServiceName;
    return this;
  }

  /**
   * The cloud service of the automation runbook account.
   * @return cloudServiceName
   */
  @javax.annotation.Nullable
  public String getCloudServiceName() {
    return cloudServiceName;
  }

  public void setCloudServiceName(String cloudServiceName) {
    this.cloudServiceName = cloudServiceName;
  }


  public AutomationRunbookTaskDetails isPrimarySideScript(Boolean isPrimarySideScript) {
    this.isPrimarySideScript = isPrimarySideScript;
    return this;
  }

  /**
   * A value indicating whether it is a primary side script or not.
   * @return isPrimarySideScript
   */
  @javax.annotation.Nullable
  public Boolean getIsPrimarySideScript() {
    return isPrimarySideScript;
  }

  public void setIsPrimarySideScript(Boolean isPrimarySideScript) {
    this.isPrimarySideScript = isPrimarySideScript;
  }


  public AutomationRunbookTaskDetails jobId(String jobId) {
    this.jobId = jobId;
    return this;
  }

  /**
   * The job Id of the runbook execution.
   * @return jobId
   */
  @javax.annotation.Nullable
  public String getJobId() {
    return jobId;
  }

  public void setJobId(String jobId) {
    this.jobId = jobId;
  }


  public AutomationRunbookTaskDetails jobOutput(String jobOutput) {
    this.jobOutput = jobOutput;
    return this;
  }

  /**
   * The execution output of the runbook.
   * @return jobOutput
   */
  @javax.annotation.Nullable
  public String getJobOutput() {
    return jobOutput;
  }

  public void setJobOutput(String jobOutput) {
    this.jobOutput = jobOutput;
  }


  public AutomationRunbookTaskDetails name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The recovery plan task name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AutomationRunbookTaskDetails runbookId(String runbookId) {
    this.runbookId = runbookId;
    return this;
  }

  /**
   * The runbook Id.
   * @return runbookId
   */
  @javax.annotation.Nullable
  public String getRunbookId() {
    return runbookId;
  }

  public void setRunbookId(String runbookId) {
    this.runbookId = runbookId;
  }


  public AutomationRunbookTaskDetails runbookName(String runbookName) {
    this.runbookName = runbookName;
    return this;
  }

  /**
   * The runbook name.
   * @return runbookName
   */
  @javax.annotation.Nullable
  public String getRunbookName() {
    return runbookName;
  }

  public void setRunbookName(String runbookName) {
    this.runbookName = runbookName;
  }


  public AutomationRunbookTaskDetails subscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

  /**
   * The subscription Id of the automation runbook account.
   * @return subscriptionId
   */
  @javax.annotation.Nullable
  public String getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationRunbookTaskDetails automationRunbookTaskDetails = (AutomationRunbookTaskDetails) o;
    return Objects.equals(this.accountName, automationRunbookTaskDetails.accountName) &&
        Objects.equals(this.cloudServiceName, automationRunbookTaskDetails.cloudServiceName) &&
        Objects.equals(this.isPrimarySideScript, automationRunbookTaskDetails.isPrimarySideScript) &&
        Objects.equals(this.jobId, automationRunbookTaskDetails.jobId) &&
        Objects.equals(this.jobOutput, automationRunbookTaskDetails.jobOutput) &&
        Objects.equals(this.name, automationRunbookTaskDetails.name) &&
        Objects.equals(this.runbookId, automationRunbookTaskDetails.runbookId) &&
        Objects.equals(this.runbookName, automationRunbookTaskDetails.runbookName) &&
        Objects.equals(this.subscriptionId, automationRunbookTaskDetails.subscriptionId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountName, cloudServiceName, isPrimarySideScript, jobId, jobOutput, name, runbookId, runbookName, subscriptionId, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationRunbookTaskDetails {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    cloudServiceName: ").append(toIndentedString(cloudServiceName)).append("\n");
    sb.append("    isPrimarySideScript: ").append(toIndentedString(isPrimarySideScript)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    jobOutput: ").append(toIndentedString(jobOutput)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    runbookId: ").append(toIndentedString(runbookId)).append("\n");
    sb.append("    runbookName: ").append(toIndentedString(runbookName)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutomationRunbookTaskDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutomationRunbookTaskDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutomationRunbookTaskDetails is not found in the empty JSON string", AutomationRunbookTaskDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutomationRunbookTaskDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutomationRunbookTaskDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutomationRunbookTaskDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutomationRunbookTaskDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutomationRunbookTaskDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutomationRunbookTaskDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AutomationRunbookTaskDetails>() {
           @Override
           public void write(JsonWriter out, AutomationRunbookTaskDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutomationRunbookTaskDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutomationRunbookTaskDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutomationRunbookTaskDetails
   * @throws IOException if the JSON string is invalid with respect to AutomationRunbookTaskDetails
   */
  public static AutomationRunbookTaskDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutomationRunbookTaskDetails.class);
  }

  /**
   * Convert an instance of AutomationRunbookTaskDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

