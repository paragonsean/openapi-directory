/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.HealthError;
import org.openapitools.client.model.InMageAgentDetails;
import org.openapitools.client.model.InMageProtectedDiskDetails;
import org.openapitools.client.model.InitialReplicationDetails;
import org.openapitools.client.model.OSDiskDetails;
import org.openapitools.client.model.ReplicationProviderSpecificSettings;
import org.openapitools.client.model.VMNicDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InMage provider specific settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:14:43.351731-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InMageReplicationDetails extends ReplicationProviderSpecificSettings {
  public static final String SERIALIZED_NAME_ACTIVE_SITE_TYPE = "activeSiteType";
  @SerializedName(SERIALIZED_NAME_ACTIVE_SITE_TYPE)
  private String activeSiteType;

  public static final String SERIALIZED_NAME_AGENT_DETAILS = "agentDetails";
  @SerializedName(SERIALIZED_NAME_AGENT_DETAILS)
  private InMageAgentDetails agentDetails;

  public static final String SERIALIZED_NAME_AZURE_STORAGE_ACCOUNT_ID = "azureStorageAccountId";
  @SerializedName(SERIALIZED_NAME_AZURE_STORAGE_ACCOUNT_ID)
  private String azureStorageAccountId;

  public static final String SERIALIZED_NAME_COMPRESSED_DATA_RATE_IN_M_B = "compressedDataRateInMB";
  @SerializedName(SERIALIZED_NAME_COMPRESSED_DATA_RATE_IN_M_B)
  private Double compressedDataRateInMB;

  public static final String SERIALIZED_NAME_CONSISTENCY_POINTS = "consistencyPoints";
  @SerializedName(SERIALIZED_NAME_CONSISTENCY_POINTS)
  private Map<String, OffsetDateTime> consistencyPoints = new HashMap<>();

  public static final String SERIALIZED_NAME_DATASTORES = "datastores";
  @SerializedName(SERIALIZED_NAME_DATASTORES)
  private List<String> datastores = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISCOVERY_TYPE = "discoveryType";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_TYPE)
  private String discoveryType;

  public static final String SERIALIZED_NAME_DISK_RESIZED = "diskResized";
  @SerializedName(SERIALIZED_NAME_DISK_RESIZED)
  private String diskResized;

  public static final String SERIALIZED_NAME_INFRASTRUCTURE_VM_ID = "infrastructureVmId";
  @SerializedName(SERIALIZED_NAME_INFRASTRUCTURE_VM_ID)
  private String infrastructureVmId;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ipAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_LAST_HEARTBEAT = "lastHeartbeat";
  @SerializedName(SERIALIZED_NAME_LAST_HEARTBEAT)
  private OffsetDateTime lastHeartbeat;

  public static final String SERIALIZED_NAME_LAST_RPO_CALCULATED_TIME = "lastRpoCalculatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_RPO_CALCULATED_TIME)
  private OffsetDateTime lastRpoCalculatedTime;

  public static final String SERIALIZED_NAME_LAST_UPDATE_RECEIVED_TIME = "lastUpdateReceivedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_RECEIVED_TIME)
  private OffsetDateTime lastUpdateReceivedTime;

  public static final String SERIALIZED_NAME_MASTER_TARGET_ID = "masterTargetId";
  @SerializedName(SERIALIZED_NAME_MASTER_TARGET_ID)
  private String masterTargetId;

  public static final String SERIALIZED_NAME_MULTI_VM_GROUP_ID = "multiVmGroupId";
  @SerializedName(SERIALIZED_NAME_MULTI_VM_GROUP_ID)
  private String multiVmGroupId;

  public static final String SERIALIZED_NAME_MULTI_VM_GROUP_NAME = "multiVmGroupName";
  @SerializedName(SERIALIZED_NAME_MULTI_VM_GROUP_NAME)
  private String multiVmGroupName;

  public static final String SERIALIZED_NAME_MULTI_VM_SYNC_STATUS = "multiVmSyncStatus";
  @SerializedName(SERIALIZED_NAME_MULTI_VM_SYNC_STATUS)
  private String multiVmSyncStatus;

  public static final String SERIALIZED_NAME_OS_DETAILS = "osDetails";
  @SerializedName(SERIALIZED_NAME_OS_DETAILS)
  private OSDiskDetails osDetails;

  public static final String SERIALIZED_NAME_OS_VERSION = "osVersion";
  @SerializedName(SERIALIZED_NAME_OS_VERSION)
  private String osVersion;

  public static final String SERIALIZED_NAME_PROCESS_SERVER_ID = "processServerId";
  @SerializedName(SERIALIZED_NAME_PROCESS_SERVER_ID)
  private String processServerId;

  public static final String SERIALIZED_NAME_PROTECTED_DISKS = "protectedDisks";
  @SerializedName(SERIALIZED_NAME_PROTECTED_DISKS)
  private List<InMageProtectedDiskDetails> protectedDisks = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROTECTION_STAGE = "protectionStage";
  @SerializedName(SERIALIZED_NAME_PROTECTION_STAGE)
  private String protectionStage;

  public static final String SERIALIZED_NAME_REBOOT_AFTER_UPDATE_STATUS = "rebootAfterUpdateStatus";
  @SerializedName(SERIALIZED_NAME_REBOOT_AFTER_UPDATE_STATUS)
  private String rebootAfterUpdateStatus;

  public static final String SERIALIZED_NAME_REPLICA_ID = "replicaId";
  @SerializedName(SERIALIZED_NAME_REPLICA_ID)
  private String replicaId;

  public static final String SERIALIZED_NAME_RESYNC_DETAILS = "resyncDetails";
  @SerializedName(SERIALIZED_NAME_RESYNC_DETAILS)
  private InitialReplicationDetails resyncDetails;

  public static final String SERIALIZED_NAME_RETENTION_WINDOW_END = "retentionWindowEnd";
  @SerializedName(SERIALIZED_NAME_RETENTION_WINDOW_END)
  private OffsetDateTime retentionWindowEnd;

  public static final String SERIALIZED_NAME_RETENTION_WINDOW_START = "retentionWindowStart";
  @SerializedName(SERIALIZED_NAME_RETENTION_WINDOW_START)
  private OffsetDateTime retentionWindowStart;

  public static final String SERIALIZED_NAME_RPO_IN_SECONDS = "rpoInSeconds";
  @SerializedName(SERIALIZED_NAME_RPO_IN_SECONDS)
  private Long rpoInSeconds;

  public static final String SERIALIZED_NAME_SOURCE_VM_CPU_COUNT = "sourceVmCpuCount";
  @SerializedName(SERIALIZED_NAME_SOURCE_VM_CPU_COUNT)
  private Integer sourceVmCpuCount;

  public static final String SERIALIZED_NAME_SOURCE_VM_RAM_SIZE_IN_M_B = "sourceVmRamSizeInMB";
  @SerializedName(SERIALIZED_NAME_SOURCE_VM_RAM_SIZE_IN_M_B)
  private Integer sourceVmRamSizeInMB;

  public static final String SERIALIZED_NAME_UNCOMPRESSED_DATA_RATE_IN_M_B = "uncompressedDataRateInMB";
  @SerializedName(SERIALIZED_NAME_UNCOMPRESSED_DATA_RATE_IN_M_B)
  private Double uncompressedDataRateInMB;

  public static final String SERIALIZED_NAME_V_CENTER_INFRASTRUCTURE_ID = "vCenterInfrastructureId";
  @SerializedName(SERIALIZED_NAME_V_CENTER_INFRASTRUCTURE_ID)
  private String vCenterInfrastructureId;

  public static final String SERIALIZED_NAME_VALIDATION_ERRORS = "validationErrors";
  @SerializedName(SERIALIZED_NAME_VALIDATION_ERRORS)
  private List<HealthError> validationErrors = new ArrayList<>();

  public static final String SERIALIZED_NAME_VM_ID = "vmId";
  @SerializedName(SERIALIZED_NAME_VM_ID)
  private String vmId;

  public static final String SERIALIZED_NAME_VM_NICS = "vmNics";
  @SerializedName(SERIALIZED_NAME_VM_NICS)
  private List<VMNicDetails> vmNics = new ArrayList<>();

  public static final String SERIALIZED_NAME_VM_PROTECTION_STATE = "vmProtectionState";
  @SerializedName(SERIALIZED_NAME_VM_PROTECTION_STATE)
  private String vmProtectionState;

  public static final String SERIALIZED_NAME_VM_PROTECTION_STATE_DESCRIPTION = "vmProtectionStateDescription";
  @SerializedName(SERIALIZED_NAME_VM_PROTECTION_STATE_DESCRIPTION)
  private String vmProtectionStateDescription;

  public InMageReplicationDetails() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public InMageReplicationDetails(
     String instanceType
  ) {
    this();
    this.instanceType = instanceType;
  }

  public InMageReplicationDetails activeSiteType(String activeSiteType) {
    this.activeSiteType = activeSiteType;
    return this;
  }

  /**
   * The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.
   * @return activeSiteType
   */
  @javax.annotation.Nullable
  public String getActiveSiteType() {
    return activeSiteType;
  }

  public void setActiveSiteType(String activeSiteType) {
    this.activeSiteType = activeSiteType;
  }


  public InMageReplicationDetails agentDetails(InMageAgentDetails agentDetails) {
    this.agentDetails = agentDetails;
    return this;
  }

  /**
   * Get agentDetails
   * @return agentDetails
   */
  @javax.annotation.Nullable
  public InMageAgentDetails getAgentDetails() {
    return agentDetails;
  }

  public void setAgentDetails(InMageAgentDetails agentDetails) {
    this.agentDetails = agentDetails;
  }


  public InMageReplicationDetails azureStorageAccountId(String azureStorageAccountId) {
    this.azureStorageAccountId = azureStorageAccountId;
    return this;
  }

  /**
   * A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.
   * @return azureStorageAccountId
   */
  @javax.annotation.Nullable
  public String getAzureStorageAccountId() {
    return azureStorageAccountId;
  }

  public void setAzureStorageAccountId(String azureStorageAccountId) {
    this.azureStorageAccountId = azureStorageAccountId;
  }


  public InMageReplicationDetails compressedDataRateInMB(Double compressedDataRateInMB) {
    this.compressedDataRateInMB = compressedDataRateInMB;
    return this;
  }

  /**
   * The compressed data change rate in MB.
   * @return compressedDataRateInMB
   */
  @javax.annotation.Nullable
  public Double getCompressedDataRateInMB() {
    return compressedDataRateInMB;
  }

  public void setCompressedDataRateInMB(Double compressedDataRateInMB) {
    this.compressedDataRateInMB = compressedDataRateInMB;
  }


  public InMageReplicationDetails consistencyPoints(Map<String, OffsetDateTime> consistencyPoints) {
    this.consistencyPoints = consistencyPoints;
    return this;
  }

  public InMageReplicationDetails putConsistencyPointsItem(String key, OffsetDateTime consistencyPointsItem) {
    if (this.consistencyPoints == null) {
      this.consistencyPoints = new HashMap<>();
    }
    this.consistencyPoints.put(key, consistencyPointsItem);
    return this;
  }

  /**
   * The collection of Consistency points.
   * @return consistencyPoints
   */
  @javax.annotation.Nullable
  public Map<String, OffsetDateTime> getConsistencyPoints() {
    return consistencyPoints;
  }

  public void setConsistencyPoints(Map<String, OffsetDateTime> consistencyPoints) {
    this.consistencyPoints = consistencyPoints;
  }


  public InMageReplicationDetails datastores(List<String> datastores) {
    this.datastores = datastores;
    return this;
  }

  public InMageReplicationDetails addDatastoresItem(String datastoresItem) {
    if (this.datastores == null) {
      this.datastores = new ArrayList<>();
    }
    this.datastores.add(datastoresItem);
    return this;
  }

  /**
   * The data stores of the on-premise machine Value can be list of strings that contain data store names
   * @return datastores
   */
  @javax.annotation.Nullable
  public List<String> getDatastores() {
    return datastores;
  }

  public void setDatastores(List<String> datastores) {
    this.datastores = datastores;
  }


  public InMageReplicationDetails discoveryType(String discoveryType) {
    this.discoveryType = discoveryType;
    return this;
  }

  /**
   * A value indicating the discovery type of the machine.
   * @return discoveryType
   */
  @javax.annotation.Nullable
  public String getDiscoveryType() {
    return discoveryType;
  }

  public void setDiscoveryType(String discoveryType) {
    this.discoveryType = discoveryType;
  }


  public InMageReplicationDetails diskResized(String diskResized) {
    this.diskResized = diskResized;
    return this;
  }

  /**
   * A value indicating whether any disk is resized for this VM.
   * @return diskResized
   */
  @javax.annotation.Nullable
  public String getDiskResized() {
    return diskResized;
  }

  public void setDiskResized(String diskResized) {
    this.diskResized = diskResized;
  }


  public InMageReplicationDetails infrastructureVmId(String infrastructureVmId) {
    this.infrastructureVmId = infrastructureVmId;
    return this;
  }

  /**
   * The infrastructure VM Id.
   * @return infrastructureVmId
   */
  @javax.annotation.Nullable
  public String getInfrastructureVmId() {
    return infrastructureVmId;
  }

  public void setInfrastructureVmId(String infrastructureVmId) {
    this.infrastructureVmId = infrastructureVmId;
  }


  public InMageReplicationDetails ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * The source IP address.
   * @return ipAddress
   */
  @javax.annotation.Nullable
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public InMageReplicationDetails lastHeartbeat(OffsetDateTime lastHeartbeat) {
    this.lastHeartbeat = lastHeartbeat;
    return this;
  }

  /**
   * The last heartbeat received from the source server.
   * @return lastHeartbeat
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastHeartbeat() {
    return lastHeartbeat;
  }

  public void setLastHeartbeat(OffsetDateTime lastHeartbeat) {
    this.lastHeartbeat = lastHeartbeat;
  }


  public InMageReplicationDetails lastRpoCalculatedTime(OffsetDateTime lastRpoCalculatedTime) {
    this.lastRpoCalculatedTime = lastRpoCalculatedTime;
    return this;
  }

  /**
   * The last RPO calculated time.
   * @return lastRpoCalculatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastRpoCalculatedTime() {
    return lastRpoCalculatedTime;
  }

  public void setLastRpoCalculatedTime(OffsetDateTime lastRpoCalculatedTime) {
    this.lastRpoCalculatedTime = lastRpoCalculatedTime;
  }


  public InMageReplicationDetails lastUpdateReceivedTime(OffsetDateTime lastUpdateReceivedTime) {
    this.lastUpdateReceivedTime = lastUpdateReceivedTime;
    return this;
  }

  /**
   * The last update time received from on-prem components.
   * @return lastUpdateReceivedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdateReceivedTime() {
    return lastUpdateReceivedTime;
  }

  public void setLastUpdateReceivedTime(OffsetDateTime lastUpdateReceivedTime) {
    this.lastUpdateReceivedTime = lastUpdateReceivedTime;
  }


  public InMageReplicationDetails masterTargetId(String masterTargetId) {
    this.masterTargetId = masterTargetId;
    return this;
  }

  /**
   * The master target Id.
   * @return masterTargetId
   */
  @javax.annotation.Nullable
  public String getMasterTargetId() {
    return masterTargetId;
  }

  public void setMasterTargetId(String masterTargetId) {
    this.masterTargetId = masterTargetId;
  }


  public InMageReplicationDetails multiVmGroupId(String multiVmGroupId) {
    this.multiVmGroupId = multiVmGroupId;
    return this;
  }

  /**
   * The multi vm group Id, if any.
   * @return multiVmGroupId
   */
  @javax.annotation.Nullable
  public String getMultiVmGroupId() {
    return multiVmGroupId;
  }

  public void setMultiVmGroupId(String multiVmGroupId) {
    this.multiVmGroupId = multiVmGroupId;
  }


  public InMageReplicationDetails multiVmGroupName(String multiVmGroupName) {
    this.multiVmGroupName = multiVmGroupName;
    return this;
  }

  /**
   * The multi vm group name, if any.
   * @return multiVmGroupName
   */
  @javax.annotation.Nullable
  public String getMultiVmGroupName() {
    return multiVmGroupName;
  }

  public void setMultiVmGroupName(String multiVmGroupName) {
    this.multiVmGroupName = multiVmGroupName;
  }


  public InMageReplicationDetails multiVmSyncStatus(String multiVmSyncStatus) {
    this.multiVmSyncStatus = multiVmSyncStatus;
    return this;
  }

  /**
   * A value indicating whether the multi vm sync is enabled or disabled.
   * @return multiVmSyncStatus
   */
  @javax.annotation.Nullable
  public String getMultiVmSyncStatus() {
    return multiVmSyncStatus;
  }

  public void setMultiVmSyncStatus(String multiVmSyncStatus) {
    this.multiVmSyncStatus = multiVmSyncStatus;
  }


  public InMageReplicationDetails osDetails(OSDiskDetails osDetails) {
    this.osDetails = osDetails;
    return this;
  }

  /**
   * Get osDetails
   * @return osDetails
   */
  @javax.annotation.Nullable
  public OSDiskDetails getOsDetails() {
    return osDetails;
  }

  public void setOsDetails(OSDiskDetails osDetails) {
    this.osDetails = osDetails;
  }


  public InMageReplicationDetails osVersion(String osVersion) {
    this.osVersion = osVersion;
    return this;
  }

  /**
   * The OS Version of the protected item.
   * @return osVersion
   */
  @javax.annotation.Nullable
  public String getOsVersion() {
    return osVersion;
  }

  public void setOsVersion(String osVersion) {
    this.osVersion = osVersion;
  }


  public InMageReplicationDetails processServerId(String processServerId) {
    this.processServerId = processServerId;
    return this;
  }

  /**
   * The process server Id.
   * @return processServerId
   */
  @javax.annotation.Nullable
  public String getProcessServerId() {
    return processServerId;
  }

  public void setProcessServerId(String processServerId) {
    this.processServerId = processServerId;
  }


  public InMageReplicationDetails protectedDisks(List<InMageProtectedDiskDetails> protectedDisks) {
    this.protectedDisks = protectedDisks;
    return this;
  }

  public InMageReplicationDetails addProtectedDisksItem(InMageProtectedDiskDetails protectedDisksItem) {
    if (this.protectedDisks == null) {
      this.protectedDisks = new ArrayList<>();
    }
    this.protectedDisks.add(protectedDisksItem);
    return this;
  }

  /**
   * The list of protected disks.
   * @return protectedDisks
   */
  @javax.annotation.Nullable
  public List<InMageProtectedDiskDetails> getProtectedDisks() {
    return protectedDisks;
  }

  public void setProtectedDisks(List<InMageProtectedDiskDetails> protectedDisks) {
    this.protectedDisks = protectedDisks;
  }


  public InMageReplicationDetails protectionStage(String protectionStage) {
    this.protectionStage = protectionStage;
    return this;
  }

  /**
   * The protection stage.
   * @return protectionStage
   */
  @javax.annotation.Nullable
  public String getProtectionStage() {
    return protectionStage;
  }

  public void setProtectionStage(String protectionStage) {
    this.protectionStage = protectionStage;
  }


  public InMageReplicationDetails rebootAfterUpdateStatus(String rebootAfterUpdateStatus) {
    this.rebootAfterUpdateStatus = rebootAfterUpdateStatus;
    return this;
  }

  /**
   * A value indicating whether the source server requires a restart after update.
   * @return rebootAfterUpdateStatus
   */
  @javax.annotation.Nullable
  public String getRebootAfterUpdateStatus() {
    return rebootAfterUpdateStatus;
  }

  public void setRebootAfterUpdateStatus(String rebootAfterUpdateStatus) {
    this.rebootAfterUpdateStatus = rebootAfterUpdateStatus;
  }


  public InMageReplicationDetails replicaId(String replicaId) {
    this.replicaId = replicaId;
    return this;
  }

  /**
   * The replica id of the protected item.
   * @return replicaId
   */
  @javax.annotation.Nullable
  public String getReplicaId() {
    return replicaId;
  }

  public void setReplicaId(String replicaId) {
    this.replicaId = replicaId;
  }


  public InMageReplicationDetails resyncDetails(InitialReplicationDetails resyncDetails) {
    this.resyncDetails = resyncDetails;
    return this;
  }

  /**
   * Get resyncDetails
   * @return resyncDetails
   */
  @javax.annotation.Nullable
  public InitialReplicationDetails getResyncDetails() {
    return resyncDetails;
  }

  public void setResyncDetails(InitialReplicationDetails resyncDetails) {
    this.resyncDetails = resyncDetails;
  }


  public InMageReplicationDetails retentionWindowEnd(OffsetDateTime retentionWindowEnd) {
    this.retentionWindowEnd = retentionWindowEnd;
    return this;
  }

  /**
   * The retention window end time.
   * @return retentionWindowEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getRetentionWindowEnd() {
    return retentionWindowEnd;
  }

  public void setRetentionWindowEnd(OffsetDateTime retentionWindowEnd) {
    this.retentionWindowEnd = retentionWindowEnd;
  }


  public InMageReplicationDetails retentionWindowStart(OffsetDateTime retentionWindowStart) {
    this.retentionWindowStart = retentionWindowStart;
    return this;
  }

  /**
   * The retention window start time.
   * @return retentionWindowStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getRetentionWindowStart() {
    return retentionWindowStart;
  }

  public void setRetentionWindowStart(OffsetDateTime retentionWindowStart) {
    this.retentionWindowStart = retentionWindowStart;
  }


  public InMageReplicationDetails rpoInSeconds(Long rpoInSeconds) {
    this.rpoInSeconds = rpoInSeconds;
    return this;
  }

  /**
   * The RPO in seconds.
   * @return rpoInSeconds
   */
  @javax.annotation.Nullable
  public Long getRpoInSeconds() {
    return rpoInSeconds;
  }

  public void setRpoInSeconds(Long rpoInSeconds) {
    this.rpoInSeconds = rpoInSeconds;
  }


  public InMageReplicationDetails sourceVmCpuCount(Integer sourceVmCpuCount) {
    this.sourceVmCpuCount = sourceVmCpuCount;
    return this;
  }

  /**
   * The CPU count of the VM on the primary side.
   * @return sourceVmCpuCount
   */
  @javax.annotation.Nullable
  public Integer getSourceVmCpuCount() {
    return sourceVmCpuCount;
  }

  public void setSourceVmCpuCount(Integer sourceVmCpuCount) {
    this.sourceVmCpuCount = sourceVmCpuCount;
  }


  public InMageReplicationDetails sourceVmRamSizeInMB(Integer sourceVmRamSizeInMB) {
    this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
    return this;
  }

  /**
   * The RAM size of the VM on the primary side.
   * @return sourceVmRamSizeInMB
   */
  @javax.annotation.Nullable
  public Integer getSourceVmRamSizeInMB() {
    return sourceVmRamSizeInMB;
  }

  public void setSourceVmRamSizeInMB(Integer sourceVmRamSizeInMB) {
    this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
  }


  public InMageReplicationDetails uncompressedDataRateInMB(Double uncompressedDataRateInMB) {
    this.uncompressedDataRateInMB = uncompressedDataRateInMB;
    return this;
  }

  /**
   * The uncompressed data change rate in MB.
   * @return uncompressedDataRateInMB
   */
  @javax.annotation.Nullable
  public Double getUncompressedDataRateInMB() {
    return uncompressedDataRateInMB;
  }

  public void setUncompressedDataRateInMB(Double uncompressedDataRateInMB) {
    this.uncompressedDataRateInMB = uncompressedDataRateInMB;
  }


  public InMageReplicationDetails vCenterInfrastructureId(String vCenterInfrastructureId) {
    this.vCenterInfrastructureId = vCenterInfrastructureId;
    return this;
  }

  /**
   * The vCenter infrastructure Id.
   * @return vCenterInfrastructureId
   */
  @javax.annotation.Nullable
  public String getvCenterInfrastructureId() {
    return vCenterInfrastructureId;
  }

  public void setvCenterInfrastructureId(String vCenterInfrastructureId) {
    this.vCenterInfrastructureId = vCenterInfrastructureId;
  }


  public InMageReplicationDetails validationErrors(List<HealthError> validationErrors) {
    this.validationErrors = validationErrors;
    return this;
  }

  public InMageReplicationDetails addValidationErrorsItem(HealthError validationErrorsItem) {
    if (this.validationErrors == null) {
      this.validationErrors = new ArrayList<>();
    }
    this.validationErrors.add(validationErrorsItem);
    return this;
  }

  /**
   * The validation errors of the on-premise machine Value can be list of validation errors
   * @return validationErrors
   */
  @javax.annotation.Nullable
  public List<HealthError> getValidationErrors() {
    return validationErrors;
  }

  public void setValidationErrors(List<HealthError> validationErrors) {
    this.validationErrors = validationErrors;
  }


  public InMageReplicationDetails vmId(String vmId) {
    this.vmId = vmId;
    return this;
  }

  /**
   * The virtual machine Id.
   * @return vmId
   */
  @javax.annotation.Nullable
  public String getVmId() {
    return vmId;
  }

  public void setVmId(String vmId) {
    this.vmId = vmId;
  }


  public InMageReplicationDetails vmNics(List<VMNicDetails> vmNics) {
    this.vmNics = vmNics;
    return this;
  }

  public InMageReplicationDetails addVmNicsItem(VMNicDetails vmNicsItem) {
    if (this.vmNics == null) {
      this.vmNics = new ArrayList<>();
    }
    this.vmNics.add(vmNicsItem);
    return this;
  }

  /**
   * The PE Network details.
   * @return vmNics
   */
  @javax.annotation.Nullable
  public List<VMNicDetails> getVmNics() {
    return vmNics;
  }

  public void setVmNics(List<VMNicDetails> vmNics) {
    this.vmNics = vmNics;
  }


  public InMageReplicationDetails vmProtectionState(String vmProtectionState) {
    this.vmProtectionState = vmProtectionState;
    return this;
  }

  /**
   * The protection state for the vm.
   * @return vmProtectionState
   */
  @javax.annotation.Nullable
  public String getVmProtectionState() {
    return vmProtectionState;
  }

  public void setVmProtectionState(String vmProtectionState) {
    this.vmProtectionState = vmProtectionState;
  }


  public InMageReplicationDetails vmProtectionStateDescription(String vmProtectionStateDescription) {
    this.vmProtectionStateDescription = vmProtectionStateDescription;
    return this;
  }

  /**
   * The protection state description for the vm.
   * @return vmProtectionStateDescription
   */
  @javax.annotation.Nullable
  public String getVmProtectionStateDescription() {
    return vmProtectionStateDescription;
  }

  public void setVmProtectionStateDescription(String vmProtectionStateDescription) {
    this.vmProtectionStateDescription = vmProtectionStateDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InMageReplicationDetails inMageReplicationDetails = (InMageReplicationDetails) o;
    return Objects.equals(this.activeSiteType, inMageReplicationDetails.activeSiteType) &&
        Objects.equals(this.agentDetails, inMageReplicationDetails.agentDetails) &&
        Objects.equals(this.azureStorageAccountId, inMageReplicationDetails.azureStorageAccountId) &&
        Objects.equals(this.compressedDataRateInMB, inMageReplicationDetails.compressedDataRateInMB) &&
        Objects.equals(this.consistencyPoints, inMageReplicationDetails.consistencyPoints) &&
        Objects.equals(this.datastores, inMageReplicationDetails.datastores) &&
        Objects.equals(this.discoveryType, inMageReplicationDetails.discoveryType) &&
        Objects.equals(this.diskResized, inMageReplicationDetails.diskResized) &&
        Objects.equals(this.infrastructureVmId, inMageReplicationDetails.infrastructureVmId) &&
        Objects.equals(this.ipAddress, inMageReplicationDetails.ipAddress) &&
        Objects.equals(this.lastHeartbeat, inMageReplicationDetails.lastHeartbeat) &&
        Objects.equals(this.lastRpoCalculatedTime, inMageReplicationDetails.lastRpoCalculatedTime) &&
        Objects.equals(this.lastUpdateReceivedTime, inMageReplicationDetails.lastUpdateReceivedTime) &&
        Objects.equals(this.masterTargetId, inMageReplicationDetails.masterTargetId) &&
        Objects.equals(this.multiVmGroupId, inMageReplicationDetails.multiVmGroupId) &&
        Objects.equals(this.multiVmGroupName, inMageReplicationDetails.multiVmGroupName) &&
        Objects.equals(this.multiVmSyncStatus, inMageReplicationDetails.multiVmSyncStatus) &&
        Objects.equals(this.osDetails, inMageReplicationDetails.osDetails) &&
        Objects.equals(this.osVersion, inMageReplicationDetails.osVersion) &&
        Objects.equals(this.processServerId, inMageReplicationDetails.processServerId) &&
        Objects.equals(this.protectedDisks, inMageReplicationDetails.protectedDisks) &&
        Objects.equals(this.protectionStage, inMageReplicationDetails.protectionStage) &&
        Objects.equals(this.rebootAfterUpdateStatus, inMageReplicationDetails.rebootAfterUpdateStatus) &&
        Objects.equals(this.replicaId, inMageReplicationDetails.replicaId) &&
        Objects.equals(this.resyncDetails, inMageReplicationDetails.resyncDetails) &&
        Objects.equals(this.retentionWindowEnd, inMageReplicationDetails.retentionWindowEnd) &&
        Objects.equals(this.retentionWindowStart, inMageReplicationDetails.retentionWindowStart) &&
        Objects.equals(this.rpoInSeconds, inMageReplicationDetails.rpoInSeconds) &&
        Objects.equals(this.sourceVmCpuCount, inMageReplicationDetails.sourceVmCpuCount) &&
        Objects.equals(this.sourceVmRamSizeInMB, inMageReplicationDetails.sourceVmRamSizeInMB) &&
        Objects.equals(this.uncompressedDataRateInMB, inMageReplicationDetails.uncompressedDataRateInMB) &&
        Objects.equals(this.vCenterInfrastructureId, inMageReplicationDetails.vCenterInfrastructureId) &&
        Objects.equals(this.validationErrors, inMageReplicationDetails.validationErrors) &&
        Objects.equals(this.vmId, inMageReplicationDetails.vmId) &&
        Objects.equals(this.vmNics, inMageReplicationDetails.vmNics) &&
        Objects.equals(this.vmProtectionState, inMageReplicationDetails.vmProtectionState) &&
        Objects.equals(this.vmProtectionStateDescription, inMageReplicationDetails.vmProtectionStateDescription) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeSiteType, agentDetails, azureStorageAccountId, compressedDataRateInMB, consistencyPoints, datastores, discoveryType, diskResized, infrastructureVmId, ipAddress, lastHeartbeat, lastRpoCalculatedTime, lastUpdateReceivedTime, masterTargetId, multiVmGroupId, multiVmGroupName, multiVmSyncStatus, osDetails, osVersion, processServerId, protectedDisks, protectionStage, rebootAfterUpdateStatus, replicaId, resyncDetails, retentionWindowEnd, retentionWindowStart, rpoInSeconds, sourceVmCpuCount, sourceVmRamSizeInMB, uncompressedDataRateInMB, vCenterInfrastructureId, validationErrors, vmId, vmNics, vmProtectionState, vmProtectionStateDescription, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InMageReplicationDetails {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    activeSiteType: ").append(toIndentedString(activeSiteType)).append("\n");
    sb.append("    agentDetails: ").append(toIndentedString(agentDetails)).append("\n");
    sb.append("    azureStorageAccountId: ").append(toIndentedString(azureStorageAccountId)).append("\n");
    sb.append("    compressedDataRateInMB: ").append(toIndentedString(compressedDataRateInMB)).append("\n");
    sb.append("    consistencyPoints: ").append(toIndentedString(consistencyPoints)).append("\n");
    sb.append("    datastores: ").append(toIndentedString(datastores)).append("\n");
    sb.append("    discoveryType: ").append(toIndentedString(discoveryType)).append("\n");
    sb.append("    diskResized: ").append(toIndentedString(diskResized)).append("\n");
    sb.append("    infrastructureVmId: ").append(toIndentedString(infrastructureVmId)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    lastHeartbeat: ").append(toIndentedString(lastHeartbeat)).append("\n");
    sb.append("    lastRpoCalculatedTime: ").append(toIndentedString(lastRpoCalculatedTime)).append("\n");
    sb.append("    lastUpdateReceivedTime: ").append(toIndentedString(lastUpdateReceivedTime)).append("\n");
    sb.append("    masterTargetId: ").append(toIndentedString(masterTargetId)).append("\n");
    sb.append("    multiVmGroupId: ").append(toIndentedString(multiVmGroupId)).append("\n");
    sb.append("    multiVmGroupName: ").append(toIndentedString(multiVmGroupName)).append("\n");
    sb.append("    multiVmSyncStatus: ").append(toIndentedString(multiVmSyncStatus)).append("\n");
    sb.append("    osDetails: ").append(toIndentedString(osDetails)).append("\n");
    sb.append("    osVersion: ").append(toIndentedString(osVersion)).append("\n");
    sb.append("    processServerId: ").append(toIndentedString(processServerId)).append("\n");
    sb.append("    protectedDisks: ").append(toIndentedString(protectedDisks)).append("\n");
    sb.append("    protectionStage: ").append(toIndentedString(protectionStage)).append("\n");
    sb.append("    rebootAfterUpdateStatus: ").append(toIndentedString(rebootAfterUpdateStatus)).append("\n");
    sb.append("    replicaId: ").append(toIndentedString(replicaId)).append("\n");
    sb.append("    resyncDetails: ").append(toIndentedString(resyncDetails)).append("\n");
    sb.append("    retentionWindowEnd: ").append(toIndentedString(retentionWindowEnd)).append("\n");
    sb.append("    retentionWindowStart: ").append(toIndentedString(retentionWindowStart)).append("\n");
    sb.append("    rpoInSeconds: ").append(toIndentedString(rpoInSeconds)).append("\n");
    sb.append("    sourceVmCpuCount: ").append(toIndentedString(sourceVmCpuCount)).append("\n");
    sb.append("    sourceVmRamSizeInMB: ").append(toIndentedString(sourceVmRamSizeInMB)).append("\n");
    sb.append("    uncompressedDataRateInMB: ").append(toIndentedString(uncompressedDataRateInMB)).append("\n");
    sb.append("    vCenterInfrastructureId: ").append(toIndentedString(vCenterInfrastructureId)).append("\n");
    sb.append("    validationErrors: ").append(toIndentedString(validationErrors)).append("\n");
    sb.append("    vmId: ").append(toIndentedString(vmId)).append("\n");
    sb.append("    vmNics: ").append(toIndentedString(vmNics)).append("\n");
    sb.append("    vmProtectionState: ").append(toIndentedString(vmProtectionState)).append("\n");
    sb.append("    vmProtectionStateDescription: ").append(toIndentedString(vmProtectionStateDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InMageReplicationDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InMageReplicationDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InMageReplicationDetails is not found in the empty JSON string", InMageReplicationDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InMageReplicationDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InMageReplicationDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InMageReplicationDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InMageReplicationDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InMageReplicationDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InMageReplicationDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<InMageReplicationDetails>() {
           @Override
           public void write(JsonWriter out, InMageReplicationDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InMageReplicationDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InMageReplicationDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InMageReplicationDetails
   * @throws IOException if the JSON string is invalid with respect to InMageReplicationDetails
   */
  public static InMageReplicationDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InMageReplicationDetails.class);
  }

  /**
   * Convert an instance of InMageReplicationDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

