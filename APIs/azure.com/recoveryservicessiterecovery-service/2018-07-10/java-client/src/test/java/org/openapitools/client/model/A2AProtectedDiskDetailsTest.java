/*
 * SiteRecoveryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for A2AProtectedDiskDetails
 */
public class A2AProtectedDiskDetailsTest {
    private final A2AProtectedDiskDetails model = new A2AProtectedDiskDetails();

    /**
     * Model tests for A2AProtectedDiskDetails
     */
    @Test
    public void testA2AProtectedDiskDetails() {
        // TODO: test A2AProtectedDiskDetails
    }

    /**
     * Test the property 'allowedDiskLevelOperation'
     */
    @Test
    public void allowedDiskLevelOperationTest() {
        // TODO: test allowedDiskLevelOperation
    }

    /**
     * Test the property 'dataPendingAtSourceAgentInMB'
     */
    @Test
    public void dataPendingAtSourceAgentInMBTest() {
        // TODO: test dataPendingAtSourceAgentInMB
    }

    /**
     * Test the property 'dataPendingInStagingStorageAccountInMB'
     */
    @Test
    public void dataPendingInStagingStorageAccountInMBTest() {
        // TODO: test dataPendingInStagingStorageAccountInMB
    }

    /**
     * Test the property 'dekKeyVaultArmId'
     */
    @Test
    public void dekKeyVaultArmIdTest() {
        // TODO: test dekKeyVaultArmId
    }

    /**
     * Test the property 'diskCapacityInBytes'
     */
    @Test
    public void diskCapacityInBytesTest() {
        // TODO: test diskCapacityInBytes
    }

    /**
     * Test the property 'diskName'
     */
    @Test
    public void diskNameTest() {
        // TODO: test diskName
    }

    /**
     * Test the property 'diskState'
     */
    @Test
    public void diskStateTest() {
        // TODO: test diskState
    }

    /**
     * Test the property 'diskType'
     */
    @Test
    public void diskTypeTest() {
        // TODO: test diskType
    }

    /**
     * Test the property 'diskUri'
     */
    @Test
    public void diskUriTest() {
        // TODO: test diskUri
    }

    /**
     * Test the property 'isDiskEncrypted'
     */
    @Test
    public void isDiskEncryptedTest() {
        // TODO: test isDiskEncrypted
    }

    /**
     * Test the property 'isDiskKeyEncrypted'
     */
    @Test
    public void isDiskKeyEncryptedTest() {
        // TODO: test isDiskKeyEncrypted
    }

    /**
     * Test the property 'kekKeyVaultArmId'
     */
    @Test
    public void kekKeyVaultArmIdTest() {
        // TODO: test kekKeyVaultArmId
    }

    /**
     * Test the property 'keyIdentifier'
     */
    @Test
    public void keyIdentifierTest() {
        // TODO: test keyIdentifier
    }

    /**
     * Test the property 'monitoringJobType'
     */
    @Test
    public void monitoringJobTypeTest() {
        // TODO: test monitoringJobType
    }

    /**
     * Test the property 'monitoringPercentageCompletion'
     */
    @Test
    public void monitoringPercentageCompletionTest() {
        // TODO: test monitoringPercentageCompletion
    }

    /**
     * Test the property 'primaryDiskAzureStorageAccountId'
     */
    @Test
    public void primaryDiskAzureStorageAccountIdTest() {
        // TODO: test primaryDiskAzureStorageAccountId
    }

    /**
     * Test the property 'primaryStagingAzureStorageAccountId'
     */
    @Test
    public void primaryStagingAzureStorageAccountIdTest() {
        // TODO: test primaryStagingAzureStorageAccountId
    }

    /**
     * Test the property 'recoveryAzureStorageAccountId'
     */
    @Test
    public void recoveryAzureStorageAccountIdTest() {
        // TODO: test recoveryAzureStorageAccountId
    }

    /**
     * Test the property 'recoveryDiskUri'
     */
    @Test
    public void recoveryDiskUriTest() {
        // TODO: test recoveryDiskUri
    }

    /**
     * Test the property 'resyncRequired'
     */
    @Test
    public void resyncRequiredTest() {
        // TODO: test resyncRequired
    }

    /**
     * Test the property 'secretIdentifier'
     */
    @Test
    public void secretIdentifierTest() {
        // TODO: test secretIdentifier
    }

}
