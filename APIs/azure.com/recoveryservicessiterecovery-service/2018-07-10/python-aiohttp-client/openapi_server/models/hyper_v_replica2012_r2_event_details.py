# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_provider_specific_details import EventProviderSpecificDetails
from openapi_server import util


class HyperVReplica2012R2EventDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_name: str=None, fabric_name: str=None, remote_container_name: str=None, remote_fabric_name: str=None, instance_type: str=None):
        """HyperVReplica2012R2EventDetails - a model defined in OpenAPI

        :param container_name: The container_name of this HyperVReplica2012R2EventDetails.
        :param fabric_name: The fabric_name of this HyperVReplica2012R2EventDetails.
        :param remote_container_name: The remote_container_name of this HyperVReplica2012R2EventDetails.
        :param remote_fabric_name: The remote_fabric_name of this HyperVReplica2012R2EventDetails.
        :param instance_type: The instance_type of this HyperVReplica2012R2EventDetails.
        """
        self.openapi_types = {
            'container_name': str,
            'fabric_name': str,
            'remote_container_name': str,
            'remote_fabric_name': str,
            'instance_type': str
        }

        self.attribute_map = {
            'container_name': 'containerName',
            'fabric_name': 'fabricName',
            'remote_container_name': 'remoteContainerName',
            'remote_fabric_name': 'remoteFabricName',
            'instance_type': 'instanceType'
        }

        self._container_name = container_name
        self._fabric_name = fabric_name
        self._remote_container_name = remote_container_name
        self._remote_fabric_name = remote_fabric_name
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HyperVReplica2012R2EventDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HyperVReplica2012R2EventDetails of this HyperVReplica2012R2EventDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_name(self):
        """Gets the container_name of this HyperVReplica2012R2EventDetails.

        The container friendly name.

        :return: The container_name of this HyperVReplica2012R2EventDetails.
        :rtype: str
        """
        return self._container_name

    @container_name.setter
    def container_name(self, container_name):
        """Sets the container_name of this HyperVReplica2012R2EventDetails.

        The container friendly name.

        :param container_name: The container_name of this HyperVReplica2012R2EventDetails.
        :type container_name: str
        """

        self._container_name = container_name

    @property
    def fabric_name(self):
        """Gets the fabric_name of this HyperVReplica2012R2EventDetails.

        The fabric friendly name.

        :return: The fabric_name of this HyperVReplica2012R2EventDetails.
        :rtype: str
        """
        return self._fabric_name

    @fabric_name.setter
    def fabric_name(self, fabric_name):
        """Sets the fabric_name of this HyperVReplica2012R2EventDetails.

        The fabric friendly name.

        :param fabric_name: The fabric_name of this HyperVReplica2012R2EventDetails.
        :type fabric_name: str
        """

        self._fabric_name = fabric_name

    @property
    def remote_container_name(self):
        """Gets the remote_container_name of this HyperVReplica2012R2EventDetails.

        The remote container name.

        :return: The remote_container_name of this HyperVReplica2012R2EventDetails.
        :rtype: str
        """
        return self._remote_container_name

    @remote_container_name.setter
    def remote_container_name(self, remote_container_name):
        """Sets the remote_container_name of this HyperVReplica2012R2EventDetails.

        The remote container name.

        :param remote_container_name: The remote_container_name of this HyperVReplica2012R2EventDetails.
        :type remote_container_name: str
        """

        self._remote_container_name = remote_container_name

    @property
    def remote_fabric_name(self):
        """Gets the remote_fabric_name of this HyperVReplica2012R2EventDetails.

        The remote fabric name.

        :return: The remote_fabric_name of this HyperVReplica2012R2EventDetails.
        :rtype: str
        """
        return self._remote_fabric_name

    @remote_fabric_name.setter
    def remote_fabric_name(self, remote_fabric_name):
        """Sets the remote_fabric_name of this HyperVReplica2012R2EventDetails.

        The remote fabric name.

        :param remote_fabric_name: The remote_fabric_name of this HyperVReplica2012R2EventDetails.
        :type remote_fabric_name: str
        """

        self._remote_fabric_name = remote_fabric_name

    @property
    def instance_type(self):
        """Gets the instance_type of this HyperVReplica2012R2EventDetails.

        Gets the class type. Overridden in derived classes.

        :return: The instance_type of this HyperVReplica2012R2EventDetails.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this HyperVReplica2012R2EventDetails.

        Gets the class type. Overridden in derived classes.

        :param instance_type: The instance_type of this HyperVReplica2012R2EventDetails.
        :type instance_type: str
        """

        self._instance_type = instance_type
