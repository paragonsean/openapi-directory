# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class A2AProtectedManagedDiskDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_disk_level_operation: List[str]=None, data_pending_at_source_agent_in_mb: float=None, data_pending_in_staging_storage_account_in_mb: float=None, dek_key_vault_arm_id: str=None, disk_capacity_in_bytes: int=None, disk_id: str=None, disk_name: str=None, disk_state: str=None, disk_type: str=None, failover_disk_name: str=None, is_disk_encrypted: bool=None, is_disk_key_encrypted: bool=None, kek_key_vault_arm_id: str=None, key_identifier: str=None, monitoring_job_type: str=None, monitoring_percentage_completion: int=None, primary_staging_azure_storage_account_id: str=None, recovery_disk_encryption_set_id: str=None, recovery_replica_disk_account_type: str=None, recovery_replica_disk_id: str=None, recovery_resource_group_id: str=None, recovery_target_disk_account_type: str=None, recovery_target_disk_id: str=None, resync_required: bool=None, secret_identifier: str=None, tfo_disk_name: str=None):
        """A2AProtectedManagedDiskDetails - a model defined in OpenAPI

        :param allowed_disk_level_operation: The allowed_disk_level_operation of this A2AProtectedManagedDiskDetails.
        :param data_pending_at_source_agent_in_mb: The data_pending_at_source_agent_in_mb of this A2AProtectedManagedDiskDetails.
        :param data_pending_in_staging_storage_account_in_mb: The data_pending_in_staging_storage_account_in_mb of this A2AProtectedManagedDiskDetails.
        :param dek_key_vault_arm_id: The dek_key_vault_arm_id of this A2AProtectedManagedDiskDetails.
        :param disk_capacity_in_bytes: The disk_capacity_in_bytes of this A2AProtectedManagedDiskDetails.
        :param disk_id: The disk_id of this A2AProtectedManagedDiskDetails.
        :param disk_name: The disk_name of this A2AProtectedManagedDiskDetails.
        :param disk_state: The disk_state of this A2AProtectedManagedDiskDetails.
        :param disk_type: The disk_type of this A2AProtectedManagedDiskDetails.
        :param failover_disk_name: The failover_disk_name of this A2AProtectedManagedDiskDetails.
        :param is_disk_encrypted: The is_disk_encrypted of this A2AProtectedManagedDiskDetails.
        :param is_disk_key_encrypted: The is_disk_key_encrypted of this A2AProtectedManagedDiskDetails.
        :param kek_key_vault_arm_id: The kek_key_vault_arm_id of this A2AProtectedManagedDiskDetails.
        :param key_identifier: The key_identifier of this A2AProtectedManagedDiskDetails.
        :param monitoring_job_type: The monitoring_job_type of this A2AProtectedManagedDiskDetails.
        :param monitoring_percentage_completion: The monitoring_percentage_completion of this A2AProtectedManagedDiskDetails.
        :param primary_staging_azure_storage_account_id: The primary_staging_azure_storage_account_id of this A2AProtectedManagedDiskDetails.
        :param recovery_disk_encryption_set_id: The recovery_disk_encryption_set_id of this A2AProtectedManagedDiskDetails.
        :param recovery_replica_disk_account_type: The recovery_replica_disk_account_type of this A2AProtectedManagedDiskDetails.
        :param recovery_replica_disk_id: The recovery_replica_disk_id of this A2AProtectedManagedDiskDetails.
        :param recovery_resource_group_id: The recovery_resource_group_id of this A2AProtectedManagedDiskDetails.
        :param recovery_target_disk_account_type: The recovery_target_disk_account_type of this A2AProtectedManagedDiskDetails.
        :param recovery_target_disk_id: The recovery_target_disk_id of this A2AProtectedManagedDiskDetails.
        :param resync_required: The resync_required of this A2AProtectedManagedDiskDetails.
        :param secret_identifier: The secret_identifier of this A2AProtectedManagedDiskDetails.
        :param tfo_disk_name: The tfo_disk_name of this A2AProtectedManagedDiskDetails.
        """
        self.openapi_types = {
            'allowed_disk_level_operation': List[str],
            'data_pending_at_source_agent_in_mb': float,
            'data_pending_in_staging_storage_account_in_mb': float,
            'dek_key_vault_arm_id': str,
            'disk_capacity_in_bytes': int,
            'disk_id': str,
            'disk_name': str,
            'disk_state': str,
            'disk_type': str,
            'failover_disk_name': str,
            'is_disk_encrypted': bool,
            'is_disk_key_encrypted': bool,
            'kek_key_vault_arm_id': str,
            'key_identifier': str,
            'monitoring_job_type': str,
            'monitoring_percentage_completion': int,
            'primary_staging_azure_storage_account_id': str,
            'recovery_disk_encryption_set_id': str,
            'recovery_replica_disk_account_type': str,
            'recovery_replica_disk_id': str,
            'recovery_resource_group_id': str,
            'recovery_target_disk_account_type': str,
            'recovery_target_disk_id': str,
            'resync_required': bool,
            'secret_identifier': str,
            'tfo_disk_name': str
        }

        self.attribute_map = {
            'allowed_disk_level_operation': 'allowedDiskLevelOperation',
            'data_pending_at_source_agent_in_mb': 'dataPendingAtSourceAgentInMB',
            'data_pending_in_staging_storage_account_in_mb': 'dataPendingInStagingStorageAccountInMB',
            'dek_key_vault_arm_id': 'dekKeyVaultArmId',
            'disk_capacity_in_bytes': 'diskCapacityInBytes',
            'disk_id': 'diskId',
            'disk_name': 'diskName',
            'disk_state': 'diskState',
            'disk_type': 'diskType',
            'failover_disk_name': 'failoverDiskName',
            'is_disk_encrypted': 'isDiskEncrypted',
            'is_disk_key_encrypted': 'isDiskKeyEncrypted',
            'kek_key_vault_arm_id': 'kekKeyVaultArmId',
            'key_identifier': 'keyIdentifier',
            'monitoring_job_type': 'monitoringJobType',
            'monitoring_percentage_completion': 'monitoringPercentageCompletion',
            'primary_staging_azure_storage_account_id': 'primaryStagingAzureStorageAccountId',
            'recovery_disk_encryption_set_id': 'recoveryDiskEncryptionSetId',
            'recovery_replica_disk_account_type': 'recoveryReplicaDiskAccountType',
            'recovery_replica_disk_id': 'recoveryReplicaDiskId',
            'recovery_resource_group_id': 'recoveryResourceGroupId',
            'recovery_target_disk_account_type': 'recoveryTargetDiskAccountType',
            'recovery_target_disk_id': 'recoveryTargetDiskId',
            'resync_required': 'resyncRequired',
            'secret_identifier': 'secretIdentifier',
            'tfo_disk_name': 'tfoDiskName'
        }

        self._allowed_disk_level_operation = allowed_disk_level_operation
        self._data_pending_at_source_agent_in_mb = data_pending_at_source_agent_in_mb
        self._data_pending_in_staging_storage_account_in_mb = data_pending_in_staging_storage_account_in_mb
        self._dek_key_vault_arm_id = dek_key_vault_arm_id
        self._disk_capacity_in_bytes = disk_capacity_in_bytes
        self._disk_id = disk_id
        self._disk_name = disk_name
        self._disk_state = disk_state
        self._disk_type = disk_type
        self._failover_disk_name = failover_disk_name
        self._is_disk_encrypted = is_disk_encrypted
        self._is_disk_key_encrypted = is_disk_key_encrypted
        self._kek_key_vault_arm_id = kek_key_vault_arm_id
        self._key_identifier = key_identifier
        self._monitoring_job_type = monitoring_job_type
        self._monitoring_percentage_completion = monitoring_percentage_completion
        self._primary_staging_azure_storage_account_id = primary_staging_azure_storage_account_id
        self._recovery_disk_encryption_set_id = recovery_disk_encryption_set_id
        self._recovery_replica_disk_account_type = recovery_replica_disk_account_type
        self._recovery_replica_disk_id = recovery_replica_disk_id
        self._recovery_resource_group_id = recovery_resource_group_id
        self._recovery_target_disk_account_type = recovery_target_disk_account_type
        self._recovery_target_disk_id = recovery_target_disk_id
        self._resync_required = resync_required
        self._secret_identifier = secret_identifier
        self._tfo_disk_name = tfo_disk_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'A2AProtectedManagedDiskDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The A2AProtectedManagedDiskDetails of this A2AProtectedManagedDiskDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_disk_level_operation(self):
        """Gets the allowed_disk_level_operation of this A2AProtectedManagedDiskDetails.

        The disk level operations list.

        :return: The allowed_disk_level_operation of this A2AProtectedManagedDiskDetails.
        :rtype: List[str]
        """
        return self._allowed_disk_level_operation

    @allowed_disk_level_operation.setter
    def allowed_disk_level_operation(self, allowed_disk_level_operation):
        """Sets the allowed_disk_level_operation of this A2AProtectedManagedDiskDetails.

        The disk level operations list.

        :param allowed_disk_level_operation: The allowed_disk_level_operation of this A2AProtectedManagedDiskDetails.
        :type allowed_disk_level_operation: List[str]
        """

        self._allowed_disk_level_operation = allowed_disk_level_operation

    @property
    def data_pending_at_source_agent_in_mb(self):
        """Gets the data_pending_at_source_agent_in_mb of this A2AProtectedManagedDiskDetails.

        The data pending at source virtual machine in MB.

        :return: The data_pending_at_source_agent_in_mb of this A2AProtectedManagedDiskDetails.
        :rtype: float
        """
        return self._data_pending_at_source_agent_in_mb

    @data_pending_at_source_agent_in_mb.setter
    def data_pending_at_source_agent_in_mb(self, data_pending_at_source_agent_in_mb):
        """Sets the data_pending_at_source_agent_in_mb of this A2AProtectedManagedDiskDetails.

        The data pending at source virtual machine in MB.

        :param data_pending_at_source_agent_in_mb: The data_pending_at_source_agent_in_mb of this A2AProtectedManagedDiskDetails.
        :type data_pending_at_source_agent_in_mb: float
        """

        self._data_pending_at_source_agent_in_mb = data_pending_at_source_agent_in_mb

    @property
    def data_pending_in_staging_storage_account_in_mb(self):
        """Gets the data_pending_in_staging_storage_account_in_mb of this A2AProtectedManagedDiskDetails.

        The data pending for replication in MB at staging account.

        :return: The data_pending_in_staging_storage_account_in_mb of this A2AProtectedManagedDiskDetails.
        :rtype: float
        """
        return self._data_pending_in_staging_storage_account_in_mb

    @data_pending_in_staging_storage_account_in_mb.setter
    def data_pending_in_staging_storage_account_in_mb(self, data_pending_in_staging_storage_account_in_mb):
        """Sets the data_pending_in_staging_storage_account_in_mb of this A2AProtectedManagedDiskDetails.

        The data pending for replication in MB at staging account.

        :param data_pending_in_staging_storage_account_in_mb: The data_pending_in_staging_storage_account_in_mb of this A2AProtectedManagedDiskDetails.
        :type data_pending_in_staging_storage_account_in_mb: float
        """

        self._data_pending_in_staging_storage_account_in_mb = data_pending_in_staging_storage_account_in_mb

    @property
    def dek_key_vault_arm_id(self):
        """Gets the dek_key_vault_arm_id of this A2AProtectedManagedDiskDetails.

        The KeyVault resource id for secret (BEK).

        :return: The dek_key_vault_arm_id of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._dek_key_vault_arm_id

    @dek_key_vault_arm_id.setter
    def dek_key_vault_arm_id(self, dek_key_vault_arm_id):
        """Sets the dek_key_vault_arm_id of this A2AProtectedManagedDiskDetails.

        The KeyVault resource id for secret (BEK).

        :param dek_key_vault_arm_id: The dek_key_vault_arm_id of this A2AProtectedManagedDiskDetails.
        :type dek_key_vault_arm_id: str
        """

        self._dek_key_vault_arm_id = dek_key_vault_arm_id

    @property
    def disk_capacity_in_bytes(self):
        """Gets the disk_capacity_in_bytes of this A2AProtectedManagedDiskDetails.

        The disk capacity in bytes.

        :return: The disk_capacity_in_bytes of this A2AProtectedManagedDiskDetails.
        :rtype: int
        """
        return self._disk_capacity_in_bytes

    @disk_capacity_in_bytes.setter
    def disk_capacity_in_bytes(self, disk_capacity_in_bytes):
        """Sets the disk_capacity_in_bytes of this A2AProtectedManagedDiskDetails.

        The disk capacity in bytes.

        :param disk_capacity_in_bytes: The disk_capacity_in_bytes of this A2AProtectedManagedDiskDetails.
        :type disk_capacity_in_bytes: int
        """

        self._disk_capacity_in_bytes = disk_capacity_in_bytes

    @property
    def disk_id(self):
        """Gets the disk_id of this A2AProtectedManagedDiskDetails.

        The managed disk Arm id.

        :return: The disk_id of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._disk_id

    @disk_id.setter
    def disk_id(self, disk_id):
        """Sets the disk_id of this A2AProtectedManagedDiskDetails.

        The managed disk Arm id.

        :param disk_id: The disk_id of this A2AProtectedManagedDiskDetails.
        :type disk_id: str
        """

        self._disk_id = disk_id

    @property
    def disk_name(self):
        """Gets the disk_name of this A2AProtectedManagedDiskDetails.

        The disk name.

        :return: The disk_name of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._disk_name

    @disk_name.setter
    def disk_name(self, disk_name):
        """Sets the disk_name of this A2AProtectedManagedDiskDetails.

        The disk name.

        :param disk_name: The disk_name of this A2AProtectedManagedDiskDetails.
        :type disk_name: str
        """

        self._disk_name = disk_name

    @property
    def disk_state(self):
        """Gets the disk_state of this A2AProtectedManagedDiskDetails.

        The disk state.

        :return: The disk_state of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._disk_state

    @disk_state.setter
    def disk_state(self, disk_state):
        """Sets the disk_state of this A2AProtectedManagedDiskDetails.

        The disk state.

        :param disk_state: The disk_state of this A2AProtectedManagedDiskDetails.
        :type disk_state: str
        """

        self._disk_state = disk_state

    @property
    def disk_type(self):
        """Gets the disk_type of this A2AProtectedManagedDiskDetails.

        The type of disk.

        :return: The disk_type of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._disk_type

    @disk_type.setter
    def disk_type(self, disk_type):
        """Sets the disk_type of this A2AProtectedManagedDiskDetails.

        The type of disk.

        :param disk_type: The disk_type of this A2AProtectedManagedDiskDetails.
        :type disk_type: str
        """

        self._disk_type = disk_type

    @property
    def failover_disk_name(self):
        """Gets the failover_disk_name of this A2AProtectedManagedDiskDetails.

        The failover name for the managed disk.

        :return: The failover_disk_name of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._failover_disk_name

    @failover_disk_name.setter
    def failover_disk_name(self, failover_disk_name):
        """Sets the failover_disk_name of this A2AProtectedManagedDiskDetails.

        The failover name for the managed disk.

        :param failover_disk_name: The failover_disk_name of this A2AProtectedManagedDiskDetails.
        :type failover_disk_name: str
        """

        self._failover_disk_name = failover_disk_name

    @property
    def is_disk_encrypted(self):
        """Gets the is_disk_encrypted of this A2AProtectedManagedDiskDetails.

        A value indicating whether vm has encrypted os disk or not.

        :return: The is_disk_encrypted of this A2AProtectedManagedDiskDetails.
        :rtype: bool
        """
        return self._is_disk_encrypted

    @is_disk_encrypted.setter
    def is_disk_encrypted(self, is_disk_encrypted):
        """Sets the is_disk_encrypted of this A2AProtectedManagedDiskDetails.

        A value indicating whether vm has encrypted os disk or not.

        :param is_disk_encrypted: The is_disk_encrypted of this A2AProtectedManagedDiskDetails.
        :type is_disk_encrypted: bool
        """

        self._is_disk_encrypted = is_disk_encrypted

    @property
    def is_disk_key_encrypted(self):
        """Gets the is_disk_key_encrypted of this A2AProtectedManagedDiskDetails.

        A value indicating whether disk key got encrypted or not.

        :return: The is_disk_key_encrypted of this A2AProtectedManagedDiskDetails.
        :rtype: bool
        """
        return self._is_disk_key_encrypted

    @is_disk_key_encrypted.setter
    def is_disk_key_encrypted(self, is_disk_key_encrypted):
        """Sets the is_disk_key_encrypted of this A2AProtectedManagedDiskDetails.

        A value indicating whether disk key got encrypted or not.

        :param is_disk_key_encrypted: The is_disk_key_encrypted of this A2AProtectedManagedDiskDetails.
        :type is_disk_key_encrypted: bool
        """

        self._is_disk_key_encrypted = is_disk_key_encrypted

    @property
    def kek_key_vault_arm_id(self):
        """Gets the kek_key_vault_arm_id of this A2AProtectedManagedDiskDetails.

        The KeyVault resource id for key (KEK).

        :return: The kek_key_vault_arm_id of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._kek_key_vault_arm_id

    @kek_key_vault_arm_id.setter
    def kek_key_vault_arm_id(self, kek_key_vault_arm_id):
        """Sets the kek_key_vault_arm_id of this A2AProtectedManagedDiskDetails.

        The KeyVault resource id for key (KEK).

        :param kek_key_vault_arm_id: The kek_key_vault_arm_id of this A2AProtectedManagedDiskDetails.
        :type kek_key_vault_arm_id: str
        """

        self._kek_key_vault_arm_id = kek_key_vault_arm_id

    @property
    def key_identifier(self):
        """Gets the key_identifier of this A2AProtectedManagedDiskDetails.

        The key URL / identifier (KEK).

        :return: The key_identifier of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._key_identifier

    @key_identifier.setter
    def key_identifier(self, key_identifier):
        """Sets the key_identifier of this A2AProtectedManagedDiskDetails.

        The key URL / identifier (KEK).

        :param key_identifier: The key_identifier of this A2AProtectedManagedDiskDetails.
        :type key_identifier: str
        """

        self._key_identifier = key_identifier

    @property
    def monitoring_job_type(self):
        """Gets the monitoring_job_type of this A2AProtectedManagedDiskDetails.

        The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.

        :return: The monitoring_job_type of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._monitoring_job_type

    @monitoring_job_type.setter
    def monitoring_job_type(self, monitoring_job_type):
        """Sets the monitoring_job_type of this A2AProtectedManagedDiskDetails.

        The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.

        :param monitoring_job_type: The monitoring_job_type of this A2AProtectedManagedDiskDetails.
        :type monitoring_job_type: str
        """

        self._monitoring_job_type = monitoring_job_type

    @property
    def monitoring_percentage_completion(self):
        """Gets the monitoring_percentage_completion of this A2AProtectedManagedDiskDetails.

        The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.

        :return: The monitoring_percentage_completion of this A2AProtectedManagedDiskDetails.
        :rtype: int
        """
        return self._monitoring_percentage_completion

    @monitoring_percentage_completion.setter
    def monitoring_percentage_completion(self, monitoring_percentage_completion):
        """Sets the monitoring_percentage_completion of this A2AProtectedManagedDiskDetails.

        The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.

        :param monitoring_percentage_completion: The monitoring_percentage_completion of this A2AProtectedManagedDiskDetails.
        :type monitoring_percentage_completion: int
        """

        self._monitoring_percentage_completion = monitoring_percentage_completion

    @property
    def primary_staging_azure_storage_account_id(self):
        """Gets the primary_staging_azure_storage_account_id of this A2AProtectedManagedDiskDetails.

        The primary staging storage account.

        :return: The primary_staging_azure_storage_account_id of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._primary_staging_azure_storage_account_id

    @primary_staging_azure_storage_account_id.setter
    def primary_staging_azure_storage_account_id(self, primary_staging_azure_storage_account_id):
        """Sets the primary_staging_azure_storage_account_id of this A2AProtectedManagedDiskDetails.

        The primary staging storage account.

        :param primary_staging_azure_storage_account_id: The primary_staging_azure_storage_account_id of this A2AProtectedManagedDiskDetails.
        :type primary_staging_azure_storage_account_id: str
        """

        self._primary_staging_azure_storage_account_id = primary_staging_azure_storage_account_id

    @property
    def recovery_disk_encryption_set_id(self):
        """Gets the recovery_disk_encryption_set_id of this A2AProtectedManagedDiskDetails.

        The recovery disk encryption set Id.

        :return: The recovery_disk_encryption_set_id of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._recovery_disk_encryption_set_id

    @recovery_disk_encryption_set_id.setter
    def recovery_disk_encryption_set_id(self, recovery_disk_encryption_set_id):
        """Sets the recovery_disk_encryption_set_id of this A2AProtectedManagedDiskDetails.

        The recovery disk encryption set Id.

        :param recovery_disk_encryption_set_id: The recovery_disk_encryption_set_id of this A2AProtectedManagedDiskDetails.
        :type recovery_disk_encryption_set_id: str
        """

        self._recovery_disk_encryption_set_id = recovery_disk_encryption_set_id

    @property
    def recovery_replica_disk_account_type(self):
        """Gets the recovery_replica_disk_account_type of this A2AProtectedManagedDiskDetails.

        The replica disk type. Its an optional value and will be same as source disk type if not user provided.

        :return: The recovery_replica_disk_account_type of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._recovery_replica_disk_account_type

    @recovery_replica_disk_account_type.setter
    def recovery_replica_disk_account_type(self, recovery_replica_disk_account_type):
        """Sets the recovery_replica_disk_account_type of this A2AProtectedManagedDiskDetails.

        The replica disk type. Its an optional value and will be same as source disk type if not user provided.

        :param recovery_replica_disk_account_type: The recovery_replica_disk_account_type of this A2AProtectedManagedDiskDetails.
        :type recovery_replica_disk_account_type: str
        """

        self._recovery_replica_disk_account_type = recovery_replica_disk_account_type

    @property
    def recovery_replica_disk_id(self):
        """Gets the recovery_replica_disk_id of this A2AProtectedManagedDiskDetails.

        Recovery replica disk Arm Id.

        :return: The recovery_replica_disk_id of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._recovery_replica_disk_id

    @recovery_replica_disk_id.setter
    def recovery_replica_disk_id(self, recovery_replica_disk_id):
        """Sets the recovery_replica_disk_id of this A2AProtectedManagedDiskDetails.

        Recovery replica disk Arm Id.

        :param recovery_replica_disk_id: The recovery_replica_disk_id of this A2AProtectedManagedDiskDetails.
        :type recovery_replica_disk_id: str
        """

        self._recovery_replica_disk_id = recovery_replica_disk_id

    @property
    def recovery_resource_group_id(self):
        """Gets the recovery_resource_group_id of this A2AProtectedManagedDiskDetails.

        The recovery disk resource group Arm Id.

        :return: The recovery_resource_group_id of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._recovery_resource_group_id

    @recovery_resource_group_id.setter
    def recovery_resource_group_id(self, recovery_resource_group_id):
        """Sets the recovery_resource_group_id of this A2AProtectedManagedDiskDetails.

        The recovery disk resource group Arm Id.

        :param recovery_resource_group_id: The recovery_resource_group_id of this A2AProtectedManagedDiskDetails.
        :type recovery_resource_group_id: str
        """

        self._recovery_resource_group_id = recovery_resource_group_id

    @property
    def recovery_target_disk_account_type(self):
        """Gets the recovery_target_disk_account_type of this A2AProtectedManagedDiskDetails.

        The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.

        :return: The recovery_target_disk_account_type of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._recovery_target_disk_account_type

    @recovery_target_disk_account_type.setter
    def recovery_target_disk_account_type(self, recovery_target_disk_account_type):
        """Sets the recovery_target_disk_account_type of this A2AProtectedManagedDiskDetails.

        The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.

        :param recovery_target_disk_account_type: The recovery_target_disk_account_type of this A2AProtectedManagedDiskDetails.
        :type recovery_target_disk_account_type: str
        """

        self._recovery_target_disk_account_type = recovery_target_disk_account_type

    @property
    def recovery_target_disk_id(self):
        """Gets the recovery_target_disk_id of this A2AProtectedManagedDiskDetails.

        Recovery target disk Arm Id.

        :return: The recovery_target_disk_id of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._recovery_target_disk_id

    @recovery_target_disk_id.setter
    def recovery_target_disk_id(self, recovery_target_disk_id):
        """Sets the recovery_target_disk_id of this A2AProtectedManagedDiskDetails.

        Recovery target disk Arm Id.

        :param recovery_target_disk_id: The recovery_target_disk_id of this A2AProtectedManagedDiskDetails.
        :type recovery_target_disk_id: str
        """

        self._recovery_target_disk_id = recovery_target_disk_id

    @property
    def resync_required(self):
        """Gets the resync_required of this A2AProtectedManagedDiskDetails.

        A value indicating whether resync is required for this disk.

        :return: The resync_required of this A2AProtectedManagedDiskDetails.
        :rtype: bool
        """
        return self._resync_required

    @resync_required.setter
    def resync_required(self, resync_required):
        """Sets the resync_required of this A2AProtectedManagedDiskDetails.

        A value indicating whether resync is required for this disk.

        :param resync_required: The resync_required of this A2AProtectedManagedDiskDetails.
        :type resync_required: bool
        """

        self._resync_required = resync_required

    @property
    def secret_identifier(self):
        """Gets the secret_identifier of this A2AProtectedManagedDiskDetails.

        The secret URL / identifier (BEK).

        :return: The secret_identifier of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._secret_identifier

    @secret_identifier.setter
    def secret_identifier(self, secret_identifier):
        """Sets the secret_identifier of this A2AProtectedManagedDiskDetails.

        The secret URL / identifier (BEK).

        :param secret_identifier: The secret_identifier of this A2AProtectedManagedDiskDetails.
        :type secret_identifier: str
        """

        self._secret_identifier = secret_identifier

    @property
    def tfo_disk_name(self):
        """Gets the tfo_disk_name of this A2AProtectedManagedDiskDetails.

        The test failover name for the managed disk.

        :return: The tfo_disk_name of this A2AProtectedManagedDiskDetails.
        :rtype: str
        """
        return self._tfo_disk_name

    @tfo_disk_name.setter
    def tfo_disk_name(self, tfo_disk_name):
        """Sets the tfo_disk_name of this A2AProtectedManagedDiskDetails.

        The test failover name for the managed disk.

        :param tfo_disk_name: The tfo_disk_name of this A2AProtectedManagedDiskDetails.
        :type tfo_disk_name: str
        """

        self._tfo_disk_name = tfo_disk_name
