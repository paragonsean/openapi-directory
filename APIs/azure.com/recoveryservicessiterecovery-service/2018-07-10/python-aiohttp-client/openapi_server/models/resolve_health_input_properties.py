# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resolve_health_error import ResolveHealthError
from openapi_server import util


class ResolveHealthInputProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, health_errors: List[ResolveHealthError]=None):
        """ResolveHealthInputProperties - a model defined in OpenAPI

        :param health_errors: The health_errors of this ResolveHealthInputProperties.
        """
        self.openapi_types = {
            'health_errors': List[ResolveHealthError]
        }

        self.attribute_map = {
            'health_errors': 'healthErrors'
        }

        self._health_errors = health_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResolveHealthInputProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResolveHealthInputProperties of this ResolveHealthInputProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def health_errors(self):
        """Gets the health_errors of this ResolveHealthInputProperties.

        Health errors.

        :return: The health_errors of this ResolveHealthInputProperties.
        :rtype: List[ResolveHealthError]
        """
        return self._health_errors

    @health_errors.setter
    def health_errors(self, health_errors):
        """Sets the health_errors of this ResolveHealthInputProperties.

        Health errors.

        :param health_errors: The health_errors of this ResolveHealthInputProperties.
        :type health_errors: List[ResolveHealthError]
        """

        self._health_errors = health_errors
