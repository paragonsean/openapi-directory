# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DiskDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_size_mb: int=None, vhd_id: str=None, vhd_name: str=None, vhd_type: str=None):
        """DiskDetails - a model defined in OpenAPI

        :param max_size_mb: The max_size_mb of this DiskDetails.
        :param vhd_id: The vhd_id of this DiskDetails.
        :param vhd_name: The vhd_name of this DiskDetails.
        :param vhd_type: The vhd_type of this DiskDetails.
        """
        self.openapi_types = {
            'max_size_mb': int,
            'vhd_id': str,
            'vhd_name': str,
            'vhd_type': str
        }

        self.attribute_map = {
            'max_size_mb': 'maxSizeMB',
            'vhd_id': 'vhdId',
            'vhd_name': 'vhdName',
            'vhd_type': 'vhdType'
        }

        self._max_size_mb = max_size_mb
        self._vhd_id = vhd_id
        self._vhd_name = vhd_name
        self._vhd_type = vhd_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiskDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiskDetails of this DiskDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_size_mb(self):
        """Gets the max_size_mb of this DiskDetails.

        The hard disk max size in MB.

        :return: The max_size_mb of this DiskDetails.
        :rtype: int
        """
        return self._max_size_mb

    @max_size_mb.setter
    def max_size_mb(self, max_size_mb):
        """Sets the max_size_mb of this DiskDetails.

        The hard disk max size in MB.

        :param max_size_mb: The max_size_mb of this DiskDetails.
        :type max_size_mb: int
        """

        self._max_size_mb = max_size_mb

    @property
    def vhd_id(self):
        """Gets the vhd_id of this DiskDetails.

        The VHD Id.

        :return: The vhd_id of this DiskDetails.
        :rtype: str
        """
        return self._vhd_id

    @vhd_id.setter
    def vhd_id(self, vhd_id):
        """Sets the vhd_id of this DiskDetails.

        The VHD Id.

        :param vhd_id: The vhd_id of this DiskDetails.
        :type vhd_id: str
        """

        self._vhd_id = vhd_id

    @property
    def vhd_name(self):
        """Gets the vhd_name of this DiskDetails.

        The VHD name.

        :return: The vhd_name of this DiskDetails.
        :rtype: str
        """
        return self._vhd_name

    @vhd_name.setter
    def vhd_name(self, vhd_name):
        """Sets the vhd_name of this DiskDetails.

        The VHD name.

        :param vhd_name: The vhd_name of this DiskDetails.
        :type vhd_name: str
        """

        self._vhd_name = vhd_name

    @property
    def vhd_type(self):
        """Gets the vhd_type of this DiskDetails.

        The type of the volume.

        :return: The vhd_type of this DiskDetails.
        :rtype: str
        """
        return self._vhd_type

    @vhd_type.setter
    def vhd_type(self, vhd_type):
        """Sets the vhd_type of this DiskDetails.

        The type of the volume.

        :param vhd_type: The vhd_type of this DiskDetails.
        :type vhd_type: str
        """

        self._vhd_type = vhd_type
