# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.current_job_details import CurrentJobDetails
from openapi_server.models.health_error import HealthError
from openapi_server.models.migration_provider_specific_settings import MigrationProviderSpecificSettings
from openapi_server import util


class MigrationItemProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_operations: List[str]=None, current_job: CurrentJobDetails=None, health: str=None, health_errors: List[HealthError]=None, machine_name: str=None, migration_state: str=None, migration_state_description: str=None, policy_friendly_name: str=None, policy_id: str=None, provider_specific_details: MigrationProviderSpecificSettings=None, recovery_services_provider_id: str=None, test_migrate_state: str=None, test_migrate_state_description: str=None):
        """MigrationItemProperties - a model defined in OpenAPI

        :param allowed_operations: The allowed_operations of this MigrationItemProperties.
        :param current_job: The current_job of this MigrationItemProperties.
        :param health: The health of this MigrationItemProperties.
        :param health_errors: The health_errors of this MigrationItemProperties.
        :param machine_name: The machine_name of this MigrationItemProperties.
        :param migration_state: The migration_state of this MigrationItemProperties.
        :param migration_state_description: The migration_state_description of this MigrationItemProperties.
        :param policy_friendly_name: The policy_friendly_name of this MigrationItemProperties.
        :param policy_id: The policy_id of this MigrationItemProperties.
        :param provider_specific_details: The provider_specific_details of this MigrationItemProperties.
        :param recovery_services_provider_id: The recovery_services_provider_id of this MigrationItemProperties.
        :param test_migrate_state: The test_migrate_state of this MigrationItemProperties.
        :param test_migrate_state_description: The test_migrate_state_description of this MigrationItemProperties.
        """
        self.openapi_types = {
            'allowed_operations': List[str],
            'current_job': CurrentJobDetails,
            'health': str,
            'health_errors': List[HealthError],
            'machine_name': str,
            'migration_state': str,
            'migration_state_description': str,
            'policy_friendly_name': str,
            'policy_id': str,
            'provider_specific_details': MigrationProviderSpecificSettings,
            'recovery_services_provider_id': str,
            'test_migrate_state': str,
            'test_migrate_state_description': str
        }

        self.attribute_map = {
            'allowed_operations': 'allowedOperations',
            'current_job': 'currentJob',
            'health': 'health',
            'health_errors': 'healthErrors',
            'machine_name': 'machineName',
            'migration_state': 'migrationState',
            'migration_state_description': 'migrationStateDescription',
            'policy_friendly_name': 'policyFriendlyName',
            'policy_id': 'policyId',
            'provider_specific_details': 'providerSpecificDetails',
            'recovery_services_provider_id': 'recoveryServicesProviderId',
            'test_migrate_state': 'testMigrateState',
            'test_migrate_state_description': 'testMigrateStateDescription'
        }

        self._allowed_operations = allowed_operations
        self._current_job = current_job
        self._health = health
        self._health_errors = health_errors
        self._machine_name = machine_name
        self._migration_state = migration_state
        self._migration_state_description = migration_state_description
        self._policy_friendly_name = policy_friendly_name
        self._policy_id = policy_id
        self._provider_specific_details = provider_specific_details
        self._recovery_services_provider_id = recovery_services_provider_id
        self._test_migrate_state = test_migrate_state
        self._test_migrate_state_description = test_migrate_state_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MigrationItemProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MigrationItemProperties of this MigrationItemProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_operations(self):
        """Gets the allowed_operations of this MigrationItemProperties.

        The allowed operations on the migration item, based on the current migration state of the item.

        :return: The allowed_operations of this MigrationItemProperties.
        :rtype: List[str]
        """
        return self._allowed_operations

    @allowed_operations.setter
    def allowed_operations(self, allowed_operations):
        """Sets the allowed_operations of this MigrationItemProperties.

        The allowed operations on the migration item, based on the current migration state of the item.

        :param allowed_operations: The allowed_operations of this MigrationItemProperties.
        :type allowed_operations: List[str]
        """
        allowed_values = ["DisableMigration", "TestMigrate", "TestMigrateCleanup", "Migrate"]  # noqa: E501
        if not set(allowed_operations).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `allowed_operations` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(allowed_operations) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._allowed_operations = allowed_operations

    @property
    def current_job(self):
        """Gets the current_job of this MigrationItemProperties.


        :return: The current_job of this MigrationItemProperties.
        :rtype: CurrentJobDetails
        """
        return self._current_job

    @current_job.setter
    def current_job(self, current_job):
        """Sets the current_job of this MigrationItemProperties.


        :param current_job: The current_job of this MigrationItemProperties.
        :type current_job: CurrentJobDetails
        """

        self._current_job = current_job

    @property
    def health(self):
        """Gets the health of this MigrationItemProperties.

        The consolidated health.

        :return: The health of this MigrationItemProperties.
        :rtype: str
        """
        return self._health

    @health.setter
    def health(self, health):
        """Sets the health of this MigrationItemProperties.

        The consolidated health.

        :param health: The health of this MigrationItemProperties.
        :type health: str
        """

        self._health = health

    @property
    def health_errors(self):
        """Gets the health_errors of this MigrationItemProperties.

        The list of health errors.

        :return: The health_errors of this MigrationItemProperties.
        :rtype: List[HealthError]
        """
        return self._health_errors

    @health_errors.setter
    def health_errors(self, health_errors):
        """Sets the health_errors of this MigrationItemProperties.

        The list of health errors.

        :param health_errors: The health_errors of this MigrationItemProperties.
        :type health_errors: List[HealthError]
        """

        self._health_errors = health_errors

    @property
    def machine_name(self):
        """Gets the machine_name of this MigrationItemProperties.

        The on-premise virtual machine name.

        :return: The machine_name of this MigrationItemProperties.
        :rtype: str
        """
        return self._machine_name

    @machine_name.setter
    def machine_name(self, machine_name):
        """Sets the machine_name of this MigrationItemProperties.

        The on-premise virtual machine name.

        :param machine_name: The machine_name of this MigrationItemProperties.
        :type machine_name: str
        """

        self._machine_name = machine_name

    @property
    def migration_state(self):
        """Gets the migration_state of this MigrationItemProperties.

        The migration status.

        :return: The migration_state of this MigrationItemProperties.
        :rtype: str
        """
        return self._migration_state

    @migration_state.setter
    def migration_state(self, migration_state):
        """Sets the migration_state of this MigrationItemProperties.

        The migration status.

        :param migration_state: The migration_state of this MigrationItemProperties.
        :type migration_state: str
        """
        allowed_values = ["None", "EnableMigrationInProgress", "EnableMigrationFailed", "DisableMigrationInProgress", "DisableMigrationFailed", "InitialSeedingInProgress", "InitialSeedingFailed", "Replicating", "MigrationInProgress", "MigrationSucceeded", "MigrationFailed"]  # noqa: E501
        if migration_state not in allowed_values:
            raise ValueError(
                "Invalid value for `migration_state` ({0}), must be one of {1}"
                .format(migration_state, allowed_values)
            )

        self._migration_state = migration_state

    @property
    def migration_state_description(self):
        """Gets the migration_state_description of this MigrationItemProperties.

        The migration state description.

        :return: The migration_state_description of this MigrationItemProperties.
        :rtype: str
        """
        return self._migration_state_description

    @migration_state_description.setter
    def migration_state_description(self, migration_state_description):
        """Sets the migration_state_description of this MigrationItemProperties.

        The migration state description.

        :param migration_state_description: The migration_state_description of this MigrationItemProperties.
        :type migration_state_description: str
        """

        self._migration_state_description = migration_state_description

    @property
    def policy_friendly_name(self):
        """Gets the policy_friendly_name of this MigrationItemProperties.

        The name of policy governing this item.

        :return: The policy_friendly_name of this MigrationItemProperties.
        :rtype: str
        """
        return self._policy_friendly_name

    @policy_friendly_name.setter
    def policy_friendly_name(self, policy_friendly_name):
        """Sets the policy_friendly_name of this MigrationItemProperties.

        The name of policy governing this item.

        :param policy_friendly_name: The policy_friendly_name of this MigrationItemProperties.
        :type policy_friendly_name: str
        """

        self._policy_friendly_name = policy_friendly_name

    @property
    def policy_id(self):
        """Gets the policy_id of this MigrationItemProperties.

        The ARM Id of policy governing this item.

        :return: The policy_id of this MigrationItemProperties.
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """Sets the policy_id of this MigrationItemProperties.

        The ARM Id of policy governing this item.

        :param policy_id: The policy_id of this MigrationItemProperties.
        :type policy_id: str
        """

        self._policy_id = policy_id

    @property
    def provider_specific_details(self):
        """Gets the provider_specific_details of this MigrationItemProperties.


        :return: The provider_specific_details of this MigrationItemProperties.
        :rtype: MigrationProviderSpecificSettings
        """
        return self._provider_specific_details

    @provider_specific_details.setter
    def provider_specific_details(self, provider_specific_details):
        """Sets the provider_specific_details of this MigrationItemProperties.


        :param provider_specific_details: The provider_specific_details of this MigrationItemProperties.
        :type provider_specific_details: MigrationProviderSpecificSettings
        """

        self._provider_specific_details = provider_specific_details

    @property
    def recovery_services_provider_id(self):
        """Gets the recovery_services_provider_id of this MigrationItemProperties.

        The recovery services provider ARM Id.

        :return: The recovery_services_provider_id of this MigrationItemProperties.
        :rtype: str
        """
        return self._recovery_services_provider_id

    @recovery_services_provider_id.setter
    def recovery_services_provider_id(self, recovery_services_provider_id):
        """Sets the recovery_services_provider_id of this MigrationItemProperties.

        The recovery services provider ARM Id.

        :param recovery_services_provider_id: The recovery_services_provider_id of this MigrationItemProperties.
        :type recovery_services_provider_id: str
        """

        self._recovery_services_provider_id = recovery_services_provider_id

    @property
    def test_migrate_state(self):
        """Gets the test_migrate_state of this MigrationItemProperties.

        The test migrate state.

        :return: The test_migrate_state of this MigrationItemProperties.
        :rtype: str
        """
        return self._test_migrate_state

    @test_migrate_state.setter
    def test_migrate_state(self, test_migrate_state):
        """Sets the test_migrate_state of this MigrationItemProperties.

        The test migrate state.

        :param test_migrate_state: The test_migrate_state of this MigrationItemProperties.
        :type test_migrate_state: str
        """
        allowed_values = ["None", "TestMigrationInProgress", "TestMigrationSucceeded", "TestMigrationFailed", "TestMigrationCleanupInProgress"]  # noqa: E501
        if test_migrate_state not in allowed_values:
            raise ValueError(
                "Invalid value for `test_migrate_state` ({0}), must be one of {1}"
                .format(test_migrate_state, allowed_values)
            )

        self._test_migrate_state = test_migrate_state

    @property
    def test_migrate_state_description(self):
        """Gets the test_migrate_state_description of this MigrationItemProperties.

        The test migrate state description.

        :return: The test_migrate_state_description of this MigrationItemProperties.
        :rtype: str
        """
        return self._test_migrate_state_description

    @test_migrate_state_description.setter
    def test_migrate_state_description(self, test_migrate_state_description):
        """Sets the test_migrate_state_description of this MigrationItemProperties.

        The test migrate state description.

        :param test_migrate_state_description: The test_migrate_state_description of this MigrationItemProperties.
        :type test_migrate_state_description: str
        """

        self._test_migrate_state_description = test_migrate_state_description
