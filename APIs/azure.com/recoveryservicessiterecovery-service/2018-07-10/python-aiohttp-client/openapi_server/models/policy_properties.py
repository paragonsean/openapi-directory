# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy_provider_specific_details import PolicyProviderSpecificDetails
from openapi_server import util


class PolicyProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, friendly_name: str=None, provider_specific_details: PolicyProviderSpecificDetails=None):
        """PolicyProperties - a model defined in OpenAPI

        :param friendly_name: The friendly_name of this PolicyProperties.
        :param provider_specific_details: The provider_specific_details of this PolicyProperties.
        """
        self.openapi_types = {
            'friendly_name': str,
            'provider_specific_details': PolicyProviderSpecificDetails
        }

        self.attribute_map = {
            'friendly_name': 'friendlyName',
            'provider_specific_details': 'providerSpecificDetails'
        }

        self._friendly_name = friendly_name
        self._provider_specific_details = provider_specific_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicyProperties of this PolicyProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def friendly_name(self):
        """Gets the friendly_name of this PolicyProperties.

        The FriendlyName.

        :return: The friendly_name of this PolicyProperties.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this PolicyProperties.

        The FriendlyName.

        :param friendly_name: The friendly_name of this PolicyProperties.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def provider_specific_details(self):
        """Gets the provider_specific_details of this PolicyProperties.


        :return: The provider_specific_details of this PolicyProperties.
        :rtype: PolicyProviderSpecificDetails
        """
        return self._provider_specific_details

    @provider_specific_details.setter
    def provider_specific_details(self, provider_specific_details):
        """Sets the provider_specific_details of this PolicyProperties.


        :param provider_specific_details: The provider_specific_details of this PolicyProperties.
        :type provider_specific_details: PolicyProviderSpecificDetails
        """

        self._provider_specific_details = provider_specific_details
