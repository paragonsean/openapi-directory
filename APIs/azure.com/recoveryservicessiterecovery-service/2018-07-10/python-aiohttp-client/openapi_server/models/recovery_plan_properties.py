# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.current_scenario_details import CurrentScenarioDetails
from openapi_server.models.recovery_plan_group import RecoveryPlanGroup
from openapi_server import util


class RecoveryPlanProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_operations: List[str]=None, current_scenario: CurrentScenarioDetails=None, current_scenario_status: str=None, current_scenario_status_description: str=None, failover_deployment_model: str=None, friendly_name: str=None, groups: List[RecoveryPlanGroup]=None, last_planned_failover_time: datetime=None, last_test_failover_time: datetime=None, last_unplanned_failover_time: datetime=None, primary_fabric_friendly_name: str=None, primary_fabric_id: str=None, recovery_fabric_friendly_name: str=None, recovery_fabric_id: str=None, replication_providers: List[str]=None):
        """RecoveryPlanProperties - a model defined in OpenAPI

        :param allowed_operations: The allowed_operations of this RecoveryPlanProperties.
        :param current_scenario: The current_scenario of this RecoveryPlanProperties.
        :param current_scenario_status: The current_scenario_status of this RecoveryPlanProperties.
        :param current_scenario_status_description: The current_scenario_status_description of this RecoveryPlanProperties.
        :param failover_deployment_model: The failover_deployment_model of this RecoveryPlanProperties.
        :param friendly_name: The friendly_name of this RecoveryPlanProperties.
        :param groups: The groups of this RecoveryPlanProperties.
        :param last_planned_failover_time: The last_planned_failover_time of this RecoveryPlanProperties.
        :param last_test_failover_time: The last_test_failover_time of this RecoveryPlanProperties.
        :param last_unplanned_failover_time: The last_unplanned_failover_time of this RecoveryPlanProperties.
        :param primary_fabric_friendly_name: The primary_fabric_friendly_name of this RecoveryPlanProperties.
        :param primary_fabric_id: The primary_fabric_id of this RecoveryPlanProperties.
        :param recovery_fabric_friendly_name: The recovery_fabric_friendly_name of this RecoveryPlanProperties.
        :param recovery_fabric_id: The recovery_fabric_id of this RecoveryPlanProperties.
        :param replication_providers: The replication_providers of this RecoveryPlanProperties.
        """
        self.openapi_types = {
            'allowed_operations': List[str],
            'current_scenario': CurrentScenarioDetails,
            'current_scenario_status': str,
            'current_scenario_status_description': str,
            'failover_deployment_model': str,
            'friendly_name': str,
            'groups': List[RecoveryPlanGroup],
            'last_planned_failover_time': datetime,
            'last_test_failover_time': datetime,
            'last_unplanned_failover_time': datetime,
            'primary_fabric_friendly_name': str,
            'primary_fabric_id': str,
            'recovery_fabric_friendly_name': str,
            'recovery_fabric_id': str,
            'replication_providers': List[str]
        }

        self.attribute_map = {
            'allowed_operations': 'allowedOperations',
            'current_scenario': 'currentScenario',
            'current_scenario_status': 'currentScenarioStatus',
            'current_scenario_status_description': 'currentScenarioStatusDescription',
            'failover_deployment_model': 'failoverDeploymentModel',
            'friendly_name': 'friendlyName',
            'groups': 'groups',
            'last_planned_failover_time': 'lastPlannedFailoverTime',
            'last_test_failover_time': 'lastTestFailoverTime',
            'last_unplanned_failover_time': 'lastUnplannedFailoverTime',
            'primary_fabric_friendly_name': 'primaryFabricFriendlyName',
            'primary_fabric_id': 'primaryFabricId',
            'recovery_fabric_friendly_name': 'recoveryFabricFriendlyName',
            'recovery_fabric_id': 'recoveryFabricId',
            'replication_providers': 'replicationProviders'
        }

        self._allowed_operations = allowed_operations
        self._current_scenario = current_scenario
        self._current_scenario_status = current_scenario_status
        self._current_scenario_status_description = current_scenario_status_description
        self._failover_deployment_model = failover_deployment_model
        self._friendly_name = friendly_name
        self._groups = groups
        self._last_planned_failover_time = last_planned_failover_time
        self._last_test_failover_time = last_test_failover_time
        self._last_unplanned_failover_time = last_unplanned_failover_time
        self._primary_fabric_friendly_name = primary_fabric_friendly_name
        self._primary_fabric_id = primary_fabric_id
        self._recovery_fabric_friendly_name = recovery_fabric_friendly_name
        self._recovery_fabric_id = recovery_fabric_id
        self._replication_providers = replication_providers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecoveryPlanProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecoveryPlanProperties of this RecoveryPlanProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_operations(self):
        """Gets the allowed_operations of this RecoveryPlanProperties.

        The list of allowed operations.

        :return: The allowed_operations of this RecoveryPlanProperties.
        :rtype: List[str]
        """
        return self._allowed_operations

    @allowed_operations.setter
    def allowed_operations(self, allowed_operations):
        """Sets the allowed_operations of this RecoveryPlanProperties.

        The list of allowed operations.

        :param allowed_operations: The allowed_operations of this RecoveryPlanProperties.
        :type allowed_operations: List[str]
        """

        self._allowed_operations = allowed_operations

    @property
    def current_scenario(self):
        """Gets the current_scenario of this RecoveryPlanProperties.


        :return: The current_scenario of this RecoveryPlanProperties.
        :rtype: CurrentScenarioDetails
        """
        return self._current_scenario

    @current_scenario.setter
    def current_scenario(self, current_scenario):
        """Sets the current_scenario of this RecoveryPlanProperties.


        :param current_scenario: The current_scenario of this RecoveryPlanProperties.
        :type current_scenario: CurrentScenarioDetails
        """

        self._current_scenario = current_scenario

    @property
    def current_scenario_status(self):
        """Gets the current_scenario_status of this RecoveryPlanProperties.

        The recovery plan status.

        :return: The current_scenario_status of this RecoveryPlanProperties.
        :rtype: str
        """
        return self._current_scenario_status

    @current_scenario_status.setter
    def current_scenario_status(self, current_scenario_status):
        """Sets the current_scenario_status of this RecoveryPlanProperties.

        The recovery plan status.

        :param current_scenario_status: The current_scenario_status of this RecoveryPlanProperties.
        :type current_scenario_status: str
        """

        self._current_scenario_status = current_scenario_status

    @property
    def current_scenario_status_description(self):
        """Gets the current_scenario_status_description of this RecoveryPlanProperties.

        The recovery plan status description.

        :return: The current_scenario_status_description of this RecoveryPlanProperties.
        :rtype: str
        """
        return self._current_scenario_status_description

    @current_scenario_status_description.setter
    def current_scenario_status_description(self, current_scenario_status_description):
        """Sets the current_scenario_status_description of this RecoveryPlanProperties.

        The recovery plan status description.

        :param current_scenario_status_description: The current_scenario_status_description of this RecoveryPlanProperties.
        :type current_scenario_status_description: str
        """

        self._current_scenario_status_description = current_scenario_status_description

    @property
    def failover_deployment_model(self):
        """Gets the failover_deployment_model of this RecoveryPlanProperties.

        The failover deployment model.

        :return: The failover_deployment_model of this RecoveryPlanProperties.
        :rtype: str
        """
        return self._failover_deployment_model

    @failover_deployment_model.setter
    def failover_deployment_model(self, failover_deployment_model):
        """Sets the failover_deployment_model of this RecoveryPlanProperties.

        The failover deployment model.

        :param failover_deployment_model: The failover_deployment_model of this RecoveryPlanProperties.
        :type failover_deployment_model: str
        """

        self._failover_deployment_model = failover_deployment_model

    @property
    def friendly_name(self):
        """Gets the friendly_name of this RecoveryPlanProperties.

        The friendly name.

        :return: The friendly_name of this RecoveryPlanProperties.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this RecoveryPlanProperties.

        The friendly name.

        :param friendly_name: The friendly_name of this RecoveryPlanProperties.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def groups(self):
        """Gets the groups of this RecoveryPlanProperties.

        The recovery plan groups.

        :return: The groups of this RecoveryPlanProperties.
        :rtype: List[RecoveryPlanGroup]
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this RecoveryPlanProperties.

        The recovery plan groups.

        :param groups: The groups of this RecoveryPlanProperties.
        :type groups: List[RecoveryPlanGroup]
        """

        self._groups = groups

    @property
    def last_planned_failover_time(self):
        """Gets the last_planned_failover_time of this RecoveryPlanProperties.

        The start time of the last planned failover.

        :return: The last_planned_failover_time of this RecoveryPlanProperties.
        :rtype: datetime
        """
        return self._last_planned_failover_time

    @last_planned_failover_time.setter
    def last_planned_failover_time(self, last_planned_failover_time):
        """Sets the last_planned_failover_time of this RecoveryPlanProperties.

        The start time of the last planned failover.

        :param last_planned_failover_time: The last_planned_failover_time of this RecoveryPlanProperties.
        :type last_planned_failover_time: datetime
        """

        self._last_planned_failover_time = last_planned_failover_time

    @property
    def last_test_failover_time(self):
        """Gets the last_test_failover_time of this RecoveryPlanProperties.

        The start time of the last test failover.

        :return: The last_test_failover_time of this RecoveryPlanProperties.
        :rtype: datetime
        """
        return self._last_test_failover_time

    @last_test_failover_time.setter
    def last_test_failover_time(self, last_test_failover_time):
        """Sets the last_test_failover_time of this RecoveryPlanProperties.

        The start time of the last test failover.

        :param last_test_failover_time: The last_test_failover_time of this RecoveryPlanProperties.
        :type last_test_failover_time: datetime
        """

        self._last_test_failover_time = last_test_failover_time

    @property
    def last_unplanned_failover_time(self):
        """Gets the last_unplanned_failover_time of this RecoveryPlanProperties.

        The start time of the last unplanned failover.

        :return: The last_unplanned_failover_time of this RecoveryPlanProperties.
        :rtype: datetime
        """
        return self._last_unplanned_failover_time

    @last_unplanned_failover_time.setter
    def last_unplanned_failover_time(self, last_unplanned_failover_time):
        """Sets the last_unplanned_failover_time of this RecoveryPlanProperties.

        The start time of the last unplanned failover.

        :param last_unplanned_failover_time: The last_unplanned_failover_time of this RecoveryPlanProperties.
        :type last_unplanned_failover_time: datetime
        """

        self._last_unplanned_failover_time = last_unplanned_failover_time

    @property
    def primary_fabric_friendly_name(self):
        """Gets the primary_fabric_friendly_name of this RecoveryPlanProperties.

        The primary fabric friendly name.

        :return: The primary_fabric_friendly_name of this RecoveryPlanProperties.
        :rtype: str
        """
        return self._primary_fabric_friendly_name

    @primary_fabric_friendly_name.setter
    def primary_fabric_friendly_name(self, primary_fabric_friendly_name):
        """Sets the primary_fabric_friendly_name of this RecoveryPlanProperties.

        The primary fabric friendly name.

        :param primary_fabric_friendly_name: The primary_fabric_friendly_name of this RecoveryPlanProperties.
        :type primary_fabric_friendly_name: str
        """

        self._primary_fabric_friendly_name = primary_fabric_friendly_name

    @property
    def primary_fabric_id(self):
        """Gets the primary_fabric_id of this RecoveryPlanProperties.

        The primary fabric Id.

        :return: The primary_fabric_id of this RecoveryPlanProperties.
        :rtype: str
        """
        return self._primary_fabric_id

    @primary_fabric_id.setter
    def primary_fabric_id(self, primary_fabric_id):
        """Sets the primary_fabric_id of this RecoveryPlanProperties.

        The primary fabric Id.

        :param primary_fabric_id: The primary_fabric_id of this RecoveryPlanProperties.
        :type primary_fabric_id: str
        """

        self._primary_fabric_id = primary_fabric_id

    @property
    def recovery_fabric_friendly_name(self):
        """Gets the recovery_fabric_friendly_name of this RecoveryPlanProperties.

        The recovery fabric friendly name.

        :return: The recovery_fabric_friendly_name of this RecoveryPlanProperties.
        :rtype: str
        """
        return self._recovery_fabric_friendly_name

    @recovery_fabric_friendly_name.setter
    def recovery_fabric_friendly_name(self, recovery_fabric_friendly_name):
        """Sets the recovery_fabric_friendly_name of this RecoveryPlanProperties.

        The recovery fabric friendly name.

        :param recovery_fabric_friendly_name: The recovery_fabric_friendly_name of this RecoveryPlanProperties.
        :type recovery_fabric_friendly_name: str
        """

        self._recovery_fabric_friendly_name = recovery_fabric_friendly_name

    @property
    def recovery_fabric_id(self):
        """Gets the recovery_fabric_id of this RecoveryPlanProperties.

        The recovery fabric Id.

        :return: The recovery_fabric_id of this RecoveryPlanProperties.
        :rtype: str
        """
        return self._recovery_fabric_id

    @recovery_fabric_id.setter
    def recovery_fabric_id(self, recovery_fabric_id):
        """Sets the recovery_fabric_id of this RecoveryPlanProperties.

        The recovery fabric Id.

        :param recovery_fabric_id: The recovery_fabric_id of this RecoveryPlanProperties.
        :type recovery_fabric_id: str
        """

        self._recovery_fabric_id = recovery_fabric_id

    @property
    def replication_providers(self):
        """Gets the replication_providers of this RecoveryPlanProperties.

        The list of replication providers.

        :return: The replication_providers of this RecoveryPlanProperties.
        :rtype: List[str]
        """
        return self._replication_providers

    @replication_providers.setter
    def replication_providers(self, replication_providers):
        """Sets the replication_providers of this RecoveryPlanProperties.

        The list of replication providers.

        :param replication_providers: The replication_providers of this RecoveryPlanProperties.
        :type replication_providers: List[str]
        """

        self._replication_providers = replication_providers
