# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InMageAzureV2DiskInputDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk_encryption_set_id: str=None, disk_id: str=None, disk_type: str=None, log_storage_account_id: str=None):
        """InMageAzureV2DiskInputDetails - a model defined in OpenAPI

        :param disk_encryption_set_id: The disk_encryption_set_id of this InMageAzureV2DiskInputDetails.
        :param disk_id: The disk_id of this InMageAzureV2DiskInputDetails.
        :param disk_type: The disk_type of this InMageAzureV2DiskInputDetails.
        :param log_storage_account_id: The log_storage_account_id of this InMageAzureV2DiskInputDetails.
        """
        self.openapi_types = {
            'disk_encryption_set_id': str,
            'disk_id': str,
            'disk_type': str,
            'log_storage_account_id': str
        }

        self.attribute_map = {
            'disk_encryption_set_id': 'diskEncryptionSetId',
            'disk_id': 'diskId',
            'disk_type': 'diskType',
            'log_storage_account_id': 'logStorageAccountId'
        }

        self._disk_encryption_set_id = disk_encryption_set_id
        self._disk_id = disk_id
        self._disk_type = disk_type
        self._log_storage_account_id = log_storage_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InMageAzureV2DiskInputDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InMageAzureV2DiskInputDetails of this InMageAzureV2DiskInputDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk_encryption_set_id(self):
        """Gets the disk_encryption_set_id of this InMageAzureV2DiskInputDetails.

        The DiskEncryptionSet ARM ID.

        :return: The disk_encryption_set_id of this InMageAzureV2DiskInputDetails.
        :rtype: str
        """
        return self._disk_encryption_set_id

    @disk_encryption_set_id.setter
    def disk_encryption_set_id(self, disk_encryption_set_id):
        """Sets the disk_encryption_set_id of this InMageAzureV2DiskInputDetails.

        The DiskEncryptionSet ARM ID.

        :param disk_encryption_set_id: The disk_encryption_set_id of this InMageAzureV2DiskInputDetails.
        :type disk_encryption_set_id: str
        """

        self._disk_encryption_set_id = disk_encryption_set_id

    @property
    def disk_id(self):
        """Gets the disk_id of this InMageAzureV2DiskInputDetails.

        The DiskId.

        :return: The disk_id of this InMageAzureV2DiskInputDetails.
        :rtype: str
        """
        return self._disk_id

    @disk_id.setter
    def disk_id(self, disk_id):
        """Sets the disk_id of this InMageAzureV2DiskInputDetails.

        The DiskId.

        :param disk_id: The disk_id of this InMageAzureV2DiskInputDetails.
        :type disk_id: str
        """

        self._disk_id = disk_id

    @property
    def disk_type(self):
        """Gets the disk_type of this InMageAzureV2DiskInputDetails.

        The DiskType.

        :return: The disk_type of this InMageAzureV2DiskInputDetails.
        :rtype: str
        """
        return self._disk_type

    @disk_type.setter
    def disk_type(self, disk_type):
        """Sets the disk_type of this InMageAzureV2DiskInputDetails.

        The DiskType.

        :param disk_type: The disk_type of this InMageAzureV2DiskInputDetails.
        :type disk_type: str
        """
        allowed_values = ["Standard_LRS", "Premium_LRS", "StandardSSD_LRS"]  # noqa: E501
        if disk_type not in allowed_values:
            raise ValueError(
                "Invalid value for `disk_type` ({0}), must be one of {1}"
                .format(disk_type, allowed_values)
            )

        self._disk_type = disk_type

    @property
    def log_storage_account_id(self):
        """Gets the log_storage_account_id of this InMageAzureV2DiskInputDetails.

        The LogStorageAccountId.

        :return: The log_storage_account_id of this InMageAzureV2DiskInputDetails.
        :rtype: str
        """
        return self._log_storage_account_id

    @log_storage_account_id.setter
    def log_storage_account_id(self, log_storage_account_id):
        """Sets the log_storage_account_id of this InMageAzureV2DiskInputDetails.

        The LogStorageAccountId.

        :param log_storage_account_id: The log_storage_account_id of this InMageAzureV2DiskInputDetails.
        :type log_storage_account_id: str
        """

        self._log_storage_account_id = log_storage_account_id
