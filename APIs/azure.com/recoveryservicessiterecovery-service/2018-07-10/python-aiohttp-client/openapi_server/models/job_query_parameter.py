# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobQueryParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, affected_object_types: str=None, end_time: str=None, fabric_id: str=None, job_status: str=None, start_time: str=None):
        """JobQueryParameter - a model defined in OpenAPI

        :param affected_object_types: The affected_object_types of this JobQueryParameter.
        :param end_time: The end_time of this JobQueryParameter.
        :param fabric_id: The fabric_id of this JobQueryParameter.
        :param job_status: The job_status of this JobQueryParameter.
        :param start_time: The start_time of this JobQueryParameter.
        """
        self.openapi_types = {
            'affected_object_types': str,
            'end_time': str,
            'fabric_id': str,
            'job_status': str,
            'start_time': str
        }

        self.attribute_map = {
            'affected_object_types': 'affectedObjectTypes',
            'end_time': 'endTime',
            'fabric_id': 'fabricId',
            'job_status': 'jobStatus',
            'start_time': 'startTime'
        }

        self._affected_object_types = affected_object_types
        self._end_time = end_time
        self._fabric_id = fabric_id
        self._job_status = job_status
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobQueryParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobQueryParameter of this JobQueryParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def affected_object_types(self):
        """Gets the affected_object_types of this JobQueryParameter.

        The type of objects.

        :return: The affected_object_types of this JobQueryParameter.
        :rtype: str
        """
        return self._affected_object_types

    @affected_object_types.setter
    def affected_object_types(self, affected_object_types):
        """Sets the affected_object_types of this JobQueryParameter.

        The type of objects.

        :param affected_object_types: The affected_object_types of this JobQueryParameter.
        :type affected_object_types: str
        """

        self._affected_object_types = affected_object_types

    @property
    def end_time(self):
        """Gets the end_time of this JobQueryParameter.

        Date time to get jobs up to.

        :return: The end_time of this JobQueryParameter.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this JobQueryParameter.

        Date time to get jobs up to.

        :param end_time: The end_time of this JobQueryParameter.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def fabric_id(self):
        """Gets the fabric_id of this JobQueryParameter.

        The Id of the fabric to search jobs under.

        :return: The fabric_id of this JobQueryParameter.
        :rtype: str
        """
        return self._fabric_id

    @fabric_id.setter
    def fabric_id(self, fabric_id):
        """Sets the fabric_id of this JobQueryParameter.

        The Id of the fabric to search jobs under.

        :param fabric_id: The fabric_id of this JobQueryParameter.
        :type fabric_id: str
        """

        self._fabric_id = fabric_id

    @property
    def job_status(self):
        """Gets the job_status of this JobQueryParameter.

        The states of the job to be filtered can be in.

        :return: The job_status of this JobQueryParameter.
        :rtype: str
        """
        return self._job_status

    @job_status.setter
    def job_status(self, job_status):
        """Sets the job_status of this JobQueryParameter.

        The states of the job to be filtered can be in.

        :param job_status: The job_status of this JobQueryParameter.
        :type job_status: str
        """

        self._job_status = job_status

    @property
    def start_time(self):
        """Gets the start_time of this JobQueryParameter.

        Date time to get jobs from.

        :return: The start_time of this JobQueryParameter.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this JobQueryParameter.

        Date time to get jobs from.

        :param start_time: The start_time of this JobQueryParameter.
        :type start_time: str
        """

        self._start_time = start_time
