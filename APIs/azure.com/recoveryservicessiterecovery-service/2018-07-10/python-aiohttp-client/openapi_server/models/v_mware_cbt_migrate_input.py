# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.migrate_provider_specific_input import MigrateProviderSpecificInput
from openapi_server import util


class VMwareCbtMigrateInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, perform_shutdown: str=None, instance_type: str=None):
        """VMwareCbtMigrateInput - a model defined in OpenAPI

        :param perform_shutdown: The perform_shutdown of this VMwareCbtMigrateInput.
        :param instance_type: The instance_type of this VMwareCbtMigrateInput.
        """
        self.openapi_types = {
            'perform_shutdown': str,
            'instance_type': str
        }

        self.attribute_map = {
            'perform_shutdown': 'performShutdown',
            'instance_type': 'instanceType'
        }

        self._perform_shutdown = perform_shutdown
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VMwareCbtMigrateInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VMwareCbtMigrateInput of this VMwareCbtMigrateInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def perform_shutdown(self):
        """Gets the perform_shutdown of this VMwareCbtMigrateInput.

        A value indicating whether VM is to be shutdown.

        :return: The perform_shutdown of this VMwareCbtMigrateInput.
        :rtype: str
        """
        return self._perform_shutdown

    @perform_shutdown.setter
    def perform_shutdown(self, perform_shutdown):
        """Sets the perform_shutdown of this VMwareCbtMigrateInput.

        A value indicating whether VM is to be shutdown.

        :param perform_shutdown: The perform_shutdown of this VMwareCbtMigrateInput.
        :type perform_shutdown: str
        """
        if perform_shutdown is None:
            raise ValueError("Invalid value for `perform_shutdown`, must not be `None`")

        self._perform_shutdown = perform_shutdown

    @property
    def instance_type(self):
        """Gets the instance_type of this VMwareCbtMigrateInput.

        The class type.

        :return: The instance_type of this VMwareCbtMigrateInput.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this VMwareCbtMigrateInput.

        The class type.

        :param instance_type: The instance_type of this VMwareCbtMigrateInput.
        :type instance_type: str
        """
        if instance_type is None:
            raise ValueError("Invalid value for `instance_type`, must not be `None`")

        self._instance_type = instance_type
