# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_mapping_fabric_specific_settings import NetworkMappingFabricSpecificSettings
from openapi_server import util


class NetworkMappingProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fabric_specific_settings: NetworkMappingFabricSpecificSettings=None, primary_fabric_friendly_name: str=None, primary_network_friendly_name: str=None, primary_network_id: str=None, recovery_fabric_arm_id: str=None, recovery_fabric_friendly_name: str=None, recovery_network_friendly_name: str=None, recovery_network_id: str=None, state: str=None):
        """NetworkMappingProperties - a model defined in OpenAPI

        :param fabric_specific_settings: The fabric_specific_settings of this NetworkMappingProperties.
        :param primary_fabric_friendly_name: The primary_fabric_friendly_name of this NetworkMappingProperties.
        :param primary_network_friendly_name: The primary_network_friendly_name of this NetworkMappingProperties.
        :param primary_network_id: The primary_network_id of this NetworkMappingProperties.
        :param recovery_fabric_arm_id: The recovery_fabric_arm_id of this NetworkMappingProperties.
        :param recovery_fabric_friendly_name: The recovery_fabric_friendly_name of this NetworkMappingProperties.
        :param recovery_network_friendly_name: The recovery_network_friendly_name of this NetworkMappingProperties.
        :param recovery_network_id: The recovery_network_id of this NetworkMappingProperties.
        :param state: The state of this NetworkMappingProperties.
        """
        self.openapi_types = {
            'fabric_specific_settings': NetworkMappingFabricSpecificSettings,
            'primary_fabric_friendly_name': str,
            'primary_network_friendly_name': str,
            'primary_network_id': str,
            'recovery_fabric_arm_id': str,
            'recovery_fabric_friendly_name': str,
            'recovery_network_friendly_name': str,
            'recovery_network_id': str,
            'state': str
        }

        self.attribute_map = {
            'fabric_specific_settings': 'fabricSpecificSettings',
            'primary_fabric_friendly_name': 'primaryFabricFriendlyName',
            'primary_network_friendly_name': 'primaryNetworkFriendlyName',
            'primary_network_id': 'primaryNetworkId',
            'recovery_fabric_arm_id': 'recoveryFabricArmId',
            'recovery_fabric_friendly_name': 'recoveryFabricFriendlyName',
            'recovery_network_friendly_name': 'recoveryNetworkFriendlyName',
            'recovery_network_id': 'recoveryNetworkId',
            'state': 'state'
        }

        self._fabric_specific_settings = fabric_specific_settings
        self._primary_fabric_friendly_name = primary_fabric_friendly_name
        self._primary_network_friendly_name = primary_network_friendly_name
        self._primary_network_id = primary_network_id
        self._recovery_fabric_arm_id = recovery_fabric_arm_id
        self._recovery_fabric_friendly_name = recovery_fabric_friendly_name
        self._recovery_network_friendly_name = recovery_network_friendly_name
        self._recovery_network_id = recovery_network_id
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkMappingProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkMappingProperties of this NetworkMappingProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fabric_specific_settings(self):
        """Gets the fabric_specific_settings of this NetworkMappingProperties.


        :return: The fabric_specific_settings of this NetworkMappingProperties.
        :rtype: NetworkMappingFabricSpecificSettings
        """
        return self._fabric_specific_settings

    @fabric_specific_settings.setter
    def fabric_specific_settings(self, fabric_specific_settings):
        """Sets the fabric_specific_settings of this NetworkMappingProperties.


        :param fabric_specific_settings: The fabric_specific_settings of this NetworkMappingProperties.
        :type fabric_specific_settings: NetworkMappingFabricSpecificSettings
        """

        self._fabric_specific_settings = fabric_specific_settings

    @property
    def primary_fabric_friendly_name(self):
        """Gets the primary_fabric_friendly_name of this NetworkMappingProperties.

        The primary fabric friendly name.

        :return: The primary_fabric_friendly_name of this NetworkMappingProperties.
        :rtype: str
        """
        return self._primary_fabric_friendly_name

    @primary_fabric_friendly_name.setter
    def primary_fabric_friendly_name(self, primary_fabric_friendly_name):
        """Sets the primary_fabric_friendly_name of this NetworkMappingProperties.

        The primary fabric friendly name.

        :param primary_fabric_friendly_name: The primary_fabric_friendly_name of this NetworkMappingProperties.
        :type primary_fabric_friendly_name: str
        """

        self._primary_fabric_friendly_name = primary_fabric_friendly_name

    @property
    def primary_network_friendly_name(self):
        """Gets the primary_network_friendly_name of this NetworkMappingProperties.

        The primary network friendly name.

        :return: The primary_network_friendly_name of this NetworkMappingProperties.
        :rtype: str
        """
        return self._primary_network_friendly_name

    @primary_network_friendly_name.setter
    def primary_network_friendly_name(self, primary_network_friendly_name):
        """Sets the primary_network_friendly_name of this NetworkMappingProperties.

        The primary network friendly name.

        :param primary_network_friendly_name: The primary_network_friendly_name of this NetworkMappingProperties.
        :type primary_network_friendly_name: str
        """

        self._primary_network_friendly_name = primary_network_friendly_name

    @property
    def primary_network_id(self):
        """Gets the primary_network_id of this NetworkMappingProperties.

        The primary network id for network mapping.

        :return: The primary_network_id of this NetworkMappingProperties.
        :rtype: str
        """
        return self._primary_network_id

    @primary_network_id.setter
    def primary_network_id(self, primary_network_id):
        """Sets the primary_network_id of this NetworkMappingProperties.

        The primary network id for network mapping.

        :param primary_network_id: The primary_network_id of this NetworkMappingProperties.
        :type primary_network_id: str
        """

        self._primary_network_id = primary_network_id

    @property
    def recovery_fabric_arm_id(self):
        """Gets the recovery_fabric_arm_id of this NetworkMappingProperties.

        The recovery fabric ARM id.

        :return: The recovery_fabric_arm_id of this NetworkMappingProperties.
        :rtype: str
        """
        return self._recovery_fabric_arm_id

    @recovery_fabric_arm_id.setter
    def recovery_fabric_arm_id(self, recovery_fabric_arm_id):
        """Sets the recovery_fabric_arm_id of this NetworkMappingProperties.

        The recovery fabric ARM id.

        :param recovery_fabric_arm_id: The recovery_fabric_arm_id of this NetworkMappingProperties.
        :type recovery_fabric_arm_id: str
        """

        self._recovery_fabric_arm_id = recovery_fabric_arm_id

    @property
    def recovery_fabric_friendly_name(self):
        """Gets the recovery_fabric_friendly_name of this NetworkMappingProperties.

        The recovery fabric friendly name.

        :return: The recovery_fabric_friendly_name of this NetworkMappingProperties.
        :rtype: str
        """
        return self._recovery_fabric_friendly_name

    @recovery_fabric_friendly_name.setter
    def recovery_fabric_friendly_name(self, recovery_fabric_friendly_name):
        """Sets the recovery_fabric_friendly_name of this NetworkMappingProperties.

        The recovery fabric friendly name.

        :param recovery_fabric_friendly_name: The recovery_fabric_friendly_name of this NetworkMappingProperties.
        :type recovery_fabric_friendly_name: str
        """

        self._recovery_fabric_friendly_name = recovery_fabric_friendly_name

    @property
    def recovery_network_friendly_name(self):
        """Gets the recovery_network_friendly_name of this NetworkMappingProperties.

        The recovery network friendly name.

        :return: The recovery_network_friendly_name of this NetworkMappingProperties.
        :rtype: str
        """
        return self._recovery_network_friendly_name

    @recovery_network_friendly_name.setter
    def recovery_network_friendly_name(self, recovery_network_friendly_name):
        """Sets the recovery_network_friendly_name of this NetworkMappingProperties.

        The recovery network friendly name.

        :param recovery_network_friendly_name: The recovery_network_friendly_name of this NetworkMappingProperties.
        :type recovery_network_friendly_name: str
        """

        self._recovery_network_friendly_name = recovery_network_friendly_name

    @property
    def recovery_network_id(self):
        """Gets the recovery_network_id of this NetworkMappingProperties.

        The recovery network id for network mapping.

        :return: The recovery_network_id of this NetworkMappingProperties.
        :rtype: str
        """
        return self._recovery_network_id

    @recovery_network_id.setter
    def recovery_network_id(self, recovery_network_id):
        """Sets the recovery_network_id of this NetworkMappingProperties.

        The recovery network id for network mapping.

        :param recovery_network_id: The recovery_network_id of this NetworkMappingProperties.
        :type recovery_network_id: str
        """

        self._recovery_network_id = recovery_network_id

    @property
    def state(self):
        """Gets the state of this NetworkMappingProperties.

        The pairing state for network mapping.

        :return: The state of this NetworkMappingProperties.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this NetworkMappingProperties.

        The pairing state for network mapping.

        :param state: The state of this NetworkMappingProperties.
        :type state: str
        """

        self._state = state
