# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fabric_specific_creation_input import FabricSpecificCreationInput
from openapi_server import util


class VMwareV2FabricCreationInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, migration_solution_id: str=None, vmware_site_id: str=None, instance_type: str=None):
        """VMwareV2FabricCreationInput - a model defined in OpenAPI

        :param migration_solution_id: The migration_solution_id of this VMwareV2FabricCreationInput.
        :param vmware_site_id: The vmware_site_id of this VMwareV2FabricCreationInput.
        :param instance_type: The instance_type of this VMwareV2FabricCreationInput.
        """
        self.openapi_types = {
            'migration_solution_id': str,
            'vmware_site_id': str,
            'instance_type': str
        }

        self.attribute_map = {
            'migration_solution_id': 'migrationSolutionId',
            'vmware_site_id': 'vmwareSiteId',
            'instance_type': 'instanceType'
        }

        self._migration_solution_id = migration_solution_id
        self._vmware_site_id = vmware_site_id
        self._instance_type = instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VMwareV2FabricCreationInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VMwareV2FabricCreationInput of this VMwareV2FabricCreationInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def migration_solution_id(self):
        """Gets the migration_solution_id of this VMwareV2FabricCreationInput.

        The ARM Id of the migration solution.

        :return: The migration_solution_id of this VMwareV2FabricCreationInput.
        :rtype: str
        """
        return self._migration_solution_id

    @migration_solution_id.setter
    def migration_solution_id(self, migration_solution_id):
        """Sets the migration_solution_id of this VMwareV2FabricCreationInput.

        The ARM Id of the migration solution.

        :param migration_solution_id: The migration_solution_id of this VMwareV2FabricCreationInput.
        :type migration_solution_id: str
        """
        if migration_solution_id is None:
            raise ValueError("Invalid value for `migration_solution_id`, must not be `None`")

        self._migration_solution_id = migration_solution_id

    @property
    def vmware_site_id(self):
        """Gets the vmware_site_id of this VMwareV2FabricCreationInput.

        The ARM Id of the VMware site.

        :return: The vmware_site_id of this VMwareV2FabricCreationInput.
        :rtype: str
        """
        return self._vmware_site_id

    @vmware_site_id.setter
    def vmware_site_id(self, vmware_site_id):
        """Sets the vmware_site_id of this VMwareV2FabricCreationInput.

        The ARM Id of the VMware site.

        :param vmware_site_id: The vmware_site_id of this VMwareV2FabricCreationInput.
        :type vmware_site_id: str
        """
        if vmware_site_id is None:
            raise ValueError("Invalid value for `vmware_site_id`, must not be `None`")

        self._vmware_site_id = vmware_site_id

    @property
    def instance_type(self):
        """Gets the instance_type of this VMwareV2FabricCreationInput.

        Gets the class type.

        :return: The instance_type of this VMwareV2FabricCreationInput.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this VMwareV2FabricCreationInput.

        Gets the class type.

        :param instance_type: The instance_type of this VMwareV2FabricCreationInput.
        :type instance_type: str
        """

        self._instance_type = instance_type
