/**
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2017-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICaptureDescription.h
 *
 * Properties to configure capture description for eventhub
 */

#ifndef OAICaptureDescription_H
#define OAICaptureDescription_H

#include <QJsonObject>

#include "OAIDestination.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestination;

class OAICaptureDescription : public OAIObject {
public:
    OAICaptureDescription();
    OAICaptureDescription(QString json);
    ~OAICaptureDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDestination getDestination() const;
    void setDestination(const OAIDestination &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getEncoding() const;
    void setEncoding(const QString &encoding);
    bool is_encoding_Set() const;
    bool is_encoding_Valid() const;

    qint32 getIntervalInSeconds() const;
    void setIntervalInSeconds(const qint32 &interval_in_seconds);
    bool is_interval_in_seconds_Set() const;
    bool is_interval_in_seconds_Valid() const;

    qint32 getSizeLimitInBytes() const;
    void setSizeLimitInBytes(const qint32 &size_limit_in_bytes);
    bool is_size_limit_in_bytes_Set() const;
    bool is_size_limit_in_bytes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDestination m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_encoding;
    bool m_encoding_isSet;
    bool m_encoding_isValid;

    qint32 m_interval_in_seconds;
    bool m_interval_in_seconds_isSet;
    bool m_interval_in_seconds_isValid;

    qint32 m_size_limit_in_bytes;
    bool m_size_limit_in_bytes_isSet;
    bool m_size_limit_in_bytes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICaptureDescription)

#endif // OAICaptureDescription_H
