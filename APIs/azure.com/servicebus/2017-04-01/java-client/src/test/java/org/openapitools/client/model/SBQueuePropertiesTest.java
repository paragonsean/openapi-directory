/*
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2017-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.EntityStatus;
import org.openapitools.client.model.MessageCountDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SBQueueProperties
 */
public class SBQueuePropertiesTest {
    private final SBQueueProperties model = new SBQueueProperties();

    /**
     * Model tests for SBQueueProperties
     */
    @Test
    public void testSBQueueProperties() {
        // TODO: test SBQueueProperties
    }

    /**
     * Test the property 'accessedAt'
     */
    @Test
    public void accessedAtTest() {
        // TODO: test accessedAt
    }

    /**
     * Test the property 'autoDeleteOnIdle'
     */
    @Test
    public void autoDeleteOnIdleTest() {
        // TODO: test autoDeleteOnIdle
    }

    /**
     * Test the property 'countDetails'
     */
    @Test
    public void countDetailsTest() {
        // TODO: test countDetails
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'deadLetteringOnMessageExpiration'
     */
    @Test
    public void deadLetteringOnMessageExpirationTest() {
        // TODO: test deadLetteringOnMessageExpiration
    }

    /**
     * Test the property 'defaultMessageTimeToLive'
     */
    @Test
    public void defaultMessageTimeToLiveTest() {
        // TODO: test defaultMessageTimeToLive
    }

    /**
     * Test the property 'duplicateDetectionHistoryTimeWindow'
     */
    @Test
    public void duplicateDetectionHistoryTimeWindowTest() {
        // TODO: test duplicateDetectionHistoryTimeWindow
    }

    /**
     * Test the property 'enableBatchedOperations'
     */
    @Test
    public void enableBatchedOperationsTest() {
        // TODO: test enableBatchedOperations
    }

    /**
     * Test the property 'enableExpress'
     */
    @Test
    public void enableExpressTest() {
        // TODO: test enableExpress
    }

    /**
     * Test the property 'enablePartitioning'
     */
    @Test
    public void enablePartitioningTest() {
        // TODO: test enablePartitioning
    }

    /**
     * Test the property 'forwardDeadLetteredMessagesTo'
     */
    @Test
    public void forwardDeadLetteredMessagesToTest() {
        // TODO: test forwardDeadLetteredMessagesTo
    }

    /**
     * Test the property 'forwardTo'
     */
    @Test
    public void forwardToTest() {
        // TODO: test forwardTo
    }

    /**
     * Test the property 'lockDuration'
     */
    @Test
    public void lockDurationTest() {
        // TODO: test lockDuration
    }

    /**
     * Test the property 'maxDeliveryCount'
     */
    @Test
    public void maxDeliveryCountTest() {
        // TODO: test maxDeliveryCount
    }

    /**
     * Test the property 'maxSizeInMegabytes'
     */
    @Test
    public void maxSizeInMegabytesTest() {
        // TODO: test maxSizeInMegabytes
    }

    /**
     * Test the property 'messageCount'
     */
    @Test
    public void messageCountTest() {
        // TODO: test messageCount
    }

    /**
     * Test the property 'requiresDuplicateDetection'
     */
    @Test
    public void requiresDuplicateDetectionTest() {
        // TODO: test requiresDuplicateDetection
    }

    /**
     * Test the property 'requiresSession'
     */
    @Test
    public void requiresSessionTest() {
        // TODO: test requiresSession
    }

    /**
     * Test the property 'sizeInBytes'
     */
    @Test
    public void sizeInBytesTest() {
        // TODO: test sizeInBytes
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

}
