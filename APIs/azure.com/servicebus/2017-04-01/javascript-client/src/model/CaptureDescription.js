/**
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2017-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Destination from './Destination';

/**
 * The CaptureDescription model module.
 * @module model/CaptureDescription
 * @version 2017-04-01
 */
class CaptureDescription {
    /**
     * Constructs a new <code>CaptureDescription</code>.
     * Properties to configure capture description for eventhub
     * @alias module:model/CaptureDescription
     */
    constructor() { 
        
        CaptureDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CaptureDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CaptureDescription} obj Optional instance to populate.
     * @return {module:model/CaptureDescription} The populated <code>CaptureDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CaptureDescription();

            if (data.hasOwnProperty('destination')) {
                obj['destination'] = Destination.constructFromObject(data['destination']);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('encoding')) {
                obj['encoding'] = ApiClient.convertToType(data['encoding'], 'String');
            }
            if (data.hasOwnProperty('intervalInSeconds')) {
                obj['intervalInSeconds'] = ApiClient.convertToType(data['intervalInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('sizeLimitInBytes')) {
                obj['sizeLimitInBytes'] = ApiClient.convertToType(data['sizeLimitInBytes'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CaptureDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CaptureDescription</code>.
     */
    static validateJSON(data) {
        // validate the optional field `destination`
        if (data['destination']) { // data not null
          Destination.validateJSON(data['destination']);
        }
        // ensure the json data is a string
        if (data['encoding'] && !(typeof data['encoding'] === 'string' || data['encoding'] instanceof String)) {
            throw new Error("Expected the field `encoding` to be a primitive type in the JSON string but got " + data['encoding']);
        }

        return true;
    }


}



/**
 * @member {module:model/Destination} destination
 */
CaptureDescription.prototype['destination'] = undefined;

/**
 * A value that indicates whether capture description is enabled. 
 * @member {Boolean} enabled
 */
CaptureDescription.prototype['enabled'] = undefined;

/**
 * Enumerates the possible values for the encoding format of capture description.
 * @member {module:model/CaptureDescription.EncodingEnum} encoding
 */
CaptureDescription.prototype['encoding'] = undefined;

/**
 * The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
 * @member {Number} intervalInSeconds
 */
CaptureDescription.prototype['intervalInSeconds'] = undefined;

/**
 * The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 and 524288000 bytes
 * @member {Number} sizeLimitInBytes
 */
CaptureDescription.prototype['sizeLimitInBytes'] = undefined;





/**
 * Allowed values for the <code>encoding</code> property.
 * @enum {String}
 * @readonly
 */
CaptureDescription['EncodingEnum'] = {

    /**
     * value: "Avro"
     * @const
     */
    "Avro": "Avro",

    /**
     * value: "AvroDeflate"
     * @const
     */
    "AvroDeflate": "AvroDeflate"
};



export default CaptureDescription;

