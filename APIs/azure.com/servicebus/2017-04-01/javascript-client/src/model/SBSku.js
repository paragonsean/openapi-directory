/**
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2017-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SBSku model module.
 * @module model/SBSku
 * @version 2017-04-01
 */
class SBSku {
    /**
     * Constructs a new <code>SBSku</code>.
     * SKU of the namespace.
     * @alias module:model/SBSku
     * @param name {module:model/SBSku.NameEnum} Name of this SKU.
     */
    constructor(name) { 
        
        SBSku.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>SBSku</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SBSku} obj Optional instance to populate.
     * @return {module:model/SBSku} The populated <code>SBSku</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SBSku();

            if (data.hasOwnProperty('capacity')) {
                obj['capacity'] = ApiClient.convertToType(data['capacity'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tier')) {
                obj['tier'] = ApiClient.convertToType(data['tier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SBSku</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SBSku</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SBSku.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['tier'] && !(typeof data['tier'] === 'string' || data['tier'] instanceof String)) {
            throw new Error("Expected the field `tier` to be a primitive type in the JSON string but got " + data['tier']);
        }

        return true;
    }


}

SBSku.RequiredProperties = ["name"];

/**
 * The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4.
 * @member {Number} capacity
 */
SBSku.prototype['capacity'] = undefined;

/**
 * Name of this SKU.
 * @member {module:model/SBSku.NameEnum} name
 */
SBSku.prototype['name'] = undefined;

/**
 * The billing tier of this particular SKU.
 * @member {module:model/SBSku.TierEnum} tier
 */
SBSku.prototype['tier'] = undefined;





/**
 * Allowed values for the <code>name</code> property.
 * @enum {String}
 * @readonly
 */
SBSku['NameEnum'] = {

    /**
     * value: "Basic"
     * @const
     */
    "Basic": "Basic",

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard",

    /**
     * value: "Premium"
     * @const
     */
    "Premium": "Premium"
};


/**
 * Allowed values for the <code>tier</code> property.
 * @enum {String}
 * @readonly
 */
SBSku['TierEnum'] = {

    /**
     * value: "Basic"
     * @const
     */
    "Basic": "Basic",

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard",

    /**
     * value: "Premium"
     * @const
     */
    "Premium": "Premium"
};



export default SBSku;

