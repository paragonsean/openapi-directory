/**
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2017-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RegenerateAccessKeyParameters model module.
 * @module model/RegenerateAccessKeyParameters
 * @version 2017-04-01
 */
class RegenerateAccessKeyParameters {
    /**
     * Constructs a new <code>RegenerateAccessKeyParameters</code>.
     * Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset.
     * @alias module:model/RegenerateAccessKeyParameters
     * @param keyType {module:model/RegenerateAccessKeyParameters.KeyTypeEnum} The access key to regenerate.
     */
    constructor(keyType) { 
        
        RegenerateAccessKeyParameters.initialize(this, keyType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, keyType) { 
        obj['keyType'] = keyType;
    }

    /**
     * Constructs a <code>RegenerateAccessKeyParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegenerateAccessKeyParameters} obj Optional instance to populate.
     * @return {module:model/RegenerateAccessKeyParameters} The populated <code>RegenerateAccessKeyParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegenerateAccessKeyParameters();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('keyType')) {
                obj['keyType'] = ApiClient.convertToType(data['keyType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegenerateAccessKeyParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegenerateAccessKeyParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RegenerateAccessKeyParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['keyType'] && !(typeof data['keyType'] === 'string' || data['keyType'] instanceof String)) {
            throw new Error("Expected the field `keyType` to be a primitive type in the JSON string but got " + data['keyType']);
        }

        return true;
    }


}

RegenerateAccessKeyParameters.RequiredProperties = ["keyType"];

/**
 * Optional, if the key value provided, is reset for KeyType value or autogenerate Key value set for keyType
 * @member {String} key
 */
RegenerateAccessKeyParameters.prototype['key'] = undefined;

/**
 * The access key to regenerate.
 * @member {module:model/RegenerateAccessKeyParameters.KeyTypeEnum} keyType
 */
RegenerateAccessKeyParameters.prototype['keyType'] = undefined;





/**
 * Allowed values for the <code>keyType</code> property.
 * @enum {String}
 * @readonly
 */
RegenerateAccessKeyParameters['KeyTypeEnum'] = {

    /**
     * value: "PrimaryKey"
     * @const
     */
    "PrimaryKey": "PrimaryKey",

    /**
     * value: "SecondaryKey"
     * @const
     */
    "SecondaryKey": "SecondaryKey"
};



export default RegenerateAccessKeyParameters;

