/**
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2017-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SBNamespaceProperties model module.
 * @module model/SBNamespaceProperties
 * @version 2017-04-01
 */
class SBNamespaceProperties {
    /**
     * Constructs a new <code>SBNamespaceProperties</code>.
     * Properties of the namespace.
     * @alias module:model/SBNamespaceProperties
     */
    constructor() { 
        
        SBNamespaceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SBNamespaceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SBNamespaceProperties} obj Optional instance to populate.
     * @return {module:model/SBNamespaceProperties} The populated <code>SBNamespaceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SBNamespaceProperties();

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('metricId')) {
                obj['metricId'] = ApiClient.convertToType(data['metricId'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('serviceBusEndpoint')) {
                obj['serviceBusEndpoint'] = ApiClient.convertToType(data['serviceBusEndpoint'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SBNamespaceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SBNamespaceProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['metricId'] && !(typeof data['metricId'] === 'string' || data['metricId'] instanceof String)) {
            throw new Error("Expected the field `metricId` to be a primitive type in the JSON string but got " + data['metricId']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['serviceBusEndpoint'] && !(typeof data['serviceBusEndpoint'] === 'string' || data['serviceBusEndpoint'] instanceof String)) {
            throw new Error("Expected the field `serviceBusEndpoint` to be a primitive type in the JSON string but got " + data['serviceBusEndpoint']);
        }

        return true;
    }


}



/**
 * The time the namespace was created.
 * @member {Date} createdAt
 */
SBNamespaceProperties.prototype['createdAt'] = undefined;

/**
 * Identifier for Azure Insights metrics
 * @member {String} metricId
 */
SBNamespaceProperties.prototype['metricId'] = undefined;

/**
 * Provisioning state of the namespace.
 * @member {String} provisioningState
 */
SBNamespaceProperties.prototype['provisioningState'] = undefined;

/**
 * Endpoint you can use to perform Service Bus operations.
 * @member {String} serviceBusEndpoint
 */
SBNamespaceProperties.prototype['serviceBusEndpoint'] = undefined;

/**
 * The time the namespace was updated.
 * @member {Date} updatedAt
 */
SBNamespaceProperties.prototype['updatedAt'] = undefined;






export default SBNamespaceProperties;

