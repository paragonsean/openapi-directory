/**
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2017-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Action model module.
 * @module model/Action
 * @version 2017-04-01
 */
class Action {
    /**
     * Constructs a new <code>Action</code>.
     * Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.
     * @alias module:model/Action
     */
    constructor() { 
        
        Action.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['requiresPreprocessing'] = true;
    }

    /**
     * Constructs a <code>Action</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Action} obj Optional instance to populate.
     * @return {module:model/Action} The populated <code>Action</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Action();

            if (data.hasOwnProperty('compatibilityLevel')) {
                obj['compatibilityLevel'] = ApiClient.convertToType(data['compatibilityLevel'], 'Number');
            }
            if (data.hasOwnProperty('requiresPreprocessing')) {
                obj['requiresPreprocessing'] = ApiClient.convertToType(data['requiresPreprocessing'], 'Boolean');
            }
            if (data.hasOwnProperty('sqlExpression')) {
                obj['sqlExpression'] = ApiClient.convertToType(data['sqlExpression'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Action</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Action</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['sqlExpression'] && !(typeof data['sqlExpression'] === 'string' || data['sqlExpression'] instanceof String)) {
            throw new Error("Expected the field `sqlExpression` to be a primitive type in the JSON string but got " + data['sqlExpression']);
        }

        return true;
    }


}



/**
 * This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
 * @member {Number} compatibilityLevel
 */
Action.prototype['compatibilityLevel'] = undefined;

/**
 * Value that indicates whether the rule action requires preprocessing.
 * @member {Boolean} requiresPreprocessing
 * @default true
 */
Action.prototype['requiresPreprocessing'] = true;

/**
 * SQL expression. e.g. MyProperty='ABC'
 * @member {String} sqlExpression
 */
Action.prototype['sqlExpression'] = undefined;






export default Action;

