/**
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2017-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import MigrationConfigListResult from '../model/MigrationConfigListResult';
import MigrationConfigProperties from '../model/MigrationConfigProperties';

/**
* MigrationConfigs service.
* @module api/MigrationConfigsApi
* @version 2017-04-01
*/
export default class MigrationConfigsApi {

    /**
    * Constructs a new MigrationConfigsApi. 
    * @alias module:api/MigrationConfigsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the migrationConfigsCompleteMigration operation.
     * @callback module:api/MigrationConfigsApi~migrationConfigsCompleteMigrationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This operation Completes Migration of entities by pointing the connection strings to Premium namespace and any entities created after the operation will be under Premium Namespace. CompleteMigration operation will fail when entity migration is in-progress.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} namespaceName The namespace name
     * @param {module:model/String} configName The configuration name. Should always be \"$default\".
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/MigrationConfigsApi~migrationConfigsCompleteMigrationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    migrationConfigsCompleteMigration(resourceGroupName, namespaceName, configName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling migrationConfigsCompleteMigration");
      }
      // verify the required parameter 'namespaceName' is set
      if (namespaceName === undefined || namespaceName === null) {
        throw new Error("Missing the required parameter 'namespaceName' when calling migrationConfigsCompleteMigration");
      }
      // verify the required parameter 'configName' is set
      if (configName === undefined || configName === null) {
        throw new Error("Missing the required parameter 'configName' when calling migrationConfigsCompleteMigration");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling migrationConfigsCompleteMigration");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling migrationConfigsCompleteMigration");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'namespaceName': namespaceName,
        'configName': configName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/migrationConfigurations/{configName}/upgrade', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the migrationConfigsCreateAndStartMigration operation.
     * @callback module:api/MigrationConfigsApi~migrationConfigsCreateAndStartMigrationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MigrationConfigProperties} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates Migration configuration and starts migration of entities from Standard to Premium namespace
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} namespaceName The namespace name
     * @param {module:model/String} configName The configuration name. Should always be \"$default\".
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/MigrationConfigProperties} parameters Parameters required to create Migration Configuration
     * @param {module:api/MigrationConfigsApi~migrationConfigsCreateAndStartMigrationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MigrationConfigProperties}
     */
    migrationConfigsCreateAndStartMigration(resourceGroupName, namespaceName, configName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling migrationConfigsCreateAndStartMigration");
      }
      // verify the required parameter 'namespaceName' is set
      if (namespaceName === undefined || namespaceName === null) {
        throw new Error("Missing the required parameter 'namespaceName' when calling migrationConfigsCreateAndStartMigration");
      }
      // verify the required parameter 'configName' is set
      if (configName === undefined || configName === null) {
        throw new Error("Missing the required parameter 'configName' when calling migrationConfigsCreateAndStartMigration");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling migrationConfigsCreateAndStartMigration");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling migrationConfigsCreateAndStartMigration");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling migrationConfigsCreateAndStartMigration");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'namespaceName': namespaceName,
        'configName': configName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = MigrationConfigProperties;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/migrationConfigurations/{configName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the migrationConfigsDelete operation.
     * @callback module:api/MigrationConfigsApi~migrationConfigsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a MigrationConfiguration
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} namespaceName The namespace name
     * @param {module:model/String} configName The configuration name. Should always be \"$default\".
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/MigrationConfigsApi~migrationConfigsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    migrationConfigsDelete(resourceGroupName, namespaceName, configName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling migrationConfigsDelete");
      }
      // verify the required parameter 'namespaceName' is set
      if (namespaceName === undefined || namespaceName === null) {
        throw new Error("Missing the required parameter 'namespaceName' when calling migrationConfigsDelete");
      }
      // verify the required parameter 'configName' is set
      if (configName === undefined || configName === null) {
        throw new Error("Missing the required parameter 'configName' when calling migrationConfigsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling migrationConfigsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling migrationConfigsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'namespaceName': namespaceName,
        'configName': configName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/migrationConfigurations/{configName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the migrationConfigsGet operation.
     * @callback module:api/MigrationConfigsApi~migrationConfigsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MigrationConfigProperties} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves Migration Config
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} namespaceName The namespace name
     * @param {module:model/String} configName The configuration name. Should always be \"$default\".
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/MigrationConfigsApi~migrationConfigsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MigrationConfigProperties}
     */
    migrationConfigsGet(resourceGroupName, namespaceName, configName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling migrationConfigsGet");
      }
      // verify the required parameter 'namespaceName' is set
      if (namespaceName === undefined || namespaceName === null) {
        throw new Error("Missing the required parameter 'namespaceName' when calling migrationConfigsGet");
      }
      // verify the required parameter 'configName' is set
      if (configName === undefined || configName === null) {
        throw new Error("Missing the required parameter 'configName' when calling migrationConfigsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling migrationConfigsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling migrationConfigsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'namespaceName': namespaceName,
        'configName': configName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MigrationConfigProperties;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/migrationConfigurations/{configName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the migrationConfigsList operation.
     * @callback module:api/MigrationConfigsApi~migrationConfigsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MigrationConfigListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all migrationConfigurations
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} namespaceName The namespace name
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/MigrationConfigsApi~migrationConfigsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MigrationConfigListResult}
     */
    migrationConfigsList(resourceGroupName, namespaceName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling migrationConfigsList");
      }
      // verify the required parameter 'namespaceName' is set
      if (namespaceName === undefined || namespaceName === null) {
        throw new Error("Missing the required parameter 'namespaceName' when calling migrationConfigsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling migrationConfigsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling migrationConfigsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'namespaceName': namespaceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MigrationConfigListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/migrationConfigurations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the migrationConfigsRevert operation.
     * @callback module:api/MigrationConfigsApi~migrationConfigsRevertCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This operation reverts Migration
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} namespaceName The namespace name
     * @param {module:model/String} configName The configuration name. Should always be \"$default\".
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/MigrationConfigsApi~migrationConfigsRevertCallback} callback The callback function, accepting three arguments: error, data, response
     */
    migrationConfigsRevert(resourceGroupName, namespaceName, configName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling migrationConfigsRevert");
      }
      // verify the required parameter 'namespaceName' is set
      if (namespaceName === undefined || namespaceName === null) {
        throw new Error("Missing the required parameter 'namespaceName' when calling migrationConfigsRevert");
      }
      // verify the required parameter 'configName' is set
      if (configName === undefined || configName === null) {
        throw new Error("Missing the required parameter 'configName' when calling migrationConfigsRevert");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling migrationConfigsRevert");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling migrationConfigsRevert");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'namespaceName': namespaceName,
        'configName': configName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/migrationConfigurations/{configName}/revert', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
