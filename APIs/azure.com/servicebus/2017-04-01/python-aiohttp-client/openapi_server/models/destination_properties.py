# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archive_name_format: str=None, blob_container: str=None, storage_account_resource_id: str=None):
        """DestinationProperties - a model defined in OpenAPI

        :param archive_name_format: The archive_name_format of this DestinationProperties.
        :param blob_container: The blob_container of this DestinationProperties.
        :param storage_account_resource_id: The storage_account_resource_id of this DestinationProperties.
        """
        self.openapi_types = {
            'archive_name_format': str,
            'blob_container': str,
            'storage_account_resource_id': str
        }

        self.attribute_map = {
            'archive_name_format': 'archiveNameFormat',
            'blob_container': 'blobContainer',
            'storage_account_resource_id': 'storageAccountResourceId'
        }

        self._archive_name_format = archive_name_format
        self._blob_container = blob_container
        self._storage_account_resource_id = storage_account_resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destination_properties of this DestinationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archive_name_format(self):
        """Gets the archive_name_format of this DestinationProperties.

        Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order

        :return: The archive_name_format of this DestinationProperties.
        :rtype: str
        """
        return self._archive_name_format

    @archive_name_format.setter
    def archive_name_format(self, archive_name_format):
        """Sets the archive_name_format of this DestinationProperties.

        Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order

        :param archive_name_format: The archive_name_format of this DestinationProperties.
        :type archive_name_format: str
        """

        self._archive_name_format = archive_name_format

    @property
    def blob_container(self):
        """Gets the blob_container of this DestinationProperties.

        Blob container Name

        :return: The blob_container of this DestinationProperties.
        :rtype: str
        """
        return self._blob_container

    @blob_container.setter
    def blob_container(self, blob_container):
        """Sets the blob_container of this DestinationProperties.

        Blob container Name

        :param blob_container: The blob_container of this DestinationProperties.
        :type blob_container: str
        """

        self._blob_container = blob_container

    @property
    def storage_account_resource_id(self):
        """Gets the storage_account_resource_id of this DestinationProperties.

        Resource id of the storage account to be used to create the blobs

        :return: The storage_account_resource_id of this DestinationProperties.
        :rtype: str
        """
        return self._storage_account_resource_id

    @storage_account_resource_id.setter
    def storage_account_resource_id(self, storage_account_resource_id):
        """Sets the storage_account_resource_id of this DestinationProperties.

        Resource id of the storage account to be used to create the blobs

        :param storage_account_resource_id: The storage_account_resource_id of this DestinationProperties.
        :type storage_account_resource_id: str
        """

        self._storage_account_resource_id = storage_account_resource_id
