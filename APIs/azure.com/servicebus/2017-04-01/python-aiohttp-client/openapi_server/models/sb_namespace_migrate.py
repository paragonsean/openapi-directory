# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SBNamespaceMigrate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_namespace_type: str=None):
        """SBNamespaceMigrate - a model defined in OpenAPI

        :param target_namespace_type: The target_namespace_type of this SBNamespaceMigrate.
        """
        self.openapi_types = {
            'target_namespace_type': str
        }

        self.attribute_map = {
            'target_namespace_type': 'targetNamespaceType'
        }

        self._target_namespace_type = target_namespace_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SBNamespaceMigrate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SBNamespaceMigrate of this SBNamespaceMigrate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_namespace_type(self):
        """Gets the target_namespace_type of this SBNamespaceMigrate.

        Type of namespaces

        :return: The target_namespace_type of this SBNamespaceMigrate.
        :rtype: str
        """
        return self._target_namespace_type

    @target_namespace_type.setter
    def target_namespace_type(self, target_namespace_type):
        """Sets the target_namespace_type of this SBNamespaceMigrate.

        Type of namespaces

        :param target_namespace_type: The target_namespace_type of this SBNamespaceMigrate.
        :type target_namespace_type: str
        """
        allowed_values = ["Messaging", "NotificationHub", "Mixed", "EventHub", "Relay"]  # noqa: E501
        if target_namespace_type not in allowed_values:
            raise ValueError(
                "Invalid value for `target_namespace_type` ({0}), must be one of {1}"
                .format(target_namespace_type, allowed_values)
            )

        self._target_namespace_type = target_namespace_type
