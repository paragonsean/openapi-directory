# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action import Action
from openapi_server.models.correlation_filter import CorrelationFilter
from openapi_server.models.filter_type import FilterType
from openapi_server.models.sql_filter import SqlFilter
from openapi_server import util


class Ruleproperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: Action=None, correlation_filter: CorrelationFilter=None, filter_type: FilterType=None, sql_filter: SqlFilter=None):
        """Ruleproperties - a model defined in OpenAPI

        :param action: The action of this Ruleproperties.
        :param correlation_filter: The correlation_filter of this Ruleproperties.
        :param filter_type: The filter_type of this Ruleproperties.
        :param sql_filter: The sql_filter of this Ruleproperties.
        """
        self.openapi_types = {
            'action': Action,
            'correlation_filter': CorrelationFilter,
            'filter_type': FilterType,
            'sql_filter': SqlFilter
        }

        self.attribute_map = {
            'action': 'action',
            'correlation_filter': 'correlationFilter',
            'filter_type': 'filterType',
            'sql_filter': 'sqlFilter'
        }

        self._action = action
        self._correlation_filter = correlation_filter
        self._filter_type = filter_type
        self._sql_filter = sql_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Ruleproperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Ruleproperties of this Ruleproperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this Ruleproperties.


        :return: The action of this Ruleproperties.
        :rtype: Action
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this Ruleproperties.


        :param action: The action of this Ruleproperties.
        :type action: Action
        """

        self._action = action

    @property
    def correlation_filter(self):
        """Gets the correlation_filter of this Ruleproperties.


        :return: The correlation_filter of this Ruleproperties.
        :rtype: CorrelationFilter
        """
        return self._correlation_filter

    @correlation_filter.setter
    def correlation_filter(self, correlation_filter):
        """Sets the correlation_filter of this Ruleproperties.


        :param correlation_filter: The correlation_filter of this Ruleproperties.
        :type correlation_filter: CorrelationFilter
        """

        self._correlation_filter = correlation_filter

    @property
    def filter_type(self):
        """Gets the filter_type of this Ruleproperties.


        :return: The filter_type of this Ruleproperties.
        :rtype: FilterType
        """
        return self._filter_type

    @filter_type.setter
    def filter_type(self, filter_type):
        """Sets the filter_type of this Ruleproperties.


        :param filter_type: The filter_type of this Ruleproperties.
        :type filter_type: FilterType
        """

        self._filter_type = filter_type

    @property
    def sql_filter(self):
        """Gets the sql_filter of this Ruleproperties.


        :return: The sql_filter of this Ruleproperties.
        :rtype: SqlFilter
        """
        return self._sql_filter

    @sql_filter.setter
    def sql_filter(self, sql_filter):
        """Sets the sql_filter of this Ruleproperties.


        :param sql_filter: The sql_filter of this Ruleproperties.
        :type sql_filter: SqlFilter
        """

        self._sql_filter = sql_filter
