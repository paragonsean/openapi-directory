/**
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2015-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscriptionProperties.h
 *
 * Description of Subscription Resource.
 */

#ifndef OAISubscriptionProperties_H
#define OAISubscriptionProperties_H

#include <QJsonObject>

#include "OAIEntityAvailabilityStatus.h"
#include "OAIEntityStatus.h"
#include "OAIMessageCountDetails.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMessageCountDetails;

class OAISubscriptionProperties : public OAIObject {
public:
    OAISubscriptionProperties();
    OAISubscriptionProperties(QString json);
    ~OAISubscriptionProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAccessedAt() const;
    void setAccessedAt(const QDateTime &accessed_at);
    bool is_accessed_at_Set() const;
    bool is_accessed_at_Valid() const;

    QString getAutoDeleteOnIdle() const;
    void setAutoDeleteOnIdle(const QString &auto_delete_on_idle);
    bool is_auto_delete_on_idle_Set() const;
    bool is_auto_delete_on_idle_Valid() const;

    OAIMessageCountDetails getCountDetails() const;
    void setCountDetails(const OAIMessageCountDetails &count_details);
    bool is_count_details_Set() const;
    bool is_count_details_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isDeadLetteringOnFilterEvaluationExceptions() const;
    void setDeadLetteringOnFilterEvaluationExceptions(const bool &dead_lettering_on_filter_evaluation_exceptions);
    bool is_dead_lettering_on_filter_evaluation_exceptions_Set() const;
    bool is_dead_lettering_on_filter_evaluation_exceptions_Valid() const;

    bool isDeadLetteringOnMessageExpiration() const;
    void setDeadLetteringOnMessageExpiration(const bool &dead_lettering_on_message_expiration);
    bool is_dead_lettering_on_message_expiration_Set() const;
    bool is_dead_lettering_on_message_expiration_Valid() const;

    QString getDefaultMessageTimeToLive() const;
    void setDefaultMessageTimeToLive(const QString &default_message_time_to_live);
    bool is_default_message_time_to_live_Set() const;
    bool is_default_message_time_to_live_Valid() const;

    bool isEnableBatchedOperations() const;
    void setEnableBatchedOperations(const bool &enable_batched_operations);
    bool is_enable_batched_operations_Set() const;
    bool is_enable_batched_operations_Valid() const;

    OAIEntityAvailabilityStatus getEntityAvailabilityStatus() const;
    void setEntityAvailabilityStatus(const OAIEntityAvailabilityStatus &entity_availability_status);
    bool is_entity_availability_status_Set() const;
    bool is_entity_availability_status_Valid() const;

    bool isIsReadOnly() const;
    void setIsReadOnly(const bool &is_read_only);
    bool is_is_read_only_Set() const;
    bool is_is_read_only_Valid() const;

    QString getLockDuration() const;
    void setLockDuration(const QString &lock_duration);
    bool is_lock_duration_Set() const;
    bool is_lock_duration_Valid() const;

    qint32 getMaxDeliveryCount() const;
    void setMaxDeliveryCount(const qint32 &max_delivery_count);
    bool is_max_delivery_count_Set() const;
    bool is_max_delivery_count_Valid() const;

    qint64 getMessageCount() const;
    void setMessageCount(const qint64 &message_count);
    bool is_message_count_Set() const;
    bool is_message_count_Valid() const;

    bool isRequiresSession() const;
    void setRequiresSession(const bool &requires_session);
    bool is_requires_session_Set() const;
    bool is_requires_session_Valid() const;

    OAIEntityStatus getStatus() const;
    void setStatus(const OAIEntityStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_accessed_at;
    bool m_accessed_at_isSet;
    bool m_accessed_at_isValid;

    QString m_auto_delete_on_idle;
    bool m_auto_delete_on_idle_isSet;
    bool m_auto_delete_on_idle_isValid;

    OAIMessageCountDetails m_count_details;
    bool m_count_details_isSet;
    bool m_count_details_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_dead_lettering_on_filter_evaluation_exceptions;
    bool m_dead_lettering_on_filter_evaluation_exceptions_isSet;
    bool m_dead_lettering_on_filter_evaluation_exceptions_isValid;

    bool m_dead_lettering_on_message_expiration;
    bool m_dead_lettering_on_message_expiration_isSet;
    bool m_dead_lettering_on_message_expiration_isValid;

    QString m_default_message_time_to_live;
    bool m_default_message_time_to_live_isSet;
    bool m_default_message_time_to_live_isValid;

    bool m_enable_batched_operations;
    bool m_enable_batched_operations_isSet;
    bool m_enable_batched_operations_isValid;

    OAIEntityAvailabilityStatus m_entity_availability_status;
    bool m_entity_availability_status_isSet;
    bool m_entity_availability_status_isValid;

    bool m_is_read_only;
    bool m_is_read_only_isSet;
    bool m_is_read_only_isValid;

    QString m_lock_duration;
    bool m_lock_duration_isSet;
    bool m_lock_duration_isValid;

    qint32 m_max_delivery_count;
    bool m_max_delivery_count_isSet;
    bool m_max_delivery_count_isValid;

    qint64 m_message_count;
    bool m_message_count_isSet;
    bool m_message_count_isValid;

    bool m_requires_session;
    bool m_requires_session_isSet;
    bool m_requires_session_isValid;

    OAIEntityStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscriptionProperties)

#endif // OAISubscriptionProperties_H
