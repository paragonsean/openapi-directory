/**
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2014-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServiceBusManagementClient);
  }
}(this, function(expect, ServiceBusManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServiceBusManagementClient.QueueProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('QueueProperties', function() {
    it('should create an instance of QueueProperties', function() {
      // uncomment below and update the code to test QueueProperties
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be.a(ServiceBusManagementClient.QueueProperties);
    });

    it('should have the property accessedAt (base name: "accessedAt")', function() {
      // uncomment below and update the code to test the property accessedAt
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property autoDeleteOnIdle (base name: "autoDeleteOnIdle")', function() {
      // uncomment below and update the code to test the property autoDeleteOnIdle
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property countDetails (base name: "countDetails")', function() {
      // uncomment below and update the code to test the property countDetails
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property deadLetteringOnMessageExpiration (base name: "deadLetteringOnMessageExpiration")', function() {
      // uncomment below and update the code to test the property deadLetteringOnMessageExpiration
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property defaultMessageTimeToLive (base name: "defaultMessageTimeToLive")', function() {
      // uncomment below and update the code to test the property defaultMessageTimeToLive
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property duplicateDetectionHistoryTimeWindow (base name: "duplicateDetectionHistoryTimeWindow")', function() {
      // uncomment below and update the code to test the property duplicateDetectionHistoryTimeWindow
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property enableBatchedOperations (base name: "enableBatchedOperations")', function() {
      // uncomment below and update the code to test the property enableBatchedOperations
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property enableExpress (base name: "enableExpress")', function() {
      // uncomment below and update the code to test the property enableExpress
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property enablePartitioning (base name: "enablePartitioning")', function() {
      // uncomment below and update the code to test the property enablePartitioning
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property entityAvailabilityStatus (base name: "entityAvailabilityStatus")', function() {
      // uncomment below and update the code to test the property entityAvailabilityStatus
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property isAnonymousAccessible (base name: "isAnonymousAccessible")', function() {
      // uncomment below and update the code to test the property isAnonymousAccessible
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property lockDuration (base name: "lockDuration")', function() {
      // uncomment below and update the code to test the property lockDuration
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property maxDeliveryCount (base name: "maxDeliveryCount")', function() {
      // uncomment below and update the code to test the property maxDeliveryCount
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property maxSizeInMegabytes (base name: "maxSizeInMegabytes")', function() {
      // uncomment below and update the code to test the property maxSizeInMegabytes
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property messageCount (base name: "messageCount")', function() {
      // uncomment below and update the code to test the property messageCount
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property requiresDuplicateDetection (base name: "requiresDuplicateDetection")', function() {
      // uncomment below and update the code to test the property requiresDuplicateDetection
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property requiresSession (base name: "requiresSession")', function() {
      // uncomment below and update the code to test the property requiresSession
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property sizeInBytes (base name: "sizeInBytes")', function() {
      // uncomment below and update the code to test the property sizeInBytes
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property supportOrdering (base name: "supportOrdering")', function() {
      // uncomment below and update the code to test the property supportOrdering
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new ServiceBusManagementClient.QueueProperties();
      //expect(instance).to.be();
    });

  });

}));
