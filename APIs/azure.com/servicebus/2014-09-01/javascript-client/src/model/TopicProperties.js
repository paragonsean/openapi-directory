/**
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2014-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntityAvailabilityStatus from './EntityAvailabilityStatus';
import EntityStatus from './EntityStatus';
import MessageCountDetails from './MessageCountDetails';

/**
 * The TopicProperties model module.
 * @module model/TopicProperties
 * @version 2014-09-01
 */
class TopicProperties {
    /**
     * Constructs a new <code>TopicProperties</code>.
     * The Topic Properties definition.
     * @alias module:model/TopicProperties
     */
    constructor() { 
        
        TopicProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TopicProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TopicProperties} obj Optional instance to populate.
     * @return {module:model/TopicProperties} The populated <code>TopicProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TopicProperties();

            if (data.hasOwnProperty('accessedAt')) {
                obj['accessedAt'] = ApiClient.convertToType(data['accessedAt'], 'Date');
            }
            if (data.hasOwnProperty('autoDeleteOnIdle')) {
                obj['autoDeleteOnIdle'] = ApiClient.convertToType(data['autoDeleteOnIdle'], 'String');
            }
            if (data.hasOwnProperty('countDetails')) {
                obj['countDetails'] = MessageCountDetails.constructFromObject(data['countDetails']);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('defaultMessageTimeToLive')) {
                obj['defaultMessageTimeToLive'] = ApiClient.convertToType(data['defaultMessageTimeToLive'], 'String');
            }
            if (data.hasOwnProperty('duplicateDetectionHistoryTimeWindow')) {
                obj['duplicateDetectionHistoryTimeWindow'] = ApiClient.convertToType(data['duplicateDetectionHistoryTimeWindow'], 'String');
            }
            if (data.hasOwnProperty('enableBatchedOperations')) {
                obj['enableBatchedOperations'] = ApiClient.convertToType(data['enableBatchedOperations'], 'Boolean');
            }
            if (data.hasOwnProperty('enableExpress')) {
                obj['enableExpress'] = ApiClient.convertToType(data['enableExpress'], 'Boolean');
            }
            if (data.hasOwnProperty('enablePartitioning')) {
                obj['enablePartitioning'] = ApiClient.convertToType(data['enablePartitioning'], 'Boolean');
            }
            if (data.hasOwnProperty('entityAvailabilityStatus')) {
                obj['entityAvailabilityStatus'] = EntityAvailabilityStatus.constructFromObject(data['entityAvailabilityStatus']);
            }
            if (data.hasOwnProperty('filteringMessagesBeforePublishing')) {
                obj['filteringMessagesBeforePublishing'] = ApiClient.convertToType(data['filteringMessagesBeforePublishing'], 'Boolean');
            }
            if (data.hasOwnProperty('isAnonymousAccessible')) {
                obj['isAnonymousAccessible'] = ApiClient.convertToType(data['isAnonymousAccessible'], 'Boolean');
            }
            if (data.hasOwnProperty('isExpress')) {
                obj['isExpress'] = ApiClient.convertToType(data['isExpress'], 'Boolean');
            }
            if (data.hasOwnProperty('maxSizeInMegabytes')) {
                obj['maxSizeInMegabytes'] = ApiClient.convertToType(data['maxSizeInMegabytes'], 'Number');
            }
            if (data.hasOwnProperty('requiresDuplicateDetection')) {
                obj['requiresDuplicateDetection'] = ApiClient.convertToType(data['requiresDuplicateDetection'], 'Boolean');
            }
            if (data.hasOwnProperty('sizeInBytes')) {
                obj['sizeInBytes'] = ApiClient.convertToType(data['sizeInBytes'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = EntityStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('subscriptionCount')) {
                obj['subscriptionCount'] = ApiClient.convertToType(data['subscriptionCount'], 'Number');
            }
            if (data.hasOwnProperty('supportOrdering')) {
                obj['supportOrdering'] = ApiClient.convertToType(data['supportOrdering'], 'Boolean');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TopicProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TopicProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['autoDeleteOnIdle'] && !(typeof data['autoDeleteOnIdle'] === 'string' || data['autoDeleteOnIdle'] instanceof String)) {
            throw new Error("Expected the field `autoDeleteOnIdle` to be a primitive type in the JSON string but got " + data['autoDeleteOnIdle']);
        }
        // validate the optional field `countDetails`
        if (data['countDetails']) { // data not null
          MessageCountDetails.validateJSON(data['countDetails']);
        }
        // ensure the json data is a string
        if (data['defaultMessageTimeToLive'] && !(typeof data['defaultMessageTimeToLive'] === 'string' || data['defaultMessageTimeToLive'] instanceof String)) {
            throw new Error("Expected the field `defaultMessageTimeToLive` to be a primitive type in the JSON string but got " + data['defaultMessageTimeToLive']);
        }
        // ensure the json data is a string
        if (data['duplicateDetectionHistoryTimeWindow'] && !(typeof data['duplicateDetectionHistoryTimeWindow'] === 'string' || data['duplicateDetectionHistoryTimeWindow'] instanceof String)) {
            throw new Error("Expected the field `duplicateDetectionHistoryTimeWindow` to be a primitive type in the JSON string but got " + data['duplicateDetectionHistoryTimeWindow']);
        }

        return true;
    }


}



/**
 * Last time the message was sent, or a request was received, for this topic.
 * @member {Date} accessedAt
 */
TopicProperties.prototype['accessedAt'] = undefined;

/**
 * TimeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
 * @member {String} autoDeleteOnIdle
 */
TopicProperties.prototype['autoDeleteOnIdle'] = undefined;

/**
 * @member {module:model/MessageCountDetails} countDetails
 */
TopicProperties.prototype['countDetails'] = undefined;

/**
 * Exact time the message was created.
 * @member {Date} createdAt
 */
TopicProperties.prototype['createdAt'] = undefined;

/**
 * Default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
 * @member {String} defaultMessageTimeToLive
 */
TopicProperties.prototype['defaultMessageTimeToLive'] = undefined;

/**
 * TimeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
 * @member {String} duplicateDetectionHistoryTimeWindow
 */
TopicProperties.prototype['duplicateDetectionHistoryTimeWindow'] = undefined;

/**
 * Value that indicates whether server-side batched operations are enabled.
 * @member {Boolean} enableBatchedOperations
 */
TopicProperties.prototype['enableBatchedOperations'] = undefined;

/**
 * Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.
 * @member {Boolean} enableExpress
 */
TopicProperties.prototype['enableExpress'] = undefined;

/**
 * Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.
 * @member {Boolean} enablePartitioning
 */
TopicProperties.prototype['enablePartitioning'] = undefined;

/**
 * @member {module:model/EntityAvailabilityStatus} entityAvailabilityStatus
 */
TopicProperties.prototype['entityAvailabilityStatus'] = undefined;

/**
 * Whether messages should be filtered before publishing.
 * @member {Boolean} filteringMessagesBeforePublishing
 */
TopicProperties.prototype['filteringMessagesBeforePublishing'] = undefined;

/**
 * Value that indicates whether the message is accessible anonymously.
 * @member {Boolean} isAnonymousAccessible
 */
TopicProperties.prototype['isAnonymousAccessible'] = undefined;

/**
 * 
 * @member {Boolean} isExpress
 */
TopicProperties.prototype['isExpress'] = undefined;

/**
 * Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic.
 * @member {Number} maxSizeInMegabytes
 */
TopicProperties.prototype['maxSizeInMegabytes'] = undefined;

/**
 * Value indicating if this topic requires duplicate detection.
 * @member {Boolean} requiresDuplicateDetection
 */
TopicProperties.prototype['requiresDuplicateDetection'] = undefined;

/**
 * Size of the topic, in bytes.
 * @member {Number} sizeInBytes
 */
TopicProperties.prototype['sizeInBytes'] = undefined;

/**
 * @member {module:model/EntityStatus} status
 */
TopicProperties.prototype['status'] = undefined;

/**
 * Number of subscriptions.
 * @member {Number} subscriptionCount
 */
TopicProperties.prototype['subscriptionCount'] = undefined;

/**
 * Value that indicates whether the topic supports ordering.
 * @member {Boolean} supportOrdering
 */
TopicProperties.prototype['supportOrdering'] = undefined;

/**
 * The exact time the message was updated.
 * @member {Date} updatedAt
 */
TopicProperties.prototype['updatedAt'] = undefined;






export default TopicProperties;

