/**
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2014-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEntityStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEntityStatus::OAIEntityStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEntityStatus::OAIEntityStatus() {
    this->initializeModel();
}

OAIEntityStatus::~OAIEntityStatus() {}

void OAIEntityStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEntityStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEntityStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Active", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityStatus::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Creating", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityStatus::CREATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Deleting", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityStatus::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Disabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityStatus::DISABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ReceiveDisabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityStatus::RECEIVEDISABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Renaming", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityStatus::RENAMING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Restoring", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityStatus::RESTORING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SendDisabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityStatus::SENDDISABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Unknown", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityStatus::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEntityStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEntityStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEntityStatus::ACTIVE:
            val = "Active";
            break;
        case eOAIEntityStatus::CREATING:
            val = "Creating";
            break;
        case eOAIEntityStatus::DELETING:
            val = "Deleting";
            break;
        case eOAIEntityStatus::DISABLED:
            val = "Disabled";
            break;
        case eOAIEntityStatus::RECEIVEDISABLED:
            val = "ReceiveDisabled";
            break;
        case eOAIEntityStatus::RENAMING:
            val = "Renaming";
            break;
        case eOAIEntityStatus::RESTORING:
            val = "Restoring";
            break;
        case eOAIEntityStatus::SENDDISABLED:
            val = "SendDisabled";
            break;
        case eOAIEntityStatus::UNKNOWN:
            val = "Unknown";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEntityStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEntityStatus::eOAIEntityStatus OAIEntityStatus::getValue() const {
    return m_value;
}

void OAIEntityStatus::setValue(const OAIEntityStatus::eOAIEntityStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEntityStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIEntityStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
