/**
 * ServiceBusManagementClient
 * Azure Service Bus client
 *
 * The version of the OpenAPI document: 2014-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessagingPlanproperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessagingPlanproperties::OAIMessagingPlanproperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessagingPlanproperties::OAIMessagingPlanproperties() {
    this->initializeModel();
}

OAIMessagingPlanproperties::~OAIMessagingPlanproperties() {}

void OAIMessagingPlanproperties::initializeModel() {

    m_revision_isSet = false;
    m_revision_isValid = false;

    m_selected_event_hub_unit_isSet = false;
    m_selected_event_hub_unit_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIMessagingPlanproperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessagingPlanproperties::fromJsonObject(QJsonObject json) {

    m_revision_isValid = ::OpenAPI::fromJsonValue(m_revision, json[QString("revision")]);
    m_revision_isSet = !json[QString("revision")].isNull() && m_revision_isValid;

    m_selected_event_hub_unit_isValid = ::OpenAPI::fromJsonValue(m_selected_event_hub_unit, json[QString("selectedEventHubUnit")]);
    m_selected_event_hub_unit_isSet = !json[QString("selectedEventHubUnit")].isNull() && m_selected_event_hub_unit_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updatedAt")]);
    m_updated_at_isSet = !json[QString("updatedAt")].isNull() && m_updated_at_isValid;
}

QString OAIMessagingPlanproperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessagingPlanproperties::asJsonObject() const {
    QJsonObject obj;
    if (m_revision_isSet) {
        obj.insert(QString("revision"), ::OpenAPI::toJsonValue(m_revision));
    }
    if (m_selected_event_hub_unit_isSet) {
        obj.insert(QString("selectedEventHubUnit"), ::OpenAPI::toJsonValue(m_selected_event_hub_unit));
    }
    if (m_sku_isSet) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updatedAt"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

qint64 OAIMessagingPlanproperties::getRevision() const {
    return m_revision;
}
void OAIMessagingPlanproperties::setRevision(const qint64 &revision) {
    m_revision = revision;
    m_revision_isSet = true;
}

bool OAIMessagingPlanproperties::is_revision_Set() const{
    return m_revision_isSet;
}

bool OAIMessagingPlanproperties::is_revision_Valid() const{
    return m_revision_isValid;
}

qint32 OAIMessagingPlanproperties::getSelectedEventHubUnit() const {
    return m_selected_event_hub_unit;
}
void OAIMessagingPlanproperties::setSelectedEventHubUnit(const qint32 &selected_event_hub_unit) {
    m_selected_event_hub_unit = selected_event_hub_unit;
    m_selected_event_hub_unit_isSet = true;
}

bool OAIMessagingPlanproperties::is_selected_event_hub_unit_Set() const{
    return m_selected_event_hub_unit_isSet;
}

bool OAIMessagingPlanproperties::is_selected_event_hub_unit_Valid() const{
    return m_selected_event_hub_unit_isValid;
}

qint32 OAIMessagingPlanproperties::getSku() const {
    return m_sku;
}
void OAIMessagingPlanproperties::setSku(const qint32 &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIMessagingPlanproperties::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIMessagingPlanproperties::is_sku_Valid() const{
    return m_sku_isValid;
}

QDateTime OAIMessagingPlanproperties::getUpdatedAt() const {
    return m_updated_at;
}
void OAIMessagingPlanproperties::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIMessagingPlanproperties::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIMessagingPlanproperties::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIMessagingPlanproperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_revision_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_selected_event_hub_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessagingPlanproperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
