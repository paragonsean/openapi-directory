# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServicesCheckStatus200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_version: str=None, status: str=None, supported_task_types: List[str]=None, vm_size: str=None):
        """ServicesCheckStatus200Response - a model defined in OpenAPI

        :param agent_version: The agent_version of this ServicesCheckStatus200Response.
        :param status: The status of this ServicesCheckStatus200Response.
        :param supported_task_types: The supported_task_types of this ServicesCheckStatus200Response.
        :param vm_size: The vm_size of this ServicesCheckStatus200Response.
        """
        self.openapi_types = {
            'agent_version': str,
            'status': str,
            'supported_task_types': List[str],
            'vm_size': str
        }

        self.attribute_map = {
            'agent_version': 'agentVersion',
            'status': 'status',
            'supported_task_types': 'supportedTaskTypes',
            'vm_size': 'vmSize'
        }

        self._agent_version = agent_version
        self._status = status
        self._supported_task_types = supported_task_types
        self._vm_size = vm_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServicesCheckStatus200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Services_CheckStatus_200_response of this ServicesCheckStatus200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_version(self):
        """Gets the agent_version of this ServicesCheckStatus200Response.

        The DMS instance agent version

        :return: The agent_version of this ServicesCheckStatus200Response.
        :rtype: str
        """
        return self._agent_version

    @agent_version.setter
    def agent_version(self, agent_version):
        """Sets the agent_version of this ServicesCheckStatus200Response.

        The DMS instance agent version

        :param agent_version: The agent_version of this ServicesCheckStatus200Response.
        :type agent_version: str
        """

        self._agent_version = agent_version

    @property
    def status(self):
        """Gets the status of this ServicesCheckStatus200Response.

        The machine-readable status, such as 'Initializing', 'Offline', 'Online', 'Deploying', 'Deleting', 'Stopped', 'Stopping', 'Starting', 'FailedToStart', 'FailedToStop' or 'Failed'

        :return: The status of this ServicesCheckStatus200Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ServicesCheckStatus200Response.

        The machine-readable status, such as 'Initializing', 'Offline', 'Online', 'Deploying', 'Deleting', 'Stopped', 'Stopping', 'Starting', 'FailedToStart', 'FailedToStop' or 'Failed'

        :param status: The status of this ServicesCheckStatus200Response.
        :type status: str
        """

        self._status = status

    @property
    def supported_task_types(self):
        """Gets the supported_task_types of this ServicesCheckStatus200Response.

        The list of supported task types

        :return: The supported_task_types of this ServicesCheckStatus200Response.
        :rtype: List[str]
        """
        return self._supported_task_types

    @supported_task_types.setter
    def supported_task_types(self, supported_task_types):
        """Sets the supported_task_types of this ServicesCheckStatus200Response.

        The list of supported task types

        :param supported_task_types: The supported_task_types of this ServicesCheckStatus200Response.
        :type supported_task_types: List[str]
        """

        self._supported_task_types = supported_task_types

    @property
    def vm_size(self):
        """Gets the vm_size of this ServicesCheckStatus200Response.

        The services virtual machine size, such as 'Standard_D2_v2'

        :return: The vm_size of this ServicesCheckStatus200Response.
        :rtype: str
        """
        return self._vm_size

    @vm_size.setter
    def vm_size(self, vm_size):
        """Sets the vm_size of this ServicesCheckStatus200Response.

        The services virtual machine size, such as 'Standard_D2_v2'

        :param vm_size: The vm_size of this ServicesCheckStatus200Response.
        :type vm_size: str
        """

        self._vm_size = vm_size
