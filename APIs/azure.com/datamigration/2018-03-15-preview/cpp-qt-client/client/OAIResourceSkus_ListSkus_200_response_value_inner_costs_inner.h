/**
 * Azure Data Migration Service Resource Provider
 * The Data Migration Service helps people migrate their data from on-premise database servers to Azure, or from older database software to newer software. The service manages one or more workers that are joined to a customer's virtual network, which is assumed to provide connectivity to their databases. To avoid frequent updates to the resource provider, data migration tasks are implemented by the resource provider in a generic way as task resources, each of which has a task type (which identifies the type of work to run), input, and output. The client is responsible for providing appropriate task type and inputs, which will be passed through unexamined to the machines that implement the functionality, and for understanding the output, which is passed back unexamined to the client.
 *
 * The version of the OpenAPI document: 2018-03-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceSkus_ListSkus_200_response_value_inner_costs_inner.h
 *
 * Describes metadata for retrieving price info.
 */

#ifndef OAIResourceSkus_ListSkus_200_response_value_inner_costs_inner_H
#define OAIResourceSkus_ListSkus_200_response_value_inner_costs_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResourceSkus_ListSkus_200_response_value_inner_costs_inner : public OAIObject {
public:
    OAIResourceSkus_ListSkus_200_response_value_inner_costs_inner();
    OAIResourceSkus_ListSkus_200_response_value_inner_costs_inner(QString json);
    ~OAIResourceSkus_ListSkus_200_response_value_inner_costs_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExtendedUnit() const;
    void setExtendedUnit(const QString &extended_unit);
    bool is_extended_unit_Set() const;
    bool is_extended_unit_Valid() const;

    QString getMeterId() const;
    void setMeterId(const QString &meter_id);
    bool is_meter_id_Set() const;
    bool is_meter_id_Valid() const;

    qint64 getQuantity() const;
    void setQuantity(const qint64 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_extended_unit;
    bool m_extended_unit_isSet;
    bool m_extended_unit_isValid;

    QString m_meter_id;
    bool m_meter_id_isSet;
    bool m_meter_id_isValid;

    qint64 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceSkus_ListSkus_200_response_value_inner_costs_inner)

#endif // OAIResourceSkus_ListSkus_200_response_value_inner_costs_inner_H
