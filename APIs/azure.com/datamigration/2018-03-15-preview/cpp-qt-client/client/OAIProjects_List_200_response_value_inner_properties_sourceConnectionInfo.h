/**
 * Azure Data Migration Service Resource Provider
 * The Data Migration Service helps people migrate their data from on-premise database servers to Azure, or from older database software to newer software. The service manages one or more workers that are joined to a customer's virtual network, which is assumed to provide connectivity to their databases. To avoid frequent updates to the resource provider, data migration tasks are implemented by the resource provider in a generic way as task resources, each of which has a task type (which identifies the type of work to run), input, and output. The client is responsible for providing appropriate task type and inputs, which will be passed through unexamined to the machines that implement the functionality, and for understanding the output, which is passed back unexamined to the client.
 *
 * The version of the OpenAPI document: 2018-03-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjects_List_200_response_value_inner_properties_sourceConnectionInfo.h
 *
 * Defines the connection properties of a server
 */

#ifndef OAIProjects_List_200_response_value_inner_properties_sourceConnectionInfo_H
#define OAIProjects_List_200_response_value_inner_properties_sourceConnectionInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProjects_List_200_response_value_inner_properties_sourceConnectionInfo : public OAIObject {
public:
    OAIProjects_List_200_response_value_inner_properties_sourceConnectionInfo();
    OAIProjects_List_200_response_value_inner_properties_sourceConnectionInfo(QString json);
    ~OAIProjects_List_200_response_value_inner_properties_sourceConnectionInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUserName() const;
    void setUserName(const QString &user_name);
    bool is_user_name_Set() const;
    bool is_user_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_user_name;
    bool m_user_name_isSet;
    bool m_user_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjects_List_200_response_value_inner_properties_sourceConnectionInfo)

#endif // OAIProjects_List_200_response_value_inner_properties_sourceConnectionInfo_H
