/**
 * Azure Data Migration Service Resource Provider
 * The Data Migration Service helps people migrate their data from on-premise database servers to Azure, or from older database software to newer software. The service manages one or more workers that are joined to a customer's virtual network, which is assumed to provide connectivity to their databases. To avoid frequent updates to the resource provider, data migration tasks are implemented by the resource provider in a generic way as task resources, each of which has a task type (which identifies the type of work to run), input, and output. The client is responsible for providing appropriate task type and inputs, which will be passed through unexamined to the machines that implement the functionality, and for understanding the output, which is passed back unexamined to the client.
 *
 * The version of the OpenAPI document: 2018-03-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceSkus_ListSkus_200_response_value_inner_capacity.h
 *
 * Describes scaling information of a SKU.
 */

#ifndef OAIResourceSkus_ListSkus_200_response_value_inner_capacity_H
#define OAIResourceSkus_ListSkus_200_response_value_inner_capacity_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResourceSkus_ListSkus_200_response_value_inner_capacity : public OAIObject {
public:
    OAIResourceSkus_ListSkus_200_response_value_inner_capacity();
    OAIResourceSkus_ListSkus_200_response_value_inner_capacity(QString json);
    ~OAIResourceSkus_ListSkus_200_response_value_inner_capacity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getRDefault() const;
    void setRDefault(const qint64 &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    qint64 getMaximum() const;
    void setMaximum(const qint64 &maximum);
    bool is_maximum_Set() const;
    bool is_maximum_Valid() const;

    qint64 getMinimum() const;
    void setMinimum(const qint64 &minimum);
    bool is_minimum_Set() const;
    bool is_minimum_Valid() const;

    QString getScaleType() const;
    void setScaleType(const QString &scale_type);
    bool is_scale_type_Set() const;
    bool is_scale_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    qint64 m_maximum;
    bool m_maximum_isSet;
    bool m_maximum_isValid;

    qint64 m_minimum;
    bool m_minimum_isSet;
    bool m_minimum_isValid;

    QString m_scale_type;
    bool m_scale_type_isSet;
    bool m_scale_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceSkus_ListSkus_200_response_value_inner_capacity)

#endif // OAIResourceSkus_ListSkus_200_response_value_inner_capacity_H
