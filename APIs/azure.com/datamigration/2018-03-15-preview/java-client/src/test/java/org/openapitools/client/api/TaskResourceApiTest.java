/*
 * Azure Data Migration Service Resource Provider
 * The Data Migration Service helps people migrate their data from on-premise database servers to Azure, or from older database software to newer software. The service manages one or more workers that are joined to a customer's virtual network, which is assumed to provide connectivity to their databases. To avoid frequent updates to the resource provider, data migration tasks are implemented by the resource provider in a generic way as task resources, each of which has a task type (which identifies the type of work to run), input, and output. The client is responsible for providing appropriate task type and inputs, which will be passed through unexamined to the machines that implement the functionality, and for understanding the output, which is passed back unexamined to the client.
 *
 * The version of the OpenAPI document: 2018-03-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.OperationsListDefaultResponse;
import org.openapitools.client.model.TasksGet200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskResourceApi
 */
@Disabled
public class TaskResourceApiTest {

    private final TaskResourceApi api = new TaskResourceApi();

    /**
     * Cancel a task
     *
     * The tasks resource is a nested, proxy-only resource representing work performed by a DMS instance. This method cancels a task if it&#39;s currently queued or running.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksCancelTest() throws ApiException {
        String subscriptionId = null;
        String groupName = null;
        String serviceName = null;
        String projectName = null;
        String taskName = null;
        String apiVersion = null;
        TasksGet200Response response = api.tasksCancel(subscriptionId, groupName, serviceName, projectName, taskName, apiVersion);
        // TODO: test validations
    }

    /**
     * Create or update task
     *
     * The tasks resource is a nested, proxy-only resource representing work performed by a DMS instance. The PUT method creates a new task or updates an existing one, although since tasks have no mutable custom properties, there is little reason to update an exising one.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String groupName = null;
        String serviceName = null;
        String projectName = null;
        String taskName = null;
        String apiVersion = null;
        TasksGet200Response parameters = null;
        TasksGet200Response response = api.tasksCreateOrUpdate(subscriptionId, groupName, serviceName, projectName, taskName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete task
     *
     * The tasks resource is a nested, proxy-only resource representing work performed by a DMS instance. The DELETE method deletes a task, canceling it first if it&#39;s running.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksDeleteTest() throws ApiException {
        String subscriptionId = null;
        String groupName = null;
        String serviceName = null;
        String projectName = null;
        String taskName = null;
        String apiVersion = null;
        Boolean deleteRunningTasks = null;
        api.tasksDelete(subscriptionId, groupName, serviceName, projectName, taskName, apiVersion, deleteRunningTasks);
        // TODO: test validations
    }

    /**
     * Get task information
     *
     * The tasks resource is a nested, proxy-only resource representing work performed by a DMS instance. The GET method retrieves information about a task.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksGetTest() throws ApiException {
        String subscriptionId = null;
        String groupName = null;
        String serviceName = null;
        String projectName = null;
        String taskName = null;
        String apiVersion = null;
        String $expand = null;
        TasksGet200Response response = api.tasksGet(subscriptionId, groupName, serviceName, projectName, taskName, apiVersion, $expand);
        // TODO: test validations
    }

    /**
     * Create or update task
     *
     * The tasks resource is a nested, proxy-only resource representing work performed by a DMS instance. The PATCH method updates an existing task, but since tasks have no mutable custom properties, there is little reason to do so.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksUpdateTest() throws ApiException {
        String subscriptionId = null;
        String groupName = null;
        String serviceName = null;
        String projectName = null;
        String taskName = null;
        String apiVersion = null;
        TasksGet200Response parameters = null;
        TasksGet200Response response = api.tasksUpdate(subscriptionId, groupName, serviceName, projectName, taskName, apiVersion, parameters);
        // TODO: test validations
    }

}
