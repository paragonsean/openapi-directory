/**
 * Azure Data Migration Service Resource Provider
 * The Data Migration Service helps people migrate their data from on-premise database servers to Azure, or from older database software to newer software. The service manages one or more workers that are joined to a customer's virtual network, which is assumed to provide connectivity to their databases. To avoid frequent updates to the resource provider, data migration tasks are implemented by the resource provider in a generic way as task resources, each of which has a task type (which identifies the type of work to run), input, and output. The client is responsible for providing appropriate task type and inputs, which will be passed through unexamined to the machines that implement the functionality, and for understanding the output, which is passed back unexamined to the client.
 *
 * The version of the OpenAPI document: 2017-11-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServices_CheckStatus_200_response.h
 *
 * Service health status
 */

#ifndef OAIServices_CheckStatus_200_response_H
#define OAIServices_CheckStatus_200_response_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServices_CheckStatus_200_response : public OAIObject {
public:
    OAIServices_CheckStatus_200_response();
    OAIServices_CheckStatus_200_response(QString json);
    ~OAIServices_CheckStatus_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAgentVersion() const;
    void setAgentVersion(const QString &agent_version);
    bool is_agent_version_Set() const;
    bool is_agent_version_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<QString> getSupportedTaskTypes() const;
    void setSupportedTaskTypes(const QList<QString> &supported_task_types);
    bool is_supported_task_types_Set() const;
    bool is_supported_task_types_Valid() const;

    QString getVmSize() const;
    void setVmSize(const QString &vm_size);
    bool is_vm_size_Set() const;
    bool is_vm_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_agent_version;
    bool m_agent_version_isSet;
    bool m_agent_version_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<QString> m_supported_task_types;
    bool m_supported_task_types_isSet;
    bool m_supported_task_types_isValid;

    QString m_vm_size;
    bool m_vm_size_isSet;
    bool m_vm_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServices_CheckStatus_200_response)

#endif // OAIServices_CheckStatus_200_response_H
