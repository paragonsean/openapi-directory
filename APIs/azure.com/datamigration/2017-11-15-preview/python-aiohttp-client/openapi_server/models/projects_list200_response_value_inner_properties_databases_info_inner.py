# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectsList200ResponseValueInnerPropertiesDatabasesInfoInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_database_name: str=None):
        """ProjectsList200ResponseValueInnerPropertiesDatabasesInfoInner - a model defined in OpenAPI

        :param source_database_name: The source_database_name of this ProjectsList200ResponseValueInnerPropertiesDatabasesInfoInner.
        """
        self.openapi_types = {
            'source_database_name': str
        }

        self.attribute_map = {
            'source_database_name': 'sourceDatabaseName'
        }

        self._source_database_name = source_database_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectsList200ResponseValueInnerPropertiesDatabasesInfoInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Projects_List_200_response_value_inner_properties_databasesInfo_inner of this ProjectsList200ResponseValueInnerPropertiesDatabasesInfoInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_database_name(self):
        """Gets the source_database_name of this ProjectsList200ResponseValueInnerPropertiesDatabasesInfoInner.

        Name of the database

        :return: The source_database_name of this ProjectsList200ResponseValueInnerPropertiesDatabasesInfoInner.
        :rtype: str
        """
        return self._source_database_name

    @source_database_name.setter
    def source_database_name(self, source_database_name):
        """Sets the source_database_name of this ProjectsList200ResponseValueInnerPropertiesDatabasesInfoInner.

        Name of the database

        :param source_database_name: The source_database_name of this ProjectsList200ResponseValueInnerPropertiesDatabasesInfoInner.
        :type source_database_name: str
        """
        if source_database_name is None:
            raise ValueError("Invalid value for `source_database_name`, must not be `None`")

        self._source_database_name = source_database_name
