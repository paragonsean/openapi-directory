/**
 * Azure Data Migration Service Resource Provider
 * The Data Migration Service helps people migrate their data from on-premise database servers to Azure, or from older database software to newer software. The service manages one or more workers that are joined to a customer's virtual network, which is assumed to provide connectivity to their databases. To avoid frequent updates to the resource provider, data migration tasks are implemented by the resource provider in a generic way as task resources, each of which has a task type (which identifies the type of work to run), input, and output. The client is responsible for providing appropriate task type and inputs, which will be passed through unexamined to the machines that implement the functionality, and for understanding the output, which is passed back unexamined to the client.
 *
 * The version of the OpenAPI document: 2017-11-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OperationsList200Response from '../model/OperationsList200Response';
import OperationsListDefaultResponse from '../model/OperationsListDefaultResponse';
import ProjectsGet200Response from '../model/ProjectsGet200Response';
import ProjectsList200Response from '../model/ProjectsList200Response';
import ResourceSkusListSkus200Response from '../model/ResourceSkusListSkus200Response';
import ServicesGet200Response from '../model/ServicesGet200Response';
import ServicesList200Response from '../model/ServicesList200Response';
import ServicesListSkus200Response from '../model/ServicesListSkus200Response';
import TasksGet200Response from '../model/TasksGet200Response';
import TasksList200Response from '../model/TasksList200Response';
import UsagesList200Response from '../model/UsagesList200Response';

/**
* GET service.
* @module api/GETApi
* @version 2017-11-15-preview
*/
export default class GETApi {

    /**
    * Constructs a new GETApi. 
    * @alias module:api/GETApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the operationsList_0 operation.
     * @callback module:api/GETApi~operationsList_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get available resource provider actions (operations)
     * Lists all available actions exposed by the Data Migration Service resource provider.
     * @param {String} apiVersion Version of the API
     * @param {module:api/GETApi~operationsList_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationsList200Response}
     */
    operationsList_0(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationsList_0");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationsList200Response;
      return this.apiClient.callApi(
        '/providers/Microsoft.DataMigration/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the projectsGet_1 operation.
     * @callback module:api/GETApi~projectsGet_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ProjectsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get project information
     * The project resource is a nested resource representing a stored migration project. The GET method retrieves information about a project.
     * @param {String} subscriptionId Identifier of the subscription
     * @param {String} groupName Name of the resource group
     * @param {String} serviceName Name of the service
     * @param {String} projectName Name of the project
     * @param {String} apiVersion Version of the API
     * @param {module:api/GETApi~projectsGet_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProjectsGet200Response}
     */
    projectsGet_1(subscriptionId, groupName, serviceName, projectName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling projectsGet_1");
      }
      // verify the required parameter 'groupName' is set
      if (groupName === undefined || groupName === null) {
        throw new Error("Missing the required parameter 'groupName' when calling projectsGet_1");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling projectsGet_1");
      }
      // verify the required parameter 'projectName' is set
      if (projectName === undefined || projectName === null) {
        throw new Error("Missing the required parameter 'projectName' when calling projectsGet_1");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling projectsGet_1");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'groupName': groupName,
        'serviceName': serviceName,
        'projectName': projectName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProjectsGet200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the projectsList_1 operation.
     * @callback module:api/GETApi~projectsList_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ProjectsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get projects in a service
     * The project resource is a nested resource representing a stored migration project. This method returns a list of projects owned by a service resource.
     * @param {String} subscriptionId Identifier of the subscription
     * @param {String} groupName Name of the resource group
     * @param {String} serviceName Name of the service
     * @param {String} apiVersion Version of the API
     * @param {module:api/GETApi~projectsList_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProjectsList200Response}
     */
    projectsList_1(subscriptionId, groupName, serviceName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling projectsList_1");
      }
      // verify the required parameter 'groupName' is set
      if (groupName === undefined || groupName === null) {
        throw new Error("Missing the required parameter 'groupName' when calling projectsList_1");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling projectsList_1");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling projectsList_1");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'groupName': groupName,
        'serviceName': serviceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProjectsList200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resourceSkusListSkus_0 operation.
     * @callback module:api/GETApi~resourceSkusListSkus_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceSkusListSkus200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get supported SKUs
     * The skus action returns the list of SKUs that DMS supports.
     * @param {String} subscriptionId Identifier of the subscription
     * @param {String} apiVersion Version of the API
     * @param {module:api/GETApi~resourceSkusListSkus_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceSkusListSkus200Response}
     */
    resourceSkusListSkus_0(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling resourceSkusListSkus_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resourceSkusListSkus_0");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceSkusListSkus200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/skus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicesGet_1 operation.
     * @callback module:api/GETApi~servicesGet_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ServicesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get DMS Service Instance
     * The services resource is the top-level resource that represents the Data Migration Service. The GET method retrieves information about a service instance.
     * @param {String} subscriptionId Identifier of the subscription
     * @param {String} groupName Name of the resource group
     * @param {String} serviceName Name of the service
     * @param {String} apiVersion Version of the API
     * @param {module:api/GETApi~servicesGet_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServicesGet200Response}
     */
    servicesGet_1(subscriptionId, groupName, serviceName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling servicesGet_1");
      }
      // verify the required parameter 'groupName' is set
      if (groupName === undefined || groupName === null) {
        throw new Error("Missing the required parameter 'groupName' when calling servicesGet_1");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling servicesGet_1");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicesGet_1");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'groupName': groupName,
        'serviceName': serviceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServicesGet200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicesListByResourceGroup_1 operation.
     * @callback module:api/GETApi~servicesListByResourceGroup_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ServicesList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get services in resource group
     * The Services resource is the top-level resource that represents the Data Migration Service. This method returns a list of service resources in a resource group.
     * @param {String} subscriptionId Identifier of the subscription
     * @param {String} groupName Name of the resource group
     * @param {String} apiVersion Version of the API
     * @param {module:api/GETApi~servicesListByResourceGroup_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServicesList200Response}
     */
    servicesListByResourceGroup_1(subscriptionId, groupName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling servicesListByResourceGroup_1");
      }
      // verify the required parameter 'groupName' is set
      if (groupName === undefined || groupName === null) {
        throw new Error("Missing the required parameter 'groupName' when calling servicesListByResourceGroup_1");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicesListByResourceGroup_1");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'groupName': groupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServicesList200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicesListSkus_1 operation.
     * @callback module:api/GETApi~servicesListSkus_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ServicesListSkus200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get compatible SKUs
     * The services resource is the top-level resource that represents the Data Migration Service. The skus action returns the list of SKUs that a service resource can be updated to.
     * @param {String} subscriptionId Identifier of the subscription
     * @param {String} groupName Name of the resource group
     * @param {String} serviceName Name of the service
     * @param {String} apiVersion Version of the API
     * @param {module:api/GETApi~servicesListSkus_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServicesListSkus200Response}
     */
    servicesListSkus_1(subscriptionId, groupName, serviceName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling servicesListSkus_1");
      }
      // verify the required parameter 'groupName' is set
      if (groupName === undefined || groupName === null) {
        throw new Error("Missing the required parameter 'groupName' when calling servicesListSkus_1");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling servicesListSkus_1");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicesListSkus_1");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'groupName': groupName,
        'serviceName': serviceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServicesListSkus200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/skus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicesList_1 operation.
     * @callback module:api/GETApi~servicesList_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ServicesList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get services in subscription
     * The services resource is the top-level resource that represents the Data Migration Service. This method returns a list of service resources in a subscription.
     * @param {String} subscriptionId Identifier of the subscription
     * @param {String} apiVersion Version of the API
     * @param {module:api/GETApi~servicesList_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServicesList200Response}
     */
    servicesList_1(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling servicesList_1");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicesList_1");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServicesList200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/services', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tasksGet_1 operation.
     * @callback module:api/GETApi~tasksGet_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/TasksGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get task information
     * The tasks resource is a nested, proxy-only resource representing work performed by a DMS instance. The GET method retrieves information about a task.
     * @param {String} subscriptionId Identifier of the subscription
     * @param {String} groupName Name of the resource group
     * @param {String} serviceName Name of the service
     * @param {String} projectName Name of the project
     * @param {String} taskName Name of the Task
     * @param {String} apiVersion Version of the API
     * @param {Object} opts Optional parameters
     * @param {String} [expand] Expand the response
     * @param {module:api/GETApi~tasksGet_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TasksGet200Response}
     */
    tasksGet_1(subscriptionId, groupName, serviceName, projectName, taskName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling tasksGet_1");
      }
      // verify the required parameter 'groupName' is set
      if (groupName === undefined || groupName === null) {
        throw new Error("Missing the required parameter 'groupName' when calling tasksGet_1");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling tasksGet_1");
      }
      // verify the required parameter 'projectName' is set
      if (projectName === undefined || projectName === null) {
        throw new Error("Missing the required parameter 'projectName' when calling tasksGet_1");
      }
      // verify the required parameter 'taskName' is set
      if (taskName === undefined || taskName === null) {
        throw new Error("Missing the required parameter 'taskName' when calling tasksGet_1");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tasksGet_1");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'groupName': groupName,
        'serviceName': serviceName,
        'projectName': projectName,
        'taskName': taskName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TasksGet200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tasksList_1 operation.
     * @callback module:api/GETApi~tasksList_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/TasksList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get tasks in a service
     * The services resource is the top-level resource that represents the Data Migration Service. This method returns a list of tasks owned by a service resource. Some tasks may have a status of Unknown, which indicates that an error occurred while querying the status of that task.
     * @param {String} subscriptionId Identifier of the subscription
     * @param {String} groupName Name of the resource group
     * @param {String} serviceName Name of the service
     * @param {String} projectName Name of the project
     * @param {String} apiVersion Version of the API
     * @param {Object} opts Optional parameters
     * @param {String} [taskType] Filter tasks by task type
     * @param {module:api/GETApi~tasksList_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TasksList200Response}
     */
    tasksList_1(subscriptionId, groupName, serviceName, projectName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling tasksList_1");
      }
      // verify the required parameter 'groupName' is set
      if (groupName === undefined || groupName === null) {
        throw new Error("Missing the required parameter 'groupName' when calling tasksList_1");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling tasksList_1");
      }
      // verify the required parameter 'projectName' is set
      if (projectName === undefined || projectName === null) {
        throw new Error("Missing the required parameter 'projectName' when calling tasksList_1");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tasksList_1");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'groupName': groupName,
        'serviceName': serviceName,
        'projectName': projectName
      };
      let queryParams = {
        'api-version': apiVersion,
        'taskType': opts['taskType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TasksList200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the usagesList_0 operation.
     * @callback module:api/GETApi~usagesList_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/UsagesList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get resource quotas and usage information
     * This method returns region-specific quotas and resource usage information for the Data Migration Service.
     * @param {String} subscriptionId Identifier of the subscription
     * @param {String} location The Azure region of the operation
     * @param {String} apiVersion Version of the API
     * @param {module:api/GETApi~usagesList_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UsagesList200Response}
     */
    usagesList_0(subscriptionId, location, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling usagesList_0");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling usagesList_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling usagesList_0");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UsagesList200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/usages', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
