/*
 * Azure Data Migration Service Resource Provider
 * The Data Migration Service helps people migrate their data from on-premise database servers to Azure, or from older database software to newer software. The service manages one or more workers that are joined to a customer's virtual network, which is assumed to provide connectivity to their databases. To avoid frequent updates to the resource provider, data migration tasks are implemented by the resource provider in a generic way as task resources, each of which has a task type (which identifies the type of work to run), input, and output. The client is responsible for providing appropriate task type and inputs, which will be passed through unexamined to the machines that implement the functionality, and for understanding the output, which is passed back unexamined to the client.
 *
 * The version of the OpenAPI document: 2017-11-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A description of the scaling capacities of the SKU
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:16:12.119748-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ServicesListSkus200ResponseValueInnerCapacity {
  public static final String SERIALIZED_NAME_DEFAULT = "default";
  @SerializedName(SERIALIZED_NAME_DEFAULT)
  private Integer _default;

  public static final String SERIALIZED_NAME_MAXIMUM = "maximum";
  @SerializedName(SERIALIZED_NAME_MAXIMUM)
  private Integer maximum;

  public static final String SERIALIZED_NAME_MINIMUM = "minimum";
  @SerializedName(SERIALIZED_NAME_MINIMUM)
  private Integer minimum;

  /**
   * The scalability approach
   */
  @JsonAdapter(ScaleTypeEnum.Adapter.class)
  public enum ScaleTypeEnum {
    NONE("none"),
    
    MANUAL("manual"),
    
    AUTOMATIC("automatic");

    private String value;

    ScaleTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ScaleTypeEnum fromValue(String value) {
      for (ScaleTypeEnum b : ScaleTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ScaleTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScaleTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScaleTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ScaleTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ScaleTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SCALE_TYPE = "scaleType";
  @SerializedName(SERIALIZED_NAME_SCALE_TYPE)
  private ScaleTypeEnum scaleType;

  public ServicesListSkus200ResponseValueInnerCapacity() {
  }

  public ServicesListSkus200ResponseValueInnerCapacity _default(Integer _default) {
    this._default = _default;
    return this;
  }

  /**
   * The default capacity
   * @return _default
   */
  @javax.annotation.Nullable
  public Integer getDefault() {
    return _default;
  }

  public void setDefault(Integer _default) {
    this._default = _default;
  }


  public ServicesListSkus200ResponseValueInnerCapacity maximum(Integer maximum) {
    this.maximum = maximum;
    return this;
  }

  /**
   * The maximum capacity
   * @return maximum
   */
  @javax.annotation.Nullable
  public Integer getMaximum() {
    return maximum;
  }

  public void setMaximum(Integer maximum) {
    this.maximum = maximum;
  }


  public ServicesListSkus200ResponseValueInnerCapacity minimum(Integer minimum) {
    this.minimum = minimum;
    return this;
  }

  /**
   * The minimum capacity, usually 0 or 1.
   * @return minimum
   */
  @javax.annotation.Nullable
  public Integer getMinimum() {
    return minimum;
  }

  public void setMinimum(Integer minimum) {
    this.minimum = minimum;
  }


  public ServicesListSkus200ResponseValueInnerCapacity scaleType(ScaleTypeEnum scaleType) {
    this.scaleType = scaleType;
    return this;
  }

  /**
   * The scalability approach
   * @return scaleType
   */
  @javax.annotation.Nullable
  public ScaleTypeEnum getScaleType() {
    return scaleType;
  }

  public void setScaleType(ScaleTypeEnum scaleType) {
    this.scaleType = scaleType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServicesListSkus200ResponseValueInnerCapacity servicesListSkus200ResponseValueInnerCapacity = (ServicesListSkus200ResponseValueInnerCapacity) o;
    return Objects.equals(this._default, servicesListSkus200ResponseValueInnerCapacity._default) &&
        Objects.equals(this.maximum, servicesListSkus200ResponseValueInnerCapacity.maximum) &&
        Objects.equals(this.minimum, servicesListSkus200ResponseValueInnerCapacity.minimum) &&
        Objects.equals(this.scaleType, servicesListSkus200ResponseValueInnerCapacity.scaleType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_default, maximum, minimum, scaleType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServicesListSkus200ResponseValueInnerCapacity {\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    maximum: ").append(toIndentedString(maximum)).append("\n");
    sb.append("    minimum: ").append(toIndentedString(minimum)).append("\n");
    sb.append("    scaleType: ").append(toIndentedString(scaleType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("default");
    openapiFields.add("maximum");
    openapiFields.add("minimum");
    openapiFields.add("scaleType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServicesListSkus200ResponseValueInnerCapacity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServicesListSkus200ResponseValueInnerCapacity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServicesListSkus200ResponseValueInnerCapacity is not found in the empty JSON string", ServicesListSkus200ResponseValueInnerCapacity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServicesListSkus200ResponseValueInnerCapacity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServicesListSkus200ResponseValueInnerCapacity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("scaleType") != null && !jsonObj.get("scaleType").isJsonNull()) && !jsonObj.get("scaleType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scaleType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scaleType").toString()));
      }
      // validate the optional field `scaleType`
      if (jsonObj.get("scaleType") != null && !jsonObj.get("scaleType").isJsonNull()) {
        ScaleTypeEnum.validateJsonElement(jsonObj.get("scaleType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServicesListSkus200ResponseValueInnerCapacity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServicesListSkus200ResponseValueInnerCapacity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServicesListSkus200ResponseValueInnerCapacity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServicesListSkus200ResponseValueInnerCapacity.class));

       return (TypeAdapter<T>) new TypeAdapter<ServicesListSkus200ResponseValueInnerCapacity>() {
           @Override
           public void write(JsonWriter out, ServicesListSkus200ResponseValueInnerCapacity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServicesListSkus200ResponseValueInnerCapacity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServicesListSkus200ResponseValueInnerCapacity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServicesListSkus200ResponseValueInnerCapacity
   * @throws IOException if the JSON string is invalid with respect to ServicesListSkus200ResponseValueInnerCapacity
   */
  public static ServicesListSkus200ResponseValueInnerCapacity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServicesListSkus200ResponseValueInnerCapacity.class);
  }

  /**
   * Convert an instance of ServicesListSkus200ResponseValueInnerCapacity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

