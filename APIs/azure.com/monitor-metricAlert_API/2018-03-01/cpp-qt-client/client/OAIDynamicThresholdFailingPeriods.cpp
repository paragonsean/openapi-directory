/**
 * MonitorManagementClient
 * Azure Monitor client to create/update/delete metric based alerts.
 *
 * The version of the OpenAPI document: 2018-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDynamicThresholdFailingPeriods.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDynamicThresholdFailingPeriods::OAIDynamicThresholdFailingPeriods(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDynamicThresholdFailingPeriods::OAIDynamicThresholdFailingPeriods() {
    this->initializeModel();
}

OAIDynamicThresholdFailingPeriods::~OAIDynamicThresholdFailingPeriods() {}

void OAIDynamicThresholdFailingPeriods::initializeModel() {

    m_min_failing_periods_to_alert_isSet = false;
    m_min_failing_periods_to_alert_isValid = false;

    m_number_of_evaluation_periods_isSet = false;
    m_number_of_evaluation_periods_isValid = false;
}

void OAIDynamicThresholdFailingPeriods::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDynamicThresholdFailingPeriods::fromJsonObject(QJsonObject json) {

    m_min_failing_periods_to_alert_isValid = ::OpenAPI::fromJsonValue(m_min_failing_periods_to_alert, json[QString("minFailingPeriodsToAlert")]);
    m_min_failing_periods_to_alert_isSet = !json[QString("minFailingPeriodsToAlert")].isNull() && m_min_failing_periods_to_alert_isValid;

    m_number_of_evaluation_periods_isValid = ::OpenAPI::fromJsonValue(m_number_of_evaluation_periods, json[QString("numberOfEvaluationPeriods")]);
    m_number_of_evaluation_periods_isSet = !json[QString("numberOfEvaluationPeriods")].isNull() && m_number_of_evaluation_periods_isValid;
}

QString OAIDynamicThresholdFailingPeriods::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDynamicThresholdFailingPeriods::asJsonObject() const {
    QJsonObject obj;
    if (m_min_failing_periods_to_alert_isSet) {
        obj.insert(QString("minFailingPeriodsToAlert"), ::OpenAPI::toJsonValue(m_min_failing_periods_to_alert));
    }
    if (m_number_of_evaluation_periods_isSet) {
        obj.insert(QString("numberOfEvaluationPeriods"), ::OpenAPI::toJsonValue(m_number_of_evaluation_periods));
    }
    return obj;
}

double OAIDynamicThresholdFailingPeriods::getMinFailingPeriodsToAlert() const {
    return m_min_failing_periods_to_alert;
}
void OAIDynamicThresholdFailingPeriods::setMinFailingPeriodsToAlert(const double &min_failing_periods_to_alert) {
    m_min_failing_periods_to_alert = min_failing_periods_to_alert;
    m_min_failing_periods_to_alert_isSet = true;
}

bool OAIDynamicThresholdFailingPeriods::is_min_failing_periods_to_alert_Set() const{
    return m_min_failing_periods_to_alert_isSet;
}

bool OAIDynamicThresholdFailingPeriods::is_min_failing_periods_to_alert_Valid() const{
    return m_min_failing_periods_to_alert_isValid;
}

double OAIDynamicThresholdFailingPeriods::getNumberOfEvaluationPeriods() const {
    return m_number_of_evaluation_periods;
}
void OAIDynamicThresholdFailingPeriods::setNumberOfEvaluationPeriods(const double &number_of_evaluation_periods) {
    m_number_of_evaluation_periods = number_of_evaluation_periods;
    m_number_of_evaluation_periods_isSet = true;
}

bool OAIDynamicThresholdFailingPeriods::is_number_of_evaluation_periods_Set() const{
    return m_number_of_evaluation_periods_isSet;
}

bool OAIDynamicThresholdFailingPeriods::is_number_of_evaluation_periods_Valid() const{
    return m_number_of_evaluation_periods_isValid;
}

bool OAIDynamicThresholdFailingPeriods::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_min_failing_periods_to_alert_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_evaluation_periods_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDynamicThresholdFailingPeriods::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_min_failing_periods_to_alert_isValid && m_number_of_evaluation_periods_isValid && true;
}

} // namespace OpenAPI
