/**
 * MonitorManagementClient
 * Azure Monitor client to create/update/delete metric based alerts.
 *
 * The version of the OpenAPI document: 2018-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetricAlertStatusProperties model module.
 * @module model/MetricAlertStatusProperties
 * @version 2018-03-01
 */
class MetricAlertStatusProperties {
    /**
     * Constructs a new <code>MetricAlertStatusProperties</code>.
     * An alert status properties.
     * @alias module:model/MetricAlertStatusProperties
     */
    constructor() { 
        
        MetricAlertStatusProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetricAlertStatusProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricAlertStatusProperties} obj Optional instance to populate.
     * @return {module:model/MetricAlertStatusProperties} The populated <code>MetricAlertStatusProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricAlertStatusProperties();

            if (data.hasOwnProperty('dimensions')) {
                obj['dimensions'] = ApiClient.convertToType(data['dimensions'], {'String': 'String'});
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricAlertStatusProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricAlertStatusProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * An object describing the type of the dimensions.
 * @member {Object.<String, String>} dimensions
 */
MetricAlertStatusProperties.prototype['dimensions'] = undefined;

/**
 * status value
 * @member {String} status
 */
MetricAlertStatusProperties.prototype['status'] = undefined;

/**
 * UTC time when the status was checked.
 * @member {Date} timestamp
 */
MetricAlertStatusProperties.prototype['timestamp'] = undefined;






export default MetricAlertStatusProperties;

