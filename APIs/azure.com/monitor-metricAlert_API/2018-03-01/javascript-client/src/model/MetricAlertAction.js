/**
 * MonitorManagementClient
 * Azure Monitor client to create/update/delete metric based alerts.
 *
 * The version of the OpenAPI document: 2018-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetricAlertAction model module.
 * @module model/MetricAlertAction
 * @version 2018-03-01
 */
class MetricAlertAction {
    /**
     * Constructs a new <code>MetricAlertAction</code>.
     * An alert action.
     * @alias module:model/MetricAlertAction
     */
    constructor() { 
        
        MetricAlertAction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetricAlertAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricAlertAction} obj Optional instance to populate.
     * @return {module:model/MetricAlertAction} The populated <code>MetricAlertAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricAlertAction();

            if (data.hasOwnProperty('actionGroupId')) {
                obj['actionGroupId'] = ApiClient.convertToType(data['actionGroupId'], 'String');
            }
            if (data.hasOwnProperty('webhookProperties')) {
                obj['webhookProperties'] = ApiClient.convertToType(data['webhookProperties'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricAlertAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricAlertAction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['actionGroupId'] && !(typeof data['actionGroupId'] === 'string' || data['actionGroupId'] instanceof String)) {
            throw new Error("Expected the field `actionGroupId` to be a primitive type in the JSON string but got " + data['actionGroupId']);
        }

        return true;
    }


}



/**
 * the id of the action group to use.
 * @member {String} actionGroupId
 */
MetricAlertAction.prototype['actionGroupId'] = undefined;

/**
 * The properties of a webhook object.
 * @member {Object.<String, String>} webhookProperties
 */
MetricAlertAction.prototype['webhookProperties'] = undefined;






export default MetricAlertAction;

