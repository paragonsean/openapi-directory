/**
 * MonitorManagementClient
 * Azure Monitor client to create/update/delete metric based alerts.
 *
 * The version of the OpenAPI document: 2018-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetricAlertCriteria from './MetricAlertCriteria';
import MultiMetricCriteria from './MultiMetricCriteria';

/**
 * The MetricAlertMultipleResourceMultipleMetricCriteria model module.
 * @module model/MetricAlertMultipleResourceMultipleMetricCriteria
 * @version 2018-03-01
 */
class MetricAlertMultipleResourceMultipleMetricCriteria {
    /**
     * Constructs a new <code>MetricAlertMultipleResourceMultipleMetricCriteria</code>.
     * Specifies the metric alert criteria for multiple resource that has multiple metric criteria.
     * @alias module:model/MetricAlertMultipleResourceMultipleMetricCriteria
     * @extends module:model/MetricAlertCriteria
     * @implements module:model/MetricAlertCriteria
     * @param odataType {module:model/MetricAlertMultipleResourceMultipleMetricCriteria.OdataTypeEnum} specifies the type of the alert criteria.
     */
    constructor(odataType) { 
        MetricAlertCriteria.initialize(this, odataType);
        MetricAlertMultipleResourceMultipleMetricCriteria.initialize(this, odataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType) { 
    }

    /**
     * Constructs a <code>MetricAlertMultipleResourceMultipleMetricCriteria</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricAlertMultipleResourceMultipleMetricCriteria} obj Optional instance to populate.
     * @return {module:model/MetricAlertMultipleResourceMultipleMetricCriteria} The populated <code>MetricAlertMultipleResourceMultipleMetricCriteria</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricAlertMultipleResourceMultipleMetricCriteria();
            MetricAlertCriteria.constructFromObject(data, obj);
            MetricAlertCriteria.constructFromObject(data, obj);

            if (data.hasOwnProperty('allOf')) {
                obj['allOf'] = ApiClient.convertToType(data['allOf'], [MultiMetricCriteria]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricAlertMultipleResourceMultipleMetricCriteria</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricAlertMultipleResourceMultipleMetricCriteria</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MetricAlertMultipleResourceMultipleMetricCriteria.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allOf'])) {
            throw new Error("Expected the field `allOf` to be an array in the JSON data but got " + data['allOf']);
        }

        return true;
    }


}

MetricAlertMultipleResourceMultipleMetricCriteria.RequiredProperties = ["odata.type"];

/**
 * the list of multiple metric criteria for this 'all of' operation. 
 * @member {Array.<module:model/MultiMetricCriteria>} allOf
 */
MetricAlertMultipleResourceMultipleMetricCriteria.prototype['allOf'] = undefined;


// Implement MetricAlertCriteria interface:
/**
 * specifies the type of the alert criteria.
 * @member {module:model/MetricAlertCriteria.OdataTypeEnum} odata.type
 */
MetricAlertCriteria.prototype['odata.type'] = undefined;




export default MetricAlertMultipleResourceMultipleMetricCriteria;

