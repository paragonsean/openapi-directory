/**
 * MonitorManagementClient
 * Azure Monitor client to create/update/delete metric based alerts.
 *
 * The version of the OpenAPI document: 2018-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetricAlertCriteria model module.
 * @module model/MetricAlertCriteria
 * @version 2018-03-01
 */
class MetricAlertCriteria {
    /**
     * Constructs a new <code>MetricAlertCriteria</code>.
     * The rule criteria that defines the conditions of the alert rule.
     * @alias module:model/MetricAlertCriteria
     * @extends Object
     * @param odataType {module:model/MetricAlertCriteria.OdataTypeEnum} specifies the type of the alert criteria.
     */
    constructor(odataType) { 
        
        MetricAlertCriteria.initialize(this, odataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType) { 
        obj['odata.type'] = odataType;
    }

    /**
     * Constructs a <code>MetricAlertCriteria</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricAlertCriteria} obj Optional instance to populate.
     * @return {module:model/MetricAlertCriteria} The populated <code>MetricAlertCriteria</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricAlertCriteria();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('odata.type')) {
                obj['odata.type'] = ApiClient.convertToType(data['odata.type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricAlertCriteria</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricAlertCriteria</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MetricAlertCriteria.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['odata.type'] && !(typeof data['odata.type'] === 'string' || data['odata.type'] instanceof String)) {
            throw new Error("Expected the field `odata.type` to be a primitive type in the JSON string but got " + data['odata.type']);
        }

        return true;
    }


}

MetricAlertCriteria.RequiredProperties = ["odata.type"];

/**
 * specifies the type of the alert criteria.
 * @member {module:model/MetricAlertCriteria.OdataTypeEnum} odata.type
 */
MetricAlertCriteria.prototype['odata.type'] = undefined;





/**
 * Allowed values for the <code>odata.type</code> property.
 * @enum {String}
 * @readonly
 */
MetricAlertCriteria['OdataTypeEnum'] = {

    /**
     * value: "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
     * @const
     */
    "SingleResourceMultipleMetricCriteria": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",

    /**
     * value: "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
     * @const
     */
    "MultipleResourceMultipleMetricCriteria": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
};



export default MetricAlertCriteria;

