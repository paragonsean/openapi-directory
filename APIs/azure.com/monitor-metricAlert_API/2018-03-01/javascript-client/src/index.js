/**
 * MonitorManagementClient
 * Azure Monitor client to create/update/delete metric based alerts.
 *
 * The version of the OpenAPI document: 2018-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DynamicMetricCriteria from './model/DynamicMetricCriteria';
import DynamicThresholdFailingPeriods from './model/DynamicThresholdFailingPeriods';
import MetricAlertAction from './model/MetricAlertAction';
import MetricAlertCriteria from './model/MetricAlertCriteria';
import MetricAlertMultipleResourceMultipleMetricCriteria from './model/MetricAlertMultipleResourceMultipleMetricCriteria';
import MetricAlertProperties from './model/MetricAlertProperties';
import MetricAlertResource from './model/MetricAlertResource';
import MetricAlertResourceCollection from './model/MetricAlertResourceCollection';
import MetricAlertResourcePatch from './model/MetricAlertResourcePatch';
import MetricAlertSingleResourceMultipleMetricCriteria from './model/MetricAlertSingleResourceMultipleMetricCriteria';
import MetricAlertStatus from './model/MetricAlertStatus';
import MetricAlertStatusCollection from './model/MetricAlertStatusCollection';
import MetricAlertStatusProperties from './model/MetricAlertStatusProperties';
import MetricAlertsListBySubscriptionDefaultResponse from './model/MetricAlertsListBySubscriptionDefaultResponse';
import MetricCriteria from './model/MetricCriteria';
import MetricDimension from './model/MetricDimension';
import MultiMetricCriteria from './model/MultiMetricCriteria';
import Resource from './model/Resource';
import MetricAlertsApi from './api/MetricAlertsApi';
import MetricAlertsStatusApi from './api/MetricAlertsStatusApi';


/**
* Azure Monitor client to create/update/delete metric based alerts..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MonitorManagementClient = require('index'); // See note below*.
* var xxxSvc = new MonitorManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MonitorManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MonitorManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MonitorManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-03-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DynamicMetricCriteria model constructor.
     * @property {module:model/DynamicMetricCriteria}
     */
    DynamicMetricCriteria,

    /**
     * The DynamicThresholdFailingPeriods model constructor.
     * @property {module:model/DynamicThresholdFailingPeriods}
     */
    DynamicThresholdFailingPeriods,

    /**
     * The MetricAlertAction model constructor.
     * @property {module:model/MetricAlertAction}
     */
    MetricAlertAction,

    /**
     * The MetricAlertCriteria model constructor.
     * @property {module:model/MetricAlertCriteria}
     */
    MetricAlertCriteria,

    /**
     * The MetricAlertMultipleResourceMultipleMetricCriteria model constructor.
     * @property {module:model/MetricAlertMultipleResourceMultipleMetricCriteria}
     */
    MetricAlertMultipleResourceMultipleMetricCriteria,

    /**
     * The MetricAlertProperties model constructor.
     * @property {module:model/MetricAlertProperties}
     */
    MetricAlertProperties,

    /**
     * The MetricAlertResource model constructor.
     * @property {module:model/MetricAlertResource}
     */
    MetricAlertResource,

    /**
     * The MetricAlertResourceCollection model constructor.
     * @property {module:model/MetricAlertResourceCollection}
     */
    MetricAlertResourceCollection,

    /**
     * The MetricAlertResourcePatch model constructor.
     * @property {module:model/MetricAlertResourcePatch}
     */
    MetricAlertResourcePatch,

    /**
     * The MetricAlertSingleResourceMultipleMetricCriteria model constructor.
     * @property {module:model/MetricAlertSingleResourceMultipleMetricCriteria}
     */
    MetricAlertSingleResourceMultipleMetricCriteria,

    /**
     * The MetricAlertStatus model constructor.
     * @property {module:model/MetricAlertStatus}
     */
    MetricAlertStatus,

    /**
     * The MetricAlertStatusCollection model constructor.
     * @property {module:model/MetricAlertStatusCollection}
     */
    MetricAlertStatusCollection,

    /**
     * The MetricAlertStatusProperties model constructor.
     * @property {module:model/MetricAlertStatusProperties}
     */
    MetricAlertStatusProperties,

    /**
     * The MetricAlertsListBySubscriptionDefaultResponse model constructor.
     * @property {module:model/MetricAlertsListBySubscriptionDefaultResponse}
     */
    MetricAlertsListBySubscriptionDefaultResponse,

    /**
     * The MetricCriteria model constructor.
     * @property {module:model/MetricCriteria}
     */
    MetricCriteria,

    /**
     * The MetricDimension model constructor.
     * @property {module:model/MetricDimension}
     */
    MetricDimension,

    /**
     * The MultiMetricCriteria model constructor.
     * @property {module:model/MultiMetricCriteria}
     */
    MultiMetricCriteria,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
    * The MetricAlertsApi service constructor.
    * @property {module:api/MetricAlertsApi}
    */
    MetricAlertsApi,

    /**
    * The MetricAlertsStatusApi service constructor.
    * @property {module:api/MetricAlertsStatusApi}
    */
    MetricAlertsStatusApi
};
