# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetricAlertStatusProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimensions: Dict[str, str]=None, status: str=None, timestamp: datetime=None):
        """MetricAlertStatusProperties - a model defined in OpenAPI

        :param dimensions: The dimensions of this MetricAlertStatusProperties.
        :param status: The status of this MetricAlertStatusProperties.
        :param timestamp: The timestamp of this MetricAlertStatusProperties.
        """
        self.openapi_types = {
            'dimensions': Dict[str, str],
            'status': str,
            'timestamp': datetime
        }

        self.attribute_map = {
            'dimensions': 'dimensions',
            'status': 'status',
            'timestamp': 'timestamp'
        }

        self._dimensions = dimensions
        self._status = status
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricAlertStatusProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricAlertStatusProperties of this MetricAlertStatusProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimensions(self):
        """Gets the dimensions of this MetricAlertStatusProperties.

        An object describing the type of the dimensions.

        :return: The dimensions of this MetricAlertStatusProperties.
        :rtype: Dict[str, str]
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this MetricAlertStatusProperties.

        An object describing the type of the dimensions.

        :param dimensions: The dimensions of this MetricAlertStatusProperties.
        :type dimensions: Dict[str, str]
        """

        self._dimensions = dimensions

    @property
    def status(self):
        """Gets the status of this MetricAlertStatusProperties.

        status value

        :return: The status of this MetricAlertStatusProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MetricAlertStatusProperties.

        status value

        :param status: The status of this MetricAlertStatusProperties.
        :type status: str
        """

        self._status = status

    @property
    def timestamp(self):
        """Gets the timestamp of this MetricAlertStatusProperties.

        UTC time when the status was checked.

        :return: The timestamp of this MetricAlertStatusProperties.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this MetricAlertStatusProperties.

        UTC time when the status was checked.

        :param timestamp: The timestamp of this MetricAlertStatusProperties.
        :type timestamp: datetime
        """

        self._timestamp = timestamp
