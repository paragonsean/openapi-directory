/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectionTypeProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectionTypeProperties::OAIConnectionTypeProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectionTypeProperties::OAIConnectionTypeProperties() {
    this->initializeModel();
}

OAIConnectionTypeProperties::~OAIConnectionTypeProperties() {}

void OAIConnectionTypeProperties::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_field_definitions_isSet = false;
    m_field_definitions_isValid = false;

    m_is_global_isSet = false;
    m_is_global_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;
}

void OAIConnectionTypeProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnectionTypeProperties::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_field_definitions_isValid = ::OpenAPI::fromJsonValue(m_field_definitions, json[QString("fieldDefinitions")]);
    m_field_definitions_isSet = !json[QString("fieldDefinitions")].isNull() && m_field_definitions_isValid;

    m_is_global_isValid = ::OpenAPI::fromJsonValue(m_is_global, json[QString("isGlobal")]);
    m_is_global_isSet = !json[QString("isGlobal")].isNull() && m_is_global_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;
}

QString OAIConnectionTypeProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnectionTypeProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_field_definitions.size() > 0) {
        obj.insert(QString("fieldDefinitions"), ::OpenAPI::toJsonValue(m_field_definitions));
    }
    if (m_is_global_isSet) {
        obj.insert(QString("isGlobal"), ::OpenAPI::toJsonValue(m_is_global));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    return obj;
}

QDateTime OAIConnectionTypeProperties::getCreationTime() const {
    return m_creation_time;
}
void OAIConnectionTypeProperties::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIConnectionTypeProperties::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIConnectionTypeProperties::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIConnectionTypeProperties::getDescription() const {
    return m_description;
}
void OAIConnectionTypeProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIConnectionTypeProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIConnectionTypeProperties::is_description_Valid() const{
    return m_description_isValid;
}

QMap<QString, OAIFieldDefinition> OAIConnectionTypeProperties::getFieldDefinitions() const {
    return m_field_definitions;
}
void OAIConnectionTypeProperties::setFieldDefinitions(const QMap<QString, OAIFieldDefinition> &field_definitions) {
    m_field_definitions = field_definitions;
    m_field_definitions_isSet = true;
}

bool OAIConnectionTypeProperties::is_field_definitions_Set() const{
    return m_field_definitions_isSet;
}

bool OAIConnectionTypeProperties::is_field_definitions_Valid() const{
    return m_field_definitions_isValid;
}

bool OAIConnectionTypeProperties::isIsGlobal() const {
    return m_is_global;
}
void OAIConnectionTypeProperties::setIsGlobal(const bool &is_global) {
    m_is_global = is_global;
    m_is_global_isSet = true;
}

bool OAIConnectionTypeProperties::is_is_global_Set() const{
    return m_is_global_isSet;
}

bool OAIConnectionTypeProperties::is_is_global_Valid() const{
    return m_is_global_isValid;
}

QDateTime OAIConnectionTypeProperties::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIConnectionTypeProperties::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIConnectionTypeProperties::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIConnectionTypeProperties::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

bool OAIConnectionTypeProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_definitions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_global_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnectionTypeProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
