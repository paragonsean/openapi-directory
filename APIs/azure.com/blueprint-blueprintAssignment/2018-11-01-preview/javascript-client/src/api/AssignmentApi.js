/**
 * BlueprintClient
 * Azure Blueprints Client provides access to blueprint definitions, assignments, and artifacts, and related blueprint operations.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Assignment from '../model/Assignment';
import AssignmentList from '../model/AssignmentList';

/**
* Assignment service.
* @module api/AssignmentApi
* @version 2018-11-01-preview
*/
export default class AssignmentApi {

    /**
    * Constructs a new AssignmentApi. 
    * @alias module:api/AssignmentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the assignmentsCreateOrUpdate operation.
     * @callback module:api/AssignmentApi~assignmentsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Assignment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update a blueprint assignment.
     * @param {String} apiVersion Client API Version.
     * @param {String} scope The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved for future use.
     * @param {String} assignmentName Name of the blueprint assignment.
     * @param {module:model/Assignment} assignment Blueprint assignment object to save.
     * @param {module:api/AssignmentApi~assignmentsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Assignment}
     */
    assignmentsCreateOrUpdate(apiVersion, scope, assignmentName, assignment, callback) {
      let postBody = assignment;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling assignmentsCreateOrUpdate");
      }
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling assignmentsCreateOrUpdate");
      }
      // verify the required parameter 'assignmentName' is set
      if (assignmentName === undefined || assignmentName === null) {
        throw new Error("Missing the required parameter 'assignmentName' when calling assignmentsCreateOrUpdate");
      }
      // verify the required parameter 'assignment' is set
      if (assignment === undefined || assignment === null) {
        throw new Error("Missing the required parameter 'assignment' when calling assignmentsCreateOrUpdate");
      }

      let pathParams = {
        'scope': scope,
        'assignmentName': assignmentName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Assignment;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assignmentsDelete operation.
     * @callback module:api/AssignmentApi~assignmentsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Assignment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a blueprint assignment.
     * @param {String} apiVersion Client API Version.
     * @param {String} scope The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved for future use.
     * @param {String} assignmentName Name of the blueprint assignment.
     * @param {module:api/AssignmentApi~assignmentsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Assignment}
     */
    assignmentsDelete(apiVersion, scope, assignmentName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling assignmentsDelete");
      }
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling assignmentsDelete");
      }
      // verify the required parameter 'assignmentName' is set
      if (assignmentName === undefined || assignmentName === null) {
        throw new Error("Missing the required parameter 'assignmentName' when calling assignmentsDelete");
      }

      let pathParams = {
        'scope': scope,
        'assignmentName': assignmentName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Assignment;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assignmentsGet operation.
     * @callback module:api/AssignmentApi~assignmentsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Assignment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a blueprint assignment.
     * @param {String} apiVersion Client API Version.
     * @param {String} scope The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved for future use.
     * @param {String} assignmentName Name of the blueprint assignment.
     * @param {module:api/AssignmentApi~assignmentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Assignment}
     */
    assignmentsGet(apiVersion, scope, assignmentName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling assignmentsGet");
      }
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling assignmentsGet");
      }
      // verify the required parameter 'assignmentName' is set
      if (assignmentName === undefined || assignmentName === null) {
        throw new Error("Missing the required parameter 'assignmentName' when calling assignmentsGet");
      }

      let pathParams = {
        'scope': scope,
        'assignmentName': assignmentName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Assignment;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assignmentsList operation.
     * @callback module:api/AssignmentApi~assignmentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AssignmentList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List blueprint assignments within a subscription.
     * @param {String} apiVersion Client API Version.
     * @param {String} scope The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved for future use.
     * @param {module:api/AssignmentApi~assignmentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AssignmentList}
     */
    assignmentsList(apiVersion, scope, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling assignmentsList");
      }
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling assignmentsList");
      }

      let pathParams = {
        'scope': scope
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssignmentList;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.Blueprint/blueprintAssignments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
