/**
 * BlueprintClient
 * Azure Blueprint Client.
 *
 * The version of the OpenAPI document: 2017-11-11-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssignmentProperties.h
 *
 * Detailed properties for Assignment.
 */

#ifndef OAIAssignmentProperties_H
#define OAIAssignmentProperties_H

#include <QJsonObject>

#include "OAIAssignmentLockSettings.h"
#include "OAIAssignmentStatus.h"
#include "OAIParameterValueBase.h"
#include "OAIResourceGroupValue.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssignmentLockSettings;
class OAIParameterValueBase;
class OAIResourceGroupValue;
class OAIAssignmentStatus;

class OAIAssignmentProperties : public OAIObject {
public:
    OAIAssignmentProperties();
    OAIAssignmentProperties(QString json);
    ~OAIAssignmentProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBlueprintId() const;
    void setBlueprintId(const QString &blueprint_id);
    bool is_blueprint_id_Set() const;
    bool is_blueprint_id_Valid() const;

    OAIAssignmentLockSettings getLocks() const;
    void setLocks(const OAIAssignmentLockSettings &locks);
    bool is_locks_Set() const;
    bool is_locks_Valid() const;

    QMap<QString, OAIParameterValueBase> getParameters() const;
    void setParameters(const QMap<QString, OAIParameterValueBase> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QMap<QString, OAIResourceGroupValue> getResourceGroups() const;
    void setResourceGroups(const QMap<QString, OAIResourceGroupValue> &resource_groups);
    bool is_resource_groups_Set() const;
    bool is_resource_groups_Valid() const;

    OAIAssignmentStatus getStatus() const;
    void setStatus(const OAIAssignmentStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_blueprint_id;
    bool m_blueprint_id_isSet;
    bool m_blueprint_id_isValid;

    OAIAssignmentLockSettings m_locks;
    bool m_locks_isSet;
    bool m_locks_isValid;

    QMap<QString, OAIParameterValueBase> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QMap<QString, OAIResourceGroupValue> m_resource_groups;
    bool m_resource_groups_isSet;
    bool m_resource_groups_isValid;

    OAIAssignmentStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssignmentProperties)

#endif // OAIAssignmentProperties_H
