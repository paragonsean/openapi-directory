/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PricingProperties model module.
 * @module model/PricingProperties
 * @version 2018-06-01
 */
class PricingProperties {
    /**
     * Constructs a new <code>PricingProperties</code>.
     * Pricing properties for the relevant scope
     * @alias module:model/PricingProperties
     * @param pricingTier {module:model/PricingProperties.PricingTierEnum} The pricing tier value. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features.
     */
    constructor(pricingTier) { 
        
        PricingProperties.initialize(this, pricingTier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pricingTier) { 
        obj['pricingTier'] = pricingTier;
    }

    /**
     * Constructs a <code>PricingProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PricingProperties} obj Optional instance to populate.
     * @return {module:model/PricingProperties} The populated <code>PricingProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PricingProperties();

            if (data.hasOwnProperty('freeTrialRemainingTime')) {
                obj['freeTrialRemainingTime'] = ApiClient.convertToType(data['freeTrialRemainingTime'], 'String');
            }
            if (data.hasOwnProperty('pricingTier')) {
                obj['pricingTier'] = ApiClient.convertToType(data['pricingTier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PricingProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PricingProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PricingProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['freeTrialRemainingTime'] && !(typeof data['freeTrialRemainingTime'] === 'string' || data['freeTrialRemainingTime'] instanceof String)) {
            throw new Error("Expected the field `freeTrialRemainingTime` to be a primitive type in the JSON string but got " + data['freeTrialRemainingTime']);
        }
        // ensure the json data is a string
        if (data['pricingTier'] && !(typeof data['pricingTier'] === 'string' || data['pricingTier'] instanceof String)) {
            throw new Error("Expected the field `pricingTier` to be a primitive type in the JSON string but got " + data['pricingTier']);
        }

        return true;
    }


}

PricingProperties.RequiredProperties = ["pricingTier"];

/**
 * The duration left for the subscriptions free trial period - in ISO 8601 format (e.g. P3Y6M4DT12H30M5S).
 * @member {String} freeTrialRemainingTime
 */
PricingProperties.prototype['freeTrialRemainingTime'] = undefined;

/**
 * The pricing tier value. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features.
 * @member {module:model/PricingProperties.PricingTierEnum} pricingTier
 */
PricingProperties.prototype['pricingTier'] = undefined;





/**
 * Allowed values for the <code>pricingTier</code> property.
 * @enum {String}
 * @readonly
 */
PricingProperties['PricingTierEnum'] = {

    /**
     * value: "Free"
     * @const
     */
    "Free": "Free",

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard"
};



export default PricingProperties;

