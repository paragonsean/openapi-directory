/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Pricing from '../model/Pricing';
import PricingList from '../model/PricingList';
import PricingsListDefaultResponse from '../model/PricingsListDefaultResponse';

/**
* Pricings service.
* @module api/PricingsApi
* @version 2018-06-01
*/
export default class PricingsApi {

    /**
    * Constructs a new PricingsApi. 
    * @alias module:api/PricingsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the pricingsGet operation.
     * @callback module:api/PricingsApi~pricingsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Pricing} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a provided Security Center pricing configuration in the subscription.
     * @param {String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} pricingName name of the pricing configuration
     * @param {module:api/PricingsApi~pricingsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Pricing}
     */
    pricingsGet(apiVersion, subscriptionId, pricingName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pricingsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pricingsGet");
      }
      // verify the required parameter 'pricingName' is set
      if (pricingName === undefined || pricingName === null) {
        throw new Error("Missing the required parameter 'pricingName' when calling pricingsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'pricingName': pricingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Pricing;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings/{pricingName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingsList operation.
     * @callback module:api/PricingsApi~pricingsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PricingList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Security Center pricing configurations in the subscription.
     * @param {String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {module:api/PricingsApi~pricingsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PricingList}
     */
    pricingsList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pricingsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pricingsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PricingList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingsUpdate operation.
     * @callback module:api/PricingsApi~pricingsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Pricing} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a provided Security Center pricing configuration in the subscription.
     * @param {String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} pricingName name of the pricing configuration
     * @param {module:model/Pricing} pricing Pricing object
     * @param {module:api/PricingsApi~pricingsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Pricing}
     */
    pricingsUpdate(apiVersion, subscriptionId, pricingName, pricing, callback) {
      let postBody = pricing;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling pricingsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling pricingsUpdate");
      }
      // verify the required parameter 'pricingName' is set
      if (pricingName === undefined || pricingName === null) {
        throw new Error("Missing the required parameter 'pricingName' when calling pricingsUpdate");
      }
      // verify the required parameter 'pricing' is set
      if (pricing === undefined || pricing === null) {
        throw new Error("Missing the required parameter 'pricing' when calling pricingsUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'pricingName': pricingName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Pricing;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings/{pricingName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
