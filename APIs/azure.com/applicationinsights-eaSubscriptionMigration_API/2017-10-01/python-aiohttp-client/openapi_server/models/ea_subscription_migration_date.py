# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EASubscriptionMigrationDate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_grand_fatherable_subscription: bool=None, opted_in_date: datetime=None):
        """EASubscriptionMigrationDate - a model defined in OpenAPI

        :param is_grand_fatherable_subscription: The is_grand_fatherable_subscription of this EASubscriptionMigrationDate.
        :param opted_in_date: The opted_in_date of this EASubscriptionMigrationDate.
        """
        self.openapi_types = {
            'is_grand_fatherable_subscription': bool,
            'opted_in_date': datetime
        }

        self.attribute_map = {
            'is_grand_fatherable_subscription': 'isGrandFatherableSubscription',
            'opted_in_date': 'optedInDate'
        }

        self._is_grand_fatherable_subscription = is_grand_fatherable_subscription
        self._opted_in_date = opted_in_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EASubscriptionMigrationDate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EASubscriptionMigrationDate of this EASubscriptionMigrationDate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_grand_fatherable_subscription(self):
        """Gets the is_grand_fatherable_subscription of this EASubscriptionMigrationDate.

        Is subscription in the grand fatherable subscription list.

        :return: The is_grand_fatherable_subscription of this EASubscriptionMigrationDate.
        :rtype: bool
        """
        return self._is_grand_fatherable_subscription

    @is_grand_fatherable_subscription.setter
    def is_grand_fatherable_subscription(self, is_grand_fatherable_subscription):
        """Sets the is_grand_fatherable_subscription of this EASubscriptionMigrationDate.

        Is subscription in the grand fatherable subscription list.

        :param is_grand_fatherable_subscription: The is_grand_fatherable_subscription of this EASubscriptionMigrationDate.
        :type is_grand_fatherable_subscription: bool
        """

        self._is_grand_fatherable_subscription = is_grand_fatherable_subscription

    @property
    def opted_in_date(self):
        """Gets the opted_in_date of this EASubscriptionMigrationDate.

        Time to start using new pricing model.

        :return: The opted_in_date of this EASubscriptionMigrationDate.
        :rtype: datetime
        """
        return self._opted_in_date

    @opted_in_date.setter
    def opted_in_date(self, opted_in_date):
        """Sets the opted_in_date of this EASubscriptionMigrationDate.

        Time to start using new pricing model.

        :param opted_in_date: The opted_in_date of this EASubscriptionMigrationDate.
        :type opted_in_date: datetime
        """

        self._opted_in_date = opted_in_date
