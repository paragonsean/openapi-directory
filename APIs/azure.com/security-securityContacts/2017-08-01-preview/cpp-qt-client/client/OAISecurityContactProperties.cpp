/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISecurityContactProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISecurityContactProperties::OAISecurityContactProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISecurityContactProperties::OAISecurityContactProperties() {
    this->initializeModel();
}

OAISecurityContactProperties::~OAISecurityContactProperties() {}

void OAISecurityContactProperties::initializeModel() {

    m_alert_notifications_isSet = false;
    m_alert_notifications_isValid = false;

    m_alerts_to_admins_isSet = false;
    m_alerts_to_admins_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;
}

void OAISecurityContactProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISecurityContactProperties::fromJsonObject(QJsonObject json) {

    m_alert_notifications_isValid = ::OpenAPI::fromJsonValue(m_alert_notifications, json[QString("alertNotifications")]);
    m_alert_notifications_isSet = !json[QString("alertNotifications")].isNull() && m_alert_notifications_isValid;

    m_alerts_to_admins_isValid = ::OpenAPI::fromJsonValue(m_alerts_to_admins, json[QString("alertsToAdmins")]);
    m_alerts_to_admins_isSet = !json[QString("alertsToAdmins")].isNull() && m_alerts_to_admins_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;
}

QString OAISecurityContactProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISecurityContactProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_alert_notifications_isSet) {
        obj.insert(QString("alertNotifications"), ::OpenAPI::toJsonValue(m_alert_notifications));
    }
    if (m_alerts_to_admins_isSet) {
        obj.insert(QString("alertsToAdmins"), ::OpenAPI::toJsonValue(m_alerts_to_admins));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    return obj;
}

QString OAISecurityContactProperties::getAlertNotifications() const {
    return m_alert_notifications;
}
void OAISecurityContactProperties::setAlertNotifications(const QString &alert_notifications) {
    m_alert_notifications = alert_notifications;
    m_alert_notifications_isSet = true;
}

bool OAISecurityContactProperties::is_alert_notifications_Set() const{
    return m_alert_notifications_isSet;
}

bool OAISecurityContactProperties::is_alert_notifications_Valid() const{
    return m_alert_notifications_isValid;
}

QString OAISecurityContactProperties::getAlertsToAdmins() const {
    return m_alerts_to_admins;
}
void OAISecurityContactProperties::setAlertsToAdmins(const QString &alerts_to_admins) {
    m_alerts_to_admins = alerts_to_admins;
    m_alerts_to_admins_isSet = true;
}

bool OAISecurityContactProperties::is_alerts_to_admins_Set() const{
    return m_alerts_to_admins_isSet;
}

bool OAISecurityContactProperties::is_alerts_to_admins_Valid() const{
    return m_alerts_to_admins_isValid;
}

QString OAISecurityContactProperties::getEmail() const {
    return m_email;
}
void OAISecurityContactProperties::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAISecurityContactProperties::is_email_Set() const{
    return m_email_isSet;
}

bool OAISecurityContactProperties::is_email_Valid() const{
    return m_email_isValid;
}

QString OAISecurityContactProperties::getPhone() const {
    return m_phone;
}
void OAISecurityContactProperties::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAISecurityContactProperties::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAISecurityContactProperties::is_phone_Valid() const{
    return m_phone_isValid;
}

bool OAISecurityContactProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alert_notifications_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerts_to_admins_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISecurityContactProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_alert_notifications_isValid && m_alerts_to_admins_isValid && m_email_isValid && true;
}

} // namespace OpenAPI
