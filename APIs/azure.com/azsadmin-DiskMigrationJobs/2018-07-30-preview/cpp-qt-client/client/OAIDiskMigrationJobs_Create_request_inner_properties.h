/**
 * ComputeDiskAdminManagementClient
 * The Admin Compute Disk Management Client.
 *
 * The version of the OpenAPI document: 2018-07-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiskMigrationJobs_Create_request_inner_properties.h
 *
 * Managed disk properties.
 */

#ifndef OAIDiskMigrationJobs_Create_request_inner_properties_H
#define OAIDiskMigrationJobs_Create_request_inner_properties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDiskMigrationJobs_Create_request_inner_properties : public OAIObject {
public:
    OAIDiskMigrationJobs_Create_request_inner_properties();
    OAIDiskMigrationJobs_Create_request_inner_properties(QString json);
    ~OAIDiskMigrationJobs_Create_request_inner_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getActualSizeGb() const;
    void setActualSizeGb(const qint64 &actual_size_gb);
    bool is_actual_size_gb_Set() const;
    bool is_actual_size_gb_Valid() const;

    QString getDiskId() const;
    void setDiskId(const QString &disk_id);
    bool is_disk_id_Set() const;
    bool is_disk_id_Valid() const;

    QString getDiskSku() const;
    void setDiskSku(const QString &disk_sku);
    bool is_disk_sku_Set() const;
    bool is_disk_sku_Valid() const;

    QString getDiskType() const;
    void setDiskType(const QString &disk_type);
    bool is_disk_type_Set() const;
    bool is_disk_type_Valid() const;

    QString getManagedBy() const;
    void setManagedBy(const QString &managed_by);
    bool is_managed_by_Set() const;
    bool is_managed_by_Valid() const;

    qint64 getProvisionSizeGb() const;
    void setProvisionSizeGb(const qint64 &provision_size_gb);
    bool is_provision_size_gb_Set() const;
    bool is_provision_size_gb_Valid() const;

    QString getSharePath() const;
    void setSharePath(const QString &share_path);
    bool is_share_path_Set() const;
    bool is_share_path_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUserResourceId() const;
    void setUserResourceId(const QString &user_resource_id);
    bool is_user_resource_id_Set() const;
    bool is_user_resource_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_actual_size_gb;
    bool m_actual_size_gb_isSet;
    bool m_actual_size_gb_isValid;

    QString m_disk_id;
    bool m_disk_id_isSet;
    bool m_disk_id_isValid;

    QString m_disk_sku;
    bool m_disk_sku_isSet;
    bool m_disk_sku_isValid;

    QString m_disk_type;
    bool m_disk_type_isSet;
    bool m_disk_type_isValid;

    QString m_managed_by;
    bool m_managed_by_isSet;
    bool m_managed_by_isValid;

    qint64 m_provision_size_gb;
    bool m_provision_size_gb_isSet;
    bool m_provision_size_gb_isValid;

    QString m_share_path;
    bool m_share_path_isSet;
    bool m_share_path_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_user_resource_id;
    bool m_user_resource_id_isSet;
    bool m_user_resource_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiskMigrationJobs_Create_request_inner_properties)

#endif // OAIDiskMigrationJobs_Create_request_inner_properties_H
