/**
 * ComputeDiskAdminManagementClient
 * The Admin Compute Disk Management Client.
 *
 * The version of the OpenAPI document: 2018-07-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiskMigrationJobs_List_200_response_value_inner_properties_subtasks_inner_properties.h
 *
 * Disk migration child task properties.
 */

#ifndef OAIDiskMigrationJobs_List_200_response_value_inner_properties_subtasks_inner_properties_H
#define OAIDiskMigrationJobs_List_200_response_value_inner_properties_subtasks_inner_properties_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDiskMigrationJobs_List_200_response_value_inner_properties_subtasks_inner_properties : public OAIObject {
public:
    OAIDiskMigrationJobs_List_200_response_value_inner_properties_subtasks_inner_properties();
    OAIDiskMigrationJobs_List_200_response_value_inner_properties_subtasks_inner_properties(QString json);
    ~OAIDiskMigrationJobs_List_200_response_value_inner_properties_subtasks_inner_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDiskId() const;
    void setDiskId(const QString &disk_id);
    bool is_disk_id_Set() const;
    bool is_disk_id_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getMigrationSubtaskStatus() const;
    void setMigrationSubtaskStatus(const QString &migration_subtask_status);
    bool is_migration_subtask_status_Set() const;
    bool is_migration_subtask_status_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QString getSourceShare() const;
    void setSourceShare(const QString &source_share);
    bool is_source_share_Set() const;
    bool is_source_share_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getTargetDiskStateForMigration() const;
    void setTargetDiskStateForMigration(const QString &target_disk_state_for_migration);
    bool is_target_disk_state_for_migration_Set() const;
    bool is_target_disk_state_for_migration_Valid() const;

    QString getTargetShare() const;
    void setTargetShare(const QString &target_share);
    bool is_target_share_Set() const;
    bool is_target_share_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_disk_id;
    bool m_disk_id_isSet;
    bool m_disk_id_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_migration_subtask_status;
    bool m_migration_subtask_status_isSet;
    bool m_migration_subtask_status_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_source_share;
    bool m_source_share_isSet;
    bool m_source_share_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_target_disk_state_for_migration;
    bool m_target_disk_state_for_migration_isSet;
    bool m_target_disk_state_for_migration_isValid;

    QString m_target_share;
    bool m_target_share_isSet;
    bool m_target_share_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiskMigrationJobs_List_200_response_value_inner_properties_subtasks_inner_properties)

#endif // OAIDiskMigrationJobs_List_200_response_value_inner_properties_subtasks_inner_properties_H
