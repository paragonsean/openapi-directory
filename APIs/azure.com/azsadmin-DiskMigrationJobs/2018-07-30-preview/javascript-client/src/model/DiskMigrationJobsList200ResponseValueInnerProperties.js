/**
 * ComputeDiskAdminManagementClient
 * The Admin Compute Disk Management Client.
 *
 * The version of the OpenAPI document: 2018-07-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DiskMigrationJobsList200ResponseValueInnerPropertiesSubtasksInner from './DiskMigrationJobsList200ResponseValueInnerPropertiesSubtasksInner';

/**
 * The DiskMigrationJobsList200ResponseValueInnerProperties model module.
 * @module model/DiskMigrationJobsList200ResponseValueInnerProperties
 * @version 2018-07-30-preview
 */
class DiskMigrationJobsList200ResponseValueInnerProperties {
    /**
     * Constructs a new <code>DiskMigrationJobsList200ResponseValueInnerProperties</code>.
     * Disk migration job properties.
     * @alias module:model/DiskMigrationJobsList200ResponseValueInnerProperties
     */
    constructor() { 
        
        DiskMigrationJobsList200ResponseValueInnerProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiskMigrationJobsList200ResponseValueInnerProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiskMigrationJobsList200ResponseValueInnerProperties} obj Optional instance to populate.
     * @return {module:model/DiskMigrationJobsList200ResponseValueInnerProperties} The populated <code>DiskMigrationJobsList200ResponseValueInnerProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiskMigrationJobsList200ResponseValueInnerProperties();

            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('migrationId')) {
                obj['migrationId'] = ApiClient.convertToType(data['migrationId'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('subtasks')) {
                obj['subtasks'] = ApiClient.convertToType(data['subtasks'], [DiskMigrationJobsList200ResponseValueInnerPropertiesSubtasksInner]);
            }
            if (data.hasOwnProperty('targetShare')) {
                obj['targetShare'] = ApiClient.convertToType(data['targetShare'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiskMigrationJobsList200ResponseValueInnerProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiskMigrationJobsList200ResponseValueInnerProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['migrationId'] && !(typeof data['migrationId'] === 'string' || data['migrationId'] instanceof String)) {
            throw new Error("Expected the field `migrationId` to be a primitive type in the JSON string but got " + data['migrationId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        if (data['subtasks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['subtasks'])) {
                throw new Error("Expected the field `subtasks` to be an array in the JSON data but got " + data['subtasks']);
            }
            // validate the optional field `subtasks` (array)
            for (const item of data['subtasks']) {
                DiskMigrationJobsList200ResponseValueInnerPropertiesSubtasksInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['targetShare'] && !(typeof data['targetShare'] === 'string' || data['targetShare'] instanceof String)) {
            throw new Error("Expected the field `targetShare` to be a primitive type in the JSON string but got " + data['targetShare']);
        }

        return true;
    }


}



/**
 * The job creation time.
 * @member {Date} creationTime
 */
DiskMigrationJobsList200ResponseValueInnerProperties.prototype['creationTime'] = undefined;

/**
 * The job end time.
 * @member {Date} endTime
 */
DiskMigrationJobsList200ResponseValueInnerProperties.prototype['endTime'] = undefined;

/**
 * The disk migration id.
 * @member {String} migrationId
 */
DiskMigrationJobsList200ResponseValueInnerProperties.prototype['migrationId'] = undefined;

/**
 * The job start time.
 * @member {Date} startTime
 */
DiskMigrationJobsList200ResponseValueInnerProperties.prototype['startTime'] = undefined;

/**
 * Migration job status.
 * @member {module:model/DiskMigrationJobsList200ResponseValueInnerProperties.StatusEnum} status
 */
DiskMigrationJobsList200ResponseValueInnerProperties.prototype['status'] = undefined;

/**
 * List of disk migration tasks.
 * @member {Array.<module:model/DiskMigrationJobsList200ResponseValueInnerPropertiesSubtasksInner>} subtasks
 */
DiskMigrationJobsList200ResponseValueInnerProperties.prototype['subtasks'] = undefined;

/**
 * The target share of migration job.
 * @member {String} targetShare
 */
DiskMigrationJobsList200ResponseValueInnerProperties.prototype['targetShare'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
DiskMigrationJobsList200ResponseValueInnerProperties['StatusEnum'] = {

    /**
     * value: "Undefined"
     * @const
     */
    "Undefined": "Undefined",

    /**
     * value: "Running"
     * @const
     */
    "Running": "Running",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled",

    /**
     * value: "Pending"
     * @const
     */
    "Pending": "Pending"
};



export default DiskMigrationJobsList200ResponseValueInnerProperties;

