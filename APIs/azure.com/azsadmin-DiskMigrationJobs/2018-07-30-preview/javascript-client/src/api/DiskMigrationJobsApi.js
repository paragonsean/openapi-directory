/**
 * ComputeDiskAdminManagementClient
 * The Admin Compute Disk Management Client.
 *
 * The version of the OpenAPI document: 2018-07-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DiskMigrationJobsCreateRequestInner from '../model/DiskMigrationJobsCreateRequestInner';
import DiskMigrationJobsGet200Response from '../model/DiskMigrationJobsGet200Response';
import DiskMigrationJobsList200Response from '../model/DiskMigrationJobsList200Response';

/**
* DiskMigrationJobs service.
* @module api/DiskMigrationJobsApi
* @version 2018-07-30-preview
*/
export default class DiskMigrationJobsApi {

    /**
    * Constructs a new DiskMigrationJobsApi. 
    * @alias module:api/DiskMigrationJobsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the diskMigrationJobsCancel operation.
     * @callback module:api/DiskMigrationJobsApi~diskMigrationJobsCancelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DiskMigrationJobsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel a disk migration job.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} location Location of the resource.
     * @param {String} migrationId The migration job guid name.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/DiskMigrationJobsApi~diskMigrationJobsCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DiskMigrationJobsGet200Response}
     */
    diskMigrationJobsCancel(subscriptionId, location, migrationId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling diskMigrationJobsCancel");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling diskMigrationJobsCancel");
      }
      // verify the required parameter 'migrationId' is set
      if (migrationId === undefined || migrationId === null) {
        throw new Error("Missing the required parameter 'migrationId' when calling diskMigrationJobsCancel");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling diskMigrationJobsCancel");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location,
        'migrationId': migrationId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DiskMigrationJobsGet200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/diskmigrationjobs/{migrationId}/Cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the diskMigrationJobsCreate operation.
     * @callback module:api/DiskMigrationJobsApi~diskMigrationJobsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DiskMigrationJobsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a disk migration job.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} location Location of the resource.
     * @param {String} migrationId The migration job guid name.
     * @param {String} targetShare The target share name.
     * @param {String} apiVersion Client API Version.
     * @param {Array.<module:model/DiskMigrationJobsCreateRequestInner>} disks The parameters of disk list.
     * @param {module:api/DiskMigrationJobsApi~diskMigrationJobsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DiskMigrationJobsGet200Response}
     */
    diskMigrationJobsCreate(subscriptionId, location, migrationId, targetShare, apiVersion, disks, callback) {
      let postBody = disks;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling diskMigrationJobsCreate");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling diskMigrationJobsCreate");
      }
      // verify the required parameter 'migrationId' is set
      if (migrationId === undefined || migrationId === null) {
        throw new Error("Missing the required parameter 'migrationId' when calling diskMigrationJobsCreate");
      }
      // verify the required parameter 'targetShare' is set
      if (targetShare === undefined || targetShare === null) {
        throw new Error("Missing the required parameter 'targetShare' when calling diskMigrationJobsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling diskMigrationJobsCreate");
      }
      // verify the required parameter 'disks' is set
      if (disks === undefined || disks === null) {
        throw new Error("Missing the required parameter 'disks' when calling diskMigrationJobsCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location,
        'migrationId': migrationId
      };
      let queryParams = {
        'targetShare': targetShare,
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DiskMigrationJobsGet200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/diskmigrationjobs/{migrationId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the diskMigrationJobsGet operation.
     * @callback module:api/DiskMigrationJobsApi~diskMigrationJobsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DiskMigrationJobsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the requested disk migration job.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} location Location of the resource.
     * @param {String} migrationId The migration job guid name.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/DiskMigrationJobsApi~diskMigrationJobsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DiskMigrationJobsGet200Response}
     */
    diskMigrationJobsGet(subscriptionId, location, migrationId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling diskMigrationJobsGet");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling diskMigrationJobsGet");
      }
      // verify the required parameter 'migrationId' is set
      if (migrationId === undefined || migrationId === null) {
        throw new Error("Missing the required parameter 'migrationId' when calling diskMigrationJobsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling diskMigrationJobsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location,
        'migrationId': migrationId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DiskMigrationJobsGet200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/diskmigrationjobs/{migrationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the diskMigrationJobsList operation.
     * @callback module:api/DiskMigrationJobsApi~diskMigrationJobsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DiskMigrationJobsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of disk migration jobs.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} location Location of the resource.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {String} [status] The parameters of disk migration job status.
     * @param {module:api/DiskMigrationJobsApi~diskMigrationJobsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DiskMigrationJobsList200Response}
     */
    diskMigrationJobsList(subscriptionId, location, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling diskMigrationJobsList");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling diskMigrationJobsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling diskMigrationJobsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location
      };
      let queryParams = {
        'status': opts['status'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DiskMigrationJobsList200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/diskmigrationjobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
