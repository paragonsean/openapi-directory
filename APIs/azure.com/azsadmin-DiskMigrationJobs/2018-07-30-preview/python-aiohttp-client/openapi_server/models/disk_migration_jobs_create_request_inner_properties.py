# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DiskMigrationJobsCreateRequestInnerProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actual_size_gb: int=None, disk_id: str=None, disk_sku: str=None, disk_type: str=None, managed_by: str=None, provision_size_gb: int=None, share_path: str=None, status: str=None, user_resource_id: str=None):
        """DiskMigrationJobsCreateRequestInnerProperties - a model defined in OpenAPI

        :param actual_size_gb: The actual_size_gb of this DiskMigrationJobsCreateRequestInnerProperties.
        :param disk_id: The disk_id of this DiskMigrationJobsCreateRequestInnerProperties.
        :param disk_sku: The disk_sku of this DiskMigrationJobsCreateRequestInnerProperties.
        :param disk_type: The disk_type of this DiskMigrationJobsCreateRequestInnerProperties.
        :param managed_by: The managed_by of this DiskMigrationJobsCreateRequestInnerProperties.
        :param provision_size_gb: The provision_size_gb of this DiskMigrationJobsCreateRequestInnerProperties.
        :param share_path: The share_path of this DiskMigrationJobsCreateRequestInnerProperties.
        :param status: The status of this DiskMigrationJobsCreateRequestInnerProperties.
        :param user_resource_id: The user_resource_id of this DiskMigrationJobsCreateRequestInnerProperties.
        """
        self.openapi_types = {
            'actual_size_gb': int,
            'disk_id': str,
            'disk_sku': str,
            'disk_type': str,
            'managed_by': str,
            'provision_size_gb': int,
            'share_path': str,
            'status': str,
            'user_resource_id': str
        }

        self.attribute_map = {
            'actual_size_gb': 'actualSizeGB',
            'disk_id': 'diskId',
            'disk_sku': 'diskSku',
            'disk_type': 'diskType',
            'managed_by': 'managedBy',
            'provision_size_gb': 'provisionSizeGB',
            'share_path': 'sharePath',
            'status': 'status',
            'user_resource_id': 'userResourceId'
        }

        self._actual_size_gb = actual_size_gb
        self._disk_id = disk_id
        self._disk_sku = disk_sku
        self._disk_type = disk_type
        self._managed_by = managed_by
        self._provision_size_gb = provision_size_gb
        self._share_path = share_path
        self._status = status
        self._user_resource_id = user_resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiskMigrationJobsCreateRequestInnerProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiskMigrationJobs_Create_request_inner_properties of this DiskMigrationJobsCreateRequestInnerProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actual_size_gb(self):
        """Gets the actual_size_gb of this DiskMigrationJobsCreateRequestInnerProperties.

        The actual size of disk in GB.

        :return: The actual_size_gb of this DiskMigrationJobsCreateRequestInnerProperties.
        :rtype: int
        """
        return self._actual_size_gb

    @actual_size_gb.setter
    def actual_size_gb(self, actual_size_gb):
        """Sets the actual_size_gb of this DiskMigrationJobsCreateRequestInnerProperties.

        The actual size of disk in GB.

        :param actual_size_gb: The actual_size_gb of this DiskMigrationJobsCreateRequestInnerProperties.
        :type actual_size_gb: int
        """

        self._actual_size_gb = actual_size_gb

    @property
    def disk_id(self):
        """Gets the disk_id of this DiskMigrationJobsCreateRequestInnerProperties.

        The disk id.

        :return: The disk_id of this DiskMigrationJobsCreateRequestInnerProperties.
        :rtype: str
        """
        return self._disk_id

    @disk_id.setter
    def disk_id(self, disk_id):
        """Sets the disk_id of this DiskMigrationJobsCreateRequestInnerProperties.

        The disk id.

        :param disk_id: The disk_id of this DiskMigrationJobsCreateRequestInnerProperties.
        :type disk_id: str
        """

        self._disk_id = disk_id

    @property
    def disk_sku(self):
        """Gets the disk_sku of this DiskMigrationJobsCreateRequestInnerProperties.

        Disk Sku.

        :return: The disk_sku of this DiskMigrationJobsCreateRequestInnerProperties.
        :rtype: str
        """
        return self._disk_sku

    @disk_sku.setter
    def disk_sku(self, disk_sku):
        """Sets the disk_sku of this DiskMigrationJobsCreateRequestInnerProperties.

        Disk Sku.

        :param disk_sku: The disk_sku of this DiskMigrationJobsCreateRequestInnerProperties.
        :type disk_sku: str
        """
        allowed_values = ["Standard_LRS", "Standard_ZRS", "Standard_GRS", "Standard_RAGRS", "Premium_LRS", "StandardSSD_LRS", "UltraSSD_LRS"]  # noqa: E501
        if disk_sku not in allowed_values:
            raise ValueError(
                "Invalid value for `disk_sku` ({0}), must be one of {1}"
                .format(disk_sku, allowed_values)
            )

        self._disk_sku = disk_sku

    @property
    def disk_type(self):
        """Gets the disk_type of this DiskMigrationJobsCreateRequestInnerProperties.

        Disk resource type.

        :return: The disk_type of this DiskMigrationJobsCreateRequestInnerProperties.
        :rtype: str
        """
        return self._disk_type

    @disk_type.setter
    def disk_type(self, disk_type):
        """Sets the disk_type of this DiskMigrationJobsCreateRequestInnerProperties.

        Disk resource type.

        :param disk_type: The disk_type of this DiskMigrationJobsCreateRequestInnerProperties.
        :type disk_type: str
        """
        allowed_values = ["Undefined", "Disk", "Snapshot", "RestorePoint", "ManagedBlob"]  # noqa: E501
        if disk_type not in allowed_values:
            raise ValueError(
                "Invalid value for `disk_type` ({0}), must be one of {1}"
                .format(disk_type, allowed_values)
            )

        self._disk_type = disk_type

    @property
    def managed_by(self):
        """Gets the managed_by of this DiskMigrationJobsCreateRequestInnerProperties.

        Compute resource Uri which owns this disk.

        :return: The managed_by of this DiskMigrationJobsCreateRequestInnerProperties.
        :rtype: str
        """
        return self._managed_by

    @managed_by.setter
    def managed_by(self, managed_by):
        """Sets the managed_by of this DiskMigrationJobsCreateRequestInnerProperties.

        Compute resource Uri which owns this disk.

        :param managed_by: The managed_by of this DiskMigrationJobsCreateRequestInnerProperties.
        :type managed_by: str
        """

        self._managed_by = managed_by

    @property
    def provision_size_gb(self):
        """Gets the provision_size_gb of this DiskMigrationJobsCreateRequestInnerProperties.

        The provision size of disk in GB.

        :return: The provision_size_gb of this DiskMigrationJobsCreateRequestInnerProperties.
        :rtype: int
        """
        return self._provision_size_gb

    @provision_size_gb.setter
    def provision_size_gb(self, provision_size_gb):
        """Sets the provision_size_gb of this DiskMigrationJobsCreateRequestInnerProperties.

        The provision size of disk in GB.

        :param provision_size_gb: The provision_size_gb of this DiskMigrationJobsCreateRequestInnerProperties.
        :type provision_size_gb: int
        """

        self._provision_size_gb = provision_size_gb

    @property
    def share_path(self):
        """Gets the share_path of this DiskMigrationJobsCreateRequestInnerProperties.

        The disk share path.

        :return: The share_path of this DiskMigrationJobsCreateRequestInnerProperties.
        :rtype: str
        """
        return self._share_path

    @share_path.setter
    def share_path(self, share_path):
        """Sets the share_path of this DiskMigrationJobsCreateRequestInnerProperties.

        The disk share path.

        :param share_path: The share_path of this DiskMigrationJobsCreateRequestInnerProperties.
        :type share_path: str
        """

        self._share_path = share_path

    @property
    def status(self):
        """Gets the status of this DiskMigrationJobsCreateRequestInnerProperties.

        Disk State.

        :return: The status of this DiskMigrationJobsCreateRequestInnerProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DiskMigrationJobsCreateRequestInnerProperties.

        Disk State.

        :param status: The status of this DiskMigrationJobsCreateRequestInnerProperties.
        :type status: str
        """
        allowed_values = ["Undefined", "Unattached", "Attached", "Reserved", "ActiveSAS", "Unknown", "All", "Recommended", "OfflineMigration", "OnlineMigration"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def user_resource_id(self):
        """Gets the user_resource_id of this DiskMigrationJobsCreateRequestInnerProperties.

        The disk resource Uri from user view.

        :return: The user_resource_id of this DiskMigrationJobsCreateRequestInnerProperties.
        :rtype: str
        """
        return self._user_resource_id

    @user_resource_id.setter
    def user_resource_id(self, user_resource_id):
        """Sets the user_resource_id of this DiskMigrationJobsCreateRequestInnerProperties.

        The disk resource Uri from user view.

        :param user_resource_id: The user_resource_id of this DiskMigrationJobsCreateRequestInnerProperties.
        :type user_resource_id: str
        """

        self._user_resource_id = user_resource_id
