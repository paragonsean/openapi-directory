# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.disk_migration_jobs_list200_response_value_inner_properties_subtasks_inner import DiskMigrationJobsList200ResponseValueInnerPropertiesSubtasksInner
from openapi_server import util


class DiskMigrationJobsList200ResponseValueInnerProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_time: datetime=None, end_time: datetime=None, migration_id: str=None, start_time: datetime=None, status: str=None, subtasks: List[DiskMigrationJobsList200ResponseValueInnerPropertiesSubtasksInner]=None, target_share: str=None):
        """DiskMigrationJobsList200ResponseValueInnerProperties - a model defined in OpenAPI

        :param creation_time: The creation_time of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :param end_time: The end_time of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :param migration_id: The migration_id of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :param start_time: The start_time of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :param status: The status of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :param subtasks: The subtasks of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :param target_share: The target_share of this DiskMigrationJobsList200ResponseValueInnerProperties.
        """
        self.openapi_types = {
            'creation_time': datetime,
            'end_time': datetime,
            'migration_id': str,
            'start_time': datetime,
            'status': str,
            'subtasks': List[DiskMigrationJobsList200ResponseValueInnerPropertiesSubtasksInner],
            'target_share': str
        }

        self.attribute_map = {
            'creation_time': 'creationTime',
            'end_time': 'endTime',
            'migration_id': 'migrationId',
            'start_time': 'startTime',
            'status': 'status',
            'subtasks': 'subtasks',
            'target_share': 'targetShare'
        }

        self._creation_time = creation_time
        self._end_time = end_time
        self._migration_id = migration_id
        self._start_time = start_time
        self._status = status
        self._subtasks = subtasks
        self._target_share = target_share

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiskMigrationJobsList200ResponseValueInnerProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiskMigrationJobs_List_200_response_value_inner_properties of this DiskMigrationJobsList200ResponseValueInnerProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_time(self):
        """Gets the creation_time of this DiskMigrationJobsList200ResponseValueInnerProperties.

        The job creation time.

        :return: The creation_time of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DiskMigrationJobsList200ResponseValueInnerProperties.

        The job creation time.

        :param creation_time: The creation_time of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def end_time(self):
        """Gets the end_time of this DiskMigrationJobsList200ResponseValueInnerProperties.

        The job end time.

        :return: The end_time of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this DiskMigrationJobsList200ResponseValueInnerProperties.

        The job end time.

        :param end_time: The end_time of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def migration_id(self):
        """Gets the migration_id of this DiskMigrationJobsList200ResponseValueInnerProperties.

        The disk migration id.

        :return: The migration_id of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._migration_id

    @migration_id.setter
    def migration_id(self, migration_id):
        """Sets the migration_id of this DiskMigrationJobsList200ResponseValueInnerProperties.

        The disk migration id.

        :param migration_id: The migration_id of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :type migration_id: str
        """

        self._migration_id = migration_id

    @property
    def start_time(self):
        """Gets the start_time of this DiskMigrationJobsList200ResponseValueInnerProperties.

        The job start time.

        :return: The start_time of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this DiskMigrationJobsList200ResponseValueInnerProperties.

        The job start time.

        :param start_time: The start_time of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def status(self):
        """Gets the status of this DiskMigrationJobsList200ResponseValueInnerProperties.

        Migration job status.

        :return: The status of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DiskMigrationJobsList200ResponseValueInnerProperties.

        Migration job status.

        :param status: The status of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :type status: str
        """
        allowed_values = ["Undefined", "Running", "Succeeded", "Failed", "Canceled", "Pending"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def subtasks(self):
        """Gets the subtasks of this DiskMigrationJobsList200ResponseValueInnerProperties.

        List of disk migration tasks.

        :return: The subtasks of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :rtype: List[DiskMigrationJobsList200ResponseValueInnerPropertiesSubtasksInner]
        """
        return self._subtasks

    @subtasks.setter
    def subtasks(self, subtasks):
        """Sets the subtasks of this DiskMigrationJobsList200ResponseValueInnerProperties.

        List of disk migration tasks.

        :param subtasks: The subtasks of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :type subtasks: List[DiskMigrationJobsList200ResponseValueInnerPropertiesSubtasksInner]
        """

        self._subtasks = subtasks

    @property
    def target_share(self):
        """Gets the target_share of this DiskMigrationJobsList200ResponseValueInnerProperties.

        The target share of migration job.

        :return: The target_share of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :rtype: str
        """
        return self._target_share

    @target_share.setter
    def target_share(self, target_share):
        """Sets the target_share of this DiskMigrationJobsList200ResponseValueInnerProperties.

        The target share of migration job.

        :param target_share: The target_share of this DiskMigrationJobsList200ResponseValueInnerProperties.
        :type target_share: str
        """

        self._target_share = target_share
