/*
 * ComputeDiskAdminManagementClient
 * The Admin Compute Disk Management Client.
 *
 * The version of the OpenAPI document: 2018-07-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DiskMigrationJobsCreateRequestInner;
import org.openapitools.client.model.DiskMigrationJobsGet200Response;
import org.openapitools.client.model.DiskMigrationJobsList200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DiskMigrationJobsApi
 */
@Disabled
public class DiskMigrationJobsApiTest {

    private final DiskMigrationJobsApi api = new DiskMigrationJobsApi();

    /**
     * Cancel a disk migration job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void diskMigrationJobsCancelTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String migrationId = null;
        String apiVersion = null;
        DiskMigrationJobsGet200Response response = api.diskMigrationJobsCancel(subscriptionId, location, migrationId, apiVersion);
        // TODO: test validations
    }

    /**
     * Create a disk migration job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void diskMigrationJobsCreateTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String migrationId = null;
        String targetShare = null;
        String apiVersion = null;
        List<DiskMigrationJobsCreateRequestInner> disks = null;
        DiskMigrationJobsGet200Response response = api.diskMigrationJobsCreate(subscriptionId, location, migrationId, targetShare, apiVersion, disks);
        // TODO: test validations
    }

    /**
     * Returns the requested disk migration job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void diskMigrationJobsGetTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String migrationId = null;
        String apiVersion = null;
        DiskMigrationJobsGet200Response response = api.diskMigrationJobsGet(subscriptionId, location, migrationId, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns a list of disk migration jobs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void diskMigrationJobsListTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String apiVersion = null;
        String status = null;
        DiskMigrationJobsList200Response response = api.diskMigrationJobsList(subscriptionId, location, apiVersion, status);
        // TODO: test validations
    }

}
