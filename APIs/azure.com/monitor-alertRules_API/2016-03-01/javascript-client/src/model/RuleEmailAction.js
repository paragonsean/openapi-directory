/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RuleAction from './RuleAction';

/**
 * The RuleEmailAction model module.
 * @module model/RuleEmailAction
 * @version 2016-03-01
 */
class RuleEmailAction {
    /**
     * Constructs a new <code>RuleEmailAction</code>.
     * Specifies the action to send email when the rule condition is evaluated. The discriminator is always RuleEmailAction in this case.
     * @alias module:model/RuleEmailAction
     * @extends module:model/RuleAction
     * @implements module:model/RuleAction
     * @param odataType {String} specifies the type of the action. There are two types of actions: RuleEmailAction and RuleWebhookAction.
     */
    constructor(odataType) { 
        RuleAction.initialize(this, odataType);
        RuleEmailAction.initialize(this, odataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType) { 
    }

    /**
     * Constructs a <code>RuleEmailAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuleEmailAction} obj Optional instance to populate.
     * @return {module:model/RuleEmailAction} The populated <code>RuleEmailAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuleEmailAction();
            RuleAction.constructFromObject(data, obj);
            RuleAction.constructFromObject(data, obj);

            if (data.hasOwnProperty('customEmails')) {
                obj['customEmails'] = ApiClient.convertToType(data['customEmails'], ['String']);
            }
            if (data.hasOwnProperty('sendToServiceOwners')) {
                obj['sendToServiceOwners'] = ApiClient.convertToType(data['sendToServiceOwners'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RuleEmailAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RuleEmailAction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RuleEmailAction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['customEmails'])) {
            throw new Error("Expected the field `customEmails` to be an array in the JSON data but got " + data['customEmails']);
        }

        return true;
    }


}

RuleEmailAction.RequiredProperties = ["odata.type"];

/**
 * the list of administrator's custom email addresses to notify of the activation of the alert.
 * @member {Array.<String>} customEmails
 */
RuleEmailAction.prototype['customEmails'] = undefined;

/**
 * Whether the administrators (service and co-administrators) of the service should be notified when the alert is activated.
 * @member {Boolean} sendToServiceOwners
 */
RuleEmailAction.prototype['sendToServiceOwners'] = undefined;


// Implement RuleAction interface:
/**
 * specifies the type of the action. There are two types of actions: RuleEmailAction and RuleWebhookAction.
 * @member {String} odata.type
 */
RuleAction.prototype['odata.type'] = undefined;




export default RuleEmailAction;

