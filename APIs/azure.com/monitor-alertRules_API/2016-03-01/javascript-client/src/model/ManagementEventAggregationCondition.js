/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConditionOperator from './ConditionOperator';

/**
 * The ManagementEventAggregationCondition model module.
 * @module model/ManagementEventAggregationCondition
 * @version 2016-03-01
 */
class ManagementEventAggregationCondition {
    /**
     * Constructs a new <code>ManagementEventAggregationCondition</code>.
     * How the data that is collected should be combined over time.
     * @alias module:model/ManagementEventAggregationCondition
     */
    constructor() { 
        
        ManagementEventAggregationCondition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagementEventAggregationCondition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagementEventAggregationCondition} obj Optional instance to populate.
     * @return {module:model/ManagementEventAggregationCondition} The populated <code>ManagementEventAggregationCondition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagementEventAggregationCondition();

            if (data.hasOwnProperty('operator')) {
                obj['operator'] = ConditionOperator.constructFromObject(data['operator']);
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ApiClient.convertToType(data['threshold'], 'Number');
            }
            if (data.hasOwnProperty('windowSize')) {
                obj['windowSize'] = ApiClient.convertToType(data['windowSize'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagementEventAggregationCondition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagementEventAggregationCondition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['windowSize'] && !(typeof data['windowSize'] === 'string' || data['windowSize'] instanceof String)) {
            throw new Error("Expected the field `windowSize` to be a primitive type in the JSON string but got " + data['windowSize']);
        }

        return true;
    }


}



/**
 * @member {module:model/ConditionOperator} operator
 */
ManagementEventAggregationCondition.prototype['operator'] = undefined;

/**
 * The threshold value that activates the alert.
 * @member {Number} threshold
 */
ManagementEventAggregationCondition.prototype['threshold'] = undefined;

/**
 * the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold. If specified then it must be between 5 minutes and 1 day.
 * @member {String} windowSize
 */
ManagementEventAggregationCondition.prototype['windowSize'] = undefined;






export default ManagementEventAggregationCondition;

