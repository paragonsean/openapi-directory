/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AlertRule from './model/AlertRule';
import AlertRuleResource from './model/AlertRuleResource';
import AlertRuleResourceCollection from './model/AlertRuleResourceCollection';
import AlertRuleResourcePatch from './model/AlertRuleResourcePatch';
import ConditionOperator from './model/ConditionOperator';
import ErrorResponse from './model/ErrorResponse';
import LocationThresholdRuleCondition from './model/LocationThresholdRuleCondition';
import ManagementEventAggregationCondition from './model/ManagementEventAggregationCondition';
import ManagementEventRuleCondition from './model/ManagementEventRuleCondition';
import Resource from './model/Resource';
import RuleAction from './model/RuleAction';
import RuleCondition from './model/RuleCondition';
import RuleDataSource from './model/RuleDataSource';
import RuleEmailAction from './model/RuleEmailAction';
import RuleManagementEventClaimsDataSource from './model/RuleManagementEventClaimsDataSource';
import RuleManagementEventDataSource from './model/RuleManagementEventDataSource';
import RuleMetricDataSource from './model/RuleMetricDataSource';
import RuleWebhookAction from './model/RuleWebhookAction';
import ThresholdRuleCondition from './model/ThresholdRuleCondition';
import TimeAggregationOperator from './model/TimeAggregationOperator';
import AlertRulesApi from './api/AlertRulesApi';
import DefaultApi from './api/DefaultApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MonitorManagementClient = require('index'); // See note below*.
* var xxxSvc = new MonitorManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MonitorManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MonitorManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MonitorManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2016-03-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AlertRule model constructor.
     * @property {module:model/AlertRule}
     */
    AlertRule,

    /**
     * The AlertRuleResource model constructor.
     * @property {module:model/AlertRuleResource}
     */
    AlertRuleResource,

    /**
     * The AlertRuleResourceCollection model constructor.
     * @property {module:model/AlertRuleResourceCollection}
     */
    AlertRuleResourceCollection,

    /**
     * The AlertRuleResourcePatch model constructor.
     * @property {module:model/AlertRuleResourcePatch}
     */
    AlertRuleResourcePatch,

    /**
     * The ConditionOperator model constructor.
     * @property {module:model/ConditionOperator}
     */
    ConditionOperator,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The LocationThresholdRuleCondition model constructor.
     * @property {module:model/LocationThresholdRuleCondition}
     */
    LocationThresholdRuleCondition,

    /**
     * The ManagementEventAggregationCondition model constructor.
     * @property {module:model/ManagementEventAggregationCondition}
     */
    ManagementEventAggregationCondition,

    /**
     * The ManagementEventRuleCondition model constructor.
     * @property {module:model/ManagementEventRuleCondition}
     */
    ManagementEventRuleCondition,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The RuleAction model constructor.
     * @property {module:model/RuleAction}
     */
    RuleAction,

    /**
     * The RuleCondition model constructor.
     * @property {module:model/RuleCondition}
     */
    RuleCondition,

    /**
     * The RuleDataSource model constructor.
     * @property {module:model/RuleDataSource}
     */
    RuleDataSource,

    /**
     * The RuleEmailAction model constructor.
     * @property {module:model/RuleEmailAction}
     */
    RuleEmailAction,

    /**
     * The RuleManagementEventClaimsDataSource model constructor.
     * @property {module:model/RuleManagementEventClaimsDataSource}
     */
    RuleManagementEventClaimsDataSource,

    /**
     * The RuleManagementEventDataSource model constructor.
     * @property {module:model/RuleManagementEventDataSource}
     */
    RuleManagementEventDataSource,

    /**
     * The RuleMetricDataSource model constructor.
     * @property {module:model/RuleMetricDataSource}
     */
    RuleMetricDataSource,

    /**
     * The RuleWebhookAction model constructor.
     * @property {module:model/RuleWebhookAction}
     */
    RuleWebhookAction,

    /**
     * The ThresholdRuleCondition model constructor.
     * @property {module:model/ThresholdRuleCondition}
     */
    ThresholdRuleCondition,

    /**
     * The TimeAggregationOperator model constructor.
     * @property {module:model/TimeAggregationOperator}
     */
    TimeAggregationOperator,

    /**
    * The AlertRulesApi service constructor.
    * @property {module:api/AlertRulesApi}
    */
    AlertRulesApi,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
