/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRuleManagementEventDataSource.h
 *
 * A rule management event data source. The discriminator fields is always RuleManagementEventDataSource in this case.
 */

#ifndef OAIRuleManagementEventDataSource_H
#define OAIRuleManagementEventDataSource_H

#include <QJsonObject>

#include "OAIRuleDataSource.h"
#include "OAIRuleManagementEventClaimsDataSource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRuleManagementEventClaimsDataSource;

class OAIRuleManagementEventDataSource : public OAIObject {
public:
    OAIRuleManagementEventDataSource();
    OAIRuleManagementEventDataSource(QString json);
    ~OAIRuleManagementEventDataSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRuleManagementEventClaimsDataSource getClaims() const;
    void setClaims(const OAIRuleManagementEventClaimsDataSource &claims);
    bool is_claims_Set() const;
    bool is_claims_Valid() const;

    QString getEventName() const;
    void setEventName(const QString &event_name);
    bool is_event_name_Set() const;
    bool is_event_name_Valid() const;

    QString getEventSource() const;
    void setEventSource(const QString &event_source);
    bool is_event_source_Set() const;
    bool is_event_source_Valid() const;

    QString getLevel() const;
    void setLevel(const QString &level);
    bool is_level_Set() const;
    bool is_level_Valid() const;

    QString getOperationName() const;
    void setOperationName(const QString &operation_name);
    bool is_operation_name_Set() const;
    bool is_operation_name_Valid() const;

    QString getResourceGroupName() const;
    void setResourceGroupName(const QString &resource_group_name);
    bool is_resource_group_name_Set() const;
    bool is_resource_group_name_Valid() const;

    QString getResourceProviderName() const;
    void setResourceProviderName(const QString &resource_provider_name);
    bool is_resource_provider_name_Set() const;
    bool is_resource_provider_name_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSubStatus() const;
    void setSubStatus(const QString &sub_status);
    bool is_sub_status_Set() const;
    bool is_sub_status_Valid() const;

    QString getOdataType() const;
    void setOdataType(const QString &odata_type);
    bool is_odata_type_Set() const;
    bool is_odata_type_Valid() const;

    QString getResourceUri() const;
    void setResourceUri(const QString &resource_uri);
    bool is_resource_uri_Set() const;
    bool is_resource_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRuleManagementEventClaimsDataSource m_claims;
    bool m_claims_isSet;
    bool m_claims_isValid;

    QString m_event_name;
    bool m_event_name_isSet;
    bool m_event_name_isValid;

    QString m_event_source;
    bool m_event_source_isSet;
    bool m_event_source_isValid;

    QString m_level;
    bool m_level_isSet;
    bool m_level_isValid;

    QString m_operation_name;
    bool m_operation_name_isSet;
    bool m_operation_name_isValid;

    QString m_resource_group_name;
    bool m_resource_group_name_isSet;
    bool m_resource_group_name_isValid;

    QString m_resource_provider_name;
    bool m_resource_provider_name_isSet;
    bool m_resource_provider_name_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_sub_status;
    bool m_sub_status_isSet;
    bool m_sub_status_isValid;

    QString m_odata_type;
    bool m_odata_type_isSet;
    bool m_odata_type_isValid;

    QString m_resource_uri;
    bool m_resource_uri_isSet;
    bool m_resource_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRuleManagementEventDataSource)

#endif // OAIRuleManagementEventDataSource_H
