/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ServiceEndpointPoliciesUpdateRequest;
import org.openapitools.client.model.ServiceEndpointPolicy;
import org.openapitools.client.model.ServiceEndpointPolicyListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServiceEndpointPoliciesApi
 */
@Disabled
public class ServiceEndpointPoliciesApiTest {

    private final ServiceEndpointPoliciesApi api = new ServiceEndpointPoliciesApi();

    /**
     * Creates or updates a service Endpoint Policies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceEndpointPoliciesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceEndpointPolicyName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ServiceEndpointPolicy parameters = null;
        ServiceEndpointPolicy response = api.serviceEndpointPoliciesCreateOrUpdate(resourceGroupName, serviceEndpointPolicyName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the specified service endpoint policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceEndpointPoliciesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serviceEndpointPolicyName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.serviceEndpointPoliciesDelete(resourceGroupName, serviceEndpointPolicyName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the specified service Endpoint Policies in a specified resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceEndpointPoliciesGetTest() throws ApiException {
        String resourceGroupName = null;
        String serviceEndpointPolicyName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $expand = null;
        ServiceEndpointPolicy response = api.serviceEndpointPoliciesGet(resourceGroupName, serviceEndpointPolicyName, apiVersion, subscriptionId, $expand);
        // TODO: test validations
    }

    /**
     * Gets all the service endpoint policies in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceEndpointPoliciesListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        ServiceEndpointPolicyListResult response = api.serviceEndpointPoliciesList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all service endpoint Policies in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceEndpointPoliciesListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ServiceEndpointPolicyListResult response = api.serviceEndpointPoliciesListByResourceGroup(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates service Endpoint Policies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceEndpointPoliciesUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceEndpointPolicyName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ServiceEndpointPoliciesUpdateRequest parameters = null;
        ServiceEndpointPolicy response = api.serviceEndpointPoliciesUpdate(resourceGroupName, serviceEndpointPolicyName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
