/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ServiceEndpointPoliciesUpdateRequest from '../model/ServiceEndpointPoliciesUpdateRequest';
import ServiceEndpointPolicy from '../model/ServiceEndpointPolicy';
import ServiceEndpointPolicyListResult from '../model/ServiceEndpointPolicyListResult';

/**
* ServiceEndpointPolicies service.
* @module api/ServiceEndpointPoliciesApi
* @version 2018-07-01
*/
export default class ServiceEndpointPoliciesApi {

    /**
    * Constructs a new ServiceEndpointPoliciesApi. 
    * @alias module:api/ServiceEndpointPoliciesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the serviceEndpointPoliciesCreateOrUpdate operation.
     * @callback module:api/ServiceEndpointPoliciesApi~serviceEndpointPoliciesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceEndpointPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a service Endpoint Policies.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceEndpointPolicyName The name of the service endpoint policy.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ServiceEndpointPolicy} parameters Parameters supplied to the create or update service endpoint policy operation.
     * @param {module:api/ServiceEndpointPoliciesApi~serviceEndpointPoliciesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceEndpointPolicy}
     */
    serviceEndpointPoliciesCreateOrUpdate(resourceGroupName, serviceEndpointPolicyName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serviceEndpointPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'serviceEndpointPolicyName' is set
      if (serviceEndpointPolicyName === undefined || serviceEndpointPolicyName === null) {
        throw new Error("Missing the required parameter 'serviceEndpointPolicyName' when calling serviceEndpointPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceEndpointPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serviceEndpointPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling serviceEndpointPoliciesCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceEndpointPolicyName': serviceEndpointPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceEndpointPolicy;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceEndpointPoliciesDelete operation.
     * @callback module:api/ServiceEndpointPoliciesApi~serviceEndpointPoliciesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified service endpoint policy.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceEndpointPolicyName The name of the service endpoint policy.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ServiceEndpointPoliciesApi~serviceEndpointPoliciesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    serviceEndpointPoliciesDelete(resourceGroupName, serviceEndpointPolicyName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serviceEndpointPoliciesDelete");
      }
      // verify the required parameter 'serviceEndpointPolicyName' is set
      if (serviceEndpointPolicyName === undefined || serviceEndpointPolicyName === null) {
        throw new Error("Missing the required parameter 'serviceEndpointPolicyName' when calling serviceEndpointPoliciesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceEndpointPoliciesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serviceEndpointPoliciesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceEndpointPolicyName': serviceEndpointPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceEndpointPoliciesGet operation.
     * @callback module:api/ServiceEndpointPoliciesApi~serviceEndpointPoliciesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceEndpointPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the specified service Endpoint Policies in a specified resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceEndpointPolicyName The name of the service endpoint policy.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [expand] Expands referenced resources.
     * @param {module:api/ServiceEndpointPoliciesApi~serviceEndpointPoliciesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceEndpointPolicy}
     */
    serviceEndpointPoliciesGet(resourceGroupName, serviceEndpointPolicyName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serviceEndpointPoliciesGet");
      }
      // verify the required parameter 'serviceEndpointPolicyName' is set
      if (serviceEndpointPolicyName === undefined || serviceEndpointPolicyName === null) {
        throw new Error("Missing the required parameter 'serviceEndpointPolicyName' when calling serviceEndpointPoliciesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceEndpointPoliciesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serviceEndpointPoliciesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceEndpointPolicyName': serviceEndpointPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceEndpointPolicy;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceEndpointPoliciesList operation.
     * @callback module:api/ServiceEndpointPoliciesApi~serviceEndpointPoliciesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceEndpointPolicyListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the service endpoint policies in a subscription.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ServiceEndpointPoliciesApi~serviceEndpointPoliciesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceEndpointPolicyListResult}
     */
    serviceEndpointPoliciesList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceEndpointPoliciesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serviceEndpointPoliciesList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceEndpointPolicyListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Network/ServiceEndpointPolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceEndpointPoliciesListByResourceGroup operation.
     * @callback module:api/ServiceEndpointPoliciesApi~serviceEndpointPoliciesListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceEndpointPolicyListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all service endpoint Policies in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ServiceEndpointPoliciesApi~serviceEndpointPoliciesListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceEndpointPolicyListResult}
     */
    serviceEndpointPoliciesListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serviceEndpointPoliciesListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceEndpointPoliciesListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serviceEndpointPoliciesListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceEndpointPolicyListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceEndpointPoliciesUpdate operation.
     * @callback module:api/ServiceEndpointPoliciesApi~serviceEndpointPoliciesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceEndpointPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates service Endpoint Policies.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceEndpointPolicyName The name of the service endpoint policy.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ServiceEndpointPoliciesUpdateRequest} parameters Parameters supplied to update service endpoint policy tags.
     * @param {module:api/ServiceEndpointPoliciesApi~serviceEndpointPoliciesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceEndpointPolicy}
     */
    serviceEndpointPoliciesUpdate(resourceGroupName, serviceEndpointPolicyName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serviceEndpointPoliciesUpdate");
      }
      // verify the required parameter 'serviceEndpointPolicyName' is set
      if (serviceEndpointPolicyName === undefined || serviceEndpointPolicyName === null) {
        throw new Error("Missing the required parameter 'serviceEndpointPolicyName' when calling serviceEndpointPoliciesUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceEndpointPoliciesUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serviceEndpointPoliciesUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling serviceEndpointPoliciesUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceEndpointPolicyName': serviceEndpointPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceEndpointPolicy;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
