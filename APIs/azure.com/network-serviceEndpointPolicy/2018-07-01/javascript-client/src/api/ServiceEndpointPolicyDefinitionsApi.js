/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ServiceEndpointPolicyDefinition from '../model/ServiceEndpointPolicyDefinition';
import ServiceEndpointPolicyDefinitionListResult from '../model/ServiceEndpointPolicyDefinitionListResult';

/**
* ServiceEndpointPolicyDefinitions service.
* @module api/ServiceEndpointPolicyDefinitionsApi
* @version 2018-07-01
*/
export default class ServiceEndpointPolicyDefinitionsApi {

    /**
    * Constructs a new ServiceEndpointPolicyDefinitionsApi. 
    * @alias module:api/ServiceEndpointPolicyDefinitionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the serviceEndpointPolicyDefinitionsCreateOrUpdate operation.
     * @callback module:api/ServiceEndpointPolicyDefinitionsApi~serviceEndpointPolicyDefinitionsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceEndpointPolicyDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a service endpoint policy definition in the specified service endpoint policy.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceEndpointPolicyName The name of the service endpoint policy.
     * @param {String} serviceEndpointPolicyDefinitionName The name of the service endpoint policy definition name.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ServiceEndpointPolicyDefinition} serviceEndpointPolicyDefinitions Parameters supplied to the create or update service endpoint policy operation.
     * @param {module:api/ServiceEndpointPolicyDefinitionsApi~serviceEndpointPolicyDefinitionsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceEndpointPolicyDefinition}
     */
    serviceEndpointPolicyDefinitionsCreateOrUpdate(resourceGroupName, serviceEndpointPolicyName, serviceEndpointPolicyDefinitionName, apiVersion, subscriptionId, serviceEndpointPolicyDefinitions, callback) {
      let postBody = serviceEndpointPolicyDefinitions;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serviceEndpointPolicyDefinitionsCreateOrUpdate");
      }
      // verify the required parameter 'serviceEndpointPolicyName' is set
      if (serviceEndpointPolicyName === undefined || serviceEndpointPolicyName === null) {
        throw new Error("Missing the required parameter 'serviceEndpointPolicyName' when calling serviceEndpointPolicyDefinitionsCreateOrUpdate");
      }
      // verify the required parameter 'serviceEndpointPolicyDefinitionName' is set
      if (serviceEndpointPolicyDefinitionName === undefined || serviceEndpointPolicyDefinitionName === null) {
        throw new Error("Missing the required parameter 'serviceEndpointPolicyDefinitionName' when calling serviceEndpointPolicyDefinitionsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceEndpointPolicyDefinitionsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serviceEndpointPolicyDefinitionsCreateOrUpdate");
      }
      // verify the required parameter 'serviceEndpointPolicyDefinitions' is set
      if (serviceEndpointPolicyDefinitions === undefined || serviceEndpointPolicyDefinitions === null) {
        throw new Error("Missing the required parameter 'serviceEndpointPolicyDefinitions' when calling serviceEndpointPolicyDefinitionsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceEndpointPolicyName': serviceEndpointPolicyName,
        'serviceEndpointPolicyDefinitionName': serviceEndpointPolicyDefinitionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceEndpointPolicyDefinition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceEndpointPolicyDefinitionsDelete operation.
     * @callback module:api/ServiceEndpointPolicyDefinitionsApi~serviceEndpointPolicyDefinitionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified ServiceEndpoint policy definitions.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceEndpointPolicyName The name of the Service Endpoint Policy.
     * @param {String} serviceEndpointPolicyDefinitionName The name of the service endpoint policy definition.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ServiceEndpointPolicyDefinitionsApi~serviceEndpointPolicyDefinitionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    serviceEndpointPolicyDefinitionsDelete(resourceGroupName, serviceEndpointPolicyName, serviceEndpointPolicyDefinitionName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serviceEndpointPolicyDefinitionsDelete");
      }
      // verify the required parameter 'serviceEndpointPolicyName' is set
      if (serviceEndpointPolicyName === undefined || serviceEndpointPolicyName === null) {
        throw new Error("Missing the required parameter 'serviceEndpointPolicyName' when calling serviceEndpointPolicyDefinitionsDelete");
      }
      // verify the required parameter 'serviceEndpointPolicyDefinitionName' is set
      if (serviceEndpointPolicyDefinitionName === undefined || serviceEndpointPolicyDefinitionName === null) {
        throw new Error("Missing the required parameter 'serviceEndpointPolicyDefinitionName' when calling serviceEndpointPolicyDefinitionsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceEndpointPolicyDefinitionsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serviceEndpointPolicyDefinitionsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceEndpointPolicyName': serviceEndpointPolicyName,
        'serviceEndpointPolicyDefinitionName': serviceEndpointPolicyDefinitionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceEndpointPolicyDefinitionsGet operation.
     * @callback module:api/ServiceEndpointPolicyDefinitionsApi~serviceEndpointPolicyDefinitionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceEndpointPolicyDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the specified service endpoint policy definitions from service endpoint policy.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceEndpointPolicyName The name of the service endpoint policy name.
     * @param {String} serviceEndpointPolicyDefinitionName The name of the service endpoint policy definition name.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ServiceEndpointPolicyDefinitionsApi~serviceEndpointPolicyDefinitionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceEndpointPolicyDefinition}
     */
    serviceEndpointPolicyDefinitionsGet(resourceGroupName, serviceEndpointPolicyName, serviceEndpointPolicyDefinitionName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serviceEndpointPolicyDefinitionsGet");
      }
      // verify the required parameter 'serviceEndpointPolicyName' is set
      if (serviceEndpointPolicyName === undefined || serviceEndpointPolicyName === null) {
        throw new Error("Missing the required parameter 'serviceEndpointPolicyName' when calling serviceEndpointPolicyDefinitionsGet");
      }
      // verify the required parameter 'serviceEndpointPolicyDefinitionName' is set
      if (serviceEndpointPolicyDefinitionName === undefined || serviceEndpointPolicyDefinitionName === null) {
        throw new Error("Missing the required parameter 'serviceEndpointPolicyDefinitionName' when calling serviceEndpointPolicyDefinitionsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceEndpointPolicyDefinitionsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serviceEndpointPolicyDefinitionsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceEndpointPolicyName': serviceEndpointPolicyName,
        'serviceEndpointPolicyDefinitionName': serviceEndpointPolicyDefinitionName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceEndpointPolicyDefinition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceEndpointPolicyDefinitionsListByResourceGroup operation.
     * @callback module:api/ServiceEndpointPolicyDefinitionsApi~serviceEndpointPolicyDefinitionsListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceEndpointPolicyDefinitionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all service endpoint policy definitions in a service end point policy.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceEndpointPolicyName The name of the service endpoint policy name.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ServiceEndpointPolicyDefinitionsApi~serviceEndpointPolicyDefinitionsListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceEndpointPolicyDefinitionListResult}
     */
    serviceEndpointPolicyDefinitionsListByResourceGroup(resourceGroupName, serviceEndpointPolicyName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serviceEndpointPolicyDefinitionsListByResourceGroup");
      }
      // verify the required parameter 'serviceEndpointPolicyName' is set
      if (serviceEndpointPolicyName === undefined || serviceEndpointPolicyName === null) {
        throw new Error("Missing the required parameter 'serviceEndpointPolicyName' when calling serviceEndpointPolicyDefinitionsListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceEndpointPolicyDefinitionsListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serviceEndpointPolicyDefinitionsListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceEndpointPolicyName': serviceEndpointPolicyName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceEndpointPolicyDefinitionListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
