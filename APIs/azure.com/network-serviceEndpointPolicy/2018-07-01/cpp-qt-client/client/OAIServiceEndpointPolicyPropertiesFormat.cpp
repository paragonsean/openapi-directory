/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceEndpointPolicyPropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceEndpointPolicyPropertiesFormat::OAIServiceEndpointPolicyPropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceEndpointPolicyPropertiesFormat::OAIServiceEndpointPolicyPropertiesFormat() {
    this->initializeModel();
}

OAIServiceEndpointPolicyPropertiesFormat::~OAIServiceEndpointPolicyPropertiesFormat() {}

void OAIServiceEndpointPolicyPropertiesFormat::initializeModel() {

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_resource_guid_isSet = false;
    m_resource_guid_isValid = false;

    m_service_endpoint_policy_definitions_isSet = false;
    m_service_endpoint_policy_definitions_isValid = false;
}

void OAIServiceEndpointPolicyPropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceEndpointPolicyPropertiesFormat::fromJsonObject(QJsonObject json) {

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_resource_guid_isValid = ::OpenAPI::fromJsonValue(m_resource_guid, json[QString("resourceGuid")]);
    m_resource_guid_isSet = !json[QString("resourceGuid")].isNull() && m_resource_guid_isValid;

    m_service_endpoint_policy_definitions_isValid = ::OpenAPI::fromJsonValue(m_service_endpoint_policy_definitions, json[QString("serviceEndpointPolicyDefinitions")]);
    m_service_endpoint_policy_definitions_isSet = !json[QString("serviceEndpointPolicyDefinitions")].isNull() && m_service_endpoint_policy_definitions_isValid;
}

QString OAIServiceEndpointPolicyPropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceEndpointPolicyPropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_resource_guid_isSet) {
        obj.insert(QString("resourceGuid"), ::OpenAPI::toJsonValue(m_resource_guid));
    }
    if (m_service_endpoint_policy_definitions.size() > 0) {
        obj.insert(QString("serviceEndpointPolicyDefinitions"), ::OpenAPI::toJsonValue(m_service_endpoint_policy_definitions));
    }
    return obj;
}

QString OAIServiceEndpointPolicyPropertiesFormat::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIServiceEndpointPolicyPropertiesFormat::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIServiceEndpointPolicyPropertiesFormat::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIServiceEndpointPolicyPropertiesFormat::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAIServiceEndpointPolicyPropertiesFormat::getResourceGuid() const {
    return m_resource_guid;
}
void OAIServiceEndpointPolicyPropertiesFormat::setResourceGuid(const QString &resource_guid) {
    m_resource_guid = resource_guid;
    m_resource_guid_isSet = true;
}

bool OAIServiceEndpointPolicyPropertiesFormat::is_resource_guid_Set() const{
    return m_resource_guid_isSet;
}

bool OAIServiceEndpointPolicyPropertiesFormat::is_resource_guid_Valid() const{
    return m_resource_guid_isValid;
}

QList<OAIServiceEndpointPolicyDefinition> OAIServiceEndpointPolicyPropertiesFormat::getServiceEndpointPolicyDefinitions() const {
    return m_service_endpoint_policy_definitions;
}
void OAIServiceEndpointPolicyPropertiesFormat::setServiceEndpointPolicyDefinitions(const QList<OAIServiceEndpointPolicyDefinition> &service_endpoint_policy_definitions) {
    m_service_endpoint_policy_definitions = service_endpoint_policy_definitions;
    m_service_endpoint_policy_definitions_isSet = true;
}

bool OAIServiceEndpointPolicyPropertiesFormat::is_service_endpoint_policy_definitions_Set() const{
    return m_service_endpoint_policy_definitions_isSet;
}

bool OAIServiceEndpointPolicyPropertiesFormat::is_service_endpoint_policy_definitions_Valid() const{
    return m_service_endpoint_policy_definitions_isValid;
}

bool OAIServiceEndpointPolicyPropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_endpoint_policy_definitions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceEndpointPolicyPropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
