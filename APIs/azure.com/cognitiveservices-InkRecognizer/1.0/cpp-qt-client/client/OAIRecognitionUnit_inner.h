/**
 * Ink Recognizer Client
 * The service is used to perform ink layout and recognition of written words and shapes. Ink strokes passed to the service are recognized and organized into recognition results in the response
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecognitionUnit_inner.h
 *
 * This identifies the recognized entity
 */

#ifndef OAIRecognitionUnit_inner_H
#define OAIRecognitionUnit_inner_H

#include <QJsonObject>

#include "OAIAlternatePattern_inner.h"
#include "OAICategoryPattern.h"
#include "OAIClassPattern.h"
#include "OAIPointDetailsPattern.h"
#include "OAIRecognitionUnit_inner_boundingRectangle.h"
#include "OAIShapePattern.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAlternatePattern_inner;
class OAIRecognitionUnit_inner_boundingRectangle;
class OAIPointDetailsPattern;

class OAIRecognitionUnit_inner : public OAIObject {
public:
    OAIRecognitionUnit_inner();
    OAIRecognitionUnit_inner(QString json);
    ~OAIRecognitionUnit_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAlternatePattern_inner> getAlternates() const;
    void setAlternates(const QList<OAIAlternatePattern_inner> &alternates);
    bool is_alternates_Set() const;
    bool is_alternates_Valid() const;

    OAIRecognitionUnit_inner_boundingRectangle getBoundingRectangle() const;
    void setBoundingRectangle(const OAIRecognitionUnit_inner_boundingRectangle &bounding_rectangle);
    bool is_bounding_rectangle_Set() const;
    bool is_bounding_rectangle_Valid() const;

    OAICategoryPattern getCategory() const;
    void setCategory(const OAICategoryPattern &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    OAIPointDetailsPattern getCenter() const;
    void setCenter(const OAIPointDetailsPattern &center);
    bool is_center_Set() const;
    bool is_center_Valid() const;

    QList<qint32> getChildIds() const;
    void setChildIds(const QList<qint32> &child_ids);
    bool is_child_ids_Set() const;
    bool is_child_ids_Valid() const;

    OAIClassPattern getRClass() const;
    void setRClass(const OAIClassPattern &r_class);
    bool is_r_class_Set() const;
    bool is_r_class_Valid() const;

    double getConfidence() const;
    void setConfidence(const double &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getParentId() const;
    void setParentId(const qint32 &parent_id);
    bool is_parent_id_Set() const;
    bool is_parent_id_Valid() const;

    QList<OAIPointDetailsPattern> getPoints() const;
    void setPoints(const QList<OAIPointDetailsPattern> &points);
    bool is_points_Set() const;
    bool is_points_Valid() const;

    OAIShapePattern getRecognizedObject() const;
    void setRecognizedObject(const OAIShapePattern &recognized_object);
    bool is_recognized_object_Set() const;
    bool is_recognized_object_Valid() const;

    QString getRecognizedText() const;
    void setRecognizedText(const QString &recognized_text);
    bool is_recognized_text_Set() const;
    bool is_recognized_text_Valid() const;

    QList<OAIPointDetailsPattern> getRotatedBoundingRectangle() const;
    void setRotatedBoundingRectangle(const QList<OAIPointDetailsPattern> &rotated_bounding_rectangle);
    bool is_rotated_bounding_rectangle_Set() const;
    bool is_rotated_bounding_rectangle_Valid() const;

    double getRotationAngle() const;
    void setRotationAngle(const double &rotation_angle);
    bool is_rotation_angle_Set() const;
    bool is_rotation_angle_Valid() const;

    QList<qint32> getStrokeIds() const;
    void setStrokeIds(const QList<qint32> &stroke_ids);
    bool is_stroke_ids_Set() const;
    bool is_stroke_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAlternatePattern_inner> m_alternates;
    bool m_alternates_isSet;
    bool m_alternates_isValid;

    OAIRecognitionUnit_inner_boundingRectangle m_bounding_rectangle;
    bool m_bounding_rectangle_isSet;
    bool m_bounding_rectangle_isValid;

    OAICategoryPattern m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    OAIPointDetailsPattern m_center;
    bool m_center_isSet;
    bool m_center_isValid;

    QList<qint32> m_child_ids;
    bool m_child_ids_isSet;
    bool m_child_ids_isValid;

    OAIClassPattern m_r_class;
    bool m_r_class_isSet;
    bool m_r_class_isValid;

    double m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_parent_id;
    bool m_parent_id_isSet;
    bool m_parent_id_isValid;

    QList<OAIPointDetailsPattern> m_points;
    bool m_points_isSet;
    bool m_points_isValid;

    OAIShapePattern m_recognized_object;
    bool m_recognized_object_isSet;
    bool m_recognized_object_isValid;

    QString m_recognized_text;
    bool m_recognized_text_isSet;
    bool m_recognized_text_isValid;

    QList<OAIPointDetailsPattern> m_rotated_bounding_rectangle;
    bool m_rotated_bounding_rectangle_isSet;
    bool m_rotated_bounding_rectangle_isValid;

    double m_rotation_angle;
    bool m_rotation_angle_isSet;
    bool m_rotation_angle_isValid;

    QList<qint32> m_stroke_ids;
    bool m_stroke_ids_isSet;
    bool m_stroke_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecognitionUnit_inner)

#endif // OAIRecognitionUnit_inner_H
