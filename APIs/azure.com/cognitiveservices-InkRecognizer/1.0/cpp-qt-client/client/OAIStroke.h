/**
 * Ink Recognizer Client
 * The service is used to perform ink layout and recognition of written words and shapes. Ink strokes passed to the service are recognized and organized into recognition results in the response
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStroke.h
 *
 * 
 */

#ifndef OAIStroke_H
#define OAIStroke_H

#include <QJsonObject>

#include "OAIDrawingAttributesPattern.h"
#include "OAIInkPoint.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDrawingAttributesPattern;
class OAIInkPoint;

class OAIStroke : public OAIObject {
public:
    OAIStroke();
    OAIStroke(QString json);
    ~OAIStroke() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDrawingAttributesPattern getDrawingAttributes() const;
    void setDrawingAttributes(const OAIDrawingAttributesPattern &drawing_attributes);
    bool is_drawing_attributes_Set() const;
    bool is_drawing_attributes_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QList<OAIInkPoint> getPoints() const;
    void setPoints(const QList<OAIInkPoint> &points);
    bool is_points_Set() const;
    bool is_points_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDrawingAttributesPattern m_drawing_attributes;
    bool m_drawing_attributes_isSet;
    bool m_drawing_attributes_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QList<OAIInkPoint> m_points;
    bool m_points_isSet;
    bool m_points_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStroke)

#endif // OAIStroke_H
