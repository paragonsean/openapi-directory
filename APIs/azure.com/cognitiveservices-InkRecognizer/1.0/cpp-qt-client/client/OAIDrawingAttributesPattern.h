/**
 * Ink Recognizer Client
 * The service is used to perform ink layout and recognition of written words and shapes. Ink strokes passed to the service are recognized and organized into recognition results in the response
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDrawingAttributesPattern.h
 *
 * The properties to use when rendering ink
 */

#ifndef OAIDrawingAttributesPattern_H
#define OAIDrawingAttributesPattern_H

#include <QJsonObject>

#include "OAIDrawingAttributesPattern_color.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDrawingAttributesPattern_color;

class OAIDrawingAttributesPattern : public OAIObject {
public:
    OAIDrawingAttributesPattern();
    OAIDrawingAttributesPattern(QString json);
    ~OAIDrawingAttributesPattern() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDrawingAttributesPattern_color getColor() const;
    void setColor(const OAIDrawingAttributesPattern_color &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    bool isFitToCurve() const;
    void setFitToCurve(const bool &fit_to_curve);
    bool is_fit_to_curve_Set() const;
    bool is_fit_to_curve_Valid() const;

    double getHeight() const;
    void setHeight(const double &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    bool isIgnorePressure() const;
    void setIgnorePressure(const bool &ignore_pressure);
    bool is_ignore_pressure_Set() const;
    bool is_ignore_pressure_Valid() const;

    QString getRasterOp() const;
    void setRasterOp(const QString &raster_op);
    bool is_raster_op_Set() const;
    bool is_raster_op_Valid() const;

    QString getTip() const;
    void setTip(const QString &tip);
    bool is_tip_Set() const;
    bool is_tip_Valid() const;

    double getWidth() const;
    void setWidth(const double &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDrawingAttributesPattern_color m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    bool m_fit_to_curve;
    bool m_fit_to_curve_isSet;
    bool m_fit_to_curve_isValid;

    double m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    bool m_ignore_pressure;
    bool m_ignore_pressure_isSet;
    bool m_ignore_pressure_isValid;

    QString m_raster_op;
    bool m_raster_op_isSet;
    bool m_raster_op_isValid;

    QString m_tip;
    bool m_tip_isSet;
    bool m_tip_isValid;

    double m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDrawingAttributesPattern)

#endif // OAIDrawingAttributesPattern_H
