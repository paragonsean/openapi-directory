/**
 * Ink Recognizer Client
 * The service is used to perform ink layout and recognition of written words and shapes. Ink strokes passed to the service are recognized and organized into recognition results in the response
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShapePattern.h
 *
 * The category should be used to determines the field to read the recognition result. Recognized Object represents the shape that was recognized for the node with category as inkDrawing. For handwriting related nodes, recognizedText contains the actual recognition result.
 */

#ifndef OAIShapePattern_H
#define OAIShapePattern_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIShapePattern : public OAIEnum {
public:
    OAIShapePattern();
    OAIShapePattern(QString json);
    ~OAIShapePattern() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIShapePattern {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        DRAWING, 
        SQUARE, 
        RECTANGLE, 
        CIRCLE, 
        ELLIPSE, 
        TRIANGLE, 
        ISOSCELESTRIANGLE, 
        EQUILATERALTRIANGLE, 
        RIGHTTRIANGLE, 
        QUADRILATERAL, 
        DIAMOND, 
        TRAPEZOID, 
        PARALLELOGRAM, 
        PENTAGON, 
        HEXAGON, 
        BLOCKARROW, 
        HEART, 
        STARSIMPLE, 
        STARCROSSED, 
        CLOUD, 
        LINE, 
        CURVE, 
        POLYLINE
    };
    OAIShapePattern::eOAIShapePattern getValue() const;
    void setValue(const OAIShapePattern::eOAIShapePattern& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIShapePattern m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShapePattern)

#endif // OAIShapePattern_H
