/**
 * Ink Recognizer Client
 * The service is used to perform ink layout and recognition of written words and shapes. Ink strokes passed to the service are recognized and organized into recognition results in the response
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClassPattern.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClassPattern::OAIClassPattern(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClassPattern::OAIClassPattern() {
    this->initializeModel();
}

OAIClassPattern::~OAIClassPattern() {}

void OAIClassPattern::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIClassPattern::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIClassPattern::fromJson(QString jsonString) {
    
    if ( jsonString.compare("container", Qt::CaseInsensitive) == 0) {
        m_value = eOAIClassPattern::CONTAINER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("leaf", Qt::CaseInsensitive) == 0) {
        m_value = eOAIClassPattern::LEAF;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIClassPattern::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIClassPattern::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIClassPattern::CONTAINER:
            val = "container";
            break;
        case eOAIClassPattern::LEAF:
            val = "leaf";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIClassPattern::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIClassPattern::eOAIClassPattern OAIClassPattern::getValue() const {
    return m_value;
}

void OAIClassPattern::setValue(const OAIClassPattern::eOAIClassPattern& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIClassPattern::isSet() const {
    
    return m_value_isSet;
}

bool OAIClassPattern::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
