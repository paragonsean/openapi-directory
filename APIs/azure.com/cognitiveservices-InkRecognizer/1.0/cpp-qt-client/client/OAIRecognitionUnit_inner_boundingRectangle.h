/**
 * Ink Recognizer Client
 * The service is used to perform ink layout and recognition of written words and shapes. Ink strokes passed to the service are recognized and organized into recognition results in the response
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecognitionUnit_inner_boundingRectangle.h
 *
 * The bounding rectangle of the recognition unit represented by the coordinates of the top left corner (topX,topY) along with width and height of the rectangle. Note that this rectangle is not rotated. So for  rotated objects such as slanted handwriting, it will cover the entire object. The unit will be matched to the one specified in the original request (mm by default.) 
 */

#ifndef OAIRecognitionUnit_inner_boundingRectangle_H
#define OAIRecognitionUnit_inner_boundingRectangle_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRecognitionUnit_inner_boundingRectangle : public OAIObject {
public:
    OAIRecognitionUnit_inner_boundingRectangle();
    OAIRecognitionUnit_inner_boundingRectangle(QString json);
    ~OAIRecognitionUnit_inner_boundingRectangle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getHeight() const;
    void setHeight(const double &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    double getTopX() const;
    void setTopX(const double &top_x);
    bool is_top_x_Set() const;
    bool is_top_x_Valid() const;

    double getTopY() const;
    void setTopY(const double &top_y);
    bool is_top_y_Set() const;
    bool is_top_y_Valid() const;

    double getWidth() const;
    void setWidth(const double &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    double m_top_x;
    bool m_top_x_isSet;
    bool m_top_x_isValid;

    double m_top_y;
    bool m_top_y_isSet;
    bool m_top_y_isValid;

    double m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecognitionUnit_inner_boundingRectangle)

#endif // OAIRecognitionUnit_inner_boundingRectangle_H
