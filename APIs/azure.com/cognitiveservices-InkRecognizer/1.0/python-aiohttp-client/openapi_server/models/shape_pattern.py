# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShapePattern(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DRAWING = 'drawing'
    SQUARE = 'square'
    RECTANGLE = 'rectangle'
    CIRCLE = 'circle'
    ELLIPSE = 'ellipse'
    TRIANGLE = 'triangle'
    ISOSCELESTRIANGLE = 'isoscelesTriangle'
    EQUILATERALTRIANGLE = 'equilateralTriangle'
    RIGHTTRIANGLE = 'rightTriangle'
    QUADRILATERAL = 'quadrilateral'
    DIAMOND = 'diamond'
    TRAPEZOID = 'trapezoid'
    PARALLELOGRAM = 'parallelogram'
    PENTAGON = 'pentagon'
    HEXAGON = 'hexagon'
    BLOCKARROW = 'blockArrow'
    HEART = 'heart'
    STARSIMPLE = 'starSimple'
    STARCROSSED = 'starCrossed'
    CLOUD = 'cloud'
    LINE = 'line'
    CURVE = 'curve'
    POLYLINE = 'polyLine'

    def __init__(self):
        """ShapePattern - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShapePattern':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The shapePattern of this ShapePattern.
        """
        return util.deserialize_model(dikt, cls)
