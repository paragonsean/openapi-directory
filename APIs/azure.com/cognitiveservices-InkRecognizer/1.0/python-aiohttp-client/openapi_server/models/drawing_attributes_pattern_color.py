# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DrawingAttributesPatternColor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, a: float=None, b: float=None, g: float=None, r: float=None):
        """DrawingAttributesPatternColor - a model defined in OpenAPI

        :param a: The a of this DrawingAttributesPatternColor.
        :param b: The b of this DrawingAttributesPatternColor.
        :param g: The g of this DrawingAttributesPatternColor.
        :param r: The r of this DrawingAttributesPatternColor.
        """
        self.openapi_types = {
            'a': float,
            'b': float,
            'g': float,
            'r': float
        }

        self.attribute_map = {
            'a': 'a',
            'b': 'b',
            'g': 'g',
            'r': 'r'
        }

        self._a = a
        self._b = b
        self._g = g
        self._r = r

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DrawingAttributesPatternColor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The drawingAttributesPattern_color of this DrawingAttributesPatternColor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def a(self):
        """Gets the a of this DrawingAttributesPatternColor.

        The alpha component of the color

        :return: The a of this DrawingAttributesPatternColor.
        :rtype: float
        """
        return self._a

    @a.setter
    def a(self, a):
        """Sets the a of this DrawingAttributesPatternColor.

        The alpha component of the color

        :param a: The a of this DrawingAttributesPatternColor.
        :type a: float
        """

        self._a = a

    @property
    def b(self):
        """Gets the b of this DrawingAttributesPatternColor.

        The blue component of the color

        :return: The b of this DrawingAttributesPatternColor.
        :rtype: float
        """
        return self._b

    @b.setter
    def b(self, b):
        """Sets the b of this DrawingAttributesPatternColor.

        The blue component of the color

        :param b: The b of this DrawingAttributesPatternColor.
        :type b: float
        """

        self._b = b

    @property
    def g(self):
        """Gets the g of this DrawingAttributesPatternColor.

        The green component of the color

        :return: The g of this DrawingAttributesPatternColor.
        :rtype: float
        """
        return self._g

    @g.setter
    def g(self, g):
        """Sets the g of this DrawingAttributesPatternColor.

        The green component of the color

        :param g: The g of this DrawingAttributesPatternColor.
        :type g: float
        """

        self._g = g

    @property
    def r(self):
        """Gets the r of this DrawingAttributesPatternColor.

        The red component of the color

        :return: The r of this DrawingAttributesPatternColor.
        :rtype: float
        """
        return self._r

    @r.setter
    def r(self, r):
        """Sets the r of this DrawingAttributesPatternColor.

        The red component of the color

        :param r: The r of this DrawingAttributesPatternColor.
        :type r: float
        """

        self._r = r
