/*
 * Ink Recognizer Client
 * The service is used to perform ink layout and recognition of written words and shapes. Ink strokes passed to the service are recognized and organized into recognition results in the response
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AlternatePatternInner;
import org.openapitools.client.model.CategoryPattern;
import org.openapitools.client.model.ClassPattern;
import org.openapitools.client.model.PointDetailsPattern;
import org.openapitools.client.model.RecognitionUnitInnerBoundingRectangle;
import org.openapitools.client.model.ShapePattern;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for RecognitionUnitInner
 */
public class RecognitionUnitInnerTest {
    private final RecognitionUnitInner model = new RecognitionUnitInner();

    /**
     * Model tests for RecognitionUnitInner
     */
    @Test
    public void testRecognitionUnitInner() {
        // TODO: test RecognitionUnitInner
    }

    /**
     * Test the property 'alternates'
     */
    @Test
    public void alternatesTest() {
        // TODO: test alternates
    }

    /**
     * Test the property 'boundingRectangle'
     */
    @Test
    public void boundingRectangleTest() {
        // TODO: test boundingRectangle
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'center'
     */
    @Test
    public void centerTest() {
        // TODO: test center
    }

    /**
     * Test the property 'childIds'
     */
    @Test
    public void childIdsTest() {
        // TODO: test childIds
    }

    /**
     * Test the property 'propertyClass'
     */
    @Test
    public void propertyClassTest() {
        // TODO: test propertyClass
    }

    /**
     * Test the property 'confidence'
     */
    @Test
    public void confidenceTest() {
        // TODO: test confidence
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'parentId'
     */
    @Test
    public void parentIdTest() {
        // TODO: test parentId
    }

    /**
     * Test the property 'points'
     */
    @Test
    public void pointsTest() {
        // TODO: test points
    }

    /**
     * Test the property 'recognizedObject'
     */
    @Test
    public void recognizedObjectTest() {
        // TODO: test recognizedObject
    }

    /**
     * Test the property 'recognizedText'
     */
    @Test
    public void recognizedTextTest() {
        // TODO: test recognizedText
    }

    /**
     * Test the property 'rotatedBoundingRectangle'
     */
    @Test
    public void rotatedBoundingRectangleTest() {
        // TODO: test rotatedBoundingRectangle
    }

    /**
     * Test the property 'rotationAngle'
     */
    @Test
    public void rotationAngleTest() {
        // TODO: test rotationAngle
    }

    /**
     * Test the property 'strokeIds'
     */
    @Test
    public void strokeIdsTest() {
        // TODO: test strokeIds
    }

}
