/*
 * Ink Recognizer Client
 * The service is used to perform ink layout and recognition of written words and shapes. Ink strokes passed to the service are recognized and organized into recognition results in the response
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for InkPoint
 */
public class InkPointTest {
    private final InkPoint model = new InkPoint();

    /**
     * Model tests for InkPoint
     */
    @Test
    public void testInkPoint() {
        // TODO: test InkPoint
    }

    /**
     * Test the property 'barrelPressure'
     */
    @Test
    public void barrelPressureTest() {
        // TODO: test barrelPressure
    }

    /**
     * Test the property 'barrelSwitch'
     */
    @Test
    public void barrelSwitchTest() {
        // TODO: test barrelSwitch
    }

    /**
     * Test the property 'eraser'
     */
    @Test
    public void eraserTest() {
        // TODO: test eraser
    }

    /**
     * Test the property 'height'
     */
    @Test
    public void heightTest() {
        // TODO: test height
    }

    /**
     * Test the property 'inverted'
     */
    @Test
    public void invertedTest() {
        // TODO: test inverted
    }

    /**
     * Test the property 'secondaryTip'
     */
    @Test
    public void secondaryTipTest() {
        // TODO: test secondaryTip
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'tipPressure'
     */
    @Test
    public void tipPressureTest() {
        // TODO: test tipPressure
    }

    /**
     * Test the property 'tipSwitch'
     */
    @Test
    public void tipSwitchTest() {
        // TODO: test tipSwitch
    }

    /**
     * Test the property 'width'
     */
    @Test
    public void widthTest() {
        // TODO: test width
    }

    /**
     * Test the property 'x'
     */
    @Test
    public void xTest() {
        // TODO: test x
    }

    /**
     * Test the property 'xTilt'
     */
    @Test
    public void xTiltTest() {
        // TODO: test xTilt
    }

    /**
     * Test the property 'y'
     */
    @Test
    public void yTest() {
        // TODO: test y
    }

    /**
     * Test the property 'yTilt'
     */
    @Test
    public void yTiltTest() {
        // TODO: test yTilt
    }

    /**
     * Test the property 'z'
     */
    @Test
    public void zTest() {
        // TODO: test z
    }

}
