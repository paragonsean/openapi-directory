/**
 * Ink Recognizer Client
 * The service is used to perform ink layout and recognition of written words and shapes. Ink strokes passed to the service are recognized and organized into recognition results in the response
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InkRecognizerClient);
  }
}(this, function(expect, InkRecognizerClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InkRecognizerClient.AnalysisResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AnalysisResponse', function() {
    it('should create an instance of AnalysisResponse', function() {
      // uncomment below and update the code to test AnalysisResponse
      //var instance = new InkRecognizerClient.AnalysisResponse();
      //expect(instance).to.be.a(InkRecognizerClient.AnalysisResponse);
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new InkRecognizerClient.AnalysisResponse();
      //expect(instance).to.be();
    });

    it('should have the property recognitionUnits (base name: "recognitionUnits")', function() {
      // uncomment below and update the code to test the property recognitionUnits
      //var instance = new InkRecognizerClient.AnalysisResponse();
      //expect(instance).to.be();
    });

    it('should have the property unit (base name: "unit")', function() {
      // uncomment below and update the code to test the property unit
      //var instance = new InkRecognizerClient.AnalysisResponse();
      //expect(instance).to.be();
    });

    it('should have the property unitMultiple (base name: "unitMultiple")', function() {
      // uncomment below and update the code to test the property unitMultiple
      //var instance = new InkRecognizerClient.AnalysisResponse();
      //expect(instance).to.be();
    });

  });

}));
